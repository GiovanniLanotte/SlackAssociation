url issues,url_api comment,url_html comment,user create comment,body,created_at,updated_at
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2056,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/479086993,https://github.com/hyperledger/sawtooth-core/pull/2056#issuecomment-479086993,ltseeley,"Open questions about this PR:
1. When checking for the presence of PoET settings to determine if PoET is the engine to fall back to, what settings should be checked?
2. @vaporos suggested that the genesis CLI tool should fail when the consensus settings aren't set; however, this requires knowledge of the settings TP, specifically its payload protobuf. Does that make sense to have in the genesis tool? Also, since the validator currently checks for these settings when creating the genesis block, is this necessary?
3. This PR currently updates the consensus proxy to call a method on the chain controller to update the active consensus engine; this removes the duplication of that code since it previously existed in both components. However, it probably makes more sense for this code to exist in the proxy and have the chain controller call the consensus proxy (could put consensus notification behind the proxy as well). Any thoughts on this?",2019-04-02 16:42:13,2019-04-02 17:55:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2048,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475746691,https://github.com/hyperledger/sawtooth-core/pull/2048#issuecomment-475746691,ltseeley,"This is a bug fix that affects the delivery of consensus messages; without this fix, a time to live value of 1 would prevent consensus messages from being sent to the consensus engine.",2019-03-22 19:12:57,2019-03-22 19:12:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2044,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/473056393,https://github.com/hyperledger/sawtooth-core/pull/2044#issuecomment-473056393,desktophero,":cry: 

```
FAILED: User 'desktophero' not whitelisted.
```",2019-03-14 20:50:04,2019-03-14 20:50:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2044,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/473058425,https://github.com/hyperledger/sawtooth-core/pull/2044#issuecomment-473058425,jsmitchell,"> 😢
> 
> ```
> FAILED: User 'desktophero' not whitelisted.
> ```

I just kicked off the job for you.",2019-03-14 20:55:32,2019-03-14 20:55:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2044,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/473058751,https://github.com/hyperledger/sawtooth-core/pull/2044#issuecomment-473058751,rberg2,I have added you to the whitelist,2019-03-14 20:56:20,2019-03-14 20:56:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2044,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/473294850,https://github.com/hyperledger/sawtooth-core/pull/2044#issuecomment-473294850,agunde406,I think this PR will need to be rebased to pick up some fixes to handle combining the python sdk with signing.,2019-03-15 13:55:09,2019-03-15 18:26:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2044,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/473411597,https://github.com/hyperledger/sawtooth-core/pull/2044#issuecomment-473411597,desktophero,I've borked my local branch - was working through the `exit code 100` locally and mishandled the local repo. Closing this with a new PR that's up to date.,2019-03-15 19:20:59,2019-03-15 19:20:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2042,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/472194637,https://github.com/hyperledger/sawtooth-core/pull/2042#issuecomment-472194637,rberg2,Unfortunately this change is not working in my environment so I can't test it.,2019-03-12 21:48:19,2019-03-12 21:48:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2042,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475737354,https://github.com/hyperledger/sawtooth-core/pull/2042#issuecomment-475737354,rberg2,"Being unable to test this change, I am going to close this PR.",2019-03-22 18:45:09,2019-03-22 18:45:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2041,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/472057724,https://github.com/hyperledger/sawtooth-core/pull/2041#issuecomment-472057724,emedina,Forgot DCO,2019-03-12 15:49:02,2019-03-12 15:49:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2040,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/471667537,https://github.com/hyperledger/sawtooth-core/pull/2040#issuecomment-471667537,rbuysse,"The PoET repo hasn't been updated to bionic yet due to some incompatibilities with sawtooth-core master. This is preventing us from publishing nightly docker images for the shell, which is blocking the sabre bionic upgrade PR. https://github.com/hyperledger/sawtooth-sabre/pull/34",2019-03-11 18:37:23,2019-03-11 18:37:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2039,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/471011702,https://github.com/hyperledger/sawtooth-core/pull/2039#issuecomment-471011702,danintel,"**Background notes**
The nightly documentation was updated with the new consensus engine settings on 2018-10-10 with this push, part of PR #1916 :
https://github.com/hyperledger/sawtooth-core/commit/6a1d3bf2653a3660ec4b016b75e94a789f89dbed#diff-cd6bf86169fbdf3de3325c36e1640deb

Some, *but not all*, of these changes were backported to the 1-1 latest docs with this push on 2019-10-23 with this push, from PR #2009:
https://github.com/hyperledger/sawtooth-core/commit/f4649ccb3ba6bab4055be06334811912d2a8fd73#diff-65a6136e31afa8b3258bb88c56f6dd40
That is, these two files were updated:
`docs/source/sysadmin_guide/creating_genesis_block.rst`
`docs/source/sysadmin_guide/setting_allowed_txns.rst`

However, three files were *not* backported:
`docs/source/app_developers_guide/creating_sawtooth_network.rst`
`docs/source/architecture/journal.rst`
`docs/source/sysadmin_guide/configure_sgx.rst`

This PR completes the backport by updating these three missing files.",2019-03-08 17:35:12,2019-03-08 18:04:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2039,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/471011963,https://github.com/hyperledger/sawtooth-core/pull/2039#issuecomment-471011963,danintel,"This PR was motivated by a plea on Rocket.Chat on 2019-03-08 that the documentation ""simply doesn't work"":

>  Daniele 35 6:03 AM
> Hello, I'm a newbie in sawtooth. I started with the basic example, with single validator node, experimenting with the ""tuna"" demo (for example) but now I would like to work with a ""real"" blockchain network or at least, let's say, a multi-node network to run with docker-compose on my laptop. I followed the instruction on the official site:
> https://sawtooth.hyperledger.org/docs/core/releases/latest/app_developers_guide/creating_sawtooth_network.html#about-the-sawtooth-network-environment
> but there's a problem with the provided docker-compose yaml.... it simply doesn't work: you can start the network and see the nodes exchanging peers information and register one to each other, even exchanging a first block, but few seconds afterwards all nodes were disconnecting from the ""validator-0"" (with log messages like ""Removed send_message function for connection..."" for each node). So the network is not working (tried intkey processor for example).
> Any Idea about the reason? The docker-compose yaml I used is the official one:
> https://sawtooth.hyperledger.org/docs/core/releases/latest/app_developers_guide/sawtooth-default-poet.yaml
> Does anyone have a working example of a real multi-node network with PoET consensus? I couldn't find anything...
> > ",2019-03-08 17:36:06,2019-03-08 17:36:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2039,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475284197,https://github.com/hyperledger/sawtooth-core/pull/2039#issuecomment-475284197,danintel,Please review. It's a backport of missing documentation corrections.,2019-03-21 15:44:17,2019-03-21 15:44:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2037,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/473964526,https://github.com/hyperledger/sawtooth-core/pull/2037#issuecomment-473964526,ltseeley,@jsmitchell @arsulegai please see my responses to your respective comments and re-review.,2019-03-18 15:37:38,2019-03-18 15:37:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2036,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/470618676,https://github.com/hyperledger/sawtooth-core/pull/2036#issuecomment-470618676,peterschwarz,"Dropped formatting commit, as rust format is pinned on 1-1",2019-03-07 17:27:50,2019-03-07 17:27:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2036,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/470654133,https://github.com/hyperledger/sawtooth-core/pull/2036#issuecomment-470654133,peterschwarz,"It is true that this error occurring would indicate a bug in a consensus implementation.  Ultimately, the change helps to prevent the now-outside consensus process from crashing the validator.",2019-03-07 19:07:37,2019-03-07 19:07:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2036,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/470667179,https://github.com/hyperledger/sawtooth-core/pull/2036#issuecomment-470667179,peterschwarz,"This code has been radically re-written in master, so the same situation does not apply there.",2019-03-07 19:45:45,2019-03-07 19:45:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2035,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/470155134,https://github.com/hyperledger/sawtooth-core/pull/2035#issuecomment-470155134,scealiontach,"FYI, while it is not the only reason for this pull obviously, it was in part inspired by the CVE scans mentioned in another pull.  grafana/grafana:6.0.0 starts out much better but there is still one high risk CVE in this image.  Since this image is based on stretch, there isn't a fix for it currently available.

CVE-2017-14062          libidn11-1.33-1                            High              None                   [https://security-tracker.debian.org/tracker/CVE-2017-14062](https://security-tracker.debian.org/tracker/CVE-2017-14062)
",2019-03-06 15:38:52,2019-03-06 15:38:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2031,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/467465592,https://github.com/hyperledger/sawtooth-core/pull/2031#issuecomment-467465592,scealiontach,"[grafana.scan.prefix.txt](https://github.com/hyperledger/sawtooth-core/files/2906010/grafana.scan.prefix.txt)
Above, scan before fix

[grafana.scan.postfix.txt](https://github.com/hyperledger/sawtooth-core/files/2906011/grafana.scan.postfix.txt)
Above, scan post fix",2019-02-26 14:46:00,2019-02-26 14:46:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2031,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/467676505,https://github.com/hyperledger/sawtooth-core/pull/2031#issuecomment-467676505,vaporos,"There is an explicit recommendation here - https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ -- which says ""Avoid RUN apt-get upgrade"".",2019-02-27 00:47:22,2019-02-27 00:47:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2031,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/467899047,https://github.com/hyperledger/sawtooth-core/pull/2031#issuecomment-467899047,scealiontach,"The reason for that best practice is generally either building in unprivileged containers - not an issue here, or immutability/cacheability. On the immutability score, completely addressing it would require locking down the versions any installed packages.  In this case that's just curl, and the packages affected by the CVEs.  Happy to do that, agreed?",2019-02-27 15:10:50,2019-02-27 15:14:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2031,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/467943465,https://github.com/hyperledger/sawtooth-core/pull/2031#issuecomment-467943465,scealiontach,"[grafana.locked.versions.txt](https://github.com/hyperledger/sawtooth-core/files/2911400/grafana.locked.versions.txt)
Scan after locking versions",2019-02-27 16:59:07,2019-02-27 16:59:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2031,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/468023506,https://github.com/hyperledger/sawtooth-core/pull/2031#issuecomment-468023506,scealiontach,"> I feel like to correct course of action would be to update the version of Grafana we pull in and address any issues we find with the dashboards.

Upgrading the grafana would be widening the scope beyond what was initially identified.  personally I would rather that be a different pull request.",2019-02-27 20:46:23,2019-02-27 20:46:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2031,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/468392989,https://github.com/hyperledger/sawtooth-core/pull/2031#issuecomment-468392989,vaporos,Shouldn't this be fixed upstream? Is the problem stale locally cached images?,2019-02-28 18:55:17,2019-02-28 18:55:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2031,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/468732958,https://github.com/hyperledger/sawtooth-core/pull/2031#issuecomment-468732958,danintel,"At least one build error appears related to this:
`Unnecessary ""elif"" after ""raise"" (no-else-raise)`
PR #2034 https://github.com/hyperledger/sawtooth-core/pull/2034",2019-03-01 16:54:09,2019-03-01 16:54:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2028,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/467090421,https://github.com/hyperledger/sawtooth-core/pull/2028#issuecomment-467090421,agunde406,Looks like you have some lint to take care of,2019-02-25 16:59:36,2019-02-25 16:59:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2027,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/467120650,https://github.com/hyperledger/sawtooth-core/pull/2027#issuecomment-467120650,nickylimjj,I'm getting tripped up by the pylint error `E0110: Abstract class 'PrivateKey' with abstract methods instantiated (abstract-class-instantiated)`. Thoughts?,2019-02-25 18:20:48,2019-02-25 18:20:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2027,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/467550673,https://github.com/hyperledger/sawtooth-core/pull/2027#issuecomment-467550673,delventhalz,"@vaporos What would you say is the use case for the current algorithm-agnostic factory pattern if it has no functionality for loading existing private keys? I have yet to personally encounter a case where I _only_ needed new private keys. Which means I have never personally used the factory. My goal with this story was to make the factory usable.

What if as an alternative to `from_bytes`, there was a `from_existing` method? The format of the existing private key would be algorithm specific. Perhaps it could include a second optional `format` parameter, allowing algorithms to support multiple formats if needed.",2019-02-26 18:14:09,2019-02-26 18:15:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2027,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475742344,https://github.com/hyperledger/sawtooth-core/pull/2027#issuecomment-475742344,peterschwarz,Closing this due to the signing library has been moved to https://github.com/hyperledger/sawtooth-sdk-python.,2019-03-22 18:59:33,2019-03-22 18:59:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2025,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/467185190,https://github.com/hyperledger/sawtooth-core/pull/2025#issuecomment-467185190,danintel,"See also Grafana support added to Raft PR #542 
https://github.com/hyperledger/sawtooth-raft/pull/54",2019-02-25 21:12:46,2019-02-25 21:12:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2022,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/463281289,https://github.com/hyperledger/sawtooth-core/pull/2022#issuecomment-463281289,peterschwarz,"Thanks for the submission!. Make sure that you've signed your commit.  The easiest way to do this right now is to run `git commit -s --amend`, and then force-push the branch again.",2019-02-13 17:03:45,2019-02-13 17:04:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2022,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/463282045,https://github.com/hyperledger/sawtooth-core/pull/2022#issuecomment-463282045,peterschwarz,"While you're amending the commit, also update the message to follow the git commit message guide we have in the contributor's guide: https://chris.beams.io/posts/git-commit/#seven-rules",2019-02-13 17:05:48,2019-02-13 17:06:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2022,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/463417992,https://github.com/hyperledger/sawtooth-core/pull/2022#issuecomment-463417992,ruffsl,How about now?,2019-02-13 23:26:52,2019-02-13 23:26:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2019,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/466082438,https://github.com/hyperledger/sawtooth-core/pull/2019#issuecomment-466082438,ltseeley,"> Should we go farther and make consensus messages their own thing instead of a type of gossip message? I can see pros and cons, so I'm asking the question rather than taking a position.

This is a good question. On the one hand there are advantages to handling consensus messages separately from blocks/batches (can give consensus messages priority, can determine broadcasting rules independently) since they do serve a different purpose. But on the other hand, they are related in that they're both impacted by the shape of the network. I don't know that I have a strong enough opinion yet.",2019-02-21 17:08:03,2019-02-21 17:08:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2016,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/461494262,https://github.com/hyperledger/sawtooth-core/pull/2016#issuecomment-461494262,boydjohnson,"Closing this in favor of turning off the error, as in 1-1.",2019-02-07 16:19:20,2019-02-07 16:19:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2014,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/472190235,https://github.com/hyperledger/sawtooth-core/pull/2014#issuecomment-472190235,peterschwarz,Closing this PR due to above comment.,2019-03-12 21:34:02,2019-03-12 21:34:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/457347094,https://github.com/hyperledger/sawtooth-core/pull/2012#issuecomment-457347094,danintel,"FYI, I tested these steps on Ubuntu Bionic 18.04.1 LTS,  Sawtooth nightly 1.2.1.dev366.

```
$ sawtooth settings list
[2019-01-24 12:15:12.982 INFO     helpers] GET /state?address=000000 HTTP/1.1: 200 status, 1287 size, in 0.028207 s
sawtooth.consensus.algorithm.name: Devmode
sawtooth.consensus.algorithm.version: 0.1
sawtooth.settings.vote.authorized_keys: 0363a5584bd8e617e79dce964c52cc5c8a506b0...
monroe tmp $ lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 18.04.1 LTS
Release:        18.04
Codename:       bionic
monroe tmp $ sawtooth -V
sawtooth-cli (Hyperledger Sawtooth) version 1.2.1.dev366
```

The nightly Ubuntu installation instructions in error is ""Step 3"" here:
https://sawtooth.hyperledger.org/docs/core/nightly/master/app_developers_guide/ubuntu.html",2019-01-24 20:37:07,2019-01-24 20:41:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459436172,https://github.com/hyperledger/sawtooth-core/pull/2012#issuecomment-459436172,TheAsset25,"I'm also having issues with the updated commands of ""sudo -u sawtooth"" ... when I try ""sudo -u sawtooth sawset genesis -k /etc/sawtooth/keys/validator.priv"" i get the response ""Error: Unable to write to batch file: [Errno 13] Permission denied: 'config-genesis.batch'"" (this is the same for any command with the updated 'sudo -u sawtooth') ... i have to run 'sudo sawset ...' to get the above commands to run correctly. When I follow through with all of this it DOES seem to set the consensus protocol and version, but my validator is still not responding to successful POSTs to the REST API. At a bit of a loss on what to try. I also tried making sure the validator.toml is setup.",2019-01-31 17:39:47,2019-01-31 17:41:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459462823,https://github.com/hyperledger/sawtooth-core/pull/2012#issuecomment-459462823,danintel,"FYI, the workaround for the ""Unable to write to batch file"" error is to be in a directory writable by user `sawtooth`.  For example: `cd /tmp`",2019-01-31 18:55:56,2019-01-31 18:55:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459499752,https://github.com/hyperledger/sawtooth-core/pull/2012#issuecomment-459499752,TheAsset25,"> FYI, the workaround for the ""Unable to write to batch file"" error is to be in a directory writable by user `sawtooth`. For example: `cd /tmp`

thank you! ",2019-01-31 20:45:04,2019-01-31 20:45:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459540347,https://github.com/hyperledger/sawtooth-core/pull/2012#issuecomment-459540347,danintel,"From the feedback above, I made two changes:
1. Switched Steps 3 and 4 (as the old Step 3 depended on the key generated in the old Step 4)
2. Added `cd /tmp` to avoid `permission denied` (EPERM) errors (note that the EPERM errors is frequently mentioned among new Sawtooth installers and is worth avoiding to ease installation)",2019-01-31 23:02:08,2019-01-31 23:12:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459544175,https://github.com/hyperledger/sawtooth-core/pull/2012#issuecomment-459544175,danintel,"@TheAsset25  Regarding

> When I follow through with all of this it DOES seem to set the consensus protocol and version, but my validator is still not responding to successful POSTs to the REST API. At a bit of a loss on what to try. I also tried making sure the validator.toml is setup.

The other important step, with Sawtooth 1.1 and 1.2, is to start the consensus engine, preferably after starting `sawtooth-validator`. For the example documented here, start the Devmode consensus engine as follows:
`sudo -u sawtooth devmode-engine-rust -vv --connect tcp://localhost:5050`

The `--connect ...` option is required as the default in some Sawtooth 1.1 versions is incorrect (TCP port 5005 instead of the correct consensus engine port, 5050)",2019-01-31 23:18:08,2019-01-31 23:18:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/460826365,https://github.com/hyperledger/sawtooth-core/pull/2012#issuecomment-460826365,danintel,Rebased and forced push to see if CI has been fixed recently.,2019-02-05 22:18:42,2019-02-05 22:28:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/460828584,https://github.com/hyperledger/sawtooth-core/pull/2012#issuecomment-460828584,peterschwarz,There are several PR's that need to be merged to fix CI. ,2019-02-05 22:25:38,2019-02-05 22:25:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/462830810,https://github.com/hyperledger/sawtooth-core/pull/2012#issuecomment-462830810,danintel,"CI is now finally working again. Could this trivial doc change, with the missing installation instructions, be approved and merged? Thanks!",2019-02-12 16:31:19,2019-02-12 16:31:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2005,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456917854,https://github.com/hyperledger/sawtooth-core/pull/2005#issuecomment-456917854,danintel,"This PR is a backport to 1.1 of an important documentation fix to the installation instructions.
The changes are identical to the original PR (made to the nightly 1.2 gate) is here:
https://github.com/hyperledger/sawtooth-core/pull/1997",2019-01-23 18:39:48,2019-01-23 18:39:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2005,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/457379672,https://github.com/hyperledger/sawtooth-core/pull/2005#issuecomment-457379672,peterschwarz,"This needs to be rebased on the 1-1 branch, to pickup a fix to the doc builds.",2019-01-24 22:18:46,2019-01-24 22:18:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2005,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/457381805,https://github.com/hyperledger/sawtooth-core/pull/2005#issuecomment-457381805,chenette,"@danintel Specifically, this PR needs the fix in #2003. 
",2019-01-24 22:26:03,2019-01-24 22:26:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2005,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/457390760,https://github.com/hyperledger/sawtooth-core/pull/2005#issuecomment-457390760,danintel,Rebased.,2019-01-24 22:59:59,2019-01-25 16:35:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2002,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456128903,https://github.com/hyperledger/sawtooth-core/pull/2002#issuecomment-456128903,peterschwarz,Do we have a link to the security report?,2019-01-21 16:22:31,2019-01-21 16:22:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2002,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456139283,https://github.com/hyperledger/sawtooth-core/pull/2002#issuecomment-456139283,ConnorChristie,"Would it be okay if the kubernetes deployment bound the instance to 0.0.0.0 by default instead of changing the application default? I specifically ran into this issue when using Kubernetes, trying to expose the port over a load balancer",2019-01-21 16:55:37,2019-01-21 16:55:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2002,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456166879,https://github.com/hyperledger/sawtooth-core/pull/2002#issuecomment-456166879,rberg2,In Kubernetes I run the rest-api list this: `sawtooth-rest-api -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008` then I control access to that api endpoint by using a containerPort. If you wish to expose the rest-api to the world you should follow the [Guide](https://sawtooth.hyperledger.org/docs/core/releases/latest/sysadmin_guide/rest_auth_proxy.html) that outline how to put an authenticating web server with SSL in front of the API endpoint.,2019-01-21 18:42:42,2019-01-21 18:42:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2002,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456168030,https://github.com/hyperledger/sawtooth-core/pull/2002#issuecomment-456168030,ConnorChristie,"That's what I ended up doing but initially I had no clue why I wasn't able to connect through to port 8008 and only 4004 (4004 is bound to 0.0.0.0 by default). That document doesn't have anything about binding to 0.0.0.0 instead of localhost, does it?",2019-01-21 18:47:40,2019-01-21 18:47:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2002,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456168743,https://github.com/hyperledger/sawtooth-core/pull/2002#issuecomment-456168743,rberg2,The doc outlines how you would have the rest-api listen on 127.0.0.1 and a webserver listen externally in a secure way that you will not get if you put the rest-api directly on an external network interface.,2019-01-21 18:50:35,2019-01-21 18:50:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2002,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/458678106,https://github.com/hyperledger/sawtooth-core/pull/2002#issuecomment-458678106,danintel,"I agree about binding to localhost (127.0.0.1) instead of all (0.0.0.0). It can easily be configured in `/etc/sawtooth/validator.toml`  or `rest-api.toml` or the `sawtooth-rest-api` and `sawtooth-validator` command line options.

I didn't see it mentioned in the Sawtooth Security Audit Report though:
https://wiki.hyperledger.org/_media/security/technical_report_linux_foundation_hyperledger_december_2017_v1.0.pdf",2019-01-29 19:38:50,2019-01-29 19:38:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2002,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/462802477,https://github.com/hyperledger/sawtooth-core/pull/2002#issuecomment-462802477,peterschwarz,This PR should probably be closed,2019-02-12 15:24:56,2019-02-12 15:24:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2001,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/455381800,https://github.com/hyperledger/sawtooth-core/pull/2001#issuecomment-455381800,peterschwarz,"Added a commit

> The SetLoggerError only occurs if `set_logger` has been called more than once.  This can occur due to the current rust-python-rust nature of the Sawtooth validator, but may be safely ignored.
>
> A warning message will be logged in this case, in order to provide notice while it continues to be an issue in some installations.",2019-01-18 00:23:58,2019-01-18 00:23:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2001,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456127665,https://github.com/hyperledger/sawtooth-core/pull/2001#issuecomment-456127665,peterschwarz,Added a commit to fix rust lint,2019-01-21 16:18:29,2019-01-21 16:18:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2001,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456138608,https://github.com/hyperledger/sawtooth-core/pull/2001#issuecomment-456138608,peterschwarz,Added a commit to fix the doc issues,2019-01-21 16:53:27,2019-01-21 16:53:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2000,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/454976369,https://github.com/hyperledger/sawtooth-core/pull/2000#issuecomment-454976369,vaporos,"Let's avoid JIRA numbers in the git summary line. If you must reference JIRA, put it on the bottom of the commit message as ""Resolves: JIRA 1478"".


",2019-01-16 22:57:38,2019-01-16 22:57:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2000,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/455033887,https://github.com/hyperledger/sawtooth-core/pull/2000#issuecomment-455033887,arsulegai,"> Let's avoid JIRA numbers in the git summary line. If you must reference JIRA, put it on the bottom of the commit message as ""Resolves: JIRA 1478"".

Ok",2019-01-17 03:56:53,2019-01-17 03:56:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1999,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456212638,https://github.com/hyperledger/sawtooth-core/pull/1999#issuecomment-456212638,vaporos,This needs to be rebased.,2019-01-21 22:16:39,2019-01-21 22:16:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1998,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/453665358,https://github.com/hyperledger/sawtooth-core/pull/1998#issuecomment-453665358,peterschwarz,I don't have any theories yet.  I think the ref's and unrefs need to be mapped out in such a way that we can follow the different threads that make these changes.  What's likely is that a component is unref'ing a block that didn't grab a reference in the first place or unref'ed twice.,2019-01-11 21:39:28,2019-01-11 21:39:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1998,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/454130956,https://github.com/hyperledger/sawtooth-core/pull/1998#issuecomment-454130956,peterschwarz,"Dropped the removal of the `panic` and updated to improve the panic message.  I decided that the panic change wan't the right thing to do, as it is a symptom of another problem.",2019-01-14 19:29:10,2019-01-14 19:29:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1997,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/453594598,https://github.com/hyperledger/sawtooth-core/pull/1997#issuecomment-453594598,danintel,Did a `git push -f` to see if CI builds are working now.,2019-01-11 17:30:29,2019-01-11 17:30:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1997,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/454480458,https://github.com/hyperledger/sawtooth-core/pull/1997#issuecomment-454480458,chenette,"@danintel - The build is failing because there's an RST syntax error on line 443. The `=====...=` line needs another `=` because  ""Step 9"" changed to ""Step 10"".

`/project/sawtooth-core/docs/source/app_developers_guide/ubuntu.rst:443: WARNING: Title underline too short.`

`Step 10: Use Sawtooth Commands as a Client`
`=========================================`",2019-01-15 17:33:49,2019-01-15 17:33:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1997,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/454483972,https://github.com/hyperledger/sawtooth-core/pull/1997#issuecomment-454483972,danintel,"Chenette,
Thanks!--I fixed it. I couldn't find the error but now I found the proper click sequence to drill down to it.",2019-01-15 17:44:01,2019-01-15 17:44:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/454977063,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-454977063,vaporos,I'd much prefer referencing the RFC within the git message body and not git summary line.,2019-01-16 23:00:25,2019-01-16 23:00:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456259904,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-456259904,arsulegai,@peterschwarz I moved rust SDK commit to hyperledger/sawtooth-sdk-rust#4,2019-01-22 03:32:40,2019-01-22 03:32:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459415722,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459415722,vaporos,"It would be good to have some sort of test that both RAW and EXPANDED continue to work, since we are likely to otherwise use one more frequently than the other. Should we switch one of the existing TPs to use this new approach? (That could be done in a different PR or this PR if it was one that uses the Python SDK.)",2019-01-31 16:44:20,2019-01-31 16:45:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459418404,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459418404,vaporos,"This should probably impact the version we send in TpRegisterRequest. If RAW is set, we want the earlier versions of the validator to reject the transaction processor's request, and the mechanism for accomplishing that is the version field.",2019-01-31 16:51:06,2019-01-31 16:51:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459658669,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459658669,arsulegai,"> The current implementation, when RAW is set, will also set the expanded fields. I think it should only set the RAW field and mandate that the SDK unpack it to get the other fields, so that we aren't sending twice the number of bytes across.

Couple of specific reasons for not clearing TransactionHeader field when raw header is requested:
1. With current code in validator, it is always required to unpack transaction header at validator end even though only raw header is requested by TP. I agree that by clearing the TransactionHeader field there'll be less information exchanged across interface.
2. RFC talked about getting transaction header bytes in addition to expanded TransactionHeader, for the purpose of verifying signature. If only raw header is sent, there's overhead of unpacking all the time. It's trade off between sending extra bytes over network vs de-serializing one more time.

Request your views on these two topics.",2019-02-01 09:21:52,2019-02-01 09:21:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459673014,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459673014,arsulegai,"> It would be good to have some sort of test that both RAW and EXPANDED continue to work, since we are likely to otherwise use one more frequently than the other. Should we switch one of the existing TPs to use this new approach? (That could be done in a different PR or this PR if it was one that uses the Python SDK.)

Agree that EXPANDED header will be used more often than RAW header bytes. I prefer writing TP to test this feature on cxx sdk, currently the SGX TEE has support for it and not Python it'll also become sanity test as well. However I am open for recommendation, please suggest what would be better here.",2019-02-01 10:12:44,2019-02-01 10:12:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459682865,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459682865,arsulegai,"> This should probably impact the version we send in TpRegisterRequest. If RAW is set, we want the earlier versions of the validator to reject the transaction processor's request, and the mechanism for accomplishing that is the version field.

The version field in TpRegisterRequest is carrying information about transaction family and not validator's version. Currently there's no match done from TP against the validator version while registering. I understand your intent to reject the registration if TP requests for raw header but validator is incapable of serving it.

Protobuf's generally avoid these kind of version match mechanism in my opinion. In the case you mentioned where validator is incapable of serving raw_header to TP, validator's generated protobuf would just ignore the extra field contents passed in ""request_header_style"" and backward compatibility is maintained.

This is common issue we face for all messages, IMO TP developer/deployer should assert in TP based on response from validator. Do you recommend introducing another variable here and sending a TP SDK version to validator as part of all messages?",2019-02-01 10:48:02,2019-02-01 10:48:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459837257,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459837257,vaporos,"> > It would be good to have some sort of test that both RAW and EXPANDED continue to work, since we are likely to otherwise use one more frequently than the other. Should we switch one of the existing TPs to use this new approach? (That could be done in a different PR or this PR if it was one that uses the Python SDK.)
> 
> Agree that EXPANDED header will be used more often than RAW header bytes. I prefer writing TP to test this feature on cxx sdk, currently the SGX TEE has support for it and not Python it'll also become sanity test as well. However I am open for recommendation, please suggest what would be better here.

Rust probably makes the most sense moving forward. We shouldn't couple the validator testing with the CXX SDK, but its probably already coupled to the Rust SDK. Not sure why this would be SGX TEE related since the tests don't require SGX.",2019-02-01 19:20:38,2019-02-01 19:20:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459838999,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459838999,vaporos,"> > The current implementation, when RAW is set, will also set the expanded fields. I think it should only set the RAW field and mandate that the SDK unpack it to get the other fields, so that we aren't sending twice the number of bytes across.
> 
> Couple of specific reasons for not clearing TransactionHeader field when raw header is requested:
> 
>     1. With current code in validator, it is always required to unpack transaction header at validator end even though only raw header is requested by TP. I agree that by clearing the TransactionHeader field there'll be less information exchanged across interface.
> 
>     2. RFC talked about getting transaction header bytes in addition to expanded TransactionHeader, for the purpose of verifying signature. If only raw header is sent, there's overhead of unpacking all the time. It's trade off between sending extra bytes over network vs de-serializing one more time.
> 
> 
> Request your views on these two topics.

For (1): I don't think the necessity to unpack it means we should send the individual fields across the wire to the TP.

For (2): This is probably a flaw with the RFC, because I doubt any of us think sending duplicate data across to the TP is a good idea. I do not believe it would be a significant performance penalty to deserialize the RAW bytes on the TP side; it is probably mitigated by needing to unpack less. In any case, I think this is important because if we send both for RAW, we can't change that later because the SDK would expect that behavior in RAW mode.",2019-02-01 19:26:13,2019-02-01 19:26:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459842385,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459842385,vaporos,"> > This should probably impact the version we send in TpRegisterRequest. If RAW is set, we want the earlier versions of the validator to reject the transaction processor's request, and the mechanism for accomplishing that is the version field.
> 
> The version field in TpRegisterRequest is carrying information about transaction family and not validator's version. Currently there's no match done from TP against the validator version while registering. I understand your intent to reject the registration if TP requests for raw header but validator is incapable of serving it.
> 
> Protobuf's generally avoid these kind of version match mechanism in my opinion. In the case you mentioned where validator is incapable of serving raw_header to TP, validator's generated protobuf would just ignore the extra field contents passed in ""request_header_style"" and backward compatibility is maintained.
> 
> This is common issue we face for all messages, IMO TP developer/deployer should assert in TP based on response from validator. Do you recommend introducing another variable here and sending a TP SDK version to validator as part of all messages?

You are correct - I was thinking of 'protocol_version' which we added into PeerRegisterRequest.

The problem though isn't solved simply with how protobuf fields work - an old validator, upon getting a request to operate in a ""higher protocol version"" should just shut down the connection with an error (or at least reject the registration). If we move forward without that, then the behavior will be for the TP to request RAW, and the validator to ignore it and still send back non-RAW processing requests, which then the TP has to handle as a special case with an InternalError (which is problematic) on each processing request.",2019-02-01 19:37:41,2019-02-01 19:37:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459940406,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459940406,arsulegai,"> > > It would be good to have some sort of test that both RAW and EXPANDED continue to work, since we are likely to otherwise use one more frequently than the other. Should we switch one of the existing TPs to use this new approach? (That could be done in a different PR or this PR if it was one that uses the Python SDK.)
> > 
> > 
> > Agree that EXPANDED header will be used more often than RAW header bytes. I prefer writing TP to test this feature on cxx sdk, currently the SGX TEE has support for it and not Python it'll also become sanity test as well. However I am open for recommendation, please suggest what would be better here.
> 
> Rust probably makes the most sense moving forward. We shouldn't couple the validator testing with the CXX SDK, but its probably already coupled to the Rust SDK. Not sure why this would be SGX TEE related since the tests don't require SGX.

Ok, I will modify intkey application in Rust SDK.",2019-02-02 06:33:38,2019-02-02 06:33:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459940649,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459940649,arsulegai,"> > > The current implementation, when RAW is set, will also set the expanded fields. I think it should only set the RAW field and mandate that the SDK unpack it to get the other fields, so that we aren't sending twice the number of bytes across.
> > 
> > 
> > Couple of specific reasons for not clearing TransactionHeader field when raw header is requested:
> > ```
> > 1. With current code in validator, it is always required to unpack transaction header at validator end even though only raw header is requested by TP. I agree that by clearing the TransactionHeader field there'll be less information exchanged across interface.
> > 
> > 2. RFC talked about getting transaction header bytes in addition to expanded TransactionHeader, for the purpose of verifying signature. If only raw header is sent, there's overhead of unpacking all the time. It's trade off between sending extra bytes over network vs de-serializing one more time.
> > ```
> > Request your views on these two topics.
> 
> For (1): I don't think the necessity to unpack it means we should send the individual fields across the wire to the TP.
> 
> For (2): This is probably a flaw with the RFC, because I doubt any of us think sending duplicate data across to the TP is a good idea. I do not believe it would be a significant performance penalty to deserialize the RAW bytes on the TP side; it is probably mitigated by needing to unpack less. In any case, I think this is important because if we send both for RAW, we can't change that later because the SDK would expect that behavior in RAW mode.

Ok, I will clear out EXPANDED header contents in case RAW header bytes are requested.",2019-02-02 06:38:37,2019-02-02 06:38:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/459942346,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-459942346,arsulegai,"> > > This should probably impact the version we send in TpRegisterRequest. If RAW is set, we want the earlier versions of the validator to reject the transaction processor's request, and the mechanism for accomplishing that is the version field.
> > 
> > 
> > The version field in TpRegisterRequest is carrying information about transaction family and not validator's version. Currently there's no match done from TP against the validator version while registering. I understand your intent to reject the registration if TP requests for raw header but validator is incapable of serving it.
> > Protobuf's generally avoid these kind of version match mechanism in my opinion. In the case you mentioned where validator is incapable of serving raw_header to TP, validator's generated protobuf would just ignore the extra field contents passed in ""request_header_style"" and backward compatibility is maintained.
> > This is common issue we face for all messages, IMO TP developer/deployer should assert in TP based on response from validator. Do you recommend introducing another variable here and sending a TP SDK version to validator as part of all messages?
> 
> You are correct - I was thinking of 'protocol_version' which we added into PeerRegisterRequest.
> 
> The problem though isn't solved simply with how protobuf fields work - an old validator, upon getting a request to operate in a ""higher protocol version"" should just shut down the connection with an error (or at least reject the registration). If we move forward without that, then the behavior will be for the TP to request RAW, and the validator to ignore it and still send back non-RAW processing requests, which then the TP has to handle as a special case with an InternalError (which is problematic) on each processing request.

I've bundled validator's proto changes with the code changes to handle the request. So we have either complete feature picked up or none of it picked up in a validator build.

Let me divide this into 2 parts

1. Old validator with new SDK:
Case A: Old validator simply ignores new fields set by SDK in its request, so the responsibility shifts to SDK and this is a problematic scenario we are concerned about. Having a new version field in TpRegisterRequest will not help because old validator code will anyway ignore new params in proto file. I can think of introducing a field in TpRegisterResponse. Idea is that SDK would wait for TpRegisterResponse and if validator doesn't send expected value filled up in this field SDK should unregister TP, with a error log printed.
Case B: To make applications with new SDK without need of this feature still continue to function as expected, we can have additional check that expect TpRegisterResponse special field only when TpRegisterRequest needs it (I am open for comments on Case B, in long term it becomes difficult to maintain such behavior).

2. New validator with old SDK:
Scenario is handled by validator, that it considers requested header style as EXPANDED.",2019-02-02 07:07:36,2019-02-02 07:07:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/467862166,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-467862166,arsulegai,@peterschwarz @vaporos addressed all review comments.,2019-02-27 13:30:29,2019-02-27 13:30:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475734127,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-475734127,agunde406,This has merge conflicts. Please rebase. ,2019-03-22 18:35:35,2019-03-22 18:35:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475734369,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-475734369,peterschwarz,The changes made against the Python SDK will need to be resubmitted as a PR against https://github.com/hyperledger/sawtooth-sdk-python,2019-03-22 18:36:16,2019-03-22 18:36:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1995,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/478337000,https://github.com/hyperledger/sawtooth-core/pull/1995#issuecomment-478337000,arsulegai,@agunde406 @peterschwarz PR is rebased. Raised a PR for Python SDK changes. Link for SDK changes updated in the PR comment.,2019-03-31 12:22:09,2019-03-31 12:22:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1994,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/454162784,https://github.com/hyperledger/sawtooth-core/pull/1994#issuecomment-454162784,peterschwarz,@transparent-mitch Looks like you have some lint errors in the code: You need to run `cargo fmt` on your changes.,2019-01-14 21:11:19,2019-01-14 21:11:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1994,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/454201611,https://github.com/hyperledger/sawtooth-core/pull/1994#issuecomment-454201611,peterschwarz,"You should just squash that fix lint errors commit, since you are fixing an error introduced by the first commit.",2019-01-14 23:20:33,2019-01-14 23:20:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1994,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/454498890,https://github.com/hyperledger/sawtooth-core/pull/1994#issuecomment-454498890,boydjohnson,"@transparent-mitch Thanks for your work on this! 

This looks like this ties `cancel_block` to `summarize_block`, since the invalid batches are added in summarize_block. I would wonder if that would mean it would be required to call summarize block, when cancelling a block. ",2019-01-15 18:27:27,2019-01-15 18:27:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1994,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/456175261,https://github.com/hyperledger/sawtooth-core/pull/1994#issuecomment-456175261,jsmitchell,"> More discussion is needed about how summarize_block and cancel block need to be called.

@boydjohnson @peterschwarz This seems like as good a place as any to have that discussion.",2019-01-21 19:17:14,2019-01-21 19:17:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1994,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/457089089,https://github.com/hyperledger/sawtooth-core/pull/1994#issuecomment-457089089,arsulegai,"@transparent-mitch this is a good start, however it works for the cases where validator would build the block. Let's also consider the cases where validator would not start building block, in Raft for example follower validator nodes don't build unless they get to be leader.",2019-01-24 07:01:07,2019-01-24 07:01:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1994,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/457286333,https://github.com/hyperledger/sawtooth-core/pull/1994#issuecomment-457286333,transparent-mitch,"@arsulegai When else would you check if a txn is valid? Are you suggesting the batches get sent to the TP before they are added to the block?

We've actually tried modifying Raft to have the followers build blocks as well, just to purge the invalid batches as quickly as possible. Seems to work for now. That just could be left up to the consensus designer's discretion... in which case it might make sense to just have a `purge_invalid_txns` service instead of including it in `cancel_block`.",2019-01-24 17:34:42,2019-01-24 17:34:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1994,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/457291636,https://github.com/hyperledger/sawtooth-core/pull/1994#issuecomment-457291636,arsulegai,"Call to build block from consensus engine for the purpose of purging invalid transactions seems workaround for me. There's scope of writing RFC and have elaborate discussion for solution. As you mentioned having a purge service is still better option than tying purge operation with cancel_block.

In addition to it improvisations can be applied such that this service will purge only those invalid transactions which are complete (i.e. all dependencies are available), ready to be scheduled, but it never got added to any block recently (i.e. ``X`` number of blocks were published but this transaction was never included in them).

Given that we may explore and end up having more better ideas with RFC.",2019-01-24 17:49:55,2019-01-24 17:52:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1994,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/463293881,https://github.com/hyperledger/sawtooth-core/pull/1994#issuecomment-463293881,danintel,This might fix https://jira.hyperledger.org/browse/STL-1477,2019-02-13 17:38:42,2019-02-13 17:38:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1991,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/454051872,https://github.com/hyperledger/sawtooth-core/pull/1991#issuecomment-454051872,mberkau,"I've pulled the pull request because the errors seem to be linked to an issue with my test environment. I created a new test environment and the original/unaltered files work fine. I do still intermittently get the asyncio error noted above, even in a new clean environment, so I'm leaving STL-1474 open.",2019-01-14 15:46:57,2019-01-14 15:46:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1974,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/461083475,https://github.com/hyperledger/sawtooth-core/pull/1974#issuecomment-461083475,arsulegai,"I rebased this commit by resolving conflicting file, but now its caught in lint check fail which even other PRs are suffering from.",2019-02-06 16:15:39,2019-02-06 16:15:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1974,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/463962904,https://github.com/hyperledger/sawtooth-core/pull/1974#issuecomment-463962904,arsulegai,"> Can you drop the change to .gitignore this path is no longer in the master branch.

Done",2019-02-15 09:11:13,2019-02-15 09:11:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1974,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/466866140,https://github.com/hyperledger/sawtooth-core/pull/1974#issuecomment-466866140,arsulegai,"@rbuysse  I confirmed from documentation, it's suggested to use latest version of docker client and docker-compose tools. Because it's possible to configure docker client for latest versions of docker client I removed passing env files from compose files. However because of the gnupg issue for accessing keyserver, we still need that part of code in dockerfiles.",2019-02-25 04:14:03,2019-02-25 04:14:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1974,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475734819,https://github.com/hyperledger/sawtooth-core/pull/1974#issuecomment-475734819,vaporos,There are conflicts which must be resolved in this PR.,2019-03-22 18:37:41,2019-03-22 18:37:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1974,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/476245785,https://github.com/hyperledger/sawtooth-core/pull/1974#issuecomment-476245785,danintel,"Here is the fix I used for Bionic builds on sawtooth-seth,
https://github.com/hyperledger/sawtooth-seth/pull/95/files

Basically I use curl to avoid proxy problems with `apt-get adv`, which calls `gpg` and has deprecated proxy settings using `http_proxy` and `https_proxy` **and** has depracated setting it with the command line option `--keyserver-options http-proxy=` or `--keyserver-options https-proxy=`

So I install `curl` then use `curl` to access the key (through `HTTP_PROXY`):

`apt-get update && apt-get install curl -y`
`curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x8AA7AF1F1091A5FD' | apt-key add -`

Edit: These lines:
```
if [ ! -z $HTTP_PROXY ] && [ -z $http_proxy ]; then \
   http_proxy=$HTTP_PROXY; \
 fi; \ 
```
are no longer required by `apt-key`, so remove them. For `npm config set proxy` and `git config` use `$HTTP_PROXY` or `$HTTPS_PROXY`
",2019-03-25 15:22:57,2019-03-28 17:14:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1974,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/477002525,https://github.com/hyperledger/sawtooth-core/pull/1974#issuecomment-477002525,arsulegai,Suggestion from @danintel seems to be elegant. @vaporos @rbuysse @rberg2 any comments? Are we fine with such approach?,2019-03-27 06:48:05,2019-03-27 06:49:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1974,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/477281270,https://github.com/hyperledger/sawtooth-core/pull/1974#issuecomment-477281270,danintel,"My understanding is Bitwise has no way to test this and they want a succinct, uniform way to handle proxies in Dockerfiles. So if you agree with my approach of installing and using `curl`, please use it and resubmit the PR.

If you have further improvements or changes to how I do it, let me know.",2019-03-27 17:58:14,2019-03-27 17:58:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1974,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/477492851,https://github.com/hyperledger/sawtooth-core/pull/1974#issuecomment-477492851,arsulegai,"> My understanding is Bitwise has no way to test this and they want a succinct, uniform way to handle proxies in Dockerfiles. So if you agree with my approach of installing and using `curl`, please use it and resubmit the PR.
> 
> If you have further improvements or changes to how I do it, let me know.

My concern is that this will again be big change in dockerfiles. So wanted an agreement, finalize the solution and then fix to this solution.",2019-03-28 08:13:52,2019-03-28 08:13:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1972,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/447112625,https://github.com/hyperledger/sawtooth-core/pull/1972#issuecomment-447112625,chenette,"@jsmitchell I pushed a fixup commit with changes for ""Consensus"" and ""Dev mode"". Please re-review and let me know if any more tweaks are necessary.",2018-12-13 20:38:48,2018-12-13 20:38:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1968,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/445298600,https://github.com/hyperledger/sawtooth-core/pull/1968#issuecomment-445298600,agunde406,Closing because rustfmt has been pinned  in 1-1 to a previous version and does not need these updates,2018-12-07 17:05:47,2018-12-07 17:05:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1966,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/446640395,https://github.com/hyperledger/sawtooth-core/pull/1966#issuecomment-446640395,agunde406,This pr needs to be rebased on master to pick some rust lint changes. rustfmt has updated to version  stable 1.0,2018-12-12 16:01:22,2018-12-12 16:01:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1966,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/446650162,https://github.com/hyperledger/sawtooth-core/pull/1966#issuecomment-446650162,arsulegai,Rebased commit on top of latest master,2018-12-12 16:26:36,2018-12-12 16:26:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1965,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/445069656,https://github.com/hyperledger/sawtooth-core/pull/1965#issuecomment-445069656,rbuysse,"```
$ docker run -it --rm sawtooth-block-info-tp:latest bash
root@3ac3d9c06b30:/# dpkg -I /tmp/python3-sawtooth-block-info_1.1.3-dev15-dirty-1_all.deb 
 new debian package, version 2.0.
 size 31020 bytes: control archive=2059 bytes.
     408 bytes,    11 lines      control              
    4710 bytes,    43 lines      md5sums              
     177 bytes,     9 lines   *  postinst             #!/bin/sh
     427 bytes,    12 lines   *  prerm                #!/bin/sh
 Package: python3-sawtooth-block-info
 Source: sawtooth-block-info
 Version: 1.1.3-dev15-dirty-1
 Architecture: all
 Maintainer: unknown <unknown@unknown>
 Installed-Size: 437
 Depends: python3-colorlog, python3-protobuf, python3:any (>= 3.3.2-2~), python3-sawtooth-sdk
 Section: python
 Priority: optional
 Homepage: https://github.com/hyperledger/sawtooth-core
 Description: Sawtooth Block Info Transaction Processor



$ docker run -it --rm sawtooth-identity-tp:latest bash
root@0e70e56dce1b:/# dpkg -I /tmp/python3-sawtooth-identity_1.1.3-dev15-dirty-1_all.deb 
 new debian package, version 2.0.
 size 31190 bytes: control archive=2057 bytes.
      70 bytes,     2 lines      conffiles            
     402 bytes,    11 lines      control              
    4436 bytes,    41 lines      md5sums              
     175 bytes,     9 lines   *  postinst             #!/bin/sh
     423 bytes,    12 lines   *  prerm                #!/bin/sh
 Package: python3-sawtooth-identity
 Source: sawtooth-identity
 Version: 1.1.3-dev15-dirty-1
 Architecture: all
 Maintainer: unknown <unknown@unknown>
 Installed-Size: 434
 Depends: python3-colorlog, python3-protobuf, python3:any (>= 3.3.2-2~), python3-sawtooth-sdk
 Section: python
 Priority: optional
 Homepage: https://github.com/hyperledger/sawtooth-core
 Description: Sawtooth Identity Transaction Processor
```",2018-12-06 23:36:01,2018-12-06 23:36:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1965,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/445332335,https://github.com/hyperledger/sawtooth-core/pull/1965#issuecomment-445332335,rbuysse,Master PR: https://github.com/hyperledger/sawtooth-core/pull/1969,2018-12-07 19:02:25,2018-12-07 19:02:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1949,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475747037,https://github.com/hyperledger/sawtooth-core/pull/1949#issuecomment-475747037,peterschwarz,Closing in favor of #2051 ,2019-03-22 19:14:11,2019-03-22 19:14:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1948,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/438812658,https://github.com/hyperledger/sawtooth-core/pull/1948#issuecomment-438812658,rbuysse,"The version in validator's Cargo.toml must match the version that the repository is tagged, otherwise the validator build will fail. 

Validator is an exception in this regard because it runs setup.py after the Cargo.toml version has been modified. ",2018-11-14 20:48:04,2018-11-14 20:48:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1931,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/435475335,https://github.com/hyperledger/sawtooth-core/pull/1931#issuecomment-435475335,knkski,"@aludvik: I checked usages of `get_blocks` in Poet, PBFT and Raft. I could not find any usages in Raft, but every usage that I could find of `get_blocks` in Poet and PBFT could be replaced by usage of `get_block_by_id`. That means we could minimize overall complexity by adding a bit of complexity here.",2018-11-02 18:53:25,2018-11-02 18:53:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1926,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/437395676,https://github.com/hyperledger/sawtooth-core/pull/1926#issuecomment-437395676,knkski,@boydjohnson: Updated to remove lint. @RyanLassigBanks would probably be the person to ask about why/if we need `bin/identity-tp-deb`.,2018-11-09 15:32:50,2018-11-09 15:32:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1924,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/434013871,https://github.com/hyperledger/sawtooth-core/pull/1924#issuecomment-434013871,aludvik,"This PR is based on #1921. New commits are:
76045cc Stabilize p2p messaging API",2018-10-29 17:56:12,2018-10-29 20:56:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1924,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/434076803,https://github.com/hyperledger/sawtooth-core/pull/1924#issuecomment-434076803,aludvik,"Updated to include changes to Python SDK, which I missed somehow first time around.",2018-10-29 20:57:03,2018-10-29 20:57:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1924,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/434498573,https://github.com/hyperledger/sawtooth-core/pull/1924#issuecomment-434498573,aludvik,Since I was only looking at commits that touched validator/ sdk/ or signing/ I missed the commits that actually _turned on the devmode tests_. Also added a commit to actually test that message signing and verification works.,2018-10-30 22:51:19,2018-10-30 22:51:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1924,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/434499521,https://github.com/hyperledger/sawtooth-core/pull/1924#issuecomment-434499521,aludvik,Tested locally against sawtooth-pbft liveness test.,2018-10-30 22:54:59,2018-10-30 22:54:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1921,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/434013344,https://github.com/hyperledger/sawtooth-core/pull/1921#issuecomment-434013344,aludvik,"This PR is based on #1918. New commits are:
bd9c9f037 Send missed BlockNew msgs to consensus on startup
d8eb2e4d4 Implement protobuf to native type conversions
c7d89b0f5 Implement method for returning uncommitted blocks
adc559433 Add block_iter() method to BlockCache
4ec003768 Move PyIteratorWrapper to shared ffi module",2018-10-29 17:54:54,2018-10-29 17:54:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1919,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/435047200,https://github.com/hyperledger/sawtooth-core/pull/1919#issuecomment-435047200,agunde406,@arsulegai Looks like this needs to be rebased to get some rust formatting fixes. ,2018-11-01 13:52:31,2018-11-01 13:52:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1919,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/435106140,https://github.com/hyperledger/sawtooth-core/pull/1919#issuecomment-435106140,arsulegai,"> @arsulegai Looks like this needs to be rebased to get some rust formatting fixes.

Done",2018-11-01 16:49:56,2018-11-01 16:49:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1918,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/433477343,https://github.com/hyperledger/sawtooth-core/pull/1918#issuecomment-433477343,aludvik,Fixed a missing argument in a unit test.,2018-10-26 17:05:37,2018-10-26 17:05:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1918,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/434080122,https://github.com/hyperledger/sawtooth-core/pull/1918#issuecomment-434080122,aludvik,Recommend closing this and merging https://github.com/hyperledger/sawtooth-core/pull/1921 to avoid the need to rebase and rebuild on Jenkins.,2018-10-29 21:06:26,2018-10-29 21:06:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1918,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/434347295,https://github.com/hyperledger/sawtooth-core/pull/1918#issuecomment-434347295,aludvik,#1921 is built on this PR so going to close this and merge #1921 to avoid rebuilding on Jenkins,2018-10-30 15:28:07,2018-10-30 15:28:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1917,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/433627425,https://github.com/hyperledger/sawtooth-core/pull/1917#issuecomment-433627425,dcmiddle,"I've added a comment to the jira asking how we can have fossology ignore the false positives noted in the review comments. https://jira.hyperledger.org/browse/STL-398
",2018-10-27 14:54:20,2018-10-27 14:54:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1917,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475731411,https://github.com/hyperledger/sawtooth-core/pull/1917#issuecomment-475731411,vaporos,This PR needs to be rebased and the conflicts resolved. There are also a lot of comments that haven't been addressed as well. Could this PR be reduced to the pieces that are not contentious so that we can get the bulk of it merged in?,2019-03-22 18:27:48,2019-03-22 18:27:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1916,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/437414132,https://github.com/hyperledger/sawtooth-core/pull/1916#issuecomment-437414132,boydjohnson,Do we have plans for an integration test for this behavior. I think this is a good solution. It would be nice to test it.,2018-11-09 16:27:59,2018-11-09 16:27:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1916,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/437418792,https://github.com/hyperledger/sawtooth-core/pull/1916#issuecomment-437418792,ltseeley,"An integration test would be very nice to have; we don't have one in the works just yet, but it's something to think about for the future. We don't know for sure yet how/if swapping consensus engines truly works, so that's probably something we'll have to explore then.",2018-11-09 16:42:20,2018-11-09 16:42:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1915,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/433443077,https://github.com/hyperledger/sawtooth-core/pull/1915#issuecomment-433443077,boydjohnson,@rberg2 I approved it but just found a problem. The devmode k8s yaml file doesn't include the devmode engine. https://github.com/hyperledger/sawtooth-core/blob/master/integration/sawtooth_integration/docker/test_devmode_engine_liveness.yaml#L70 Here is an example of use of the devmode engine.,2018-10-26 15:15:24,2018-10-26 15:15:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1914,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/432778683,https://github.com/hyperledger/sawtooth-core/pull/1914#issuecomment-432778683,boydjohnson,@aludvik Could you talk about the layers of Python and Rust here? Which Python class is in the Python layer?,2018-10-24 18:38:09,2018-10-24 18:38:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1914,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/432822821,https://github.com/hyperledger/sawtooth-core/pull/1914#issuecomment-432822821,aludvik,"@boydjohnson The interconnect service and consensus registry remain in Python and are here: https://github.com/hyperledger/sawtooth-core/pull/1914/files#diff-207e424b4836caed42eb1019a97f0dc9R31

This is wrapped by an implementation of the `NotifierService` trait: https://github.com/hyperledger/sawtooth-core/pull/1914/files#diff-5f253ff9fce18b79628534b75a9d3ea2R50

And this trait impl extends anything that is a `NotifierService` to also be a `ConsensusNotifier`. This is all to make it easier to swap out the Python service/registry later.

Finally, there is an FFI interface for those methods that still need to be called from Python: https://github.com/hyperledger/sawtooth-core/pull/1914/files#diff-bda47befe07894f4242429c11ef39015R137",2018-10-24 20:49:31,2018-10-24 20:49:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1914,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/433555942,https://github.com/hyperledger/sawtooth-core/pull/1914#issuecomment-433555942,aludvik,Rebased on bionic upgrade,2018-10-26 22:05:58,2018-10-26 22:05:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1914,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/434358487,https://github.com/hyperledger/sawtooth-core/pull/1914#issuecomment-434358487,aludvik,Rebased on lint fixes in master,2018-10-30 15:54:54,2018-10-30 15:54:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1913,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/431861331,https://github.com/hyperledger/sawtooth-core/pull/1913#issuecomment-431861331,arsulegai,@dcmiddle @chenette  Please review and suggest edits,2018-10-22 15:02:15,2018-10-22 15:03:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1913,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/433986864,https://github.com/hyperledger/sawtooth-core/pull/1913#issuecomment-433986864,arsulegai,"Corrected lexer part, thanks.",2018-10-29 16:48:17,2018-10-29 16:48:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1913,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/437115310,https://github.com/hyperledger/sawtooth-core/pull/1913#issuecomment-437115310,arsulegai,I guess rebase is required here to make the build pass.,2018-11-08 18:56:35,2018-11-08 18:56:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1913,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/446996325,https://github.com/hyperledger/sawtooth-core/pull/1913#issuecomment-446996325,arsulegai,Commits are rebased and build passed.,2018-12-13 14:54:10,2018-12-13 14:54:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1911,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/431884494,https://github.com/hyperledger/sawtooth-core/pull/1911#issuecomment-431884494,vaporos,"Small typo in the commit message ""Inteky""",2018-10-22 16:19:16,2018-10-22 16:19:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1911,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/431889011,https://github.com/hyperledger/sawtooth-core/pull/1911#issuecomment-431889011,arsulegai,"Corrected, thanks",2018-10-22 16:32:55,2018-10-22 16:32:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1904,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/431428339,https://github.com/hyperledger/sawtooth-core/pull/1904#issuecomment-431428339,aludvik,"Added a commit to rename the new module from `crypto` to `hashlib` so that it is clearer we are *not* depending on the rust-crypto crate, which also imports as `crypto`.",2018-10-19 16:54:08,2018-10-19 16:54:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1903,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/430763194,https://github.com/hyperledger/sawtooth-core/pull/1903#issuecomment-430763194,aludvik,PRs should be opened against https://github.com/hyperledger/sawtooth-raft and https://github.com/hyperledger/sawtooth-pbft to make this change before this is merged.,2018-10-17 19:46:11,2018-10-17 19:46:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1903,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/431023384,https://github.com/hyperledger/sawtooth-core/pull/1903#issuecomment-431023384,knkski,@aludvik: https://github.com/hyperledger/sawtooth-pbft/pull/8 and https://github.com/hyperledger/sawtooth-raft/pull/42,2018-10-18 14:09:00,2018-10-18 14:09:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1901,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/430620654,https://github.com/hyperledger/sawtooth-core/pull/1901#issuecomment-430620654,dcmiddle,@vaporos I think we want this for backport to 1-1.,2018-10-17 13:07:33,2018-10-17 13:07:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1898,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/429423902,https://github.com/hyperledger/sawtooth-core/pull/1898#issuecomment-429423902,knkski,"@boydjohnson: Good point - I went with `with-serde` because I couldn't figure out a way to have `protobuf` actually generate serde code without a feature named that enabled (just having `protobuf = { version = ""2"", features = [""with-serde""] }` didn't seem to do it). This PR doesn't introduce serde for any protobuf objects yet, but it's possible that we would. Is it worth keeping the name as-is for future compatibility with protobuf, and/or digging deeper to see if it can be done without the `with-` prefix?",2018-10-12 18:49:15,2018-10-12 18:49:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1898,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/429957226,https://github.com/hyperledger/sawtooth-core/pull/1898#issuecomment-429957226,boydjohnson,"From talking with @knkski offline, it appears that we have to name our feature ""with-serde"", because protobuf's optional feature ""with-serde"".",2018-10-15 18:10:57,2018-10-15 18:11:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1898,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/429962203,https://github.com/hyperledger/sawtooth-core/pull/1898#issuecomment-429962203,knkski,Closing in favor of #1899 ,2018-10-15 18:24:07,2018-10-15 18:24:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1897,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/429372200,https://github.com/hyperledger/sawtooth-core/pull/1897#issuecomment-429372200,boydjohnson,"Thanks, @arsulegai. Can you re-review?",2018-10-12 15:50:13,2018-10-12 15:50:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1890,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/428236737,https://github.com/hyperledger/sawtooth-core/pull/1890#issuecomment-428236737,aludvik,Needs more work to stop the network latency from blocking core components,2018-10-09 15:25:06,2018-10-09 15:25:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1889,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/427091659,https://github.com/hyperledger/sawtooth-core/pull/1889#issuecomment-427091659,aludvik,"@ltseeley re conversation in rocket chat with @vaporos, this PR should be backported to 1.1 after it is merged, as it is important to the proper functioning of leader-based BFT algorithms.",2018-10-04 16:52:24,2018-10-04 16:52:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1882,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/425229362,https://github.com/hyperledger/sawtooth-core/pull/1882#issuecomment-425229362,chenette,Reviewers: I added a second commit that updates the bind setting with the new consensus endpoint.,2018-09-27 20:20:30,2018-09-27 20:20:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1881,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/425211671,https://github.com/hyperledger/sawtooth-core/pull/1881#issuecomment-425211671,chenette,Closing PR because it is a duplicate of PR #1882 (which has a corrected branch name).,2018-09-27 19:18:09,2018-09-27 19:18:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1872,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/424134475,https://github.com/hyperledger/sawtooth-core/pull/1872#issuecomment-424134475,aludvik,I think you can also remove the `cc` build dependency from Cargo.toml,2018-09-24 21:38:10,2018-09-24 21:38:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1871,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/424429050,https://github.com/hyperledger/sawtooth-core/pull/1871#issuecomment-424429050,chenette,Closing this PR because it's a duplicate of #1868.,2018-09-25 17:21:04,2018-09-25 17:21:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1868,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/424168697,https://github.com/hyperledger/sawtooth-core/pull/1868#issuecomment-424168697,chenette,"Reviewers: I pushed several fixup commits that make the changes from @aludvik and fix a few other minor issues that I noticed.  The corrections are in these commits: 

- Expand + procedurize Start Sawtooth Services topic  …  343d023                                                                            
- Add new Create Genesis Block procedure for non-SGX process  …  4394853
- Add parent proc for Sawtooth with PoET simulator  …  6c96bd1",2018-09-25 00:32:35,2018-09-25 00:32:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1867,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/423320704,https://github.com/hyperledger/sawtooth-core/pull/1867#issuecomment-423320704,dcmiddle,"Is there a way to peg rustfmt?
I grepped around for fmt in the docker files and I don't see where this is in the build process.",2018-09-20 20:24:02,2018-09-20 20:24:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1867,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/423662323,https://github.com/hyperledger/sawtooth-core/pull/1867#issuecomment-423662323,boydjohnson,"https://github.com/hyperledger/sawtooth-core/blob/1-1/docker/lint This is the dockerfile that controls the linting dependencies. I think the toolchain could get pegged to solve this problem. @dcmiddle , is that your preference?",2018-09-21 20:32:26,2018-09-21 20:32:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1867,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/424034470,https://github.com/hyperledger/sawtooth-core/pull/1867#issuecomment-424034470,dcmiddle,"Since there's a memory leak fix dependent on newer rust, I'm onboard with merging this set of linting changes. In a subsequent 1-1 PR let's consider pegging our toolchain for this release. I believe that's what we did with 1.0 to avoid spurious build failures as tooling updates.",2018-09-24 16:18:14,2018-09-24 16:18:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1866,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/423327952,https://github.com/hyperledger/sawtooth-core/pull/1866#issuecomment-423327952,aludvik,"This change only affects the validator's behavior when the engine restarts. When this happens, the validator will send updates for all blocks it has in memory that are not on the current chain. It sends the block in the order that the engine expects to receive them. From the engines perspective, these blocks will appear to have just arrived at the validator. You are correct that this is an unbounded number of blocks.

If the validator restarts, all the in memory blocks will be lost and so there will be no blocks to send to the engine (other than chain head and any new blocks that arrive).",2018-09-20 20:48:25,2018-09-20 20:48:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1864,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/422939827,https://github.com/hyperledger/sawtooth-core/pull/1864#issuecomment-422939827,aludvik,The FFI for this is actually broken and needs to be fixed.,2018-09-19 20:04:42,2018-09-19 20:04:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1864,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/422961568,https://github.com/hyperledger/sawtooth-core/pull/1864#issuecomment-422961568,aludvik,New PR #1866 ,2018-09-19 21:16:49,2018-09-19 21:16:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1859,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/422864116,https://github.com/hyperledger/sawtooth-core/pull/1859#issuecomment-422864116,boydjohnson,Closing in favor of #1864 ,2018-09-19 16:14:08,2018-09-19 16:14:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1858,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/422067252,https://github.com/hyperledger/sawtooth-core/pull/1858#issuecomment-422067252,aludvik,Hello and thank you for the PR! Can you say a little more here and/or in your commit message about why we want to implement support for responding to router probes and more generally the patterns that require it? ,2018-09-17 15:42:51,2018-09-17 15:42:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1858,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/422154128,https://github.com/hyperledger/sawtooth-core/pull/1858#issuecomment-422154128,peterschwarz,"You also need to sign your commit.  Do a `git commit -s --amend`, update the commit message with more information, per @aludvik's request, and re-push your branch.",2018-09-17 20:12:39,2018-09-17 20:12:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1858,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/423513511,https://github.com/hyperledger/sawtooth-core/pull/1858#issuecomment-423513511,CarvalhoLeonardo,"Ah , I did put it on JIRA, follows the text:

Some topologies of ZeroMQ need a to use the ROUTER_PROBE flag to function properly, like [Majordomo](https://rfc.zeromq.org/spec:7/MDP/).

Basically, on the receiving handler a test is done against an empty message, and the sockets IDs propagate immediately .

This is used in topologies with ROUTER - ROUTER or ROUTER - DEALER endpoints, and the flag ZMQ_PROBE_ROUTER is set in the connecting socket.

",2018-09-21 12:24:16,2018-09-21 12:24:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1858,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/423513711,https://github.com/hyperledger/sawtooth-core/pull/1858#issuecomment-423513711,CarvalhoLeonardo,"The commit shows as signed for me here, isn't it right?",2018-09-21 12:25:09,2018-09-21 12:25:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1858,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/423583789,https://github.com/hyperledger/sawtooth-core/pull/1858#issuecomment-423583789,aludvik,"@CarvalhoLeonardo The DCO check requires that the commit message have ""Signed-off-by: Full Name <email@address.com>"" as the last line. It is separate/in addition to from the GPG signing.

Can you please also post a technical explanation of why we want to support TPs that connect to the validator with a ROUTER socket? I have seen some discussion in chat, but reproducing it here would be useful for reviewers. Specifically, why is the ROUTER-ROUTER pattern required and why is the ROUTER-DEALER model insufficient? With the Go SDK, I also used IPC to fan out within the TP, but I did (left to right from validator to worker thread) `ROUTER <-(tcp)-> DEALER <-(poll and switch) -> ROUTER <-(ipc)-> DEALER`. This is a good starting point to see what I mean in detail: https://github.com/hyperledger/sawtooth-sdk-go/blob/master/processor/processor.go#L162",2018-09-21 15:55:43,2018-09-21 15:55:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1858,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/423743537,https://github.com/hyperledger/sawtooth-core/pull/1858#issuecomment-423743537,CarvalhoLeonardo,"I've re-sent the commit, sorry about that.

So, my rationales, besides implementing a very useful flag on the protocol, are:
 - Turn easier to implement symmetrical topologies. The Java SDK has classes that can be used to implement clients or a validator without changing anything;
- Using ROUTER <-> ROUTER, the topology completely decouple the messages for any particular worker. I don't know Go, but seeing the code, there is a map to hold references to the worker and a correlation ID being worked on. With the internal fanning proposed in the Java SDK, that isn't necessary at all. That way, long lived actions wouldn't stop a thread, giving the code a real async processing. This [class](https://github.com/CarvalhoLeonardo/sawtooth-sdk-java/blob/aab00d6bf040db695ddd152cc1e6a2ddf66ea380/sdk-transaction-processor/src/main/java/sawtooth/sdk/reactive/tp/messaging/ReceivingHandler.java#L72) holds the interesting bit.
- This approach was taken from [Freelancer](https://rfc.zeromq.org/spec:10/FLP/) and [Majordomo](https://rfc.zeromq.org/spec:7/MDP/) protocols, that provides full async work, that I think is of interest to the project as a whole.

Hope this helps!
",2018-09-22 13:17:13,2018-09-22 18:05:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1858,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/439462353,https://github.com/hyperledger/sawtooth-core/pull/1858#issuecomment-439462353,dcmiddle,"@CarvalhoLeonardo Looks like DCO is failing. Maybe because of that last merge commit? You could rebase that out.
e.g.
git fetch upstream master #or whatever you call this remote to github/hyperledger
git rebase -i upstream/master
git push -f <yourfork> <thisbranch>",2018-11-16 17:13:38,2018-11-16 17:13:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1858,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/439853850,https://github.com/hyperledger/sawtooth-core/pull/1858#issuecomment-439853850,CarvalhoLeonardo,"> git fetch upstream master

Hm, now I understood why there weren't any Rust code...

Thanks.",2018-11-19 10:59:32,2018-11-19 10:59:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1857,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/421459540,https://github.com/hyperledger/sawtooth-core/pull/1857#issuecomment-421459540,aludvik,Rebased on master for formatting changes,2018-09-14 19:22:32,2018-09-14 19:22:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1857,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/421500660,https://github.com/hyperledger/sawtooth-core/pull/1857#issuecomment-421500660,aludvik,"Rebased on master, again, for block manager changes",2018-09-14 22:29:14,2018-09-14 22:29:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1857,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/422182550,https://github.com/hyperledger/sawtooth-core/pull/1857#issuecomment-422182550,aludvik,@boydjohnson updated,2018-09-17 21:46:05,2018-09-17 21:46:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1853,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/421180416,https://github.com/hyperledger/sawtooth-core/pull/1853#issuecomment-421180416,boydjohnson,"I conducted an 8 hour test where 2 validators were producing duplicate batches in their blocks. This .md file explains the results. No duplicate batches were included in the chain, but 2 blocks that did not have duplicates were found from these validators.


[DuplicatesValidation.txt](https://github.com/hyperledger/sawtooth-core/files/2381308/DuplicatesValidation.txt)
",2018-09-13 23:08:59,2018-09-13 23:08:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1852,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/421408834,https://github.com/hyperledger/sawtooth-core/pull/1852#issuecomment-421408834,dcmiddle,@vaporos ok with you? Think I need your thumbs up to merge to 1.1 branch.,2018-09-14 16:15:14,2018-09-14 16:15:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1851,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/419327993,https://github.com/hyperledger/sawtooth-core/pull/1851#issuecomment-419327993,chenette,"For an example of the problem, see:                                             
                                                                                
https://sawtooth.hyperledger.org/docs/core/nightly/master/search.html?q=registry&check_keywords=yes&area=default
                                                                                
https://sawtooth.hyperledger.org/docs/core/nightly/master/transaction_family_specifications/example_transaction_families.html?highlight=registry",2018-09-07 05:34:28,2018-09-07 05:34:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1850,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/421505102,https://github.com/hyperledger/sawtooth-core/pull/1850#issuecomment-421505102,chenette,"@aludvik - I pushed a fixup commit to restore ""PoET"" to the Validator Registry terms where I had removed it. I also added PoET to the terms that were formerly PoET-less. 

These terms are now consistent within this section.  Consistency for the rest of the doc set will require a separate PR.",2018-09-14 22:57:19,2018-09-14 22:57:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1849,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/418958482,https://github.com/hyperledger/sawtooth-core/pull/1849#issuecomment-418958482,chenette,"I tested the Docker and Kubernetes procedures, but cannot test the Ubuntu proc.  I hope a kind reviewer can help out with this test. My thanks in advance!",2018-09-06 04:10:04,2018-09-06 04:10:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1849,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/420819869,https://github.com/hyperledger/sawtooth-core/pull/1849#issuecomment-420819869,chenette,"I pushed a fixup commit to change the txn-config info as suggested by @aludvik. Please see the following steps in the Docker, Ubuntu, and K8s procedures:

Docker - Step 5: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1849/3/artifact/docs/build/html/app_developers_guide/creating_sawtooth_network.html#step-5-configure-the-allowed-transaction-processors-optional

Ubuntu - Step 5: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1849/3/artifact/docs/build/html/app_developers_guide/creating_sawtooth_network.html#configure-txn-procs-ubuntu-label

Kubernetes - Step 6: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1849/3/artifact/docs/build/html/app_developers_guide/creating_sawtooth_network.html#step-6-configure-the-allowed-transaction-processors-optional",2018-09-12 22:31:43,2018-09-12 22:36:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1846,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/419263169,https://github.com/hyperledger/sawtooth-core/pull/1846#issuecomment-419263169,chenette,Done. (I added more information to the commit messages.),2018-09-06 22:34:58,2018-09-06 22:34:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1842,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/418509963,https://github.com/hyperledger/sawtooth-core/pull/1842#issuecomment-418509963,chenette,"Reviewers:  The HTML images in the build artifacts appear to have font problems, but that's just a Jenkins build issue. Instead, please see the LaTeX (PDF) images in the build artifacts. 

- Single-node image for Docker / Ubuntu / AWS: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1842/2/artifact/docs/build/latex/appdev-environment-one-node-3TPs.pdf

- Single-node image for Kubernetes: 
https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1842/2/artifact/docs/build/latex/appdev-environment-one-node-3TPs-kube.pdf

- Multi-node image for Docker / AWS: 
https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1842/2/artifact/docs/build/latex/appdev-environment-multi-node.pdf

- Multi-node image for Ubuntu: 
https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1842/2/artifact/docs/build/latex/appdev-environment-two-nodes.pdf

- Multi-node image for Kubernetes: 
https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1842/2/artifact/docs/build/latex/appdev-environment-multi-node-kube.pdf",2018-09-04 20:38:54,2018-09-04 20:38:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1842,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/419237279,https://github.com/hyperledger/sawtooth-core/pull/1842#issuecomment-419237279,chenette,"I pushed a fix-up commit for typos in the alt image text (repeated words) in commit 47ca56ac5..., ""Fix alt image text for App Dev guide procedures"".",2018-09-06 20:51:59,2018-09-06 20:51:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1842,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/420056881,https://github.com/hyperledger/sawtooth-core/pull/1842#issuecomment-420056881,peterschwarz,Looks like the rename of the images is only partial: There still seems to be a 3TP-named image in there.,2018-09-10 20:52:27,2018-09-10 20:52:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1842,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/420394670,https://github.com/hyperledger/sawtooth-core/pull/1842#issuecomment-420394670,chenette,"> Looks like the rename of the images is only partial: There still seems to be a 3TP-named image in there.

This is correct. The remaining images with ""3TP"" are for the single-node environment. Only the multi-node image was renamed.",2018-09-11 19:30:00,2018-09-11 19:35:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1840,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/417518586,https://github.com/hyperledger/sawtooth-core/pull/1840#issuecomment-417518586,chenette,I do NOT want to merge 142 commits into master from my 1-0-staging-03 branch.  I was trying to merge 5 doc commits FROM master INTO 1-0-staging-03.  Closing this PR until I figure out what went wrong.,2018-08-31 01:18:56,2018-08-31 01:19:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1840,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/417518847,https://github.com/hyperledger/sawtooth-core/pull/1840#issuecomment-417518847,chenette,Closing PR because it's borked.,2018-08-31 01:20:18,2018-08-31 01:20:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1833,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/419208239,https://github.com/hyperledger/sawtooth-core/pull/1833#issuecomment-419208239,aludvik,Can you provide some explanation for what this is fixing?,2018-09-06 19:09:01,2018-09-06 19:09:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1833,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/419551006,https://github.com/hyperledger/sawtooth-core/pull/1833#issuecomment-419551006,rbuysse,"@aludvik Every time a rust package is built, it's versioned with the version number from the Cargo.toml file. This is undesirable. This PR modifies the installed Dockerfiles for the rust components so that packages are versioned with the output of bin/get_version, matching the rest of the packages.

Compare the packages here: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1833/1/artifact/build/debs/

```
python3-sawtooth-block-info_1.1.1~dev1314-1_all.deb
python3-sawtooth-cli_1.1.1~dev1314-1_all.deb
...
sawtooth-devmode-rust_1.1.1-dev1314_amd64.deb
sawtooth-intkey-workload_1.1.1-dev1314_amd64.deb
sawtooth-smallbank-workload_1.1.1-dev1314_amd64.deb
```

against current master:https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/master/lastSuccessfulBuild/artifact/build/debs/

```
python3-sawtooth-block-info_1.2.1~dev7-1_all.deb
python3-sawtooth-cli_1.2.1~dev7-1_all.deb
...
sawtooth-devmode-rust_0.1.0_amd64.deb
sawtooth-intkey-workload_0.1.0_amd64.deb
sawtooth-smallbank-workload_0.1.0_amd64.deb
```",2018-09-07 20:03:43,2018-09-07 20:07:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1832,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/416987729,https://github.com/hyperledger/sawtooth-core/pull/1832#issuecomment-416987729,boydjohnson,I am working right now on fixing more clippy lint in sawtooth-core that will become part of this PR.,2018-08-29 15:05:08,2018-08-29 15:05:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1830,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/415645244,https://github.com/hyperledger/sawtooth-core/pull/1830#issuecomment-415645244,chenette,"Reviewers: The diagram in the HTML build artifact might appear to have font problems, but that's a build-artifact-only issue. Please look at the PDF (LaTeX) image instead of the SVG (HTML) version.
https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1830/1/artifact/docs/build/latex/appdev-environment-multi-node-3TPs-kube.pdf",2018-08-24 04:08:47,2018-08-24 04:08:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1830,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/416768646,https://github.com/hyperledger/sawtooth-core/pull/1830#issuecomment-416768646,chenette,"I pushed a fixup commit to correct the typos that Richard found, plus a few minor formatting and wording issues.",2018-08-28 23:04:45,2018-08-28 23:04:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1826,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/439466905,https://github.com/hyperledger/sawtooth-core/pull/1826#issuecomment-439466905,knkski,@agunde406: Updated PR with those changes,2018-11-16 17:28:48,2018-11-16 17:28:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1826,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/439474145,https://github.com/hyperledger/sawtooth-core/pull/1826#issuecomment-439474145,knkski,@agunde406: Updated with those changes,2018-11-16 17:54:28,2018-11-16 17:54:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1822,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/414443631,https://github.com/hyperledger/sawtooth-core/pull/1822#issuecomment-414443631,chenette,"Reviewers:  The diagram in the HTML build artifact might appear to have font problems, but that's a build-artifact-only issue. Please look at the PDF (LaTeX) image instead of the SVG (HTML) version. 
https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1822/3/artifact/docs/build/latex/appdev-environment-one-node-3TPs-kube.pdf",2018-08-20 20:00:00,2018-08-23 18:46:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1822,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/414849384,https://github.com/hyperledger/sawtooth-core/pull/1822#issuecomment-414849384,chenette,"I pushed a fixup commit with @rberg2's suggested changes, plus an alignment tweak for the diagram.",2018-08-21 23:03:18,2018-08-21 23:03:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1822,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/415497563,https://github.com/hyperledger/sawtooth-core/pull/1822#issuecomment-415497563,chenette,"I pushed a fixup commit to fix the broken links. I also corrected a few other things, such as a typo, the name of the kubeconfig YAML file, and example prompts (made them consistent with the upcoming multi-node procedure).",2018-08-23 17:14:13,2018-08-23 17:14:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1822,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/415498570,https://github.com/hyperledger/sawtooth-core/pull/1822#issuecomment-415498570,chenette,"I can't link to the kubeconfig YAML file, because the file isn't there yet (it's being added in a separate PR).  When that PR has been merged, I'll add the link in the Kubernetes procedure.",2018-08-23 17:17:16,2018-08-23 17:17:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1822,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/416329843,https://github.com/hyperledger/sawtooth-core/pull/1822#issuecomment-416329843,chenette,Added a commit that links to the new Kubernetes YAML file (from PR #1830 ).,2018-08-27 18:53:25,2018-08-27 18:53:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1818,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/413872016,https://github.com/hyperledger/sawtooth-core/pull/1818#issuecomment-413872016,boydjohnson,I'm going to put this PR on hold until I prototype the BlockValidator in Rust using this BlockScheduler.,2018-08-17 13:49:40,2018-08-17 13:49:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1817,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/414212031,https://github.com/hyperledger/sawtooth-core/pull/1817#issuecomment-414212031,shresthichauhan,"Thank you so much for your review comments.

Please find actual result returned with this additional line. This is to demonstrate bug is resolved.

![after_fix_json_response_60](https://user-images.githubusercontent.com/35533098/44321970-abc26d00-a468-11e8-94d3-bc17a88cfd00.png)

As we know state head is block ID that is 128 character hex-strings. So fix will return JSON response with error code 60 for bad Head parameter. 

Sure will add a unit test case in this PR and will inform you about the same.",2018-08-20 06:37:51,2018-08-20 06:37:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1815,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/412152025,https://github.com/hyperledger/sawtooth-core/pull/1815#issuecomment-412152025,boydjohnson,I updated the signatures of the 2 validation functions that operate on `ids` to `Vec<String>`. I think this or `&[String]` would be correct.,2018-08-10 17:31:43,2018-08-10 17:31:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1813,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/412135790,https://github.com/hyperledger/sawtooth-core/pull/1813#issuecomment-412135790,peterschwarz,"The existing code works as expected, and in fact, is equivalent to what's in the documentation functionally.  If now is in the future, the left side of the comparison will be negative, which will still have the clause evaluate to `False`.  

It works, as-is, in catch-up mode (i.e. with old blocks) - in fact, the current line of code fixes an issue where the previous version did not, so we've addressed this problem in the past.",2018-08-10 16:30:11,2018-08-10 16:30:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1813,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/412137427,https://github.com/hyperledger/sawtooth-core/pull/1813#issuecomment-412137427,peterschwarz,"I do want to say thanks for the PR, though.  One thing to note, that in future PR's, make sure you commit using `git commit -s`: we require signed-off commits.

Please refer to the [Contributor's Guide](https://sawtooth.hyperledger.org/docs/core/releases/latest/community/contributing.html).",2018-08-10 16:36:22,2018-08-10 16:36:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1813,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/412204871,https://github.com/hyperledger/sawtooth-core/pull/1813#issuecomment-412204871,peterschwarz,Closing: See above comments,2018-08-10 20:59:51,2018-08-10 20:59:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1812,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/410743341,https://github.com/hyperledger/sawtooth-core/pull/1812#issuecomment-410743341,boydjohnson,Do we know why this wasn't being linted previously?,2018-08-06 15:14:30,2018-08-06 15:14:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1812,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/410743648,https://github.com/hyperledger/sawtooth-core/pull/1812#issuecomment-410743648,aludvik,"> It seems that rustfmt is not working? It's breaking the rust lint tests.
I'm getting this error:  `Unrecognized option: 'write-mode'` . (there's a build in Jenkins that also failed with this error)
On the file `bin/run_lint_rust` on line 42 `diff=$(cargo fmt -- --write-mode=diff)`. It seems that now instead of  `--write-mode=diff`it should be `--check`. But that is not working on my local machine either.
Source about write-mode and check: https://github.com/rust-lang-nursery/rustfmt#checking-style-on-a-ci-server

@eloaverona from chat",2018-08-06 15:15:22,2018-08-06 15:15:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1809,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/413920877,https://github.com/hyperledger/sawtooth-core/pull/1809#issuecomment-413920877,boydjohnson,"@aludvik When I ran this test locally it would produce blocks too quickly, and so only 1 batch would be in every block. I set the min_wait_time to 3 and the max_wait_time to 5. I had good results with that.",2018-08-17 16:34:19,2018-08-17 16:34:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1809,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/413992325,https://github.com/hyperledger/sawtooth-core/pull/1809#issuecomment-413992325,boydjohnson,Closing this in favor of #1824.,2018-08-17 21:24:59,2018-08-17 21:24:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1808,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/410795688,https://github.com/hyperledger/sawtooth-core/pull/1808#issuecomment-410795688,peterschwarz,These changes have been added to #1806,2018-08-06 17:56:55,2018-08-06 17:56:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1805,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/409642079,https://github.com/hyperledger/sawtooth-core/pull/1805#issuecomment-409642079,aludvik,Added a commit to also remove block cache from batch injectors.,2018-08-01 16:46:44,2018-08-01 16:46:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1802,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/410071216,https://github.com/hyperledger/sawtooth-core/pull/1802#issuecomment-410071216,chenette,"I updated this PR to fix the Python entries without breaking the auto-generated Python SDK docs. (The original PR added files to the exclude section of `docs/source/conf.py`, which was the wrong thing to do.) The Python SDK docs are once again being generated correctly.",2018-08-02 21:19:14,2018-08-02 21:19:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1794,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/408124670,https://github.com/hyperledger/sawtooth-core/pull/1794#issuecomment-408124670,jsmitchell,It would be good to add a section to the example config file with the values commented out,2018-07-26 14:52:57,2018-07-26 14:52:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1793,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/408143565,https://github.com/hyperledger/sawtooth-core/pull/1793#issuecomment-408143565,boydjohnson,"@aludvik It is an optimization. We could always look up the block and and get it's previous block id. It is nice not to in `unref` where we can walk back, only accessing RefCounts.",2018-07-26 15:49:03,2018-07-26 15:49:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1793,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/408161427,https://github.com/hyperledger/sawtooth-core/pull/1793#issuecomment-408161427,aludvik,"Okay, thanks. For that matter, is including the block id in RefCount necessary, since you already have it as the key in the map? We should weigh keeping additional fields in RefCount against the cost of making sure they stay in sync. Mapping the block id to the RefCount, and then duplicating the id and the previous id, introduces an opportunity for those fields to fall out of sync (there is nothing stopping you from accidentally mapping a block id to a RefCount with a different block id).",2018-07-26 16:47:19,2018-07-26 16:47:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1793,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/408170128,https://github.com/hyperledger/sawtooth-core/pull/1793#issuecomment-408170128,peterschwarz,"Not having the block id's in the RefCount doesn't solve the problem of having things ""fall out of sync"".  You could still have a block id point to the wrong ref count, except there would be no way to know without those ids.",2018-07-26 17:17:50,2018-07-26 17:17:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1787,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/408021717,https://github.com/hyperledger/sawtooth-core/pull/1787#issuecomment-408021717,kulkarniamol,"Looks ok to me. 
@chenette pls review and approve.",2018-07-26 08:36:07,2018-07-26 08:36:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1787,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/408159278,https://github.com/hyperledger/sawtooth-core/pull/1787#issuecomment-408159278,chenette,"@kulkarniamol - I'm on vacation, so I'm hoping that @delventhalz and others can handle this PR.",2018-07-26 16:39:48,2018-07-26 16:39:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1787,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/408477990,https://github.com/hyperledger/sawtooth-core/pull/1787#issuecomment-408477990,delventhalz,"@rranjan3 I'm approving the PR because it looks good overall, but there is a typo you should fix before we merge it.",2018-07-27 16:56:18,2018-07-27 16:56:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1787,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/408501785,https://github.com/hyperledger/sawtooth-core/pull/1787#issuecomment-408501785,rranjan3,Thanks @delventhalz. Have fixed it.,2018-07-27 18:27:33,2018-07-27 18:27:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1786,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407211789,https://github.com/hyperledger/sawtooth-core/pull/1786#issuecomment-407211789,chenette,"I changed my initial comment to reflect the current contents of this PR, and to note that ""Genesis Operation"" (update in a separate PR) didn't move to a separate file.
",2018-07-23 21:47:10,2018-07-23 21:47:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1785,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406725145,https://github.com/hyperledger/sawtooth-core/pull/1785#issuecomment-406725145,aludvik,Missed the copy-debs.yaml modification,2018-07-20 20:58:28,2018-07-20 20:58:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1784,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406711599,https://github.com/hyperledger/sawtooth-core/pull/1784#issuecomment-406711599,peterschwarz,PR for the addition of PoET to it's own repository: https://github.com/hyperledger/sawtooth-poet/pull/1,2018-07-20 20:01:31,2018-07-20 20:01:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1784,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407105648,https://github.com/hyperledger/sawtooth-core/pull/1784#issuecomment-407105648,boydjohnson,"@peterschwarz I see the PoET sgx build script being removed but there is a package, `consensus/poet/sgx/sawtooth_poet_sgx` still in the repo after this PR? Should a removal of that package be part of this PR?",2018-07-23 15:48:57,2018-07-23 15:51:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1784,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407147311,https://github.com/hyperledger/sawtooth-core/pull/1784#issuecomment-407147311,peterschwarz,"Rebased on master
",2018-07-23 18:00:03,2018-07-23 18:00:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1784,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407149502,https://github.com/hyperledger/sawtooth-core/pull/1784#issuecomment-407149502,boydjohnson,@peterschwarz This was a problem with my local checkout.,2018-07-23 18:07:10,2018-07-23 18:07:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1784,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407183891,https://github.com/hyperledger/sawtooth-core/pull/1784#issuecomment-407183891,peterschwarz,Added a commit to remove the reference to poet from the legacy ConsensusFactory,2018-07-23 20:06:16,2018-07-23 20:06:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1781,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407524872,https://github.com/hyperledger/sawtooth-core/pull/1781#issuecomment-407524872,vaporos,LGTM,2018-07-24 19:31:33,2018-07-24 19:31:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1776,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406626313,https://github.com/hyperledger/sawtooth-core/pull/1776#issuecomment-406626313,boydjohnson,@rberg2 Can you add @manojgop to the whitelist?,2018-07-20 14:57:09,2018-07-20 14:57:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1776,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406627416,https://github.com/hyperledger/sawtooth-core/pull/1776#issuecomment-406627416,boydjohnson,Hi @manojgop. Thanks for the fix. The DCO check doesn't like your signoff. Can you modify your commit with `git commit --amend -s` ? And then remove your current git sign off. Thanks!,2018-07-20 15:00:28,2018-07-20 15:00:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1776,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406630795,https://github.com/hyperledger/sawtooth-core/pull/1776#issuecomment-406630795,manojgop,"Modified the commit with ""git commit --amend -s""",2018-07-20 15:11:55,2018-07-20 15:11:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1776,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407562536,https://github.com/hyperledger/sawtooth-core/pull/1776#issuecomment-407562536,boydjohnson,"@manojgop Can you rebase on master? There was a change to Pylint which caused there to be some lint, which was fixed.",2018-07-24 21:45:55,2018-07-24 21:45:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1776,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407841802,https://github.com/hyperledger/sawtooth-core/pull/1776#issuecomment-407841802,manojgop,@boydjohnson rebased on master and pushed,2018-07-25 17:56:36,2018-07-25 17:56:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1775,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/405966410,https://github.com/hyperledger/sawtooth-core/pull/1775#issuecomment-405966410,boydjohnson,While evaluating the use of block_cache in the BlockValidator it seems necessary to expose a full iterator for branch_diff in the BlockManager. I will reopen this when that work is done.,2018-07-18 15:11:40,2018-07-18 15:11:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1775,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/408427707,https://github.com/hyperledger/sawtooth-core/pull/1775#issuecomment-408427707,boydjohnson,This PR is built on #1793 and only the last 3 commits are of this PR.,2018-07-27 14:01:39,2018-07-27 14:01:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1774,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/405697208,https://github.com/hyperledger/sawtooth-core/pull/1774#issuecomment-405697208,aludvik,Made a small mistake in converting to using the in pattern for comparing against multiple possible values.,2018-07-17 19:18:08,2018-07-17 19:18:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1774,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/405938261,https://github.com/hyperledger/sawtooth-core/pull/1774#issuecomment-405938261,aludvik,@peterschwarz updated,2018-07-18 13:51:20,2018-07-18 13:51:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1773,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407468825,https://github.com/hyperledger/sawtooth-core/pull/1773#issuecomment-407468825,chenette,"@ScottRudiger The build failed in a lint step (this has nothing to do with your doc change). You must rebase, then restart the build. Please let me know if you have any questions.

P.S.  Thanks for this fix!",2018-07-24 16:28:50,2018-07-24 16:29:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1773,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/424268081,https://github.com/hyperledger/sawtooth-core/pull/1773#issuecomment-424268081,ScottRudiger,"@chenette Sorry for the delay! I must've missed the notification last time.

I rebased with `git pull upstream master --rebase` and force pushed to trigger another build.

It looks like the build failed again, however. Did I do something wrong?",2018-09-25 09:19:48,2018-09-25 09:19:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1771,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/405655418,https://github.com/hyperledger/sawtooth-core/pull/1771#issuecomment-405655418,aludvik,This PR introduces a memory leak. Merging is pending diagnosing and resolving the leak.,2018-07-17 17:04:58,2018-07-17 17:04:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1767,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406053129,https://github.com/hyperledger/sawtooth-core/pull/1767#issuecomment-406053129,eloaverona,@agunde406 @aludvik @vaporos  updated,2018-07-18 19:51:13,2018-07-18 19:51:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1767,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/411879066,https://github.com/hyperledger/sawtooth-core/pull/1767#issuecomment-411879066,eloaverona,@aludvik @vaporos updated,2018-08-09 20:00:52,2018-08-09 20:00:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1767,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/435201558,https://github.com/hyperledger/sawtooth-core/pull/1767#issuecomment-435201558,dcmiddle,"@eloaverona can you please rebase this commit on top of latest master, and look into any conflicts that doesn't resolve? thanks!",2018-11-01 21:59:10,2018-11-01 21:59:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1764,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403305709,https://github.com/hyperledger/sawtooth-core/pull/1764#issuecomment-403305709,rranjan3,Probable miss in [PR-1732](https://github.com/hyperledger/sawtooth-core/pull/1732). Was causing build_all to fail.,2018-07-08 18:15:40,2018-07-08 18:15:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1764,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403530366,https://github.com/hyperledger/sawtooth-core/pull/1764#issuecomment-403530366,peterschwarz,"Could you please amend your commit message to follow more of the guidelines found in this blog post? 

I would suggest changing the tense in the Summary. More like:

> Remove cxx from build_all

",2018-07-09 16:01:19,2018-07-09 16:01:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1764,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403547981,https://github.com/hyperledger/sawtooth-core/pull/1764#issuecomment-403547981,rranjan3,Thanks Peter. I have updated it. Which blog post were you pointing to ?,2018-07-09 16:59:31,2018-07-09 16:59:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1764,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403550058,https://github.com/hyperledger/sawtooth-core/pull/1764#issuecomment-403550058,peterschwarz,"Sorry, badly formatted my comment: https://chris.beams.io/posts/git-commit",2018-07-09 17:06:35,2018-07-09 17:06:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1764,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403587171,https://github.com/hyperledger/sawtooth-core/pull/1764#issuecomment-403587171,rbuysse,bin/build_all is removed entirely in #1729.,2018-07-09 19:06:04,2018-07-09 19:06:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1764,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403679460,https://github.com/hyperledger/sawtooth-core/pull/1764#issuecomment-403679460,rranjan3,Thanks @rbuysse for pointing me to this PR. In that case I should close this PR and wait for 1729 to be merged. ,2018-07-10 02:29:21,2018-07-10 02:29:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1763,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/420758053,https://github.com/hyperledger/sawtooth-core/pull/1763#issuecomment-420758053,dcmiddle,"@dharamsh could you please recreate this PR in the Java SDK repo:
https://github.com/hyperledger/sawtooth-sdk-java
",2018-09-12 18:50:49,2018-09-12 18:50:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1763,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475724227,https://github.com/hyperledger/sawtooth-core/pull/1763#issuecomment-475724227,peterschwarz,Please submit these changes against https://github.com/hyperledger/sawtooth-sdk-java,2019-03-22 18:08:31,2019-03-22 18:08:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1762,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403588422,https://github.com/hyperledger/sawtooth-core/pull/1762#issuecomment-403588422,rbuysse,bin/build_debs and bin/build_rust will be removed by #1729. The tp should be added to docker-compose-installed.yaml and docker/compose/copy-debs.yaml instead.,2018-07-09 19:10:07,2018-07-09 19:10:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1762,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/404532991,https://github.com/hyperledger/sawtooth-core/pull/1762#issuecomment-404532991,peterschwarz,Why is this being closed?,2018-07-12 14:31:54,2018-07-12 14:31:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1762,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/404637137,https://github.com/hyperledger/sawtooth-core/pull/1762#issuecomment-404637137,eloaverona,"I closed this one and started a new [PR](https://github.com/hyperledger/sawtooth-core/pull/1767).  I was experience some git difficulties, and figure this would be easier way around it. ",2018-07-12 20:17:06,2018-07-12 20:17:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1756,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403160335,https://github.com/hyperledger/sawtooth-core/pull/1756#issuecomment-403160335,peterschwarz,Depends on PR #1757 ,2018-07-06 22:18:37,2018-07-06 22:19:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1756,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403869997,https://github.com/hyperledger/sawtooth-core/pull/1756#issuecomment-403869997,peterschwarz,Rebased after the #1757 was merged.,2018-07-10 15:43:07,2018-07-10 15:43:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1756,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/405345329,https://github.com/hyperledger/sawtooth-core/pull/1756#issuecomment-405345329,aludvik,See #1771 ,2018-07-16 18:56:42,2018-07-16 18:56:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1753,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/401920870,https://github.com/hyperledger/sawtooth-core/pull/1753#issuecomment-401920870,dcmiddle,rework of https://github.com/hyperledger/sawtooth-core/pull/1747,2018-07-02 20:16:33,2018-07-02 20:16:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1753,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/402182717,https://github.com/hyperledger/sawtooth-core/pull/1753#issuecomment-402182717,dcmiddle,@aludvik is 📎 correct that these methods are unused?,2018-07-03 14:45:04,2018-07-03 14:45:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1753,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403108493,https://github.com/hyperledger/sawtooth-core/pull/1753#issuecomment-403108493,boydjohnson,@dcmiddle https://github.com/hyperledger/sawtooth-core/blob/master/validator/sawtooth_validator/ffi.py#L65 `pylogger_init` is ffi code that is called by python code.,2018-07-06 18:09:56,2018-07-06 18:10:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1753,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403140294,https://github.com/hyperledger/sawtooth-core/pull/1753#issuecomment-403140294,dcmiddle,"Thanks for trying to appease clippy @mithunshashidhara. Unfortunately it looks like these were false positives.
@TomBarnes fyi ^",2018-07-06 20:36:02,2018-07-06 20:36:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1750,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/402797217,https://github.com/hyperledger/sawtooth-core/pull/1750#issuecomment-402797217,aludvik,Need to rebase,2018-07-05 17:31:47,2018-07-05 17:31:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1749,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403553295,https://github.com/hyperledger/sawtooth-core/pull/1749#issuecomment-403553295,danintel,Rebased as this PR is waiting in the queue.,2018-07-09 17:16:37,2018-07-09 17:16:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1748,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/402214791,https://github.com/hyperledger/sawtooth-core/pull/1748#issuecomment-402214791,knkski,@vaporos: That commit has been squashed,2018-07-03 16:22:38,2018-07-03 16:22:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1747,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/401202629,https://github.com/hyperledger/sawtooth-core/pull/1747#issuecomment-401202629,dcmiddle,Thanks for the fixes Mithun. Could you please summarize the lint errors in the commit message? Possibly with separate commits for unrelated errors/files? I imagine some of the lint errors are about unused code that's more clear for `use` statements but the big chunks of code getting culled are less obvious.,2018-06-28 23:26:50,2018-06-28 23:26:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1746,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/401396406,https://github.com/hyperledger/sawtooth-core/pull/1746#issuecomment-401396406,agunde406,I would also suggest you create an IdentityState to handle settign and getting state and IdentityPayload objects to handle validating the provided payload. This helps make the actually transaction processor logic easier to read. You can look at intkey rust for an example. ,2018-06-29 15:52:03,2018-06-29 15:52:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1746,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403588058,https://github.com/hyperledger/sawtooth-core/pull/1746#issuecomment-403588058,rbuysse,bin/build_debs and bin/build_rust will be removed by #1729. The tp should be added to docker-compose-installed.yaml and docker/compose/copy-debs.yaml instead.,2018-07-09 19:08:56,2018-07-09 19:08:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1746,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406273076,https://github.com/hyperledger/sawtooth-core/pull/1746#issuecomment-406273076,eloaverona,@peterschwarz @agunde406 updated,2018-07-19 13:18:53,2018-07-19 13:18:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1746,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/435508121,https://github.com/hyperledger/sawtooth-core/pull/1746#issuecomment-435508121,eloaverona,See #1926 ,2018-11-02 21:02:10,2018-11-02 21:02:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1739,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/407554392,https://github.com/hyperledger/sawtooth-core/pull/1739#issuecomment-407554392,peterschwarz,"On master, the lint stage takes ~5 min, with building the lint requirements at ~17.5 min.  On this PR, the lint stage takes 17min, and the build lint requirements stage takes ~19 min.  This doesn't seem like an improvement.",2018-07-24 21:14:23,2018-07-24 21:14:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1738,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/399195860,https://github.com/hyperledger/sawtooth-core/pull/1738#issuecomment-399195860,rberg2,These modifications look good but I don't see the new package in the build artifacts,2018-06-21 18:13:42,2018-06-21 18:13:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1738,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/401771347,https://github.com/hyperledger/sawtooth-core/pull/1738#issuecomment-401771347,peterschwarz,#1750 replaces this PR,2018-07-02 11:14:34,2018-07-02 11:14:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1737,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/401855376,https://github.com/hyperledger/sawtooth-core/pull/1737#issuecomment-401855376,knkski,Closing in favor of #1748 ,2018-07-02 16:09:54,2018-07-02 16:09:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1734,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398842774,https://github.com/hyperledger/sawtooth-core/pull/1734#issuecomment-398842774,peterschwarz,Is there a PR in the [new repo](https://github.com/hyperledger/sawtooth-sdk-java) yet?,2018-06-20 18:02:30,2018-06-20 18:02:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1732,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398809744,https://github.com/hyperledger/sawtooth-core/pull/1732#issuecomment-398809744,dcmiddle,see https://github.com/hyperledger/sawtooth-sdk-cxx/pull/2,2018-06-20 16:18:23,2018-06-20 16:18:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1731,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/400010221,https://github.com/hyperledger/sawtooth-core/pull/1731#issuecomment-400010221,dcmiddle,I'm fine with incorporating into 1.0.5 w/o a full LR re-run.,2018-06-25 16:18:17,2018-06-25 16:18:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1730,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398203409,https://github.com/hyperledger/sawtooth-core/pull/1730#issuecomment-398203409,delventhalz,The sister PR to this is [Add SDK files from core repo](https://github.com/hyperledger/sawtooth-sdk-javascript/pull/2) on `hyperledger/sawtooth-sdk-javascript`,2018-06-18 21:35:21,2018-06-18 21:35:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1730,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398531457,https://github.com/hyperledger/sawtooth-core/pull/1730#issuecomment-398531457,delventhalz,"Updated `ci/sawtooth-build-docs` so curl is still installed. This should hopefully fix the build issues:
https://github.com/hyperledger/sawtooth-core/pull/1730/files#diff-1340a1a8adaaee39b9aeaa59673e13b8R82",2018-06-19 20:18:41,2018-06-19 20:18:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1730,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403958997,https://github.com/hyperledger/sawtooth-core/pull/1730#issuecomment-403958997,rberg2,I have been trying to get this one rebuilt since the move to JJB. I think if this one can be rebased to pick up the apt-key changes this will succeed.,2018-07-10 20:42:20,2018-07-10 20:42:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1729,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/401075525,https://github.com/hyperledger/sawtooth-core/pull/1729#issuecomment-401075525,rbuysse,"The dev dockerfiles are replaced by the 'Dockerfile' in each component's directory. This way, we can more easily track the dependencies for each component rather than everything living in one image.",2018-06-28 15:30:25,2018-06-28 15:30:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1729,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403587020,https://github.com/hyperledger/sawtooth-core/pull/1729#issuecomment-403587020,rbuysse,"PRs #1746, #1762 and #1764 reference files removed in this PR.",2018-07-09 19:05:25,2018-07-09 19:05:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1727,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398145968,https://github.com/hyperledger/sawtooth-core/pull/1727#issuecomment-398145968,rberg2,Adding @vaporos and @dcmiddle for backport approval.,2018-06-18 18:12:35,2018-06-18 18:12:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1724,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398454432,https://github.com/hyperledger/sawtooth-core/pull/1724#issuecomment-398454432,peterschwarz,The use of sawtooth_validator protobufs can be removed when we no longer include poet as part of the validator process. ,2018-06-19 16:05:21,2018-06-19 16:05:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1723,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398205940,https://github.com/hyperledger/sawtooth-core/pull/1723#issuecomment-398205940,nick-drozd,Added another minor fix to the CSDK.,2018-06-18 21:45:56,2018-06-18 21:45:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1722,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398424164,https://github.com/hyperledger/sawtooth-core/pull/1722#issuecomment-398424164,bridger-herman,Could you please update the commit message to reflect the changes to the XO Rust example as well?,2018-06-19 14:41:53,2018-06-19 14:41:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1720,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/399839150,https://github.com/hyperledger/sawtooth-core/pull/1720#issuecomment-399839150,mithunshashidhara,"corrected file permissions, please check.",2018-06-25 05:51:17,2018-06-25 05:51:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1720,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/410790881,https://github.com/hyperledger/sawtooth-core/pull/1720#issuecomment-410790881,vaporos,@agunde406 should probably review this change.,2018-08-06 17:42:19,2018-08-06 17:42:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1720,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/415494974,https://github.com/hyperledger/sawtooth-core/pull/1720#issuecomment-415494974,agunde406,"Upon local testing, there are actually two bugs wrapped up in this code. The first is that you were correct that `self._processor_manager.remove(connection_id)` was not being correctly called for all connections. 

The second bug is that if a transaction processor dies mid-transaction execution the internal error causes the transaction to be resubmitted when there is no transaction processor handler and causes the validator to hang. More works need to be done to correctly handle the different types of internal errors (transaction processor dies, workers full in multithreaded transaction processor such in go, etc)

Your current code does not fix the second issue and removes the needed handling of the future before it reaches the second bug, which would cause the serial scheduler to hang waiting on a future result (would also hang completion of a block in the parallel sense). As such I would suggest you change the code in remove_broken_connection to the following:

```
def remove_broken_connection(self, connection_id):
        if connection_id in self._open_futures:
            futures_to_set = [
                self._open_futures[connection_id][key]
                for key in self._open_futures[connection_id]
            ]

            response = processor_pb2.TpProcessResponse(
                status=processor_pb2.TpProcessResponse.INTERNAL_ERROR)
            result = FutureResult(
                message_type=validator_pb2.Message.TP_PROCESS_RESPONSE,
                content=response.SerializeToString(),
                connection_id=connection_id)
            for fut in futures_to_set:
                fut.set_result(result)
                self._future_done_callback(fut.request, result)

        self._processor_manager.remove(connection_id)
```

This will fix the case that the transaction processor is manually stopped/started. A new bug/story should be opened around the second issue, I'll work to get that created.",2018-08-23 17:06:30,2018-08-23 17:06:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1720,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/415938244,https://github.com/hyperledger/sawtooth-core/pull/1720#issuecomment-415938244,mithunshashidhara,"@agunde406 i tested with the changes proposed by you, this bug is not resolved and i saw key error exception on validator logs. please test with the steps described  in my prev post. 

i agree with you that this function has issues, that is the reason i chose to remove most of its functionality. 

my goal is to resolve this bug, i understand you want to retain this function as much as possible. to make it a win-win for both of us please see my new change set. ",2018-08-25 05:14:47,2018-08-25 05:14:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1720,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/418436639,https://github.com/hyperledger/sawtooth-core/pull/1720#issuecomment-418436639,agunde406,Here is the new bug I created for the case where a tp is currently processing a transaction when it crashes. https://jira.hyperledger.org/browse/STL-1404,2018-09-04 16:40:19,2018-09-04 16:40:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1720,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/418805894,https://github.com/hyperledger/sawtooth-core/pull/1720#issuecomment-418805894,mithunshashidhara,"Thanks for approving this PR, a second approval is needed for this PR to be merged. Please do the needful.",2018-09-05 17:03:00,2018-09-05 17:03:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1716,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/397096321,https://github.com/hyperledger/sawtooth-core/pull/1716#issuecomment-397096321,rbuysse,Will include this in a larger config packaging PR.,2018-06-13 21:39:07,2018-06-13 21:39:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1712,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/396613538,https://github.com/hyperledger/sawtooth-core/pull/1712#issuecomment-396613538,aludvik,Does this always force building now?,2018-06-12 14:38:35,2018-06-12 14:38:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1705,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/397674062,https://github.com/hyperledger/sawtooth-core/pull/1705#issuecomment-397674062,boydjohnson,"Hi @phayes . Thanks for the changes. We try to follow the git commit advice as explained in this [blog post](https://chris.beams.io/posts/git-commit/). For your commit I would go with 

      Fix syntax errors in Python tutorial code

      This commit adds in a missing comma and fixes example code that
      uses non-existent fields on urllib library code.",2018-06-15 16:27:23,2018-06-15 16:27:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1705,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/397674256,https://github.com/hyperledger/sawtooth-core/pull/1705#issuecomment-397674256,boydjohnson,@rberg2 Can you add @phayes to committers list so the build will run?,2018-06-15 16:27:56,2018-06-15 16:27:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1705,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/397696147,https://github.com/hyperledger/sawtooth-core/pull/1705#issuecomment-397696147,rberg2,phayes has been added and I restarted the build.,2018-06-15 17:51:46,2018-06-15 17:51:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1705,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/411430306,https://github.com/hyperledger/sawtooth-core/pull/1705#issuecomment-411430306,boydjohnson,Hi @phayes can you rebase on master? There have been several build fixes that have gone in.,2018-08-08 14:41:14,2018-08-08 14:41:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1705,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/464135288,https://github.com/hyperledger/sawtooth-core/pull/1705#issuecomment-464135288,danintel,"One of the two fixes here is being fixed in PR #2022, but one remains.",2019-02-15 17:37:58,2019-02-15 17:38:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1705,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/465257927,https://github.com/hyperledger/sawtooth-core/pull/1705#issuecomment-465257927,peterschwarz,"Since you have to rebase, could you amend the commit message to follow the git commit message guide we have in the contributor's guide: https://chris.beams.io/posts/git-commit/#seven-rules",2019-02-19 18:41:20,2019-02-19 18:41:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1705,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475726091,https://github.com/hyperledger/sawtooth-core/pull/1705#issuecomment-475726091,vaporos,Closing because it needs to be rebased. Please rebase and re-open this PR if these fixes are still desired.,2019-03-22 18:13:48,2019-03-22 18:13:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1702,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/402180630,https://github.com/hyperledger/sawtooth-core/pull/1702#issuecomment-402180630,vaporos,"Two questions:

1) is this backward compatible?
2) for the other maintainers, is this an acceptable API to commit to moving forward (keeping in mind we are committed to backward compatibility of the REST API)",2018-07-03 14:38:51,2018-07-03 14:38:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1702,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/403554110,https://github.com/hyperledger/sawtooth-core/pull/1702#issuecomment-403554110,benoitrazet,"Thanks @vaporos for the feedback.
I squashed the two commits into one commit and added the PR description in the commit message.
To answer your question 1), yes, this PR is backward compatible.

",2018-07-09 17:19:12,2018-07-10 09:23:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1702,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/405612564,https://github.com/hyperledger/sawtooth-core/pull/1702#issuecomment-405612564,benoitrazet,"If the feature enhancement proposed in this PR is seen as beneficial, then I'm willing do the same enhancement to the `get_block_deltas` for Missed Events (to make things a little more uniform), and update the documentation accordingly. I could do the documentation first if that would help people decide whether or not this PR is worth pursuing or not. I'm completely fine either way. ",2018-07-17 14:57:20,2018-07-17 15:05:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1702,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/412231529,https://github.com/hyperledger/sawtooth-core/pull/1702#issuecomment-412231529,TomBarnes,"Security implications?  Is the regex expression complete open? Can a limit be placed on execution time? I understand the intent is to find trival matches, but if it completely open-ended, then its giving an unscrupulous (or inexperienced) user a lot of power.
https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS 
https://stackoverflow.com/questions/4289923/in-which-languages-is-it-a-security-hole-to-use-user-supplied-regular-expression
https://snyk.io/blog/redos-and-catastrophic-backtracking/
https://stackoverflow.com/questions/12841970/how-can-i-recognize-an-evil-regex
https://www.owasp.org/index.php/Regular_Expression_Security_Cheatsheet

",2018-08-10 23:31:03,2018-08-10 23:31:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1702,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/412521511,https://github.com/hyperledger/sawtooth-core/pull/1702#issuecomment-412521511,benoitrazet,"Thanks @dcmiddle 
Very good point @TomBarnes . I'll think about a good solution. Notice that the same problem is in the event system of the validator https://github.com/hyperledger/sawtooth-core/blob/master/validator/sawtooth_validator/server/events/subscription.py#L142 but might not be as catastrophic because different people have access to different components of the system, the rest_api  being more public facing than the event system. ",2018-08-13 13:40:23,2018-08-13 13:40:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1701,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/412595898,https://github.com/hyperledger/sawtooth-core/pull/1701#issuecomment-412595898,dcmiddle,"These files are now in the sawtooth-poet repo. I am going to close this PR, but feel free to open a new one against the new repo, along with the corrections requested in this PR (i.e. docs are CCBY40 not Apache2 etc.)",2018-08-13 17:20:27,2018-08-13 17:20:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1699,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/395482299,https://github.com/hyperledger/sawtooth-core/pull/1699#issuecomment-395482299,danintel,"This needs a `Signed-off-by:` line in your commit message stating you agree to the DCO.  Something like:
`Signed-off-by: cbailey555 <your@email.here.com>`",2018-06-07 16:25:22,2018-06-07 16:25:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1699,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/395621896,https://github.com/hyperledger/sawtooth-core/pull/1699#issuecomment-395621896,cbailey555,"Apologies for the back to back commits, I neglected to revert the sawtooth_sdk path in Cargo.toml after running the tests.",2018-06-08 02:01:21,2018-06-08 02:02:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1699,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/404634135,https://github.com/hyperledger/sawtooth-core/pull/1699#issuecomment-404634135,dcmiddle,@cbailey555 thanks for the new example. could you please rebase this PR and collapse out the unnecessary commits (if any) and add sign-offs to any commits that are missing them? The linux foundation DCO bot won't let us merge if any commit is missing a signoff and all signoffs must correspond to the same email address that the user is using with github.com. ,2018-07-12 20:05:33,2018-07-12 20:05:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1699,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406362863,https://github.com/hyperledger/sawtooth-core/pull/1699#issuecomment-406362863,dcmiddle,@cbailey555 if we can offer any assistance on how to handle the DCO/rebase please do reach out on https://chat.hyperledger.org/channel/sawtooth-pr-review and we can probably walk through it live.,2018-07-19 17:57:38,2018-07-19 17:57:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1699,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406928935,https://github.com/hyperledger/sawtooth-core/pull/1699#issuecomment-406928935,cbailey555,"@dcmiddle  Thanks. I'm in the home stretch of a summer research project I built on Sawtooth; I've learned a lot more about developing for the platform in the last eight weeks, so I'd like to close this, but I'll put something more helpful/idiomatic up when I'm finished. I wrote a small library for building CLIs to help myself out, so I'll make an effort to carve out some time to document that as well.",2018-07-23 03:27:14,2018-07-23 03:27:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1696,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/397724755,https://github.com/hyperledger/sawtooth-core/pull/1696#issuecomment-397724755,dcmiddle,"@danintel I see the pubkey commit, is there a privkey commit to address the group readable aspect mentioned in your PR note?
```Change permission of private key so it is not group-readable.
That is, change from 0640 (rw-r-----) to 0600 (rw-------).```",2018-06-15 19:49:13,2018-06-15 19:49:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1696,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/397727546,https://github.com/hyperledger/sawtooth-core/pull/1696#issuecomment-397727546,danintel,"@dcmiddle  No--I removed the privkey commit and changed the commit message.  The old commit message remains in this thread, so I just edited it out to reduce confusion.

I will handle privkey permissions later.",2018-06-15 20:02:09,2018-06-15 20:02:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1695,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/394798634,https://github.com/hyperledger/sawtooth-core/pull/1695#issuecomment-394798634,boydjohnson,@aludvik I am concerned with your statement `needs to be cleaned up or have summaries added`. Looking through `git log` from master there are regularly commit messages without a body and regularly without a why.,2018-06-05 17:43:20,2018-06-05 17:43:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1695,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/394869632,https://github.com/hyperledger/sawtooth-core/pull/1695#issuecomment-394869632,aludvik,"@boydjohnson that is fair. I am definitely guilty of leaving them off at times and have been called out for it. I think the goal should be to always include a commit message that will help reviewers understand why you are doing something and I have been trying to let people know in general when I find that missing.

As an example, consider ""Add check for None python state_hash in BatchResult"". Looking at just that commit and the summary, I would have no context to understand why this is a thing that should be done or if it is correct or not. Another sentence below the summary stating ""Python can also pass a None object instead of a String"" makes it easier to understand why that was added later on.",2018-06-05 21:40:37,2018-06-05 21:40:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1695,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/395170454,https://github.com/hyperledger/sawtooth-core/pull/1695#issuecomment-395170454,boydjohnson,I am opening this PR again.,2018-06-06 18:35:34,2018-06-06 18:35:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1694,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/394768754,https://github.com/hyperledger/sawtooth-core/pull/1694#issuecomment-394768754,danintel,"The DCO check is picky. You need to fixthe DCO line to something like this, without the quotes (use your github username, not real name):

`Signed-off-by: Nidhiintel <nidhisolanki44@gmail.com>`",2018-06-05 16:10:52,2018-06-05 16:10:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1692,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/394736135,https://github.com/hyperledger/sawtooth-core/pull/1692#issuecomment-394736135,nick-drozd,"commit message for `Add separate consensus service and dispatcher`

interferring -> interfering",2018-06-05 14:43:10,2018-06-05 14:43:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1692,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/394736419,https://github.com/hyperledger/sawtooth-core/pull/1692#issuecomment-394736419,nick-drozd,"Looks good to me, but since I have commits in there, I don't think I should formally approve it.",2018-06-05 14:43:57,2018-06-05 14:43:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1692,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/395143061,https://github.com/hyperledger/sawtooth-core/pull/1692#issuecomment-395143061,aludvik,Lint is broken on this but jenkins is not checking it correctly,2018-06-06 17:06:39,2018-06-06 17:06:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1691,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/394809235,https://github.com/hyperledger/sawtooth-core/pull/1691#issuecomment-394809235,dcmiddle,"Verified that bandit errors will still stop the build. And that the bandit output is inaccessible from the Jenkins UI as reported in https://jira.hyperledger.org/browse/STL-320.
",2018-06-05 18:16:12,2018-06-05 18:16:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1689,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/394494989,https://github.com/hyperledger/sawtooth-core/pull/1689#issuecomment-394494989,nick-drozd,"Oh, commit `Add decimate to StatePruneManager` has `If a root is prune,` in the commit message (prune -> pruned).",2018-06-04 20:51:08,2018-06-04 20:51:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1689,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/395498778,https://github.com/hyperledger/sawtooth-core/pull/1689#issuecomment-395498778,peterschwarz,"Added some new commits to handle the issue where an identical leaf is produced, and then is pruned from a prior state root hash.  This approach is the most direct - scanning the change logs.

Future changes could make this more efficient by managing this with an in-memory reference count.",2018-06-07 17:18:50,2018-06-07 17:18:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1688,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398752041,https://github.com/hyperledger/sawtooth-core/pull/1688#issuecomment-398752041,aludvik,This PR will be deprecated by: https://github.com/hyperledger/sawtooth-core/pull/1729,2018-06-20 13:40:30,2018-06-20 13:40:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1687,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398753251,https://github.com/hyperledger/sawtooth-core/pull/1687#issuecomment-398753251,aludvik,This PR will be deprecated by #1734 and should be made against the Java SDK repo when it is ready: https://github.com/hyperledger/sawtooth-sdk-java,2018-06-20 13:44:11,2018-06-20 13:44:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1687,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/401203938,https://github.com/hyperledger/sawtooth-core/pull/1687#issuecomment-401203938,dcmiddle,@aludvik I don't see a PR to move the sdk to sawtooth-sdk-java yet. Maybe we get this one in here while we wait. ,2018-06-28 23:34:31,2018-06-28 23:34:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1687,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/412594056,https://github.com/hyperledger/sawtooth-core/pull/1687#issuecomment-412594056,dcmiddle,"@dharamsh thanks for the fixups. Now that the java SDK is in it's own repo, can you please open this PR against that repo?
https://github.com/hyperledger/sawtooth-sdk-java",2018-08-13 17:14:41,2018-08-13 17:14:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1687,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/420757567,https://github.com/hyperledger/sawtooth-core/pull/1687#issuecomment-420757567,dcmiddle,@dharamsh Were you able to recreate this PR in the new java repo as requested above?,2018-09-12 18:49:12,2018-09-12 18:49:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1687,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475722607,https://github.com/hyperledger/sawtooth-core/pull/1687#issuecomment-475722607,peterschwarz,Please open these changes against https://github.com/hyperledger/sawtooth-sdk-java,2019-03-22 18:04:03,2019-03-22 18:04:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1681,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/392991266,https://github.com/hyperledger/sawtooth-core/pull/1681#issuecomment-392991266,peterschwarz,Will need to add a new PR for BlockWrapper conversions,2018-05-30 00:25:09,2018-05-30 00:25:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1680,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/393342933,https://github.com/hyperledger/sawtooth-core/pull/1680#issuecomment-393342933,danintel,Rebased.,2018-05-30 22:42:10,2018-05-30 22:42:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1680,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/393628621,https://github.com/hyperledger/sawtooth-core/pull/1680#issuecomment-393628621,danintel,Added the ``double back-ticks`` (I used md markup when I should have used rst markup).,2018-05-31 18:25:45,2018-05-31 18:25:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/395069568,https://github.com/hyperledger/sawtooth-core/pull/1679#issuecomment-395069568,bridger-herman,"Updated with slightly more verbose commit messages, and referenced the PR from rust-lang-nursery",2018-06-06 13:32:49,2018-06-06 13:32:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1675,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/392191705,https://github.com/hyperledger/sawtooth-core/pull/1675#issuecomment-392191705,boydjohnson,"@aludvik I implemented the 2 todos in add_batch, removed the spurious clone_ref, and reduced the number of calls of `.assume_gil_acquired`. I am not sure how to reduce the clones on `self.pending_batches`. I think it is either clone every time we add a batch to the the new `pending_batches` vec or clone `self.pending_batches` to begin with. I have wondered if I should spend some time making the signature into `finalize(self)` instead of `finalize(&mut self)` since it should consume the candidate block.",2018-05-25 21:27:30,2018-05-25 21:27:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1674,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398113356,https://github.com/hyperledger/sawtooth-core/pull/1674#issuecomment-398113356,bridger-herman,This has been updated to reflect the Rust XO TP that now exists in master.,2018-06-18 16:26:03,2018-06-18 16:26:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1669,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391851087,https://github.com/hyperledger/sawtooth-core/pull/1669#issuecomment-391851087,bridger-herman,Documentation for this XO transaction processor and the Rust SDK is in PR #1674 ,2018-05-24 20:36:35,2018-05-24 20:36:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1667,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391172355,https://github.com/hyperledger/sawtooth-core/pull/1667#issuecomment-391172355,aludvik,"Example usage:
```
diff --git a/validator/src/state/merkle.rs b/validator/src/state/merkle.rs
index ce7254bf1..e09f7f5aa 100644
--- a/validator/src/state/merkle.rs
+++ b/validator/src/state/merkle.rs
@@ -35,6 +35,8 @@ use crypto::sha2::Sha512;
 use protobuf;
 use protobuf::Message;

+use metrics;
+
 use database::database::DatabaseError;
 use database::lmdb::DatabaseReader;
 use database::lmdb::LmdbDatabase;
@@ -50,6 +52,11 @@ const TOKEN_SIZE: usize = 2;

 pub const CHANGE_LOG_INDEX: &str = ""change_log"";

+lazy_static! {
+    static ref COLLECTOR: metrics::MetricsCollectorHandle =
+        metrics::get_collector(""sawtooth_validator.state.merkle"");
+}
+
 /// Merkle Database
 #[derive(Clone)]
 pub struct MerkleDatabase {
@@ -63,8 +70,20 @@ impl MerkleDatabase {
     ///
     /// An optional starting merkle root may be provided.
     pub fn new(db: LmdbDatabase, merkle_root: Option<&str>) -> Result<Self, StateDatabaseError> {
-        let root_hash = merkle_root.map_or_else(|| initialize_db(&db), |s| Ok(s.into()))?;
-        let root_node = get_node_by_hash(&db, &root_hash)?;
+        let mut test_counter = COLLECTOR.counter(""MerkleDatabase.new_counter"", None, None);
+        test_counter.inc();
+
+        let mut test_gauge = COLLECTOR.gauge(""MerkleDatabase.new_gauge"", None, None);
+        test_gauge.set_value(2);
+
+        let mut test_timer = COLLECTOR.timer(""MerkleDatabase.new_timer"", None, None);
+
+        let (root_hash, root_node) = {
+            let handle = test_timer.time();
+            let root_hash = merkle_root.map_or_else(|| initialize_db(&db), |s| Ok(s.into()))?;
+            let root_node = get_node_by_hash(&db, &root_hash)?;
+            (root_hash, root_node)
+        };

         Ok(MerkleDatabase {
             root_hash,
```",2018-05-22 23:25:37,2018-05-22 23:25:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1663,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391137981,https://github.com/hyperledger/sawtooth-core/pull/1663#issuecomment-391137981,danintel,"In case it's not obvious, the double quotes are needed because the output of
`$(cat /etc/sawtooth/ias_rk_pub.pem)` has embedded spaces (converted from newlines in the file), so double quotes are needed to indicate the PEM file contents are not separate parameters.

The  method of using double quotes ""$(cat ...)"" is (correctly) used elsewhere in the docs:
https://sawtooth.hyperledger.org/docs/core/releases/latest/sysadmin_guide/configure_sgx.html

This bug fixes this documentation problem reported today on https://chat.hyperledger.org/channel/sawtooth :

> May 22, 2018 3:54 AM
> Hi, can some one please help me ! after entering this command into the terminal as a root , I am getting an error : 
> sawset:error : unrecognised argument`sawset proposal create -k /etc/sawtooth/keys/validator.priv -o config.batch sawset.consensus.algorithm = poet \
> sawtooth.poet.report_public_key_pem=$(cat /etc/sawtooth/simulator_rk_pub.pem) \
> sawtooth.poet.valid_enclave_measurements=$(poet enclave measurement) \
> sawtooth.poet.valid_enclave_basenames=$(poet enclave basename)`",2018-05-22 20:56:43,2018-05-22 21:31:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1663,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391141022,https://github.com/hyperledger/sawtooth-core/pull/1663#issuecomment-391141022,chenette,"@danintel - Are double-quotes also needed for the other two settings in this command?  

sawtooth.poet.valid_enclave_measurements=$(poet enclave measurement) \ sawtooth.poet.valid_enclave_basenames=$(poet enclave basename) ",2018-05-22 21:07:15,2018-05-22 21:07:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1663,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391147510,https://github.com/hyperledger/sawtooth-core/pull/1663#issuecomment-391147510,danintel,"@chenette No, double quotes are not needed.  They don't hurt, but they are not needed because there is no embedded whitespace for the other settings.",2018-05-22 21:31:08,2018-05-22 21:31:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1662,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391096676,https://github.com/hyperledger/sawtooth-core/pull/1662#issuecomment-391096676,peterschwarz,This isn't the right interface needed for the publisher.,2018-05-22 18:37:04,2018-05-22 18:37:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1660,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391138476,https://github.com/hyperledger/sawtooth-core/pull/1660#issuecomment-391138476,peterschwarz,This will need to get rebased after #1659 is merged.,2018-05-22 20:58:21,2018-05-22 20:58:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1656,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/395918940,https://github.com/hyperledger/sawtooth-core/pull/1656#issuecomment-395918940,peterschwarz,"@Ram-srini On your second point, the list of addresses returned are all of the addresses that have been deleted.  If an address include in the request is not in the response, it most likely did not exist.

As far as validity goes, that result in an Authorization Error (i.e. the user is trying to modify/access an unauthorized address). There is no status specifically for malformed addresses.

This PR is handling both correctly, as far as the protobuf messages are concerned.",2018-06-08 23:31:30,2018-06-08 23:31:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1656,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/398752739,https://github.com/hyperledger/sawtooth-core/pull/1656#issuecomment-398752739,aludvik,This PR will be deprecated by https://github.com/hyperledger/sawtooth-core/pull/1734 and should be made against the Java SDK repo when it is ready: https://github.com/hyperledger/sawtooth-sdk-java,2018-06-20 13:42:38,2018-06-20 13:42:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1656,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/434712203,https://github.com/hyperledger/sawtooth-core/pull/1656#issuecomment-434712203,boydjohnson,@dharamsh The java sdk has been moved into a separate repo: http://github.com/hyperledger/sawtooth-sdk-java. This Pr should be closed and made against that repo.,2018-10-31 14:39:07,2018-10-31 14:39:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1656,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/435147121,https://github.com/hyperledger/sawtooth-core/pull/1656#issuecomment-435147121,vaporos,Closing due to Java SDK now existing in the other repository.,2018-11-01 18:53:17,2018-11-01 18:53:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1653,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391107239,https://github.com/hyperledger/sawtooth-core/pull/1653#issuecomment-391107239,aludvik,Passed LR1 stability checks,2018-05-22 19:10:38,2018-05-22 19:10:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1652,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/389922048,https://github.com/hyperledger/sawtooth-core/pull/1652#issuecomment-389922048,peterschwarz,This is not correct. The staging branch is meant for bug fixes and backported changes that will be merged into the 1-0 branch for 1.0.x releases.,2018-05-17 16:10:23,2018-05-17 16:10:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1651,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/390041865,https://github.com/hyperledger/sawtooth-core/pull/1651#issuecomment-390041865,agunde406,"Thanks for this PR. However, a simular fix was just merged.

Closing in Favor of https://github.com/hyperledger/sawtooth-core/pull/1634",2018-05-17 23:12:05,2018-05-17 23:12:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1650,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/389693794,https://github.com/hyperledger/sawtooth-core/pull/1650#issuecomment-389693794,peterschwarz,Updated with doc comments.,2018-05-16 23:08:19,2018-05-16 23:08:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1649,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/389565355,https://github.com/hyperledger/sawtooth-core/pull/1649#issuecomment-389565355,nick-drozd,Need real error handling,2018-05-16 15:39:22,2018-05-16 15:39:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1640,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388875893,https://github.com/hyperledger/sawtooth-core/pull/1640#issuecomment-388875893,peterschwarz,"As discussed on rocket chat, this should be closed and reopened against the `1-0-staging-01` branch.",2018-05-14 16:18:30,2018-05-14 16:18:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1640,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/389216477,https://github.com/hyperledger/sawtooth-core/pull/1640#issuecomment-389216477,peterschwarz,Closing in favor of #1647 ,2018-05-15 15:48:18,2018-05-15 15:48:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1639,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388946218,https://github.com/hyperledger/sawtooth-core/pull/1639#issuecomment-388946218,nick-drozd,"In the check block num commit message, **passed** -> **past**.",2018-05-14 20:10:06,2018-05-14 20:10:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1638,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/390707109,https://github.com/hyperledger/sawtooth-core/pull/1638#issuecomment-390707109,dcmiddle,"@askmish I believe your feedback is addressed, can you please verify and ✔️  if you agree. :)
",2018-05-21 16:28:25,2018-05-21 16:28:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1638,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391397819,https://github.com/hyperledger/sawtooth-core/pull/1638#issuecomment-391397819,askmish,"@dcmiddle I'm hoping the console prompt will be useful to distinguish which command belongs to validators, general cli, etc.
",2018-05-23 15:48:49,2018-05-23 15:48:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1638,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391400959,https://github.com/hyperledger/sawtooth-core/pull/1638#issuecomment-391400959,chenette,"@askmish - Hmmm.  I agree with @dcmiddle that the prompt is not the right way to distinguish this in the Ubuntu procedure. One reason is because some people get confused when the docs show a prompt that is different from what they see in their terminal window.  (For the Docker procedure, I decided it was worth having different prompts because I needed a way to identify each Docker container.)

Ideally, the preceding text should clarify which Sawtooth component the command belongs to.  I suspect that some doc changes are needed to make this clear for all commands. ",2018-05-23 15:57:56,2018-05-23 15:57:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1636,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388644590,https://github.com/hyperledger/sawtooth-core/pull/1636#issuecomment-388644590,grkvlt,"As an alternative, for the `1-0` branch, I have created #1640 which pins the rust dependency version for protobuf to 1.4.4 so that the breaking changes do not cause build issues.",2018-05-13 17:58:41,2018-05-13 17:58:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1635,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388198906,https://github.com/hyperledger/sawtooth-core/pull/1635#issuecomment-388198906,nick-drozd,How does the CE block publisher differ from the normal one?,2018-05-10 21:58:54,2018-05-10 21:58:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1635,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388199914,https://github.com/hyperledger/sawtooth-core/pull/1635#issuecomment-388199914,nick-drozd,"Is it possible at this point to run the engine in an integration test? It could be a simple smoke test, in the sense of ""turn it on and verify that it doesn't start smoking"".",2018-05-10 22:03:35,2018-05-10 22:03:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1634,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388065990,https://github.com/hyperledger/sawtooth-core/pull/1634#issuecomment-388065990,aludvik,"Thanks for the fix! It looks like your commit message is missing a ""Developer Certificate of Origin"". This just means when you create the commit, you need to do `git commit -s` instead of just `git commit`. You should just be able to checkout your branch and do `git commit -s --amend` to apply it now and then do a `git push -f` to update this PR with the signed off commit. See the contributing guidelines for more details: https://sawtooth.hyperledger.org/docs/core/nightly/master/community/contributing.html",2018-05-10 14:14:08,2018-05-10 14:14:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1634,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388329009,https://github.com/hyperledger/sawtooth-core/pull/1634#issuecomment-388329009,awbacker,"Will do.  I don't normally do that so I've never configured it before.

Also, the link that pops up to 'review contributing guidelines' when making a new PR just points to a mostly empty page, just a couple of lines of text.",2018-05-11 10:43:36,2018-05-11 10:43:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1634,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388621498,https://github.com/hyperledger/sawtooth-core/pull/1634#issuecomment-388621498,awbacker,"DCO added.  Build failure in the rust code, though.",2018-05-13 11:56:26,2018-05-13 11:56:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1634,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/389654532,https://github.com/hyperledger/sawtooth-core/pull/1634#issuecomment-389654532,boydjohnson,"Hi @awbacker , There was an upstream breaking change in the Rust protobuf library that #1636 fixes. If you rebase on a fresh pull of master, the rust build problem will go away.",2018-05-16 20:27:54,2018-05-16 20:27:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1632,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388110252,https://github.com/hyperledger/sawtooth-core/pull/1632#issuecomment-388110252,danintel,Removed sudo and added note on error from not running as root or in the docker group.,2018-05-10 16:39:00,2018-05-10 16:39:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1632,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388112271,https://github.com/hyperledger/sawtooth-core/pull/1632#issuecomment-388112271,TomBarnes,"If the system administrator is expected to run sawtooth nodes with root privileges, then that is a non-starter from a security perspective.
",2018-05-10 16:46:08,2018-05-10 16:46:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1632,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388186240,https://github.com/hyperledger/sawtooth-core/pull/1632#issuecomment-388186240,dcmiddle,"There's a balance with tutorials in saying too much or too little. Without guidance on common missteps people can get stuck, but with too much extra guidance a simple activity looks complicated and possibly takes too long.
What do people think about moving this kind of help to something like a FAQ. Not a general FAQ but something targeted at this app dev guide?",2018-05-10 21:07:06,2018-05-10 21:07:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1632,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388196396,https://github.com/hyperledger/sawtooth-core/pull/1632#issuecomment-388196396,chenette,"As far as a FAQ (or a section on troubleshooting) ... This is a not-insignificant time commitment, both in creation and maintenance. 

I agree with @dcmiddle that adding more info to a step, although very helpful, makes this procedure more complicated. It's a fine line between providing helpful tips and overwhelming the procedure.  However, tech writers usually have a few tricks up their sleeves... 

How about enclosing these new Docker tips in an actual ``.. tip::`` block, so that it would be easier for the eye to skip if the reader doesn't need the info?  This is the same as a ``.. note::``, but with the word ""Tip"".  Details here: http://docutils.sourceforge.net/docs/ref/rst/directives.html#tip",2018-05-10 21:47:35,2018-05-10 21:47:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1632,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388200791,https://github.com/hyperledger/sawtooth-core/pull/1632#issuecomment-388200791,danintel,"I like the ""Tip"" suggestion and I can go along with, but I have an alternative--adding two preventive steps

1. Mention at the top, under Docker install, that docker and docker-compose must run with sudo or with a user in group docker.

2. Mention, in a step before `docker-compose ... up`, to run `docker-compose ... down` if docker was not previously cleanly shutdown.

I think the FAQ idea is good and should be added to as we go along--it doesn't need to be a dedicated effort.
",2018-05-10 22:07:51,2018-05-10 22:07:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1632,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388410941,https://github.com/hyperledger/sawtooth-core/pull/1632#issuecomment-388410941,chenette,"@danintel - Yes, I like this alternative. Go for it.  Thanks!",2018-05-11 16:13:38,2018-05-11 16:13:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1632,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388432559,https://github.com/hyperledger/sawtooth-core/pull/1632#issuecomment-388432559,danintel,I added a ``warning`` and a ``tip`` and I think I addressed everyone's concerns. Let me know.,2018-05-11 17:34:10,2018-05-11 17:34:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1630,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/387795692,https://github.com/hyperledger/sawtooth-core/pull/1630#issuecomment-387795692,dcmiddle,@rberg2 @rbuysse can you please approve. I want to see if the merge button enables despite the build failure. (I promise not to click it though ;) ),2018-05-09 16:22:56,2018-05-09 16:22:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1628,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/387905396,https://github.com/hyperledger/sawtooth-core/pull/1628#issuecomment-387905396,chenette,"Pushed a fixup commit to correct the Ubuntu REST API info in ""Confirm Network Functionality"". It's always localhost:8008 for the demo environment. (Added a note about non-default values set with --bind when starting sawtooth-rest-api.) Also restored the simple version of the sawtooth peer list (etc.) step.",2018-05-09 23:30:55,2018-05-09 23:30:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1619,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/387155288,https://github.com/hyperledger/sawtooth-core/pull/1619#issuecomment-387155288,boydjohnson,I am going to update this PR with the full trait BlockManager and unimplemented!() methods for the methods of the trait that aren't implemented yet.,2018-05-07 18:17:33,2018-05-07 18:17:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1619,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/387816472,https://github.com/hyperledger/sawtooth-core/pull/1619#issuecomment-387816472,boydjohnson,"I am going to close this because I am very close to having a full implementation. I will open a new PR when I have the full implementation, probably tomorrow.",2018-05-09 17:35:22,2018-05-09 17:35:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1617,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388083777,https://github.com/hyperledger/sawtooth-core/pull/1617#issuecomment-388083777,peterschwarz,Corrected a grammatical error commented on in PR #1626,2018-05-10 15:11:59,2018-05-10 15:11:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1613,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386309674,https://github.com/hyperledger/sawtooth-core/pull/1613#issuecomment-386309674,rbuysse,The .env is in PR #1612. I expected that one would get merged first. Apologies for not making that explicit.,2018-05-03 14:13:05,2018-05-03 14:13:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1610,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386450418,https://github.com/hyperledger/sawtooth-core/pull/1610#issuecomment-386450418,nick-drozd,`ZmqDriver` and test added,2018-05-03 22:00:25,2018-05-03 22:00:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1610,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386676926,https://github.com/hyperledger/sawtooth-core/pull/1610#issuecomment-386676926,nick-drozd,Took out type annotations,2018-05-04 17:48:41,2018-05-04 17:48:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1609,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386388450,https://github.com/hyperledger/sawtooth-core/pull/1609#issuecomment-386388450,boydjohnson,"This looks like the test is for a set before a delete, but your comment says that it is from a delete before a set. Could you explain?",2018-05-03 18:15:28,2018-05-03 18:15:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1609,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386392498,https://github.com/hyperledger/sawtooth-core/pull/1609#issuecomment-386392498,peterschwarz,Added a doc comment from the original PR to help explain things.,2018-05-03 18:28:28,2018-05-03 18:28:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1608,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386636385,https://github.com/hyperledger/sawtooth-core/pull/1608#issuecomment-386636385,aludvik,Completed overnight stability check of 10 node PoET network under 20 TPS workload. Network stayed in consensus and did 9.96 TPS.,2018-05-04 15:26:11,2018-05-04 15:26:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1608,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386642252,https://github.com/hyperledger/sawtooth-core/pull/1608#issuecomment-386642252,nick-drozd,"Commit message for `Refactor pending batches tracking into class`: previously done using __a__ three
separate data structures",2018-05-04 15:45:09,2018-05-04 15:45:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1608,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/387093807,https://github.com/hyperledger/sawtooth-core/pull/1608#issuecomment-387093807,aludvik,Fixed a bug I introduced (forgot to reset the pending batches pool in one place) and added a new commit to prevent blocks from being built outside the publisher thread.,2018-05-07 15:01:24,2018-05-07 15:01:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1608,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388120659,https://github.com/hyperledger/sawtooth-core/pull/1608#issuecomment-388120659,aludvik,Completed overnight stability check of 10 node PoET network under 20 TPS workload. Network stayed in consensus and did 9.88 TPS.,2018-05-10 17:14:34,2018-05-10 17:14:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1607,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386151680,https://github.com/hyperledger/sawtooth-core/pull/1607#issuecomment-386151680,peterschwarz,Closing in order to break up into individual PR's,2018-05-02 23:26:40,2018-05-02 23:26:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1604,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385710288,https://github.com/hyperledger/sawtooth-core/pull/1604#issuecomment-385710288,peterschwarz,Separated out the generated proto source generation into #1606 ,2018-05-01 16:07:25,2018-05-01 16:07:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1604,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385756725,https://github.com/hyperledger/sawtooth-core/pull/1604#issuecomment-385756725,boydjohnson,This PR is now built on #1606 so that the Protobuf generation happens in a simpler way.,2018-05-01 18:55:56,2018-05-01 18:55:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1604,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386688859,https://github.com/hyperledger/sawtooth-core/pull/1604#issuecomment-386688859,boydjohnson,"@aludvik I found that the only place that I was using `SchedulerError::Error` was to mean a Rust Python mismatch where a value is None, or information isn't there that was expected to be there. So I made `SchedulerError::PythonRustMismatch(String)`. I changed what was exported from `intkey_rust` to be just the IntkeyTransactionHandler. The other changes requested didn't seem possible in a reasonable time. I couldn't get `sawtooth_validator` to build with the new dev-dependencies.",2018-05-04 18:12:43,2018-05-04 18:12:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1604,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/390660031,https://github.com/hyperledger/sawtooth-core/pull/1604#issuecomment-390660031,boydjohnson,This work isn't currently going to be used.,2018-05-21 13:53:09,2018-05-21 13:53:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1604,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/390678072,https://github.com/hyperledger/sawtooth-core/pull/1604#issuecomment-390678072,boydjohnson,"After talking with @peterschwarz, we may be using this.",2018-05-21 14:52:38,2018-05-21 14:52:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1604,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391501515,https://github.com/hyperledger/sawtooth-core/pull/1604#issuecomment-391501515,boydjohnson,This is now built on #1665.,2018-05-23 21:25:15,2018-05-23 21:32:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1604,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391782995,https://github.com/hyperledger/sawtooth-core/pull/1604#issuecomment-391782995,aludvik,Please place the unscheduled batch ids commit in a separate PR so that it can be reviewed independently of the already approved PR.,2018-05-24 16:45:40,2018-05-24 16:45:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1604,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/391799812,https://github.com/hyperledger/sawtooth-core/pull/1604#issuecomment-391799812,boydjohnson,@aludvik Done. I will put the difference of what was reviewed before and what I would like now up in a separate PR.,2018-05-24 17:40:25,2018-05-24 17:40:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1601,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386079610,https://github.com/hyperledger/sawtooth-core/pull/1601#issuecomment-386079610,aludvik,Completed overnight stability check of 10 node PoET network under 20 TPS workload. Network stayed in consensus and did 6.26 TPS. One node was behind but on the same fork.,2018-05-02 18:41:49,2018-05-02 18:42:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1598,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385056819,https://github.com/hyperledger/sawtooth-core/pull/1598#issuecomment-385056819,rberg2,"Hello, I have added you to the whitelist what was preventing this PR from building and restarted the build. Thanks!",2018-04-27 18:33:01,2018-04-27 18:33:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1598,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/390933311,https://github.com/hyperledger/sawtooth-core/pull/1598#issuecomment-390933311,adityasingh177,Updated the changes accordingly.Please have a review @dcmiddle @askmish ,2018-05-22 09:55:37,2018-05-22 09:55:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1598,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/400996112,https://github.com/hyperledger/sawtooth-core/pull/1598#issuecomment-400996112,kulkarniamol,Looks good.,2018-06-28 10:55:46,2018-06-28 10:55:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1598,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/406370991,https://github.com/hyperledger/sawtooth-core/pull/1598#issuecomment-406370991,kulkarniamol,"Dan, I'm waiting for the end-to-end REST validation to catch up. Will likely pull this set of tests into that and delete this PR.",2018-07-19 18:26:11,2018-07-19 18:26:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1597,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385056752,https://github.com/hyperledger/sawtooth-core/pull/1597#issuecomment-385056752,rberg2,"Hello, I have added you to the whitelist what was preventing this PR from building and restarted the build. Thanks!",2018-04-27 18:32:47,2018-04-27 18:32:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1597,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/475722366,https://github.com/hyperledger/sawtooth-core/pull/1597#issuecomment-475722366,vaporos,Closing due to DCO issues. Please fix DCO and merge conflicts and resubmit if this is still desired.,2019-03-22 18:03:25,2019-03-22 18:03:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1592,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384843065,https://github.com/hyperledger/sawtooth-core/pull/1592#issuecomment-384843065,arthurgreef,Changed to use urllib.,2018-04-27 02:14:17,2018-04-27 02:14:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1592,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384975386,https://github.com/hyperledger/sawtooth-core/pull/1592#issuecomment-384975386,arthurgreef,"One of the reasons that  this is a difficult PR to complete is because I do not know what a valid endpoint should be? Is it just a name or does it need to be a valid URL. A validator test like the one below just uses the string ""endpoint"". I would imagine that this is not a valid endpoint but if it is then the uriparse function returns 'endpoint' as a path and not as a hostname. Should we change the tests so that all endpoints are URL's? 

def test_connect(self):
        """"""
        Test the ConnectHandler correctly responds to a ConnectionRequest.
        """"""
        connect_message = ConnectionRequest(endpoint=""endpoint"")
        roles = {""network"": AuthorizationType.TRUST}",2018-04-27 13:48:40,2018-04-27 13:48:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1592,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385016609,https://github.com/hyperledger/sawtooth-core/pull/1592#issuecomment-385016609,peterschwarz,The test should specify a correct endpoint: e.g. `tcp://test-endpoint:8800`,2018-04-27 16:04:01,2018-04-27 16:04:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1592,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385042345,https://github.com/hyperledger/sawtooth-core/pull/1592#issuecomment-385042345,arthurgreef,"I have pushed a revision. Thanks.

Sent from Mail<https://go.microsoft.com/fwlink/?LinkId=550986> for Windows 10

________________________________
From: Peter Schwarz <notifications@github.com>
Sent: Friday, April 27, 2018 9:22:58 AM
To: hyperledger/sawtooth-core
Cc: Arthur Greef; Author
Subject: Re: [hyperledger/sawtooth-core] Fix validator peering on Azure (#1592)


The test should specify a correct endpoint: e.g. tcp://test-endpoint:8800

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<https://github.com/hyperledger/sawtooth-core/pull/1592#issuecomment-385016609>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABIq7Vppu3c4gMXUwQQO7z10KX7et-7fks5ts0XhgaJpZM4TkFPn>.
",2018-04-27 17:39:28,2018-04-27 17:39:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1592,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386647653,https://github.com/hyperledger/sawtooth-core/pull/1592#issuecomment-386647653,peterschwarz,This also needs a rebase - we've had a bunch of dependencies update that cause some build failures without some corrections in our code.,2018-05-04 16:03:54,2018-05-04 16:03:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1592,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388958001,https://github.com/hyperledger/sawtooth-core/pull/1592#issuecomment-388958001,peterschwarz,Closing in favor of #1642 ,2018-05-14 20:49:38,2018-05-14 20:49:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1590,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384073925,https://github.com/hyperledger/sawtooth-core/pull/1590#issuecomment-384073925,nick-drozd,"Can't test, as I'm still getting
```
cargo:warning=../c/loader.c:22:10: fatal error: 'openssl/bio.h' file not found
cargo:warning=#include <openssl/bio.h>
cargo:warning=         ^
cargo:warning=1 error generated.
```",2018-04-24 20:44:57,2018-04-24 20:44:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1590,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384074211,https://github.com/hyperledger/sawtooth-core/pull/1590#issuecomment-384074211,peterschwarz,You still need to have the right openssl lib installed,2018-04-24 20:45:51,2018-04-24 20:45:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1589,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384069737,https://github.com/hyperledger/sawtooth-core/pull/1589#issuecomment-384069737,peterschwarz,Removed some commits that modified the sawadm tool's code base (specifically around making local dev on OS X easier),2018-04-24 20:31:09,2018-04-24 20:31:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1589,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384096972,https://github.com/hyperledger/sawtooth-core/pull/1589#issuecomment-384096972,peterschwarz,"This is true about clippy, but given that clippy was quite broken in recent weeks, I haven't run it",2018-04-24 22:14:03,2018-04-24 22:14:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1589,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384101870,https://github.com/hyperledger/sawtooth-core/pull/1589#issuecomment-384101870,peterschwarz,Ran clippy,2018-04-24 22:37:42,2018-04-24 22:37:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1584,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384069437,https://github.com/hyperledger/sawtooth-core/pull/1584#issuecomment-384069437,aludvik,Tested locally,2018-04-24 20:30:11,2018-04-24 20:30:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1583,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383832524,https://github.com/hyperledger/sawtooth-core/pull/1583#issuecomment-383832524,sTyL3,"@chenette Thank you for all these informations, should be okay now",2018-04-24 07:31:44,2018-04-24 07:31:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1583,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384449714,https://github.com/hyperledger/sawtooth-core/pull/1583#issuecomment-384449714,chenette,"@sTyL3 - Unfortunately, the build has errors in the ""Run Lint"" test.  (You didn't do anything wrong in your PR - it's a problem with the build tests.)  To fix this problem, you must rebase, then do a ""git push --force"". 

I _think_ that the build will succeed after you rebase and push. Bonne chance!
",2018-04-25 22:08:29,2018-04-25 22:08:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1583,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384799588,https://github.com/hyperledger/sawtooth-core/pull/1583#issuecomment-384799588,chenette,"@sTyL3 - Here's more information on why a rebase is required.  This info is from askmish in PR # 1578: 

We had some CI changes and this won't pass until your branch lays ontop of those changes. Will be something like...

git checkout this-branch 
git fetch upstream master
git rebase -i upstream/master
git push --force your-fork this-branch",2018-04-26 21:48:29,2018-04-26 21:48:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1583,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384905991,https://github.com/hyperledger/sawtooth-core/pull/1583#issuecomment-384905991,sTyL3,"@chenette Thanks for all these informations, I tried to do that, not sure if it will work",2018-04-27 08:41:48,2018-04-27 08:41:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1583,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388882916,https://github.com/hyperledger/sawtooth-core/pull/1583#issuecomment-388882916,chenette,"@sTyL3 - Alas, this PR still has build problems (not your fault). I put your commit into PR #1593 (*), which has been built and merged.  So I am closing this PR.  

(*) Reason: After you corrected the Docker container name in this commit, I noticed other names that were wrong.  So my PR used your commit for one correction, and I made the other corrections.

If you look on your GitHub profile page, you will see that you have credit for this contribution. Thank you! I appreciate your help to make the documentation better. Merci encore!
",2018-05-14 16:40:43,2018-05-14 16:40:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1581,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/389037475,https://github.com/hyperledger/sawtooth-core/pull/1581#issuecomment-389037475,kulkarniamol,@askmish pls review this once again.,2018-05-15 04:15:06,2018-05-15 04:15:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1579,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383985731,https://github.com/hyperledger/sawtooth-core/pull/1579#issuecomment-383985731,peterschwarz,"You need to do a couple of things with this commit: 

* Add a sign-off.  This is as easy as running `git commit --amend -s`
* Follow the [community contributing guide](https://sawtooth.hyperledger.org/docs/core/releases/latest/community/contributing.html) around commit messages (specifically, we link to this post by [Chris Beam](https://chris.beams.io/posts/git-commit/#seven-rules)).  You can also make this modifications with the above `git commit --amend -s`
* You'll need to go through the DCO steps if you haven't already, which are under the Checks.",2018-04-24 15:57:47,2018-04-24 15:57:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1579,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/430352426,https://github.com/hyperledger/sawtooth-core/pull/1579#issuecomment-430352426,dcmiddle,Thanks again for the fix @MattSGS .  Looks like there were a few fixups required including the sign-off. If we don't hear back soon I'll assume you've moved on to help other projects and I will close this for you. ,2018-10-16 18:43:43,2018-10-16 18:43:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1579,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/435148818,https://github.com/hyperledger/sawtooth-core/pull/1579#issuecomment-435148818,vaporos,"Closing due to lack of DCO sign-off. If fixed, please re-open.",2018-11-01 18:58:40,2018-11-01 18:58:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1578,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/382487693,https://github.com/hyperledger/sawtooth-core/pull/1578#issuecomment-382487693,ruffsl,@askmish please let me know if more changes are needed.,2018-04-18 18:39:14,2018-04-18 18:39:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1578,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383679211,https://github.com/hyperledger/sawtooth-core/pull/1578#issuecomment-383679211,dcmiddle,"@ruffsl looks good. Could you please just rebase the commit? We had some CI changes and this won't pass until your branch lays ontop of those changes. Will be something like...
```
git checkout this-branch 
git fetch upstream master
git rebase -i upstream/master
git push --force your-fork this-branch
```",2018-04-23 18:39:35,2018-04-23 19:39:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1578,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383707744,https://github.com/hyperledger/sawtooth-core/pull/1578#issuecomment-383707744,ruffsl,"@dcmiddle , thanks for the instructions. PR branch now rebased on to upstream master.",2018-04-23 20:14:35,2018-04-23 20:17:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1578,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/387532145,https://github.com/hyperledger/sawtooth-core/pull/1578#issuecomment-387532145,rberg2,"Hello, it looks like this commit introduced an error in the build system.
Take a look at this for sphinx issue for suggestions on how to prevent that from happening.
https://github.com/sphinx-doc/sphinx/issues/3921",2018-05-08 20:28:50,2018-05-08 20:28:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1577,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384619924,https://github.com/hyperledger/sawtooth-core/pull/1577#issuecomment-384619924,nick-drozd,Added Rust logging,2018-04-26 12:17:43,2018-04-26 12:17:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1576,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/382408710,https://github.com/hyperledger/sawtooth-core/pull/1576#issuecomment-382408710,aludvik,"fyi, github is showing my commits out of order..",2018-04-18 14:34:45,2018-04-18 14:34:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1576,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383691409,https://github.com/hyperledger/sawtooth-core/pull/1576#issuecomment-383691409,aludvik,Rebased on master post clippy removal,2018-04-23 19:19:06,2018-04-23 19:19:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1576,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383725866,https://github.com/hyperledger/sawtooth-core/pull/1576#issuecomment-383725866,aludvik,Added a couple commits per @vaporos feedback offline,2018-04-23 21:16:10,2018-04-23 21:16:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1573,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/382791368,https://github.com/hyperledger/sawtooth-core/pull/1573#issuecomment-382791368,peterschwarz,Could you add some information about the fallback server in the commit messages?,2018-04-19 16:05:06,2018-04-19 16:05:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1573,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383584092,https://github.com/hyperledger/sawtooth-core/pull/1573#issuecomment-383584092,dcmiddle,@askmish why p80 and not just the pool (i.e. hkp://pool.sks-keyservers.net)?,2018-04-23 13:55:55,2018-04-23 13:55:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1573,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383592543,https://github.com/hyperledger/sawtooth-core/pull/1573#issuecomment-383592543,rberg2,"p80 is a pool containing servers available on port 80, I remember we added :80 to the keyservers to allow them to work in environments where proxy servers are required.",2018-04-23 14:20:47,2018-04-23 14:20:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1573,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383826108,https://github.com/hyperledger/sawtooth-core/pull/1573#issuecomment-383826108,askmish,"More info here: https://sks-keyservers.net/overview-of-pools.php

> p80.pool.sks-keyservers.net
> This is a pool containing only servers available on port 80 (needs to be used as hkp://p80.pool.sks-keyservers.net:80)",2018-04-24 07:05:30,2018-04-24 07:05:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/381319470,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-381319470,kulkarniamol,@chenette  Pls review,2018-04-14 10:26:00,2018-04-14 10:26:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383637660,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-383637660,chenette,"@kulkarniamol - Please rebase.  That will fix the problem in the ""Run Lint"" build stage.",2018-04-23 16:27:41,2018-04-23 16:27:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383644720,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-383644720,kulkarniamol,@chenette Done.,2018-04-23 16:49:56,2018-04-23 16:49:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385019909,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-385019909,dcmiddle,@kulkarniamol the DCO tool seems stuck for no good reason. Would you mind rebasing & repushing this PR to see if we can nudge the DCO tool? Otherwise this is ready for merge.,2018-04-27 16:16:39,2018-04-27 16:16:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385035299,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-385035299,kulkarniamol,@dcmiddle Done,2018-04-27 17:13:10,2018-04-27 17:13:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385410065,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-385410065,dcmiddle,@jwagantall any thoughts on why DCO is stuck?,2018-04-30 14:12:43,2018-04-30 16:55:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385449666,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-385449666,ryjones,@jwagantall could you look at the DCO issue? is there a DCO bot outage generally?,2018-04-30 16:18:37,2018-04-30 16:18:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385473875,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-385473875,jwagantall,Checking the DCO bot.. looks like there was a problem with it 7 days ago.. but I am still investigating ,2018-04-30 17:42:37,2018-04-30 17:42:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385475301,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-385475301,jwagantall,"I can see DCO was working on recent changes.. Not sure if this pull request just got jinxed somehow.. 

Do you guys think we can try closing this pull request and create a new one since the rebase didn't seemed to take effect?",2018-04-30 17:47:35,2018-04-30 17:47:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385509705,https://github.com/hyperledger/sawtooth-core/pull/1572#issuecomment-385509705,dcmiddle,@kulkarniamol unfortunately the DCO bot will not reset for this PR. Can you please close this PR and push this change up as a new PR?,2018-04-30 19:53:33,2018-04-30 19:53:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1570,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380795986,https://github.com/hyperledger/sawtooth-core/pull/1570#issuecomment-380795986,askmish,"Please add sign-off to your commit message.
",2018-04-12 12:58:35,2018-04-12 12:58:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1570,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/382790337,https://github.com/hyperledger/sawtooth-core/pull/1570#issuecomment-382790337,peterschwarz,Be sure to debase this and fix the lint errors,2018-04-19 16:01:54,2018-04-19 16:01:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1570,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383228344,https://github.com/hyperledger/sawtooth-core/pull/1570#issuecomment-383228344,peterschwarz,Rebase one more time - we had to remove a linting step.,2018-04-20 21:32:26,2018-04-20 21:32:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1570,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383818257,https://github.com/hyperledger/sawtooth-core/pull/1570#issuecomment-383818257,rranjan3,Thanks for pointing it out. Rebased once again.,2018-04-24 06:28:34,2018-04-24 06:28:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1570,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385698367,https://github.com/hyperledger/sawtooth-core/pull/1570#issuecomment-385698367,peterschwarz,I'm afraid you are going to need to rebase one more time.,2018-05-01 15:22:37,2018-05-01 15:22:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1570,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386015555,https://github.com/hyperledger/sawtooth-core/pull/1570#issuecomment-386015555,swt2c,Can this please be backported to 1.0 also?,2018-05-02 15:20:05,2018-05-02 15:20:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1570,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386063274,https://github.com/hyperledger/sawtooth-core/pull/1570#issuecomment-386063274,peterschwarz,"The underlying implementation has changed in master, so this PR should be closed and reopened against `1-0-staging-01` as a backport PR.   I have added a similar test to #1609 to demonstrate that the new implementation does not demonstrate the bug.",2018-05-02 17:49:02,2018-05-02 17:49:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1570,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386378597,https://github.com/hyperledger/sawtooth-core/pull/1570#issuecomment-386378597,peterschwarz,closed in favor of #1614 ,2018-05-03 17:44:49,2018-05-03 17:44:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1569,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380815256,https://github.com/hyperledger/sawtooth-core/pull/1569#issuecomment-380815256,nick-drozd,"`clippy` / Rust CI discussions:
* https://dev.to/cad97/great-rust-ci-1fk6
* http://lorenzo.villani.me/2017/04/25/rust-and-clippy/
* https://news.ycombinator.com/item?id=13323796

`clippy` reference: https://rust-lang-nursery.github.io/rust-clippy/v0.0.193/index.html",2018-04-12 14:00:24,2018-04-12 18:50:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1569,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380815551,https://github.com/hyperledger/sawtooth-core/pull/1569#issuecomment-380815551,nick-drozd,"Also, the commits are structured right now to make review easier, but they should probably be squashed somehow before going in.",2018-04-12 14:01:19,2018-04-12 14:01:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1569,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380894352,https://github.com/hyperledger/sawtooth-core/pull/1569#issuecomment-380894352,nick-drozd,"Commits that get rid of unnecessary stuff:
* lifetimes: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/d51e502af03b13391c5a1a8429525d950338d02a, https://github.com/hyperledger/sawtooth-core/pull/1569/commits/706f569639cf715035d79f5dd29d8faa9a74ff75
* `let`s: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/586422b02f5f1c7adc141aa50d05f8b97e6cdedf
* `.iter()`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/47c867868d377fdc9a4a0e7f9e6a4f42caa3117d
* `.into()`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/c848c78e202e6644e654742089f45e267afeb490
* `.clone()`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/0ee54628f908ec81fa90ea6279b2ea1bd6460751
* `to_string()`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/c463076fa0fca26b113a8b0c426cabfcfd7648de
* `return`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/7ce5768a0a959526bb8a501d30c7404ee8b6bc41",2018-04-12 18:04:44,2018-04-12 18:04:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1569,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380899799,https://github.com/hyperledger/sawtooth-core/pull/1569#issuecomment-380899799,nick-drozd,"Commits that rewrite things to be simpler:

* replace single-pattern `match` with `if let`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/96a1556edfa61fe41d438a6768ee2a33ae599cb5
```
-            match self.txn_id_by_name.get(&payload.name) {
-                Some(txn_id) => {
-                    let dependencies = RepeatedField::from_vec(vec![txn_id.clone().to_string()]);
-                    txn_header.set_dependencies(dependencies);
-                }
-                None => {}
+            if let Some(txn_id) = self.txn_id_by_name.get(&payload.name) {
+                let dependencies = RepeatedField::from_vec(vec![txn_id.clone().to_string()]);
+                txn_header.set_dependencies(dependencies);
```
* replace `loop` / `match` with `while let`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/171614c7a19dcf0b7a41f92768b82bc609e75393
* replace boolean `match` with `if` / `else`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/29260594b16a626f1594bc6786d9ea64d7713fc4
```
-            match self.register(sender.clone(), unregister.clone()) {
-                true => (),
-                false => continue,
+            if self.register(sender.clone(), unregister.clone()) {
+                ()
+            } else {
+                continue;
```
* Cut excess references in `matches`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/a214fcf9db95fb5b30043f70cc82d3074c71c490
```
-                    Some(v) => match v {
-                        &Value::U32(x) => Ok(Some(x)),
-                        &Value::U16(x) => Ok(Some(u32::from(x))),
-                        &Value::U8(x) => Ok(Some(u32::from(x))),
+                    Some(v) => match *v {
+                        Value::U32(x) => Ok(Some(x)),
+                        Value::U16(x) => Ok(Some(u32::from(x))),
+                        Value::U8(x) => Ok(Some(u32::from(x))),
```
* replace `.map(|x| x.clone())` with `.cloned()`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/3e82500c3dac2659dbeaaf7a1b4dce4065e65c76
* replace `.iter().cloned().collect()` with `.to_vec()`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/79c86b81834dec05580e8d8ff1e2ca17afc699e1
* replace `.len()` comparison with `.is_empty()`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/7f20526e43cd3a97eebd062304766ba38e121235
* replace `writeln!(io::stderr(), ...).unwrap()` with `eprintln!(...)`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/d356b3b5e64f9b2cc2d7b2b6ee6a1cb6c75ea7c1
* add long number separators (e.g. change `1000000` to `1_000_000`): https://github.com/hyperledger/sawtooth-core/pull/1569/commits/224b76bddf0c83d405108dd5f3c881f51e79a44a
* rename child module to be different from parent module: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/1405cf3a659f97e7f922f39fc9202a7f38947d59
* Collapse nested `if`s to `&&`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/d7ea23dd6a8138f8c46844b9f3bf47919609f1c7
* explicit nil return: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/b9d8c6ec5d97a1196d2f48792981dce91ed6620d
* `+=`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/d0733d769730bb37518a5a2a35df44fcae55bcd9
* change `<=` to `==` when the left-hand side can't be less than 0: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/a0dcf86d831458212fe153e8ab023e1fdef8c879
",2018-04-12 18:23:10,2018-04-12 18:47:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1569,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380901639,https://github.com/hyperledger/sawtooth-core/pull/1569#issuecomment-380901639,nick-drozd,"Commits that affect correctness (maybe):

* Replace lossy casts with lossless casts: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/5e674188462c49480d20e9dc455f087b855861e9
* Remove a stray semicolon (I'm actually not sure how this was compiling before): https://github.com/hyperledger/sawtooth-core/pull/1569/commits/fabdcf4695b4babac22362e6442d7f9f127c4394",2018-04-12 18:29:19,2018-04-12 18:29:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1569,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380904551,https://github.com/hyperledger/sawtooth-core/pull/1569#issuecomment-380904551,nick-drozd,"Commits that affect performance (maybe):

* Cut redundant closures: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/e316ce812b41690f282f8e2c9d735d2799635558
```
-        val.ok().map(|v| Vec::from(v))
+        val.ok().map(Vec::from)
```
* Replace eager-evaluating `ok_or` with lazy-evaluating `ok_or_else`: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/09b482dbf0516373ac1da00275ae4a5ed88251c8
```
-            .ok_or(DatabaseError::NotFoundError(format!(
-                ""Block not found: {}"",
-                block_id
-            )))?;
+            .ok_or_else(|| DatabaseError::NotFoundError(format!(""Block not found: {}"", block_id)))?;
```
* Replace single-character string split with single character split: https://github.com/hyperledger/sawtooth-core/pull/1569/commits/2ceb81f7ff05d880df500d3923ba5e7fcd359456
```
-            let split: Split<&str> = s.split("","");
+            let split: Split<char> = s.split(',');
```",2018-04-12 18:39:24,2018-04-12 18:39:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1569,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380906474,https://github.com/hyperledger/sawtooth-core/pull/1569#issuecomment-380906474,nick-drozd,"The biggest change is replacing pass-by-value with pass-by-reference (https://github.com/hyperledger/sawtooth-core/pull/1569/commits/c74736c3245343e5e7f944a6784e4c7904f7dd9b, https://github.com/hyperledger/sawtooth-core/pull/1569/commits/a0eb427e5c772084589da74f1ebd524632776c41). This supposedly requires fewer allocations, and also allows for doing away with some conversion functions:
```
-    pub fn mark_submit_success(&mut self, batch_id: String) {
-        self.batches_by_id.remove(batch_id.as_str());
+    pub fn mark_submit_success(&mut self, batch_id: &str) {
+        self.batches_by_id.remove(batch_id);
```
```
-        timed_batch_iterator.mark_submit_success(batch_id1.clone());
-        timed_batch_iterator.mark_submit_success(batch_id3.clone());
+        timed_batch_iterator.mark_submit_success(&batch_id1);
+        timed_batch_iterator.mark_submit_success(&batch_id3);
```
```
-fn load_yaml_array(yaml_str: Cow<str>) -> Result<Cow<Vec<Yaml>>, PlaylistError> {
-    let mut yaml =
-        try!(YamlLoader::load_from_str(yaml_str.as_ref()).map_err(PlaylistError::YamlInputError));
+fn load_yaml_array(yaml_str: &str) -> Result<Cow<Vec<Yaml>>, PlaylistError> {
+    let mut yaml = try!(YamlLoader::load_from_str(yaml_str).map_err(PlaylistError::YamlInputError));
```",2018-04-12 18:46:03,2018-04-12 18:46:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1569,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/381246373,https://github.com/hyperledger/sawtooth-core/pull/1569#issuecomment-381246373,nick-drozd,"New changes:

1. Ran `rustfmt` on Smallbank Rust, since I forgot to add it to the last PR.
2. Took out the breaking API change in the Rust SDK and disabled that warning locally.
3. Per request of @peterschwarz, separated the Rust lint Jenkins stage from the Python and Go linting.
4. Added a missing docstring comment slash in the Rust SDK.",2018-04-13 20:02:19,2018-04-13 20:02:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1565,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380533268,https://github.com/hyperledger/sawtooth-core/pull/1565#issuecomment-380533268,aludvik,"This is an example of the thread where the router was running doing a panic on shutdown:
```
   Compiling sawtooth_sdk v0.1.0 (file:///Users/ludvik/git/sawtooth-core/sdk/rust)
    Finished dev [unoptimized + debuginfo] target(s) in 7.64 secs
     Running target/debug/deps/sawtooth_sdk-9f084f67474c56e7

running 1 test
start()
block()
message()
peer()
stop()
ALL CHECKS PASSED
thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: ""SendError(..)""', libcore/result.rs:945:5
test consensus::zmq_driver::tests::test_zmq_driver ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 12 filtered out
```

@grkvlt I believe this fixes the seth-rpc shutdown error you were seeing",2018-04-11 17:30:30,2018-04-11 17:30:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1564,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380298265,https://github.com/hyperledger/sawtooth-core/pull/1564#issuecomment-380298265,dcmiddle,Can the limitless default cause a denial of service for that rest service?,2018-04-11 01:35:06,2018-04-11 01:35:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1564,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380472489,https://github.com/hyperledger/sawtooth-core/pull/1564#issuecomment-380472489,dcmiddle,@agunde406 can you give context on the default ^,2018-04-11 14:28:45,2018-04-11 14:28:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1564,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380497348,https://github.com/hyperledger/sawtooth-core/pull/1564#issuecomment-380497348,agunde406,"The default was chosen because the rest api has been written to be very permissive. For example, there is no authorization scheme or CORS handling. From talking with @delventhalz, the rest-api should not be exposed without modification (such as setting a response body limit). For example, for production, it should be put behind a proxy. ",2018-04-11 15:37:13,2018-04-11 15:37:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1564,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380535387,https://github.com/hyperledger/sawtooth-core/pull/1564#issuecomment-380535387,dcmiddle,"Thanks for the context @agunde406. The deployment model should indeed be that each participating company decides whether or not to _internally_ host a REST API instance. That implies a security model where certain attacks are out of scope, but it should still be resilient to bad requests from 'internal' users.",2018-04-11 17:37:44,2018-04-11 17:37:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1564,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/382866561,https://github.com/hyperledger/sawtooth-core/pull/1564#issuecomment-382866561,peterschwarz,This now depends on #1580 ,2018-04-19 20:14:51,2018-04-19 20:14:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1562,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380849385,https://github.com/hyperledger/sawtooth-core/pull/1562#issuecomment-380849385,nick-drozd,"Per a suggestion of @vaporos, broke the `rustfmt` commit up into multiple commits at top-level boundaries for ease of backporting. Also added a comment about `rustfmt` exit codes to `run_lint_rust`.",2018-04-12 15:38:32,2018-04-12 15:38:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1561,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380164926,https://github.com/hyperledger/sawtooth-core/pull/1561#issuecomment-380164926,chenette,"Made the requested changes, plus a number of rewrites for clarity and some formatting fixes.  Kept this as a separate commit so it would be easier to see what changed (and to preserve the commit comments).",2018-04-10 16:30:53,2018-04-10 16:30:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1561,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380704170,https://github.com/hyperledger/sawtooth-core/pull/1561#issuecomment-380704170,sofiter,"I don't know where else I can comment for this issue, so I add a comment here because it is about documentation. I was reading the documentation very carefully for the Python SDK, and there is a ""problem"" applying the steps because you have a different example for the transaction processor (the XO)  and a different for the client (the IntKey). So this doesn't help the reader to follow the flow of creating the application. It is my opinion, but I thought I should let you know, because other people who are rookies like me might find themselves confused also... If there is a way I can contribute, please inform me.",2018-04-12 07:21:05,2018-04-12 07:21:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1561,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/381261221,https://github.com/hyperledger/sawtooth-core/pull/1561#issuecomment-381261221,chenette,"@sofiter - Comments on the documentation are very welcome.  However, this PR is focused on the changes for ""Creating a Sawtooth Network"".  The best place for your comment is one of the following:

- Hyperledger's #sawtooth channel on Rocket.Chat: 
  https://chat.hyperledger.org/channel/sawtooth
  My handle is @achenette

- Hyperledger Sawtooth mailing list - subscribe here: 
  http://lists.hyperledger.org/mailman/listinfo/hyperledger-stl

Please repeat your comment in either Rocket.Chat or on the mailing list.  I'll be sure to check for your comment, because I want to ask you for more information about the doc version and environment you're using.  And thanks for your help with improving the Sawtooth documentation! ",2018-04-13 21:09:24,2018-04-13 21:09:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1561,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/381268165,https://github.com/hyperledger/sawtooth-core/pull/1561#issuecomment-381268165,chenette,"I pushed a fix that makes the requested changes from askmish, plus related rewrites and wording improvements. @askmish - my thanks in advance for a re-review.",2018-04-13 21:44:56,2018-04-13 21:44:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1561,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383694441,https://github.com/hyperledger/sawtooth-core/pull/1561#issuecomment-383694441,chenette,"Added a fixup commit to fix errors, make requested changes, and clarify the information - especially the bind, endpoint, and peers info in the sawtooth-validator command.  

- Clarified the bind, endpoint, and peers options in Prequisites 

- Added a missing backslash in multi-line ""sawset proposal create"" command

- Clarified the example of the sawtooth-validator command (text and option order)                         
                                                                         
- Added the missing port numbers for the --peers example that's shown after the 
  sawtooth-validator command 

- Fixed a curly brace in the ""boilerplate"" sawtooth-validator command
    
- Corrected the option to specify a URL when starting the REST API and TPs
  (it's --connect, not --url)

- Moved the ""start REST API"" command to its own step

- Fixed wording, note location, and doc links throughout the Ubuntu procedure",2018-04-23 19:29:41,2018-04-23 19:29:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1555,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/379042680,https://github.com/hyperledger/sawtooth-core/pull/1555#issuecomment-379042680,vaporos,Amol has been added to the the jenkins-authorized-builders file.,2018-04-05 19:00:56,2018-04-05 19:00:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1554,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/378110202,https://github.com/hyperledger/sawtooth-core/pull/1554#issuecomment-378110202,kulkarniamol,Updated based on review comments. Please review again.,2018-04-03 02:41:31,2018-04-03 02:41:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1554,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380183859,https://github.com/hyperledger/sawtooth-core/pull/1554#issuecomment-380183859,rberg2,"Hello.
We recently changed the way we whitelist committers that are allowed to run builds, if you rebase Jenkins should build this PR.",2018-04-10 17:31:30,2018-04-10 17:31:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1554,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385698478,https://github.com/hyperledger/sawtooth-core/pull/1554#issuecomment-385698478,peterschwarz,You are going to need to rebase this PR.,2018-05-01 15:23:08,2018-05-01 15:23:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1554,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385739606,https://github.com/hyperledger/sawtooth-core/pull/1554#issuecomment-385739606,kulkarniamol,@peterschwarz @vaporos Updated and rebased. Please review the PR. Thanks!,2018-05-01 17:53:51,2018-05-01 17:53:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1554,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386022337,https://github.com/hyperledger/sawtooth-core/pull/1554#issuecomment-386022337,peterschwarz,You need to fix up some lint errors.  Take a look at the build output on Jenkins,2018-05-02 15:39:20,2018-05-02 15:39:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1553,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/378264811,https://github.com/hyperledger/sawtooth-core/pull/1553#issuecomment-378264811,agunde406,"A similar check is done at https://github.com/hyperledger/sawtooth-core/blob/master/validator/sawtooth_validator/server/cli.py#L296

Please update the check there as well. ",2018-04-03 14:14:23,2018-04-03 14:14:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1553,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380186574,https://github.com/hyperledger/sawtooth-core/pull/1553#issuecomment-380186574,rberg2,"Hello.
We have reworked the permissions on our build server, if you rebase, this commit should build.",2018-04-10 17:40:04,2018-04-10 17:40:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/381594486,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-381594486,benoitrazet,"@vaporos @dcmiddle  I was thinking for this PR, maybe `namespace protection` would be a better name than `namespace permission` because `permission` is already a concept for key permissioning. I'd be happy to make the change from `namespace permission` to `namespace protection` or `namespace enforcement` (as @vaporos mentioned in an earlier comment) if that would prevent users to be confused with the already existing transactor/validator key permisioning.",2018-04-16 13:13:05,2018-04-16 16:55:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/381654958,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-381654958,chenette,"@benoitrazet - I like "" namespace protection"".  I was just about to comment that I didn't like using ""permissioning"" for this feature because it's used for authorization (keys).  Thanks!",2018-04-16 15:54:57,2018-04-16 15:54:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/381966995,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-381966995,benoitrazet,"@chenette Thanks! I updated the PR changing `permission` to `protection`, in both the docs and integration test.",2018-04-17 12:03:20,2018-04-17 12:03:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384494683,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-384494683,benoitrazet,"@chenette what would you think of moving this chapter of the documentation to the Section after https://sawtooth.hyperledger.org/docs/core/nightly/master/app_developers_guide/address_and_namespace.html#
I think that might be more appropriate than in the ""Architecture"" Section as it is proposed in the current PR.",2018-04-26 02:39:24,2018-04-26 02:39:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384795226,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-384795226,benoitrazet,"The proposed `Namespace Protection` Section is now in the Application Developer's Guide. Because the Section refers to specific details, like `prefix` or `namespace`, it should be put in a place where the reader is expected to have this type of familiarity with Sawtooth.",2018-04-26 21:30:47,2018-04-26 21:30:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386125147,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-386125147,vaporos,"The text implies is an intended 1-to-1 relationship between namespaces and transaction families. This is not the architectural intent. The intent is that different transaction families can use the same namespaces. Settings is a good example, where we have a ""reference implementation"" transaction family for updating that state, and other transaction families which read that state as part of their normal operation.

Not sure I like 'protections', but I do agree that we are over-using 'permissions'.  Maybe 'restrictions'? Any other options come to mind?",2018-05-02 21:20:30,2018-05-02 21:20:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386173844,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-386173844,benoitrazet,"@vaporos I added a couple more sentences in a new commit to make sure the text does not imply a 1-to-1 correspondence (that was not my intent). Let me if you think it is still ambiguous. 

@vaporos @chenette @dcmiddle Concerning `namespace permission` vs `namespace protection` vs `namespace restrictions`, I'm going to add another one in the mix: `namespace enforcement`
Anyone of them is fine with me. Maybe `namespace permission` is the one I prefer the least because of the overloading of permission. Thanks to let me know what you think, I'd be happy to make the change as soon as we reach consensus.",2018-05-03 02:06:22,2018-05-03 02:06:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386285066,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-386285066,benoitrazet,"@vaporos @chenette @dcmiddle After a good night of sleep, I like `namespace restrictions` because since the feature is solely about the write/set/outputs, as opposed to both inputs and outputs, thus it can be seen as a ""restriction"".",2018-05-03 12:52:38,2018-05-03 12:52:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386285809,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-386285809,benoitrazet,"sorry, unexpectedly closed the PR. Reopening it now",2018-05-03 12:55:31,2018-05-03 12:55:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386607120,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-386607120,benoitrazet,"@vaporos @chenette @dcmiddle I made the change ""namespace protection"" -> ""namespace restriction"" in an additional commit.",2018-05-04 13:49:17,2018-05-04 13:49:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386688922,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-386688922,benoitrazet,"While I see your point @vaporos that the ""namespace restriction"" might not be a concern to application developer, I would argue that it depends on the extend of your application. Moreover, as a developer who does not necessarily have control over all the transaction families deployed on a network, it is a legitimate concern that transaction families deployed not tamper the addresses of the transaction family under development. The namespace restriction feature provides an answer to this concern with a single on-chain setting to review.

@vaporos @chenette I could move the documentation in the System's Administrator Guide https://sawtooth.hyperledger.org/docs/core/nightly/master/sysadmin_guide.html after the section ""Configuring Permissions"". I think it would fit there, and would not bring those concerns to the attention of App developers.",2018-05-04 18:12:57,2018-05-04 18:12:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386693148,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-386693148,chenette,"@vaporos -  I'm confused by your statement that app developers don't need to know about namespaces.  Isn't that one of the things an app developer needs to design when creating a TP?  And they also need to know that the validator can restrict reads/writes based on other TP namespaces.  To me, this information belongs in the app dev guide.  If it's moved, there should be a subset of this information that's tailored for the app developer. ",2018-05-04 18:28:50,2018-05-04 18:28:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388109546,https://github.com/hyperledger/sawtooth-core/pull/1552#issuecomment-388109546,dcmiddle,"I think the app dev guide is a fine place for this content.
The sysadmin guide, to me, is more about the administration of an individual node.
We could add a section like a _consortium governance guide_ to talk about how to roll out TP upgrades and locking down global settings. For purposes of this PR, though, I'd rather we get the content into the App Dev Guide as it is currently organized.
@chenette if you are ok with that, the lets get your green check and merge this :)",2018-05-10 16:36:25,2018-05-10 16:36:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1551,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377550695,https://github.com/hyperledger/sawtooth-core/pull/1551#issuecomment-377550695,peterschwarz,"Need to resolve conflicts
",2018-03-30 15:32:48,2018-03-30 15:32:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1547,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377391382,https://github.com/hyperledger/sawtooth-core/pull/1547#issuecomment-377391382,chenette,"@vaporos - FYI, see https://jira.hyperledger.org/browse/STL-1119. Thanks, @askmish, for fixing this problem!",2018-03-29 22:26:18,2018-03-29 22:26:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1545,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377299379,https://github.com/hyperledger/sawtooth-core/pull/1545#issuecomment-377299379,askmish,"@vaporos btw, updated commit message.
This change was left out during 1.0 release changes in identity.proto.
",2018-03-29 16:50:25,2018-03-29 18:27:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1545,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377387039,https://github.com/hyperledger/sawtooth-core/pull/1545#issuecomment-377387039,vaporos,"For the commit message, how about:

'Update Policy.Type to EntryType in identity cli

This change was missed during API stabilization change prior to 1.0.  Fixes
an exception which was being thrown when running XXX.
'

Where XXX is the CLI command that was failing.",2018-03-29 22:06:18,2018-03-29 22:06:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1544,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377252202,https://github.com/hyperledger/sawtooth-core/pull/1544#issuecomment-377252202,aludvik,@jsmitchell fixed @delventhalz's last name,2018-03-29 14:25:41,2018-03-29 14:25:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1544,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377265758,https://github.com/hyperledger/sawtooth-core/pull/1544#issuecomment-377265758,aludvik,@agunde406 is on vacation but I was able to get in touch with her and get her approval over the phone.,2018-03-29 15:05:56,2018-03-29 15:05:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1543,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377312075,https://github.com/hyperledger/sawtooth-core/pull/1543#issuecomment-377312075,nick-drozd,"@vaporos had some concerns about the information returned from test failures. Here is what failure output looks like with `RUST_BACKTRACE=1`:

#### Assertion Failure
```
unit-sawadm_1  | running 2 tests
unit-sawadm_1  | test database::lmdb::tests::test_lmdb ... ok


/* the failing asssertion */

unit-sawadm_1  | thread 'blockstore::tests::test_blockstore' panicked at 'assertion failed: `(left == right)`
unit-sawadm_1  |   left: `1`,
unit-sawadm_1  |  right: `2`', src/blockstore.rs:254:9


unit-sawadm_1  | note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
unit-sawadm_1  | stack backtrace:
unit-sawadm_1  |    0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
unit-sawadm_1  |              at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49
unit-sawadm_1  |    1: std::sys_common::backtrace::print
unit-sawadm_1  |              at /checkout/src/libstd/sys_common/backtrace.rs:68
unit-sawadm_1  |              at /checkout/src/libstd/sys_common/backtrace.rs:57
unit-sawadm_1  |    2: std::panicking::default_hook::{{closure}}
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:381
unit-sawadm_1  |    3: std::panicking::default_hook
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:397
unit-sawadm_1  |    4: std::panicking::rust_panic_with_hook
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:577
unit-sawadm_1  |    5: std::panicking::begin_panic
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:538
unit-sawadm_1  |    6: std::panicking::begin_panic_fmt
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:522


/* line number of the assertion definition */

unit-sawadm_1  |    7: sawadm::blockstore::tests::assert_current_height
unit-sawadm_1  |              at src/blockstore.rs:254

/* line number where the assertion was called */

unit-sawadm_1  |    8: sawadm::blockstore::tests::test_blockstore
unit-sawadm_1  |              at src/blockstore.rs:286


unit-sawadm_1  |    9: <F as alloc::boxed::FnBox<A>>::call_box
unit-sawadm_1  |              at /checkout/src/libtest/lib.rs:1449
unit-sawadm_1  |              at /checkout/src/libcore/ops/function.rs:223
unit-sawadm_1  |              at /checkout/src/liballoc/boxed.rs:815
unit-sawadm_1  |   10: __rust_maybe_catch_panic
unit-sawadm_1  |              at /checkout/src/libpanic_unwind/lib.rs:101
unit-sawadm_1  | test blockstore::tests::test_blockstore ... FAILED
unit-sawadm_1  | 
unit-sawadm_1  | failures:
unit-sawadm_1  | 
unit-sawadm_1  | failures:
unit-sawadm_1  |     blockstore::tests::test_blockstore
unit-sawadm_1  | 
unit-sawadm_1  | test result: FAILED. 1 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out
```

#### Unwrap Failure
```
unit-sawadm_1  | running 2 tests
unit-sawadm_1  | test database::lmdb::tests::test_lmdb ... ok


/* the unwrap failure */

unit-sawadm_1  | thread 'blockstore::tests::test_blockstore' panicked at 'called `Result::unwrap()` on an `Err` value: WriterError(""Not an index: index_block_num"")', /checkout/src/libcore/result.rs:916:5


unit-sawadm_1  | note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
unit-sawadm_1  | stack backtrace:
unit-sawadm_1  |    0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
unit-sawadm_1  |              at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49
unit-sawadm_1  |    1: std::sys_common::backtrace::print
unit-sawadm_1  |              at /checkout/src/libstd/sys_common/backtrace.rs:68
unit-sawadm_1  |              at /checkout/src/libstd/sys_common/backtrace.rs:57
unit-sawadm_1  |    2: std::panicking::default_hook::{{closure}}
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:381
unit-sawadm_1  |    3: std::panicking::default_hook
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:397
unit-sawadm_1  |    4: std::panicking::rust_panic_with_hook
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:577
unit-sawadm_1  |    5: std::panicking::begin_panic
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:538
unit-sawadm_1  |    6: std::panicking::begin_panic_fmt
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:522
unit-sawadm_1  |    7: rust_begin_unwind
unit-sawadm_1  |              at /checkout/src/libstd/panicking.rs:498
unit-sawadm_1  |    8: core::panicking::panic_fmt
unit-sawadm_1  |              at /checkout/src/libcore/panicking.rs:71
unit-sawadm_1  |    9: core::result::unwrap_failed
unit-sawadm_1  |              at /checkout/src/libcore/macros.rs:23
unit-sawadm_1  |   10: <core::result::Result<T, E>>::unwrap
unit-sawadm_1  |              at /checkout/src/libcore/result.rs:782


/* the line number of the unwrap failure */

unit-sawadm_1  |   11: sawadm::blockstore::tests::test_blockstore
unit-sawadm_1  |              at src/blockstore.rs:284


unit-sawadm_1  |   12: <F as alloc::boxed::FnBox<A>>::call_box
unit-sawadm_1  |              at /checkout/src/libtest/lib.rs:1449
unit-sawadm_1  |              at /checkout/src/libcore/ops/function.rs:223
unit-sawadm_1  |              at /checkout/src/liballoc/boxed.rs:815
unit-sawadm_1  |   13: __rust_maybe_catch_panic
unit-sawadm_1  |              at /checkout/src/libpanic_unwind/lib.rs:101
unit-sawadm_1  | test blockstore::tests::test_blockstore ... FAILED
unit-sawadm_1  | 
unit-sawadm_1  | failures:
unit-sawadm_1  | 
unit-sawadm_1  | failures:
unit-sawadm_1  |     blockstore::tests::test_blockstore
unit-sawadm_1  | 
unit-sawadm_1  | test result: FAILED. 1 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out
```

This seems to me like a sufficient amount of information to figure out the source of test failures.",2018-03-29 17:30:42,2018-03-29 17:30:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1543,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377387474,https://github.com/hyperledger/sawtooth-core/pull/1543#issuecomment-377387474,vaporos,"Thanks for the example backtraces, looks good.",2018-03-29 22:08:07,2018-03-29 22:08:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1543,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377603710,https://github.com/hyperledger/sawtooth-core/pull/1543#issuecomment-377603710,nick-drozd,Updated to include the blockstore tests. An extra commit added just for the test Docker file. Docstrings and detailed commit messages added.,2018-03-30 19:31:44,2018-03-30 19:31:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1539,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376606230,https://github.com/hyperledger/sawtooth-core/pull/1539#issuecomment-376606230,boydjohnson,I'm going to write some unit tests for this.,2018-03-27 17:21:50,2018-03-27 17:21:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1539,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376613197,https://github.com/hyperledger/sawtooth-core/pull/1539#issuecomment-376613197,aludvik,"Per side-band conversation, it probably makes sense to wrap that map in a struct that abstracts the dependency tracking. That struct should also be reusable across different workloads (intkey and smallbank) since it is a common thing to do. The methods should be something like `add_dependency(key, signature)`, `get_dependencies(keys)`, and `remove_dependency(key)`.",2018-03-27 17:43:47,2018-03-27 17:43:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1539,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376933849,https://github.com/hyperledger/sawtooth-core/pull/1539#issuecomment-376933849,boydjohnson,@aludvik Thanks for the stimulating discussion. I will be reading `Code Complete` and `Refactoring`. I don't think I can be persuaded that more changes are needed.,2018-03-28 15:41:51,2018-03-28 15:41:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1538,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376209552,https://github.com/hyperledger/sawtooth-core/pull/1538#issuecomment-376209552,aludvik,Made it through the first two sections. Will take a look at the rest in a bit.,2018-03-26 15:34:56,2018-03-26 15:34:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1538,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376730895,https://github.com/hyperledger/sawtooth-core/pull/1538#issuecomment-376730895,chenette,"I pushed a fix-up commit that makes reviewer corrections and adds Go/JavaScript/Rust code examples for the xo/create event.          
 ",2018-03-28 01:37:34,2018-03-28 01:37:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1538,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377012067,https://github.com/hyperledger/sawtooth-core/pull/1538#issuecomment-377012067,chenette,"Pushed a fix to describe event attributes and add ""return"" lines to example code. I believe (hope) that this version addresses all previous reviewer comments.",2018-03-28 19:45:17,2018-03-28 19:45:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1538,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377048929,https://github.com/hyperledger/sawtooth-core/pull/1538#issuecomment-377048929,chenette,Deleted previous comment (it was for a different PR). Sorry.,2018-03-28 21:49:17,2018-03-28 21:49:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377388919,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-377388919,vaporos,"This needs a more descriptive commit message.

https://chris.beams.io/posts/git-commit/",2018-03-29 22:14:52,2018-03-29 22:14:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/383981304,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-383981304,peterschwarz,You should squash these commits together.  Second on the better commit messages - it's part of our contributor's guide.,2018-04-24 15:45:25,2018-04-24 15:45:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/384991028,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-384991028,yarasan,"OK, I removed the older commit and the commit message is updated.",2018-04-27 14:41:41,2018-04-27 14:41:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385013175,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-385013175,peterschwarz,What is the `#505` in the commit message referring to?  Please remove,2018-04-27 15:52:02,2018-04-27 15:52:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/385983909,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-385983909,yarasan,"#505 refers to the Jira issue, appended to the commit message as described by the contributor's guide. Is there a problem with the format?",2018-05-02 13:49:17,2018-05-02 13:49:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/386008943,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-386008943,peterschwarz,"If you read the commit message guide, it should be in the body of the commit message, not the summary line. 

You will also need to rebase, as there have been some issues with the listing process that have been resolved since you initially submitted this PR.",2018-05-02 15:01:31,2018-05-02 15:01:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/388086366,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-388086366,peterschwarz,"Messages look good, but it doesn’t look like the `sys.exit` comments have been addressed.",2018-05-10 15:20:09,2018-05-10 15:20:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/401768880,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-401768880,yarasan,"Sys.exit was moved from log.py to cli.py, in response to earlier comments. ",2018-07-02 11:03:51,2018-07-02 11:03:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/430782155,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-430782155,rberg2,"@yarasan Hello, if you can get this rebased I will get it merged in as soon as it builds, thanks!.",2018-10-17 20:42:50,2018-10-17 20:42:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1537,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/435148239,https://github.com/hyperledger/sawtooth-core/pull/1537#issuecomment-435148239,vaporos,@yarasan Please rebase so that it will pass the build. If you need assistance please join rocketchat #sawtooth-core-dev.,2018-11-01 18:56:48,2018-11-01 18:56:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1536,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/375712018,https://github.com/hyperledger/sawtooth-core/pull/1536#issuecomment-375712018,chenette,The Docker Compose file for this procedure is in PR #1534 and is now available in master.,2018-03-23 15:54:50,2018-03-23 16:13:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1536,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/375795830,https://github.com/hyperledger/sawtooth-core/pull/1536#issuecomment-375795830,chenette,"Pushed a fix to make Dan's corrections to the endpoint info & 8800 port numbers. This fix also reformats the the Docker container info for clarity, adds Docker & Ubuntu steps to set the transaction families on the first validator node, shows the Ubuntu start-component steps for validator node 2, and fixes several egregious typos.",2018-03-23 20:55:42,2018-03-23 20:55:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1536,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376768352,https://github.com/hyperledger/sawtooth-core/pull/1536#issuecomment-376768352,chenette,"I pushed a fix-up commit with reviewer corrections and related changes.

Note: I also changed the Ubuntu install procedure - I moved the user and root keygen commands to their own steps.  This should help clarify that both keygen steps are needed on the second validator node.
",2018-03-28 05:43:16,2018-03-28 05:43:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1536,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377049287,https://github.com/hyperledger/sawtooth-core/pull/1536#issuecomment-377049287,chenette,"Pushed another fix-up commit - this one adds ""intkey set"" and ""intkey show"" examples at the end. It also fixes minor formatting and wording issues. ",2018-03-28 21:50:45,2018-03-28 21:50:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1536,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377446834,https://github.com/hyperledger/sawtooth-core/pull/1536#issuecomment-377446834,chenette,"Pushed another fix that substantially rewrites this section. The Ubuntu steps now have a ""Prerequisites"" section that explain the bind and endpoint info. Also, the config file steps have been replaced with simpler command-line options. There's much more, but that's the high-level summary.",2018-03-30 05:11:46,2018-03-30 07:24:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1536,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377625397,https://github.com/hyperledger/sawtooth-core/pull/1536#issuecomment-377625397,chenette,"@sofiter - Thanks for your comment - it prompted us to re-evaluate whether this complicated command belonged in this procedure.  As a result, we deleted the ""sawnet proposal create"" command from this procedure (and other procedures), because we felt there wasn't a need to limit the allowed transaction types in this application development environment. Note that information on this setting will probably move to the Transaction Family Specification in an upcoming PR, but isn't there yet. In the meantime, the Architecture chapter has some information on this setting.

But if you'd still like to run this command, I think there might be some missing commas in the command you show in your comment.  (Sorry - that was my error in the version that you commented on.) I think it should be something like this:

     sawset proposal create sawtooth.validator.transaction_families='[{""family"": ""intkey"", ""version"": ""1.0""},{""family"":""sawtooth_settings"", ""version"":""1.0""},{""family"":""xo"", ""version"":""1.0""},{""family"":""sawtooth_validator_registry"", ""version"":""1.0""}]'

Also, my local expert suspects there might be a problem with your public/private keypair - he wonders if they got generated by root instead of by your username. (So they might be in the wrong location.) 

Anyway, if you'd like more help with this issue, please go to the #sawtooth channel on Rocket Chat; - the folks there can help you directly. https://chat.hyperledger.org/channel/sawtooth",2018-03-30 21:17:38,2018-03-30 21:18:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1535,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376216620,https://github.com/hyperledger/sawtooth-core/pull/1535#issuecomment-376216620,peterschwarz,@boydjohnson Tested building locally - any recommendation on how to verify?,2018-03-26 15:55:03,2018-03-26 15:55:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1535,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376217907,https://github.com/hyperledger/sawtooth-core/pull/1535#issuecomment-376217907,boydjohnson,"@peterschwarz From a ubuntu container do 2 steps: `dpkg -c <name of deb>.deb` and it will show the contents of the debian package including the built executable. Then `dpkg -i <name of deb>.deb` and verify you can run the command installed with the package, so sawadm or smallbank-workload. Also `./bin/build_all installed` will put the debs in sawtooth-core/debs/rust.",2018-03-26 15:58:56,2018-03-26 15:58:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1534,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/375539766,https://github.com/hyperledger/sawtooth-core/pull/1534#issuecomment-375539766,chenette,"I don't know YAML, so I can't comment on the details, but all the right pieces are there.  This is what we need to document the Docker procedure for adding multiple nodes to a Sawtooth network. THANKS!!!

P.S.  Note for posterity (aka myself): In addition to the intkey and xo transaction processors, this Compose file also includes the settings-tp and poet-validator-registry-tp transaction processors. So it matches the upcoming documentation.
",2018-03-23 04:16:20,2018-03-23 04:16:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1533,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377390325,https://github.com/hyperledger/sawtooth-core/pull/1533#issuecomment-377390325,vaporos,"Usually, we are backporting to a staging branch, then merging that staging branch to 1-0 after testing it on an LR network.

@peterschwarz @dcmiddle Thoughts on skipping the 1-0-staging-00 branch based on the nature of this change? Seems pretty safe but then we aren't testing the specific resulting commit id (which @dcmiddle has advocated for previousy).  I think it should probably go to 1-0-staging-00 unless there is a specific reason not to do that.",2018-03-29 22:21:36,2018-03-29 22:21:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1533,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/378657703,https://github.com/hyperledger/sawtooth-core/pull/1533#issuecomment-378657703,peterschwarz,"This should be re-opened against `1-0-staging-00` branch, which 1.0.3 will be produced from ",2018-04-04 16:13:41,2018-04-04 16:13:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1532,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/374963203,https://github.com/hyperledger/sawtooth-core/pull/1532#issuecomment-374963203,boydjohnson,"I've done manual testing by starting up the `intkey-workload` and `smallbank-workload` before starting the REST api and validator. Once they have run for 20-30 seconds, I start up the REST api and validator. There are no invalid transactions in the logging output.",2018-03-21 14:47:27,2018-03-21 14:47:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1531,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/375401631,https://github.com/hyperledger/sawtooth-core/pull/1531#issuecomment-375401631,dcmiddle,No regressions observed on one-oh LR network after 24 hrs. ,2018-03-22 17:57:51,2018-03-22 17:57:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1526,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373814611,https://github.com/hyperledger/sawtooth-core/pull/1526#issuecomment-373814611,peterschwarz,Do you have a recommended way to test this?,2018-03-16 19:04:40,2018-03-16 19:05:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1526,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/374221337,https://github.com/hyperledger/sawtooth-core/pull/1526#issuecomment-374221337,aludvik,"@peterschwarz I started up a validator, rest api, go tp, and workload and messed around with killing the validator and go tp to make sure things continued to work.",2018-03-19 14:00:08,2018-03-19 14:00:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1521,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/380186011,https://github.com/hyperledger/sawtooth-core/pull/1521#issuecomment-380186011,rberg2,"Hello.
We have reworked the permissions on our build server, if you rebase, this commit should build.",2018-04-10 17:38:16,2018-04-10 17:38:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1521,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/430349985,https://github.com/hyperledger/sawtooth-core/pull/1521#issuecomment-430349985,dcmiddle,@DaVallejoP thanks again for the commit. We can't merge this without an updated commit message including a sign-off. You can do that by amending your commit and then force pushing back to your fork. (see `git commit --amend` if you are not familiar or feel free to ping someone here or on chat: https://chat.hyperledger.org/channel/sawtooth ). If we don't hear back from you soon I'll assume you've moved on and I'll close this for you.,2018-10-16 18:37:46,2018-10-16 18:37:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1521,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/435147391,https://github.com/hyperledger/sawtooth-core/pull/1521#issuecomment-435147391,vaporos,"Closed due to missing DCO sign-off. If fixed, please re-open.",2018-11-01 18:54:10,2018-11-01 18:54:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1520,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373759368,https://github.com/hyperledger/sawtooth-core/pull/1520#issuecomment-373759368,chenette,"I have made the changes and corrections from Adam's review.  In addition to the simple corrections and wording tweaks, I made two significant changes: 

- I removed the two sections on other start-up options for the validator and transaction processors, and replaced them with a link to the relevant command in the CLI Command Reference.

- I kept the info about being able to start the transaction processors before the validator, but I reworded it and put it in the intro section as a note. ",2018-03-16 15:58:31,2018-03-16 15:58:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1517,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373419252,https://github.com/hyperledger/sawtooth-core/pull/1517#issuecomment-373419252,jsmitchell,"Can you split these into two PRs, or just submit a PR with the database get() commit by itself? The settings view change will require more discussion given the need for the cache to be aware of intra-block txns which change settings and their potential effect on downstream txns in that block.",2018-03-15 15:35:26,2018-03-15 15:35:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1517,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373425339,https://github.com/hyperledger/sawtooth-core/pull/1517#issuecomment-373425339,nick-drozd,Closing in favor of https://github.com/hyperledger/sawtooth-core/pull/1522,2018-03-15 15:51:55,2018-03-15 15:51:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1515,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373128837,https://github.com/hyperledger/sawtooth-core/pull/1515#issuecomment-373128837,boydjohnson,"```
./intkey-workload --wildcard 7.9
Value must be between 0.0 and 1.0, inclusively
```
This is what one of the error messages looks like now.",2018-03-14 18:31:19,2018-03-14 18:31:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1512,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/372438542,https://github.com/hyperledger/sawtooth-core/pull/1512#issuecomment-372438542,nick-drozd,"These were all seen just before an occurrence of the ""Too many open files"" bug.",2018-03-12 19:42:58,2018-03-12 19:43:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1511,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/372438945,https://github.com/hyperledger/sawtooth-core/pull/1511#issuecomment-372438945,aludvik,Created this bug to track the issue: https://jira.hyperledger.org/browse/STL-1117,2018-03-12 19:44:30,2018-03-12 19:44:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1511,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/372455677,https://github.com/hyperledger/sawtooth-core/pull/1511#issuecomment-372455677,nick-drozd,"I tried running this without https://github.com/hyperledger/sawtooth-core/commit/97c3696daef315e1efcd34dd9f1d58d12284aacc. The Python failed, which is good, but the Docker container hung. That's not so bad, I guess, since it still gates changes that fail the test.",2018-03-12 20:42:59,2018-03-12 20:42:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1510,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/372752524,https://github.com/hyperledger/sawtooth-core/pull/1510#issuecomment-372752524,nick-drozd,"Here are before and after Yappi graphs from a network of three validators running 3000 smallbank transactions:

Before:
![master-1](https://user-images.githubusercontent.com/25748894/37358966-67406654-26ba-11e8-97bc-c4e7e8dd7bbd.png)

After:
![callback-1](https://user-images.githubusercontent.com/25748894/37358991-74046d90-26ba-11e8-849e-a22153da464a.png)

Overall they don't look dramatically different. The biggest difference that I can tell is that the parallel scheduler's `unschedule_incomplete_batches` goes from taking 4% of CPU time to 5.5%. This suggests that more batches are being processed than can be published, which is what we would expect if throughput really is increased.",2018-03-13 17:35:13,2018-03-13 17:35:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1510,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/372765426,https://github.com/hyperledger/sawtooth-core/pull/1510#issuecomment-372765426,nick-drozd,"Here are before and after committed transaction graphs from the first 12 hours of LR runs:

Before:
![screen shot 2018-03-13 at 1 05 25 pm](https://user-images.githubusercontent.com/25748894/37361084-05a39384-26c0-11e8-88aa-0b79cab8bb1f.png)

After:
![screen shot 2018-03-13 at 1 05 12 pm](https://user-images.githubusercontent.com/25748894/37361093-0b499428-26c0-11e8-95fc-3455fdd2f62c.png)

(One of the nodes running this PR segfaulted, but that is likely unrelated to the changes here.)",2018-03-13 18:12:46,2018-03-13 18:12:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/372370067,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-372370067,askmish,"@vaporos Here's what I get on my ubuntu 16.04.4 LTS x64 machine:
`N: Skipping acquire of configured file 'universe/binary-i386/Packages' as repository 'http://repo.sawtooth.me/ubuntu/1.0/stable xenial InRelease' doesn't support architecture 'i386'`

This is the simplest, standard fix to limit arch to only 64-bit.",2018-03-12 16:21:48,2018-03-12 16:21:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/372731500,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-372731500,rbuysse,How can I reproduce this? I don't experience this behavior on a fresh ubuntu machine.,2018-03-13 16:36:14,2018-03-13 16:36:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/372733136,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-372733136,askmish,"I followed these steps:
$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD
$ sudo add-apt-repository 'deb http://repo.sawtooth.me/ubuntu/1.0/stable xenial universe'
$ sudo apt-get update

The output I get is for apt-get update.

I can consistently reproduce this issue on all ubuntu machines I have.",2018-03-13 16:41:07,2018-03-13 16:42:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373131684,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-373131684,askmish,ping,2018-03-14 18:39:57,2018-03-14 18:39:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373436313,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-373436313,vaporos,"An example where this is done outside our project:

https://docs.docker.com/install/linux/docker-ce/ubuntu/#set-up-the-repository

Do we know of others?",2018-03-15 16:22:51,2018-03-15 16:22:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373440893,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-373440893,vaporos,"I think we have consensus that this is an okay approach.  However, I would like us to do this then in all places which reference these repos and not just the app dev guide.  (Docker images for example, etc.)",2018-03-15 16:36:13,2018-03-15 16:36:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373442578,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-373442578,askmish,Ok. we'll put up a separate PR for this.,2018-03-15 16:41:06,2018-03-15 16:41:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373448385,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-373448385,vaporos,Let's do it in this PR please.,2018-03-15 16:57:41,2018-03-15 16:57:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/375033004,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-375033004,vaporos,Thoughts on the best way to test this? Seems like someone should manually walk through the dev guide carefully. Anything else?,2018-03-21 17:40:45,2018-03-21 17:40:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/375035092,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-375035092,askmish,"The CI build has verfied changes in docker/ci dirs. For changes in docs, manual review needed.",2018-03-21 17:46:32,2018-03-21 17:46:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1507,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376285044,https://github.com/hyperledger/sawtooth-core/pull/1507#issuecomment-376285044,rberg2,"To see this warning you need to have the i386 architecture enabled on a multi-arch system, I believe amd64 Ubuntu does by default. To check which archs are enabled ```dpkg --print-foreign-architectures``` I have tested this change in a VM and it does silence the i386 warning on multi-arch systems.
",2018-03-26 19:34:02,2018-03-26 19:34:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1501,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371609098,https://github.com/hyperledger/sawtooth-core/pull/1501#issuecomment-371609098,pankajgoyal2,probably I need to update the commit message for my latest push.,2018-03-08 20:10:30,2018-03-08 20:10:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1500,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373034369,https://github.com/hyperledger/sawtooth-core/pull/1500#issuecomment-373034369,aludvik,"@john-jam Good catch!

We need to tidy up this PR a little in order to get it merged. In order for this to pass the DCO, all commits need to be signed off `git commit -s ...`. It looks like you have two out of three commits that are not signed off right now. However, it looks like only one of the commits is needed. Our workflow in this case is to do a `git rebase -i upstream/master` and drop all the unneeded commits, keeping only the one signed off commit that fixes the issue. (Rebasing in git: https://git-scm.com/book/id/v2/Git-Branching-Rebasing, Interactive rebasing: https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History) In the above example, upstream is the Hyperledger fork: `github.com:hyperledger/sawtooth-core.git`

When you have done that, you can check that the rebase was successful by doing `git log` and confirming that you have just the one commit you kept, followed by the head of master.

Details on DCO: https://github.com/probot/dco#how-it-works
Details on Contributing to Sawtooth: https://sawtooth.hyperledger.org/docs/core/nightly/master/community/contributing.html",2018-03-14 14:11:25,2018-03-14 14:11:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1500,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373034858,https://github.com/hyperledger/sawtooth-core/pull/1500#issuecomment-373034858,aludvik,"Also, I noticed that this line also includes a break that should be a continue if you want to fix that while you're at it: https://github.com/hyperledger/sawtooth-core/blob/master/sdk/go/src/sawtooth_sdk/processor/worker.go#L142",2018-03-14 14:12:49,2018-03-14 14:12:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1500,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373042693,https://github.com/hyperledger/sawtooth-core/pull/1500#issuecomment-373042693,john-jam,Okay I just did it but I'm not able to push on my branch (Your branch and 'origin/go_sdk_bug_fix' have diverged). I don't know why ?,2018-03-14 14:34:06,2018-03-14 14:34:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1500,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373045977,https://github.com/hyperledger/sawtooth-core/pull/1500#issuecomment-373045977,john-jam,"Okay, my bad... I just had to force push",2018-03-14 14:43:14,2018-03-14 14:43:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1500,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/375890921,https://github.com/hyperledger/sawtooth-core/pull/1500#issuecomment-375890921,grkvlt,"@john-jam can you rebase this PR against `master` please, so that the tests can run properly? something like `git pull --rebase origin master && git push --force john-jam go_sdk_bug_fix` with appropriate remote names...",2018-03-24 13:53:15,2018-03-24 13:53:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1500,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/375896508,https://github.com/hyperledger/sawtooth-core/pull/1500#issuecomment-375896508,john-jam,"Hi @grkvlt, my branch is now rebased against master (hyperledger sawtooth-core with Merge pull request #1532 from boydjohnson/STL-1052.dependencies as last commit) but the jenkins integration continues to fail. I had the same unsuccessful check when I just forked and committed. Please tell me if something is wrong ? Thx",2018-03-24 15:14:25,2018-03-24 15:14:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1500,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/376955374,https://github.com/hyperledger/sawtooth-core/pull/1500#issuecomment-376955374,aludvik,"@john-jam sorry for the delay in getting back to this. We have a whitelist of users whose PRs are allowed to build on our CI, which is why your build was failing. I did a one-time manual override of this check for you, so it should build now. Feel free to ping me on https://chat.hyperledger.org/ if I get distracted again (username adamludvik)",2018-03-28 16:46:11,2018-03-28 16:46:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1500,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377391490,https://github.com/hyperledger/sawtooth-core/pull/1500#issuecomment-377391490,vaporos,"The commit message is good, but it would be even better with additional explanation of the bug that it fixes.

https://chris.beams.io/posts/git-commit/",2018-03-29 22:26:44,2018-03-29 22:26:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1500,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377516411,https://github.com/hyperledger/sawtooth-core/pull/1500#issuecomment-377516411,john-jam,@vaporos @aludvik commit edited & rebased against master :) ,2018-03-30 12:42:06,2018-03-30 12:42:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1499,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371841878,https://github.com/hyperledger/sawtooth-core/pull/1499#issuecomment-371841878,nick-drozd,Updated to take out most of the big yaml files and reduce the size of the remaining big one (from ~1200 lines to ~800).,2018-03-09 15:18:17,2018-03-09 15:18:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1498,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371857116,https://github.com/hyperledger/sawtooth-core/pull/1498#issuecomment-371857116,boydjohnson,"The `unsatisfiable` and `wildcard` options get parsed, but do not do anything right now. I will add more work soon that will send transactions with an unsatisfiable dependency, and wildcarded addresses.",2018-03-09 16:08:24,2018-03-09 16:08:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1497,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371190578,https://github.com/hyperledger/sawtooth-core/pull/1497#issuecomment-371190578,peterschwarz,Updated to add unit tests and properly prevent the concurrent modification of the data.,2018-03-07 16:12:31,2018-03-07 16:12:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1496,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370961514,https://github.com/hyperledger/sawtooth-core/pull/1496#issuecomment-370961514,aludvik,"For the ignorant like myself:
http://www.tldp.org/HOWTO/TCP-Keepalive-HOWTO/overview.html
http://api.zeromq.org/4-2:zmq-setsockopt",2018-03-06 23:05:42,2018-03-06 23:05:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1494,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370962197,https://github.com/hyperledger/sawtooth-core/pull/1494#issuecomment-370962197,nick-drozd,"I ran this without 97c3696 and it failed, which is good. However, `run_docker_test` hung and did not exit. This is the same behavior I was seeing yesterday running the state verifier locally. Is there any way to fix that?",2018-03-06 23:08:31,2018-03-06 23:08:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1494,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371166405,https://github.com/hyperledger/sawtooth-core/pull/1494#issuecomment-371166405,aludvik,Updated timeout and collapsed function arguments,2018-03-07 15:02:07,2018-03-07 15:02:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1493,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370860463,https://github.com/hyperledger/sawtooth-core/pull/1493#issuecomment-370860463,grkvlt,See also https://github.com/peterschwarz/sawtooth-core/pull/2 which backports to @peterschwarz 1.0.2 branch,2018-03-06 17:26:36,2018-03-06 17:26:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1493,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370959622,https://github.com/hyperledger/sawtooth-core/pull/1493#issuecomment-370959622,aludvik,@grkvlt can you add some more information about what this change is fixing?,2018-03-06 22:57:59,2018-03-06 22:57:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1493,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371145306,https://github.com/hyperledger/sawtooth-core/pull/1493#issuecomment-371145306,grkvlt,"@aludvik I will need to recheck this issue, it may be that it is already fixed by a change made in the grafana Dockerfile by @dplumb94 to fix the version number",2018-03-07 13:55:53,2018-03-07 13:56:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1493,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/373066724,https://github.com/hyperledger/sawtooth-core/pull/1493#issuecomment-373066724,grkvlt,Not required,2018-03-14 15:38:53,2018-03-14 15:38:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1490,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370959210,https://github.com/hyperledger/sawtooth-core/pull/1490#issuecomment-370959210,aludvik,"@askmish I have some commits on an old branch that add a bunch of information about how SGX and PoET work that we decided not to merge awhile ago. If you are working on PoET and/or working on documenting PoET, you may or may not find them useful: https://github.com/aludvik/sawtooth-core/commits/poet-primer",2018-03-06 22:56:25,2018-03-06 22:56:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1489,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371532580,https://github.com/hyperledger/sawtooth-core/pull/1489#issuecomment-371532580,peterschwarz,"@boydjohnson With the current implementation, since every handler is isolated and can be reordered, you would need to either a) conventionally added it first, or b) every handler would need to possibly parse the content.",2018-03-08 16:02:45,2018-03-08 16:02:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1489,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/372864195,https://github.com/hyperledger/sawtooth-core/pull/1489#issuecomment-372864195,nick-drozd,Still lacks client response and unit tests -- I will add them after the LR run.,2018-03-14 00:25:46,2018-03-14 00:25:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1489,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/374794689,https://github.com/hyperledger/sawtooth-core/pull/1489#issuecomment-374794689,nick-drozd,"Two LR networks, one without message preprocessors and one with, were run with a timer measuring how long it took for a gossip message to pass through all its handlers (see https://github.com/hyperledger/sawtooth-core/pull/1527). 

Here is the gossip throughput for the first few hours of the run without preprocessors:

![screen shot 2018-03-20 at 5 43 14 pm](https://user-images.githubusercontent.com/25748894/37688167-a30f3ad6-2c6c-11e8-887f-67f0a9478678.png)

Here is the gossip throughput for the run with preprocessors:

![screen shot 2018-03-20 at 5 43 58 pm](https://user-images.githubusercontent.com/25748894/37688185-b2a43992-2c6c-11e8-9e2f-28a789b734d7.png)

Note the units on the y-axes -- the gossip-handling time goes from taking several minutes to several seconds.

Now, this can't be called an unqualified success. Due to the vagaries of the workload generator, the run with preprocessors didn't have any invalid transactions, while the run without did. The differences between the two graphs was probably influenced by this. Still, it seems likely that the preprocessors had a significant positive impact on gossip message throughput.",2018-03-20 23:43:08,2018-03-20 23:43:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1489,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/375083312,https://github.com/hyperledger/sawtooth-core/pull/1489#issuecomment-375083312,nick-drozd,"Graphs from a span of ~21 hours

Before:
<img width=""1255"" alt=""screen shot 2018-03-21 at 10 17 27 am"" src=""https://user-images.githubusercontent.com/25748894/37735346-bc0ab7ea-2d1b-11e8-99b7-db5e6f54e556.png"">

After:
<img width=""1250"" alt=""screen shot 2018-03-21 at 10 19 39 am"" src=""https://user-images.githubusercontent.com/25748894/37735351-c2cb5b66-2d1b-11e8-9dbd-4c9331de3583.png"">",2018-03-21 20:23:59,2018-03-21 20:23:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1487,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370466625,https://github.com/hyperledger/sawtooth-core/pull/1487#issuecomment-370466625,vaporos,"This is fantastic.

Recently, we have been discussing breaking off some of the SDKs from the core repo (Java and C++ for example) since the rest of core does not depend upon them. Our only barrier is really the time to do it (as it requires incremental build changes, etc.).

Thoughts on starting the dotnet SDK in a sawtooth-dotnet repo)?  I could coordinate repo creation and we could do the PR review there, if that is how we want to proceed.",2018-03-05 15:59:19,2018-03-05 15:59:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1487,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370515727,https://github.com/hyperledger/sawtooth-core/pull/1487#issuecomment-370515727,tmarkovski,"I’m good either way, if the question was directed at me. I can resubmit to another repo. I think a separate repo will give more flexibility to setup ci and publish packages. Would .proto files be included with the repo or fetched from the core repo during build process?",2018-03-05 18:27:53,2018-03-05 19:42:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1487,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370516099,https://github.com/hyperledger/sawtooth-core/pull/1487#issuecomment-370516099,tmarkovski,Accidental close/reopen :),2018-03-05 18:29:01,2018-03-05 18:29:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1487,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/374092691,https://github.com/hyperledger/sawtooth-core/pull/1487#issuecomment-374092691,tmarkovski,Moving PR to sawtooth-sdk-dotnet,2018-03-19 03:41:37,2018-03-19 03:41:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1486,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369826469,https://github.com/hyperledger/sawtooth-core/pull/1486#issuecomment-369826469,tmarkovski,Closing to resubmit with DCO,2018-03-02 05:41:18,2018-03-02 05:41:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1485,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369752435,https://github.com/hyperledger/sawtooth-core/pull/1485#issuecomment-369752435,chenette,"@vaporos - Are you saying that we should ADD line numbers to all the code examples?  

Currently, only these two items in ""Transactions and Batches"" have line numbers.  Dozens of other code examples don't have line numbers (at a rough estimate, 113 code blocks).
",2018-03-01 22:24:49,2018-03-01 22:24:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1485,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369756275,https://github.com/hyperledger/sawtooth-core/pull/1485#issuecomment-369756275,chenette,"Basically, my question is ""Why do two protobuf code chunks use line numbers and the others don't""?  But that's a different issue than fixing the line-height mismatch when :linenos: is used. I agree that we should know about the correct fix in case we should want to include line numbers on a code block.

Likewise, line numbers on --help usage chunks is also a separate issue.  Should I remove the CLI and SysAdmin changes from this PR and put them in a separate PR?",2018-03-01 22:40:22,2018-03-01 22:40:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1485,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370564054,https://github.com/hyperledger/sawtooth-core/pull/1485#issuecomment-370564054,chenette,"I moved the --help text  changes to their own PR, because they're a separate issue.  See PR #1491.",2018-03-05 21:01:34,2018-03-05 21:01:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1485,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370576614,https://github.com/hyperledger/sawtooth-core/pull/1485#issuecomment-370576614,chenette,Closing this PR. I don't know enough about sphinx themes and Python to apply the real fix (see my info in STL-103). ,2018-03-05 21:42:31,2018-03-05 21:42:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1484,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369681125,https://github.com/hyperledger/sawtooth-core/pull/1484#issuecomment-369681125,peterschwarz,Also fixes [STL-1071](https://jira.hyperledger.org/browse/STL-1071),2018-03-01 18:14:48,2018-03-01 18:14:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1483,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369683124,https://github.com/hyperledger/sawtooth-core/pull/1483#issuecomment-369683124,rbuysse,"Package info:

```
# dpkg -I python3-sawtooth-ias-client_1.1.1+dev357.gdc10fa5-1_all.deb 
 new debian package, version 2.0.
 size 3444 bytes: control archive=999 bytes.
     371 bytes,    11 lines      control              
     807 bytes,     7 lines      md5sums              
     177 bytes,     9 lines   *  postinst             #!/bin/sh
     427 bytes,    12 lines   *  prerm                #!/bin/sh
 Package: python3-sawtooth-ias-client
 Source: sawtooth-ias-client
 Version: 1.1.1+dev357.gdc10fa5-1
 Architecture: all
 Maintainer: unknown <unknown@unknown>
 Installed-Size: 22
 Depends: python3-requests, python3:any (>= 3.3.2-2~)
 Section: python
 Priority: optional
 Homepage: https://github.com/hyperledger/sawtooth-core
 Description: Sawtooth Intel Attestation Service Client
```",2018-03-01 18:21:21,2018-03-01 18:21:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1483,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369759365,https://github.com/hyperledger/sawtooth-core/pull/1483#issuecomment-369759365,aludvik,We should test that upgrading still works with this,2018-03-01 22:53:18,2018-03-01 22:53:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1482,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369379095,https://github.com/hyperledger/sawtooth-core/pull/1482#issuecomment-369379095,grkvlt,"Can we add #1463 to this as well, please?",2018-02-28 20:53:47,2018-02-28 20:53:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1482,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369415676,https://github.com/hyperledger/sawtooth-core/pull/1482#issuecomment-369415676,peterschwarz,Added #1463 ,2018-02-28 23:07:59,2018-02-28 23:07:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1482,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369576478,https://github.com/hyperledger/sawtooth-core/pull/1482#issuecomment-369576478,grkvlt,"is the build failure because of #1463 or is it unrelated? it looks like a timeout problem:
> `ERROR:__main__:Command '['docker-compose', '-p', 'f4552690ceca87a9cc387dc180113b2a2e47efc4376594306a803e7fcac64828', '-f', './sdk/examples/xo_python/tests/test_tp_xo_java.yaml', 'up', '--abort-on-container-exit']' timed out after 599.999541759491 seconds`",2018-03-01 12:28:08,2018-03-01 12:28:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1482,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370270729,https://github.com/hyperledger/sawtooth-core/pull/1482#issuecomment-370270729,dcmiddle,@chenette can you please look thru the build artifacts and make sure you got what you were expecting from the doc backports,2018-03-04 22:35:16,2018-03-04 22:35:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1482,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371597336,https://github.com/hyperledger/sawtooth-core/pull/1482#issuecomment-371597336,peterschwarz,@dcmiddle added #1444 ,2018-03-08 19:31:03,2018-03-08 19:31:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1478,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370950064,https://github.com/hyperledger/sawtooth-core/pull/1478#issuecomment-370950064,aludvik,"Re-requested reviews after some substantial additions:
- renamed len() to count()
- added count() to database abc and other implementations
- added unit tests for new methods
- updated dashboard",2018-03-06 22:21:05,2018-03-06 22:21:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1472,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/368555599,https://github.com/hyperledger/sawtooth-core/pull/1472#issuecomment-368555599,askmish,More appropriate as a documentation than script change. Closing this PR.,2018-02-26 16:13:38,2018-02-26 16:13:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1468,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369045667,https://github.com/hyperledger/sawtooth-core/pull/1468#issuecomment-369045667,boydjohnson,I rebased on master after #1452 was merged. I am still working on organizing the test files with the commits and trying to come up with a means of reducing the overall lines committed.,2018-02-27 22:13:40,2018-02-27 22:13:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1468,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369358324,https://github.com/hyperledger/sawtooth-core/pull/1468#issuecomment-369358324,nick-drozd,"Two suggestions:

1. The sorting commit is an improvement rather than a bug fix, so it
   should probably go in a separate PR so it can be discussed,
   profiled, etc. without holding up the bug fixes.
   
2. The data structure commit looks like a refactor, but it also
   includes a change in behavior. It would be easier to see what's
   going on if the refactor were done before the behavior change.",2018-02-28 19:40:57,2018-02-28 19:40:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1468,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371313852,https://github.com/hyperledger/sawtooth-core/pull/1468#issuecomment-371313852,nick-drozd,Closing in favor of https://github.com/hyperledger/sawtooth-core/pull/1499,2018-03-07 22:50:41,2018-03-07 22:50:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1465,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367907183,https://github.com/hyperledger/sawtooth-core/pull/1465#issuecomment-367907183,chenette,"Thanks, Dan. I'm pleased that you know the proper grammatical term for my aversion. :-) ",2018-02-23 04:35:14,2018-02-23 04:35:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1462,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369026707,https://github.com/hyperledger/sawtooth-core/pull/1462#issuecomment-369026707,peterschwarz,The changes from master have been included in #1482 ,2018-02-27 21:09:03,2018-02-27 21:09:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1456,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/368606404,https://github.com/hyperledger/sawtooth-core/pull/1456#issuecomment-368606404,peterschwarz,We should consider refactoring some of this. There's a great deal of intertwined responsibility between the Executor and the ProcessorIteratorCollection with respect to processors and their availability.  There should be an appropriate separation of concerns here. ,2018-02-26 18:48:30,2018-02-26 18:48:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1455,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367390971,https://github.com/hyperledger/sawtooth-core/pull/1455#issuecomment-367390971,nick-drozd,"The first commit could use a more informative commit message -- ""Improve usability"" is vague and subjective. Maybe ""Change metrics API to match logging"" or something like that.",2018-02-21 16:47:16,2018-02-21 16:47:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1455,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367747768,https://github.com/hyperledger/sawtooth-core/pull/1455#issuecomment-367747768,aludvik,Moved usage to docstring and fixed dashboard,2018-02-22 16:59:35,2018-02-22 16:59:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1455,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/368092837,https://github.com/hyperledger/sawtooth-core/pull/1455#issuecomment-368092837,aludvik,@peterschwarz updated based on feedback,2018-02-23 18:13:50,2018-02-23 18:13:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1454,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366798374,https://github.com/hyperledger/sawtooth-core/pull/1454#issuecomment-366798374,aludvik,@dcmiddle @vaporos can you approve?,2018-02-19 20:43:29,2018-02-19 20:43:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1453,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367085398,https://github.com/hyperledger/sawtooth-core/pull/1453#issuecomment-367085398,aludvik,@peterschwarz create a 1-0 backport PR after merging,2018-02-20 19:10:56,2018-02-20 19:10:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1452,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367116322,https://github.com/hyperledger/sawtooth-core/pull/1452#issuecomment-367116322,boydjohnson,"```
usage: gen-scheduler-test [-h] [-a ADDRESSES] [--namespace NAMESPACE] [-w WILDCARD]
                     [-t TRANSACTIONS] [-b BATCHES] [-v VALIDITY] [-i INPUTS]
                     [-o OUTPUTS]
                     file

positional arguments:
  file                  The filepath and name relative to
                        validator/tests/test_scheduler/data

optional arguments:
  -h, --help            show this help message and exit
  -s SEED, --seed SEED The seed to make the random generator reproduceable
  -a ADDRESSES, --addresses ADDRESSES
                        The number of addresses in total
  --namespace NAMESPACE
                        A namespace, float comma separated pair specifying a
                        namespace to use for some portion of the addresses
  -w WILDCARD, --wildcard WILDCARD
                        A comma separated quad specifying min and max length
                        for inputs then outputs
  -t TRANSACTIONS, --transactions TRANSACTIONS
                        A comma separated pair of numbers for min and max
                        transactions per batch
  -b BATCHES, --batches BATCHES
                        The number of batches to produce
  -v VALIDITY, --validity VALIDITY
                        A number between 0 and 1 specifying the probability of
                        invalid transactions
  -i INPUTS, --inputs INPUTS
                        A comma separated pair specifying the minimum and
                        maximum number of addresses for inputs
  -o OUTPUTS, --outputs OUTPUTS
                        A comma separated pair specifying the minimum and
                        maximum number of addresses for outputs
```",2018-02-20 20:56:21,2018-02-26 20:03:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1452,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/368057785,https://github.com/hyperledger/sawtooth-core/pull/1452#issuecomment-368057785,boydjohnson,Renamed the cli tool to `gen-scheduler-test`.,2018-02-23 16:20:21,2018-02-23 16:20:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1452,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/368631860,https://github.com/hyperledger/sawtooth-core/pull/1452#issuecomment-368631860,boydjohnson,"An example of what the cli tool leaves on the top of a file
```
#
#
# Do not edit this file as it is machine generated. It can be reproduced with the following command.
# gen-scheduler-test --seed 9004174202598863464 -a 20 --namespace aaaaaa,.5 -w 70,70,70,70 -t 2,5 -b 20 -v 1.0 -i 2,5 -o 2,5 <filename>
#
#
```",2018-02-26 20:04:15,2018-02-26 20:04:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1451,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367003129,https://github.com/hyperledger/sawtooth-core/pull/1451#issuecomment-367003129,nick-drozd,Looks like you have some rebase weirdness with one of Peter's commits.,2018-02-20 14:56:17,2018-02-20 14:56:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1449,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366993477,https://github.com/hyperledger/sawtooth-core/pull/1449#issuecomment-366993477,nick-drozd,"I suggest running all this through Standard JS.

From the `xo_javascript` directory:

```
$ standard --fix
standard: Use JavaScript Standard Style (https://standardjs.com)
  /Users/drozd/project/sawtooth-core/sdk/examples/xo_javascript/xo_handler.js:20:7: 'crypto' is assigned a value but never used.
  /Users/drozd/project/sawtooth-core/sdk/examples/xo_javascript/xo_handler.js:117:9: Identifier 'xo_state' is not in camel case.
  /Users/drozd/project/sawtooth-core/sdk/examples/xo_javascript/xo_handler.js:135:20: Expected '!==' and instead saw '!='.
```

Those three errors have to be fixed manually, but the `--fix` flag fixes all boring whitespace errors in-place.

Is Standard JS actually a widely followed standard? I don't know, but the rest of the JS SDK conforms to it, and Intkey JS too I think. Maybe it should be added as another pass during the linting stage of the build. It's not configurable, but [that's touted as a feature](https://standardjs.com/#i-disagree-with-rule-x-can-you-change-it):

> I disagree with rule X, can you change it?
>
> No. The whole point of standard is to save you time by avoiding bikeshedding about code style. There are lots of debates online about tabs vs. spaces, etc. that will never be resolved. These debates just distract from getting stuff done. At the end of the day you have to 'just pick something', and that's the whole philosophy of standard -- its a bunch of sensible 'just pick something' opinions. Hopefully, users see the value in that over defending their own opinions.",2018-02-20 14:26:59,2018-02-20 14:26:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1449,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367018713,https://github.com/hyperledger/sawtooth-core/pull/1449#issuecomment-367018713,boydjohnson,Due to a rebase the commits show up on Github as out of order.,2018-02-20 15:42:48,2018-02-20 15:42:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1446,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367478096,https://github.com/hyperledger/sawtooth-core/pull/1446#issuecomment-367478096,rberg2,"Deb package depends Before:
Depends: python3-cryptography, python3-protobuf, python3-sawtooth-poet-common, python3-sawtooth-signing, python3-sawtooth-validator, python3:any (>= 3.3.2-2~)
After:
Depends: python3-cryptography (>= 1.7.1), python3-protobuf, python3-sawtooth-poet-common, python3-sawtooth-signing, python3-sawtooth-validator, python3:any (>= 3.3.2-2~)",2018-02-21 21:27:04,2018-02-21 21:27:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1446,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/369027184,https://github.com/hyperledger/sawtooth-core/pull/1446#issuecomment-369027184,peterschwarz,Closed in favor of #1482,2018-02-27 21:10:47,2018-02-27 21:10:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1445,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366439788,https://github.com/hyperledger/sawtooth-core/pull/1445#issuecomment-366439788,benoitrazet,I tested the branch against the scenario described in https://jira.hyperledger.org/browse/STL-1063 and the bug do not show up again. It's all good.,2018-02-17 12:55:55,2018-02-17 12:55:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1444,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/371471710,https://github.com/hyperledger/sawtooth-core/pull/1444#issuecomment-371471710,dcmiddle,@peterschwarz can you add this to 1.0.2 backports?,2018-03-08 12:21:02,2018-03-08 12:21:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1443,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366218471,https://github.com/hyperledger/sawtooth-core/pull/1443#issuecomment-366218471,askmish,Solved npm install problems when behind proxy for javascript builds,2018-02-16 12:04:03,2018-02-16 12:04:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1442,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366144939,https://github.com/hyperledger/sawtooth-core/pull/1442#issuecomment-366144939,benoitrazet,"I tested the branch against the scenario described in STL-1064 and it looks like this PR is fixing the bug described in the ticket. I even tried to increase the load of testing to see where would be the next breaking point and it appears that the validator crashed with an error code 137, which can very well be docker killing the containers because of heavy load.",2018-02-16 05:04:03,2018-02-16 05:04:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1442,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366327289,https://github.com/hyperledger/sawtooth-core/pull/1442#issuecomment-366327289,peterschwarz,Added code to shutdown the threadpool.  Please re-review.,2018-02-16 18:58:37,2018-02-16 18:58:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1441,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367470633,https://github.com/hyperledger/sawtooth-core/pull/1441#issuecomment-367470633,vaporos,Retro-approved for backport.,2018-02-21 21:01:12,2018-02-21 21:01:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1440,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366729296,https://github.com/hyperledger/sawtooth-core/pull/1440#issuecomment-366729296,rberg2,@aludvik I have dropped the commit to docker/sawtooth-int-block-info-tp,2018-02-19 15:40:28,2018-02-19 15:40:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1439,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366786696,https://github.com/hyperledger/sawtooth-core/pull/1439#issuecomment-366786696,peterschwarz,Part of the commit message should include the justification for the change.,2018-02-19 19:42:44,2018-02-19 19:42:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1439,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367044775,https://github.com/hyperledger/sawtooth-core/pull/1439#issuecomment-367044775,askmish,"Done, added commit description",2018-02-20 17:00:23,2018-02-20 17:00:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1437,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366734583,https://github.com/hyperledger/sawtooth-core/pull/1437#issuecomment-366734583,aludvik,Raise exception per @peterschwarz request,2018-02-19 15:59:22,2018-02-19 15:59:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1434,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365071523,https://github.com/hyperledger/sawtooth-core/pull/1434#issuecomment-365071523,aludvik,This closes [STL-1055](https://jira.hyperledger.org/browse/STL-1055),2018-02-12 21:40:52,2018-02-12 21:43:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1434,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365095985,https://github.com/hyperledger/sawtooth-core/pull/1434#issuecomment-365095985,aludvik,This fix is currently running on PSIM-LR1,2018-02-12 23:14:51,2018-02-12 23:14:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1433,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365086807,https://github.com/hyperledger/sawtooth-core/pull/1433#issuecomment-365086807,dcmiddle,updated types from int to uint32_t,2018-02-12 22:36:01,2018-02-12 22:36:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1432,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365075280,https://github.com/hyperledger/sawtooth-core/pull/1432#issuecomment-365075280,boydjohnson,@chenette The images seem to be truncating text: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1432/3/artifact/docs/build/html/_images/appdev-environment-one-node-3TPs.svg.,2018-02-12 21:53:50,2018-02-12 21:53:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1432,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365075742,https://github.com/hyperledger/sawtooth-core/pull/1432#issuecomment-365075742,chenette,Curses!  Truncated text is not good.  Does anyone else see this problem?,2018-02-12 21:55:25,2018-02-12 21:55:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1432,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365079772,https://github.com/hyperledger/sawtooth-core/pull/1432#issuecomment-365079772,chenette,"It seems that the truncated text appears only in the build artifacts, not in the published documentation.  For example: In Architecture/Journal, the build artifact for the first figure has the same problem:
https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1432/lastSuccessfulBuild/artifact/docs/build/html/_images/journal_organization.svg

But the published document looks fine: 
https://sawtooth.hyperledger.org/docs/core/nightly/master/architecture/journal.html",2018-02-12 22:09:15,2018-02-12 22:09:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1431,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/364792222,https://github.com/hyperledger/sawtooth-core/pull/1431#issuecomment-364792222,chenette,"I am closing this PR to redo the figures and related text for the demo environment.  Given that two of the three environments include the XO transaction processor, I'll use the three-TP figure for all of them to be consistent.  I'll create a separate PR because I also want to correct the branch name.
",2018-02-11 21:49:25,2018-02-11 21:49:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1430,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/364583061,https://github.com/hyperledger/sawtooth-core/pull/1430#issuecomment-364583061,rberg2,"Deb package depends Before:
```Depends: python3-cryptography, python3-protobuf, python3-sawtooth-poet-common, python3-sawtooth-signing, python3-sawtooth-validator, python3:any (>= 3.3.2-2~)```
After:
```Depends: python3-cryptography (>= 1.7.1), python3-protobuf, python3-sawtooth-poet-common, python3-sawtooth-signing, python3-sawtooth-validator, python3:any (>= 3.3.2-2~)```",2018-02-09 22:06:57,2018-02-09 22:06:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1430,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365301661,https://github.com/hyperledger/sawtooth-core/pull/1430#issuecomment-365301661,rberg2,"setup.py auto-generates the existing dependencies, I only found stdeb.cfg necessary were we need finer grain control of the resulting deb package.",2018-02-13 15:30:37,2018-02-13 15:30:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1430,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365344473,https://github.com/hyperledger/sawtooth-core/pull/1430#issuecomment-365344473,rberg2,"I updated this PR to add the stdeb.cfg files with package dependency info, leaving the version info under install_requires for pip installs.",2018-02-13 17:39:58,2018-02-13 17:39:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1429,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365378684,https://github.com/hyperledger/sawtooth-core/pull/1429#issuecomment-365378684,aludvik,Added a commit to address @peterschwarz comment and implement exporting to a file,2018-02-13 19:35:08,2018-02-13 19:35:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1427,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/367123097,https://github.com/hyperledger/sawtooth-core/pull/1427#issuecomment-367123097,peterschwarz,Closing this - requires some major rework,2018-02-20 21:19:30,2018-02-20 21:19:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1426,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365660520,https://github.com/hyperledger/sawtooth-core/pull/1426#issuecomment-365660520,dplumb94,"For “Transactions in Process” I think we want `GROUP BY ... fill(none)` or some other fill method.

`GROUP BY ... fill(0)` shows the data as spikes that occur when the data is reported. However, I'm not sure if `fill(none)` or `fill(linear)` is correct",2018-02-14 16:22:06,2018-02-14 16:23:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1426,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365729848,https://github.com/hyperledger/sawtooth-core/pull/1426#issuecomment-365729848,aludvik,Updated to use fill(previous) per @dplumb94 comment,2018-02-14 20:09:18,2018-02-14 20:09:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1425,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/364256933,https://github.com/hyperledger/sawtooth-core/pull/1425#issuecomment-364256933,aludvik,Tested locally,2018-02-08 21:39:16,2018-02-08 21:39:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1423,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365042295,https://github.com/hyperledger/sawtooth-core/pull/1423#issuecomment-365042295,peterschwarz,Rebased with master,2018-02-12 19:54:28,2018-02-12 19:54:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1417,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/364148409,https://github.com/hyperledger/sawtooth-core/pull/1417#issuecomment-364148409,peterschwarz,"We manage those indexes - they are just databases where the keys are the indexer (e.g. batch id) and the value is the block num.  They are all updated in a single LMDB transaction, so if we trust those to operate correctly, we can trust that the indexes are correct.",2018-02-08 15:32:31,2018-02-08 15:32:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1416,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363224082,https://github.com/hyperledger/sawtooth-core/pull/1416#issuecomment-363224082,peterschwarz,This should also be tested to see if it fixes the conditions discussed in [STL-1034](https://jira.hyperledger.org/browse/STL-1034),2018-02-05 21:17:01,2018-02-05 21:17:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1416,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363573149,https://github.com/hyperledger/sawtooth-core/pull/1416#issuecomment-363573149,peterschwarz,Added a commit to fix [STL-1048](https://jira.hyperledger.org/browse/STL-1048),2018-02-06 21:38:06,2018-02-06 21:38:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1415,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363213351,https://github.com/hyperledger/sawtooth-core/pull/1415#issuecomment-363213351,aludvik,@vaporos do we like Cargo.lock files?,2018-02-05 20:36:45,2018-02-05 20:36:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1414,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363165804,https://github.com/hyperledger/sawtooth-core/pull/1414#issuecomment-363165804,vaporos,@chenette Is breaking it up into multiple files friendly from a documentation perspective? (Hoping yes.),2018-02-05 17:55:53,2018-02-05 17:55:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1414,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363167307,https://github.com/hyperledger/sawtooth-core/pull/1414#issuecomment-363167307,chenette,"~@vaporos - I'm not sure what ""it"" refers to in ""...breaking it up into multiple files..."".  This PR is code only, right?~
I talked to Boyd for more info.  I think the docs can cope with multiple files.  Fingers crossed.",2018-02-05 18:00:31,2018-02-05 21:11:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1414,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/364553800,https://github.com/hyperledger/sawtooth-core/pull/1414#issuecomment-364553800,boydjohnson,"@vaporos I have fixed according to your comments. In the fix it was hard to keep two of the commits separate, so the ""Refactor to use XoState"" and ""Refactor validation rules"" commits are now one commit.",2018-02-09 20:21:17,2018-02-09 20:21:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1413,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363228924,https://github.com/hyperledger/sawtooth-core/pull/1413#issuecomment-363228924,aludvik,nope,2018-02-05 21:34:49,2018-02-05 21:34:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1413,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363475969,https://github.com/hyperledger/sawtooth-core/pull/1413#issuecomment-363475969,nick-drozd,Could you add a commit message describing what this change is for?,2018-02-06 16:18:59,2018-02-06 16:18:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1413,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363567900,https://github.com/hyperledger/sawtooth-core/pull/1413#issuecomment-363567900,aludvik,@nick-drozd updated,2018-02-06 21:19:13,2018-02-06 21:19:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1412,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/364165487,https://github.com/hyperledger/sawtooth-core/pull/1412#issuecomment-364165487,peterschwarz,Is there anyway to add a unit test for the `Tree` class by itself?  I'm having trouble understanding what it is going to look like in use outside of the PredecessorTree.,2018-02-08 16:23:43,2018-02-08 16:23:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1410,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363160615,https://github.com/hyperledger/sawtooth-core/pull/1410#issuecomment-363160615,dplumb94,"Updated based on @vaporos first two comments.


> The multiple config files seem unnecessary - we could template them and use sed to replace values to generate the specific files.

I am not sure how this would be implemented. Where would the sed commands be called?",2018-02-05 17:38:58,2018-02-05 17:38:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1409,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/362426239,https://github.com/hyperledger/sawtooth-core/pull/1409#issuecomment-362426239,rbuysse,"Output can be seen here: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1409/lastSuccessfulBuild/artifact/build/debs/cxx/

Notice that the artifact is named sawtooth-cxx-sdk-1.1.1.**dev160**-Linux.deb

Compare with master: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/master/lastSuccessfulBuild/artifact/build/debs/cxx/

sawtooth-cxx-sdk-1.1.1.**dev1**-Linux.deb",2018-02-01 22:40:13,2018-02-01 22:40:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1406,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/362732094,https://github.com/hyperledger/sawtooth-core/pull/1406#issuecomment-362732094,aludvik,"In general, this PR tries to do a better job of abstracting some difficult book keeping tasks.",2018-02-02 22:52:15,2018-02-02 22:52:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1406,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/362732174,https://github.com/hyperledger/sawtooth-core/pull/1406#issuecomment-362732174,aludvik,"Also, the ordering of commits got weird because I dropped some other commits that were causing problems.",2018-02-02 22:52:38,2018-02-02 22:52:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1406,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363483173,https://github.com/hyperledger/sawtooth-core/pull/1406#issuecomment-363483173,aludvik,"@boydjohnson changed concurrent class instance variables to protected.
@nick-drozd Added docstring, reduced indentation, and logged full identifier",2018-02-06 16:39:27,2018-02-06 16:39:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1402,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/361695849,https://github.com/hyperledger/sawtooth-core/pull/1402#issuecomment-361695849,boydjohnson,@peterschwarz I updated to not catch IOError.,2018-01-30 18:52:36,2018-01-30 18:52:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1402,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/361703686,https://github.com/hyperledger/sawtooth-core/pull/1402#issuecomment-361703686,boydjohnson,"@peterschwarz Since we don't have an IntkeyCliError, I think it makes sense to just not catch the error.",2018-01-30 19:18:44,2018-01-30 19:18:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1402,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/361708659,https://github.com/hyperledger/sawtooth-core/pull/1402#issuecomment-361708659,peterschwarz,You could use `from sawtooth_intkey.client_cli.exceptions import IntKeyCliException`,2018-01-30 19:35:26,2018-01-30 19:35:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1400,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/361963504,https://github.com/hyperledger/sawtooth-core/pull/1400#issuecomment-361963504,nick-drozd,@boydjohnson I will make those changes after other comments / approvals.,2018-01-31 15:17:24,2018-01-31 15:17:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1398,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/362345201,https://github.com/hyperledger/sawtooth-core/pull/1398#issuecomment-362345201,chenette,"Yes, there are several doc PRs that depend on these file-name changes.  This one is part of the big doc reorg (PR #1392), but affects several others (such as PR #1394). 

The details and history: Shawn asked me last week to do these name changes in a separate PR so it would be easy to cherry-pick for 1.0.  (Because URLs depend on file-name changes, so we wanted to avoid breaking links in case someone has bookmarked a specific page.) But we decided not to backport this until after the 1.0 release. 

In summary, this PR is needed for several others that have substantive doc changes and corrections.",2018-02-01 17:42:32,2018-02-01 17:52:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1398,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/362604354,https://github.com/hyperledger/sawtooth-core/pull/1398#issuecomment-362604354,dcmiddle,Thanks. Just up to @vaporos now.,2018-02-02 14:41:19,2018-02-02 14:41:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1398,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363154502,https://github.com/hyperledger/sawtooth-core/pull/1398#issuecomment-363154502,chenette,Closing this PR because the backporting might happen in a different way.,2018-02-05 17:18:26,2018-02-05 17:18:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1393,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/361269003,https://github.com/hyperledger/sawtooth-core/pull/1393#issuecomment-361269003,vaporos,Please also wrap at <80 columns.,2018-01-29 14:51:42,2018-01-29 14:51:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1393,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/377392016,https://github.com/hyperledger/sawtooth-core/pull/1393#issuecomment-377392016,ineffectualproperty,"Made changes, will post to sawtooth-website repo when created",2018-03-29 22:29:19,2018-03-29 22:29:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1383,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/360904251,https://github.com/hyperledger/sawtooth-core/pull/1383#issuecomment-360904251,dcmiddle,"I'm not familiar enough with these internals to find nuanced issues with how e.g. _outstanding is managed. That said, I don't see any reason to stop this backporting to 1-0.

Also, I do like the unit test expansion.",2018-01-26 21:06:28,2018-01-26 21:07:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1380,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/360876273,https://github.com/hyperledger/sawtooth-core/pull/1380#issuecomment-360876273,agunde406,Added commit to update gitignore,2018-01-26 19:09:48,2018-01-26 19:09:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1380,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/361399739,https://github.com/hyperledger/sawtooth-core/pull/1380#issuecomment-361399739,agunde406,Updated behavior around register to loop on getting the future instead of resubmitting registration. ,2018-01-29 21:54:26,2018-01-29 21:54:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1379,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/360596531,https://github.com/hyperledger/sawtooth-core/pull/1379#issuecomment-360596531,nick-drozd,"Typo in commit message: `eliminate this bug an allow`

`an` -> `and`",2018-01-25 20:51:33,2018-01-25 20:51:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1368,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359871032,https://github.com/hyperledger/sawtooth-core/pull/1368#issuecomment-359871032,boydjohnson,"@vaporos should they be buildable at each commit, or is it good enough that they make the refactor more clear?",2018-01-23 17:41:25,2018-01-23 17:41:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1368,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/360567643,https://github.com/hyperledger/sawtooth-core/pull/1368#issuecomment-360567643,boydjohnson,"Since there are two approvals and @vaporos has not responded since his initial comment, I am merging this.",2018-01-25 19:07:37,2018-01-25 19:07:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1367,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359841527,https://github.com/hyperledger/sawtooth-core/pull/1367#issuecomment-359841527,dcmiddle,@vaporos I discussed this approach with Ashish also with @aludvik and @peterschwarz . This is the best option given the issue. This value should not have been originally created as a parameter/setting. ,2018-01-23 16:12:23,2018-01-23 16:12:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1367,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/360499355,https://github.com/hyperledger/sawtooth-core/pull/1367#issuecomment-360499355,vaporos,"I'm okay with this PR and backporting it to 1.0 (I don't believe this setting is being used currently).

However, docs/source/architecture/journal.rst mentions this setting, so we need to remove that example.",2018-01-25 15:25:13,2018-01-25 15:25:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1367,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/360607315,https://github.com/hyperledger/sawtooth-core/pull/1367#issuecomment-360607315,dcmiddle,I'll take care of the doc change separately for sake of getting the code change into the testing pipeline sooner than later.,2018-01-25 21:32:16,2018-01-25 21:32:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1364,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/360296710,https://github.com/hyperledger/sawtooth-core/pull/1364#issuecomment-360296710,peterschwarz,"Via testing, this does not fix the issue",2018-01-24 22:33:13,2018-01-24 22:33:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1363,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359484666,https://github.com/hyperledger/sawtooth-core/pull/1363#issuecomment-359484666,aludvik,Fixed typo,2018-01-22 16:37:50,2018-01-22 16:37:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1363,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/361703821,https://github.com/hyperledger/sawtooth-core/pull/1363#issuecomment-361703821,aludvik,Addressed @vaporos feedback,2018-01-30 19:19:16,2018-01-30 19:19:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1362,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359464209,https://github.com/hyperledger/sawtooth-core/pull/1362#issuecomment-359464209,arthurgreef,"Closing this pull request. Add the following to .bashrc instead.

 .bashrc:
# mount /mnt/c to /c if not already done
if [ ! -d ""/c"" ] || [ ! ""$(ls -A /c)"" ]; then
  echo ""Requiring root password to $(tput setaf 6)mount --bind /mnt/c /c$(tput sgr 0)""
  sudo mkdir -p /c
  sudo mount --bind /mnt/c /c
fi

# Change from /mnt/c/... to /c/...
if [ ""$(pwd | cut -c -7)"" == ""/mnt/c/"" ]; then
  cd ""$(pwd | cut -c 5-)""
fi

# Provide docker for bash and docker-compose
docker() {
  docker.exe ""$@""
}
",2018-01-22 15:45:48,2018-01-22 15:45:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1361,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359199272,https://github.com/hyperledger/sawtooth-core/pull/1361#issuecomment-359199272,nick-drozd,"Here is the graph produced by the network laid out in `test_peer_list`:

![peers](https://user-images.githubusercontent.com/25748894/35187656-c5410c5a-fdec-11e7-8238-134a6e81a308.png)
",2018-01-20 20:19:14,2018-01-20 20:19:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1361,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359552788,https://github.com/hyperledger/sawtooth-core/pull/1361#issuecomment-359552788,nick-drozd,"Per a suggestion from @peterschwarz, the `/status` endpoint now returns
```
{
	""endpoint"": ""tcp://endpoint"",
	""peers"": [
		{
			""endpoint"": ""tcp://peer-1""
		},
		{
			""endpoint"": ""tcp://peer-2""
		}
	]
}
```
This allows the endpoint to be extended to include not just more information about the validator, but also more information about the validator's peers.",2018-01-22 20:22:41,2018-01-22 20:22:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1361,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359828341,https://github.com/hyperledger/sawtooth-core/pull/1361#issuecomment-359828341,nick-drozd,Addressed comments. ,2018-01-23 15:34:53,2018-01-23 15:34:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1359,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359288023,https://github.com/hyperledger/sawtooth-core/pull/1359#issuecomment-359288023,boydjohnson,I almost have the refactor done so it seems better to have the refactor as a PR and then these changes.,2018-01-21 22:40:23,2018-01-21 22:40:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1348,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359202853,https://github.com/hyperledger/sawtooth-core/pull/1348#issuecomment-359202853,aludvik,"Before you merge this can you:
1. Confirm a successful LR regression run?
2. Get approval from @dcmiddle?
3. Confirm that this fixes a known stability issue on 1-0?",2018-01-20 21:18:09,2018-01-20 21:18:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1347,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359202816,https://github.com/hyperledger/sawtooth-core/pull/1347#issuecomment-359202816,aludvik,"Before you merge this can you:
1. Confirm a successful LR regression run?
2. Get approval from @dcmiddle?
3. Confirm that this fixes a known stability issue on 1-0?",2018-01-20 21:17:54,2018-01-20 21:17:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1347,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359556322,https://github.com/hyperledger/sawtooth-core/pull/1347#issuecomment-359556322,agunde406,Closing for now. ,2018-01-22 20:36:00,2018-01-22 20:36:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1345,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358517065,https://github.com/hyperledger/sawtooth-core/pull/1345#issuecomment-358517065,vaporos,"This LGTM, will approve when conflicts are resolved.",2018-01-18 02:24:06,2018-01-18 02:24:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1344,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358479377,https://github.com/hyperledger/sawtooth-core/pull/1344#issuecomment-358479377,nick-drozd,"Nice performance gains for such a small change.

Running against 1-0:

Node 1 before:
![before-1](https://user-images.githubusercontent.com/25748894/35071926-245a2b50-fba8-11e7-8bc7-5c03315c39b7.png)

Node 1 after:
![after-1](https://user-images.githubusercontent.com/25748894/35071944-38497fbc-fba8-11e7-9654-f66cbfdc3612.png)

Node 2 before:
![before-2](https://user-images.githubusercontent.com/25748894/35071937-2d405546-fba8-11e7-824e-2cb6d406401a.png)

Node 2 after:
![after-2](https://user-images.githubusercontent.com/25748894/35071948-3f78273e-fba8-11e7-85e2-1b27f805d885.png)
",2018-01-17 23:04:17,2018-01-17 23:04:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1342,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358524912,https://github.com/hyperledger/sawtooth-core/pull/1342#issuecomment-358524912,vaporos,"Rebased and updated ""Add transaction processor support to Rust SDK"" to not add rand to Cargo.toml, as that was added in master recently as part of the sawadm PR.",2018-01-18 03:15:03,2018-01-18 03:15:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1342,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358535430,https://github.com/hyperledger/sawtooth-core/pull/1342#issuecomment-358535430,vaporos,"With respect to the error handling deficiencies in start() (the unwrap()s), I think we need to reconne-ction logic to properly handle many of these.  Or at least it seems related from a flow perspective.

For example, if we receive an error prior to the current loop(), such as during registration, we may want to disconnect and try again.  Because this could happen on re-connection, we shouldn't return an error from start() as we don't want transaction processors to exit due to transient errors.",2018-01-18 04:37:21,2018-01-18 04:37:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1340,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358369494,https://github.com/hyperledger/sawtooth-core/pull/1340#issuecomment-358369494,aludvik,Fixed missing signed off commit,2018-01-17 16:56:29,2018-01-17 16:56:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1340,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358406884,https://github.com/hyperledger/sawtooth-core/pull/1340#issuecomment-358406884,nick-drozd,"The PR looks great overall, just a few comments:

1. Several methods were changed from ""private"" to ""public"", e.g.
   `_verify_batch_transactions` to `verify_batch_transactions`. Are
   those intended to be part of the block validator API now? If so,
   that should be explained in the commit message. If not, they should
   be moved out into separate functions rather than be made static
   methods (maybe I'm wrong, but having a private static method in
   Python seems pointless to me, and very ""unpythonic"").
   
2. Several of the commit messages lack meaningful context. For
   instance, ""Clarify what the remaining steps do"". What steps? Where?
   It should be something like ""Update BlockValidator comments"".
   Similarly, ""Remove unused instance variables"" should be ""Remove
   unused ChainController instance variables"", and so on for the
   others.
   
3. The commit message ""Move thread_pool to BlockValidator"" needs an
   explanatory body.
   
4. I don't want to hold up the PR with this gripe, but I would like to
   reserve the right in the future to add a space before all linebreak
   backslashes.",2018-01-17 18:59:50,2018-01-17 18:59:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1340,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358536751,https://github.com/hyperledger/sawtooth-core/pull/1340#issuecomment-358536751,vaporos,"When merging this, to make it clear that these go together, please use a merge commit and not a github rebase.",2018-01-18 04:48:33,2018-01-18 04:48:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1340,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358755655,https://github.com/hyperledger/sawtooth-core/pull/1340#issuecomment-358755655,vaporos,I think these changes should also go into 1-0 branch.,2018-01-18 19:28:57,2018-01-18 19:28:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1336,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358123628,https://github.com/hyperledger/sawtooth-core/pull/1336#issuecomment-358123628,chenette,"Closing PR (started with master by mistake, not 1-0). Will try again.",2018-01-16 22:07:29,2018-01-16 22:07:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1335,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359170579,https://github.com/hyperledger/sawtooth-core/pull/1335#issuecomment-359170579,dcmiddle,Deferring this patch to a point release. No need to test on 1-0.,2018-01-20 13:13:23,2018-01-20 13:13:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1330,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358079750,https://github.com/hyperledger/sawtooth-core/pull/1330#issuecomment-358079750,dcmiddle,"FYI, this is a backport of https://github.com/hyperledger/sawtooth-core/pull/1318 to address 1.0 release criteria.",2018-01-16 19:38:25,2018-01-16 19:38:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1326,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358347760,https://github.com/hyperledger/sawtooth-core/pull/1326#issuecomment-358347760,aludvik,Updated the copyright headers to 2018,2018-01-17 15:52:28,2018-01-17 15:52:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1322,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358034094,https://github.com/hyperledger/sawtooth-core/pull/1322#issuecomment-358034094,peterschwarz,This looks like it needs to be rebased from master,2018-01-16 17:12:36,2018-01-16 17:12:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1322,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358371776,https://github.com/hyperledger/sawtooth-core/pull/1322#issuecomment-358371776,arthurgreef,Hi Peter - I am not sure that I rebased correctly. Let me know. Thanks.,2018-01-17 17:03:23,2018-01-17 17:03:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1322,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358752624,https://github.com/hyperledger/sawtooth-core/pull/1322#issuecomment-358752624,peterschwarz,"It doesn't look right, since you have quite a few extra commits here.  Can you close this, checkout master (updated from the latest upstream) and cherry pick your one commit for ""Fix Docker for Windows...""",2018-01-18 19:18:28,2018-01-18 19:18:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1322,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359189266,https://github.com/hyperledger/sawtooth-core/pull/1322#issuecomment-359189266,arthurgreef,Closing this pull request to clean up comments.,2018-01-20 17:51:07,2018-01-20 17:51:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1319,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358717634,https://github.com/hyperledger/sawtooth-core/pull/1319#issuecomment-358717634,boydjohnson,@aludvik @peterschwarz I have fixed each comment except for the refactor of the combinators with closures. I have worked on that but it will be part of a later PR.,2018-01-18 17:20:01,2018-01-18 17:20:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1319,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358733906,https://github.com/hyperledger/sawtooth-core/pull/1319#issuecomment-358733906,boydjohnson,"@aludvik Here is the story to refactor the closures: https://jira.hyperledger.org/browse/STL-1014. I have removed the try!s for ?.
",2018-01-18 18:14:09,2018-01-18 18:14:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1317,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357802728,https://github.com/hyperledger/sawtooth-core/pull/1317#issuecomment-357802728,peterschwarz,The opening part of the commit messages should not have the jira issue in it (it's in the contributor guide under commit messages).,2018-01-15 22:24:59,2018-01-15 22:24:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1310,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357035310,https://github.com/hyperledger/sawtooth-core/pull/1310#issuecomment-357035310,nick-drozd,Typos in third commit message,2018-01-11 19:29:18,2018-01-11 19:29:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1310,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357036780,https://github.com/hyperledger/sawtooth-core/pull/1310#issuecomment-357036780,peterschwarz,Fixed typos,2018-01-11 19:34:23,2018-01-11 19:34:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1310,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357359152,https://github.com/hyperledger/sawtooth-core/pull/1310#issuecomment-357359152,peterschwarz,Fixed up test_peer_list to remove a sleep and replace it with a `wait_for_rest_apis` call.  This also has the added benefit of testing this change.,2018-01-12 21:28:50,2018-01-12 21:28:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1310,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357719844,https://github.com/hyperledger/sawtooth-core/pull/1310#issuecomment-357719844,peterschwarz,@aludvik Added comments to the last commit,2018-01-15 15:49:11,2018-01-15 15:49:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1308,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/362854942,https://github.com/hyperledger/sawtooth-core/pull/1308#issuecomment-362854942,dcmiddle,@aludvik as you submitted STL-237 you may have the best context here,2018-02-03 21:16:07,2018-02-03 21:16:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1308,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/365748830,https://github.com/hyperledger/sawtooth-core/pull/1308#issuecomment-365748830,aludvik,"@asettouf we try to avoid committing lock files if at all possible because we don't want to fall behind on any updates to the dependencies we are using. Our build system currently uses `go get` to retrieve all of our dependencies. I think we would be open to a contribution that updates this build system to use `go dep` and a manifest file of some sort, but I don't see those in this PR right now. Perhaps `go dep` would be more appropriate in the Go SDK when we get that published to a separate repo? https://jira.hyperledger.org/browse/STL-974",2018-02-14 21:20:58,2018-02-14 21:20:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1308,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366518865,https://github.com/hyperledger/sawtooth-core/pull/1308#issuecomment-366518865,asettouf,"@aludvik  Fair point. Actually running `dep ensure` generates the .lock file, I wasn't sure wether to include it or not, as for instance, it is included in the [Fabric sdk](https://github.com/hyperledger/fabric-sdk-go). Regarding a sort of Manifest file, isn't it the `Gopkg.toml` what you are referring to?

Regarding updating the build system, I guess there would be the `sawtooth-dev-go` docker file to update, anything else?",2018-02-18 14:11:35,2018-02-18 14:11:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1308,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/366718200,https://github.com/hyperledger/sawtooth-core/pull/1308#issuecomment-366718200,aludvik,@asettouf `sawtooth-dev-go` is the only place I see where we are using `go get` so you should be good to just update that.,2018-02-19 15:00:49,2018-02-19 15:00:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1308,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/370957652,https://github.com/hyperledger/sawtooth-core/pull/1308#issuecomment-370957652,aludvik,Closed due to inactivity. Feel free to re-open this if new commits are added.,2018-03-06 22:50:11,2018-03-06 22:50:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1303,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357452670,https://github.com/hyperledger/sawtooth-core/pull/1303#issuecomment-357452670,aludvik,"Also, in response to ""Injected batches will remain in the block because there is no way that another node would have them."" that isn't exactly true. The reason for leaving them in is to prevent all the nodes on the network from requesting the injected batches at the same time when only the injecting node will have them.",2018-01-13 17:41:04,2018-01-13 17:41:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1303,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358061360,https://github.com/hyperledger/sawtooth-core/pull/1303#issuecomment-358061360,aludvik,"Per offline conversation, the batches should be stripped in the block sender so they aren't removed prior to sending to the completer. But I would still suggest passing the batches to keep through the send method instead of attaching it to the BlockWrapper",2018-01-16 18:36:03,2018-01-16 18:36:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1302,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/355579427,https://github.com/hyperledger/sawtooth-core/pull/1302#issuecomment-355579427,nick-drozd,"Some context for the reasoning behind these changes:

I ran the test against PRs 1296 and 1299 combined. The graph showed `PredecessorTreeNode.__init__` with the following numbers: `0.75% (0.75%) 186014x`. That seems pretty high for such an insignificant function, right? So I look and see what's in it (""in it"", get it?):

```
class PredecessorTreeNode:
    def __init__(self, children=None, readers=None, writer=None):
        self.children = children if children is not None else {}
        self.readers = readers if readers is not None else []
        self.writer = writer
```

It turns out that `PredecessorTreeNode`s are initialized in exactly two places: `PredecessorTree.__init__` and `PredecessorTree._get`. In both cases, they are initialized without any arguments. So every time a `PredecessorTreeNode` is intitialized, two useless default argument checks are executed. Okay, so get rid of the checks and require the two callers to specify their arguments. (Another option would be to do away with specified arguments altogether and initialize all nodes as empty.)

While we're at it, why not get rid of the `get` wrapper and the `create` argument? `_get` is called exactly twice (in `add_reader` and `set_writer`), and both calls have `create=True`. `_get` has an `if not create` clause, which in every single case is useless, because its callers always want `create`. So why keep the argument at all? Well, the predecessor tree tests use `create=False` to inspect trees, but never use `create=True`. So to make everyone happy, split the function into two slightly different versions, one which always creates and one which never does. This allows getting rid of the extra function call and the useless argument check. This function gets called a lot, so the savings might be noticeable, though at a slight cost to maintainability.
",2018-01-05 15:17:59,2018-01-05 15:17:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1302,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357087251,https://github.com/hyperledger/sawtooth-core/pull/1302#issuecomment-357087251,nick-drozd,"The numbers aren't coming out the way I expected, so I'm closing this for now.",2018-01-11 22:49:22,2018-01-11 22:49:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1301,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/355421573,https://github.com/hyperledger/sawtooth-core/pull/1301#issuecomment-355421573,aludvik,This is my first pass at improving the memory usage on catchup.,2018-01-04 22:49:14,2018-01-04 22:49:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1299,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/356767554,https://github.com/hyperledger/sawtooth-core/pull/1299#issuecomment-356767554,nick-drozd,"Okay, here are some numbers. Actually, here are some pictures with numbers on them.

What I did was run a modified version of the poet liveness test with three validators, parallel schedulers, smallbank TPs. 1000 smallbank transactions were submitted (using the workload generator tool) to validator-0 (the genesis node), and the network ran until everything was processed. Validators were running with the `yappi` profiler. For some reason I couldn't get validator-0 to dump its stats, so these numbers are from the other validators, which got all of their transactions from the genesis node.

I ran the test four times, twice against master and twice with this PR's changes applied.

- validator-1, master
![liveness-3-n1-p](https://user-images.githubusercontent.com/25748894/34799310-f4a7dcc8-f624-11e7-971f-25e6644b97b6.png)
![_liveness-3-n1-p](https://user-images.githubusercontent.com/25748894/34799325-032bc660-f625-11e7-8324-aedbb65dc565.png)

- validator-1, PR
![liveness-3-n1-p-db](https://user-images.githubusercontent.com/25748894/34799351-10828b50-f625-11e7-9c7f-8045ef0b098d.png)
![_liveness-3-n1-p-db](https://user-images.githubusercontent.com/25748894/34799361-22d7a0f6-f625-11e7-9ae7-57378b165a2f.png)

- validator-2, master
![liveness-3-n2-p](https://user-images.githubusercontent.com/25748894/34799386-326f34f2-f625-11e7-86b4-fd91e26ce80b.png)
![_liveness-3-n2-p](https://user-images.githubusercontent.com/25748894/34799393-4226fe0c-f625-11e7-8bf8-6f152ef39c6c.png)

- validator-2, PR
![liveness-3-n2-p-db](https://user-images.githubusercontent.com/25748894/34799429-660080dc-f625-11e7-8fb5-b231112210b2.png)
![_liveness-3-n2-p-db](https://user-images.githubusercontent.com/25748894/34799439-72ac361e-f625-11e7-94fb-caf2bac6eddd.png)

The nodes in the graph contain three numbers: total time spent in the function, total time spent in the function but not its subcalls, and total number of calls. The nodes are colored according to the second metric: brighter-colored nodes represent bigger chunks of time. Dark blue is cheap (either fast or called infrequently), red is expensive (slow or called frequently).

To compare the data, look for the cluster of nodes dealing with database / LMDB functions. As far as I can tell, the two big gains from this PR are seen in two functions: `LMDBNoLockDatabase.contains_key` and `MerkleDatabase._set_kv`. The former doesn't show up on the PR graphs, because it isn't being called nearly as often. I think this is due to this change:

```
     def _get_by_hash(self, key_hash):
-        if key_hash in self._database:
+        try:
             return _decode(self._database.get(key_hash))
-        else:
+        except ValueError:   # value returned from database was None
             raise KeyError(""hash {} not found in database"".format(key_hash))
```

`_set_kv` doesn't show up on any of the PR graphs but one, and that one with reduced numbers. This is because it was repeatedly hashing and encoding a constant value. Now the constant is hashed and encoded just once.

***

I wouldn't be my life on these numbers or on my interpretation thereof, but they are consistent with what I was expecting.",2018-01-10 23:04:48,2018-01-10 23:04:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1298,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/355391573,https://github.com/hyperledger/sawtooth-core/pull/1298#issuecomment-355391573,chenette,This looks very helpful. I feel like this information should be in the Sawtooth doc (in a .rst file).  ,2018-01-04 20:35:30,2018-01-04 20:35:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1298,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/355557713,https://github.com/hyperledger/sawtooth-core/pull/1298#issuecomment-355557713,vaporos,"I agree with @chenette, feels like content that should go in docs/.  We could resurrect the Core Developer's Guide section similar to what we had in 0.8, but with this content instead.",2018-01-05 13:44:25,2018-01-05 13:44:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1298,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/355622498,https://github.com/hyperledger/sawtooth-core/pull/1298#issuecomment-355622498,cianx,I disagree the developer setup needs to be associated with the version of the code they are for.  There is already much difficulty finding the correct version of the docs for the version of the code you have. The instruction on how to build the code is part of the code base and need to be included as such.  ,2018-01-05 18:01:26,2018-01-05 18:01:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1298,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/356411492,https://github.com/hyperledger/sawtooth-core/pull/1298#issuecomment-356411492,TomBarnes,I agree with Cian that having build.md come directly with the code avoids having to track down build instructions separately and verifying thew the build instructions you found go with the code that you downloaded.,2018-01-09 20:56:36,2018-01-09 20:56:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1298,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/356445731,https://github.com/hyperledger/sawtooth-core/pull/1298#issuecomment-356445731,chenette,"Is there any chance that the Core Developer's Guide (CGD) would be updated and restored to the Sawtooth docs?  If so, my concern is that we'd have to maintain this information in multiple places (*.rst files in the docs and this *.md file). If the CDG is gone for good, I withdraw my concern. ",2018-01-09 23:16:04,2018-01-09 23:16:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1298,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/356967953,https://github.com/hyperledger/sawtooth-core/pull/1298#issuecomment-356967953,vaporos,"We could do this in a separate PR, but based on the conversation here I'm wondering if our links should not use ""latest"" - which is the latest release (currently 0.8.x, which has become odd with so many 1.0.0rcN releases).",2018-01-11 15:47:47,2018-01-11 15:47:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1298,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357370733,https://github.com/hyperledger/sawtooth-core/pull/1298#issuecomment-357370733,cianx,"I am fine with copying the BUILD.md into the document directory for the core developer guide build. I have updated the formating in a manner that should be compatible with markdown and rst, according to this guide: https://gist.github.com/dupuy/1855764
",2018-01-12 22:21:36,2018-01-12 22:21:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1298,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357370865,https://github.com/hyperledger/sawtooth-core/pull/1298#issuecomment-357370865,cianx,@vaporos if the documents should not link to 'latest' what should they link to?,2018-01-12 22:22:16,2018-01-12 22:22:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1296,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/355597058,https://github.com/hyperledger/sawtooth-core/pull/1296#issuecomment-355597058,nick-drozd,"Some reasoning behind these changes:

`if` checks are not free, so if the `if` clause is executed a lot more often than the `else` clause, it's probably cheaper to do away with the `if` check and handle the exceptional case if it arises. `interconnect` has a lot of `if` checks, and its functions are called frequently, so the question is: are the `else` clauses exceptional cases or not? If they are, they should be handled as exceptions.

Here's an experiment you can run. Apply the following changes to master:

```
diff --git a/validator/sawtooth_validator/networking/interconnect.py b/validator/sawtooth_validator/networking/interconnect.py
index 8702a6c..ecca4ed 100644
--- a/validator/sawtooth_validator/networking/interconnect.py
+++ b/validator/sawtooth_validator/networking/interconnect.py
@@ -353,11 +353,13 @@ class _SendReceive(object):
         zmq_identity = None
         if connection_id is not None and self._connections is not None:
             if connection_id in self._connections:
+                LOGGER.error('send_message IF')
                 connection_info = self._connections.get(connection_id)
                 if connection_info.connection_type == \
                         ConnectionType.ZMQ_IDENTITY:
                     zmq_identity = connection_info.connection
             else:
+                LOGGER.error('send_message ELSE')
                 LOGGER.debug(""Can't send to %s, not in self._connections"",
                              connection_id)
```

Then run `test_poet_liveness` and count the instances of each of the messages. By my count, `send_message IF` occurs 26173 times, which `send_message ELSE` occurs 4 times (all close to the beginning of the test). The `else` case is exceptional.

Here's another example. Apply the following changes to master:

```
diff --git a/validator/sawtooth_validator/networking/interconnect.py b/validator/sawtooth_validator/networking/interconnect.py
index 8702a6c..6f5fea4 100644
--- a/validator/sawtooth_validator/networking/interconnect.py
+++ b/validator/sawtooth_validator/networking/interconnect.py
@@ -173,8 +173,11 @@ class _SendReceive(object):
 
     def _identity_to_connection_id(self, zmq_identity):
         if zmq_identity not in self._identities_to_connection_ids:
+            LOGGER.error('_identity_to_connection_id IF')
             self._identities_to_connection_ids[zmq_identity] = \
                 hashlib.sha512(zmq_identity).hexdigest()
+        else:
+            LOGGER.error('_identity_to_connection_id ELSE')
 
         return self._identities_to_connection_ids[zmq_identity]
```

Again, run `test_poet_liveness`. By my count, `_identity_to_connection_id IF` occurs 54 times (again, all close to the beginning of the test), while `_identity_to_connection_id ELSE` occurs 51712 times. So it looks like `zmq_identity not in self._identities_to_connection_ids` is an exceptional case that does not need to be checked every time.

The other cases are similar.",2018-01-05 16:23:01,2018-01-05 16:23:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1296,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357284024,https://github.com/hyperledger/sawtooth-core/pull/1296#issuecomment-357284024,nick-drozd,"I've profiled this PR with `yappi` a few times, and it doesn't seem to make much of a difference in the diagrams. I still think the changes here are a good idea, but I'm closing this until I have better results to show.",2018-01-12 16:21:48,2018-01-12 16:21:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1292,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/354792607,https://github.com/hyperledger/sawtooth-core/pull/1292#issuecomment-354792607,vaporos,"How about we add a note to the release notes for 1.0.0rc6 suggesting this setting (and others) be set along with other PoET settings at genesis time, and then update the documentation to reflect this process prior to 1.0.0rc7?",2018-01-02 15:33:09,2018-01-02 15:33:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1291,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/361975650,https://github.com/hyperledger/sawtooth-core/pull/1291#issuecomment-361975650,peterschwarz,Rebased,2018-01-31 15:53:05,2018-01-31 15:53:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1290,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/363220669,https://github.com/hyperledger/sawtooth-core/pull/1290#issuecomment-363220669,peterschwarz,Additional pool provided no discernible difference.  Will open a PR with the refactor alone.,2018-02-05 21:04:20,2018-02-05 21:04:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1289,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357014602,https://github.com/hyperledger/sawtooth-core/pull/1289#issuecomment-357014602,asettouf,"@vaporos  @dcmiddle 

Actually you can at least do the following:

```yaml
version: ""2.1""

services:

  client:
    image: sawtooth-dev-python:latest
    container_name: run-lint
    volumes:
      - ../../:/project/sawtooth-core
    entrypoint: run_lint -s ${LINT_ARG}
```

And then run: `LINT_ARG=master docker-compose -f compose/run-lint.yaml up`",2018-01-11 18:16:24,2018-01-11 18:16:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1289,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/358973547,https://github.com/hyperledger/sawtooth-core/pull/1289#issuecomment-358973547,dcmiddle,"That's a great idea @asettouf 
I was going to otherwise suggest overriding entrypoint on the command line. 
@peterschwarz pointed out some gap to me when I first submitted and I've got to go dig that up and see what it was.",2018-01-19 13:59:59,2018-01-19 13:59:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1289,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/359094630,https://github.com/hyperledger/sawtooth-core/pull/1289#issuecomment-359094630,dcmiddle,Nick pointed out not everyone maintains a master branch. I'm just going to close this for now.,2018-01-19 21:31:12,2018-01-19 21:31:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1286,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353681902,https://github.com/hyperledger/sawtooth-core/pull/1286#issuecomment-353681902,grkvlt,"Nice, I'll give this a try shortly and see how it copes with some of my more complex multi-region Sawtooth deployments.

However, I'm a bit wary of adding a `sawnet` dependency on the presence of the `dot` tool on the user's `PATH` and, in general, about installing it... If we can't generate a PNG natively then just output the `.dot` file (which is just text generation, no libraries required, one of the reasons Graphviz is so useful) and the user can deal with it themselves on some other machine/their laptop/etc. Remember the `sawnet` command will be being run in a Docker container a lot of the time, which should have the absolute _minimum_ of packages installed. I know this is not really the case right now, but I'm working on reducing image size, and would rather not do things that increase it further.

I prefer the idea of a new `/status` endpoint, it give better separation of concerns and I can see it being usefully extended for other things, too. Clients can easily make the extra HTTP call to get the information, it's not a huge overhead. Plus, it would be really useful as a health check endpoint for tools like Apache Brooklyn and Kubernetes that are managing a running Sawtooth deployment. ",2017-12-22 22:04:32,2017-12-22 22:04:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1286,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/356436877,https://github.com/hyperledger/sawtooth-core/pull/1286#issuecomment-356436877,peterschwarz,"This requires a new feature for the REST API to provide proper value, so I suggest we close this PR and re-open when that feature is implemented.",2018-01-09 22:35:45,2018-01-09 22:35:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1282,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353638175,https://github.com/hyperledger/sawtooth-core/pull/1282#issuecomment-353638175,aludvik,Print unresponsive nodes without depending on a side-effect,2017-12-22 17:04:58,2017-12-22 17:04:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1275,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/356678921,https://github.com/hyperledger/sawtooth-core/pull/1275#issuecomment-356678921,dcmiddle,"Capping the population estimate seems to have narrowed the standard deviation and reduced long wait times as desired. However, because it cuts off the top of the sample distribution it has the effect of lowering overall wait times. To prevent that from happening we'd need a slightly messier solution that would continue to pass the original estimates (without limit capping).  

// Ideal values
Average local mean: 300
Avg min wait time: 30

// Control output from a multi-day run on LR7
There were 8846 distinct local means
Average local mean: 539.9448462581959
StdDev local mean: 115.58741689268248

Avg min wait time: 23.147107167081167
Max min wait time: 414.3
Min min wait time: 1.26
StdDev min wait time: 37.12503388731272

// Output using this PR on 23 hours of an LR network
There were 508 distinct local means
Average local mean: 123.2353346456693
StdDev local mean: 82.57227688710711

Avg min wait time: 9.12527559055118
Max min wait time: 296.68
Min min wait time: 1.24
StdDev min wait time: 25.09715253719495
",2018-01-10 17:41:12,2018-01-10 17:44:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1275,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357055498,https://github.com/hyperledger/sawtooth-core/pull/1275#issuecomment-357055498,dcmiddle,"Ok, not hearing anyone saying they see outlier times so going to close this for now. we can reopen and make it better preserve the intended distribution if this is recognized as a problem in the future.",2018-01-11 20:44:16,2018-01-11 20:44:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1274,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353444723,https://github.com/hyperledger/sawtooth-core/pull/1274#issuecomment-353444723,peterschwarz,"Also, recommend that you rebase on master, so that you can take advantage of being on the whitelist now.",2017-12-21 20:01:56,2017-12-21 20:01:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1274,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/356031147,https://github.com/hyperledger/sawtooth-core/pull/1274#issuecomment-356031147,peterschwarz,"Just checking in on the re-ordering comment under the line comment (that is now hidden by github, so maybe it was missed): Any more changes to this PR coming or is this good to go?",2018-01-08 17:14:49,2018-01-08 17:14:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1274,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357355896,https://github.com/hyperledger/sawtooth-core/pull/1274#issuecomment-357355896,peterschwarz,"This is superseded by #1318, as we're going to remove WIF all together due an underlying library being removed.",2018-01-12 21:15:04,2018-01-12 21:15:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1274,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/357742143,https://github.com/hyperledger/sawtooth-core/pull/1274#issuecomment-357742143,peterschwarz,Closing due to previous comment.,2018-01-15 17:12:34,2018-01-15 17:12:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1273,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353445741,https://github.com/hyperledger/sawtooth-core/pull/1273#issuecomment-353445741,peterschwarz,Please rebase to get whitelist updates,2017-12-21 20:07:04,2017-12-21 20:07:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1270,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/354202702,https://github.com/hyperledger/sawtooth-core/pull/1270#issuecomment-354202702,vaporos,This needs a rebase.,2017-12-28 00:25:07,2017-12-28 00:25:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1270,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/354313409,https://github.com/hyperledger/sawtooth-core/pull/1270#issuecomment-354313409,nick-drozd,"Rebased, although since https://github.com/hyperledger/sawtooth-core/pull/1279 went in this PR doesn't do much.",2017-12-28 16:16:19,2017-12-28 16:16:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1267,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353103917,https://github.com/hyperledger/sawtooth-core/pull/1267#issuecomment-353103917,grkvlt,"Hi @aludvik, this is *not* for *running* the `block-info-tp`, it  is to add the python block-info library to the validator so that the validator process can be configured with the `block-info` injector, as is done in many of the example Docker Compose files. This currently only works if the `/project/sawtooth-core` directory is mounted as a volume. It is similar to how `sawtooth-poet` has been installed, too, to enable PoET consensus config.",2017-12-20 16:02:04,2017-12-20 16:02:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1267,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353123726,https://github.com/hyperledger/sawtooth-core/pull/1267#issuecomment-353123726,aludvik,"@grkvlt Oh, yeah you are right and I was wrong.",2017-12-20 17:09:47,2017-12-20 17:09:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1263,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352906883,https://github.com/hyperledger/sawtooth-core/pull/1263#issuecomment-352906883,peterschwarz,Does this potentially address [STL-957](https://jira.hyperledger.org/browse/STL-957)?,2017-12-19 22:32:26,2017-12-19 22:32:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1262,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352890481,https://github.com/hyperledger/sawtooth-core/pull/1262#issuecomment-352890481,dcmiddle,@vaporos here's a simpler alternative to https://github.com/hyperledger/sawtooth-core/pull/1250. Just get rid of the noisy line then it should be easier to see the root causes which already have meaningful info like block numbers.,2017-12-19 21:23:25,2017-12-19 21:23:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1262,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/356044504,https://github.com/hyperledger/sawtooth-core/pull/1262#issuecomment-356044504,dcmiddle,"It was felt this will just mask the problem. #1288 is intended to correct the underlying issue, whereas #1250 was a different approach the logging we may revisit after 1288 is evaluated.",2018-01-08 18:01:51,2018-01-08 18:01:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1261,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353097979,https://github.com/hyperledger/sawtooth-core/pull/1261#issuecomment-353097979,aludvik,Had to fix up a brittle test,2017-12-20 15:42:17,2017-12-20 15:42:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1260,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352854349,https://github.com/hyperledger/sawtooth-core/pull/1260#issuecomment-352854349,rberg2,"RCA: 'install' in an invalid option in a postinst script causing that code to be skipped, it is valid in preinst scripts. I am changing this to 'configure' and checking that we are not upgrading the package.

https://www.debian.org/doc/debian-policy/#maintainer-script-flowcharts",2017-12-19 19:01:27,2017-12-19 19:01:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1259,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352859438,https://github.com/hyperledger/sawtooth-core/pull/1259#issuecomment-352859438,rbuysse,"Installed on a test machine:

```
node2:~$ sawnet compare-chains 
usage: sawnet compare-chains [-h] [-v] [-V] [--users USERNAME[:PASSWORD]]
                             [--table] [--tree]
                             urls [urls ...]
sawnet compare-chains: error: the following arguments are required: urls
```
",2017-12-19 19:19:14,2017-12-19 19:19:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1258,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352871257,https://github.com/hyperledger/sawtooth-core/pull/1258#issuecomment-352871257,EugeneYYY,"PROTOBUF example is added per request from the POC team. It doesn't affect existing functionality. By default it is not used. PROTOBUF is used instead of CBOR only if -p or --protobuf option is specified. 
Overall, the changes make CXX SDK and example to behave in line with examples in other languages at least in terms of command line behavior. ",2017-12-19 20:05:15,2017-12-19 20:05:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1258,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353186140,https://github.com/hyperledger/sawtooth-core/pull/1258#issuecomment-353186140,vaporos,"We have an intkey implementation for every language supported and multiple clients.  The overhead in adding protobuf support, however simplistic it may seem on the surface, is undesirable both from adding the support everywhere and the added build and maintenance overhead.  Many other transaction families can be used as reference for how to nicely use protobuf.",2017-12-20 21:23:16,2017-12-20 21:23:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1258,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353234661,https://github.com/hyperledger/sawtooth-core/pull/1258#issuecomment-353234661,EugeneYYY,"The pull request was amended. All comments should be addressed including removing protobuf changes that were temporarily moved to a separate branch ""protobuf_example"" oin my fork ",2017-12-21 01:46:36,2017-12-21 01:46:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1255,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352904711,https://github.com/hyperledger/sawtooth-core/pull/1255#issuecomment-352904711,peterschwarz,"Also fixes: [STL-958](https://jira.hyperledger.org/browse/STL-958) with commit 
5e99768",2017-12-19 22:22:44,2017-12-19 22:22:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1255,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352906282,https://github.com/hyperledger/sawtooth-core/pull/1255#issuecomment-352906282,peterschwarz,"Taking out the logging of back pressure.  Will re-consider what and how to log this state in a future PR, as the implementation in this PR is noisy.",2017-12-19 22:29:39,2017-12-19 22:29:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1255,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353094461,https://github.com/hyperledger/sawtooth-core/pull/1255#issuecomment-353094461,peterschwarz,Added a commit for logging entering and exiting back pressure conditions,2017-12-20 15:30:47,2017-12-20 15:30:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1255,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353390384,https://github.com/hyperledger/sawtooth-core/pull/1255#issuecomment-353390384,jsmitchell,To what degree do we need to update the workload tools to reattempt the same transaction on QUEUE_FULL rather than moving onto the next transaction?,2017-12-21 16:11:23,2017-12-21 16:11:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1255,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353397512,https://github.com/hyperledger/sawtooth-core/pull/1255#issuecomment-353397512,peterschwarz,"We would need to add a backoff resubmit, like I included in the integration intkey client.  It should be relatively simple.",2017-12-21 16:39:28,2017-12-21 16:39:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1255,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353397560,https://github.com/hyperledger/sawtooth-core/pull/1255#issuecomment-353397560,peterschwarz,Rebased against master ,2017-12-21 16:39:43,2017-12-21 16:39:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1250,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353506024,https://github.com/hyperledger/sawtooth-core/pull/1250#issuecomment-353506024,dcmiddle,#1262 is a better solution,2017-12-22 02:19:34,2017-12-22 02:19:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1244,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352041849,https://github.com/hyperledger/sawtooth-core/pull/1244#issuecomment-352041849,peterschwarz,Rebased,2017-12-15 16:00:09,2017-12-15 16:00:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1243,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352893144,https://github.com/hyperledger/sawtooth-core/pull/1243#issuecomment-352893144,dcmiddle,this was a red herring. the actual likelihood of this event is something like (1/10)^n where n is your validator population size. ,2017-12-19 21:34:35,2017-12-19 21:34:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1242,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352124864,https://github.com/hyperledger/sawtooth-core/pull/1242#issuecomment-352124864,chenette,Added a commit to fix the REST API description for GET /state/{address}.,2017-12-15 22:11:45,2017-12-15 22:11:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1242,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/353495141,https://github.com/hyperledger/sawtooth-core/pull/1242#issuecomment-353495141,peterschwarz,Missing sign-offs ,2017-12-22 00:53:49,2017-12-22 00:53:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1233,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352440894,https://github.com/hyperledger/sawtooth-core/pull/1233#issuecomment-352440894,agunde406,updated int32 -> uint32,2017-12-18 14:29:31,2017-12-18 14:29:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1230,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351298029,https://github.com/hyperledger/sawtooth-core/pull/1230#issuecomment-351298029,dcmiddle,@TomBarnes fixed,2017-12-13 06:39:06,2017-12-13 06:39:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1224,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351072486,https://github.com/hyperledger/sawtooth-core/pull/1224#issuecomment-351072486,aludvik,"There are a few gross things in here that I need to fix, but Andi should be able to use it as is",2017-12-12 14:47:18,2017-12-12 14:47:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1224,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351128064,https://github.com/hyperledger/sawtooth-core/pull/1224#issuecomment-351128064,chenette,"I believe that the new ""sawnet"" CLI should be documented in the CLI Reference.  You can follow the model of other parent-commands-with-subcommands, such as ""sawtooth block"" or ""sawset"". I'm available to help (aka edit the doc information).",2017-12-12 17:42:34,2017-12-12 17:42:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1224,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351470919,https://github.com/hyperledger/sawtooth-core/pull/1224#issuecomment-351470919,aludvik,Fixed gross things,2017-12-13 17:56:39,2017-12-13 17:56:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1224,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351487569,https://github.com/hyperledger/sawtooth-core/pull/1224#issuecomment-351487569,agunde406,To test you actually have to do `sawnet compare-chains --help`,2017-12-13 18:56:37,2017-12-13 18:56:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1224,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351567054,https://github.com/hyperledger/sawtooth-core/pull/1224#issuecomment-351567054,aludvik,"Added an okay implementation of `--tree`. I have a wip commit that is approaching something better, but don't want to spend anymore time on this for now.",2017-12-14 00:13:10,2017-12-14 00:13:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1222,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351837416,https://github.com/hyperledger/sawtooth-core/pull/1222#issuecomment-351837416,chenette,"I'm abandoning (closing) this PR because it's too confusing.  I created a new PR with only the REST API changes (the commit to ""Fix typos, punctuation, and wording issues"").  I've copied Zac's comments to the new PR and will make the fix there - please see #1242 .",2017-12-14 21:13:03,2017-12-14 21:13:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1221,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351161299,https://github.com/hyperledger/sawtooth-core/pull/1221#issuecomment-351161299,peterschwarz,Updated description based on new changes,2017-12-12 19:16:40,2017-12-12 19:16:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1221,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351543153,https://github.com/hyperledger/sawtooth-core/pull/1221#issuecomment-351543153,peterschwarz,Rebased to pick up network changes for testing,2017-12-13 22:17:37,2017-12-13 22:17:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1221,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/352531184,https://github.com/hyperledger/sawtooth-core/pull/1221#issuecomment-352531184,peterschwarz,Closing in favor of an adaptive back-pressure solution.,2017-12-18 19:22:08,2017-12-18 19:22:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1220,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350834761,https://github.com/hyperledger/sawtooth-core/pull/1220#issuecomment-350834761,rberg2,I split up a long line and rebased.,2017-12-11 19:40:53,2017-12-11 19:40:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1219,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350805006,https://github.com/hyperledger/sawtooth-core/pull/1219#issuecomment-350805006,dcmiddle,"Per vaporos, please update your commit message. Otherwise looks good to me and tests clean locally.",2017-12-11 17:58:24,2017-12-11 17:58:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1219,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350817142,https://github.com/hyperledger/sawtooth-core/pull/1219#issuecomment-350817142,vaporos,"In the commit message, you could re-use what you provided in the PR description:

""
    Fixed wrong size zeroing in enclave.cpp file
    Removed extra code in c11_support.cpp/c files
""

If this were two commits, the above would be fairly good commit messages.  Keeping them in the same commit, you can add another paragraph with this level of detail.",2017-12-11 18:40:47,2017-12-11 18:40:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1218,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350753795,https://github.com/hyperledger/sawtooth-core/pull/1218#issuecomment-350753795,peterschwarz,"Thanks for the PR.  You're going to need to do a couple of things first, in order to get it merged. Following our [commit process](https://sawtooth.hyperledger.org/docs/core/nightly/master/community/contributing.html#commit-process), you need to have your commit signed off. Since you have one commit, this should be straightforward:

```
$ git commit --amend -s
```

Secondly, you'll need to go through the DCO sign-off, which is under the list of Checks.",2017-12-11 15:16:53,2017-12-11 15:16:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1218,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350783632,https://github.com/hyperledger/sawtooth-core/pull/1218#issuecomment-350783632,nick-drozd,Good catch. Could you make the commit message more specific? Something like `Fix typos in JS Context docstrings`,2017-12-11 16:48:46,2017-12-11 16:48:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1218,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350873781,https://github.com/hyperledger/sawtooth-core/pull/1218#issuecomment-350873781,tristanperalta,done that,2017-12-11 22:05:44,2017-12-11 22:05:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1217,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351411107,https://github.com/hyperledger/sawtooth-core/pull/1217#issuecomment-351411107,peterschwarz,@dcmiddle Added a LICENSE file to the `docs/source/images` directory.,2017-12-13 14:43:57,2017-12-13 14:43:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1217,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351481684,https://github.com/hyperledger/sawtooth-core/pull/1217#issuecomment-351481684,peterschwarz,"The SVG files were most likely generated using the same tool that produced the PDF artifacts.  All the images are covered by the LICENSE file in the `docs/source/images` directory.

I may have missed removing the CC 4.0 license from the file you mentioned.

Yeah, the recommendation was to put that info at the bottom.",2017-12-13 18:35:17,2017-12-13 18:35:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1217,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351482763,https://github.com/hyperledger/sawtooth-core/pull/1217#issuecomment-351482763,peterschwarz,Updated to remove remaining SVG header,2017-12-13 18:39:21,2017-12-13 18:39:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1215,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350852116,https://github.com/hyperledger/sawtooth-core/pull/1215#issuecomment-350852116,rberg2,"There are a few references to vagrant in the documentation as well.
docs/source/introduction.rst
docs/source/community/issue_tracking.rst",2017-12-11 20:43:39,2017-12-11 20:43:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1215,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350859091,https://github.com/hyperledger/sawtooth-core/pull/1215#issuecomment-350859091,peterschwarz,Updated doc before merging,2017-12-11 21:09:50,2017-12-11 21:09:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1209,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350106296,https://github.com/hyperledger/sawtooth-core/pull/1209#issuecomment-350106296,askmish,@vaporos please review updates,2017-12-07 21:55:21,2017-12-07 21:55:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1209,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350744782,https://github.com/hyperledger/sawtooth-core/pull/1209#issuecomment-350744782,askmish,@vaporos Reminder..,2017-12-11 14:46:39,2017-12-11 14:46:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1207,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/349326863,https://github.com/hyperledger/sawtooth-core/pull/1207#issuecomment-349326863,dcmiddle,Just did this for a demo on how to make a commit at the Lisbon hackfest.,2017-12-05 14:51:25,2017-12-05 14:51:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1205,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/349355151,https://github.com/hyperledger/sawtooth-core/pull/1205#issuecomment-349355151,peterschwarz,"I should have had a chance to weigh in on this.  It should be rolled back:  It's a breaking change.

 NULL_BLOCK_ID is in the genesis block, so, changing that, means any checks for ""is this the genesis block"" will be wrong for existing chains that have upgraded from the previous version.  There is no way to create a migration script, either, since it's in the block header and effects every signature from the genesis block on.",2017-12-05 16:16:53,2017-12-05 16:17:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1199,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/349132867,https://github.com/hyperledger/sawtooth-core/pull/1199#issuecomment-349132867,rberg2,@aludvik Comments added and rebased. Care to take another look?,2017-12-04 22:47:56,2017-12-04 22:47:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1199,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/349369947,https://github.com/hyperledger/sawtooth-core/pull/1199#issuecomment-349369947,rberg2,addresses ticket STL-900,2017-12-05 17:01:19,2017-12-05 17:01:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1196,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/348808124,https://github.com/hyperledger/sawtooth-core/pull/1196#issuecomment-348808124,dcmiddle,"@askmish FYI, looks like a build problem. You can see the errors in the console logs through Jenkins (follow the details link under ""Some checks were not successful""
https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1196/6/console
",2017-12-03 19:36:35,2017-12-03 19:36:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1196,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/349004904,https://github.com/hyperledger/sawtooth-core/pull/1196#issuecomment-349004904,jsmitchell,Hi @askmish - we typically use a rebase workflow to keep the commit history clean of merge commits. Could you rewrite your commits to remove that 2625fa0 merge commit?,2017-12-04 15:55:05,2017-12-04 15:55:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1196,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/349328139,https://github.com/hyperledger/sawtooth-core/pull/1196#issuecomment-349328139,askmish,"Need sgx sdk 2.0 for building sgx code, else ci builds will fail at the latest sgx defs.",2017-12-05 14:55:28,2017-12-05 14:55:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1196,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350064269,https://github.com/hyperledger/sawtooth-core/pull/1196#issuecomment-350064269,cianx,@TomBarnes do you have any issue with @vaporos proposal to delay this commit to post 1.0?,2017-12-07 19:08:04,2017-12-07 19:08:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1196,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350070709,https://github.com/hyperledger/sawtooth-core/pull/1196#issuecomment-350070709,TomBarnes,This change is required to satisfy Sawtooth SDL requirements for release 1.0.  It provides the safe function library required to remove banned C++ functions from the PoET enclave code. ,2017-12-07 19:32:43,2017-12-07 19:32:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1196,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350074977,https://github.com/hyperledger/sawtooth-core/pull/1196#issuecomment-350074977,vaporos,"After the docs are updated to reflect SGX 2.0, we will test this PR on the LR0 hardware.  Specifically, I think we are missing an update to the ""Install SGX/PSW"" section.",2017-12-07 19:49:17,2017-12-07 19:49:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1196,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350103031,https://github.com/hyperledger/sawtooth-core/pull/1196#issuecomment-350103031,askmish,"@vaporos The docs have been updated including the ""Install SGX/PSW"" section, as part of the commits.",2017-12-07 21:41:59,2017-12-07 21:41:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1196,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/350141153,https://github.com/hyperledger/sawtooth-core/pull/1196#issuecomment-350141153,vaporos,@askmish Great! Sorry I missed that when I scanned through.  We will do some testing tomorrow.,2017-12-08 00:59:29,2017-12-08 00:59:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1193,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/348323412,https://github.com/hyperledger/sawtooth-core/pull/1193#issuecomment-348323412,aludvik,Added another typo fix I remembered,2017-11-30 21:17:04,2017-11-30 21:17:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1191,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/348507957,https://github.com/hyperledger/sawtooth-core/pull/1191#issuecomment-348507957,dcmiddle,"Yeah it would be good to get all the state-manageable settings documented (for other components too). Where do you think that would go? 
Maybe the sysadmin guide? Make section for poet?",2017-12-01 14:27:00,2017-12-01 14:27:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1191,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/348521089,https://github.com/hyperledger/sawtooth-core/pull/1191#issuecomment-348521089,jsmitchell,Would there be benefit in having this an on-chain setting?,2017-12-01 15:17:26,2017-12-01 15:17:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1191,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/349027521,https://github.com/hyperledger/sawtooth-core/pull/1191#issuecomment-349027521,dcmiddle,"@jsmitchell I believe it is an on-chain setting. 
sawtooth.poet.signup_commit_maximum_delay
consensus/poet/core/sawtooth_poet/poet_consensus/poet_settings_view.py:251",2017-12-04 17:00:07,2017-12-04 17:00:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1189,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/347978490,https://github.com/hyperledger/sawtooth-core/pull/1189#issuecomment-347978490,aludvik,@nick-drozd fixed,2017-11-29 19:59:54,2017-11-29 19:59:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1186,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/347964192,https://github.com/hyperledger/sawtooth-core/pull/1186#issuecomment-347964192,agunde406,Can you create a jira story to investigate this further so it doesn't get forgotten?,2017-11-29 19:10:25,2017-11-29 19:10:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1186,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/347976661,https://github.com/hyperledger/sawtooth-core/pull/1186#issuecomment-347976661,peterschwarz,Created [STL-906](https://jira.hyperledger.org/browse/STL-906),2017-11-29 19:53:25,2017-11-29 19:53:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1186,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/348003379,https://github.com/hyperledger/sawtooth-core/pull/1186#issuecomment-348003379,peterschwarz,"Closing in favor of #1188, which cherry-picked the commit",2017-11-29 21:33:24,2017-11-29 21:33:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1182,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/347731512,https://github.com/hyperledger/sawtooth-core/pull/1182#issuecomment-347731512,dcmiddle,Well 5th build got through. Other failures were all unrelated to the PR. Test timeout sensitivity in docker or something.,2017-11-29 02:22:26,2017-11-29 02:22:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1177,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/346885200,https://github.com/hyperledger/sawtooth-core/pull/1177#issuecomment-346885200,nick-drozd,This is a known pylint bug: https://github.com/PyCQA/pylint/issues/626,2017-11-24 19:14:40,2017-11-24 19:14:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1177,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/346887643,https://github.com/hyperledger/sawtooth-core/pull/1177#issuecomment-346887643,cclauss,"This is not a bug in the linting tools...

1) I did not use pylint.
2) https://github.com/PyCQA/pylint/issues/626 is correct.  Things changed in Python 3.4 and the code will raise an UnboundLocalError in Python 3.4+",2017-11-24 19:37:48,2017-11-24 19:37:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1177,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/346898267,https://github.com/hyperledger/sawtooth-core/pull/1177#issuecomment-346898267,nick-drozd,"@cclauss That was an incomplete thought on my part. What I meant was: These errors should have been caught by pylint (which runs as part of the build process), but, because of that bug, were not.",2017-11-24 21:33:52,2017-11-24 21:33:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1172,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/346911681,https://github.com/hyperledger/sawtooth-core/pull/1172#issuecomment-346911681,dcmiddle,Does parallel have the same test coverage as serial? Have we been testing it in e.g. LR networks?,2017-11-25 01:32:55,2017-11-25 01:32:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1172,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/346911964,https://github.com/hyperledger/sawtooth-core/pull/1172#issuecomment-346911964,agunde406,@dcmiddle Both schedulers run the same unit tests (where it makes sense) and we switched to using the parallel scheduler for LR networks a couple weeks ago. ,2017-11-25 01:41:01,2017-11-25 01:41:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1172,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/347262883,https://github.com/hyperledger/sawtooth-core/pull/1172#issuecomment-347262883,jsmitchell,Any concerns before this is merged @vaporos @boydjohnson @aludvik ,2017-11-27 17:41:42,2017-11-27 17:41:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1164,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/346217180,https://github.com/hyperledger/sawtooth-core/pull/1164#issuecomment-346217180,nick-drozd,Example page: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-1164/1/artifact/docs/build/html/sdks/python_sdk/processor.html#module-processor.context,2017-11-22 01:42:00,2017-11-22 01:42:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1161,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/346425585,https://github.com/hyperledger/sawtooth-core/pull/1161#issuecomment-346425585,aludvik,@peterschwarz fixed,2017-11-22 17:47:02,2017-11-22 17:47:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1142,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345598792,https://github.com/hyperledger/sawtooth-core/pull/1142#issuecomment-345598792,delventhalz,"The first commit has been heavily refactored, and now does a RegEx validation on many  BlockStore methods.",2017-11-20 05:56:02,2017-11-20 05:56:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1137,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345473481,https://github.com/hyperledger/sawtooth-core/pull/1137#issuecomment-345473481,peterschwarz,"Need to sign of your commit:

do a `git commit -s --amend` and repush it.",2017-11-18 21:42:48,2017-11-18 21:42:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1137,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345493280,https://github.com/hyperledger/sawtooth-core/pull/1137#issuecomment-345493280,BhamidiK,"Done.


________________________________
From: Peter Schwarz <notifications@github.com>
Sent: Saturday, November 18, 2017 9:42 PM
To: hyperledger/sawtooth-core
Cc: BhamidiK; Author
Subject: Re: [hyperledger/sawtooth-core] Changed get, set, delete to setState, getState, deleteState. (#1137)


Need to sign of your commit:

do a git commit -s --amend and repush it.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<https://github.com/hyperledger/sawtooth-core/pull/1137#issuecomment-345473481>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Af03gI1ImH20wCnXjO5uvExvKjuRtgmvks5s309agaJpZM4Qi6gr>.
",2017-11-19 05:27:14,2017-11-19 05:27:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1137,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/346102219,https://github.com/hyperledger/sawtooth-core/pull/1137#issuecomment-346102219,BhamidiK,"Thank you.


________________________________
From: Peter Schwarz <notifications@github.com>
Sent: Monday, November 20, 2017 6:55 PM
To: hyperledger/sawtooth-core
Cc: BhamidiK; Author
Subject: Re: [hyperledger/sawtooth-core] Changed get, set, delete to setState, getState, deleteState. (#1137)


Merged #1137<https://github.com/hyperledger/sawtooth-core/pull/1137>.

—
You are receiving this because you authored the thread.
Reply to this email directly, view it on GitHub<https://github.com/hyperledger/sawtooth-core/pull/1137#event-1350506286>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Af03gIthaDDlIVcxUAOQj0JkUeH7ppbhks5s4csogaJpZM4Qi6gr>.
",2017-11-21 17:33:14,2017-11-21 17:33:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1133,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345476215,https://github.com/hyperledger/sawtooth-core/pull/1133#issuecomment-345476215,agunde406,Looks like you missed one int test_network_permisssioning,2017-11-18 22:29:12,2017-11-18 22:29:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1124,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/351776498,https://github.com/hyperledger/sawtooth-core/pull/1124#issuecomment-351776498,peterschwarz,"This results in far slower behavior, so closing",2017-12-14 17:13:50,2017-12-14 17:13:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1123,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345352675,https://github.com/hyperledger/sawtooth-core/pull/1123#issuecomment-345352675,aludvik,https://github.com/hyperledger/sawtooth-seth,2017-11-17 20:07:43,2017-11-17 20:07:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1121,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345039212,https://github.com/hyperledger/sawtooth-core/pull/1121#issuecomment-345039212,aludvik,@chenette updated,2017-11-16 19:39:07,2017-11-16 19:39:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1117,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345044450,https://github.com/hyperledger/sawtooth-core/pull/1117#issuecomment-345044450,peterschwarz,"This looks pretty good.  My only comment would be to improve the commit message to have some more detail about the change, and to follow the [message format](https://chris.beams.io/posts/git-commit/#seven-rules) that is referenced in the [contribution guide](https://sawtooth.hyperledger.org/docs/core/releases/latest/community/contributing.html#commit-process) in the sawtooth docs",2017-11-16 19:57:34,2017-11-16 19:57:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1117,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345054015,https://github.com/hyperledger/sawtooth-core/pull/1117#issuecomment-345054015,benoitrazet,Thanks. I improved the commit message by adding some description of the change proposed. Let me know if anything needs more clarifications.,2017-11-16 20:34:16,2017-11-16 20:34:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1114,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/344984329,https://github.com/hyperledger/sawtooth-core/pull/1114#issuecomment-344984329,homarne,agreed - functions is extraneous to normal sawtooth operation,2017-11-16 16:47:15,2017-11-16 16:47:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1113,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345581203,https://github.com/hyperledger/sawtooth-core/pull/1113#issuecomment-345581203,dcmiddle,"I thought about the key classes and we might not be able to make those abstract. They have to be associated with a specific curve.
So then I wonder if we even need a ""context"" class. Once you instantiate a private key you can create a signature and/or a public key.
Once you instantiate a public key you can use it to verify a signature.

PublicKey's would have constructor logic to handle PrivateKey's as objects, hex, or bytes.

my_private = PrivateKey()
signature = my_private.sign(message)

my_public = PublicKey(my_private)
my_public_key_file.write(my_public.as_hex())
some_socket.write(my_public.as_bytes())
my_public = PublicKey(my_public_key_file.read())
my_public.verify(signature, message)",2017-11-20 03:19:51,2017-11-20 03:19:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1113,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345715287,https://github.com/hyperledger/sawtooth-core/pull/1113#issuecomment-345715287,vaporos,"Context is important for wrapping any state necessary.  That is more clear in the other languages where we avoid global variables.  For secp256k1, this corresponds to the secp256k1 context.",2017-11-20 14:41:57,2017-11-20 14:41:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1113,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345767988,https://github.com/hyperledger/sawtooth-core/pull/1113#issuecomment-345767988,peterschwarz,Added a commit to add `new_random_private_key` to the Context,2017-11-20 17:28:35,2017-11-20 17:28:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1110,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/344798227,https://github.com/hyperledger/sawtooth-core/pull/1110#issuecomment-344798227,aludvik,fixed typos,2017-11-16 02:43:23,2017-11-16 02:43:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1105,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/344343646,https://github.com/hyperledger/sawtooth-core/pull/1105#issuecomment-344343646,aludvik,@peterschwarz fixed,2017-11-14 17:58:54,2017-11-14 17:58:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1104,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/344034733,https://github.com/hyperledger/sawtooth-core/pull/1104#issuecomment-344034733,chenette,Note: The validator config info still needs cross references (links) to the Transaction Permissioning content; I'll do that in my later clean-up pass.,2017-11-13 19:43:22,2017-11-13 19:43:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1104,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/344436694,https://github.com/hyperledger/sawtooth-core/pull/1104#issuecomment-344436694,chenette,"I've made the requested fixes. I also corrected some inconsistencies, fixed formatting, and added info on using YAML vs TOML for syslog.",2017-11-14 23:37:17,2017-11-14 23:37:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1102,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/343927688,https://github.com/hyperledger/sawtooth-core/pull/1102#issuecomment-343927688,nick-drozd,https://github.com/hyperledger/sawtooth-core/pull/1101 renames `poet genesis` to `poet registration create`.,2017-11-13 14:02:50,2017-11-13 14:02:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1102,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/343964858,https://github.com/hyperledger/sawtooth-core/pull/1102#issuecomment-343964858,dcmiddle,Thanks @nick-drozd!  I knew if I ignored that part of the problem it would fix itself. ;),2017-11-13 16:00:00,2017-11-13 16:00:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1102,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/344042820,https://github.com/hyperledger/sawtooth-core/pull/1102#issuecomment-344042820,chenette,"@dcmiddle , is this task (creating a poet registry enrollment transaction from the CLI beyond the genesis block) already described in the Sawtooth doc?  If not, should it be?",2017-11-13 20:11:16,2017-11-13 20:11:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1102,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/344059488,https://github.com/hyperledger/sawtooth-core/pull/1102#issuecomment-344059488,dcmiddle,"@chenette I think the CLI docs will automatically update with the new option. As for a larger discussion of a how-to that might be good. I've been describing this general ability of sawtooth recently as ""Unpluggable"" consensus. I have a script I can put up as a gist or something but may as well get #1101 through first so it uses the updated syntax.",2017-11-13 21:12:16,2017-11-13 21:12:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1100,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/343545467,https://github.com/hyperledger/sawtooth-core/pull/1100#issuecomment-343545467,aludvik,@agunde406 stole my numbers so I had to get new ones,2017-11-10 18:09:08,2017-11-10 18:09:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1100,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/343597902,https://github.com/hyperledger/sawtooth-core/pull/1100#issuecomment-343597902,aludvik,@vaporos didn't like my names so I got new ones,2017-11-10 21:56:22,2017-11-10 21:56:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1093,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342983994,https://github.com/hyperledger/sawtooth-core/pull/1093#issuecomment-342983994,chenette,"FIXED: I removed the second ""Lake"" in the path.toml.example comment.",2017-11-08 22:34:36,2017-11-08 22:34:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1092,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/343526466,https://github.com/hyperledger/sawtooth-core/pull/1092#issuecomment-343526466,aludvik,Addressed @peterschwarz and @nick-drozd comments,2017-11-10 16:52:15,2017-11-10 16:52:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1090,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/343319003,https://github.com/hyperledger/sawtooth-core/pull/1090#issuecomment-343319003,nick-drozd,@agunde406 I added a commit to get rid of the deprecated context methods.,2017-11-09 22:55:32,2017-11-09 22:55:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1085,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342653433,https://github.com/hyperledger/sawtooth-core/pull/1085#issuecomment-342653433,aludvik,I forgot to lint first,2017-11-07 23:03:24,2017-11-07 23:03:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1085,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342668220,https://github.com/hyperledger/sawtooth-core/pull/1085#issuecomment-342668220,aludvik,I took some additional notes on how the BlockValidator could be further changed here: https://github.com/aludvik/sawtooth-notes/blob/master/block_validator_notes,2017-11-08 00:19:50,2017-11-08 00:19:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1082,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342626726,https://github.com/hyperledger/sawtooth-core/pull/1082#issuecomment-342626726,peterschwarz,Rebased from master.,2017-11-07 21:23:57,2017-11-07 21:23:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1078,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342528391,https://github.com/hyperledger/sawtooth-core/pull/1078#issuecomment-342528391,rbuysse,This PR depends on new dockerhub repos being created. This is in process.,2017-11-07 15:57:16,2017-11-07 15:57:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1072,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342153721,https://github.com/hyperledger/sawtooth-core/pull/1072#issuecomment-342153721,dcmiddle,Any assignee feel free to merge following approvals. I may be away from merge buttons when it is approved.,2017-11-06 13:49:58,2017-11-06 13:49:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1071,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342536277,https://github.com/hyperledger/sawtooth-core/pull/1071#issuecomment-342536277,peterschwarz,"Thanks for the PR.  There are couple things that need to get cleaned up here, with respect to the commit process.  
1) Could you fixup the commit message to follow the rules we reference in the contribution guide (found [here](https://chris.beams.io/posts/git-commit/#seven-rules))
2) Make sure you sign off with the DCO (see under the list of Checks)

Full commit process is found here:
https://sawtooth.hyperledger.org/docs/core/releases/latest/community/contributing.html#commit-process",2017-11-07 16:20:33,2017-11-07 16:20:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1071,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342596314,https://github.com/hyperledger/sawtooth-core/pull/1071#issuecomment-342596314,peterschwarz,"Looks like there might also be an issue with the way that you did the sign-off in your commit.  Again, take a look at the guide I posted in an earlier comment here.",2017-11-07 19:34:05,2017-11-07 19:34:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1071,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342606050,https://github.com/hyperledger/sawtooth-core/pull/1071#issuecomment-342606050,ineffectualproperty,"@BhamidiK I believe your e-mail address needs to be in < > to be captured by the DCO bot, e.g. <bhamidik@hotmail.com>. The e-mail may also need to match your github account.",2017-11-07 20:07:34,2017-11-07 20:07:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1071,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342678913,https://github.com/hyperledger/sawtooth-core/pull/1071#issuecomment-342678913,BhamidiK,"will fix. Thank you.


Krishna


________________________________
From: Kelly Olson <notifications@github.com>
Sent: Tuesday, November 7, 2017 8:07 PM
To: hyperledger/sawtooth-core
Cc: BhamidiK; Mention
Subject: Re: [hyperledger/sawtooth-core] STL-802: Changed state methods from get and set to get_state and set_… (#1071)


@BhamidiK<https://github.com/bhamidik> I believe your e-mail address needs to be in < > to be captured by the DCO bot, e.g. bhamidik@hotmail.com<mailto:bhamidik@hotmail.com>. The e-mail may also need to match your github account.

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub<https://github.com/hyperledger/sawtooth-core/pull/1071#issuecomment-342606050>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Af03gIkRkj4WIlAH9oTnFsg4I-9WBTM_ks5s0LiJgaJpZM4QSuhh>.
",2017-11-08 01:21:57,2017-11-08 01:21:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1071,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/344462308,https://github.com/hyperledger/sawtooth-core/pull/1071#issuecomment-344462308,BhamidiK,"Please can you kick-off a build? My builds fail: 
_[jenkins-Sawtooth-Hyperledger-sawtooth-core-PR-1071-4] Running shell script
+ ./bin/whitelist BhamidiK COMMITTERS
FAILED: User 'BhamidiK' not whitelisted._",2017-11-15 02:03:07,2017-11-15 02:03:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1071,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/344998861,https://github.com/hyperledger/sawtooth-core/pull/1071#issuecomment-344998861,peterschwarz,It looks like this PR might have had a messy rebase or merge.  Could you close it and resubmit a new PR with a single commit?,2017-11-16 17:33:28,2017-11-16 17:33:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1071,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/345145922,https://github.com/hyperledger/sawtooth-core/pull/1071#issuecomment-345145922,BhamidiK,"Sure, will do.


Krishna


________________________________
From: Peter Schwarz <notifications@github.com>
Sent: Thursday, November 16, 2017 5:33 PM
To: hyperledger/sawtooth-core
Cc: BhamidiK; Mention
Subject: Re: [hyperledger/sawtooth-core] STL-802: Changed state methods from get and set to get_state and set_… (#1071)


It looks like this PR might have had a messy rebase or merge. Could you close it and resubmit a new PR with a single commit?

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub<https://github.com/hyperledger/sawtooth-core/pull/1071#issuecomment-344998861>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Af03gPe36hcW8pBW6ubzVTRP0LcvuMuwks5s3HHsgaJpZM4QSuhh>.
",2017-11-17 04:59:55,2017-11-17 04:59:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1065,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/341823172,https://github.com/hyperledger/sawtooth-core/pull/1065#issuecomment-341823172,chenette,"@peterschwarz - Yes, the capitalization inconsistencies are a known issue.  I plan to fix them (and other minor problems like punctuation, etc.) in a later edit pass.",2017-11-03 20:49:00,2017-11-03 20:49:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1063,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/341563117,https://github.com/hyperledger/sawtooth-core/pull/1063#issuecomment-341563117,peterschwarz,One open item here is that this will require a migration tool for upgrading 0.8.9 and below block stores.  Do we want to support that sort of upgrade? ,2017-11-02 21:26:09,2017-11-02 21:26:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1063,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/341565614,https://github.com/hyperledger/sawtooth-core/pull/1063#issuecomment-341565614,peterschwarz,"[STL-815](https://jira.hyperledger.org/browse/STL-815) has also been addressed by this change, for the block list command.",2017-11-02 21:36:31,2017-11-02 21:36:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1063,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/341566910,https://github.com/hyperledger/sawtooth-core/pull/1063#issuecomment-341566910,dcmiddle,I don't think we need to back port an optimization. This will all be ready in 1.0 soon enough.,2017-11-02 21:42:02,2017-11-02 21:42:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1063,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/341567951,https://github.com/hyperledger/sawtooth-core/pull/1063#issuecomment-341567951,peterschwarz,"It's not a back port.  This includes a significant structural change to how data is laid out in the LMDB for the blocks (and in future PR's the same may be true for the State DB).
",2017-11-02 21:46:18,2017-11-02 21:46:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1063,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/341572941,https://github.com/hyperledger/sawtooth-core/pull/1063#issuecomment-341572941,dcmiddle,I see. Let's not support that kind of upgrade.,2017-11-02 22:09:04,2017-11-02 22:09:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1063,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/343196539,https://github.com/hyperledger/sawtooth-core/pull/1063#issuecomment-343196539,peterschwarz,Rebased before merging,2017-11-09 15:49:15,2017-11-09 15:49:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1059,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/342186514,https://github.com/hyperledger/sawtooth-core/pull/1059#issuecomment-342186514,nick-drozd,@peterschwarz smallbank had one unused function that had to do with transaction headers. I removed it.,2017-11-06 15:38:31,2017-11-06 15:38:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1047,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/341224826,https://github.com/hyperledger/sawtooth-core/pull/1047#issuecomment-341224826,vaporos,"To be clear, I'm proposing moving this entire block into main after arg parsing/config loading.  Will probably require a pylint exception.",2017-11-01 20:06:46,2017-11-01 20:06:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1047,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/341227181,https://github.com/hyperledger/sawtooth-core/pull/1047#issuecomment-341227181,agunde406,"I was going off the assumption this will not go into master. And Ryan will do his magic to make it work but he needed a passed build to do it, hence the simple import error catch. ",2017-11-01 20:12:54,2017-11-01 20:12:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1045,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340909905,https://github.com/hyperledger/sawtooth-core/pull/1045#issuecomment-340909905,aludvik,Fixes for @peterschwarz ,2017-10-31 21:18:57,2017-10-31 21:18:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1043,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340872244,https://github.com/hyperledger/sawtooth-core/pull/1043#issuecomment-340872244,chenette,"I need to move this entry to AFTER all the ""sawtooth identity"" subcommands.  Will fix asap.",2017-10-31 18:58:35,2017-10-31 18:58:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1043,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340874084,https://github.com/hyperledger/sawtooth-core/pull/1043#issuecomment-340874084,chenette,Alph order corrected; it's now OK to review. Thanks!,2017-10-31 19:04:36,2017-10-31 19:04:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1043,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340920753,https://github.com/hyperledger/sawtooth-core/pull/1043#issuecomment-340920753,chenette,"Andi noted that these are also missing:
  sawtooth identity role
  identity-tp
  settings-tp
  
Any more missing commands or subcommands? ",2017-10-31 22:01:09,2017-10-31 22:01:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1043,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/341213155,https://github.com/hyperledger/sawtooth-core/pull/1043#issuecomment-341213155,chenette,"I'll add ""sawtooth identity role"" in a separate pull request.  Nick will add identity-tp and settings-tp to the usage-generation script  (first step for adding the usage to the CLI reference doc).",2017-11-01 19:27:05,2017-11-01 19:27:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1041,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340872382,https://github.com/hyperledger/sawtooth-core/pull/1041#issuecomment-340872382,aludvik,Updated confusing comments @jsmitchell ,2017-10-31 18:59:04,2017-10-31 18:59:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1035,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340506240,https://github.com/hyperledger/sawtooth-core/pull/1035#issuecomment-340506240,jsmitchell,How much time does this add to test execution?,2017-10-30 16:43:09,2017-10-30 16:43:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1035,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340507704,https://github.com/hyperledger/sawtooth-core/pull/1035#issuecomment-340507704,aludvik,The test takes ~6min to run locally.,2017-10-30 16:47:44,2017-10-30 16:47:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1035,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340509017,https://github.com/hyperledger/sawtooth-core/pull/1035#issuecomment-340509017,aludvik,Added an extra test to ensure a minimum number of batches are committed during the test.,2017-10-30 16:51:46,2017-10-30 16:51:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1035,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340597171,https://github.com/hyperledger/sawtooth-core/pull/1035#issuecomment-340597171,aludvik,"Added a fix to check_consensus and also added a lag between when the validators reach the target block and when they check consensus, since PoET sometimes has short forks.",2017-10-30 21:57:20,2017-10-30 21:57:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1035,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340604903,https://github.com/hyperledger/sawtooth-core/pull/1035#issuecomment-340604903,dcmiddle,"Ran around 7 min on my Nuc. That's  a pretty expensive addition on a 20 min PR test cycle. Any thoughts on how you could shorten it without losing utility of the test?
I cut down the sleep in the main test loop to 5 seconds but that only got me to 5:35. ",2017-10-30 22:33:18,2017-10-30 22:33:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1035,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340609081,https://github.com/hyperledger/sawtooth-core/pull/1035#issuecomment-340609081,aludvik,"This test was originally 15-20 minutes. I already tweaked the PoET settings to make it faster. We could always tweak the settings more (maybe make the boot strap period shorter if anyone knows how?). I think even though it is a longer test, it is immensely valuable as we do not currently have any tests that verify everything works to the extent that this test does.",2017-10-30 22:54:19,2017-10-30 22:54:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1035,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340609117,https://github.com/hyperledger/sawtooth-core/pull/1035#issuecomment-340609117,aludvik,There are also opportunities to remove and or shorten other tests.,2017-10-30 22:54:34,2017-10-30 22:54:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1024,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/339005503,https://github.com/hyperledger/sawtooth-core/pull/1024#issuecomment-339005503,agunde406,"The other SDKs only pass a dict/map {address: data} to set_state. To be consistent with them, StateEntry will be removed and a dict will be passed instead. The jira story has been updated. ",2017-10-24 14:17:06,2017-10-24 14:17:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1022,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/338774814,https://github.com/hyperledger/sawtooth-core/pull/1022#issuecomment-338774814,cclauss,Can someone please explain the Jenkins failure?  I do not understand.,2017-10-23 19:45:34,2017-10-23 19:45:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1022,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/339004732,https://github.com/hyperledger/sawtooth-core/pull/1022#issuecomment-339004732,dcmiddle,@cclauss jenkins went down. Shouldn't be an issue with this PR. We'll get the job re-run.,2017-10-24 14:14:43,2017-10-24 14:14:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1019,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/338691077,https://github.com/hyperledger/sawtooth-core/pull/1019#issuecomment-338691077,cclauss,@dcmiddle I live for that.,2017-10-23 15:10:02,2017-10-23 15:10:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1019,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/338695449,https://github.com/hyperledger/sawtooth-core/pull/1019#issuecomment-338695449,dcmiddle,The :robot: overlords are glad to hear it @cclauss. ;),2017-10-23 15:22:59,2017-10-23 15:22:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1017,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/338669327,https://github.com/hyperledger/sawtooth-core/pull/1017#issuecomment-338669327,agunde406,Tested locally,2017-10-23 14:03:34,2017-10-23 14:03:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1017,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/340224761,https://github.com/hyperledger/sawtooth-core/pull/1017#issuecomment-340224761,dcmiddle,@cianx I fixed per your feedback in separate commits for easier re-review. I'll re-rebase them in after you re-review.,2017-10-28 22:45:54,2017-10-28 22:45:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1013,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/338218273,https://github.com/hyperledger/sawtooth-core/pull/1013#issuecomment-338218273,peterschwarz,Added a commit to delete a TnT integration test,2017-10-20 14:12:16,2017-10-20 14:12:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1013,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/339143584,https://github.com/hyperledger/sawtooth-core/pull/1013#issuecomment-339143584,nick-drozd,"There are still a few T&T lines in `run_lint`, if you'd care to remove them.",2017-10-24 21:49:29,2017-10-24 21:49:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/339116394,https://github.com/hyperledger/sawtooth-core/pull/1012#issuecomment-339116394,chenette,"@peterschwarz:The plan, I believe, is to work on better (and consistent) CLI usage text as a separate task. I am currently gathering recommendations and will create a CLI usage style guide as part of https://jira.hyperledger.org/browse/STL-744. ",2017-10-24 20:12:15,2017-10-24 20:12:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1012,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/339144313,https://github.com/hyperledger/sawtooth-core/pull/1012#issuecomment-339144313,nick-drozd,@chenette @peterschwarz I added some not-very-thoughtful usage text descriptions to the new commands. We can discuss better alternatives now or come back to it later.,2017-10-24 21:51:57,2017-10-24 21:51:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1010,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/337366741,https://github.com/hyperledger/sawtooth-core/pull/1010#issuecomment-337366741,agunde406,Removed the renumbering from the protos,2017-10-17 20:50:32,2017-10-17 20:50:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/1002,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/337282744,https://github.com/hyperledger/sawtooth-core/pull/1002#issuecomment-337282744,cclauss,Closed to placate DCO tool.,2017-10-17 16:09:44,2017-10-17 16:09:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/988,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/335577614,https://github.com/hyperledger/sawtooth-core/pull/988#issuecomment-335577614,dcmiddle,"The DCO bot is throwing a false positive. The sign-off is clearly in the commit.
I will merge in spite of this tool false positive.",2017-10-10 19:12:46,2017-10-10 19:12:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/987,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/335578185,https://github.com/hyperledger/sawtooth-core/pull/987#issuecomment-335578185,dcmiddle,"The DCO bot is throwing a false positive. The sign-off is clearly in the commit.
I will merge in spite of this tool false positive.",2017-10-10 19:14:55,2017-10-10 19:14:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/979,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/334290142,https://github.com/hyperledger/sawtooth-core/pull/979#issuecomment-334290142,nick-drozd,Nice theming with the example data.,2017-10-04 21:09:01,2017-10-04 21:09:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/978,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/334205391,https://github.com/hyperledger/sawtooth-core/pull/978#issuecomment-334205391,jsmitchell,Can you give this PR a better title?,2017-10-04 16:03:12,2017-10-04 16:03:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/978,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/334263286,https://github.com/hyperledger/sawtooth-core/pull/978#issuecomment-334263286,dcmiddle,"@cianx fyi, just putting this up to facilitate my own review. I haven't had a chance to dig in much with it yet and may not for a couple days so heads up in case you wanted to take a look sooner.",2017-10-04 19:25:30,2017-10-04 19:25:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/978,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/334819167,https://github.com/hyperledger/sawtooth-core/pull/978#issuecomment-334819167,dcmiddle,"Code review looks good. I have not had infrastructure to run this yet. If someone else has a convenient environment to test this that would be great.
Other reviewers with more ZMQ+Sawtooth focus please scrutinize those elements. ",2017-10-06 17:27:24,2017-10-06 17:27:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/978,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/338439631,https://github.com/hyperledger/sawtooth-core/pull/978#issuecomment-338439631,dcmiddle,Need to resubmit reworked PR separately.,2017-10-21 23:29:34,2017-10-21 23:29:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/974,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/333883794,https://github.com/hyperledger/sawtooth-core/pull/974#issuecomment-333883794,boydjohnson,"Several fixes have this test running faster and pretty stable: I was sorting on a string when I wanted to be sorting on an int, and I didn't need to be sorting at all, the target_wait_time and initial_wait_time are decreased to 5.0s, the 2 ""trust and 2 ""challenge"" tests have been combined into 1 ""trust and 1 ""challenge test, to decrease the number of validators started.",2017-10-03 15:43:28,2017-10-03 15:43:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/971,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/333555350,https://github.com/hyperledger/sawtooth-core/pull/971#issuecomment-333555350,peterschwarz,Updated to maintain transaction order.,2017-10-02 14:42:05,2017-10-02 14:42:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/962,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/333330093,https://github.com/hyperledger/sawtooth-core/pull/962#issuecomment-333330093,delventhalz,"@vaporos Given the end-of-month deadline, if this deployment workflow is not acceptable I think it is best we close this PR and merge track-and-trade into master. A modified PR can be made against master at a later date.",2017-09-30 19:20:11,2017-09-30 19:20:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/962,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/333331493,https://github.com/hyperledger/sawtooth-core/pull/962#issuecomment-333331493,vaporos,I'm fine with this being re-submitted against master directly after the track-and-trade merge.,2017-09-30 19:44:10,2017-09-30 19:44:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/947,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332911814,https://github.com/hyperledger/sawtooth-core/pull/947#issuecomment-332911814,peterschwarz,Updated to include reporter Rescind/Revoke,2017-09-28 17:44:46,2017-09-28 17:44:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/947,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332917439,https://github.com/hyperledger/sawtooth-core/pull/947#issuecomment-332917439,peterschwarz,Rebased,2017-09-28 18:04:57,2017-09-28 18:04:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/945,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332682980,https://github.com/hyperledger/sawtooth-core/pull/945#issuecomment-332682980,delventhalz,Accepting owner/custodian proposals seems to work.,2017-09-27 23:22:07,2017-09-27 23:22:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/941,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332881592,https://github.com/hyperledger/sawtooth-core/pull/941#issuecomment-332881592,nick-drozd,I redid the queries as per Zac's suggestion. I also fixed the missing value empty list bug.,2017-09-28 15:55:41,2017-09-28 15:55:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/934,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332563195,https://github.com/hyperledger/sawtooth-core/pull/934#issuecomment-332563195,peterschwarz,"Only concern is the licensing of the google map stuff, but otherwise looks good.",2017-09-27 15:38:48,2017-09-27 15:38:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/932,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332287629,https://github.com/hyperledger/sawtooth-core/pull/932#issuecomment-332287629,peterschwarz,"Added the ""Finalize"" Button",2017-09-26 18:14:40,2017-09-26 18:14:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/932,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332308550,https://github.com/hyperledger/sawtooth-core/pull/932#issuecomment-332308550,peterschwarz,Added a little refactoring,2017-09-26 19:25:52,2017-09-26 19:25:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/932,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332544460,https://github.com/hyperledger/sawtooth-core/pull/932#issuecomment-332544460,peterschwarz,"Rebased, and added an number of commits.  

Remaining work - Accepting/rejecting proposals",2017-09-27 14:42:57,2017-09-27 14:42:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/932,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332587530,https://github.com/hyperledger/sawtooth-core/pull/932#issuecomment-332587530,peterschwarz,Rebased,2017-09-27 16:59:17,2017-09-27 16:59:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/927,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/332039479,https://github.com/hyperledger/sawtooth-core/pull/927#issuecomment-332039479,jjason,"Tested locally (clean - i.e., `vagrant destroy`, `vagrant up`)",2017-09-25 23:10:17,2017-09-25 23:10:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/915,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331564264,https://github.com/hyperledger/sawtooth-core/pull/915#issuecomment-331564264,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=915) <br/>All committers have signed the CLA.,2017-09-22 21:25:10,2017-09-22 21:25:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/915,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331565449,https://github.com/hyperledger/sawtooth-core/pull/915#issuecomment-331565449,jjason,"To test locally (YMMV, but this is what worked for me in Vagrant VM on Windows):

1. `build_all` (or if you are impatient `build_all -l cxx`)
2.  In a shell, start up validator:
```
sawtooth admin keygen
sawtooth config genesis -k ~/sawtooth/keys/validator.priv -o config-genesis.batch
sawtooth admin genesis config-genesis.batch
sawtooth-validator -vv --endpoint tcp://localhost:8800 --bind component:tcp://127.0.0.1:4004 --bind network:tcp://127.0.0.1:8800
```
3.  In another shell, start up C++ intkey TP:
```
./sdk/cxx/build/bin/intkey_cxx tcp://localhost:4004
```
4.  In another shell, start up any other TP (e.g., `settings-tp -vv tcp://localhost:4004`)

If you kill (i.e., Ctrl-C) the TP in step 4, you should see the intkey C++ TP emit a log message that it received a TP_PING message and the validator should emit log messages that it both sent a TP_PING and recieved a TP_PING_RESPONSE.
",2017-09-22 21:31:21,2017-09-22 21:31:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/915,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331973748,https://github.com/hyperledger/sawtooth-core/pull/915#issuecomment-331973748,jjason,Quick rebase before merge,2017-09-25 18:38:40,2017-09-25 18:38:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/914,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331570427,https://github.com/hyperledger/sawtooth-core/pull/914#issuecomment-331570427,peterschwarz,Added truncation for names,2017-09-22 22:00:05,2017-09-22 22:00:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/912,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331546595,https://github.com/hyperledger/sawtooth-core/pull/912#issuecomment-331546595,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=912) <br/>All committers have signed the CLA.,2017-09-22 20:00:21,2017-09-22 20:00:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/910,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331528194,https://github.com/hyperledger/sawtooth-core/pull/910#issuecomment-331528194,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=910) <br/>All committers have signed the CLA.,2017-09-22 18:39:02,2017-09-22 19:32:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/910,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331528412,https://github.com/hyperledger/sawtooth-core/pull/910#issuecomment-331528412,chenette,@boydjohnson and @jsmitchell - would you be so kind as to review/approve my pull request to add me to the COMMITTERS list?  Thanks!,2017-09-22 18:39:56,2017-09-22 18:39:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/899,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331315798,https://github.com/hyperledger/sawtooth-core/pull/899#issuecomment-331315798,vaporos,"In addition to the previously-reviewed content in the smallbank branch, this includes 3 new commits.",2017-09-22 00:16:06,2017-09-22 00:16:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/897,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331250209,https://github.com/hyperledger/sawtooth-core/pull/897#issuecomment-331250209,peterschwarz,"Note, this is the proper way to fix the same problem being fixed in #888 ",2017-09-21 18:59:18,2017-09-21 18:59:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/895,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331231493,https://github.com/hyperledger/sawtooth-core/pull/895#issuecomment-331231493,aludvik,"To test manually:
Startup seth: `docker-compose -f docker/compose/sawtooth-seth.yaml up`
Connect to client: `docker exec -it seth-client bash`
Generate a PEM key: `openssl ecparam -genkey -name secp256k1 | openssl ec -out test.pem -aes128`
Import the key: `seth account import test.pem test`
Submit a transaction: `seth account create test`",2017-09-21 17:48:43,2017-09-21 17:48:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/895,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331471615,https://github.com/hyperledger/sawtooth-core/pull/895#issuecomment-331471615,aludvik,Use `path.Match`,2017-09-22 14:59:56,2017-09-22 14:59:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/893,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331179377,https://github.com/hyperledger/sawtooth-core/pull/893#issuecomment-331179377,delventhalz,"@nick-drozd For the most part, you can assign variables normally and REQL will reference them. But `do` let's you keep everything in the same query, so assignment may or may not work out in your case. I'll keep my eye out for any obvious refactors.",2017-09-21 14:46:15,2017-09-21 14:46:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/893,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331453993,https://github.com/hyperledger/sawtooth-core/pull/893#issuecomment-331453993,nick-drozd,"The `/records` and `/records/:recordId` endpoints differ slightly from what's in the design doc.

1. The doc has
```
      ""properties"": {
        <property name>: [
          {
            ""timestamp"": <integer, seconds>,
            ""value"": <a value matching the property's ""type"">
          }
        ]
      }
    },
```
whereas these endpoints have
```
test-track-and-trade_1  |             ""properties"": [
test-track-and-trade_1  |                 {
test-track-and-trade_1  |                     ""name"": ""species"",
test-track-and-trade_1  |                     ""values"": [
test-track-and-trade_1  |                         {
test-track-and-trade_1  |                             ""timestamp"": 1506020855,
test-track-and-trade_1  |                             ""value"": ""trout""
test-track-and-trade_1  |                         }
test-track-and-trade_1  |                     ]
test-track-and-trade_1  |                 },
```
This is because I couldn't figure out how to the key to evaluate rather than get converted to a string. 

""But haven't you heard the good news?"" you say. ""ES6 has _computed property keys_. Just wrap the key in brackets and it will evaluate as usual.""

I tried that, but Reql mangles the names:
```
test-track-and-trade_1  |         ""properties"": [
test-track-and-trade_1  |             {
test-track-and-trade_1  |                 ""var_169(\""name\"")"": [
test-track-and-trade_1  |                     {
test-track-and-trade_1  |                         ""timestamp"": 1506010634,
test-track-and-trade_1  |                         ""value"": ""trout""
test-track-and-trade_1  |                     }
test-track-and-trade_1  |                 ]
test-track-and-trade_1  |             },
```
Anyway, if there's an easy way to fix this, I'll do it, but I don't think it's a huge difference.",2017-09-22 13:56:37,2017-09-22 13:56:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/893,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331471077,https://github.com/hyperledger/sawtooth-core/pull/893#issuecomment-331471077,peterschwarz,"I think, instead of: 
```
...
'properties': propertyValues
              .map(propertyValue => r.expr({
                'name': getName(propertyValue),
                'values': propertyValue('values').pluck('value', 'timestamp')
              }))
...
```
you could do
```
...
'properties': r.union(r.expr({}), propertyvalues).reduce((properties, propertyValue) => {
   return properties.merge(r.object(getName(propertyValue)], propertyValue('values').pluck('value', 'timestamp'))
})
...
``` 
   ",2017-09-22 14:57:58,2017-09-22 15:42:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/893,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331518922,https://github.com/hyperledger/sawtooth-core/pull/893#issuecomment-331518922,delventhalz,"@nick-drozd The pre-ES6 way to use an evaluated key is to do it in two statements. One creating the object, and the other setting the key. In other words:
```
const newObjWithKey = (key, value) => {
  const obj = {}
  obj[key] = value
  return obj
}
```

Hideous, I know, but ES6 niceties mostly don't seem to work in ReQL. You should be able to abstract this into a function or some such.",2017-09-22 18:00:48,2017-09-22 18:01:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/893,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331544287,https://github.com/hyperledger/sawtooth-core/pull/893#issuecomment-331544287,delventhalz,"@nick-drozd Seems to work well, but I would like to see the properties updated to match the spec if possible.",2017-09-22 19:51:06,2017-09-22 19:51:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/893,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331556735,https://github.com/hyperledger/sawtooth-core/pull/893#issuecomment-331556735,peterschwarz,I agree with @delventhalz about the properties,2017-09-22 20:47:44,2017-09-22 20:47:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/887,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331524691,https://github.com/hyperledger/sawtooth-core/pull/887#issuecomment-331524691,RyanLassigBanks,No longer relevant,2017-09-22 18:25:08,2017-09-22 18:25:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/882,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/330970904,https://github.com/hyperledger/sawtooth-core/pull/882#issuecomment-330970904,dcmiddle,"@agunde406 did this import get by because we don't use that _generate_id method in the tests?
If not maybe we should cut that method rather than add the import?",2017-09-20 20:27:53,2017-09-20 20:27:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/882,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/330972058,https://github.com/hyperledger/sawtooth-core/pull/882#issuecomment-330972058,agunde406,"Ya it doesn't look like that method is used, it should be removed. ",2017-09-20 20:32:10,2017-09-20 20:32:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/882,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/335585071,https://github.com/hyperledger/sawtooth-core/pull/882#issuecomment-335585071,dcmiddle,"Regarding the sign-off. You might find it easier to amend your commit and then rebase. Then you don't need to close this PR like you did with the other contributions.
The below works if you named this remote ""upstream"".
```
git fetch upstream master
git rebase -i upstream/master
git push <yourfork> <thisbranch> -f 
```",2017-10-10 19:41:04,2017-10-12 20:00:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/882,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/336617310,https://github.com/hyperledger/sawtooth-core/pull/882#issuecomment-336617310,cclauss,Closed in favor of #1002 ,2017-10-14 07:35:58,2017-10-14 07:35:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/881,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/330972114,https://github.com/hyperledger/sawtooth-core/pull/881#issuecomment-330972114,dcmiddle,@peterschwarz can you take a look at this? Looks like you added the code requiring the imports.,2017-09-20 20:32:24,2017-09-20 20:32:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/881,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/330974738,https://github.com/hyperledger/sawtooth-core/pull/881#issuecomment-330974738,peterschwarz,Probably need to add these files to the pylint paths.,2017-09-20 20:42:18,2017-09-20 20:42:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/881,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331007844,https://github.com/hyperledger/sawtooth-core/pull/881#issuecomment-331007844,cclauss,These are standard library imports.  I would hope that if they are imported then pylint should be able to find them without further hinting.,2017-09-20 23:22:09,2017-09-20 23:22:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/881,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/331008152,https://github.com/hyperledger/sawtooth-core/pull/881#issuecomment-331008152,peterschwarz,"I don't mean the libraries imported, I'm referring to the portion of the
sawtooth source tree.  This sub path isn't part of the `run_lint` script

On Wed, Sep 20, 2017 at 6:22 PM cclauss <notifications@github.com> wrote:

> These are standard library imports. I would hope that if they are imported
> then pylint should be able to find them without further hinting.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/sawtooth-core/pull/881#issuecomment-331007844>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAROeULubWt_tMahudKAv8oTKyVvDhrcks5skZ4hgaJpZM4Pditk>
> .
>
",2017-09-20 23:24:09,2017-09-20 23:24:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/881,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/335221744,https://github.com/hyperledger/sawtooth-core/pull/881#issuecomment-335221744,cclauss,Closed in favor of #987,2017-10-09 17:13:28,2017-10-09 17:13:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/880,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/330784485,https://github.com/hyperledger/sawtooth-core/pull/880#issuecomment-330784485,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=880) <br/>All committers have signed the CLA.,2017-09-20 08:36:19,2017-09-20 08:36:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/880,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/333346516,https://github.com/hyperledger/sawtooth-core/pull/880#issuecomment-333346516,vaporos,"These files are from 0.7 and have been removed from the repository entirely, so closing this PR.  Thanks!",2017-10-01 01:13:58,2017-10-01 01:13:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/870,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/330552294,https://github.com/hyperledger/sawtooth-core/pull/870#issuecomment-330552294,agunde406,@vaporos Okay. It was based on comments @peterschwarz had made when we were trying to debug a peering issue. I updated it to only update the endpoint authorization message. ,2017-09-19 14:12:15,2017-09-19 14:12:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/869,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/330409752,https://github.com/hyperledger/sawtooth-core/pull/869#issuecomment-330409752,vaporos,"Is the intent to make it easier to start using the file?  If so, suggest also removing the id from the log filename (currently validator-xxxx-debug.log, suggesting validator-debug.log) and changing the filenames in this example file to match as well.

The original reason for including the id in the log file name was to support running multiple validators within the same environment.  This now seems like an edge case, given our use of docker and debian-based vm installs.",2017-09-19 02:26:34,2017-09-19 02:26:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/868,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/330553344,https://github.com/hyperledger/sawtooth-core/pull/868#issuecomment-330553344,peterschwarz,dup of successfully building #871 ,2017-09-19 14:15:11,2017-09-19 14:15:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/855,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/329802100,https://github.com/hyperledger/sawtooth-core/pull/855#issuecomment-329802100,agunde406,I also suggest removing the rename of State->Contexts from this PR as there is probably a significant amount of documentation that would need to be reviewed and updated. ,2017-09-15 14:40:37,2017-09-15 14:40:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/855,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/329808664,https://github.com/hyperledger/sawtooth-core/pull/855#issuecomment-329808664,aludvik,Added docstring to `add_event`. Passed on other commits and doc updating work to @RyanLassigBanks ,2017-09-15 15:03:09,2017-09-15 15:03:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/855,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/329843089,https://github.com/hyperledger/sawtooth-core/pull/855#issuecomment-329843089,aludvik,Added tests,2017-09-15 17:13:40,2017-09-15 17:13:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/852,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/329864639,https://github.com/hyperledger/sawtooth-core/pull/852#issuecomment-329864639,agunde406,I believe we need both svg and pdf when adding an image so it will be build pdf and html correctly. ,2017-09-15 18:31:17,2017-09-15 18:31:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/849,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/329493225,https://github.com/hyperledger/sawtooth-core/pull/849#issuecomment-329493225,delventhalz,"Transaction submission just got merged. Rebase and you'll have a `/transactions` endpoint you can `POST` TransactionList bytes to. Make sure you set up a user and get an auth token, then send the request with the following headers:
```
Authorization: <the auth token from user creation>
Content-Type: 'application/octet-stream
```",2017-09-14 14:07:37,2017-09-14 14:07:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/845,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/329207177,https://github.com/hyperledger/sawtooth-core/pull/845#issuecomment-329207177,dcmiddle,@amundson it reduces risk because it allows for more time for other validators to join the network. if you burn through 25 or 50 blocks before another validator can join that's where you risk a deadlock. ,2017-09-13 15:35:43,2017-09-13 15:35:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/845,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/330610055,https://github.com/hyperledger/sawtooth-core/pull/845#issuecomment-330610055,dcmiddle,rebased,2017-09-19 17:18:23,2017-09-19 17:18:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/844,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/329529967,https://github.com/hyperledger/sawtooth-core/pull/844#issuecomment-329529967,aludvik,"@zac, I believe I addressed all your change requests, with the exception of renaming `/receipts`, which we can do in a later pr.",2017-09-14 16:04:46,2017-09-14 16:04:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/843,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328985666,https://github.com/hyperledger/sawtooth-core/pull/843#issuecomment-328985666,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=843) <br/>All committers have signed the CLA.,2017-09-12 21:11:29,2017-09-12 21:14:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/830,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328549714,https://github.com/hyperledger/sawtooth-core/pull/830#issuecomment-328549714,delventhalz,"@peterschwarz You submit it in the POST to create the user. The server is agnostic about how you generate it, but once you've created a user account with a public key, it will expect that key to match for submitted transactions.

The next PR will be login/signup which will generate public keys client side used the SDK.",2017-09-11 14:37:44,2017-09-11 14:37:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/830,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328560746,https://github.com/hyperledger/sawtooth-core/pull/830#issuecomment-328560746,peterschwarz,"The batching pubkey is different from the client pubkey, but needs to be included in the transaction header.  Is it returned to the user on the initial authorization task?",2017-09-11 15:11:59,2017-09-11 15:11:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/830,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328612226,https://github.com/hyperledger/sawtooth-core/pull/830#issuecomment-328612226,delventhalz,"@peterschwarz Ah. That is a good question. My thought was it would just be a configuration variable, that whoever was deploying the client would know and set up. I'm not sure sending it back on authorization makes much sense since it will be the same value for all users. Perhaps an API route which will send back the publicKey? `GET /api/config` or some such?",2017-09-11 18:12:20,2017-09-11 18:12:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/829,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328575035,https://github.com/hyperledger/sawtooth-core/pull/829#issuecomment-328575035,aludvik,Added comments to commits,2017-09-11 15:58:35,2017-09-11 15:58:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/825,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328516900,https://github.com/hyperledger/sawtooth-core/pull/825#issuecomment-328516900,jsmitchell,"I've tested this locally and it works. Since purging of the cache is determined on every insert, we could have a situation where a large number of entries are encached prior to a long period of time with no insert activity. This would result in lots of references being kept in memory for arbitrary durations. On a busy cache, this is not an issue. On a bursty cache, eg. batch submission, this may be an issue. Do we want to switch to some other scheme? Spin up a thread to fire a purge event per duration? @peterschwarz @vaporos ",2017-09-11 12:41:45,2017-09-11 12:41:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/825,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328702680,https://github.com/hyperledger/sawtooth-core/pull/825#issuecomment-328702680,aludvik,@jsmitchell Would putting a limit on the size of the cache help solve that problem?,2017-09-12 01:16:17,2017-09-12 01:16:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/825,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328703338,https://github.com/hyperledger/sawtooth-core/pull/825#issuecomment-328703338,peterschwarz,"If we are going to put a size limit on it, we might as well just use a LRU Cache, which already exists in the Python core library.",2017-09-12 01:20:40,2017-09-12 01:20:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/825,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328890242,https://github.com/hyperledger/sawtooth-core/pull/825#issuecomment-328890242,delventhalz,"Based on the existing code, it seems not important for `TimedCache` to be very precise about when it purges old data. They mostly purges on block updates, which are not predictable (and potentially not all that regular depending on the deployment). That makes me doubt that it is important enough to spin up extra threads to ensure `TimedCaches` get regular semi-precise purges.

Admittedly though, I don't fully understand the purpose they were originally developed for. A size-delimited cache does seem fine for many of these application. However, for the BatchTracker, I want to be able to say to clients _""you can access invalid batch information for at least ten minutes""_. Longer is fine for this purpose, but less time is not fine. This is why a size-delimited cache does not work for the BatchTracker, and why I wasn't necessarily concerned about a lack of updates making invalid batches stick around indefinitely.",2017-09-12 15:32:48,2017-09-12 15:34:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/823,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328189727,https://github.com/hyperledger/sawtooth-core/pull/823#issuecomment-328189727,boydjohnson,"@aludvik Looks good, generally. I had a thought. Will anything be calling get_txn_execution_results before the scheduler is complete? Because of the way the parallel scheduler works, until the scheduler is complete it is still possible that a batch of transactions all with results will have the result thrown away and rerun.",2017-09-08 19:10:52,2017-09-08 19:10:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/821,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328221743,https://github.com/hyperledger/sawtooth-core/pull/821#issuecomment-328221743,peterschwarz,What's the reasoning for switching back the scheduler to all serial?,2017-09-08 21:47:38,2017-09-08 21:47:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/821,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/328223435,https://github.com/hyperledger/sawtooth-core/pull/821#issuecomment-328223435,boydjohnson,"@peterschwarz So due to the bug in the cli, the parallel scheduler wasn't actually being run. Due to a bug in the parallel scheduler when it was run it wouldn't pass this test. This afternoon, I was able to fix the bug in the parallel scheduler, so is can pass the dynamic network test, so switching back to serial probably isn't needed. I will update this PR with my bug-fix for the parallel scheduler.",2017-09-08 21:57:18,2017-09-08 21:57:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/816,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/327636272,https://github.com/hyperledger/sawtooth-core/pull/816#issuecomment-327636272,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=816) <br/>All committers have signed the CLA.,2017-09-06 23:07:53,2017-09-06 23:09:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/814,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/327895097,https://github.com/hyperledger/sawtooth-core/pull/814#issuecomment-327895097,aludvik,Addressed feedback and made EventFilter more complex,2017-09-07 19:08:29,2017-09-07 19:08:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/813,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/327936343,https://github.com/hyperledger/sawtooth-core/pull/813#issuecomment-327936343,delventhalz,@peterschwarz I also wouldn't mind a _few_ comments. Just some quick descriptions for some of the functions would probably be enough.,2017-09-07 21:49:07,2017-09-07 22:41:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/812,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/327599760,https://github.com/hyperledger/sawtooth-core/pull/812#issuecomment-327599760,nick-drozd,"Without a validator running, `npm start` repeatedly and verbosely searches for one:

```
$ npm start

> tnt_server@0.0.0 start /project/sawtooth-core/families/track_and_trade/server
> rethinkdb & nodemon index.js

Running rethinkdb 2.3.6 (CLANG 8.1.0 (clang-802.0.42))...
Running on Darwin 16.1.0 x86_64
Loading data from directory /project/sawtooth-core/families/track_and_trade/server/rethinkdb_data
Listening for intracluster connections on port 29015
Listening for client driver connections on port 28015
Listening for administrative HTTP connections on port 8080
Listening on cluster addresses: 127.0.0.1, ::1
Listening on driver addresses: 127.0.0.1, ::1
Listening on http addresses: 127.0.0.1, ::1
To fully expose RethinkDB on the network, bind to all addresses by running rethinkdb with the `--bind all` command line option.
Server ready, ""exciton_enp"" 6a5a3b39-2085-48e7-86f2-343c0965b931
[nodemon] 1.12.0
[nodemon] to restart at any time, enter `rs`
[nodemon] watching: *.*
[nodemon] starting `node index.js`
WARNING! No secret provided at startup!
JWT authorization tokens will be insecure.
Set the ""SECRET"" environment variable to create secure tokens.
Track and Trade Server listening on port 3000
Connected to tcp://localhost:4004
Disconnected from tcp://localhost:4004
Attempting to reconnect to tcp://localhost:4004
Failed to subscribe to blockchain: { ValidatorConnectionError: The connection to the validator was lost
    at Object.keys.forEach (/project/sawtooth-core/families/track_and_trade/server/node_modules/sawtooth-sdk/messaging/stream.js:90:9)
    at Array.forEach (native)
    at Stream._handleDisconnect (/project/sawtooth-core/families/track_and_trade/server/node_modules/sawtooth-sdk/messaging/stream.js:88:32)
    at exports.Socket._socket.on (/project/sawtooth-core/families/track_and_trade/server/node_modules/sawtooth-sdk/messaging/stream.js:71:58)
    at emitThree (events.js:135:13)
    at exports.Socket.emit (events.js:216:7)
    at Object.self._zmq.onMonitorEvent (/project/sawtooth-core/families/track_and_trade/server/node_modules/zeromq/lib/index.js:543:12) name: 'ValidatorConnectionError' }
Connected to tcp://localhost:4004
Disconnected from tcp://localhost:4004
Attempting to reconnect to tcp://localhost:4004
Failed to subscribe to blockchain: { ValidatorConnectionError: The connection to the validator was lost
    at Object.keys.forEach (/project/sawtooth-core/families/track_and_trade/server/node_modules/sawtooth-sdk/messaging/stream.js:90:9)
    at Array.forEach (native)
    at Stream._handleDisconnect (/project/sawtooth-core/families/track_and_trade/server/node_modules/sawtooth-sdk/messaging/stream.js:88:32)
    at exports.Socket._socket.on (/project/sawtooth-core/families/track_and_trade/server/node_modules/sawtooth-sdk/messaging/stream.js:71:58)
    at emitThree (events.js:135:13)
    at exports.Socket.emit (events.js:216:7)
    at Object.self._zmq.onMonitorEvent (/project/sawtooth-core/families/track_and_trade/server/node_modules/zeromq/lib/index.js:543:12) name: 'ValidatorConnectionError' }
```
Maybe there should be a limit on number of attempts? It should be less noisy, in any case.",2017-09-06 20:13:07,2017-09-06 20:13:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/812,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/327921931,https://github.com/hyperledger/sawtooth-core/pull/812#issuecomment-327921931,delventhalz,"@nick-drozd Unable to get this behavior for some reason at the moment. Which is odd because I have seen it before. Next time it pops up, I'll see if there is a decent way to reign that behavior a bit, though it may be better to fix this in the JS SDK rather than in this app. Also, since it is a deployment issue, I'm not super worried about right now. ",2017-09-07 20:42:06,2017-09-07 20:42:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/805,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/327175089,https://github.com/hyperledger/sawtooth-core/pull/805#issuecomment-327175089,aludvik,Added a doc string and additional assertion to `test_block_info_injector.py`,2017-09-05 13:28:42,2017-09-05 13:28:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/804,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326689857,https://github.com/hyperledger/sawtooth-core/pull/804#issuecomment-326689857,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=804) <br/>All committers have signed the CLA.,2017-09-01 21:41:49,2017-09-08 21:22:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/804,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326756172,https://github.com/hyperledger/sawtooth-core/pull/804#issuecomment-326756172,aludvik,Need to clean up git commits and add tests,2017-09-02 16:54:36,2017-09-02 16:54:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/802,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326687389,https://github.com/hyperledger/sawtooth-core/pull/802#issuecomment-326687389,boydjohnson,Hi @agunde406 Could you give a high level overview of what is happening in each of the handlers and why?,2017-09-01 21:26:26,2017-09-01 21:26:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/802,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326757413,https://github.com/hyperledger/sawtooth-core/pull/802#issuecomment-326757413,agunde406,Descriptions added to Authorization handlers,2017-09-02 17:13:08,2017-09-02 17:13:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/801,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/327009399,https://github.com/hyperledger/sawtooth-core/pull/801#issuecomment-327009399,boydjohnson,"@nick-drozd I fixed your typo comment and had a half-way rebuttal to your other comment, but because of a rebase, github isn't showing the rebuttal.",2017-09-04 18:00:32,2017-09-04 18:01:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/798,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326666507,https://github.com/hyperledger/sawtooth-core/pull/798#issuecomment-326666507,boydjohnson,"http://intelledger.github.io/app_developers_guide/ubuntu.html#validator-start-up-process It seems like `sawtooth config genesis` is a required startup command. So all of our integration tests should have them in the validator startup. It would be helpful for this PR, to include that change.",2017-09-01 19:34:43,2017-09-01 19:36:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/798,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326684314,https://github.com/hyperledger/sawtooth-core/pull/798#issuecomment-326684314,peterschwarz,"`sawtooth config genesis` is required if one is going to do any sort of settings transactions.  It can be skipped, but that could result in anyone hijacking the settings family (by being the only authorized key).",2017-09-01 21:09:06,2017-09-01 21:09:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/797,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326600793,https://github.com/hyperledger/sawtooth-core/pull/797#issuecomment-326600793,dplumb94,"When we merge this with the metrics branch and we want to collect statistics with the influx/grafana stack, the containers will have to be set to join the `sawtooth_stats` network. This can be set in the docker-compose file.",2017-09-01 14:49:17,2017-09-01 14:49:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/796,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326617655,https://github.com/hyperledger/sawtooth-core/pull/796#issuecomment-326617655,boydjohnson,"Build 2 failed on test_two_families. I ran that test 5 times locally and they each passed, so I am rebuilding.",2017-09-01 15:56:19,2017-09-01 15:56:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/796,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326673982,https://github.com/hyperledger/sawtooth-core/pull/796#issuecomment-326673982,boydjohnson,I am able to get it to fail intermittently locally by setting the vm on my mac to 2.5 Gbs and a single core. I will rethink this PR in light of that. ,2017-09-01 20:13:40,2017-09-01 20:13:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/794,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326328301,https://github.com/hyperledger/sawtooth-core/pull/794#issuecomment-326328301,CLAassistant,"[![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=794) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our [Contributor License Agreement](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=794) before we can accept your contribution.<br/>**9** out of **12** committers have signed the CLA.<br/><br/>:white_check_mark: delventhalz<br/>:white_check_mark: aludvik<br/>:white_check_mark: peterschwarz<br/>:white_check_mark: boydjohnson<br/>:white_check_mark: rbuysse<br/>:white_check_mark: vaporos<br/>:white_check_mark: agunde406<br/>:white_check_mark: jsmitchell<br/>:white_check_mark: dplumb94<br/>:x: feihujiang<br/>:x: dcmiddle<br/>:x: cianx<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/hyperledger/sawtooth-core?pullRequest=794) it.</sub>",2017-08-31 15:17:12,2017-08-31 15:17:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/792,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326326467,https://github.com/hyperledger/sawtooth-core/pull/792#issuecomment-326326467,CLAassistant,"[![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=792) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our [Contributor License Agreement](https://cla-assistant.io/hyperledger/sawtooth-core?pullRequest=792) before we can accept your contribution.<br/>**9** out of **12** committers have signed the CLA.<br/><br/>:white_check_mark: delventhalz<br/>:white_check_mark: peterschwarz<br/>:white_check_mark: aludvik<br/>:white_check_mark: vaporos<br/>:white_check_mark: dplumb94<br/>:white_check_mark: boydjohnson<br/>:white_check_mark: rbuysse<br/>:white_check_mark: jsmitchell<br/>:white_check_mark: agunde406<br/>:x: feihujiang<br/>:x: dcmiddle<br/>:x: cianx<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/hyperledger/sawtooth-core?pullRequest=792) it.</sub>",2017-08-31 15:11:20,2017-09-01 00:55:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/791,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326452815,https://github.com/hyperledger/sawtooth-core/pull/791#issuecomment-326452815,nick-drozd,"I'm consistently getting this:
```
$ npm start

> tnt_server@0.0.0 start /Users/drozd/project/sawtooth-core/families/track_and_trade/server
> rethinkdb & nodemon index.js

Directory 'rethinkdb_data' is already in use, perhaps another instance of rethinkdb is using it.
[nodemon] 1.11.0
[nodemon] to restart at any time, enter `rs`
[nodemon] watching: *.*
[nodemon] starting `node index.js`
module.js:487
    throw err;
    ^

Error: Cannot find module 'jsonwebtoken'
    at Function.Module._resolveFilename (module.js:485:15)
    at Function.Module._load (module.js:437:25)
    at Module.require (module.js:513:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/drozd/project/sawtooth-core/families/track_and_trade/server/api/auth.js:22:13)
    at Module._compile (module.js:569:30)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:503:32)
    at tryModuleLoad (module.js:466:12)
    at Function.Module._load (module.js:458:3)
    at Module.require (module.js:513:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/drozd/project/sawtooth-core/families/track_and_trade/server/api/index.js:24:14)
    at Module._compile (module.js:569:30)
    at Object.Module._extensions..js (module.js:580:10)
    at Module.load (module.js:503:32)
[nodemon] app crashed - waiting for file changes before starting...
```
When I control-c out of `npm run init` and `npm start`, it leaves three `rethinkdb` processes running.",2017-09-01 00:11:27,2017-09-01 00:11:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/791,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/326463671,https://github.com/hyperledger/sawtooth-core/pull/791#issuecomment-326463671,delventhalz,"@nick-drozd The new init script was bad. It is fixed now and shouldn't leave rethink running. Make sure you `npm install` again, as `jsonwebtoken` is a new dependency.",2017-09-01 01:32:53,2017-09-01 01:32:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/783,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/325729985,https://github.com/hyperledger/sawtooth-core/pull/783#issuecomment-325729985,peterschwarz,Duplicate of #782 ,2017-08-29 17:06:10,2017-08-29 17:06:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/777,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/325413318,https://github.com/hyperledger/sawtooth-core/pull/777#issuecomment-325413318,agunde406,rebasing before merge,2017-08-28 17:05:35,2017-08-28 17:05:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/776,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/325405904,https://github.com/hyperledger/sawtooth-core/pull/776#issuecomment-325405904,agunde406,rebasing before merge,2017-08-28 16:38:10,2017-08-28 16:38:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/768,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/324665052,https://github.com/hyperledger/sawtooth-core/pull/768#issuecomment-324665052,jsmitchell,Tested locally,2017-08-24 15:12:51,2017-08-24 15:12:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/768,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/324967596,https://github.com/hyperledger/sawtooth-core/pull/768#issuecomment-324967596,peterschwarz,Rebased before merging,2017-08-25 16:16:26,2017-08-25 16:16:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/767,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/327260893,https://github.com/hyperledger/sawtooth-core/pull/767#issuecomment-327260893,nick-drozd,Moving PR to feature branch,2017-09-05 18:22:36,2017-09-05 18:22:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/764,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/324968644,https://github.com/hyperledger/sawtooth-core/pull/764#issuecomment-324968644,agunde406,rebase before merging,2017-08-25 16:20:24,2017-08-25 16:20:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/762,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/323757134,https://github.com/hyperledger/sawtooth-core/pull/762#issuecomment-323757134,peterschwarz,"For testing, follow the instructions for #721 

Once all of those pieces are in place, start up the Supplychain REST API with the following:

```
$ supplychain-rest-api --database-user supplychain --database-password example
``` 

Check the agents have been added via the previous steps from #721 by navigating to http://localhost:8000/agents",2017-08-21 14:29:23,2017-08-21 14:29:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/762,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/324144092,https://github.com/hyperledger/sawtooth-core/pull/762#issuecomment-324144092,agunde406,Tested Locally,2017-08-22 20:35:20,2017-08-22 20:35:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/756,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/323432238,https://github.com/hyperledger/sawtooth-core/pull/756#issuecomment-323432238,aludvik,Only 2 of the 4 transactions actually interact with the EVM: CreateContractAccount and MessageCall.,2017-08-18 18:46:54,2017-08-18 18:46:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/753,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/322564326,https://github.com/hyperledger/sawtooth-core/pull/753#issuecomment-322564326,peterschwarz,"In a future PR, I will create playlist subcommands for `generate` and `read` (or whatever the transaction creation function would be called). ",2017-08-15 19:27:50,2017-08-15 19:27:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/752,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/322519148,https://github.com/hyperledger/sawtooth-core/pull/752#issuecomment-322519148,vaporos,"Yes, doc comments before merging to master would be good.",2017-08-15 16:35:29,2017-08-15 16:35:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/751,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/322253452,https://github.com/hyperledger/sawtooth-core/pull/751#issuecomment-322253452,nick-drozd,"Since you're fixing minor errors, I found a few more.",2017-08-14 17:25:50,2017-08-14 17:25:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/748,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/321654862,https://github.com/hyperledger/sawtooth-core/pull/748#issuecomment-321654862,dcmiddle,"I don't recall the guarantees on the block_cache, but I see there's no `try` block around its use with the current chain / current block wrapper. 
e.g. line 301 & line 335
https://github.com/hyperledger/sawtooth-core/pull/748/files#diff-c9a7607e1eb461eddb7b4d1708f012ffR301
https://github.com/hyperledger/sawtooth-core/pull/748/files#diff-c9a7607e1eb461eddb7b4d1708f012ffR335
",2017-08-10 19:49:00,2017-08-10 19:49:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/748,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/321820055,https://github.com/hyperledger/sawtooth-core/pull/748#issuecomment-321820055,peterschwarz,"Given that the cache will look things up from the block store first, before deciding there's a miss, it should be fine for the current chain (which, by definition, is in our block store).",2017-08-11 13:59:05,2017-08-11 13:59:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/747,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/323122962,https://github.com/hyperledger/sawtooth-core/pull/747#issuecomment-323122962,peterschwarz,"This should follow a similar model to the settings family where the state values, which are used by the validator, should be in the base `protos` directory.  The transactions which are, in effect, a reference implementation for updating these values can be in the `families/identity/proto`.",2017-08-17 16:21:06,2017-08-17 16:21:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/747,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/323139735,https://github.com/hyperledger/sawtooth-core/pull/747#issuecomment-323139735,agunde406,protos updated,2017-08-17 17:25:56,2017-08-17 17:25:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/746,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/321645956,https://github.com/hyperledger/sawtooth-core/pull/746#issuecomment-321645956,peterschwarz,Does this PR make use of this configuration setting?,2017-08-10 19:11:37,2017-08-10 19:11:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/746,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/321834218,https://github.com/hyperledger/sawtooth-core/pull/746#issuecomment-321834218,boydjohnson,Updated to use the validator config to configure the scheduler.,2017-08-11 14:49:07,2017-08-11 14:49:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/745,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/321128945,https://github.com/hyperledger/sawtooth-core/pull/745#issuecomment-321128945,vaporos,Are we anticipating multiple smallbank implementations beyond Go?,2017-08-09 01:45:34,2017-08-09 01:45:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/745,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/321133847,https://github.com/hyperledger/sawtooth-core/pull/745#issuecomment-321133847,jsmitchell,Who knows. Maybe rust?,2017-08-09 02:21:09,2017-08-09 02:21:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/744,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/321275198,https://github.com/hyperledger/sawtooth-core/pull/744#issuecomment-321275198,peterschwarz,Moved the sdk up a level to `sdk/rust`,2017-08-09 14:38:09,2017-08-09 14:38:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/738,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/320684931,https://github.com/hyperledger/sawtooth-core/pull/738#issuecomment-320684931,boydjohnson,"What does anyone think of pip installing from @dplumb94's fork of the Pyformance library, so that we don't include someone else's code in our repo?",2017-08-07 14:48:49,2017-08-07 14:48:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/738,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/322212734,https://github.com/hyperledger/sawtooth-core/pull/738#issuecomment-322212734,dplumb94,@boydjohnson I like this idea. How would we go about doing that?,2017-08-14 14:54:52,2017-08-14 14:54:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/738,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/322253518,https://github.com/hyperledger/sawtooth-core/pull/738#issuecomment-322253518,boydjohnson,"@dplumb94 If you have the changes in a fork of omergertel/pyformance, say dplumb94/pyformance you could `pip3 install git+https://github.com/dplumb94/pyformance`. You can also specify a branch like `pip3 install git+https://github.com/dplumb94/pyformance/tree/my-changes`.",2017-08-14 17:26:10,2017-08-14 17:26:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/736,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/320264354,https://github.com/hyperledger/sawtooth-core/pull/736#issuecomment-320264354,joeldudleyr3,"Hi, this is Joel from R3 (joel.dudley@r3.com). Saw this and wanted to pitch in.",2017-08-04 14:31:28,2017-08-04 14:31:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/736,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/320284210,https://github.com/hyperledger/sawtooth-core/pull/736#issuecomment-320284210,dcmiddle,thanks @joeldudleyr3!,2017-08-04 15:51:03,2017-08-04 15:51:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/734,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/320268240,https://github.com/hyperledger/sawtooth-core/pull/734#issuecomment-320268240,ckr3,Signed-off-by: ckr3 chris@r3.com,2017-08-04 14:46:55,2017-08-04 14:46:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/734,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/320270029,https://github.com/hyperledger/sawtooth-core/pull/734#issuecomment-320270029,dcmiddle,"hi @ckr3 would you mind closing this pull request and recreating the commit with the signoff in the commit message itself? 
`git commit -a -m 'fix typo in protobuf definition' -s`",2017-08-04 14:54:41,2017-08-04 14:54:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/733,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/320350115,https://github.com/hyperledger/sawtooth-core/pull/733#issuecomment-320350115,peterschwarz,"When attempting to run this locally, I get an error using the following steps.

1. Create the `sawtooth_stats` network, as described
2. Start the local validator:

    ```
    $ docker-compose -f docker/compose/sawtooth-local.yaml up
    ```
3. Start the influx/grafana combo:

    ```
    $ docker-compose -f stat_collection/docker/metrics.yaml up
    ... docker related output....
    Step 3/8 : COPY dashboards /etc/grafana/dashboards
    ERROR: Service 'grafana' failed to build: lstat dashboards: no such file or directory
    ```
    
",2017-08-04 20:50:26,2017-08-04 20:50:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/733,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/320359421,https://github.com/hyperledger/sawtooth-core/pull/733#issuecomment-320359421,dplumb94,Ah there should be an empty `stat_collection/docker/grafana/dashboards` directory in the filesystem. I will figure out how to add that.,2017-08-04 21:41:12,2017-08-04 21:41:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/732,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/323089991,https://github.com/hyperledger/sawtooth-core/pull/732#issuecomment-323089991,aludvik,Fixed typos,2017-08-17 14:27:17,2017-08-17 14:27:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/724,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/323840499,https://github.com/hyperledger/sawtooth-core/pull/724#issuecomment-323840499,boydjohnson,"I updated this PR to include a simple unit test, as well as the original cleanup. I modified the getPublicKey to return a compressed key.",2017-08-21 20:11:09,2017-08-21 20:11:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/724,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/323841086,https://github.com/hyperledger/sawtooth-core/pull/724#issuecomment-323841086,peterschwarz,Were those keys in the tests generated by the python library? ,2017-08-21 20:13:32,2017-08-21 20:13:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/724,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/323841484,https://github.com/hyperledger/sawtooth-core/pull/724#issuecomment-323841484,boydjohnson,"Yes, both the public and private keys in the tests were generated by sawtooth_signing python library.",2017-08-21 20:15:12,2017-08-21 20:15:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/721,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/316516080,https://github.com/hyperledger/sawtooth-core/pull/721#issuecomment-316516080,peterschwarz,A future commit will be needed to create a docker container for this.,2017-07-19 21:01:16,2017-07-20 14:42:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/721,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/316727589,https://github.com/hyperledger/sawtooth-core/pull/721#issuecomment-316727589,peterschwarz,Also will modify the cli to init the DB,2017-07-20 14:50:29,2017-07-20 14:50:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/721,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/317100586,https://github.com/hyperledger/sawtooth-core/pull/721#issuecomment-317100586,peterschwarz,"Updated to add a tool for initializing the database with the correct tables.

Usage:  
```
$ supplychain-sds init --database-user $MYUSER --database-password $MYPASSWORD
```",2017-07-21 20:08:59,2017-07-21 20:09:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/721,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/317109959,https://github.com/hyperledger/sawtooth-core/pull/721#issuecomment-317109959,peterschwarz,"## Testing

Start a validator instance and connect a supplychain transaction processor. 
Start Postgres instance:

```
$ docker run -e POSTGRES_USER=supplychain -e POSTGRES_PASSWORD=example -e POSTGRES_DB=supplychain --name postgres -p 5432:5432 -d postgres
```

Initialize the db:

```
$ supplychain-sds init --database-user supplychain --database-password example
```

Start the subscriber process:

```
$ ./bin/supplychain-sds -vv subscribe --database-user supplychain --database-password example
```

Submit transactions to the validator using the `supplychain` CLI tool.

* Verify that the subscriber process logs receiving events
* Verify that the tables are populated:
    Start psql
    ```
    $ docker run -it --rm --link postgres:postgres postgres psql -h postgres -U supplychain
    ```
    Query for agents (for example):
    ```
    supplychain=# select * from agent;
    ```",2017-07-21 20:53:50,2017-07-21 20:53:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/721,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/317113649,https://github.com/hyperledger/sawtooth-core/pull/721#issuecomment-317113649,agunde406,Tested locally,2017-07-21 21:11:16,2017-07-21 21:11:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/721,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/317118832,https://github.com/hyperledger/sawtooth-core/pull/721#issuecomment-317118832,peterschwarz,Added example config files.,2017-07-21 21:40:39,2017-07-21 21:40:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/721,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/317121541,https://github.com/hyperledger/sawtooth-core/pull/721#issuecomment-317121541,peterschwarz,"Docker containers will be the scope of a future PR, after #714 is merged. ",2017-07-21 21:55:15,2017-07-21 21:55:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/720,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/316483486,https://github.com/hyperledger/sawtooth-core/pull/720#issuecomment-316483486,ghadishayban,"The bitcoinj library is Apache licensed, and has some MIT dependencies.",2017-07-19 18:57:13,2017-07-19 18:57:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/720,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/316737126,https://github.com/hyperledger/sawtooth-core/pull/720#issuecomment-316737126,peterschwarz,"The current issue with the build looks like it has to do with the source and target versions specified in the maven `pom.xml`.  Currently, the sawtooth java sdk and examples are targeting 1.7, but bitcoinj targets 1.8.",2017-07-20 15:20:04,2017-07-20 15:20:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/720,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/317479273,https://github.com/hyperledger/sawtooth-core/pull/720#issuecomment-317479273,ghadishayban,This is passing and commits properly squashed; ready4review.,2017-07-24 16:34:04,2017-07-24 16:34:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/719,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/316533012,https://github.com/hyperledger/sawtooth-core/pull/719#issuecomment-316533012,boydjohnson,"The changes I made to the YamlSchedulerTester have it calculate the transaction validity from the dependencies, and then set this information on the scheduler, bypassing the scheduler's ability to determine dependencies.",2017-07-19 22:08:40,2017-07-19 22:08:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/718,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/316208009,https://github.com/hyperledger/sawtooth-core/pull/718#issuecomment-316208009,agunde406,"When starting up the validator:

Traceback (most recent call last):
  File ""/project/sawtooth-core/bin/sawtooth-validator"", line 37, in <module>
    main()
  File ""/project/sawtooth-core/validator/sawtooth_validator/server/cli.py"", line 299, in main
    validator_config.network_private_key)
  File ""/project/sawtooth-core/validator/sawtooth_validator/server/core.py"", line 270, in __init__
    validator_pb2.Message.TP_STATE_DELETE_REQUEST,
AttributeError: type object 'Message' has no attribute 'TP_STATE_DELETE_REQUEST'",2017-07-18 21:47:38,2017-07-18 21:50:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/718,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/319074485,https://github.com/hyperledger/sawtooth-core/pull/718#issuecomment-319074485,delventhalz,"The first line of a commit message should be about 50 characters, but the hard limit is 72 characters. The first commit message in this PR should be reformatted as per:
https://chris.beams.io/posts/git-commit/",2017-07-31 13:56:59,2017-07-31 13:56:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/718,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/319428143,https://github.com/hyperledger/sawtooth-core/pull/718#issuecomment-319428143,cianx,@delventhalz if https://chris.beams.io/posts/git-commit/ is a PR commit requirement it needs to be referenced in http://intelledger.github.io/community/contributing.html as a requirement for PRs. Otherwise how could contributors possibly know to meet these arbitrary guidelines. ,2017-08-01 16:45:06,2017-08-01 16:45:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/718,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/319435982,https://github.com/hyperledger/sawtooth-core/pull/718#issuecomment-319435982,cianx,@delventhalz tests are provided as unit tests and are enabled to run via the nose2 framework. There is not infrastructure i am aware of for testing sdk components. Please point me at the python sdk unit test infrastructure if I missed it.,2017-08-01 17:14:30,2017-08-01 17:14:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/718,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/322247953,https://github.com/hyperledger/sawtooth-core/pull/718#issuecomment-322247953,delventhalz,@cianx That is an excellent point. We definitely need to be clear with outside contributors about our expectations. I have created a PR to add commit messages to our contributing guide: https://github.com/hyperledger/sawtooth-core/pull/751,2017-08-14 17:03:58,2017-08-14 17:07:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/714,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/315486557,https://github.com/hyperledger/sawtooth-core/pull/714#issuecomment-315486557,ojalatodd,"  The Supply Chain REST API requires a running PostgreSQL database that is reachable by the Supply Chain REST API. The easiest method is to run a PostgreSQL database on the same machine or VM that is running the API. The development and testing has been done on Vagrant.
(Note - testing instructions to be updated using Sawtooth Supply Chain CLI tools)

1. Install PosgreSQL:
    1. sudo apt-get update
    2. sudo apt-get install postgresql postgresql-contrib
    3. Get a psql prompt to test: ""sudo -u postgres psql""
2. Create user “sc_rest_api”
    1. sudo -u postgres createuser --interactive
       Enter ""sc_rest_api"" as username. Enter ""y"" to prompt, ""Shall the new role be a superuser?""
3. Create DB:
    1. sudo -u postgres createdb sc_rest_api
4. Add sc_rest_api as a Linux user:
    1. sudo adduser sc_rest_api
    2. Use password “my_passwd”
5. Connect to the DB:
    1. sudo -u sc_rest_api psql sc_rest_api
    2. or ""sudo -u postgres psql sc_rest_api""
6. Check connection info:
    1. \conninfo
7. Create tables & sample data
    * Use the commands in file: https://github.com/ojalatodd/sawtooth-core/blob/supplychain_REST_interface_STL-269/families/supplychain/postgreSQL/tables_sample_data.sql
8. Change permissions  in this file on the Vagrant Linux CLI to allow db connection from application:
    1. In file: /etc/postgresql/9.5/main/pg_hba.conf
    2. Change last field to trust: 
        * # IPv4 local connections:
        * host    all         all         127.0.0.1/32          trust
9. Start the Supply Chain REST API:
    * sc_rest_api -D ""dbname='sc_rest_api' user='sc_rest_api' host='localhost' password='my_passwd’""
10. Run sample queries against the API using curl:
    1. curl --request GET ""http://localhost:8080/applications”
    2. curl --request GET ""http://localhost:8080/records”
    3. curl --request GET ""http://localhost:8080/agents?min=1&count=2”
    4. curl --request GET ""http://localhost:8080/records/TRACKING_NO_1/applications”
11. Output should conform to the spec.",2017-07-14 22:55:52,2017-07-28 14:13:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/714,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/315549795,https://github.com/hyperledger/sawtooth-core/pull/714#issuecomment-315549795,peterschwarz,"For testers, could you please add some instructions on how to setup a local postgres db (presumably with docker) and how to load in the test data?",2017-07-15 17:34:02,2017-07-15 17:34:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/714,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/320677607,https://github.com/hyperledger/sawtooth-core/pull/714#issuecomment-320677607,peterschwarz,Closing PR for resubmission as a restructured PR,2017-08-07 14:22:57,2017-08-07 14:22:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/712,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/315678386,https://github.com/hyperledger/sawtooth-core/pull/712#issuecomment-315678386,feihujiang,@vaporos please review this PR. Thanks!,2017-07-17 06:45:41,2017-07-17 06:45:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/701,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314816058,https://github.com/hyperledger/sawtooth-core/pull/701#issuecomment-314816058,boydjohnson,"@nick-drozd Since it is a large PR can you talk about the testing you did. Was it just running the unit tests, modifying poet smoke to run a parallel scheduler, or manual testing.",2017-07-12 16:01:33,2017-07-12 16:01:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/701,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314844675,https://github.com/hyperledger/sawtooth-core/pull/701#issuecomment-314844675,nick-drozd,"I ran poet smoke with the genesis validator gettig `--scheduler parallel`, another getting `--scheduler serial`, and another getting no flag. I also changed the genesis controller to use the executor's scheduler type instead of just using the serial scheduler.",2017-07-12 17:45:48,2017-07-12 17:45:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/701,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314906600,https://github.com/hyperledger/sawtooth-core/pull/701#issuecomment-314906600,boydjohnson,@nick-drozd @aludvik I will look into those configuration changes and test failures.,2017-07-12 21:46:11,2017-07-12 21:46:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/700,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314450037,https://github.com/hyperledger/sawtooth-core/pull/700#issuecomment-314450037,agunde406,"Tested locally with two TP. When a one crashes, the other one can still recover. ",2017-07-11 13:51:40,2017-07-11 13:51:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/698,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314302185,https://github.com/hyperledger/sawtooth-core/pull/698#issuecomment-314302185,boydjohnson,"Due to an unsigned merge commit, I am closing this PR in favor of a branch of cherry-picked commits.",2017-07-11 02:08:33,2017-07-11 02:08:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/697,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314131136,https://github.com/hyperledger/sawtooth-core/pull/697#issuecomment-314131136,aludvik,HTML can be found here: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-697/1/artifact/docs/build/html/architecture/poet.html,2017-07-10 14:54:41,2017-07-10 14:54:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/697,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314448682,https://github.com/hyperledger/sawtooth-core/pull/697#issuecomment-314448682,aludvik,Addresses @jsmitchell's requests.,2017-07-11 13:47:07,2017-07-11 13:47:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/697,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314818609,https://github.com/hyperledger/sawtooth-core/pull/697#issuecomment-314818609,randombishop,"Great contribution, was looking exactly for that ! ",2017-07-12 16:10:19,2017-07-12 16:10:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/697,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314845820,https://github.com/hyperledger/sawtooth-core/pull/697#issuecomment-314845820,aludvik,Addressed Dan's comments.,2017-07-12 17:49:58,2017-07-12 17:49:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/696,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313818161,https://github.com/hyperledger/sawtooth-core/pull/696#issuecomment-313818161,jjason,"Instead of using real http.server and creating your own mock server, you might want to investigate using `unittest.mock.patch`.  @peterschwarz and @cianx both are experts on how to patch classes in unit tests.",2017-07-07 23:52:47,2017-07-07 23:52:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/696,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314103144,https://github.com/hyperledger/sawtooth-core/pull/696#issuecomment-314103144,aludvik,"I looked into `unittest.mock.path` and it probably would have been easier to use than this. My understanding is that it would require patching `requests`. Since this module is just a thin wrapper for requests, I like using the full HTTP server here as it accomplishes the same goal but if `requests` interface ever changes, this test will catch the change.",2017-07-10 13:20:34,2017-07-10 13:20:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/696,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314114570,https://github.com/hyperledger/sawtooth-core/pull/696#issuecomment-314114570,aludvik,Added docstrings to tests,2017-07-10 14:01:33,2017-07-10 14:01:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/693,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313574056,https://github.com/hyperledger/sawtooth-core/pull/693#issuecomment-313574056,jjason,This PR fixes a problem when a validator is started up and it already has an entry in the validator registry and its local PoET key state store has the corresponding PoET public key marked as active.,2017-07-07 02:56:08,2017-07-07 02:56:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/693,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313574421,https://github.com/hyperledger/sawtooth-core/pull/693#issuecomment-313574421,jjason,Note - I still need to think a little more about how to handle when everything goes completely off of the rails.,2017-07-07 02:58:49,2017-07-07 02:58:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/693,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313793947,https://github.com/hyperledger/sawtooth-core/pull/693#issuecomment-313793947,jjason,"Updated in hopes of fixing the problem Peter sees when blowing away the data directory.  In this update, if the PoET block publisher sees that the PoET public key in the validator registry does not result in a valid key state, it will sign up again.",2017-07-07 21:11:01,2017-07-07 21:11:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/693,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313795783,https://github.com/hyperledger/sawtooth-core/pull/693#issuecomment-313795783,jjason,Crap....I broke a unit test on Jenkins....I need to see what is different locally.,2017-07-07 21:19:41,2017-07-07 21:19:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/692,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313679581,https://github.com/hyperledger/sawtooth-core/pull/692#issuecomment-313679581,aludvik,Removed some stray comments,2017-07-07 13:24:07,2017-07-07 13:24:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/692,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313795956,https://github.com/hyperledger/sawtooth-core/pull/692#issuecomment-313795956,aludvik,Rebased post name change,2017-07-07 21:20:37,2017-07-07 21:20:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/692,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314499344,https://github.com/hyperledger/sawtooth-core/pull/692#issuecomment-314499344,peterschwarz,"My comments were marked as out of date, but please take a look at them and reply.",2017-07-11 16:28:59,2017-07-11 16:28:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/692,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314563471,https://github.com/hyperledger/sawtooth-core/pull/692#issuecomment-314563471,aludvik,Removed trailing 0s per @dplumb94's comment,2017-07-11 20:35:04,2017-07-11 20:35:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/692,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/314759665,https://github.com/hyperledger/sawtooth-core/pull/692#issuecomment-314759665,aludvik,"Added a commit to treat EVM errors as an InvalidTransactionError. For example, if the EVM runs out of gas, that is a problem with the transaction, not the EVM.",2017-07-12 12:52:11,2017-07-12 12:52:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/691,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313516641,https://github.com/hyperledger/sawtooth-core/pull/691#issuecomment-313516641,nick-drozd,"I strongly suggest breaking out the predecessor tree tests and the yaml tests into separate files, as in this commit: https://github.com/nick-drozd/sawtooth-core/commit/bc5572cafbac3e9356163ee66d506a40613b6220. It's not how obvious how the tests should be further organized (I have some opinions, but not strong ones), but separate files is a good start in any case.",2017-07-06 20:55:12,2017-07-06 20:55:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/691,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313518963,https://github.com/hyperledger/sawtooth-core/pull/691#issuecomment-313518963,boydjohnson,"@nick-drozd I will look into adding that commit to break the test file up.

Update: I worry, that the diff caused by breaking up the test file will complicate reading the PR. I will break up the test file when the parallel-scheduler branch gets merged into master.",2017-07-06 21:04:33,2017-07-06 21:50:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/691,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313713228,https://github.com/hyperledger/sawtooth-core/pull/691#issuecomment-313713228,boydjohnson,@nick-drozd @agunde406 I updated the PR based on your comments.,2017-07-07 15:24:58,2017-07-07 15:24:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/690,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313444329,https://github.com/hyperledger/sawtooth-core/pull/690#issuecomment-313444329,jjason,"Realized when chatting with Peter, James, and Boyd that the wait timer expiration values in the simulator and SGX versions are different.",2017-07-06 16:14:13,2017-07-06 16:14:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/687,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313762721,https://github.com/hyperledger/sawtooth-core/pull/687#issuecomment-313762721,peterschwarz,"This has also been rebased on top of the cli command rename changes, that have been merged into master.",2017-07-07 18:45:54,2017-07-07 18:45:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/686,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/315046534,https://github.com/hyperledger/sawtooth-core/pull/686#issuecomment-315046534,feihujiang,@peterschwarz @vaporos @agunde406 Please take a look. Thanks!,2017-07-13 11:04:24,2017-07-13 11:04:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/686,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/315245758,https://github.com/hyperledger/sawtooth-core/pull/686#issuecomment-315245758,feihujiang,Ref #644,2017-07-14 01:37:44,2017-07-14 01:37:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/684,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313591190,https://github.com/hyperledger/sawtooth-core/pull/684#issuecomment-313591190,delventhalz,"@vaporos How likely is it we would change signing algorithms? That would break previous blocks wouldn't it? Also, you could always add an additional optional parameter to `sign` that would take an algorithm name. That could be added anytime, and would be backwards compatible.

I'm a little reticent to add an extraneous extra step, forcing everyone to instantiate a `Signer` object, just in the off chance it might matter. If alternate algorithms are a part of the roadmap, then it makes more sense to me.

Also worth mentioning that this is how the JS SDK works currently. Whatever the right answer is, we should have a pre-1.0 JIRA task(s) to go over the SDKs and bring the interfaces in line with each other as much as possible.",2017-07-07 05:35:21,2017-07-07 05:50:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/684,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313759764,https://github.com/hyperledger/sawtooth-core/pull/684#issuecomment-313759764,dcmiddle,"@delventhalz I'm entertaining the idea of changing to eddsa in a future sawtooth version.  So it wouldn't be changing crypto during runtime.
I'm not sure the trade-off of having the python-sdk use core packages, but I do see some simplicity in just using the same signing code so there's no additional maintenance. ",2017-07-07 18:33:19,2017-07-07 18:33:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/684,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313766276,https://github.com/hyperledger/sawtooth-core/pull/684#issuecomment-313766276,delventhalz,"@dcmiddle So it sounds I should follow @vaporos's prescription and replace the current static `sign` function with a `Signer` parent class, an instantiable `Secp256k1Signer` child class with a `sign` method, and a `get_default_signer` function which will instantiate it?

As for whether or not to integrate with `sawtooth_signing`, I wrote this as a separate module based on the Slack conversation the three of us had about a week ago. The importance of keeping the SDK and validator functionality separate was emphasized. My feeling is that the use cases are actually somewhat different (no need to go through the rigamarole with `Signer` classes internally for the validator for example), and that the repeated code is actually pretty minimal, since they are mostly just calls to third party libraries.",2017-07-07 19:01:25,2017-07-07 19:01:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/684,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/316150032,https://github.com/hyperledger/sawtooth-core/pull/684#issuecomment-316150032,delventhalz,"PR has been updated to remove the client signing module and replace its usage with the existing `sawtooth_signing` module. Support for `bytes` has been added to the signing module, but otherwise it is unchanged. Refactoring this module to be more client friendly will be left to someone else.",2017-07-18 18:14:49,2017-07-18 18:14:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/682,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312052993,https://github.com/hyperledger/sawtooth-core/pull/682#issuecomment-312052993,delventhalz,I've updated the PR with a README and some metadata. Re-reviews would be appreciated.,2017-06-29 18:21:23,2017-06-29 18:21:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/681,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312098568,https://github.com/hyperledger/sawtooth-core/pull/681#issuecomment-312098568,boydjohnson,"Closing for now. ~~I think the way I designed it, there is an assertion that each state is correct at the first time of running. This may not always be correct.~~ The design is that the last time a transaction is returned by scheduler.next_transaction is what is recorded as its correct TransactionExecutionContext by the YamlSchedulerTester.",2017-06-29 20:38:28,2017-07-03 16:40:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/680,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311745282,https://github.com/hyperledger/sawtooth-core/pull/680#issuecomment-311745282,boydjohnson,Updated test comments to accurately describe the yaml files after talking with @agunde406 .,2017-06-28 18:22:37,2017-06-28 18:22:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311702755,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-311702755,boydjohnson,"@feihujiang Can you give examples of the bad logging output, and the better logging output that this PR improves?",2017-06-28 15:49:56,2017-06-28 15:49:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311754961,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-311754961,vaporos,Don't these changes produce basically the same results?  Can you provide a before/after example (just as a comment in this PR) to make it the reason for the change clearer?,2017-06-28 18:57:42,2017-06-28 18:57:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311852328,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-311852328,feihujiang,"OK.
Before this PR, the logging output is:
~~~
[11:08:53.806 INFO     processor_handlers] registered transaction processor: connection_id=1a22dd73168f148b1af20d31840ce6ac46b40eb7d5930e2cc2b016a427b6eb1e018a8be37e02dbd0e0eca37c28b5642bdf03710cb8f7aa8dcfde502d710c3873, family=sawtooth_config, version=1.0, encoding=application/protobuf, namespaces=<google.protobuf.pyext._message.RepeatedScalarContainer object at 0x7d09dcd87b20>
~~~
After this PR, the logging output is:
~~~
[11:10:05.067 INFO     processor_handlers] registered transaction processor: connection_id=1a22dd73168f148b1af20d31840ce6ac46b40eb7d5930e2cc2b016a427b6eb1e018a8be37e02dbd0e0eca37c28b5642bdf03710cb8f7aa8dcfde502d710c3873, family=sawtooth_config, version=1.0, encoding=application/protobuf, namespaces=[000000]
~~~

@boydjohnson @vaporos please take a look, thanks.",2017-06-29 03:25:32,2017-06-29 03:25:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311854857,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-311854857,feihujiang,"Because the current configuration transaction family uses a namespace prefix of ‘000000’, so namespaces=[000000]",2017-06-29 03:47:18,2017-06-29 03:47:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312026909,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-312026909,boydjohnson,"This was a recent build of master on Jenkins: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/master/79/consoleText. Search for namespaces and you will find 

> [36mvalidator_1          |[0m [32m[00:13:09.833 INFO     processor_handlers][0m [37mregistered transaction processor: connection_id=094055d33773641b4080a316a1a820676f85f8dac766ddd9989418a5e06b1fd11a5b35769734f0ec80209c6b2b3a6f131ff41cf9276f3f23ad92b40662e809b5, family=sawtooth_settings, version=1.0, encoding=application/protobuf, namespaces=['000000'][0m

I think there was an update to the google/protobuf library that caused a change in the 'str' or 'repr' method for repeatedScalarContainers. Try rebuilding vagrant on master and see what you get.",2017-06-29 16:52:34,2017-06-29 16:52:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312158317,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-312158317,vaporos,"Makes sense now.  If @boydjohnson is correct this is probably no longer necessary?  Otherwise, I wonder if we can simply cast this to list with list(request.namespaces).",2017-06-30 02:28:25,2017-06-30 02:28:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312218981,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-312218981,feihujiang,"I installed protobuf-3.3.0 and python3.5 on my ubuntu system, and the logging output is:
```namespaces=<google.protobuf.pyext._message.RepeatedScalarContainer object at 0x7d09dcd87b20>```",2017-06-30 09:18:12,2017-06-30 09:18:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312273444,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-312273444,boydjohnson,What version of python3-grpcio-tools and python3-grpcio are you using? We are creating our own. Version 1.1.3-1. What version are you using?,2017-06-30 13:54:55,2017-06-30 21:55:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312628924,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-312628924,feihujiang,I'm using grpcio-1.3.5 and grpcio-tools-1.3.5. ,2017-07-03 12:09:13,2017-07-03 12:09:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312643454,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-312643454,boydjohnson,"How about we coerce it to a list, ```list(request.namespaces)```? It looks like grpc has been doing a bunch of releases in the start of this year.",2017-07-03 13:18:51,2017-07-03 13:18:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/679,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313025321,https://github.com/hyperledger/sawtooth-core/pull/679#issuecomment-313025321,feihujiang,"@boydjohnson @vaporos  yes, list(request.namespaces) works. I updated this PR, please take a look.",2017-07-05 07:32:35,2017-07-05 07:32:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/678,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311802331,https://github.com/hyperledger/sawtooth-core/pull/678#issuecomment-311802331,jjason,Sanity check rebase before merge,2017-06-28 21:49:52,2017-06-28 21:49:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/677,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311350862,https://github.com/hyperledger/sawtooth-core/pull/677#issuecomment-311350862,aludvik,Split the commit into more focused commits and added the dependency to vagrant.,2017-06-27 13:01:17,2017-06-27 13:01:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/677,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311735793,https://github.com/hyperledger/sawtooth-core/pull/677#issuecomment-311735793,aludvik,"We are already using https://github.com/btcsuite/btcd which has the same license.  Additionally, https://github.com/tendermint/go-crypto is using that library but is licensed with Apache 2.0 https://github.com/tendermint/go-crypto/blob/master/LICENSE. I think the license is okay based on that.",2017-06-28 17:47:02,2017-06-28 17:47:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/677,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311973266,https://github.com/hyperledger/sawtooth-core/pull/677#issuecomment-311973266,aludvik,Used a private key generated from sawtooth keygen for all the tests.,2017-06-29 13:53:22,2017-06-29 13:53:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/677,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312086935,https://github.com/hyperledger/sawtooth-core/pull/677#issuecomment-312086935,aludvik,"@vaporos, @TomBarnes found that the ISC license is okay.",2017-06-29 19:57:29,2017-06-29 19:57:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/672,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311805733,https://github.com/hyperledger/sawtooth-core/pull/672#issuecomment-311805733,peterschwarz,"Made some minor tweaks with receiving (no zmq.Poller), and removed the custom logging in favor of aiohttp standard logging.",2017-06-28 22:05:32,2017-06-28 22:05:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/669,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310410777,https://github.com/hyperledger/sawtooth-core/pull/669#issuecomment-310410777,delventhalz,"This PR removes functionality. If merged, the XO Client will be unable to `--wait` for times longer than 300s.

After ~300s to REST API will timeout on it's own, regardless of how long you asked it to wait. This is configurable, but sooner or later you will hit limits with how long you can keep an HTTP request open (usually around 300s). The solution implemented here is to make a new request on every timeout, until the `--wait` time is expired, or the Batch is no longer `PENDING`.

Some tweaks to the REST API could be made to better support >300s wait times, but for now at least, the existing code is the recommended way to implement an indefinite wait.",2017-06-22 15:14:09,2017-06-22 17:57:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/669,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310543449,https://github.com/hyperledger/sawtooth-core/pull/669#issuecomment-310543449,feihujiang,"@vaporos @delventhalz Thanks for your detailed explanation. I got it, I closed this PR.",2017-06-23 01:12:39,2017-06-23 01:12:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/667,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310221111,https://github.com/hyperledger/sawtooth-core/pull/667#issuecomment-310221111,cianx,"Addresses the root cause of this issue, 
```[19:07:46.282 CRITICAL publisher] on_check_publish_block exception.                                                   
[19:07:46.282 ERROR    publisher] None is not in list                                                                 
Traceback (most recent call last):                                                                                    
  File ""/project/sawtooth-core/validator/sawtooth_validator/journal/publisher.py"", line 505, in on_check_publish_block
    last_batch_index = self._pending_batches.index(last_batch)                                                        
ValueError: None is not in list  
```
Originally seen by @peterschwarz",2017-06-21 22:17:16,2017-06-21 22:17:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/664,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310493144,https://github.com/hyperledger/sawtooth-core/pull/664#issuecomment-310493144,delventhalz,"A significant refactor has been pushed to this PR, removing the local cache of committed batches from the BatchTracker, and instead querying the BlockStore directly.",2017-06-22 20:27:18,2017-06-22 20:27:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/660,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309839133,https://github.com/hyperledger/sawtooth-core/pull/660#issuecomment-309839133,ojalatodd,"Note: until the docker containers are updated, you will run into problems testing this document. 
The container **sawtooth-tp_config-default** was changed to **sawtooth-tp_settings-default**, but the docker containers published have not been updated.",2017-06-20 18:00:02,2017-06-20 18:00:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/660,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309840958,https://github.com/hyperledger/sawtooth-core/pull/660#issuecomment-309840958,ojalatodd,"Note 2: Also, the **intkey** command on the docker images does not yet include the --count option, which was recently added: 
intkey create_batch --count 10 --key-count 5",2017-06-20 18:06:49,2017-06-20 18:06:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/659,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309732687,https://github.com/hyperledger/sawtooth-core/pull/659#issuecomment-309732687,feihujiang,"@vaporos Please review this PR, thanks.",2017-06-20 12:05:41,2017-06-20 12:05:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/659,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309760453,https://github.com/hyperledger/sawtooth-core/pull/659#issuecomment-309760453,vaporos,"Exception thrown when just running sawtooth in vagrant:

```ubuntu@ubuntu-xenial:/project/sawtooth-core$ ./bin/sawtooth
please install sawtooth-cli with setup.py
Traceback (most recent call last):
  File ""/project/sawtooth-core/cli/sawtooth_cli/main.py"", line 160, in main_wrapper
    main()
  File ""/project/sawtooth-core/cli/sawtooth_cli/main.py"", line 125, in main
    parser = create_parser(prog_name)
  File ""/project/sawtooth-core/cli/sawtooth_cli/main.py"", line 107, in create_parser
    formatter_class=argparse.RawDescriptionHelpFormatter)
  File ""/usr/lib/python3.5/argparse.py"", line 1658, in __init__
    self._add_container_actions(parent)
  File ""/usr/lib/python3.5/argparse.py"", line 1400, in _add_container_actions
    for group in container._action_groups:
AttributeError: 'NoneType' object has no attribute '_action_groups'
```",2017-06-20 13:53:30,2017-06-20 13:53:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/659,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310022724,https://github.com/hyperledger/sawtooth-core/pull/659#issuecomment-310022724,feihujiang,"@vaporos @boydjohnson I updated this PR, please take a look. Thanks.",2017-06-21 09:25:56,2017-06-21 09:25:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/659,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310148485,https://github.com/hyperledger/sawtooth-core/pull/659#issuecomment-310148485,boydjohnson,I verified locally that sawtooth -V prints out the version in the file that was added.,2017-06-21 17:25:12,2017-06-21 17:25:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/659,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310542536,https://github.com/hyperledger/sawtooth-core/pull/659#issuecomment-310542536,feihujiang,"@vaporos Could you please review this PR, thanks.",2017-06-23 01:06:14,2017-06-23 01:06:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/659,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311753750,https://github.com/hyperledger/sawtooth-core/pull/659#issuecomment-311753750,vaporos,"@feihujiang what is the reason for switching away from ""pkg_resources.get_distribution('sawtooth-cli').version""?  That seemed to be a pretty clean approach.",2017-06-28 18:53:43,2017-06-28 18:53:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/659,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/311941184,https://github.com/hyperledger/sawtooth-core/pull/659#issuecomment-311941184,feihujiang,"@vaporos @peterschwarz @boydjohnson  I updated this PR, please take a look.",2017-06-29 11:38:48,2017-06-29 11:38:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/658,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310203307,https://github.com/hyperledger/sawtooth-core/pull/658#issuecomment-310203307,jjason,"Please clean up first commit by removing commented out code and prints, then rebase and re-push PR.",2017-06-21 20:58:16,2017-06-21 20:58:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/658,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310224979,https://github.com/hyperledger/sawtooth-core/pull/658#issuecomment-310224979,nconde,@jjason those were fixed in the second commit ,2017-06-21 22:38:12,2017-06-21 22:39:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/658,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310229376,https://github.com/hyperledger/sawtooth-core/pull/658#issuecomment-310229376,jjason,"@nconde Instead of being removed in the second commit, I believe that the group ""standard"" is to not allow them in the first commit.",2017-06-21 23:05:04,2017-06-21 23:05:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/658,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/310422319,https://github.com/hyperledger/sawtooth-core/pull/658#issuecomment-310422319,nconde,@jjason fixed ,2017-06-22 15:52:06,2017-06-22 15:52:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/654,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309506962,https://github.com/hyperledger/sawtooth-core/pull/654#issuecomment-309506962,delventhalz,"This is addressed in an open PR:
https://github.com/hyperledger/sawtooth-core/pull/649/commits/1371b9b4f11211ef41cf8ee23b08bbb226a98cc5",2017-06-19 17:16:59,2017-06-19 17:16:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/654,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309511060,https://github.com/hyperledger/sawtooth-core/pull/654#issuecomment-309511060,cianx,Closed in favor of: https://github.com/hyperledger/sawtooth-core/pull/649,2017-06-19 17:32:41,2017-06-19 17:32:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/653,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309546860,https://github.com/hyperledger/sawtooth-core/pull/653#issuecomment-309546860,boydjohnson,"@agunde406 I verified by modifying the test_workload.yaml test, and that fails with a parallel scheduler on this branch. I will work to solve this.",2017-06-19 19:36:46,2017-06-19 19:36:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/653,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309550199,https://github.com/hyperledger/sawtooth-core/pull/653#issuecomment-309550199,boydjohnson,@nick-drozd I think your comment got lost in a force push. Do you have ideas for making those tests clearer? The 'test_parallel_simple_scheduler_test' tests the parallel scheduler against the simple_scheduler_test.yaml file.,2017-06-19 19:43:05,2017-06-19 19:43:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/653,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309551917,https://github.com/hyperledger/sawtooth-core/pull/653#issuecomment-309551917,nick-drozd,"It might be time to think about reorganizing the test file, which will, after this PR, be by far the longest test file:
```
ubuntu@ubuntu-xenial:/project/sawtooth-core$ find . -iname test*.py -exec wc -l {} \; | sort -nr | head -n 20
2091 ./validator/tests/test_scheduler/tests.py
1166 ./validator/tests/test_journal/tests.py
1084 ./validator/tests/test_context_manager/tests.py
888 ./consensus/poet/families/tests/test_tp_validator_registry.py
880 ./consensus/poet/core/tests/test_consensus/test_poet_block_publisher.py
863 ./consensus/poet/core/tests/test_consensus/test_consensus_state.py
858 ./validator/tests/test_client_request_handlers/test_txn_handlers.py
823 ./rest_api/tests/unit/test_state_requests.py
819 ./consensus/poet/common/tests/test_sgx_structs/tests.py
805 ./rest_api/tests/unit/test_txn_requests.py
783 ./rest_api/tests/unit/test_block_requests.py
783 ./rest_api/tests/unit/test_batch_requests.py
658 ./validator/tests/test_client_request_handlers/test_state_handlers.py
643 ./validator/tests/test_client_request_handlers/test_block_handlers.py
642 ./consensus/poet/core/tests/test_consensus/test_poet_fork_resolver.py
619 ./validator/tests/test_client_request_handlers/test_batch_handlers.py
606 ./validator/tests/test_state_delta_processor/tests.py
590 ./consensus/poet/core/tests/test_consensus/test_poet_block_verifier.py
528 ./consensus/poet/core/tests/test_consensus/test_poet_key_state_store.py
453 ./consensus/poet/core/tests/test_consensus/test_poet_settings_view.py
```",2017-06-19 19:46:12,2017-06-19 19:46:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/653,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309560375,https://github.com/hyperledger/sawtooth-core/pull/653#issuecomment-309560375,nick-drozd,"@boydjohnson It looks like the general pattern is there is the actual test (say, `_finalize_blah`) which then gets a different wrapper for each scheduler (`test_serial_finalize_blah` and `test_parallel_finalize_blah`). To buy a little more compactness, you could combine the wrappers (assuming they don't collide):
```
def test_finalize_blah(self):
    parallel = _set_up_parallel_scheduler()
    _finalize_blah(parallel)
    serial = _set_up_serial_scheduler()
    _finalize_blah(serial)
```
In other words, you would run a single test against both schedulers.

Alternatively, you could set up the test suite in such a way that it runs all the tests against the serial scheduler and then runs all the tests against the parallel scheduler.",2017-06-19 20:13:25,2017-06-19 20:13:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/653,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309588503,https://github.com/hyperledger/sawtooth-core/pull/653#issuecomment-309588503,boydjohnson,@agunde406 and I figured out it was the use of explicit dependencies in 'intkey workload' that caused the problems. STL-499 is the story about implementing support for explicit dependencies in the parallel scheduler.,2017-06-19 22:13:06,2017-06-19 22:13:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/653,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309629237,https://github.com/hyperledger/sawtooth-core/pull/653#issuecomment-309629237,vaporos,"I'd rather see more separation between serial and parallel tests (I like the test suite idea or something similar), but reorganizing the tests would be better done in a separate dedicated PR, and maybe even potentially after this is merged into master to avoid conflict/merge work between the branches.",2017-06-20 02:46:05,2017-06-20 02:46:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/653,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309773446,https://github.com/hyperledger/sawtooth-core/pull/653#issuecomment-309773446,boydjohnson,"@nick-drozd Since the tests in master have test_serial_blah as the pattern which fits with the parallel-scheduler branch which has test_serial_blah and test_parallel_blah, I will make a task in jira to be done after the parallel-scheduler branch is merged into master. @peterschwarz I will also add docstrings to the test methods.",2017-06-20 14:27:32,2017-06-20 14:27:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/651,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309169845,https://github.com/hyperledger/sawtooth-core/pull/651#issuecomment-309169845,jjason,How nit picky is it to mention misspellings in the commit messages? ;),2017-06-17 00:00:26,2017-06-17 00:00:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/651,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309169934,https://github.com/hyperledger/sawtooth-core/pull/651#issuecomment-309169934,jjason,"This error is causing the build to break:
```
Warning, treated as error:
/project/sawtooth-core/docs/source/app_developers_guide/installing_sawtooth.rst:5: ERROR: Unknown target name: ""rest api<../architecture/rest_api.rst>"".
```",2017-06-17 00:01:25,2017-06-17 00:01:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/651,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309191554,https://github.com/hyperledger/sawtooth-core/pull/651#issuecomment-309191554,delventhalz,"Better you nitpicking now, than someone else later. Also, RST continues to be my nemesis. ",2017-06-17 04:01:06,2017-06-17 04:01:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/650,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309462726,https://github.com/hyperledger/sawtooth-core/pull/650#issuecomment-309462726,jjason,"@dan For some reason, the link between Jenkins and github seems bonked.  The third build passed =)  I did not add any of the SGX tests to the `run_tests` script so I don't _think_ they should be run.",2017-06-19 14:47:21,2017-06-19 14:47:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/649,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309590832,https://github.com/hyperledger/sawtooth-core/pull/649#issuecomment-309590832,delventhalz,This code will all be thrown out in favor of a more specific BatchTracker. Closing this PR.,2017-06-19 22:25:41,2017-06-19 22:25:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/648,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309520517,https://github.com/hyperledger/sawtooth-core/pull/648#issuecomment-309520517,delventhalz,"@boydjohnson @dplumb94 These are interesting questions we should probably sort out.

The future PR @dplumb94 references, is refactoring the output from _all_ xo commands to output something more friendly than raw JSON. STL-185 seems to conflate that with the wait parameter which doesn't make much sense to me.

That said, I think it's a good call that the `take` command, and any other command that submits a batch, should be able to `--wait`. There either needs to be a JIRA task for that, or it should be added to this PR.",2017-06-19 18:08:11,2017-06-19 18:08:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/647,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309170845,https://github.com/hyperledger/sawtooth-core/pull/647#issuecomment-309170845,jjason,Tested locally,2017-06-17 00:10:55,2017-06-17 00:10:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/644,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309414374,https://github.com/hyperledger/sawtooth-core/pull/644#issuecomment-309414374,feihujiang,@vaporos Thanks. I'll update this PR according to your advice.,2017-06-19 11:35:01,2017-06-19 11:35:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/644,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/317636236,https://github.com/hyperledger/sawtooth-core/pull/644#issuecomment-317636236,feihujiang," I closed this PR, and will reopen it when I start to work on it for a version endpoint.",2017-07-25 05:48:55,2017-07-25 05:48:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/640,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309169574,https://github.com/hyperledger/sawtooth-core/pull/640#issuecomment-309169574,jjason,"When I was getting docker working on Linux, I also had to edit `/etc/resolv.conf` so that DNS resolution worked properly.  Have we verified that everything works with the instructions provided without needing to edit this file as well?  Or will that be a different PR/story?",2017-06-16 23:57:17,2017-06-16 23:57:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/636,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308568402,https://github.com/hyperledger/sawtooth-core/pull/636#issuecomment-308568402,jsmitchell,You missed a TCP 40000 in the updated diagram.,2017-06-14 21:49:10,2017-06-14 21:49:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/636,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308770531,https://github.com/hyperledger/sawtooth-core/pull/636#issuecomment-308770531,jsmitchell,I still see TCP 40000 in the updated diagram between Validator 1 and Rest API.,2017-06-15 15:18:52,2017-06-15 15:18:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/636,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308772828,https://github.com/hyperledger/sawtooth-core/pull/636#issuecomment-308772828,ojalatodd,@jsmitchell Fixed!,2017-06-15 15:26:37,2017-06-15 15:26:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/634,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308826696,https://github.com/hyperledger/sawtooth-core/pull/634#issuecomment-308826696,boydjohnson,Here's that PR. #638 ,2017-06-15 18:21:07,2017-06-15 18:21:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/634,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308878802,https://github.com/hyperledger/sawtooth-core/pull/634#issuecomment-308878802,boydjohnson,"@ojalatodd I fixed the subject/verb agreement problems, but did so while rebasing so I still only have 3 commits.",2017-06-15 22:05:50,2017-06-15 22:05:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/632,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308765012,https://github.com/hyperledger/sawtooth-core/pull/632#issuecomment-308765012,peterschwarz,@cianx is this duplicating functionality from Journal?,2017-06-15 15:07:17,2017-06-15 15:07:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/630,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308440204,https://github.com/hyperledger/sawtooth-core/pull/630#issuecomment-308440204,peterschwarz,Rebased with the signing key changes as well.,2017-06-14 14:00:15,2017-06-14 14:00:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/629,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308269850,https://github.com/hyperledger/sawtooth-core/pull/629#issuecomment-308269850,cianx,"There are 2 open issues with this PR:
1) it has my name and email address hard coded in the script to build the protobuf deb. This is bad practice. Do we have a BKM on  how to deal with this?
2) Build the python debs is giving me errors, the cryptography package is throwing the following errors:
```
==================================== ERRORS ====================================
____________ ERROR collecting tests/hazmat/primitives/test_3des.py _____________
tests/hazmat/primitives/test_3des.py:30: in <module>
    class TestTripleDESModeCBC(object):
tests/hazmat/primitives/test_3des.py:42: in TestTripleDESModeCBC
    lambda iv, **kwargs: modes.CBC(binascii.unhexlify(iv)),
tests/hazmat/primitives/utils.py:40: in generate_encrypt_test
    all_params = _load_all_params(path, file_names, param_loader)
tests/hazmat/primitives/utils.py:33: in _load_all_params
    load_vectors_from_file(os.path.join(path, file_name), param_loader)
tests/utils.py:76: in load_vectors_from_file
    with cryptography_vectors.open_vector_file(filename, mode) as vector_file:
/usr/local/lib/python3.5/dist-packages/cryptography_vectors/__init__.py:23: in open_vector_file
    return open(os.path.join(base, filename), mode)
E   FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/lib/python3.5/dist-packages/cryptography_vectors/ciphers/3DES/CBC/TCBCinvperm.rsp'
_____________ ERROR collecting tests/hazmat/primitives/test_aes.py _____________
tests/hazmat/primitives/test_aes.py:26: in <module>
    class TestAESModeCBC(object):
tests/hazmat/primitives/test_aes.py:48: in TestAESModeCBC
    lambda iv, **kwargs: modes.CBC(binascii.unhexlify(iv)),
tests/hazmat/primitives/utils.py:40: in generate_encrypt_test
    all_params = _load_all_params(path, file_names, param_loader)
tests/hazmat/primitives/utils.py:33: in _load_all_params
    load_vectors_from_file(os.path.join(path, file_name), param_loader)
tests/utils.py:76: in load_vectors_from_file
    with cryptography_vectors.open_vector_file(filename, mode) as vector_file:
/usr/local/lib/python3.5/dist-packages/cryptography_vectors/__init__.py:23: in open_vector_file
    return open(os.path.join(base, filename), mode)
E   FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/lib/python3.5/dist-packages/cryptography_vectors/ciphers/AES/CBC/CBCGFSbox128.rsp'
____________ ERROR collecting tests/hazmat/primitives/test_arc4.py _____________
tests/hazmat/primitives/test_arc4.py:26: in <module>
    class TestARC4(object):
tests/hazmat/primitives/test_arc4.py:40: in TestARC4
    lambda key, **kwargs: algorithms.ARC4(binascii.unhexlify(key)),
tests/hazmat/primitives/utils.py:129: in generate_stream_encryption_test
    all_params = _load_all_params(path, file_names, param_loader)
tests/hazmat/primitives/utils.py:33: in _load_all_params
    load_vectors_from_file(os.path.join(path, file_name), param_loader)
tests/utils.py:76: in load_vectors_from_file
    with cryptography_vectors.open_vector_file(filename, mode) as vector_file:
/usr/local/lib/python3.5/dist-packages/cryptography_vectors/__init__.py:23: in open_vector_file
    return open(os.path.join(base, filename), mode)
E   FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/lib/python3.5/dist-packages/cryptography_vectors/ciphers/ARC4/rfc-6229-40.txt'
________ ERROR collecting tests/hazmat/primitives/test_hmac_vectors.py _________
tests/hazmat/primitives/test_hmac_vectors.py:21: in <module>
    class TestHMACMD5(object):
tests/hazmat/primitives/test_hmac_vectors.py:28: in TestHMACMD5
    hashes.MD5(),
tests/hazmat/primitives/utils.py:220: in generate_hmac_test
    all_params = _load_all_params(path, file_names, param_loader)
tests/hazmat/primitives/utils.py:33: in _load_all_params
    load_vectors_from_file(os.path.join(path, file_name), param_loader)
tests/utils.py:76: in load_vectors_from_file
    with cryptography_vectors.open_vector_file(filename, mode) as vector_file:
/usr/local/lib/python3.5/dist-packages/cryptography_vectors/__init__.py:23: in open_vector_file
    return open(os.path.join(base, filename), mode)
E   FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/lib/python3.5/dist-packages/cryptography_vectors/HMAC/rfc-2202-md5.txt'
============= 21314 passed, 4198 skipped, 4 error in 72.69 seconds =============
E: pybuild pybuild:274: test: plugin distutils failed with: exit code=1: python3.5 setup.py test 
dh_auto_test: pybuild --test -i python{version} -p 3.5 --dir . returned exit code 13
debian/rules:7: recipe for target 'build' failed
make: *** [build] Error 25
dpkg-buildpackage: error: debian/rules build gave error exit status 2
Traceback (most recent call last):
  File ""setup.py"", line 334, in <module>
    **keywords_with_side_effects(sys.argv)
  File ""/usr/lib/python3.5/distutils/core.py"", line 148, in setup
    dist.run_commands()
  File ""/usr/lib/python3.5/distutils/dist.py"", line 955, in run_commands
    self.run_command(cmd)
  File ""/usr/lib/python3.5/distutils/dist.py"", line 974, in run_command
    cmd_obj.run()
  File ""/usr/lib/python3/dist-packages/stdeb/command/bdist_deb.py"", line 48, in run
    util.process_command(syscmd,cwd=target_dirs[0])
  File ""/usr/lib/python3/dist-packages/stdeb/util.py"", line 183, in process_command
    check_call(args, cwd=cwd)
  File ""/usr/lib/python3/dist-packages/stdeb/util.py"", line 46, in check_call
    raise CalledProcessError(retcode)
stdeb.util.CalledProcessError: 2
```

Those files are in the cryptography-vectors package and being installed, but in the python3 not the python3.5 directory. Any insights on what could cause this?

(SAWTOOTH)sourdough ~/Workspaces/sawtooth/sawtooth-core/packages
$ dpkg -c python3-cryptography-vectors_1.7.2-1_all.deb | grep rfc-2202
-rw-r--r-- root/root      1879 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/HMAC/rfc-2202-sha1.txt
-rw-r--r-- root/root      1797 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/HMAC/rfc-2202-md5.txt
(SAWTOOTH)sourdough ~/Workspaces/sawtooth/sawtooth-core/packages
$ dpkg -c python3-cryptography-vectors_1.7.2-1_all.deb | grep rfc-6229
-rw-r--r-- root/root      5139 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/ciphers/ARC4/rfc-6229-64.txt
-rw-r--r-- root/root      5716 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/ciphers/ARC4/rfc-6229-128.txt
-rw-r--r-- root/root      5283 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/ciphers/ARC4/rfc-6229-80.txt
-rw-r--r-- root/root      6292 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/ciphers/ARC4/rfc-6229-192.txt
-rw-r--r-- root/root      5067 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/ciphers/ARC4/rfc-6229-56.txt
-rw-r--r-- root/root      4906 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/ciphers/ARC4/rfc-6229-40.txt
-rw-r--r-- root/root      6868 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/ciphers/ARC4/rfc-6229-256.txt
(SAWTOOTH)sourdough ~/Workspaces/sawtooth/sawtooth-core/packages
$ dpkg -c python3-cryptography-vectors_1.7.2-1_all.deb | grep CBCGFSbox128
-rw-r--r-- root/root      2692 2017-01-27 07:09 ./usr/lib/python3/dist-packages/cryptography_vectors/ciphers/AES/CBC/CBCGFSbox128.rsp

",2017-06-13 22:44:01,2017-06-13 22:44:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/629,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308813588,https://github.com/hyperledger/sawtooth-core/pull/629#issuecomment-308813588,cianx,"Issue 1 above is updates with inputs from Ryan
Issue 2 appears to have been my local docker config. ",2017-06-15 17:30:54,2017-06-15 17:30:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/628,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308252293,https://github.com/hyperledger/sawtooth-core/pull/628#issuecomment-308252293,jjason,"Stupid question.  Is there a way to do this so that when keys change (I don't know how often they change) you don't have to edit all of these files?  Is there a way to download the key?  If not, can we put the key(s) in a well-known file and then you only have to change it(them) in one place?",2017-06-13 21:21:00,2017-06-13 21:22:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/628,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308257826,https://github.com/hyperledger/sawtooth-core/pull/628#issuecomment-308257826,rbuysse,"@jjason They shouldn't change again, but that is something I will investigate.",2017-06-13 21:44:41,2017-06-13 21:44:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/625,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312296339,https://github.com/hyperledger/sawtooth-core/pull/625#issuecomment-312296339,jsmitchell,hi @h4xr - are you planning on continuing with this PR? Otherwise I will probably mark it closed.,2017-06-30 15:20:57,2017-06-30 15:20:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/625,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/312312079,https://github.com/hyperledger/sawtooth-core/pull/625#issuecomment-312312079,h4xr,"Hello,
Sorry for a long inactivity, got occupied with some work. Will be working on this PR this weekend. Hoping to complete it by Monday :)",2017-06-30 16:23:21,2017-06-30 16:23:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/625,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/313352086,https://github.com/hyperledger/sawtooth-core/pull/625#issuecomment-313352086,h4xr,"Hi, I am unable to get some free time to complete the PR and hence closing this PR for now. If anyone will like to work on this one, please feel free to do so.
Hope to work along in future with the awesome team.",2017-07-06 09:57:06,2017-07-06 09:57:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/620,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308170880,https://github.com/hyperledger/sawtooth-core/pull/620#issuecomment-308170880,dcmiddle,I don't have the context for this. Could you please add a little more about what this is dealing with?,2017-06-13 16:20:31,2017-06-13 16:20:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/620,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308208304,https://github.com/hyperledger/sawtooth-core/pull/620#issuecomment-308208304,aludvik,This PR is in response to a bug reported on rocket chat: https://chat.hyperledger.org/channel/sawtooth?msg=tTSYaaFXh6FWdjWe9,2017-06-13 18:34:31,2017-06-13 18:34:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/615,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307586096,https://github.com/hyperledger/sawtooth-core/pull/615#issuecomment-307586096,boydjohnson,A concern: #584 added address enforcement in test code but with a possibly less efficient technique. We should probably be using the same technique in the ContextManager and test code for consistency and maintainability reasons. @cianx @jsmitchell  ,2017-06-10 19:41:32,2017-06-10 19:41:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/613,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307658332,https://github.com/hyperledger/sawtooth-core/pull/613#issuecomment-307658332,vaporos,"The commit message is missing the required Signed-off-by line.  This can generally be fixed with ""git commit --amend -s"" and re-pushing to github.",2017-06-11 21:32:43,2017-06-11 21:32:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/613,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307659929,https://github.com/hyperledger/sawtooth-core/pull/613#issuecomment-307659929,ksachdeva,"Hi @vaporos,

I have amended the commit message as required by you.

Regards & thanks
Kapil
",2017-06-11 22:03:38,2017-06-11 22:03:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/612,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307519470,https://github.com/hyperledger/sawtooth-core/pull/612#issuecomment-307519470,jjason,Argh!!!!  Curses!!!!  Forgot that id() is a built-in function.,2017-06-09 23:05:51,2017-06-09 23:05:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/612,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307817776,https://github.com/hyperledger/sawtooth-core/pull/612#issuecomment-307817776,jjason,Better? @peterschwarz @vaporos ,2017-06-12 15:05:55,2017-06-12 15:05:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/611,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308533216,https://github.com/hyperledger/sawtooth-core/pull/611#issuecomment-308533216,agunde406,Added more test cases. Currently that tests require sleeps to wait for block to processed. Theses should be change to have the sawtooth config wait when this added to the command. A story has been created to add the --wait to sawtooth config https://jira.hyperledger.org/browse/STL-442,2017-06-14 19:25:58,2017-06-14 19:25:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/611,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308540274,https://github.com/hyperledger/sawtooth-core/pull/611#issuecomment-308540274,agunde406,Working on fixing rebase issues and rewriting the tests to match @delventhalz changes to test_config_smoke in #633.,2017-06-14 19:54:59,2017-06-14 19:54:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/605,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307695505,https://github.com/hyperledger/sawtooth-core/pull/605#issuecomment-307695505,feihujiang,"I applied the changes from the reviewers, please have a look. Thanks.",2017-06-12 05:51:45,2017-06-12 05:51:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/602,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307301086,https://github.com/hyperledger/sawtooth-core/pull/602#issuecomment-307301086,feihujiang,"As discussed in the Sawtooth Channel,  the ```sawtooth batch status``` is much more consistent than ```sawtooth batch-status```. So this PR changed sawtooth batch-status to sawtooth batch status cli, and added docs for it.",2017-06-09 05:46:52,2017-06-09 05:46:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/602,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307301628,https://github.com/hyperledger/sawtooth-core/pull/602#issuecomment-307301628,feihujiang,"@jsmitchell I updated this PR, please take a look. Thanks.",2017-06-09 05:51:01,2017-06-09 05:51:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/602,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307425411,https://github.com/hyperledger/sawtooth-core/pull/602#issuecomment-307425411,jjason,Tested locally,2017-06-09 15:46:29,2017-06-09 15:46:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/598,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306924605,https://github.com/hyperledger/sawtooth-core/pull/598#issuecomment-306924605,nick-drozd,"Hey look, my build failed. Let's see which test it was:
```
dynamic-network_1  | [20:54:15.157 ERROR    cli] Address already in use
dynamic-network_1  | Traceback (most recent call last):
dynamic-network_1  |   File ""/project/sawtooth-core/validator/sawtooth_validator/server/cli.py"", line 283, in main
dynamic-network_1  |     validator.start()
dynamic-network_1  |   File ""/project/sawtooth-core/validator/sawtooth_validator/server/core.py"", line 492, in start
dynamic-network_1  |     self._service.start()
dynamic-network_1  |   File ""/project/sawtooth-core/validator/sawtooth_validator/networking/interconnect.py"", line 597, in start
dynamic-network_1  |     raise err
dynamic-network_1  |   File ""/usr/lib/python3.5/threading.py"", line 914, in _bootstrap_inner
dynamic-network_1  |     self.run()
dynamic-network_1  |   File ""/usr/lib/python3.5/threading.py"", line 862, in run
dynamic-network_1  |     self._target(*self._args, **self._kwargs)
dynamic-network_1  |   File ""/project/sawtooth-core/validator/sawtooth_validator/networking/interconnect.py"", line 348, in setup
dynamic-network_1  |     self._socket.bind(self._address)
dynamic-network_1  |   File ""zmq/backend/cython/socket.pyx"", line 487, in zmq.backend.cython.socket.Socket.bind (zmq/backend/cython/socket.c:5156)
dynamic-network_1  |   File ""zmq/backend/cython/checkrc.pxd"", line 25, in zmq.backend.cython.checkrc._check_rc (zmq/backend/cython/socket.c:7535)
dynamic-network_1  | zmq.error.ZMQError: Address already in use
dynamic-network_1  | Exception in thread InterconnectThread-5:
dynamic-network_1  | Traceback (most recent call last):
dynamic-network_1  |   File ""/usr/lib/python3.5/threading.py"", line 914, in _bootstrap_inner
dynamic-network_1  |     self.run()
dynamic-network_1  |   File ""/usr/lib/python3.5/threading.py"", line 862, in run
dynamic-network_1  |     self._target(*self._args, **self._kwargs)
dynamic-network_1  |   File ""/project/sawtooth-core/validator/sawtooth_validator/networking/interconnect.py"", line 348, in setup
dynamic-network_1  |     self._socket.bind(self._address)
dynamic-network_1  |   File ""zmq/backend/cython/socket.pyx"", line 487, in zmq.backend.cython.socket.Socket.bind (zmq/backend/cython/socket.c:5156)
dynamic-network_1  |   File ""zmq/backend/cython/checkrc.pxd"", line 25, in zmq.backend.cython.checkrc._check_rc (zmq/backend/cython/socket.c:7535)
dynamic-network_1  | zmq.error.ZMQError: Address already in use
```",2017-06-07 21:04:55,2017-06-07 21:04:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/598,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307153321,https://github.com/hyperledger/sawtooth-core/pull/598#issuecomment-307153321,aludvik,"Couple changes, otherwise looks good.",2017-06-08 16:17:05,2017-06-08 16:17:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/597,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306938746,https://github.com/hyperledger/sawtooth-core/pull/597#issuecomment-306938746,peterschwarz,Rebased,2017-06-07 22:04:46,2017-06-07 22:04:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/596,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307119548,https://github.com/hyperledger/sawtooth-core/pull/596#issuecomment-307119548,peterschwarz,Rebased before merging,2017-06-08 14:24:30,2017-06-08 14:24:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/594,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/308862148,https://github.com/hyperledger/sawtooth-core/pull/594#issuecomment-308862148,aludvik,This needs to be rebuilt once the protobuf deb is published to ubuntu/ci,2017-06-15 20:50:57,2017-06-15 20:50:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/594,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/309106424,https://github.com/hyperledger/sawtooth-core/pull/594#issuecomment-309106424,cianx,Verified docker and vagrant build locally. ,2017-06-16 18:51:58,2017-06-16 18:51:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/592,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307032493,https://github.com/hyperledger/sawtooth-core/pull/592#issuecomment-307032493,feihujiang,The bug this PR references is fixed by #571. Close this PR.,2017-06-08 08:14:46,2017-06-08 08:14:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/590,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306807269,https://github.com/hyperledger/sawtooth-core/pull/590#issuecomment-306807269,dcmiddle,Resolved issues in my test environment.,2017-06-07 14:12:13,2017-06-07 14:12:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/589,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306653253,https://github.com/hyperledger/sawtooth-core/pull/589#issuecomment-306653253,aludvik,Commit message doesn't conform to contribution standards: https://chris.beams.io/posts/git-commit/,2017-06-07 00:41:13,2017-06-07 00:41:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/589,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306978256,https://github.com/hyperledger/sawtooth-core/pull/589#issuecomment-306978256,jjason,"Maybe change commit message to ""Fix Jamie's stupid redundant upper() mistake""",2017-06-08 02:13:05,2017-06-08 02:13:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/589,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307133917,https://github.com/hyperledger/sawtooth-core/pull/589#issuecomment-307133917,dcmiddle,Commit message amended.,2017-06-08 15:11:36,2017-06-08 15:11:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/585,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307476842,https://github.com/hyperledger/sawtooth-core/pull/585#issuecomment-307476842,agunde406,"Yes, I wanted to make sure the approach was approved before touching all the sdks. @peterschwarz ",2017-06-09 19:18:26,2017-06-09 19:18:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/585,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307501816,https://github.com/hyperledger/sawtooth-core/pull/585#issuecomment-307501816,peterschwarz,👍 ,2017-06-09 21:16:04,2017-06-09 21:16:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/584,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306562473,https://github.com/hyperledger/sawtooth-core/pull/584#issuecomment-306562473,jsmitchell,Can you split the message factory change into a commit separate from the xo changes?,2017-06-06 17:41:02,2017-06-06 17:41:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/576,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306235990,https://github.com/hyperledger/sawtooth-core/pull/576#issuecomment-306235990,peterschwarz,"The smoke tests/integration tests verify this, but the unit test does not.  We should properly exercise this in a future PR. ",2017-06-05 16:32:04,2017-06-05 16:32:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/576,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306255423,https://github.com/hyperledger/sawtooth-core/pull/576#issuecomment-306255423,jsmitchell,"@feihujiang Could you change the commit message to ""Changes sawtooth cli subparser name to subcommand"" or somesuch?",2017-06-05 17:46:01,2017-06-05 17:46:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/576,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306360191,https://github.com/hyperledger/sawtooth-core/pull/576#issuecomment-306360191,feihujiang,"@jsmitchell I changed it according to your advice, please take a look.",2017-06-06 02:01:07,2017-06-06 02:01:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/575,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306235583,https://github.com/hyperledger/sawtooth-core/pull/575#issuecomment-306235583,jsmitchell,"Hi @h4xr, please move the JIRA ticket out of the first line of the commit message. It's fine to put it farther down in the commit message, but we'd like to keep the first commit line clean of external system references.",2017-06-05 16:30:36,2017-06-05 16:30:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/575,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306236168,https://github.com/hyperledger/sawtooth-core/pull/575#issuecomment-306236168,h4xr,@jsmitchell Made the change ,2017-06-05 16:32:48,2017-06-05 16:32:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/575,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306237137,https://github.com/hyperledger/sawtooth-core/pull/575#issuecomment-306237137,jsmitchell,@h4xr you'll need to actually amend your commit in your local branch and force push back to h4xr:move_validator_tests,2017-06-05 16:36:30,2017-06-05 16:36:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/574,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306405916,https://github.com/hyperledger/sawtooth-core/pull/574#issuecomment-306405916,feihujiang,"@peterschwarz I updated this PR, please take a look. Thanks.",2017-06-06 07:32:58,2017-06-06 07:32:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/573,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306311616,https://github.com/hyperledger/sawtooth-core/pull/573#issuecomment-306311616,peterschwarz,This will need to be rebased.,2017-06-05 21:12:06,2017-06-05 21:12:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/573,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306347608,https://github.com/hyperledger/sawtooth-core/pull/573#issuecomment-306347608,delventhalz,"This typo was fixed by #545, which centralized the url parameter in the `base_http_parser`, which doesn't have this typo. Closing the PR.",2017-06-06 00:29:49,2017-06-06 00:29:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/572,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305981246,https://github.com/hyperledger/sawtooth-core/pull/572#issuecomment-305981246,rbuysse,"Previous behavior:

_[~/Downloads]$ docker-compose -f sawtooth-default.yaml up
Creating network ""downloads_default"" with the default driver
Creating downloads_validator_1
Creating downloads_tp_xo_python_1
Creating downloads_tp_intkey_python_1
Creating downloads_rest_api_1
Creating downloads_tp_config_1
Creating downloads_client_1_


New behavior:

_[~/Downloads]$ docker-compose -f sawtooth-default.yaml up
Creating network ""downloads_default"" with the default driver
Creating sawtooth-validator-default
Creating sawtooth-rest_api-default
Creating sawtooth-tp_xo_python-default
Creating sawtooth-tp_config-default
Creating sawtooth-tp_intkey_python-default
Creating sawtooth-client-default_
",2017-06-03 15:16:46,2017-06-03 15:16:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305992812,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-305992812,cixce,"Our policy is that blocks are not required to be complete on arrival, If the Transaction list is incomplete the completer would retreive the missing transactions from the network and add them to the block. Since transactions are broadcast around the network when submitted, validators should have all the transactions for a block prior to the blocks arrival. Transmitting blocks with out all of the transactions present would be a bandwidth optimization. We have not enabled this yet but @agunde406 has implemented and completed the logic in the Completer to make this work.  This PR would force all block transitted on the network to be formally complete (containing all referenced transactions in the correct order)

@vaporos @jsmitchell Thoughts?",2017-06-03 18:25:27,2017-06-03 18:25:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306016281,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-306016281,feihujiang,"@cixce This validates each batch, not the block. And as I know, a batch contains the complete transactions, because one reason is that the transactions in a batch are submitted at the same time. This PR doesn't break the policy.  If I am wrong, please point it out.
And [The document](http://intelledger.github.io/architecture/transactions_and_batches.html) has the sentence that  ""The transaction_ids field contains a list of Transaction header_signatures and must be the same order as the transactions field.""
So I think it is needed to validate the transaction_ids field of each batch.",2017-06-04 03:52:37,2017-06-04 03:52:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306204561,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-306204561,jsmitchell,"This seems to be overloading the functionality of the signature verifier to me.

Here's where the completer is applying rules regarding block structure:

https://github.com/hyperledger/sawtooth-core/blob/master/validator/sawtooth_validator/journal/completer.py#L144

If we want to more cleanly segregate enforcement of structural rules as a gating handler, I suggest we either rename signature verifier, or add another handler that deals with structure.

@agunde406 thoughts?
",2017-06-05 14:39:12,2017-06-05 14:39:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306206032,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-306206032,jsmitchell,"@cixce this change looks to check the transaction_id list in the batch header against the transaction list in the batch. It doesn't deal with block structure, unless the block includes raw batches (in which case verify_batch() is called). The effect this would have is that either batch messages or block messages containing batches which don't have transaction agreement between their header and body would be dropped.",2017-06-05 14:44:54,2017-06-05 14:44:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306206298,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-306206298,agunde406,I agree that this is overloading the original intent for the signature verifier. This check could be added to the completer or a new handler as @jsmitchell suggested. ,2017-06-05 14:45:47,2017-06-05 14:45:47
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306471823,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-306471823,feihujiang,"   As documented, transactions must be wrapped in a Batch, and must contain the public key of the batch signer in the batcher_pubkey field. So a transaction is only wrapped in a batch, a batch must contain the complete transactions that the transaction_id list in the batch header.

   I'll add a new handler that checks the transaction_id list in the batch header against the transaction list in the batch. Batches which don't contain the complete transactions that the transaction_id list in the batch header would be dropped. 

   What's your point? ",2017-06-06 12:32:00,2017-06-06 12:32:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306726867,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-306726867,feihujiang,"I updated this PR, please have a look. Thanks.",2017-06-07 08:28:33,2017-06-07 08:28:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307273378,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-307273378,feihujiang,"@agunde406 I updated this PR, please take a look.",2017-06-09 01:50:58,2017-06-09 01:50:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307279201,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-307279201,jsmitchell,@feihujiang could you force push this branch again? something seems amiss.,2017-06-09 02:34:32,2017-06-09 02:34:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307302674,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-307302674,feihujiang,"@jsmitchell OK, I forced push this branch again. Something seems amiss, what does this mean?",2017-06-09 05:59:12,2017-06-09 05:59:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307398992,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-307398992,jsmitchell,@feihujiang we were just having some weirdness with the kickoffs of CI builds. No worries.,2017-06-09 14:09:01,2017-06-09 14:09:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/571,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/307696803,https://github.com/hyperledger/sawtooth-core/pull/571#issuecomment-307696803,feihujiang,"@jjason I applied the changes from your review,  please have a look. Thanks.",2017-06-12 06:02:42,2017-06-12 06:02:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/561,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305833786,https://github.com/hyperledger/sawtooth-core/pull/561#issuecomment-305833786,jsmitchell,Should we hold off on this until we get the master fix in on the validator argument changes?,2017-06-02 16:08:21,2017-06-02 16:08:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/561,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305843195,https://github.com/hyperledger/sawtooth-core/pull/561#issuecomment-305843195,jsmitchell,"It looks like these tests passed in @delventhalz's PR. So, I'd suggest we wait until master passes and then close this revert.",2017-06-02 16:39:52,2017-06-02 16:39:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/558,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306504177,https://github.com/hyperledger/sawtooth-core/pull/558#issuecomment-306504177,aludvik,Made changes suggested by @peterschwarz.,2017-06-06 14:30:24,2017-06-06 14:30:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/558,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306627624,https://github.com/hyperledger/sawtooth-core/pull/558#issuecomment-306627624,aludvik,Made changes based on @ojalatodd's feedback,2017-06-06 21:49:22,2017-06-06 21:49:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/557,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305625993,https://github.com/hyperledger/sawtooth-core/pull/557#issuecomment-305625993,jjason,@rbuysse @peterschwarz  Thanks for quick review,2017-06-01 21:28:21,2017-06-01 21:28:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/552,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306498871,https://github.com/hyperledger/sawtooth-core/pull/552#issuecomment-306498871,aludvik,Changed Do() -> Run(),2017-06-06 14:13:19,2017-06-06 14:13:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/551,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305603973,https://github.com/hyperledger/sawtooth-core/pull/551#issuecomment-305603973,peterschwarz,This looks like it should actually be two separate PR's,2017-06-01 20:00:18,2017-06-01 20:00:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/551,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305605179,https://github.com/hyperledger/sawtooth-core/pull/551#issuecomment-305605179,agunde406,"Thats what a bad rebase looks like, fixing",2017-06-01 20:05:23,2017-06-01 20:05:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/551,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305615729,https://github.com/hyperledger/sawtooth-core/pull/551#issuecomment-305615729,agunde406,Fixed,2017-06-01 20:47:52,2017-06-01 20:47:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/550,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305894197,https://github.com/hyperledger/sawtooth-core/pull/550#issuecomment-305894197,jjason,Rebase before merge for sanity check,2017-06-02 19:56:31,2017-06-02 19:56:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/548,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305695540,https://github.com/hyperledger/sawtooth-core/pull/548#issuecomment-305695540,feihujiang,"I updated this PR according to your advice, and added a unit test. Please review again, thanks.",2017-06-02 05:46:15,2017-06-02 05:46:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/546,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305908571,https://github.com/hyperledger/sawtooth-core/pull/546#issuecomment-305908571,ojalatodd,"@vaporos  I made all the changes.
Log locations are not yet described. Will add that info in the next Sprint.",2017-06-02 21:03:14,2017-06-02 21:03:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/545,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305525842,https://github.com/hyperledger/sawtooth-core/pull/545#issuecomment-305525842,peterschwarz,"tested - works with a user in the `.password` file named ""sawtooth"", based on the instructions given.",2017-06-01 15:17:06,2017-06-01 15:17:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/544,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/306203154,https://github.com/hyperledger/sawtooth-core/pull/544#issuecomment-306203154,agunde406,Rebased ,2017-06-05 14:33:43,2017-06-05 14:33:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/539,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305336479,https://github.com/hyperledger/sawtooth-core/pull/539#issuecomment-305336479,delventhalz,"# To Test This PR

This PR adds support for Basic Auth proxies. In order to test it manually, you'll need to build one. The instructions here allow you to do essentially the same integration test that is added to `run_tests` by the PR. They let you set up a simple authed Apache proxy in vagrant.

## Install Apache

```
% sudo apt-get update
% sudo apt-get install -y apache2
% sudo a2enmod headers
% sudo a2enmod proxy_http
```

## Set up a password file

Go to http://www.htaccesstools.com/htpasswd-generator/ and generate a `.htpdpassword` file from a username and password of your choice.
```
% vi /tmp/.password
```

Copy and paste the contents of the textbox into this file, save, and exit.

## Set up the site configuration

```
% sudo vi /etc/apache2/sites-enabled/000-default.conf
```

Edit the file to look like this:
```
<VirtualHost *:80>
        ServerAdmin sawtooth@sawtooth
        DocumentRoot /var/www/html

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        <Location />
                Options Indexes FollowSymLinks
                AllowOverride None
                AuthType Basic
                AuthName ""Enter password""
                AuthUserFile ""/tmp/.password""
                Require user sawtooth
                Require all denied
        </Location>
</VirtualHost>

ProxyPass /sawtooth http://localhost:8080
ProxyPassReverse /sawtooth http://localhost:8080
RequestHeader set X-Forwarded-Path ""/sawtooth""
```

## Start and/or restart Apache

```
% sudo apachectl start
```

```
% sudo apachectl restart
```

## Make sure it all works

Start up a validator and the REST API normally. When you query the REST API, you should get back some block data as JSON:
```
% curl localhost:8080/blocks
```

You should also be able to get a `401` by querying the proxy without authorization:
```
% curl localhost/sawtooth/blocks
```

And finally, you should be able to get the same JSON by querying the proxy with authorization:
```
% curl localhost/sawtooth/blocks -u {USERNAME}:{PASSWORD}
```

When you send a request to the REST API it should format the `""link""` response parameter relative to the _proxy_ not its own url. So when you get a JSON response back to the authed proxy url, heck the link parameter.

It should start with:
```
""http://localhost/sawtooth/blocks?head=...
```

It should _not_ start with:
```
""http://localhost:8080/blocks?head=...
```

## What to do if you have permissioning issues around port 80

Sometimes vagrant seems to get angry when you try to run the proxy on port `80`. You can switch it to port `8000` by changing two files.
```
% sudo vi /etc/apache2/ports.conf
```

Switch `Listen 80` -> `Listen 8000`.

```
% sudo vi /etc/apache2/sites-enabled/000-default.conf
```

Switch `<VirtualHost *:80>` -> `<VirtualHost *:8000>`

Then:
```
% sudo apachectl restart
```

Afterwards the above example should work fine, but the proxy url will be `localhost:8000/sawtooth` instead of `localhost/sawtooth`.",2017-05-31 22:29:31,2017-05-31 22:31:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/536,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305072219,https://github.com/hyperledger/sawtooth-core/pull/536#issuecomment-305072219,jjason,Re-pushed PR after merge of STL-144,2017-05-31 03:29:29,2017-05-31 03:29:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/536,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305818225,https://github.com/hyperledger/sawtooth-core/pull/536#issuecomment-305818225,jjason,Doing a quick rebase to verify nothing broken before merge,2017-06-02 15:17:44,2017-06-02 15:17:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/535,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304875904,https://github.com/hyperledger/sawtooth-core/pull/535#issuecomment-304875904,aludvik,"FYI, the go-flags and client commits are display in the wrong order above. They are flipped if checkout out the branch and look at the actual history.",2017-05-30 13:20:55,2017-05-30 13:20:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/535,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304941595,https://github.com/hyperledger/sawtooth-core/pull/535#issuecomment-304941595,aludvik,"I am working on a PR to follow this one that:
1. Adds the option to pass keys/data as files
2. Separates the CLI from the client to make reuse and testing easier
3. Adds a simple test which loads a contract, sets a key by executing it, and checks storage afterwards.
",2017-05-30 16:57:13,2017-05-30 16:57:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/534,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304998874,https://github.com/hyperledger/sawtooth-core/pull/534#issuecomment-304998874,jjason,Updated `poet` sub-command to be `enclave` instead of `characteristic`,2017-05-30 20:30:34,2017-05-30 20:30:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/534,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305068639,https://github.com/hyperledger/sawtooth-core/pull/534#issuecomment-305068639,jjason,Rebasing for final test before merge,2017-05-31 03:00:00,2017-05-31 03:00:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/533,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304964382,https://github.com/hyperledger/sawtooth-core/pull/533#issuecomment-304964382,aludvik,Dropped the base64 commit and rename commit and added a commit to change the encode/decode methods. See commit message for rationale.,2017-05-30 18:20:14,2017-05-30 18:20:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/532,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304357310,https://github.com/hyperledger/sawtooth-core/pull/532#issuecomment-304357310,vaporos,We should consider backwards compatibility (users might have keys from sawtooth keygen or sawtooth admin keygen existing in their environments) and compatibility with the javascript SDK. ,2017-05-26 18:33:45,2017-05-26 18:33:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/532,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304699357,https://github.com/hyperledger/sawtooth-core/pull/532#issuecomment-304699357,aludvik,"My opinion is that we move to hex for simplicity and easier compatibility across languages. We are already encoding pubkeys and signatures to hex strings, so I am not sure why we would want to keep private keys encoded differently.

In response to @vaporos's comment, the JavaScript SDK assumes the key is in hex, as does the Go SDK.",2017-05-29 16:46:46,2017-05-29 16:46:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/532,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305810459,https://github.com/hyperledger/sawtooth-core/pull/532#issuecomment-305810459,dcmiddle,Fair point on doing a friendlier change for compatibility. This was kind of knee jerk. I will take this down for now and create a proper jira story.,2017-06-02 14:50:13,2017-06-02 14:50:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/530,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304420516,https://github.com/hyperledger/sawtooth-core/pull/530#issuecomment-304420516,feihujiang,@jsmitchell I changed as your recommendation. Please take a look.,2017-05-27 02:20:46,2017-05-27 02:20:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/528,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304316495,https://github.com/hyperledger/sawtooth-core/pull/528#issuecomment-304316495,delventhalz,"@agunde406 @dplumb94 The `wait` query will inevitably time out (usually after 300s at the longest). The _Sawtooth CLI_ implementation that Darian is borrowing from is designed allow arbitrarily long wait times (`--wait 10000`), or even indefinite waits (`--wait`).

In order to do that, you need to resubmit the request every time it times out, which is what most of this complication is from. That said, you should still use the `wait` query, because otherwise you are just blasting out HTTP requests every ~0.2s, instead of every ~300s. More details are in my comments above.",2017-05-26 15:43:19,2017-05-26 15:43:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/526,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304049029,https://github.com/hyperledger/sawtooth-core/pull/526#issuecomment-304049029,aludvik,Is this different than https://github.com/hyperledger/sawtooth-core/blob/master/ci/sawtooth-build-docs?,2017-05-25 16:03:15,2017-05-25 16:03:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/526,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304075353,https://github.com/hyperledger/sawtooth-core/pull/526#issuecomment-304075353,cianx,"@aludvik Nope, I did not find that one when I looked. ",2017-05-25 17:46:25,2017-05-25 17:46:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/525,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304417523,https://github.com/hyperledger/sawtooth-core/pull/525#issuecomment-304417523,feihujiang,@vaporos I fixed the linting error. Please take a look.,2017-05-27 01:28:05,2017-05-27 01:28:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/523,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304079135,https://github.com/hyperledger/sawtooth-core/pull/523#issuecomment-304079135,jjason,Pushed new PR.  Move PEM file and added to setup.py packaging.  Not certain if integration (poet-smoke and dynamic-network) will pass.  We'll see...,2017-05-25 18:00:23,2017-05-25 18:00:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/523,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304137436,https://github.com/hyperledger/sawtooth-core/pull/523#issuecomment-304137436,jjason,Let's see if tests pass now =),2017-05-25 22:05:33,2017-05-25 22:05:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/523,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304155244,https://github.com/hyperledger/sawtooth-core/pull/523#issuecomment-304155244,jjason,I think PR is finally ready.,2017-05-25 23:56:38,2017-05-25 23:56:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/523,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304303543,https://github.com/hyperledger/sawtooth-core/pull/523#issuecomment-304303543,jsmitchell,Tested locally.,2017-05-26 14:51:55,2017-05-26 14:51:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/523,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304305429,https://github.com/hyperledger/sawtooth-core/pull/523#issuecomment-304305429,jjason,Quick rebase for sanity check before merge,2017-05-26 14:59:24,2017-05-26 14:59:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/518,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/305615863,https://github.com/hyperledger/sawtooth-core/pull/518#issuecomment-305615863,peterschwarz,"This may need rebasing, for the tests to properly pass",2017-06-01 20:48:23,2017-06-01 20:48:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/514,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304079503,https://github.com/hyperledger/sawtooth-core/pull/514#issuecomment-304079503,ojalatodd,"My manual test of this showed a problem. From the docker ""client"" this command failed:
sawtooth config proposal create --key /home/ubuntu/.sawtooth/keys/my_key.priv sawtooth.validator.transaction_families='[{""family"": ""intkey"", ""version"": ""1.0"", ""encoding"": ""application/protobuf""}, {""family"":""sawtooth_config"", ""version"":""1.0"", ""encoding"":""application/protobuf""}]'

Problem: the key is not in the client docker container, but is on the validator docker container! We need a solution to this issue. @rbuysse and @aludvik , could you help come up with an idea? 
One idea would be to run these 2 commands from the client container, rather than the validator container:

**sawtooth keygen my_key && \
 sawtooth config genesis -k /root/.sawtooth/keys/my_key.pub** ",2017-05-25 18:01:38,2017-05-25 18:01:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/510,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/303528847,https://github.com/hyperledger/sawtooth-core/pull/510#issuecomment-303528847,jjason,Rebase before merge,2017-05-23 20:53:33,2017-05-23 20:53:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/509,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/303434855,https://github.com/hyperledger/sawtooth-core/pull/509#issuecomment-303434855,boydjohnson,"The change to storing json objects in state doesn't seem like it will work. So when/if a hash collision happens, there will be two keys in the json object and since json objects are unordered (http://www.rfc-editor.org/rfc/rfc7159.txt) we can't be certain the order of bytes stored in state. This will cause two different validators to get a merkle root that is different for state changes that are the same. bson is a binary format that is somewhat like json and says that bson ""documents"" are ordered key:value pairs. http://bsonspec.org/spec.html",2017-05-23 15:27:02,2017-05-23 15:27:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/509,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/303472532,https://github.com/hyperledger/sawtooth-core/pull/509#issuecomment-303472532,nick-drozd,"@boydjohnson raises a good point, so it's back the drawing board with the state format. I've pulled that commit, but the rest of this PR is unaffected.",2017-05-23 17:22:45,2017-05-23 17:22:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/509,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/303779883,https://github.com/hyperledger/sawtooth-core/pull/509#issuecomment-303779883,nick-drozd,"I put the state format commit back up. The games should be stored in a stringified JSON dict alphabetized by key with no spaces, eg `{""a_game"":""board,state,p1,p2"",""b_game"":""board,state,p1,p2"",...}`

The upside to this approach is that it's human-readable and not too complicated, which is important if xo is going to be the example used in all the docs. The downside is that it might be complicated to implement in some languages. Note the ""some"": it's easy to do in Python, JS, and I think also in Go and Java.

I also added `xo-all-lang-smoke`, which runs the xo smoke tests against a validator with all the xo TP's attached. This is the easiest way to verify that all the implementations are writing to state properly. Currently it's in a `run_tests` module that isn't part of the default `run_tests` module list, since it would require building multiple languages. (Moving forward, I think it would make sense to reorganize the test modules along transaction family lines, rather than language, but that's up for debate.)",2017-05-24 16:34:50,2017-05-24 16:34:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/509,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/303891034,https://github.com/hyperledger/sawtooth-core/pull/509#issuecomment-303891034,nick-drozd,"Okay, hopefully this is the last update. @vaporos suggested that we use the following state format: `a_game,board,state,p1,p2|b_game,board,state,p1,p2|...`. Although it's a little unwieldy to implement, it has the benefit of not requiring any libraries or getting involved with any JSON baggage. On the other hand, this format has the disadvantage of potentially causing confusion regarding the use of csv in both the transaction format and the state format -- one might think that they are related, when really they can be completely independent choices.

Given this format, game names can't contain `,` or `|`. (Really, this restriction only applies to `|`, as an implementation would typically screen out names containing `,` when trying to decode the transaction.)",2017-05-25 00:40:55,2017-05-25 00:40:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/509,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/304751763,https://github.com/hyperledger/sawtooth-core/pull/509#issuecomment-304751763,nick-drozd,"@aludvik I changed `two_families.yaml` to `two-families.yaml` to match the rest of the yaml files, and I changed `xo-smoke.yaml` to `xo-python-smoke.yaml` to match the rest of the smoke test yaml file. Neither of these changes are interesting enough to warrant separate commits, so I changed them when I changed the actual test files.

I changed the transaction format because it's confusing to have `take game 5` at the command line get changed into `game,take,5` when the transaction is sent.

Xo Javascript was organized somewhat haphazardly, so I moved things around to make it easier to change what needed to be changed. Think of it as a very mild refactor.

The rest client changes make it easier to verify state, and since the xo smoke test was updated to verify state, I included those changes in that commit. I've updated that commit slightly to make the change from `_base_url` to `url` clearer (it's convenient to be able to tell what url a client is pointed at). ",2017-05-30 01:13:14,2017-05-30 01:13:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/506,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/303422461,https://github.com/hyperledger/sawtooth-core/pull/506#issuecomment-303422461,aludvik,Fixed build issues and added a build tools commit. You can now verify it builds with `build_go`.,2017-05-23 14:49:26,2017-05-23 14:49:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/504,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/303501749,https://github.com/hyperledger/sawtooth-core/pull/504#issuecomment-303501749,delventhalz,"Adam, the `-` indicates that the sort _for that key_ should be in descending order. So if you did:
```
sort=-transaction_ids.length,signer_pubkey
```
It would organize first by whichever batch had the most transactions _(biggest to smallest, descending)_. For any batches that had the same number of transactions, it would sort those by their pubkeys in alphabetical order _(a to z, ascending)_.

I will clarify this in the documentation.",2017-05-23 19:10:32,2017-05-23 19:11:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/498,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302900132,https://github.com/hyperledger/sawtooth-core/pull/498#issuecomment-302900132,aludvik,I decided this is a bad idea and we should instead get stable packages published to appropriate package management tools for each language.,2017-05-20 21:35:48,2017-05-20 21:35:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/495,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302889473,https://github.com/hyperledger/sawtooth-core/pull/495#issuecomment-302889473,peterschwarz,Updated the transaction family spec with the changes.,2017-05-20 18:11:41,2017-05-20 18:11:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/494,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302987402,https://github.com/hyperledger/sawtooth-core/pull/494#issuecomment-302987402,nick-drozd,"@aludvik My hope was to get all the formal requirements into the TP test and then convert that into a document. The basic guiding principle is ""do whatever the existing Python implementation does"".",2017-05-22 02:54:31,2017-05-22 02:54:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/494,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302987931,https://github.com/hyperledger/sawtooth-core/pull/494#issuecomment-302987931,nick-drozd,"Clearly there are some problems with the structure of this PR's commits, so I'm going to reorganize it.",2017-05-22 02:59:29,2017-05-22 02:59:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/493,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302826658,https://github.com/hyperledger/sawtooth-core/pull/493#issuecomment-302826658,ghost,"On this Vagrant instance I am getting the bogus lint errors, the python path is correctly set to '/project/sawtooth-core/sdk/python:/project/sawtooth-core/sdk/examples/intkey_python:/project/sawtooth-core/sdk/examples/supplychain_python:/project/sawtooth-core/sdk/examples/xo_python:/project/sawtooth-core/signing' in run_lint prior to the lint invocation.

************* Module processor.handler
E: 24, 0: Unable to import 'sawtooth_supplychain.addressing' (import-error)
************* Module processor.main
E: 25, 0: Unable to import 'sawtooth_supplychain.processor.handler' (import-error)
************* Module supplychain_client
E: 29, 0: Unable to import 'sawtooth_supplychain.supplychain_exceptions' (import-error)
E: 31, 0: Unable to import 'sawtooth_supplychain.addressing' (import-error)
E: 32, 0: Unable to import 'sawtooth_supplychain.time_utils' (import-error)
************* Module supplychain_message_factory
E: 19, 0: Unable to import 'sawtooth_supplychain.processor.handler' (import-error)
************* Module test_tp_supplychain
E: 25, 0: Unable to import 'sawtooth_supplychain.supplychain_message_factory' (import-error)
E: 27, 0: Unable to import 'sawtooth_supplychain.addressing' (import-error)
",2017-05-19 22:38:05,2017-05-19 22:38:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/493,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302981053,https://github.com/hyperledger/sawtooth-core/pull/493#issuecomment-302981053,vaporos,"If this is less of an SDK example, it could also go in families/supplychain/.  Other families there are families/config/ (just moved) and families/burrow_evm/ (in the feature branch currently).
",2017-05-22 01:56:29,2017-05-22 01:56:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/493,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/303114545,https://github.com/hyperledger/sawtooth-core/pull/493#issuecomment-303114545,ghost,"I am coordinating the Supplychain TP spec with Sean and simon, the original authors. Will add a PR for it when it is publically consumable. I am not sure it is worth holding this PR untill it arrives. ",2017-05-22 14:22:22,2017-05-22 14:22:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/493,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/303197891,https://github.com/hyperledger/sawtooth-core/pull/493#issuecomment-303197891,ghost,@peterschwarz updated location as per the referenced PR. ,2017-05-22 19:32:56,2017-05-22 19:32:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/492,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302576094,https://github.com/hyperledger/sawtooth-core/pull/492#issuecomment-302576094,ineffectualproperty,third time is the charm @dcmiddle ,2017-05-19 00:24:22,2017-05-19 00:24:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/491,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302770401,https://github.com/hyperledger/sawtooth-core/pull/491#issuecomment-302770401,ojalatodd,@delventhalz I improved the commit message ,2017-05-19 17:58:07,2017-05-19 17:58:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/488,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302561499,https://github.com/hyperledger/sawtooth-core/pull/488#issuecomment-302561499,dcmiddle,:( need the sign off @ineffectualproperty .  Can you amend that last commit? Don't add a new commit.,2017-05-18 22:43:06,2017-05-18 22:43:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/487,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302483854,https://github.com/hyperledger/sawtooth-core/pull/487#issuecomment-302483854,ineffectualproperty,reopening PR to address @dcmiddle changes,2017-05-18 17:29:29,2017-05-18 17:29:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/482,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302940433,https://github.com/hyperledger/sawtooth-core/pull/482#issuecomment-302940433,peterschwarz,Rebased,2017-05-21 14:33:00,2017-05-21 14:33:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/480,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302238047,https://github.com/hyperledger/sawtooth-core/pull/480#issuecomment-302238047,agunde406,I need to update this PR to include command line option,2017-05-17 21:33:36,2017-05-17 21:33:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/479,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302742159,https://github.com/hyperledger/sawtooth-core/pull/479#issuecomment-302742159,aludvik,Updated the interface based on suggestions from @delventhalz ,2017-05-19 15:57:46,2017-05-19 15:57:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/477,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301923403,https://github.com/hyperledger/sawtooth-core/pull/477#issuecomment-301923403,rbuysse,"I renamed this to sawtooth-default.yaml in a PR just before yours. Can you update the references?

https://github.com/hyperledger/sawtooth-core/pull/476",2017-05-16 21:38:04,2017-05-16 21:38:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/477,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301928868,https://github.com/hyperledger/sawtooth-core/pull/477#issuecomment-301928868,ojalatodd,"@rbuysse Windows seems to use a different build file or process, i.e., make.bat instead of Makefile. I'd like to get your help with creating a make.bat that does what the Makefile now does, by copying the docker compose yaml file to $(BUILDDIR)/html/app_developers_guide/sawtooth-demo.yaml",2017-05-16 22:02:54,2017-05-16 22:02:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/477,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302203983,https://github.com/hyperledger/sawtooth-core/pull/477#issuecomment-302203983,ojalatodd,This PR might conflict with #476 . Rebase and resolve conflicts before merging (note to self),2017-05-17 19:25:37,2017-05-17 19:25:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/472,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301907203,https://github.com/hyperledger/sawtooth-core/pull/472#issuecomment-301907203,mfford,Closed to resolve duplicate commits,2017-05-16 20:34:09,2017-05-16 20:34:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/471,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301909389,https://github.com/hyperledger/sawtooth-core/pull/471#issuecomment-301909389,delventhalz,Updated architecture document to remove all planned features which are not implemented (i.e. stats endpoints and some query parameters).,2017-05-16 20:42:27,2017-05-16 20:42:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/471,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302124563,https://github.com/hyperledger/sawtooth-core/pull/471#issuecomment-302124563,delventhalz,Fixed the typo.,2017-05-17 15:20:14,2017-05-17 15:20:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/470,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301853978,https://github.com/hyperledger/sawtooth-core/pull/470#issuecomment-301853978,aludvik,"Testing:
1. Re-provision vagrant or just run `tools/plugins/install_go_tools.sh` again.
2. Run `build_go`
3. Startup a validator and rest_api
4. Startup the Burrow EVM TP with `tp_burrow_evm -vv`
5. Run the client test script `python3 families/burrow_evm/src/sawtooth_burrow_evm/client/client.py load.yaml`",2017-05-16 17:23:40,2017-05-16 21:12:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/470,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302726958,https://github.com/hyperledger/sawtooth-core/pull/470#issuecomment-302726958,aludvik,"FYI, I am reworking a lot of this after finishing the Spec.",2017-05-19 15:01:48,2017-05-19 15:01:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/468,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301809797,https://github.com/hyperledger/sawtooth-core/pull/468#issuecomment-301809797,ojalatodd,"@rbuysse ?
",2017-05-16 14:59:19,2017-05-16 14:59:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/467,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301632833,https://github.com/hyperledger/sawtooth-core/pull/467#issuecomment-301632833,ghost,"@boydjohnson  can you test this in accordance with the direction you left here: https://jira.hyperledger.org/browse/STL-158

I applied the patch and ran the test but the description was unclear what I was looking for either as a positive or negative result. ",2017-05-15 23:27:27,2017-05-15 23:27:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/467,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301634183,https://github.com/hyperledger/sawtooth-core/pull/467#issuecomment-301634183,boydjohnson,"Yeah, I'll test it, but I won't have time until tomorrow morning.",2017-05-15 23:37:11,2017-05-15 23:37:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/467,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301843416,https://github.com/hyperledger/sawtooth-core/pull/467#issuecomment-301843416,nick-drozd,"No tests need to be modified to see the difference. Here's what happens when an invalid batch is sent in `intkey-python-smoke` before the change:

```
integration_test_1  | INFO:test_intkey_smoke:Posting batch
rest_api_1          | [13:21:23.730 INFO     rest_api] Request  35aeb6: ""POST /batches"" from 172.18.0.6
rest_api_1          | [13:21:23.746 INFO     rest_api] Response 35aeb6: 202 status, 181B size, in 0.016s
tp_intkey_python_1  | [13:21:23.750 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.760 DEBUG    handler] Incrementing ""cow"" by 1
tp_intkey_python_1  | [13:21:23.760 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""cow"" not in state
tp_intkey_python_1  | [13:21:23.765 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.770 DEBUG    handler] Incrementing ""pig"" by 2
tp_intkey_python_1  | [13:21:23.773 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""pig"" not in state
tp_intkey_python_1  | [13:21:23.791 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.799 DEBUG    handler] Decrementing ""sheep"" by 3
tp_intkey_python_1  | [13:21:23.800 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""sheep"" not in state
tp_intkey_python_1  | [13:21:23.807 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.813 DEBUG    handler] Incrementing ""goat"" by 5
tp_intkey_python_1  | [13:21:23.813 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""goat"" not in state
tp_intkey_python_1  | [13:21:23.824 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.842 DEBUG    handler] Decrementing ""horse"" by 8
tp_intkey_python_1  | [13:21:23.843 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""horse"" not in state
tp_intkey_python_1  | [13:21:23.949 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.959 DEBUG    handler] Incrementing ""cow"" by 1
tp_intkey_python_1  | [13:21:23.959 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""cow"" not in state
tp_intkey_python_1  | [13:21:23.964 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.968 DEBUG    handler] Incrementing ""pig"" by 2
tp_intkey_python_1  | [13:21:23.968 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""pig"" not in state
tp_intkey_python_1  | [13:21:23.972 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.976 DEBUG    handler] Decrementing ""sheep"" by 3
tp_intkey_python_1  | [13:21:23.976 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""sheep"" not in state
tp_intkey_python_1  | [13:21:23.981 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.984 DEBUG    handler] Incrementing ""goat"" by 5
tp_intkey_python_1  | [13:21:23.984 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""goat"" not in state
tp_intkey_python_1  | [13:21:23.994 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:23.998 DEBUG    handler] Decrementing ""horse"" by 8
tp_intkey_python_1  | [13:21:23.999 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""horse"" not in state
tp_intkey_python_1  | [13:21:24.106 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.110 DEBUG    handler] Incrementing ""cow"" by 1
tp_intkey_python_1  | [13:21:24.111 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""cow"" not in state
tp_intkey_python_1  | [13:21:24.116 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.120 DEBUG    handler] Incrementing ""pig"" by 2
tp_intkey_python_1  | [13:21:24.120 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""pig"" not in state
tp_intkey_python_1  | [13:21:24.125 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.129 DEBUG    handler] Decrementing ""sheep"" by 3
tp_intkey_python_1  | [13:21:24.129 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""sheep"" not in state
tp_intkey_python_1  | [13:21:24.134 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.138 DEBUG    handler] Incrementing ""goat"" by 5
tp_intkey_python_1  | [13:21:24.138 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""goat"" not in state
tp_intkey_python_1  | [13:21:24.143 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.150 DEBUG    handler] Decrementing ""horse"" by 8
tp_intkey_python_1  | [13:21:24.151 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""horse"" not in state
tp_intkey_python_1  | [13:21:24.260 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.264 DEBUG    handler] Incrementing ""cow"" by 1
tp_intkey_python_1  | [13:21:24.264 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""cow"" not in state
tp_intkey_python_1  | [13:21:24.269 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.273 DEBUG    handler] Incrementing ""pig"" by 2
tp_intkey_python_1  | [13:21:24.273 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""pig"" not in state
tp_intkey_python_1  | [13:21:24.278 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.281 DEBUG    handler] Decrementing ""sheep"" by 3
tp_intkey_python_1  | [13:21:24.282 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""sheep"" not in state
tp_intkey_python_1  | [13:21:24.286 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.290 DEBUG    handler] Incrementing ""goat"" by 5
tp_intkey_python_1  | [13:21:24.290 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""goat"" not in state
tp_intkey_python_1  | [13:21:24.295 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.303 DEBUG    handler] Decrementing ""horse"" by 8
tp_intkey_python_1  | [13:21:24.303 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""horse"" not in state
tp_intkey_python_1  | [13:21:24.411 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.415 DEBUG    handler] Incrementing ""cow"" by 1
tp_intkey_python_1  | [13:21:24.416 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""cow"" not in state
tp_intkey_python_1  | [13:21:24.421 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.426 DEBUG    handler] Incrementing ""pig"" by 2
tp_intkey_python_1  | [13:21:24.426 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""pig"" not in state
tp_intkey_python_1  | [13:21:24.431 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.435 DEBUG    handler] Decrementing ""sheep"" by 3
tp_intkey_python_1  | [13:21:24.435 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""sheep"" not in state
tp_intkey_python_1  | [13:21:24.442 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.448 DEBUG    handler] Incrementing ""goat"" by 5
tp_intkey_python_1  | [13:21:24.448 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""goat"" not in state
tp_intkey_python_1  | [13:21:24.455 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.463 DEBUG    handler] Decrementing ""horse"" by 8
tp_intkey_python_1  | [13:21:24.463 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""horse"" not in state
tp_intkey_python_1  | [13:21:24.571 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.575 DEBUG    handler] Incrementing ""cow"" by 1
tp_intkey_python_1  | [13:21:24.575 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""cow"" not in state
tp_intkey_python_1  | [13:21:24.580 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.584 DEBUG    handler] Incrementing ""pig"" by 2
tp_intkey_python_1  | [13:21:24.585 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""pig"" not in state
tp_intkey_python_1  | [13:21:24.589 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.593 DEBUG    handler] Decrementing ""sheep"" by 3
tp_intkey_python_1  | [13:21:24.594 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""sheep"" not in state
tp_intkey_python_1  | [13:21:24.598 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.602 DEBUG    handler] Incrementing ""goat"" by 5
tp_intkey_python_1  | [13:21:24.602 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""goat"" not in state
tp_intkey_python_1  | [13:21:24.607 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.614 DEBUG    handler] Decrementing ""horse"" by 8
tp_intkey_python_1  | [13:21:24.615 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""horse"" not in state
tp_intkey_python_1  | [13:21:24.723 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.728 DEBUG    handler] Incrementing ""cow"" by 1
tp_intkey_python_1  | [13:21:24.728 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""cow"" not in state
tp_intkey_python_1  | [13:21:24.733 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.737 DEBUG    handler] Incrementing ""pig"" by 2
tp_intkey_python_1  | [13:21:24.737 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""pig"" not in state
tp_intkey_python_1  | [13:21:24.741 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.745 DEBUG    handler] Decrementing ""sheep"" by 3
tp_intkey_python_1  | [13:21:24.745 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""sheep"" not in state
rest_api_1          | [13:21:24.750 INFO     rest_api] Request  35d694: ""GET /state"" from 172.18.0.6
tp_intkey_python_1  | [13:21:24.751 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.756 DEBUG    handler] Incrementing ""goat"" by 5
tp_intkey_python_1  | [13:21:24.756 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""goat"" not in state
tp_intkey_python_1  | [13:21:24.768 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:21:24.774 DEBUG    handler] Decrementing ""horse"" by 8
tp_intkey_python_1  | [13:21:24.774 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""horse"" not in state
rest_api_1          | [13:21:24.806 INFO     rest_api] Response 35d694: 200 status, 1069B size, in 0.055s
integration_test_1  | INFO:test_intkey_smoke:Current state: {'wren': 442, 'thrush': 327, 'jay': 535, 'lark': 416, 'finch': 643}
```

Here's what happens with this PR:

```
integration_test_1  | INFO:test_intkey_smoke:Posting batch
rest_api_1          | [13:26:11.732 INFO     rest_api] Request  61a0cf: ""POST /batches"" from 172.18.0.6
rest_api_1          | [13:26:11.746 INFO     rest_api] Response 61a0cf: 202 status, 181B size, in 0.014s
tp_intkey_python_1  | [13:26:11.750 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:26:11.756 DEBUG    handler] Incrementing ""cow"" by 1
tp_intkey_python_1  | [13:26:11.758 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""cow"" not in state
tp_intkey_python_1  | [13:26:11.776 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:26:11.789 DEBUG    handler] Incrementing ""pig"" by 2
tp_intkey_python_1  | [13:26:11.790 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""pig"" not in state
tp_intkey_python_1  | [13:26:11.795 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:26:11.805 DEBUG    handler] Decrementing ""sheep"" by 3
tp_intkey_python_1  | [13:26:11.806 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""sheep"" not in state
tp_intkey_python_1  | [13:26:11.814 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:26:11.823 DEBUG    handler] Incrementing ""goat"" by 5
tp_intkey_python_1  | [13:26:11.825 WARNING  core] Invalid Transaction Verb is ""inc"" but name ""goat"" not in state
tp_intkey_python_1  | [13:26:11.830 DEBUG    core] received message of type: TP_PROCESS_REQUEST
tp_intkey_python_1  | [13:26:11.854 DEBUG    handler] Decrementing ""horse"" by 8
tp_intkey_python_1  | [13:26:11.857 WARNING  core] Invalid Transaction Verb is ""dec"" but name ""horse"" not in state
rest_api_1          | [13:26:12.753 INFO     rest_api] Request  61c8ae: ""GET /state"" from 172.18.0.6
rest_api_1          | [13:26:12.774 INFO     rest_api] Response 61c8ae: 200 status, 1069B size, in 0.021s
integration_test_1  | INFO:test_intkey_smoke:Current state: {'wren': 442, 'jay': 535, 'lark': 416, 'finch': 643, 'thrush': 327}
```

So it seems to work.

Some extra regression test cases should probably be added to the publisher unit tests though.",2017-05-16 16:46:41,2017-05-16 16:46:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/458,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301810453,https://github.com/hyperledger/sawtooth-core/pull/458#issuecomment-301810453,jjason,Rebase before merge,2017-05-16 15:01:20,2017-05-16 15:01:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/457,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301598636,https://github.com/hyperledger/sawtooth-core/pull/457#issuecomment-301598636,boydjohnson,"I am going to make some changes so that I don't use a utils.py file, but leave the batch/txn creation functions in the tests.py file and make a yaml_scheduler_tester.py file for the SchedulerTester.",2017-05-15 20:42:19,2017-05-15 20:42:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/455,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301620696,https://github.com/hyperledger/sawtooth-core/pull/455#issuecomment-301620696,ojalatodd,"@peterschwarz To answer your question on the versions of the languages supported: Yes, the ""install guides"" will have this. So far, this ""install guide"" exists only for Python: 
app_developers_guide/python_sdk_install.html
This article explains the versions of Python supported. ",2017-05-15 22:16:15,2017-05-15 22:16:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/451,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301213298,https://github.com/hyperledger/sawtooth-core/pull/451#issuecomment-301213298,boydjohnson,"I suggest that the test file should have the parallel scheduler and serial scheduler test classes right after one another, instead of having the predecessor tree tests in between.

This commit, aa93605a77e9466274edc789566761b7bb5edb34, from my yaml-based scheduler PR, refactors the txn and batch creation utilities. Since this PR refactors those same utilities, we can save ourselves some work if we refactor them in one way to decrease merge conflicts in the future.

I would suggest again that we are using the same test code to test the parallel scheduler and serial scheduler where we have determined that each scheduler implementation needs to pass those tests. That could be done with a joint test class that all scheduler implementations must pass with non-test methods that are the actual test code, that take a scheduler instance, and then test methods that create the scheduler instance and the pass it in to the non-test method with the current code. That way, when looking at an error, it would be possible to tell just from the test framework failure message which scheduler implementation failed, whether the test was one that was specific to the implementation, or whether it was general to all scheduler implementations.
",2017-05-13 00:30:34,2017-05-13 00:30:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/451,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302191223,https://github.com/hyperledger/sawtooth-core/pull/451#issuecomment-302191223,agunde406,Updated to incorporate @boydjohnson suggestions,2017-05-17 18:42:18,2017-05-17 18:42:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/447,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300903055,https://github.com/hyperledger/sawtooth-core/pull/447#issuecomment-300903055,ghost,"@vaporos The issue is the contents of the BlockStore. Queue updates to chain head does not solve the issue that the data structures are changed under the BlockPublisher. The BlockPublisher and encapsulated algorithms(consensus) expect the BlockStore to match the chain_head it is operating on.  The update to the BlockStore and the notification of the BlockPublisher need to be atomic. 


",2017-05-11 20:09:40,2017-05-11 20:09:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/447,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301614246,https://github.com/hyperledger/sawtooth-core/pull/447#issuecomment-301614246,peterschwarz,It sounds like there's an intertwining of those members of Journal where there's a single concern (updating the chain) that's getting spread across to different modules. Is there way that there is single entity handling this atomic operation.  We have a lot of parameters that also start to need to be passed to everything - that seems like a code smell that says we might be missing an object somewhere.,2017-05-15 21:45:56,2017-05-15 21:45:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/447,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301639528,https://github.com/hyperledger/sawtooth-core/pull/447#issuecomment-301639528,vaporos,"It is logical that BlockStore matches chain head for the purposes of storage, as if we restart the validator, there is no point in having retained anything else.  However, the block publisher (or even a chain controller implementation which processes multiple potential chains heads in parallel) could reference in-memory (or cached) blocks which are separate from the chain head.  Ideally, the in-memory (or cached) blocks could be copy-on-write to facilitate read concurrency except when blocks are being purged (maybe due to lack of references to them).  This would avoid the need for the global lock, as multiple chains could co-exist at the same time with one of them being pointed to by chain head and stored in BlockStore.",2017-05-16 00:15:27,2017-05-16 00:15:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/447,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302170151,https://github.com/hyperledger/sawtooth-core/pull/447#issuecomment-302170151,ghost,"@vaporos @peterschwarz
Do note this PR is essentially moving a acquisition of a lock up 2 lines of code to prevent a race condition on a data structure. It is not a new functionality or change in the behavior of the interaction of the journal components.

ChainController is responsible for determining the current chain, which is specified by the chain-head. As part of this responsibility the ChainController is responsible for maintaining and updating the BlockStore.

The BlockStore is an expensive disk backed data structure that maintains a number of indexes in addition to the blocks in the store. Updates to it are atomic but iterators and other cached states are not aware of this.

The BlockPublisher role is to build a single block extending the current chain head. It is important to note that block publishing is a stateful activity that happens in the context of a current chain head, you cannot build or publish block with out that context. The BlockPublisher uses the BlockStore to determine if Batches or Transactions are already committed to the chain or not. Consensus algorithms have access to the BlockStore, for instance PoET uses this for determining the local mean as well as other tests.

Any work the BlockPublisher does not extending the current chain head works against consensus in the system as it will create forks and in particular forks that this validator does not beleive in, since it has already committed to a new chain head.

It is important that the BlockStore remain consistant for the BlockPublisher and that the switch be made from the building on old chain head to building on the new chain head as quickly as possible.

So this PR expresses that by essentially moving the claiming of the lock on the BlockPublisher actvities up 2 lines to prevent the possibility of the BlockPublisher accessing the BlockStore during the chain-head update.

Now I could accomplish the same goal with the following change, which uses exactly the same locks just less efficiently. If that is less offensive I can update the PR.
```python
self._notify_on_chain_updated(None) 
self._chain_head = new_block
# update the the block store to have the new chain
self._block_store.update_chain(result[""new_chain""],
	result[""cur_chain""])
LOGGER.info(""Chain head updated to: %s"", self._chain_head)
# tell the BlockPublisher else the chain is updated
self._notify_on_chain_updated(
	self._chain_head,
	result[""committed_batches""],
	result[""uncommitted_batches""])

```",2017-05-17 17:41:25,2017-05-17 17:41:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/447,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/302588351,https://github.com/hyperledger/sawtooth-core/pull/447#issuecomment-302588351,vaporos,"By 'alternate fix', I meant one avoiding a shared lock.",2017-05-19 01:59:20,2017-05-19 01:59:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/446,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300922422,https://github.com/hyperledger/sawtooth-core/pull/446#issuecomment-300922422,jjason,Rebasing before merge,2017-05-11 21:29:52,2017-05-11 21:29:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/442,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300834477,https://github.com/hyperledger/sawtooth-core/pull/442#issuecomment-300834477,jjason,Please fix lint errors blocking successful build,2017-05-11 15:55:44,2017-05-11 15:55:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/442,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301630332,https://github.com/hyperledger/sawtooth-core/pull/442#issuecomment-301630332,nconde,"The changes in this PR are included in PR 466
https://github.com/hyperledger/sawtooth-core/pull/466 ",2017-05-15 23:10:21,2017-05-15 23:10:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/438,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300579393,https://github.com/hyperledger/sawtooth-core/pull/438#issuecomment-300579393,peterschwarz,"I disagree with that, @boydjohnson. First, commenting out the test leaves no record of the test in the build output.  Using `unittest.skip` gives us a line item for every skipped test. This is both a reminder and a public record of the test.  Commented tests get forgotten.

Secondly, skipping the test will still give some test failure feedback if the code changes, though not all, since the test methods won't be run, but it imports change, etc. This will keep the tests from getting to out of date.",2017-05-10 18:53:59,2017-05-10 18:53:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/437,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300623796,https://github.com/hyperledger/sawtooth-core/pull/437#issuecomment-300623796,peterschwarz,Rebased on master for the shutdown test ignores,2017-05-10 21:52:59,2017-05-10 21:52:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/437,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301488961,https://github.com/hyperledger/sawtooth-core/pull/437#issuecomment-301488961,peterschwarz,Rebased before merging,2017-05-15 14:17:51,2017-05-15 14:17:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/437,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301591536,https://github.com/hyperledger/sawtooth-core/pull/437#issuecomment-301591536,peterschwarz,Added a new change that may require more review.,2017-05-15 20:15:35,2017-05-15 20:15:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/436,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300526199,https://github.com/hyperledger/sawtooth-core/pull/436#issuecomment-300526199,jjason,Rebasing before merge,2017-05-10 15:49:16,2017-05-10 15:49:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/435,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300560868,https://github.com/hyperledger/sawtooth-core/pull/435#issuecomment-300560868,agunde406,Tested locally,2017-05-10 17:47:28,2017-05-10 17:48:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/435,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300616265,https://github.com/hyperledger/sawtooth-core/pull/435#issuecomment-300616265,peterschwarz,We should consider having the rest_api container instances in the various docker-compose files match the logging level of the other components.,2017-05-10 21:21:33,2017-05-10 21:21:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/435,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300887421,https://github.com/hyperledger/sawtooth-core/pull/435#issuecomment-300887421,delventhalz,Added commit to up the logging level of all rest_api docker components,2017-05-11 19:07:06,2017-05-11 19:07:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/434,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300517951,https://github.com/hyperledger/sawtooth-core/pull/434#issuecomment-300517951,boydjohnson,"Since you fixed another bug (the rest api was listening on the default localhost instead of the container's ip address), I think the client container should depend on the rest api instead of the validator. Our cli tools for submitting batches used to all send them directly to the validator, but now all use the rest api, so starting up as it is currently wouldn't always allow someone to do 'intkey load --url rest_api' in the client container.",2017-05-10 15:24:15,2017-05-10 15:24:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/434,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300523388,https://github.com/hyperledger/sawtooth-core/pull/434#issuecomment-300523388,rbuysse,@boydjohnson I made that change in a fixup commit. Good catch!,2017-05-10 15:40:53,2017-05-10 15:40:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/431,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300252635,https://github.com/hyperledger/sawtooth-core/pull/431#issuecomment-300252635,ojalatodd,This PR is a combined PR that replaces #403 and #422,2017-05-09 18:05:41,2017-05-09 18:05:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/431,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300260684,https://github.com/hyperledger/sawtooth-core/pull/431#issuecomment-300260684,ojalatodd,"IMPORTANT NOTE to all reviewers. This PR combines two other PR's that you already reviewed, so this PR shouldn't need a lot of changing (see note above). This combines #403 and #422. ",2017-05-09 18:32:54,2017-05-09 18:32:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/431,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300297547,https://github.com/hyperledger/sawtooth-core/pull/431#issuecomment-300297547,peterschwarz,Please close #403 and #422 if they are superseded by this PR,2017-05-09 20:51:41,2017-05-09 20:52:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/427,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299959440,https://github.com/hyperledger/sawtooth-core/pull/427#issuecomment-299959440,rbuysse,Coverage artifacts are viewable at https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-427/lastSuccessfulBuild/artifact/coverage/html/index.html,2017-05-08 19:00:14,2017-05-08 19:00:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/425,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299874030,https://github.com/hyperledger/sawtooth-core/pull/425#issuecomment-299874030,peterschwarz,"You need to have a signed-off commit.  If you could please do a `git commit -s --amend` and repush the branch, it should be good to go.",2017-05-08 13:57:11,2017-05-08 13:57:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/425,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299928260,https://github.com/hyperledger/sawtooth-core/pull/425#issuecomment-299928260,aludvik,I think we need to remove that merge commit and instead do a rebase.,2017-05-08 17:08:19,2017-05-08 17:08:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/425,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299964597,https://github.com/hyperledger/sawtooth-core/pull/425#issuecomment-299964597,peterschwarz,Looks like the Portuguese doc should be on a separate branch (though very cool that you're working on it!),2017-05-08 19:21:27,2017-05-08 19:21:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/425,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300304808,https://github.com/hyperledger/sawtooth-core/pull/425#issuecomment-300304808,peterschwarz,Closed in favor of #433,2017-05-09 21:19:30,2017-05-09 21:19:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/422,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299582485,https://github.com/hyperledger/sawtooth-core/pull/422#issuecomment-299582485,ojalatodd,"Note to reviewers: this PR contains commits from a non-merged PR, (#403), since it was branched off that PR. Not sure if there is a way to avoid having this extra commits in here.",2017-05-05 21:41:35,2017-05-05 21:41:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/422,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299917284,https://github.com/hyperledger/sawtooth-core/pull/422#issuecomment-299917284,ojalatodd,@aludvik you are right about the complication -it's branched off another branch I have ready to merge with another PR.,2017-05-08 16:26:26,2017-05-08 16:26:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/422,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299943731,https://github.com/hyperledger/sawtooth-core/pull/422#issuecomment-299943731,ojalatodd,"@aludvik By mistake, the most important file for this PR was not added last Friday: python_sdk_install.rst
I'll have to ask you to re-review. ",2017-05-08 18:04:52,2017-05-08 18:04:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/422,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300252180,https://github.com/hyperledger/sawtooth-core/pull/422#issuecomment-300252180,ojalatodd,This PR is being replaced by PR #431,2017-05-09 18:04:09,2017-05-09 18:04:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/422,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300304293,https://github.com/hyperledger/sawtooth-core/pull/422#issuecomment-300304293,ojalatodd,Closing in favor of #431 ,2017-05-09 21:17:22,2017-05-09 21:17:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/421,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299975986,https://github.com/hyperledger/sawtooth-core/pull/421#issuecomment-299975986,jsmitchell,"@dplumb94 note that you are getting a docs build error on this.

```
! Package inputenc Error: Unicode char − (U+2212)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.6364 ...e range of 0 through 2$^{\text{32}}$ −
                                                   1 (32-bit unsigned int)
? 
! Emergency stop.
 ...                                              
                                                  
l.6364 ...e range of 0 through 2$^{\text{32}}$ −
                                                   1 (32-bit unsigned int)
!  ==> Fatal error occurred, no output PDF file produced!
```

You can test this locally in your vagrant vm by making sure that `sudo tools/plugins/install_latex.sh` has been run and then doing a `make latexpdf` in sawtooth-core/docs/",2017-05-08 20:07:56,2017-05-08 20:08:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/416,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299490441,https://github.com/hyperledger/sawtooth-core/pull/416#issuecomment-299490441,jsmitchell,Tested locally,2017-05-05 15:07:17,2017-05-05 15:07:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/416,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299894077,https://github.com/hyperledger/sawtooth-core/pull/416#issuecomment-299894077,agunde406,"rebasing before merge
",2017-05-08 15:08:32,2017-05-08 15:08:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/415,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299271442,https://github.com/hyperledger/sawtooth-core/pull/415#issuecomment-299271442,benjaminbollen,"Open considertions on my part:
1. how to deal with GOPATH, and dependencies (aim for none / vendored-in / package-management ) ?
2. I put these packages under directory `burrow` with the intent to be able to unfork at later stage more easily;  I intend to make these packages top-level packages in burrow - where they are not already, ie `evm`
3. at it's most basic we now need to make an implementation for `AppSate` that translates the semantics of this interface to context operations in the handler;
see https://github.com/benjaminbollen/sawtooth-core/blob/burrow-evm/families/burrow_evm/src/sawtooth_burrow_evm/burrow/evm/types.go#L46-L58",2017-05-04 18:33:28,2017-05-04 18:33:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/415,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299479736,https://github.com/hyperledger/sawtooth-core/pull/415#issuecomment-299479736,jsmitchell,Is there a good way to bring the vendor/ code in at build time instead of being in the repo?,2017-05-05 14:28:10,2017-05-05 14:28:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/415,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299516080,https://github.com/hyperledger/sawtooth-core/pull/415#issuecomment-299516080,benjaminbollen,I removed the commit with the vendor directory,2017-05-05 16:46:28,2017-05-05 16:46:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/415,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299552307,https://github.com/hyperledger/sawtooth-core/pull/415#issuecomment-299552307,aludvik,@jsmitchell We should consider using glide for go dependency management. Looks like @benjaminbollen's team is already using it and I think it will give us more control than the `go get` command we are currently using. I will research it a little more to verify we can make the swap.,2017-05-05 19:16:08,2017-05-05 19:16:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/415,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300170337,https://github.com/hyperledger/sawtooth-core/pull/415#issuecomment-300170337,benjaminbollen,"updated import path to reflect:

`families/burrow_evm/src/burrow`
`families/burrow_evm/src/burrow/evm`
`families/burrow_evm/src/sawtooth_burrow_evm/handler`",2017-05-09 13:50:03,2017-05-09 13:50:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/414,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300297353,https://github.com/hyperledger/sawtooth-core/pull/414#issuecomment-300297353,jjason,Tested locally,2017-05-09 20:50:53,2017-05-09 20:50:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/414,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300312718,https://github.com/hyperledger/sawtooth-core/pull/414#issuecomment-300312718,nick-drozd,There might be a benefit to running the test on both dynamic and static networks.,2017-05-09 21:52:36,2017-05-09 21:52:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/413,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299024156,https://github.com/hyperledger/sawtooth-core/pull/413#issuecomment-299024156,aludvik,Incorporated @peterschwarz's suggestion,2017-05-03 20:22:27,2017-05-03 20:22:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/413,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299257863,https://github.com/hyperledger/sawtooth-core/pull/413#issuecomment-299257863,agunde406,"Tested locally
",2017-05-04 17:42:01,2017-05-04 17:42:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/412,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299218946,https://github.com/hyperledger/sawtooth-core/pull/412#issuecomment-299218946,ojalatodd,Also will be rewriting per discussion with @aludvik yesterday.,2017-05-04 15:22:50,2017-05-04 15:22:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/412,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299557437,https://github.com/hyperledger/sawtooth-core/pull/412#issuecomment-299557437,ojalatodd,NOTE: this guide will be updated with an addition in the near future to allow user/app-developer to access the validator from the host CLI or host network.  @vaporos ,2017-05-05 19:40:28,2017-05-05 19:40:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/411,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299035862,https://github.com/hyperledger/sawtooth-core/pull/411#issuecomment-299035862,boydjohnson,"@peterschwarz Can you say more about this? The transaction processor has a more complicated shutdown, that includes calling stream.close(), than the rest api.",2017-05-03 21:07:56,2017-05-03 21:07:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/411,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299226985,https://github.com/hyperledger/sawtooth-core/pull/411#issuecomment-299226985,boydjohnson,"@peterschwarz Not sure if this is what you meant, but I updated the xo and intkey python transaction processors to catch the previously hidden errors that are now not being hidden by stream.",2017-05-04 15:49:39,2017-05-04 15:49:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/407,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298739437,https://github.com/hyperledger/sawtooth-core/pull/407#issuecomment-298739437,peterschwarz,It's likely that the validator should also be fixed to send the acknowledgement _before_ adding the TP to the collection of available processors.,2017-05-02 19:41:22,2017-05-02 19:41:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/405,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298676259,https://github.com/hyperledger/sawtooth-core/pull/405#issuecomment-298676259,rbuysse,@boydjohnson Correct. We've got a story to make run_lint compatible with the newer version of pylint so this is just a temporary workaround.,2017-05-02 15:50:07,2017-05-02 15:50:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/405,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298911398,https://github.com/hyperledger/sawtooth-core/pull/405#issuecomment-298911398,aludvik,"re: @boydjohnson's comment, run_lint can be run inside a docker container, so this isn't 100% necessary but if people are still running lint in vagrant, this is a quick fix.",2017-05-03 13:31:51,2017-05-03 13:31:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/405,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298961568,https://github.com/hyperledger/sawtooth-core/pull/405#issuecomment-298961568,rbuysse,"We still have instructions for using the Vagrant dev environment, and I know more than one member of the core-dev team is still using Vagrant.",2017-05-03 16:20:45,2017-05-03 16:20:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/404,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298480823,https://github.com/hyperledger/sawtooth-core/pull/404#issuecomment-298480823,nconde,"This is the same as the previous branch, i was having some issues rebasing with upstream/master after merging the first branch. So i created this new branch. ",2017-05-02 02:15:20,2017-05-02 02:15:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/403,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299558108,https://github.com/hyperledger/sawtooth-core/pull/403#issuecomment-299558108,ojalatodd,"Note to reviewers: This PR creates Python and JavaScript tutorials. The code snippets for JavaScript  are still missing, however. I may back out the JavaScript part if we want to merge it before that code is ready. ",2017-05-05 19:43:28,2017-05-05 19:43:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/403,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300252052,https://github.com/hyperledger/sawtooth-core/pull/403#issuecomment-300252052,ojalatodd,This PR is replaced by PR # 431,2017-05-09 18:03:43,2017-05-09 18:03:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/402,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298647404,https://github.com/hyperledger/sawtooth-core/pull/402#issuecomment-298647404,agunde406,I am  seeing nondeterministic test failures on intkey smoke. Looks like it is about half the time.,2017-05-02 14:12:23,2017-05-02 14:12:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/402,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298663952,https://github.com/hyperledger/sawtooth-core/pull/402#issuecomment-298663952,aludvik,Need to do some more work on this.,2017-05-02 15:08:06,2017-05-02 15:08:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/397,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298340198,https://github.com/hyperledger/sawtooth-core/pull/397#issuecomment-298340198,aludvik,Cleaned up comment-docs on Connection.go and fixed handler typo.,2017-05-01 14:13:19,2017-05-01 14:13:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/397,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298370470,https://github.com/hyperledger/sawtooth-core/pull/397#issuecomment-298370470,aludvik,"Set default number of threads equal to GOMAXPROCS, which defaults to the number of logical CPUs available.

Handled receiving messages out of order.",2017-05-01 16:42:43,2017-05-01 16:42:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/395,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298257845,https://github.com/hyperledger/sawtooth-core/pull/395#issuecomment-298257845,jjason,Tested locally,2017-04-30 21:18:26,2017-04-30 21:18:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/394,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298409893,https://github.com/hyperledger/sawtooth-core/pull/394#issuecomment-298409893,vaporos,https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-394/3/artifact/docs/build/html/cli.html,2017-05-01 19:28:22,2017-05-01 19:28:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/392,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297889069,https://github.com/hyperledger/sawtooth-core/pull/392#issuecomment-297889069,rbuysse,Output of new versioning scheme can be see at https://build.sawtooth.me/view/All/job/Sawtooth-Hyperledger/job/sawtooth-core/view/Pull%20Requests/job/PR-392/lastSuccessfulBuild/artifact/build/debs/,2017-04-28 02:16:11,2017-04-28 02:16:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/390,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/298257832,https://github.com/hyperledger/sawtooth-core/pull/390#issuecomment-298257832,jjason,Forgot to add - tested locally,2017-04-30 21:18:08,2017-04-30 21:18:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/385,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297726345,https://github.com/hyperledger/sawtooth-core/pull/385#issuecomment-297726345,agunde406,Updated Network doc to be called Validator Network. Also removed Design section and moved all sub sections up a level. ,2017-04-27 14:16:21,2017-04-27 14:16:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/385,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297757349,https://github.com/hyperledger/sawtooth-core/pull/385#issuecomment-297757349,ojalatodd,"File: related_components.pdf 
Has word 'tcp' in lowercase. TCP seems to be mainly in all uppercase. If it would be a lot of work to change, maybe OK as is. ",2017-04-27 15:56:13,2017-04-27 15:56:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/383,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297419817,https://github.com/hyperledger/sawtooth-core/pull/383#issuecomment-297419817,aludvik,"After this is merged we probably want to blow away the repo at https://repo.sawtooth.me/ if nothing else is using it. Probably wait till after the hackathon though, so people there don't have issues.",2017-04-26 14:07:56,2017-04-26 14:07:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/381,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297144913,https://github.com/hyperledger/sawtooth-core/pull/381#issuecomment-297144913,delventhalz,"The source code here is divided up to allow for example code in new languages to easily be plugged in. This unfortunately means it is not great to read before being built.

Here is a link to the built html:
https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-381/2/artifact/docs/build/html/app_developers_guide/txn_submit_tutorial/python.html

(Note that the language select will not work in this Jenkins build, because it relies on the `script` tag, which Jenkins blocks. It will work if built locally.)",2017-04-25 19:50:38,2017-04-25 20:25:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/379,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297159209,https://github.com/hyperledger/sawtooth-core/pull/379#issuecomment-297159209,aludvik,"1. Added ""For example"" as needed
2. Added Go linting to pipeline
3. Made logging more like log4j and changed cases
4. Removed numbering/enthusiasm from comments
5. Changed/added a couple logging statements
6. Added copyright headers",2017-04-25 20:44:27,2017-04-25 20:44:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/379,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297534520,https://github.com/hyperledger/sawtooth-core/pull/379#issuecomment-297534520,aludvik,Addressed Todd's comments.,2017-04-26 20:40:23,2017-04-26 20:40:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/377,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297072976,https://github.com/hyperledger/sawtooth-core/pull/377#issuecomment-297072976,vaporos,It would be preferable to remove the [STL-24] from the first line of the commit message.,2017-04-25 15:43:37,2017-04-25 15:43:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/376,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296844902,https://github.com/hyperledger/sawtooth-core/pull/376#issuecomment-296844902,peterschwarz,"Note, this includes a very brief section on the Genesis block creation, the full section of which will be part of a future PR.",2017-04-24 22:57:11,2017-04-25 15:27:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/376,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297071626,https://github.com/hyperledger/sawtooth-core/pull/376#issuecomment-297071626,vaporos,"Is the PNG file necessary?  When I tested it, it seemed like SVG for html output and PDF for PDF was sufficient.",2017-04-25 15:39:25,2017-04-25 15:39:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/376,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297072533,https://github.com/hyperledger/sawtooth-core/pull/376#issuecomment-297072533,peterschwarz,Removed,2017-04-25 15:42:08,2017-04-25 15:42:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/376,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297132541,https://github.com/hyperledger/sawtooth-core/pull/376#issuecomment-297132541,peterschwarz,"Updated to include the complete ""Genesis Operation"" section. ",2017-04-25 19:02:40,2017-04-25 19:02:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/374,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297149030,https://github.com/hyperledger/sawtooth-core/pull/374#issuecomment-297149030,jjason,Addressed @ojalatodd comments,2017-04-25 20:05:43,2017-04-25 20:05:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/374,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297521079,https://github.com/hyperledger/sawtooth-core/pull/374#issuecomment-297521079,jjason,Rebase before merge,2017-04-26 19:48:10,2017-04-26 19:48:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/370,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296760634,https://github.com/hyperledger/sawtooth-core/pull/370#issuecomment-296760634,jjason,Rebased on master,2017-04-24 17:32:11,2017-04-24 17:32:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/370,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297092055,https://github.com/hyperledger/sawtooth-core/pull/370#issuecomment-297092055,jsmitchell,Tested locally,2017-04-25 16:46:57,2017-04-25 16:46:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/370,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/297147944,https://github.com/hyperledger/sawtooth-core/pull/370#issuecomment-297147944,jjason,Rebase before merge,2017-04-25 20:01:51,2017-04-25 20:01:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/369,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296702894,https://github.com/hyperledger/sawtooth-core/pull/369#issuecomment-296702894,ojalatodd,"Notes:
I had intended to make the documentation update a separate commit, but mistakenly squashed it together. 

Second note: battleship and XO still use and create their own .addr files. Not sure if Battleship is currently even functional, but didn't want to touch code unnecessarily.  The creation of .addr files from the public key by the games seemed like something that didn't need to be changed. ",2017-04-24 15:19:04,2017-04-24 15:19:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/368,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296696425,https://github.com/hyperledger/sawtooth-core/pull/368#issuecomment-296696425,agunde406,Tested Locally,2017-04-24 15:01:31,2017-04-24 15:01:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/366,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296685070,https://github.com/hyperledger/sawtooth-core/pull/366#issuecomment-296685070,agunde406,Tested locally,2017-04-24 14:26:13,2017-04-24 14:26:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/366,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296731728,https://github.com/hyperledger/sawtooth-core/pull/366#issuecomment-296731728,jjason,Rebasing before merge,2017-04-24 16:32:19,2017-04-24 16:32:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/365,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296289187,https://github.com/hyperledger/sawtooth-core/pull/365#issuecomment-296289187,peterschwarz,Approved - but with the requirement that we have a future story that removes Yarn.,2017-04-21 19:44:19,2017-04-21 19:44:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/362,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296008822,https://github.com/hyperledger/sawtooth-core/pull/362#issuecomment-296008822,delventhalz,"Removing yarn has turned into a huge rabbit hole, as it seems to have been papering over and/or solving a number of dependency issues. I am closing this PR and opening a JIRA task for removing yarn. I'll push up a separate PR with fixed lock files.",2017-04-21 01:45:45,2017-04-21 01:45:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/361,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296759598,https://github.com/hyperledger/sawtooth-core/pull/361#issuecomment-296759598,peterschwarz,Rebased from master,2017-04-24 17:29:58,2017-04-24 17:29:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/360,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296226995,https://github.com/hyperledger/sawtooth-core/pull/360#issuecomment-296226995,ojalatodd,"@dcmiddle OK. The doc is very clear on using the correct port numbers now.
Regarding moving the changes to the ""right file,"" the right file does not exist yet. 
I suggest keeping the change where it is now, after the rebase I just did, which is in the ""Getting Started"" part of the Application Developer's Guide. The proxy section **will** be put in the right place in the next sprint, when it exists. 
Sound good? ",2017-04-21 15:44:09,2017-04-21 15:44:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/359,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296204138,https://github.com/hyperledger/sawtooth-core/pull/359#issuecomment-296204138,jsmitchell,"Tested locally - I did see an error on one run, but I don't think it's related to these changes. The error was a state where nodes were repeatedly requesting a specific missing block. It looked like the responses were being sent, but then the block would be requested again. Perhaps the requested block was invalid somehow and being tossed out prior to hitting the completer (bad signature?). ",2017-04-21 14:21:41,2017-04-21 14:21:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/359,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296299458,https://github.com/hyperledger/sawtooth-core/pull/359#issuecomment-296299458,jjason,Rebase before merge,2017-04-21 20:35:14,2017-04-21 20:35:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/356,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/295485105,https://github.com/hyperledger/sawtooth-core/pull/356#issuecomment-295485105,dcmiddle,Got a verbal from Shawn.,2017-04-19 23:07:52,2017-04-19 23:07:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/351,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294971430,https://github.com/hyperledger/sawtooth-core/pull/351#issuecomment-294971430,ojalatodd,"Added @vaporos and @peterschwarz at the suggestion of @nick-drozd as reviewers, since we added a new test module in run_tests. ",2017-04-18 20:29:11,2017-04-18 20:29:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/350,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294925070,https://github.com/hyperledger/sawtooth-core/pull/350#issuecomment-294925070,aludvik,Forgot to sign off on a commit,2017-04-18 17:45:33,2017-04-18 17:45:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/350,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/295742390,https://github.com/hyperledger/sawtooth-core/pull/350#issuecomment-295742390,aludvik,Rebased and added some extra logging.,2017-04-20 13:41:14,2017-04-20 13:41:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/350,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/295767376,https://github.com/hyperledger/sawtooth-core/pull/350#issuecomment-295767376,aludvik,Fixed isolation id not being in the environment,2017-04-20 14:57:28,2017-04-20 14:57:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/350,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296306831,https://github.com/hyperledger/sawtooth-core/pull/350#issuecomment-296306831,aludvik,Fixed postinst files per @rbuysse comment,2017-04-21 21:12:39,2017-04-21 21:12:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/349,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294971125,https://github.com/hyperledger/sawtooth-core/pull/349#issuecomment-294971125,jsmitchell,Tested locally,2017-04-18 20:28:12,2017-04-18 20:28:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/349,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/295398823,https://github.com/hyperledger/sawtooth-core/pull/349#issuecomment-295398823,jjason,Final rebase (or freebase) before merge.,2017-04-19 19:17:02,2017-04-19 19:17:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/347,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/295329635,https://github.com/hyperledger/sawtooth-core/pull/347#issuecomment-295329635,jjason,"@nick-drozd Trying to tests locally, getting the following:

```
/project/sawtooth-core
ERROR:__main__:The container 'latest_poet_1' which would be created by this test already exists!
Do:
`run_docker_test --clean ./consensus/poet/cli/tests/unit_cli.yaml`
to remove the container, or use docker manually.
```

I did `./bin/clean_all`, `./bin/build_all`, `./bin/run_tests`.

Anything else I need to do first???

I also tried to do the `run_docker_test --clean ...`, but that didn't help, ended up with:

```
ERROR:__main__:Test service 'integration_test' does not exist in compose file: './consensus/poet/cli/tests/unit_cli.yaml'
```",2017-04-19 16:18:30,2017-04-19 16:19:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/345,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294631137,https://github.com/hyperledger/sawtooth-core/pull/345#issuecomment-294631137,aludvik,Added install_go_tools to default plugin list.,2017-04-18 00:04:36,2017-04-18 00:04:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/345,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294916188,https://github.com/hyperledger/sawtooth-core/pull/345#issuecomment-294916188,aludvik,"1. Fixed vagrant setup.
2. Created separate packages for each .proto file
3. Changed fake_processor.go -> noop_processor.go which tries to register and unregister with a validator, but it only succeeds in sending the registration request.",2017-04-18 17:18:49,2017-04-18 17:19:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/343,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294879097,https://github.com/hyperledger/sawtooth-core/pull/343#issuecomment-294879097,boydjohnson,@peterschwarz Do you have some time today to talk some of the threading considerations through about the Dispatcher in particular?,2017-04-18 15:20:09,2017-04-18 15:20:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/342,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294272166,https://github.com/hyperledger/sawtooth-core/pull/342#issuecomment-294272166,jjason,Let's try this again.  Rewrote the PoET zTest.,2017-04-15 04:48:31,2017-04-15 04:48:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/342,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294876557,https://github.com/hyperledger/sawtooth-core/pull/342#issuecomment-294876557,jjason,Fixed spelling mistake and rebased on master.,2017-04-18 15:12:16,2017-04-18 15:12:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/342,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294877876,https://github.com/hyperledger/sawtooth-core/pull/342#issuecomment-294877876,jsmitchell,Tested locally,2017-04-18 15:16:14,2017-04-18 15:16:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/341,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294490514,https://github.com/hyperledger/sawtooth-core/pull/341#issuecomment-294490514,delventhalz,"I'm happy to bend on the `/interconnect` move. My impression was though, that we considered Stream/Future to be implementation details that are primarily, if not entirely, internal to the validator. If we think there is a case for clients to be using them directly, then I can leave them where they are and put `signer.js` and `encoder.js` in there with them.",2017-04-17 13:59:07,2017-04-17 13:59:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/341,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294597736,https://github.com/hyperledger/sawtooth-core/pull/341#issuecomment-294597736,delventhalz,"PR has been updated to reflect our offline discussions:
- `/interconnect` is now called `/messaging`
- client focused modules have been left in `/client`
- state and utils modules have been moved to `/processor`
- There are now two encoders, Transaction and Batch, with equivalent functionality",2017-04-17 21:25:31,2017-04-17 21:28:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/340,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294231777,https://github.com/hyperledger/sawtooth-core/pull/340#issuecomment-294231777,nick-drozd,Moved the tp test case to `sdk/python/sawtooth_processor_test/`,2017-04-14 20:36:36,2017-04-14 20:36:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/339,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294223409,https://github.com/hyperledger/sawtooth-core/pull/339#issuecomment-294223409,aludvik,Improved commit messages.,2017-04-14 19:49:50,2017-04-14 19:49:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/338,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294185604,https://github.com/hyperledger/sawtooth-core/pull/338#issuecomment-294185604,aludvik,Rebased on docker install fixes so the PR will pass.,2017-04-14 16:28:58,2017-04-14 16:28:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/338,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294186130,https://github.com/hyperledger/sawtooth-core/pull/338#issuecomment-294186130,aludvik,Pegged packages added in new docker install...,2017-04-14 16:31:51,2017-04-14 16:31:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/335,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/295309559,https://github.com/hyperledger/sawtooth-core/pull/335#issuecomment-295309559,boydjohnson,This looks fine. Something that may be nice would be a dependency graph for our deb packages. And a general statement about what each package gives you.,2017-04-19 15:25:32,2017-04-19 15:25:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/334,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/301539382,https://github.com/hyperledger/sawtooth-core/pull/334#issuecomment-301539382,dcmiddle,Close per review comment by @vaporos about still making use of bringing forward legacy items with intact history.,2017-05-15 17:08:43,2017-05-15 17:08:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/332,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294962033,https://github.com/hyperledger/sawtooth-core/pull/332#issuecomment-294962033,agunde406,Rebased on master after SDK reorganization ,2017-04-18 20:00:00,2017-04-18 20:00:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/331,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294032266,https://github.com/hyperledger/sawtooth-core/pull/331#issuecomment-294032266,boydjohnson,"I don't get the three cases in _set_genesis in this PR. Case 1, if the validator doesn't have the block-chain-id in it's data directory it creates it. Case 2, it does have it but it isn't the same as the genesis block it received. Case 3, It does have it and it is equal to the genesis block it received, so it validates the block. For the Poet Smoke test and any situation where a validator is joining a network where it doesn't already know about the genesis block it would have to receive the genesis block twice for that block to get into the block store. ",2017-04-13 21:57:01,2017-04-13 21:57:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/331,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294162919,https://github.com/hyperledger/sawtooth-core/pull/331#issuecomment-294162919,peterschwarz,"Updated to address this comment: 

1. drop block if there is a block id mismatch
2. verify block:
    a. If valid, store block id
    b. if not, drop block",2017-04-14 14:28:05,2017-04-14 14:28:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/329,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293980770,https://github.com/hyperledger/sawtooth-core/pull/329#issuecomment-293980770,ojalatodd,Fixed merge conflict.,2017-04-13 18:19:15,2017-04-13 18:19:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/329,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293984833,https://github.com/hyperledger/sawtooth-core/pull/329#issuecomment-293984833,ojalatodd,"@jsmitchell Conflict resolved, changes made. ",2017-04-13 18:33:03,2017-04-13 18:33:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/329,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/294224637,https://github.com/hyperledger/sawtooth-core/pull/329#issuecomment-294224637,ojalatodd,"Note: tests pass locally, but not on the build server. ",2017-04-14 19:57:23,2017-04-14 19:57:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/326,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293686063,https://github.com/hyperledger/sawtooth-core/pull/326#issuecomment-293686063,aludvik,Reverted `localhost` => `127.0.0.1` changes,2017-04-12 19:42:19,2017-04-12 19:42:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/326,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293966417,https://github.com/hyperledger/sawtooth-core/pull/326#issuecomment-293966417,aludvik,Swapped the order of the commits.,2017-04-13 17:22:41,2017-04-13 17:22:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/325,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293648567,https://github.com/hyperledger/sawtooth-core/pull/325#issuecomment-293648567,rbuysse,debs from this job are at: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/view/Pull%20Requests/job/PR-325/lastSuccessfulBuild/artifact/build/debs/,2017-04-12 17:20:45,2017-04-12 17:20:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/322,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293677301,https://github.com/hyperledger/sawtooth-core/pull/322#issuecomment-293677301,jjason,Updated based upon comments from @peterschwarz and @jsmitchell ,2017-04-12 19:07:08,2017-04-12 19:07:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/321,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293609152,https://github.com/hyperledger/sawtooth-core/pull/321#issuecomment-293609152,agunde406,"Rebased to fix conflicts. Sysadmin guide was deleted by another PR, re-added.",2017-04-12 15:11:38,2017-04-12 15:11:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/320,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293246689,https://github.com/hyperledger/sawtooth-core/pull/320#issuecomment-293246689,aludvik,"Please see PR 312, it makes some changes to these files which should happen before this PR.",2017-04-11 12:37:17,2017-04-11 12:37:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/320,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293342076,https://github.com/hyperledger/sawtooth-core/pull/320#issuecomment-293342076,jjason,Rebased after PR 312 merged.,2017-04-11 17:45:36,2017-04-11 17:45:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/317,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293000268,https://github.com/hyperledger/sawtooth-core/pull/317#issuecomment-293000268,ojalatodd,Note to reviewers: the test for the voting functionality is not in this PR. I ran into a problem or possible bug that I need to discuss with @peterschwarz . I'll create a story to add tests of the voting functionality for a future sprint. ,2017-04-10 16:17:46,2017-04-10 16:17:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/317,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293054550,https://github.com/hyperledger/sawtooth-core/pull/317#issuecomment-293054550,aludvik,"If this goes in after #312, you will need to update the config-smoke.yaml file to follow the new pattern:
`- ../../../:/project/sawtooth-core` => `- $SAWTOOTH_CORE:/project/sawtooth-core`
`entrypoint: ./bin/tp_config tcp://validator:40000` => `command: tp_config tcp://validator:40000`
`image: sawtooth-dev-rest_api:$ISOLATION_ID` => `image: sawtooth-rest_api:$ISOLATION_ID`",2017-04-10 19:32:00,2017-04-10 19:32:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/317,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293054980,https://github.com/hyperledger/sawtooth-core/pull/317#issuecomment-293054980,aludvik,"```
working_dir: /project/sawtooth-core/integration/sawtooth_integration/tests
entrypoint: nose2-3 -v test_config_smoke.TestConfigSmoke
```
to
```
command: nose2-3 -v -s
    /project/sawtooth-core/integration/sawtooth_integration/tests
    test_config_smoke.TestConfigSmoke
```",2017-04-10 19:33:42,2017-04-10 19:33:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/314,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/292794031,https://github.com/hyperledger/sawtooth-core/pull/314#issuecomment-292794031,dcmiddle,"@Haridhakshini  I think this file might need to be updated to remove the references to the deleted files
docs/source/sawtooth_developers_guide.rst
",2017-04-09 15:51:32,2017-04-09 15:51:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/314,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293279210,https://github.com/hyperledger/sawtooth-core/pull/314#issuecomment-293279210,dcmiddle,"@Haridhakshini thanks for editing the other file. Can you amend that commit to add the sign off?
commands will be something like 
```
git commit --amend -s

#force push the altered commit
git push <yourfork> <this-feature-branch> -f 
```",2017-04-11 14:22:39,2017-04-11 14:22:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/314,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293387060,https://github.com/hyperledger/sawtooth-core/pull/314#issuecomment-293387060,Haridhakshini,"Dan, Thanks for finding about the reference file and letting me know. I just signed it off as well.",2017-04-11 20:15:41,2017-04-11 20:15:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/314,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293648669,https://github.com/hyperledger/sawtooth-core/pull/314#issuecomment-293648669,jsmitchell,These commits were merged in https://github.com/hyperledger/sawtooth-core/pull/324,2017-04-12 17:21:13,2017-04-12 17:21:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/312,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/292961169,https://github.com/hyperledger/sawtooth-core/pull/312#issuecomment-292961169,aludvik,"The last commit in this PR, ""Consolidate dev/mounted images to single Dockerfile"" is needed to fix an intermittent Jenkins issue discovered with using a shared base image. My solution was to have only one Dockerfile for dev testing, but tag it multiple times. ",2017-04-10 14:11:43,2017-04-10 14:11:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/312,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/292963644,https://github.com/hyperledger/sawtooth-core/pull/312#issuecomment-292963644,aludvik,"To test, you can now run tests against ""mounted"" or ""locally installed"" images, depending on how you build. 

For mounted:
`build_all mounted` and `run_tests`

For installed:
`build_all installed` and `run_tests`

The default if you just do `build_all` is `mounted`.

Tests are run using ""installed"" images on Jenkins.

Also verify that `sawtooth cluster` ~still works~ starts up the network. Peering with sawtooth cluster possibly broken as of PR 305",2017-04-10 14:19:55,2017-04-10 14:51:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/312,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/292994612,https://github.com/hyperledger/sawtooth-core/pull/312#issuecomment-292994612,aludvik,Noticed a race condition in build_all when run on Jenkins. Added ISOLATION_ID to the temp directory to fix it.,2017-04-10 15:59:24,2017-04-10 15:59:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/312,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293004788,https://github.com/hyperledger/sawtooth-core/pull/312#issuecomment-293004788,aludvik,"Noticed `-vv` was set on the poet-smoke test, making the output too verbose.
Also noticed I was passing the flags to build_all in the wrong place in the Jenkinsfile",2017-04-10 16:32:11,2017-04-10 16:32:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/312,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293302424,https://github.com/hyperledger/sawtooth-core/pull/312#issuecomment-293302424,ojalatodd,Starting review.,2017-04-11 15:34:52,2017-04-11 15:34:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/312,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293314986,https://github.com/hyperledger/sawtooth-core/pull/312#issuecomment-293314986,jjason,"Running locally, getting his error:
```
integration_test_1  | test_intkey_smoke (test_intkey_smoke.TestIntkeySmoke) ... ERROR
integration_test_1  |
integration_test_1  | ======================================================================
integration_test_1  | ERROR: test_intkey_smoke (test_intkey_smoke.TestIntkeySmoke)
integration_test_1  | ----------------------------------------------------------------------
integration_test_1  | Traceback (most recent call last):
integration_test_1  |   File ""/project/sawtooth-core/integration/sawtooth_integration/tests/test_intkey_smoke.py"", line 63, in test_intkey_smoke
integration_test_1  |     self.verify_empty_state()
integration_test_1  |   File ""/project/sawtooth-core/integration/sawtooth_integration/tests/test_intkey_smoke.py"", line 104, in verify_empty_state
integration_test_1  |     _get_state(),
integration_test_1  |   File ""/project/sawtooth-core/integration/sawtooth_integration/tests/test_intkey_smoke.py"", line 129, in _get_state
integration_test_1  |     response = _query_rest_api('/state')
integration_test_1  |   File ""/project/sawtooth-core/integration/sawtooth_integration/tests/test_intkey_smoke.py"", line 135, in _query_rest_api
integration_test_1  |     response = urllib.request.urlopen(request).read().decode('utf-8')
integration_test_1  |   File ""/usr/lib/python3.5/urllib/request.py"", line 163, in urlopen
integration_test_1  |     return opener.open(url, data, timeout)
integration_test_1  |   File ""/usr/lib/python3.5/urllib/request.py"", line 472, in open
integration_test_1  |     response = meth(req, response)
integration_test_1  |   File ""/usr/lib/python3.5/urllib/request.py"", line 582, in http_response
integration_test_1  |     'http', request, response, code, msg, hdrs)
integration_test_1  |   File ""/usr/lib/python3.5/urllib/request.py"", line 510, in error
integration_test_1  |     return self._call_chain(*args)
integration_test_1  |   File ""/usr/lib/python3.5/urllib/request.py"", line 444, in _call_chain
integration_test_1  |     result = func(*args)
integration_test_1  |   File ""/usr/lib/python3.5/urllib/request.py"", line 590, in http_error_default
integration_test_1  |     raise HTTPError(req.full_url, code, msg, hdrs, fp)
integration_test_1  | urllib.error.HTTPError: HTTP Error 503: The validator is not yet ready to be queried
```
I did build as specified above and simply ran `./bin/run_tests`.  Am I missing some configuration or do I need to rebuild my vagrant VM?",2017-04-11 16:15:00,2017-04-11 16:15:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/312,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293318424,https://github.com/hyperledger/sawtooth-core/pull/312#issuecomment-293318424,aludvik,Rebased after #318 ,2017-04-11 16:26:53,2017-04-11 16:26:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/308,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/292636081,https://github.com/hyperledger/sawtooth-core/pull/308#issuecomment-292636081,jjason,Ooops.  Inadvertently screwed something up when I rebased before pushing PR.  Let's try that again.,2017-04-07 19:54:20,2017-04-07 19:54:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/308,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/292641154,https://github.com/hyperledger/sawtooth-core/pull/308#issuecomment-292641154,jsmitchell,Tested locally.,2017-04-07 20:17:25,2017-04-07 20:17:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/308,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293369584,https://github.com/hyperledger/sawtooth-core/pull/308#issuecomment-293369584,jjason,Rebasing before merge.,2017-04-11 19:08:20,2017-04-11 19:08:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/304,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/292549581,https://github.com/hyperledger/sawtooth-core/pull/304#issuecomment-292549581,jsmitchell,Tested locally.,2017-04-07 14:20:13,2017-04-07 14:20:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/300,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291989614,https://github.com/hyperledger/sawtooth-core/pull/300#issuecomment-291989614,peterschwarz,"Does the `@asyncio.coroutine` -> `async` change require a certain level of Python 3? (3.5, I think?). If we're fine with that constraint, we will need to be sure that we're documenting the minimum python requirements. if not, we can't make this change.",2017-04-05 20:38:40,2017-04-05 20:38:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/300,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/292008079,https://github.com/hyperledger/sawtooth-core/pull/300#issuecomment-292008079,delventhalz,"`async` requires Python 3.5. It is also being used in all of the unit tests written for the Rest Api, and in `rest_api.py`, so this change is to match those uses. I'm not sure what version of Python we are targeting or have documented as a requirement, but if it is older than 3.5, we'll need to add a task to swap out the other `async` uses.",2017-04-05 21:51:15,2017-04-05 21:52:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/299,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/296748928,https://github.com/hyperledger/sawtooth-core/pull/299#issuecomment-296748928,jjason,Closing this PR as will be replaced with new PRs based upon architecture changes to PoET consensus module.,2017-04-24 17:09:02,2017-04-24 17:09:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/297,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291368922,https://github.com/hyperledger/sawtooth-core/pull/297#issuecomment-291368922,jjason,Anyone know why this didn't kick off a build?,2017-04-04 01:46:08,2017-04-04 01:46:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/297,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291557674,https://github.com/hyperledger/sawtooth-core/pull/297#issuecomment-291557674,jjason,PR pushed addressing @cintel comments.,2017-04-04 16:35:28,2017-04-04 16:35:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/297,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291637849,https://github.com/hyperledger/sawtooth-core/pull/297#issuecomment-291637849,jjason,Updated PR with code for another bug @nick-drozd found and addressing @peterschwarz comments.,2017-04-04 21:30:54,2017-04-04 21:30:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/295,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291273045,https://github.com/hyperledger/sawtooth-core/pull/295#issuecomment-291273045,agunde406,"I tested by running the poet-smoke test locally and saw the following error. It seems like a timing issues and does not happen every time the test is run (2 out of 4 tests):

 | [20:49:40.121 CRITICAL publisher] on_chain_updated exception.
validator-0_1              | [20:49:40.122 ERROR    publisher] 'hash ceeb977a59bce59cc69c992c8f501687dbeb77d20fa8b2194017a26de874786e not found in database'
validator-0_1              | Traceback (most recent call last):
validator-0_1              |   File ""/project/sawtooth-core/validator/sawtooth_validator/journal/publisher.py"", line 322, in on_chain_updated
validator-0_1              |     self._candidate_block = self._build_block(chain_head)
validator-0_1              |   File ""/project/sawtooth-core/validator/sawtooth_validator/journal/publisher.py"", line 107, in _build_block
validator-0_1              |     self._state_view_factory)
validator-0_1              |   File ""/project/sawtooth-core/validator/sawtooth_validator/journal/block_wrapper.py"", line 131, in state_view_for_block
validator-0_1              |     return state_view_factory.create_view(state_root_hash)
validator-0_1              |   File ""/project/sawtooth-core/validator/sawtooth_validator/state/state_view.py"", line 48, in create_view
validator-0_1              |     merkle_db.set_merkle_root(state_root_hash)
validator-0_1              |   File ""/project/sawtooth-core/validator/sawtooth_validator/state/merkle.py"", line 66, in set_merkle_root
validator-0_1              |     self._root_node = self._get_by_hash(merkle_root)
validator-0_1              |   File ""/project/sawtooth-core/validator/sawtooth_validator/state/merkle.py"", line 77, in _get_by_hash
validator-0_1              |     raise KeyError(""hash {} not found in database"".format(key_hash))
validator-0_1              | KeyError: 'hash ceeb977a59bce59cc69c992c8f501687dbeb77d20fa8b2194017a26de874786e not dator-0_1              | KeyError: 'hash ceeb977a59bce59cc69c992c8f501687dbeb77d20fa8b2194017a26de874786e not found in database'",2017-04-03 21:02:29,2017-04-03 21:02:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/295,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291273725,https://github.com/hyperledger/sawtooth-core/pull/295#issuecomment-291273725,jsmitchell,ditto @agunde406 ,2017-04-03 21:05:10,2017-04-03 21:05:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/293,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291863202,https://github.com/hyperledger/sawtooth-core/pull/293#issuecomment-291863202,delventhalz,"Perhaps this is a change for a different PR, but do we want intkey to use the Rest Api rather than Stream?",2017-04-05 13:36:15,2017-04-05 13:36:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/293,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291864692,https://github.com/hyperledger/sawtooth-core/pull/293#issuecomment-291864692,agunde406,I already have a story to change intkey to use the Rest api,2017-04-05 13:41:23,2017-04-05 13:41:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/293,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291878386,https://github.com/hyperledger/sawtooth-core/pull/293#issuecomment-291878386,delventhalz,Should `tp_intkey_jvm_sc` default to verbose mode? It is _very_ verbose at the moment.,2017-04-05 14:26:44,2017-04-05 14:26:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/293,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291880192,https://github.com/hyperledger/sawtooth-core/pull/293#issuecomment-291880192,agunde406,We currently do not have a configurable verbose logging setting in the java sdk.,2017-04-05 14:32:18,2017-04-05 14:32:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/291,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291035078,https://github.com/hyperledger/sawtooth-core/pull/291#issuecomment-291035078,jjason,Updated based upon @peterschwarz comments.,2017-04-03 02:18:23,2017-04-03 02:18:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/291,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291559023,https://github.com/hyperledger/sawtooth-core/pull/291#issuecomment-291559023,jjason,Rebasing before merge.,2017-04-04 16:39:57,2017-04-04 16:39:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/288,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290739951,https://github.com/hyperledger/sawtooth-core/pull/288#issuecomment-290739951,jjason,This is a really easy one.,2017-03-31 15:13:09,2017-03-31 15:13:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/286,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290581484,https://github.com/hyperledger/sawtooth-core/pull/286#issuecomment-290581484,nick-drozd,"```
ERROR:__main__:Test timed out.
ERROR:__main__:Command '['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'up', '--abort-on-container-exit']' timed out after 299.99972581863403 seconds
Traceback (most recent call last):
  File ""/usr/lib/python3.5/subprocess.py"", line 695, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File ""/usr/lib/python3.5/subprocess.py"", line 1072, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File ""/usr/lib/python3.5/subprocess.py"", line 1741, in _communicate
    self.wait(timeout=self._remaining_time(endtime))
  File ""/usr/lib/python3.5/subprocess.py"", line 1650, in wait
    raise TimeoutExpired(self.args, timeout)
subprocess.TimeoutExpired: Command '['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'up', '--abort-on-container-exit']' timed out after 299.999628046634 seconds

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/project/sawtooth-core/bin/run_docker_test"", line 92, in main
    subprocess.run(compose_up, check=True, timeout=timer.remaining())
  File ""/usr/lib/python3.5/subprocess.py"", line 700, in run
    stderr=stderr)
subprocess.TimeoutExpired: Command '['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'up', '--abort-on-container-exit']' timed out after 299.99972581863403 seconds
INFO:__main__:Shutting down with: ['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'down', '--remove-orphans']
ERROR:__main__:Shutting down the test timed out.
ERROR:__main__:Command '['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'down', '--remove-orphans']' timed out after 0 seconds
Traceback (most recent call last):
  File ""/usr/lib/python3.5/subprocess.py"", line 695, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File ""/usr/lib/python3.5/subprocess.py"", line 1072, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File ""/usr/lib/python3.5/subprocess.py"", line 1741, in _communicate
    self.wait(timeout=self._remaining_time(endtime))
  File ""/usr/lib/python3.5/subprocess.py"", line 1650, in wait
    raise TimeoutExpired(self.args, timeout)
subprocess.TimeoutExpired: Command '['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'down', '--remove-orphans']' timed out after -0.0004865409999865733 seconds

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/project/sawtooth-core/bin/run_docker_test"", line 140, in main
    subprocess.run(compose_down, check=True, timeout=timeout)
  File ""/usr/lib/python3.5/subprocess.py"", line 700, in run
    stderr=stderr)
subprocess.TimeoutExpired: Command '['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'down', '--remove-orphans']' timed out after 0 seconds
ERROR:__main__:Shutting down the test timed out.
ERROR:__main__:Command '['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'down', '--remove-orphans']' timed out after 30 seconds
Traceback (most recent call last):
  File ""/usr/lib/python3.5/subprocess.py"", line 695, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File ""/usr/lib/python3.5/subprocess.py"", line 1072, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
  File ""/usr/lib/python3.5/subprocess.py"", line 1741, in _communicate
    self.wait(timeout=self._remaining_time(endtime))
  File ""/usr/lib/python3.5/subprocess.py"", line 1650, in wait
    raise TimeoutExpired(self.args, timeout)
subprocess.TimeoutExpired: Command '['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'down', '--remove-orphans']' timed out after 29.99992548299997 seconds

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/project/sawtooth-core/bin/run_docker_test"", line 140, in main
    subprocess.run(compose_down, check=True, timeout=timeout)
  File ""/usr/lib/python3.5/subprocess.py"", line 700, in run
    stderr=stderr)
subprocess.TimeoutExpired: Command '['docker-compose', '-p', 'latest', '-f', 'poet-smoke.yaml', 'down', '--remove-orphans']' timed out after 30 seconds
CRITICAL:__main__:There are residual containers on the host that need to be cleaned up! Do `docker ps -a` and `docker newtork list` to see what was left behind!
```",2017-03-31 00:21:06,2017-03-31 00:21:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/286,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290708104,https://github.com/hyperledger/sawtooth-core/pull/286#issuecomment-290708104,aludvik,"@nick-drozd That is telling me poet-smoke is timing out, then run_docker_test tries to clean it up with compose-down, which times out after 30 seconds. What is your comment/requested change? In general, posting a stack trace with no context isn't helpful.",2017-03-31 13:12:21,2017-03-31 13:13:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/286,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290709283,https://github.com/hyperledger/sawtooth-core/pull/286#issuecomment-290709283,nick-drozd,"Is that the expected / desired behavior? If so, then there's no problem, and I approve. I ran it again after that one and it worked fine.",2017-03-31 13:17:39,2017-03-31 13:17:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/286,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290738554,https://github.com/hyperledger/sawtooth-core/pull/286#issuecomment-290738554,boydjohnson,"My thought would be that when the subprocess.TimeoutExpired is caught, to set the timeout to 30s or something. TimeoutExpired does seem the most common of the errors, and when that one happens the cleanup isn't being given any time, the first time through the loop.",2017-03-31 15:08:30,2017-03-31 15:08:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/286,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290751167,https://github.com/hyperledger/sawtooth-core/pull/286#issuecomment-290751167,aludvik,"When the timeout is caught, subprocess kills whatever the process is. I have a loop around the compose down command to try compose down again with a 60 second timeout if there was an error.

I also added another commit which checks for existing containers that would be reused and adds a --clean flag. If there are any, the test exits and prints a recommendation for fixing the issue. The --clean flag just runs compose-down with the tests compose file.",2017-03-31 15:51:23,2017-03-31 15:51:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/284,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290549066,https://github.com/hyperledger/sawtooth-core/pull/284#issuecomment-290549066,jjason,Tested behind proxy,2017-03-30 21:23:23,2017-03-30 21:23:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/282,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290485464,https://github.com/hyperledger/sawtooth-core/pull/282#issuecomment-290485464,agunde406,"I think the word ""simulator"" should be replaced with ""generator"" throughout the doc.",2017-03-30 17:37:49,2017-03-30 17:37:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/282,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290490282,https://github.com/hyperledger/sawtooth-core/pull/282#issuecomment-290490282,ojalatodd,@agunde406 I made the change: simulator-->generator,2017-03-30 17:53:57,2017-03-30 17:53:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/281,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290233816,https://github.com/hyperledger/sawtooth-core/pull/281#issuecomment-290233816,aludvik,Fixed wording and signed off commit,2017-03-29 21:37:23,2017-03-29 21:37:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/280,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290246923,https://github.com/hyperledger/sawtooth-core/pull/280#issuecomment-290246923,jjason,"To test, run the following:

If you don't have keys:

`./bin/sawtooth admin keygen`

Then to start up the genesis validator:

`rm -rf ~/sawtooth/data`
`./bin/sawtooth config proposal create -k ~/sawtooth/keys/validator.wif sawtooth.consensus.algorithm=poet -o config.batch`
`./bin/poet genesis -k ~/sawtooth/keys/validator.wif -o poet_genesis.batch`
`./bin/sawtooth admin genesis config.batch poet_genesis.batch`
`./bin/validator -vv`

To run other validators, you will want to delete `~/sawtooth/data/poet_signup_data` if you are running them with the same data directory.  You also need to make sure to generate a new public/private key pair also as each validator *must* have unique keys as the validator registry uses that as the ID for validator.s",2017-03-29 22:33:53,2017-03-29 22:37:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/280,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290249480,https://github.com/hyperledger/sawtooth-core/pull/280#issuecomment-290249480,jjason,"You can also run the PoET smoke test numerous times:

`cd integration/sawtooth_integration/docker/ && run_docker_test poet-smoke.yaml`
",2017-03-29 22:46:36,2017-03-29 22:46:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/280,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290730469,https://github.com/hyperledger/sawtooth-core/pull/280#issuecomment-290730469,jjason,Yeah.  I am hunting down why that is.  We have temporarily disable the PoET smoke test while I am debugging that so we can prevent create a logjam on PRs.,2017-03-31 14:39:35,2017-03-31 14:39:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/277,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290433205,https://github.com/hyperledger/sawtooth-core/pull/277#issuecomment-290433205,boydjohnson,"Closing as right now this PR writes on every batch, when the desired behavior is to write on every block end, in the block validator, while in the block publisher it is to get the resulting state hash for all valid batches but not write it to state.",2017-03-30 14:44:20,2017-03-30 14:44:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/276,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290141700,https://github.com/hyperledger/sawtooth-core/pull/276#issuecomment-290141700,aludvik,This PR depends on 273,2017-03-29 16:15:46,2017-03-29 16:15:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/274,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290175875,https://github.com/hyperledger/sawtooth-core/pull/274#issuecomment-290175875,jjason,This may be tied together with other work in NML-2130,2017-03-29 18:11:19,2017-03-29 18:11:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/273,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290237244,https://github.com/hyperledger/sawtooth-core/pull/273#issuecomment-290237244,peterschwarz,is this going to conflict with #276 ,2017-03-29 21:50:04,2017-03-29 21:50:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/273,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290241857,https://github.com/hyperledger/sawtooth-core/pull/273#issuecomment-290241857,aludvik,#276 is rebased on this PR,2017-03-29 22:09:39,2017-03-29 22:09:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/272,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290441812,https://github.com/hyperledger/sawtooth-core/pull/272#issuecomment-290441812,ojalatodd,@dcmiddle You  might need to rebase on the latest to get the tests to pass. ,2017-03-30 15:11:17,2017-03-30 15:11:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/271,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289942095,https://github.com/hyperledger/sawtooth-core/pull/271#issuecomment-289942095,jjason,Argh!   Thwarted by PoET smoke test again....,2017-03-29 00:05:55,2017-03-29 00:05:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/271,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289955081,https://github.com/hyperledger/sawtooth-core/pull/271#issuecomment-289955081,jjason,Rebuild passed.,2017-03-29 01:32:06,2017-03-29 01:32:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/270,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290531200,https://github.com/hyperledger/sawtooth-core/pull/270#issuecomment-290531200,ojalatodd,"The changes to the code now work in my local testing.
@aludvik The container name changes seem to have done the trick. 
",2017-03-30 20:14:00,2017-03-30 20:14:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/270,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290739658,https://github.com/hyperledger/sawtooth-core/pull/270#issuecomment-290739658,boydjohnson,"I would think we would want to have a rest api per validator, to see if there is consensus.",2017-03-31 15:12:12,2017-03-31 15:12:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/270,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290753575,https://github.com/hyperledger/sawtooth-core/pull/270#issuecomment-290753575,ojalatodd,"@nick-drozd  and I discussed the issue regarding multiple rest_api instances, one for each validator.
Also discussed with @peterschwarz . 
We agreed that we could go with this PR, and iterate in the next sprint with a version that runs one rest_api for each validator.",2017-03-31 15:59:52,2017-03-31 15:59:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/270,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291163251,https://github.com/hyperledger/sawtooth-core/pull/270#issuecomment-291163251,aludvik,"Tested locally, can submit xo transactions against a cluster.",2017-04-03 14:39:13,2017-04-03 14:39:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/268,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289883948,https://github.com/hyperledger/sawtooth-core/pull/268#issuecomment-289883948,jjason,"Thanks @boydjohnson .  There are a couple of places (`chain.py` and `publisher.py`) that still have reference, but I have been discussing with @peterschwarz what we can do to mitigate that as well and keep `INIT_ROOT_KEY` to be within `merkle.py` completely.",2017-03-28 19:50:01,2017-03-28 19:50:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/268,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289936942,https://github.com/hyperledger/sawtooth-core/pull/268#issuecomment-289936942,jjason,Updated PR with @peterschwarz comments.,2017-03-28 23:33:59,2017-03-28 23:33:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/268,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289939560,https://github.com/hyperledger/sawtooth-core/pull/268#issuecomment-289939560,jjason,Argh!  Failing PoET smoke test.....,2017-03-28 23:50:05,2017-03-28 23:50:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/268,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289939876,https://github.com/hyperledger/sawtooth-core/pull/268#issuecomment-289939876,jjason,That's what I get for a being responsible and rebasing....,2017-03-28 23:52:02,2017-03-28 23:52:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/268,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289956721,https://github.com/hyperledger/sawtooth-core/pull/268#issuecomment-289956721,jjason,Third time was a charm.,2017-03-29 01:43:31,2017-03-29 01:43:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/267,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290153169,https://github.com/hyperledger/sawtooth-core/pull/267#issuecomment-290153169,ojalatodd,"Added manage to run_lint.
This causes multiple linting errors in docker and subprocess manage methods. 
",2017-03-29 16:55:39,2017-03-29 19:40:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/267,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290202470,https://github.com/hyperledger/sawtooth-core/pull/267#issuecomment-290202470,ojalatodd,"I fixed the linting errors in the manage library modules as part of this PR.
",2017-03-29 19:40:58,2017-03-29 19:40:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/267,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290224019,https://github.com/hyperledger/sawtooth-core/pull/267#issuecomment-290224019,peterschwarz,"Rebase the ""fix linting error"" commit back into the original commit for this PR and we'll call it good.",2017-03-29 20:59:15,2017-03-29 20:59:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/267,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290239668,https://github.com/hyperledger/sawtooth-core/pull/267#issuecomment-290239668,ojalatodd,@peterschwarz I rebased. Should be good.,2017-03-29 22:00:13,2017-03-29 22:00:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/265,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289552395,https://github.com/hyperledger/sawtooth-core/pull/265#issuecomment-289552395,jsmitchell,Tested locally with two validators configured with poet consensus set via the genesis batch.,2017-03-27 19:02:35,2017-03-27 19:02:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/265,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289570055,https://github.com/hyperledger/sawtooth-core/pull/265#issuecomment-289570055,jjason,Updated PR to address @jsmitchell comment.,2017-03-27 20:07:59,2017-03-27 20:07:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/263,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289466405,https://github.com/hyperledger/sawtooth-core/pull/263#issuecomment-289466405,aludvik,See PR 264,2017-03-27 14:14:43,2017-03-27 14:14:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/263,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289486370,https://github.com/hyperledger/sawtooth-core/pull/263#issuecomment-289486370,ghost,Closed in favor of PR#264 by adam. ,2017-03-27 15:19:02,2017-03-27 15:19:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/261,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289249262,https://github.com/hyperledger/sawtooth-core/pull/261#issuecomment-289249262,peterschwarz,Is there an order to this and #254?  ,2017-03-26 00:26:49,2017-03-26 00:26:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/261,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289468470,https://github.com/hyperledger/sawtooth-core/pull/261#issuecomment-289468470,jsmitchell,"@jjason didn't you have a bunch of comments in the poet code regarding the signing stuff that you kept in as reminders about the process? I don't see them removed here, nor did I see them in a cursory review of this branch's poet dirs. What happened to them?",2017-03-27 14:21:35,2017-03-27 14:21:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/261,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289477219,https://github.com/hyperledger/sawtooth-core/pull/261#issuecomment-289477219,jjason,"@jsmitchell They are still in the PoET simulator code.

Here: https://github.com/hyperledger/sawtooth-core/blob/master/consensus/poet/simulator/sawtooth_poet_simulator/poet_enclave_simulator/poet_enclave_simulator.py#L158

and here: https://github.com/hyperledger/sawtooth-core/blob/master/consensus/poet/simulator/sawtooth_poet_simulator/poet_enclave_simulator/poet_enclave_simulator.py#L269

",2017-03-27 14:49:41,2017-03-27 14:49:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/261,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289548053,https://github.com/hyperledger/sawtooth-core/pull/261#issuecomment-289548053,dcmiddle,Good memory @jsmitchell. I added a commit to cleanup/remove those comments.,2017-03-27 18:48:26,2017-03-27 18:48:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/261,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289548567,https://github.com/hyperledger/sawtooth-core/pull/261#issuecomment-289548567,jjason,"@dcmiddle Those were my ""I spent half my Friday afternoon tracking this down and frustrated about it"" comments =)",2017-03-27 18:50:09,2017-03-27 18:50:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/261,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289549453,https://github.com/hyperledger/sawtooth-core/pull/261#issuecomment-289549453,dcmiddle,"@jjason ... ""were""  :)",2017-03-27 18:52:58,2017-03-27 18:52:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/258,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289461975,https://github.com/hyperledger/sawtooth-core/pull/258#issuecomment-289461975,aludvik,Fixed Copyright headers (again...),2017-03-27 13:59:51,2017-03-27 13:59:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/257,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289509065,https://github.com/hyperledger/sawtooth-core/pull/257#issuecomment-289509065,boydjohnson,"I'm going to fix this issue once there are docker images with installed packages, so that the test container doesn't need to find where the host put sawtooth-core so that it can mount that directory in a sibling container. Closing for now.",2017-03-27 16:33:56,2017-03-27 16:33:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/256,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289503313,https://github.com/hyperledger/sawtooth-core/pull/256#issuecomment-289503313,dcmiddle,vpn/fw was blocking access to the ubuntu key server. the update to the PR forcing that request over port 80 seems to have cleared it up for me.,2017-03-27 16:13:51,2017-03-27 16:13:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/255,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289069723,https://github.com/hyperledger/sawtooth-core/pull/255#issuecomment-289069723,jjason,"My only comment would be to have more descriptive commit messages....otherwise, looks good.",2017-03-24 16:18:16,2017-03-24 16:18:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/255,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289071539,https://github.com/hyperledger/sawtooth-core/pull/255#issuecomment-289071539,agunde406,Commit message updated to have more information,2017-03-24 16:25:09,2017-03-24 16:25:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/255,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289071975,https://github.com/hyperledger/sawtooth-core/pull/255#issuecomment-289071975,jjason,Thanks @agunde406 ,2017-03-24 16:26:38,2017-03-24 16:26:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/254,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289086346,https://github.com/hyperledger/sawtooth-core/pull/254#issuecomment-289086346,jjason,Lint doesn't like you.,2017-03-24 17:18:24,2017-03-24 17:18:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/254,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289481015,https://github.com/hyperledger/sawtooth-core/pull/254#issuecomment-289481015,jjason,"@peterschwarz I am not a Python-ista, but would it be more Pythonic to, in the `__init__.py` file have:

`from sawtooth_signing import secp256k1_signer as signing`

and then in the other files:

`from sawtooth_signing import signing`

???",2017-03-27 15:01:35,2017-03-27 15:01:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/254,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289481743,https://github.com/hyperledger/sawtooth-core/pull/254#issuecomment-289481743,jjason,@dcmiddle Should this be closed???,2017-03-27 15:03:48,2017-03-27 15:03:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/254,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289485674,https://github.com/hyperledger/sawtooth-core/pull/254#issuecomment-289485674,dcmiddle,closing in favor of #261 ,2017-03-27 15:16:42,2017-03-27 15:16:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/252,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289157323,https://github.com/hyperledger/sawtooth-core/pull/252#issuecomment-289157323,delventhalz,PR has been significantly updated to meet Shawn's requirements that `sawtooth submit --wait` be able to stay open indefinitely. Anyone who reviewed it should rereview it.,2017-03-24 22:23:44,2017-03-24 22:23:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/251,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288872087,https://github.com/hyperledger/sawtooth-core/pull/251#issuecomment-288872087,jjason,"Initial submission only to see if hopelessly broke unit tests....passing locally, but I no longer have any confidence in my local system.",2017-03-23 21:53:11,2017-03-23 21:53:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/251,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288878979,https://github.com/hyperledger/sawtooth-core/pull/251#issuecomment-288878979,jjason,"All test passing.  Note - that this has the side effect that currently any settings for the PoET consensus module are not applied as they are not in the state view at the point where the genesis block is given to the PoET block publisher.

This will be fixed in the next sprint by @peterschwarz story on Genesis Consensus.  It is a larger discussion about whether or not the PoET consensus periodically checks config settings to see if things like target wait time should be updated, although this would have a cascading effect upon things like local mean computation.",2017-03-23 22:24:30,2017-03-23 22:24:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/251,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288889367,https://github.com/hyperledger/sawtooth-core/pull/251#issuecomment-288889367,jjason,Updated to work around genesis block issue until Genesis Consensus is available.,2017-03-23 23:18:53,2017-03-23 23:18:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/251,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289054241,https://github.com/hyperledger/sawtooth-core/pull/251#issuecomment-289054241,jjason,PR updated.,2017-03-24 15:24:43,2017-03-24 15:24:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/251,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289067351,https://github.com/hyperledger/sawtooth-core/pull/251#issuecomment-289067351,jjason,"@peterschwarz Removed dependency on INIT_ROOT_KEY.  I think that what you are requesting is a good idea, but a bigger chunk than I want to tackle in this PR.  I can take a note to look at updating this in the future.",2017-03-24 16:09:45,2017-03-24 16:09:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/246,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288862160,https://github.com/hyperledger/sawtooth-core/pull/246#issuecomment-288862160,jsmitchell,Can you add some instructions for building and testing this?,2017-03-23 21:14:21,2017-03-23 21:14:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/246,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289124698,https://github.com/hyperledger/sawtooth-core/pull/246#issuecomment-289124698,ghost,"@jsmitchell My normal pattern is to add a readme.md to the folder with details on the package. None of the other SDKs have docs on how to build and tests, so there is no pre-existing pattern to follow. Where should these instructions live?",2017-03-24 19:41:09,2017-03-24 19:41:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/246,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289124932,https://github.com/hyperledger/sawtooth-core/pull/246#issuecomment-289124932,jsmitchell,@cintel I meant like here in a quick comment on the PR so we know how to build/test.,2017-03-24 19:42:19,2017-03-24 19:42:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/246,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/289135316,https://github.com/hyperledger/sawtooth-core/pull/246#issuecomment-289135316,ghost,"Current build and run instructions:
from your vagrant box, /project/sawtooth-core directory
1) install the c++ dependencies
$ sudo /project/sawtooth-core/tools/plugins/install_cxx_tools.sh

2) build the cxx sdk 
$ cd /project/sawtooth-core/sdk/cxx
$ mkdir build
$ cd build
$ cmake ..
$ make

3) Run the intkey transaction processor
from sdk/cxx/build directory:
$ ./bin/intkey_cxx

4) Run the intkey integration tests. From another console window
Apply the following diff:
```
--- a/sdk/python/sawtooth_processor_test/transaction_processor_test_case.py
+++ b/sdk/python/sawtooth_processor_test/transaction_processor_test_case.py
@@ -21,7 +21,8 @@ from sawtooth_processor_test.mock_validator import MockValidator
 class TransactionProcessorTestCase(unittest.TestCase):
     @classmethod
     def setUpClass(cls):
-        url = 'eth0:40000'
+        # url = 'eth0:40000'
+        url = '0.0.0.0:40000'
```
$ cd /project/sawtooth-core/sdk/examples/intkey_python/tests
$ export PYTHONPATH=$PYTHONPATH:/project/sawtooth-core/sdk/examples/intkey_python
$ nose2-3 -v

Look for the happy result: 
```
----------------------------------------------------------------------
Ran 3 tests in 0.135s

OK
```


",2017-03-24 20:31:19,2017-05-10 14:50:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/246,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299968145,https://github.com/hyperledger/sawtooth-core/pull/246#issuecomment-299968145,peterschwarz,Is there no other way to include `sdk/examples/intkey_cxx/json.hpp` without committing it to the repo?,2017-05-08 19:35:40,2017-05-08 19:35:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/246,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/299995170,https://github.com/hyperledger/sawtooth-core/pull/246#issuecomment-299995170,jjason,Would have preferred more file/class-level comments.,2017-05-08 21:23:54,2017-05-08 21:23:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/246,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300507111,https://github.com/hyperledger/sawtooth-core/pull/246#issuecomment-300507111,ghost,@aludvik @jjason I have updated the instructions above to run the intkey unit tests. Let me know if  you hit any rough patches. ,2017-05-10 14:51:20,2017-05-10 14:51:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/246,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/300869825,https://github.com/hyperledger/sawtooth-core/pull/246#issuecomment-300869825,jjason,Tests passed locally.  Three small changes requested above.,2017-05-11 18:02:00,2017-05-11 18:02:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/242,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288553555,https://github.com/hyperledger/sawtooth-core/pull/242#issuecomment-288553555,peterschwarz,Added another test that will prevent a regression,2017-03-22 22:01:21,2017-03-22 22:01:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288226111,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288226111,aludvik,"Swapped grpcio-tools for protobuf and my manual test still works. We still need grpcio-tools to build the protobuf files before building the debs, but we can fix that in another PR.",2017-03-21 21:34:03,2017-03-21 21:34:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288227025,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288227025,aludvik,Updated all the Copyrights to 2017 in the setup.py files.,2017-03-21 21:37:39,2017-03-21 21:37:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288244698,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288244698,jjason,Should there be a setup.py for consensus/poet/cli?,2017-03-21 22:54:34,2017-03-21 22:54:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288419700,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288419700,aludvik,"@jjason I followed the packaging structure you setup in [your poet restructuring PR](https://github.com/hyperledger/sawtooth-core/commit/82c3ea9755204f5a6807612c2889f0fb4ba81e5f)

Is the intent to have sawtooth-poet-cli define its own set of CLI tools, or to extend the sawtooth-cli packages ""sawtooth"" command? ",2017-03-22 14:40:23,2017-03-22 14:40:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288426815,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288426815,aludvik,"Rebased on master and added ""poet"" entrypoint to sawtooth-poet-cli package.",2017-03-22 15:01:56,2017-03-22 15:01:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288473886,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288473886,jjason,"Is this supposed to work behind proxy?  If not, then that would explain why docker build failed on step 8 (apt-get) failed.  If so, then maybe I am just having problems with Intel proxy again.",2017-03-22 17:21:01,2017-03-22 17:21:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288498603,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288498603,aludvik,"This should work behind a proxy if you change the docker build steps to:
```
$ docker build . -f ci/sawtooth-build-debs -t sawtooth-build-debs --build-arg https_proxy=$https_proxy --build-arg http_proxy=$http_proxy --build-arg HTTPS_PROXY=$HTTPS_PROXY --build-arg HTTP_PROXY=$HTTP_PROXY
```

This is done in our other build scripts, eg. `build_all` but I didn't think to include it in the comment above.",2017-03-22 18:39:13,2017-03-22 18:39:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288507876,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288507876,aludvik,"Discovered two more issues while testing.

1. I think the sawtooth-config package should add tp_config to the PATH, which I forgot to do.
2. sawtooth-xo depends on colorlog, which I missed.",2017-03-22 19:11:06,2017-03-22 19:11:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288517735,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288517735,aludvik,Fixed the two issues above and am working with @jjason on the proxy issue. Seems unrelated to this PR.,2017-03-22 19:48:39,2017-03-22 19:48:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288533209,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288533209,aludvik,Added a commit that fixes the proxy issue. See commit message for details.,2017-03-22 20:44:34,2017-03-22 20:44:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/238,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288601008,https://github.com/hyperledger/sawtooth-core/pull/238#issuecomment-288601008,jjason,Verified it works locally with proxy.  Great job Adam.,2017-03-23 02:42:17,2017-03-23 02:42:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/237,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288159867,https://github.com/hyperledger/sawtooth-core/pull/237#issuecomment-288159867,aludvik,Force pushed fixes for Todd,2017-03-21 17:40:58,2017-03-21 17:40:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/236,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287894651,https://github.com/hyperledger/sawtooth-core/pull/236#issuecomment-287894651,agunde406,Commit message updated,2017-03-20 20:54:18,2017-03-20 20:54:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/234,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287808920,https://github.com/hyperledger/sawtooth-core/pull/234#issuecomment-287808920,jjason,Updated copyrights and pushed new PR.,2017-03-20 16:09:06,2017-03-20 16:09:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/231,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287495554,https://github.com/hyperledger/sawtooth-core/pull/231#issuecomment-287495554,peterschwarz,Updated to add unit tests,2017-03-17 23:28:48,2017-03-17 23:28:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/231,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287853818,https://github.com/hyperledger/sawtooth-core/pull/231#issuecomment-287853818,jjason,"Tested locally the best I could (need to update the PoET consensus to look for the sealed state information in the data directory), but saw the validator registry transactions I expected.",2017-03-20 18:26:52,2017-03-20 18:26:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/229,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/288081616,https://github.com/hyperledger/sawtooth-core/pull/229#issuecomment-288081616,aludvik,"Rebasing on master, then I will merge.",2017-03-21 13:43:06,2017-03-21 13:43:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/228,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287384839,https://github.com/hyperledger/sawtooth-core/pull/228#issuecomment-287384839,jjason,"Sorry.  Forgot to mention that if you want to actually test the PR, you need to re-provision your vagrant VM.",2017-03-17 15:24:25,2017-03-17 15:24:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/228,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287387106,https://github.com/hyperledger/sawtooth-core/pull/228#issuecomment-287387106,jsmitchell,Tested locally. It works.,2017-03-17 15:32:09,2017-03-17 15:32:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/228,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287399877,https://github.com/hyperledger/sawtooth-core/pull/228#issuecomment-287399877,jjason,Pushed up a new commit.  I think I (hopefully) addressed all issues.,2017-03-17 16:16:35,2017-03-17 16:16:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/224,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287247931,https://github.com/hyperledger/sawtooth-core/pull/224#issuecomment-287247931,jsmitchell,"If you ctrl-c the validator while the workload is still running, you get 
```
[02:14:00 ERROR   base_events] Future exception was never retrieved
future: <Future finished exception=TypeError('on_batch_not_yet_committed() takes 1 positional argument but 2 were given',)>
Traceback (most recent call last):
  File ""/usr/lib/python3.5/concurrent/futures/thread.py"", line 55, in run
    result = self.fn(*self.args, **self.kwargs)
  File ""/project/sawtooth-core/sdk/python/sawtooth_sdk/workload/workload_generator.py"", line 166, in _check_on_batch
    self._workload.on_batch_not_yet_committed(batch.id)
TypeError: on_batch_not_yet_committed() takes 1 positional argument but 2 were given
```
",2017-03-17 02:15:05,2017-03-17 02:16:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/224,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287358486,https://github.com/hyperledger/sawtooth-core/pull/224#issuecomment-287358486,aludvik,"Tested locally, and it appears to work. Requested some minor changes to the implementation. Is there a way to manually verify that transactions are being committed? (Andi just reminded me of `sawtooth block list`....)",2017-03-17 13:49:59,2017-03-17 13:55:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/224,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287369382,https://github.com/hyperledger/sawtooth-core/pull/224#issuecomment-287369382,jsmitchell,"@aludvik beat me to the punch on some of my code comments. I was also able to test this locally last night. Very nice! I also have questions about the committed stats. I noticed that even if I killed the transaction processor, the workload generator kept reporting batches as committed. Maybe it was just catchup or due to the rolling average? Do we have a sense of how the batch status requests impact the performance of the system? Maybe it would be good to have a flag to turn those off and just fire load blindly.",2017-03-17 14:30:22,2017-03-17 14:30:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/224,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287406572,https://github.com/hyperledger/sawtooth-core/pull/224#issuecomment-287406572,agunde406,"Stats of committed batches is fixed, updated to use transactions per second instead of transactions per minute, and other requested changes have been addressed. ",2017-03-17 16:40:30,2017-03-17 16:40:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/223,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287231558,https://github.com/hyperledger/sawtooth-core/pull/223#issuecomment-287231558,vaporos,"This file should be removed.  All docs should go in sphinx except the top-level README.md, etc.",2017-03-17 00:19:58,2017-03-17 00:19:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/222,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286896127,https://github.com/hyperledger/sawtooth-core/pull/222#issuecomment-286896127,vaporos,"Couldn't think of a good way to get the same test without API modification, which would make the code more complex.",2017-03-15 22:12:26,2017-03-15 22:12:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/221,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287086515,https://github.com/hyperledger/sawtooth-core/pull/221#issuecomment-287086515,jsmitchell,Can you summarize what problem this is addressing?,2017-03-16 15:06:02,2017-03-16 15:06:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/221,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287138826,https://github.com/hyperledger/sawtooth-core/pull/221#issuecomment-287138826,ghost,This makes the BlockPublisher behavior on checking if a block should be published consistent with respect to incoming batch load from the network. ,2017-03-16 17:50:50,2017-03-16 17:50:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/220,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286814069,https://github.com/hyperledger/sawtooth-core/pull/220#issuecomment-286814069,vaporos,Pushed changes based on PR feedback.,2017-03-15 17:15:42,2017-03-15 17:15:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/219,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286748685,https://github.com/hyperledger/sawtooth-core/pull/219#issuecomment-286748685,aludvik,"For developers who have access to the drive, the doc is here: https://docs.google.com/document/d/1hCS_dwxnJvTclUH7oq-v2TVJN_UJsBPV-H9xaFyt6K8

Also reproduced below:

# Docker Build Update

With the recent changes, it should now be possible to build sawtooth and run tests from an arbitrary environment that has docker installed and configured to run with a linux kernel. Some substantial changes have gone into the build process to accomplish this, and this document is a quick overview of the process for current developers.

## tl;dr
If you are just doing python development for sawtooth, you should now be able to build and run the tests from vagrant or Mac by doing the following:

```
$ ./bin/build_all -l python
$ ./bin/run_tests -s java_sdk -s javascript_sdk
```

## Building Sawtooth
The old build_all script has been moved to build_python and docker_build_all has been moved to build_all.

The “new” build_all script handles building all the docker images that are usually needed by a developer*. Some of these build images are also used to build the source code in sawtooth. This includes running protogen, maven, yarn, etc. To make development in one language easier, it is now possible to pass flags to the build_all script.

```
sawtooth-lake/sawtooth-core » ./bin/build_all -h
Usage:
  ./bin/build_all [-l Language] [-s Language]

Options:
  -h            print usage and exit
  -l Language   only build the specified language(s)
  -s Language   skip the specified language(s)
```

The -l flag can be used multiple times to hand pick the languages that should be built. The -s flag can be used to pick languages that should be skipped. For example, to only build the python components of sawtooth you would do:

`$ build_all -l python`

Or to skip building java but still build python and javascript:

`$ build_all -s java`

## Running Tests
The run_tests script has also been changed to accommodate finer grained control of which tests should run.

```
sawtooth-lake/sawtooth-core » ./bin/run_tests -h
Usage:
  ./bin/run_tests [-m Module] [-s Module]
  (-m and -s can be passed multiple times)

Options:
  -h          print usage and exit
  -m Module   only run tests of specified module
  -s Module   skip the tests of specified module

Current modules:
cli
java_sdk
javascript_sdk
poet
python_sdk
rest_api
signing
validator
```

The -m flag can now be passed multiple times to hand pick which modules should be tested. Alternatively, the -s flag can also be passed multiple times to skip certain modules. For example, to only run the python_sdk and poet modules, you would do:

`$ run_tests -m python_sdk -m poet`

Or to skip the java and javascript sdk tests do:

`$ run_tests -s java_sdk -s javascript_sdk`

## Running Lint
The run_lint script has not changed, however it is now being run inside the sawtooth-build-python container on Jenkins. You can still run the script locally from outside of any container (in Vagrant) but to get the same results as you would on Jenkins, you can instead do (after build_all):

`$ docker run -v $(pwd):/project/sawtooth-core sawtooth-build-python ./bin/run_lint`",2017-03-15 13:57:14,2017-03-15 14:12:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/219,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286815992,https://github.com/hyperledger/sawtooth-core/pull/219#issuecomment-286815992,aludvik,Remove VOLUME commands from dockerfiles and turned up the verbosity of the java build steps per @agunde406 request.,2017-03-15 17:21:59,2017-03-15 17:21:59
https://api.github.com/repos/hyperledger/sawtooth-core/issues/216,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286638541,https://github.com/hyperledger/sawtooth-core/pull/216#issuecomment-286638541,ghost,The original error message is insufficient. It provides no information on what should be specified after a -P argument or how to find a valid parameter. Even better if it provided a list of valid known options. ,2017-03-15 04:33:30,2017-03-15 04:33:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/216,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286773616,https://github.com/hyperledger/sawtooth-core/pull/216#issuecomment-286773616,ojalatodd,"@cintel and @vaporos How about this compromise:
We can't provide a strict list of choices using the ""choices"" container of the argparse addarguments method. That would prevent the user from choosing their own home-grown transaction processors.

How about if the error message includes the current list of provided processors? We will need to try to keep this up to date, or add some kind of automation to create the list. 
I will start by just a list of processors that needs to be manually updated.",2017-03-15 15:14:38,2017-03-15 15:14:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/216,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286805547,https://github.com/hyperledger/sawtooth-core/pull/216#issuecomment-286805547,ghost,"Providing a list of the transaction processors provided would be good. 
",2017-03-15 16:50:18,2017-03-15 16:50:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/216,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286905284,https://github.com/hyperledger/sawtooth-core/pull/216#issuecomment-286905284,vaporos,"Since there is no natural list of TPs to display (what TPs are in core is completely irrelevant, as it may not match the installation), we should focus more on the text of the message being clear.  At minimum, ""Use -P to specify one or more transaction processors"".

We could also augment the usage statement for the command such that it describes this further in an epilog section.  Something like:

details:
  The available transaction processors specified by -P depends upon the method (specified by -m).
  When using docker, ... (and some hint about how to find them with docker ps).",2017-03-15 22:54:57,2017-03-15 22:54:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/216,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/290811028,https://github.com/hyperledger/sawtooth-core/pull/216#issuecomment-290811028,ojalatodd,"@cintel and @vaporos  I have attempted to make a good error message and a good epilog that is accurate. Please take a look!
",2017-03-31 19:42:07,2017-03-31 19:42:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/216,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/291533492,https://github.com/hyperledger/sawtooth-core/pull/216#issuecomment-291533492,ojalatodd,"Great. So we have an OK from @dcmiddle . @vaporos  or @cintel ? 
",2017-04-04 15:18:31,2017-04-04 15:18:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/216,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/293050213,https://github.com/hyperledger/sawtooth-core/pull/216#issuecomment-293050213,ojalatodd,"@vaporos and @cintel I took into account Shawn's feedback from last week.
Please take a look at this compromise, maybe we can close or merge this PR today! ;)",2017-04-10 19:15:17,2017-04-10 19:15:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/215,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287381733,https://github.com/hyperledger/sawtooth-core/pull/215#issuecomment-287381733,peterschwarz,rebased,2017-03-17 15:13:18,2017-03-17 15:13:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/211,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286450596,https://github.com/hyperledger/sawtooth-core/pull/211#issuecomment-286450596,jjason,Rebased,2017-03-14 15:07:39,2017-03-14 15:07:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/211,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286488616,https://github.com/hyperledger/sawtooth-core/pull/211#issuecomment-286488616,jjason,Rebased on top of docker script change,2017-03-14 16:59:56,2017-03-14 16:59:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/210,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286313901,https://github.com/hyperledger/sawtooth-core/pull/210#issuecomment-286313901,jjason,Closing as repeat of PR #207 .   Thanks @boydjohnson ,2017-03-14 03:45:25,2017-03-14 03:45:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/201,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286319473,https://github.com/hyperledger/sawtooth-core/pull/201#issuecomment-286319473,jjason,Running `docker run -v $(pwd):/project/sawtooth-core sawtooth-build-javascript` fails in vagrant on Windows.  Crappy Windows does not support symlinks.  Adding `--no-bin-links` to `yarn install --force` in both `bin/build_javascript` and `bin/build_intkey_javascript` seems to have fixed problem for me.,2017-03-14 04:31:45,2017-03-14 04:31:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/201,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286429960,https://github.com/hyperledger/sawtooth-core/pull/201#issuecomment-286429960,agunde406,It worked after I updated virtualBox. ,2017-03-14 14:01:42,2017-03-14 14:01:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/198,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285982679,https://github.com/hyperledger/sawtooth-core/pull/198#issuecomment-285982679,ojalatodd,Tests currently failing on a different test... ,2017-03-12 22:32:51,2017-03-12 22:32:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/198,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286115260,https://github.com/hyperledger/sawtooth-core/pull/198#issuecomment-286115260,aludvik,Looks like you will need to rebase after 197 goes in.,2017-03-13 14:01:30,2017-03-13 14:01:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/198,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286171257,https://github.com/hyperledger/sawtooth-core/pull/198#issuecomment-286171257,ojalatodd,"Will rebase and retry. 
@aludvik But otherwise the test looks OK?",2017-03-13 16:57:41,2017-03-13 16:57:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/198,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286490769,https://github.com/hyperledger/sawtooth-core/pull/198#issuecomment-286490769,ojalatodd,"Changes made, @aludvik and @peterschwarz 
Docstrings added, cleaned up written files during tear down, etc.
Note that this command can not use a temp directory. 
",2017-03-14 17:06:41,2017-03-14 17:06:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/198,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286872808,https://github.com/hyperledger/sawtooth-core/pull/198#issuecomment-286872808,ojalatodd,@boydjohnson Changes you suggested made.,2017-03-15 20:43:50,2017-03-15 20:43:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/197,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285996844,https://github.com/hyperledger/sawtooth-core/pull/197#issuecomment-285996844,peterschwarz,"It's possible that we can undo the use of `including_default_value_fields`, as the root cause was the ContextManager not throwing away unused state values (fixed in #177).",2017-03-13 01:43:15,2017-03-13 01:43:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/197,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285998712,https://github.com/hyperledger/sawtooth-core/pull/197#issuecomment-285998712,peterschwarz,"Although testing that, its still an issue for the cli tools.  This fix is probably correct, then.",2017-03-13 02:02:31,2017-03-13 02:02:31
https://api.github.com/repos/hyperledger/sawtooth-core/issues/191,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285559152,https://github.com/hyperledger/sawtooth-core/pull/191#issuecomment-285559152,jjason,This is a temporary fix so that PR 188 can pass.,2017-03-10 02:55:33,2017-03-10 02:55:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/191,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285709415,https://github.com/hyperledger/sawtooth-core/pull/191#issuecomment-285709415,aludvik,"@peterschwarz Yes, I have some build stuff in the works.",2017-03-10 16:07:49,2017-03-10 16:07:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/190,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285535783,https://github.com/hyperledger/sawtooth-core/pull/190#issuecomment-285535783,peterschwarz,"Since we can't enforce this type change, did you verify that this works everywhere this function is used?",2017-03-10 00:44:11,2017-03-10 00:44:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/190,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285536242,https://github.com/hyperledger/sawtooth-core/pull/190#issuecomment-285536242,jjason,@peterschwarz Verified that calling sights provide BlockWrapper and also verified with @cintel that this is the case.  Learned the hard way when implementing PoET consensus block verifier that it takes a BlockWrapper and not a Block.,2017-03-10 00:46:52,2017-03-10 00:46:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/188,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285719267,https://github.com/hyperledger/sawtooth-core/pull/188#issuecomment-285719267,jjason,Rebase ,2017-03-10 16:43:01,2017-03-10 16:43:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/188,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285730240,https://github.com/hyperledger/sawtooth-core/pull/188#issuecomment-285730240,jjason,Removed old PoET consensus files.,2017-03-10 17:23:14,2017-03-10 17:23:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/188,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285824848,https://github.com/hyperledger/sawtooth-core/pull/188#issuecomment-285824848,jjason,PR updated with (most) requested changes.,2017-03-11 00:55:07,2017-03-11 00:55:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/185,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285492470,https://github.com/hyperledger/sawtooth-core/pull/185#issuecomment-285492470,jjason,"Pushing again...for some reason, passed unit tests on local system, but was failing on build system.",2017-03-09 21:41:46,2017-03-09 21:41:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/181,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/286450694,https://github.com/hyperledger/sawtooth-core/pull/181#issuecomment-286450694,ojalatodd,"Just a reminder that this PR needs at least one more complete review. Thanks!
",2017-03-14 15:07:58,2017-03-14 15:07:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/178,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285195522,https://github.com/hyperledger/sawtooth-core/pull/178#issuecomment-285195522,jjason,Pushed up new change that fixes lint error,2017-03-08 22:48:28,2017-03-08 22:48:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/178,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285202124,https://github.com/hyperledger/sawtooth-core/pull/178#issuecomment-285202124,jjason,I'm trying to inflate my commit count ;),2017-03-08 23:18:15,2017-03-08 23:18:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/178,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285202440,https://github.com/hyperledger/sawtooth-core/pull/178#issuecomment-285202440,peterschwarz,"He didn't introduce the lint error, so now the commits can be cherry picked, if need be.",2017-03-08 23:19:49,2017-03-08 23:19:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/176,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285163889,https://github.com/hyperledger/sawtooth-core/pull/176#issuecomment-285163889,aludvik,"I have verified that if you run genesis, startup a validator, startup a transaction processor, shutdown the validator with Ctrl+C, clear out the state, re-run genesis, and restart the validator, everything works correctly and gracefully.

Things that do not work but might be outside the scope of the PR:
1. Running `intkey load` on the validator, waiting for the batch to finish, then shutting down the validator.
2. Not clearing out the state and re-running genesis after shutting down the validator and restarting it.",2017-03-08 20:46:39,2017-03-08 20:46:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/174,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/287800252,https://github.com/hyperledger/sawtooth-core/pull/174#issuecomment-287800252,peterschwarz,"Given the age of this PR, probably a good idea to rebase from master, as well.",2017-03-20 15:43:24,2017-03-20 15:43:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/173,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285120073,https://github.com/hyperledger/sawtooth-core/pull/173#issuecomment-285120073,delventhalz,PR has been updated to include wait-for-commit capabilities to new batch submissions.,2017-03-08 18:08:48,2017-03-08 18:08:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/172,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/284880597,https://github.com/hyperledger/sawtooth-core/pull/172#issuecomment-284880597,vaporos,Rebased on master.,2017-03-07 22:26:26,2017-03-07 22:26:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/172,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285120778,https://github.com/hyperledger/sawtooth-core/pull/172#issuecomment-285120778,vaporos,Added a commit to update postinst in an attempt to fix the build.,2017-03-08 18:11:16,2017-03-08 18:11:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/172,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285129794,https://github.com/hyperledger/sawtooth-core/pull/172#issuecomment-285129794,vaporos,Updated postinst commit to remove /var/run directory since the validator deb package doesn't create it currently.,2017-03-08 18:43:35,2017-03-08 18:43:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/172,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285517735,https://github.com/hyperledger/sawtooth-core/pull/172#issuecomment-285517735,vaporos,Added commit to reverse check_directory() return value.,2017-03-09 23:27:02,2017-03-09 23:27:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/172,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/285838409,https://github.com/hyperledger/sawtooth-core/pull/172#issuecomment-285838409,vaporos,Rebased,2017-03-11 03:28:53,2017-03-11 03:28:53
https://api.github.com/repos/hyperledger/sawtooth-core/issues/171,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/284875761,https://github.com/hyperledger/sawtooth-core/pull/171#issuecomment-284875761,aludvik,"This build is before I put all the names in the whitelist: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-171/6/console
This build is after: https://build.sawtooth.me/job/Sawtooth-Hyperledger/job/sawtooth-core/job/PR-171/7/console",2017-03-07 22:07:43,2017-03-07 22:07:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/171,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/284876213,https://github.com/hyperledger/sawtooth-core/pull/171#issuecomment-284876213,peterschwarz,Could you add a little context to the commit message?  Whitelist for...?,2017-03-07 22:09:28,2017-03-07 22:09:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/171,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/284877508,https://github.com/hyperledger/sawtooth-core/pull/171#issuecomment-284877508,aludvik,Added more description to commit message.,2017-03-07 22:14:27,2017-03-07 22:14:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/159,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/284011710,https://github.com/hyperledger/sawtooth-core/pull/159#issuecomment-284011710,aludvik,"To test this, destroy vagrant, apply the following diff, and do vagrant up:

```
diff --git a/tools/conf-defaults.sh b/tools/conf-defaults.sh
index f8290d3..79a9208 100644
--- a/tools/conf-defaults.sh
+++ b/tools/conf-defaults.sh
@@ -2,7 +2,7 @@

 [[ -z ""$SETUP_SAWTOOTH_ENVIRONMENT"" ]] && export SETUP_SAWTOOTH_ENVIRONMENT=yes
 [[ -z ""$SETUP_SAWTOOTH_PATH"" ]] && export SETUP_SAWTOOTH_PATH=no
-[[ -z ""$PLUGINS"" ]] && export PLUGINS=""setup_homedir install_sphinx install_grpc install_bitcoin install_aiohttp install_js_tools install_docker install_secp256k1""
+[[ -z ""$PLUGINS"" ]] && export PLUGINS=""setup_homedir build_and_install_debs install_docker""

 function get_vagrant_user() {
     for user in vagrant ubuntu
```",2017-03-03 17:08:20,2017-03-03 17:08:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/157,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283785864,https://github.com/hyperledger/sawtooth-core/pull/157#issuecomment-283785864,dmd,"Dead or alive, you're coming with me!",2017-03-02 21:21:48,2017-03-02 21:21:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/156,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283803051,https://github.com/hyperledger/sawtooth-core/pull/156#issuecomment-283803051,aludvik,"Please also test this on a Windows machine if you have one. 

You will need to have grpcio-tools installed, which  you can get with `pip install grpcio-tools` if you have python3 installed on windows with pip on the path.",2017-03-02 22:27:43,2017-03-02 22:27:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/156,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283832537,https://github.com/hyperledger/sawtooth-core/pull/156#issuecomment-283832537,jjason,"By the way, protogen script seems to only work, at least on Windows, if executed from sawtooth-core directory (for example, `cd bin`, `python protogen` fails for me on Windows).",2017-03-03 00:57:59,2017-03-03 00:58:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/156,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283963893,https://github.com/hyperledger/sawtooth-core/pull/156#issuecomment-283963893,aludvik,Pushed a fixup commit which fixes that issue @jjason. Will need to be squashed before merge.,2017-03-03 14:16:29,2017-03-03 14:16:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/151,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/284110242,https://github.com/hyperledger/sawtooth-core/pull/151#issuecomment-284110242,boydjohnson,"While running two js intkey processors under load, when I killed the validator the tps didn't always recover. When the last statement was ""Received 5"" so probably it had just received a TP_PROCESS_REQUEST, the js sdk didn't always recover. It depends how rock solid we want this to be. I'm unsure on how to improve on what I am seeing.",2017-03-04 00:47:02,2017-03-04 00:47:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/151,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/284276072,https://github.com/hyperledger/sawtooth-core/pull/151#issuecomment-284276072,peterschwarz,"Part of that issue was due to recycling the socket id, which seemed to create odd behaviour (which I've changed).  The other part that will continue to be noticeable is due to the fact that it uses more of a polling model to monitor for disconnects - there isn't the same access to the FD, such that more low-level monitoring can be done.  So, it may take a second or two to register the disconnect (even if the validator has restarted), but when it does, it will reconnect immediately.",2017-03-06 00:21:38,2017-03-06 00:21:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/150,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/284497523,https://github.com/hyperledger/sawtooth-core/pull/150#issuecomment-284497523,ghost,@peterschwarz genesis comment in place for your review,2017-03-06 19:03:51,2017-03-06 19:03:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/150,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/284521520,https://github.com/hyperledger/sawtooth-core/pull/150#issuecomment-284521520,ghost,@peterschwarz the update is in place! ,2017-03-06 20:26:56,2017-03-06 20:26:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/149,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283491508,https://github.com/hyperledger/sawtooth-core/pull/149#issuecomment-283491508,aludvik,"@vaporos I agree, but I think this should go through now while Nick works on a better solution. The processes are getting killed anyways and this will save time for anyone using cluster.",2017-03-01 22:26:52,2017-03-01 22:26:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/147,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283408298,https://github.com/hyperledger/sawtooth-core/pull/147#issuecomment-283408298,jjason,Please review with an eye to anything I might have forgotten to catch in the renaming.,2017-03-01 17:24:03,2017-03-01 17:24:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/146,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283488779,https://github.com/hyperledger/sawtooth-core/pull/146#issuecomment-283488779,vaporos,"Seems like we should have four states: COMMITTED - it is committed in the current chain; PENDING - it is in the block publisher's pending queue; INVALID - dropped because it was determined to be invalid during execution (by the block publisher sending it to the scheduler, etc.); UNKNOWN - there is no record of this batch.",2017-03-01 22:15:50,2017-03-01 22:15:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/146,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283501397,https://github.com/hyperledger/sawtooth-core/pull/146#issuecomment-283501397,delventhalz,"@vaporos 

Re: Rejected vs Invalid
I wonder if batches can be rejected for reasons other than being invalid? Those would probably be exceptional cases, so I'll make the switch, and rejected status(es) can be added later if needed.

Re: Unknown status
Agreed. Unfortunately to distinguish between `UNKNOWN` and `INVALID`, some significant architecture needs to be added. But, I will refactor the current implementation to return `UNKNOWN` _instead_ of `INVALID`/`REJECTED`, as that more accurately reflects what is known (nothing).",2017-03-01 23:08:11,2017-03-01 23:37:39
https://api.github.com/repos/hyperledger/sawtooth-core/issues/142,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283393186,https://github.com/hyperledger/sawtooth-core/pull/142#issuecomment-283393186,jsmitchell,"@boydjohnson yeah, this is in advance of the peering work. I like your suggestion of a peer class which abstracts the two types.",2017-03-01 16:35:27,2017-03-01 16:35:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/125,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282833870,https://github.com/hyperledger/sawtooth-core/pull/125#issuecomment-282833870,jjason,Pushed a couple of minor changes based upon testing with 0-7 branch,2017-02-27 19:56:38,2017-02-27 19:56:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/123,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282514308,https://github.com/hyperledger/sawtooth-core/pull/123#issuecomment-282514308,peterschwarz,Were there any changes needed in how the `GenesisController` interacts with block store as a result of these changes?  Might explain the test failures.,2017-02-25 21:37:49,2017-02-25 21:37:49
https://api.github.com/repos/hyperledger/sawtooth-core/issues/123,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282940892,https://github.com/hyperledger/sawtooth-core/pull/123#issuecomment-282940892,ghost,"@peterschwarz @agunde406 Please have a look all the updates are inplace. 
",2017-02-28 04:44:20,2017-02-28 04:44:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/120,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282816306,https://github.com/hyperledger/sawtooth-core/pull/120#issuecomment-282816306,agunde406,"Updated to have two batch request messages, one for batch id and one for multiple txn id's. If using txn id the responder will check every txn id in the message if a batch is found it will be broadcast. If it was not found that txn will be added to a new request message. ",2017-02-27 19:02:55,2017-02-27 19:02:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/119,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282347268,https://github.com/hyperledger/sawtooth-core/pull/119#issuecomment-282347268,ghost,What is the motivation for moving to positional arguments?,2017-02-24 17:11:44,2017-02-24 17:11:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/119,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282347627,https://github.com/hyperledger/sawtooth-core/pull/119#issuecomment-282347627,jjason,Swig seems to be puking on it.,2017-02-24 17:13:12,2017-02-24 17:13:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/119,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282347963,https://github.com/hyperledger/sawtooth-core/pull/119#issuecomment-282347963,jjason,Want to get a fix in so @aludvik can proceed.  I personally like keyword arguments so will revisit to see if there is a better fix than simply going to positional arguments.,2017-02-24 17:14:32,2017-02-24 17:14:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/119,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282378399,https://github.com/hyperledger/sawtooth-core/pull/119#issuecomment-282378399,jjason,"@aludvik Was having problem with pickle and enclave wait certificate object.  Backed out a change that affected that.

If this works, will migrate any necessary changes to master.",2017-02-24 19:13:40,2017-02-24 19:13:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/118,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282514732,https://github.com/hyperledger/sawtooth-core/pull/118#issuecomment-282514732,peterschwarz,"Updated with changes needed for Journal, as well as the minor changes to ConsensusFactory requested by @vaporos",2017-02-25 21:45:13,2017-02-25 21:45:13
https://api.github.com/repos/hyperledger/sawtooth-core/issues/117,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282129591,https://github.com/hyperledger/sawtooth-core/pull/117#issuecomment-282129591,ojalatodd,Part of NML-2010,2017-02-23 21:38:58,2017-02-23 21:38:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/117,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283165276,https://github.com/hyperledger/sawtooth-core/pull/117#issuecomment-283165276,vaporos,"This is a python 2->3 regression due to changed behavior in argparse.  See:

http://stackoverflow.com/questions/22990977/why-does-this-argparse-code-behave-differently-between-python-2-and-3

If we took a similar approach, the fix would look something like:

```
diff --git a/cli/sawtooth_cli/admin.py b/cli/sawtooth_cli/admin.py
index 4ed48fc..23dbe16 100644
--- a/cli/sawtooth_cli/admin.py
+++ b/cli/sawtooth_cli/admin.py
@@ -36,6 +36,7 @@ def do_admin(args):
 def add_admin_parser(subparsers, parent_parser):
     parser = subparsers.add_parser('admin', parents=[parent_parser])
     admin_sub = parser.add_subparsers(title='admin_commands', dest='admin_cmd')
+    admin_sub.required = True
 
     add_genesis_parser(admin_sub, parent_parser)
     add_keygen_parser(admin_sub, parent_parser)
diff --git a/cli/sawtooth_cli/main.py b/cli/sawtooth_cli/main.py
index 60c7855..84175c2 100644
--- a/cli/sawtooth_cli/main.py
+++ b/cli/sawtooth_cli/main.py
@@ -90,6 +90,7 @@ def create_parser(prog_name):
         formatter_class=argparse.RawDescriptionHelpFormatter)
 
     subparsers = parser.add_subparsers(title='subcommands', dest='command')
+    subparsers.required = True
 
     add_keygen_parser(subparsers, parent_parser)
     add_admin_parser(subparsers, parent_parser)
```
",2017-02-28 21:27:12,2017-02-28 21:27:12
https://api.github.com/repos/hyperledger/sawtooth-core/issues/117,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283775050,https://github.com/hyperledger/sawtooth-core/pull/117#issuecomment-283775050,ojalatodd,"@vaporos I rewrote this PR based on the tip you gave me above. 
Tested.",2017-03-02 20:47:03,2017-03-02 20:47:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/117,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283775296,https://github.com/hyperledger/sawtooth-core/pull/117#issuecomment-283775296,ojalatodd,"@peterschwarz I changed this quite a bit based on the fact that Python3 subparsers have a ""required"" attribute you can set. Ready for a new review!",2017-03-02 20:48:00,2017-03-02 20:48:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/114,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282434816,https://github.com/hyperledger/sawtooth-core/pull/114#issuecomment-282434816,delventhalz,"Updated to reflect the square 9-10 version of our plan. MockValidator has been replaced with a MockStream, which requires no ZMQ, but sends back preseeded fake data in much the same way the MockValidator did. I'd like to refactor to make the data specified in the test itself, but perhaps that is a job for another PR.",2017-02-24 23:37:30,2017-02-24 23:37:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/114,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282439183,https://github.com/hyperledger/sawtooth-core/pull/114#issuecomment-282439183,vaporos,There are two things I really like here: 1) the declarative style of the assertions; and 2) the great API doc on the tests.,2017-02-25 00:07:42,2017-02-25 00:07:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/112,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281860389,https://github.com/hyperledger/sawtooth-core/pull/112#issuecomment-281860389,vaporos,"The first commit here has been modified from the version in #109, with the two commits immediately after it resolving the a few of the linting issues in a slightly different manner.",2017-02-23 01:23:26,2017-02-23 01:23:26
https://api.github.com/repos/hyperledger/sawtooth-core/issues/112,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281861100,https://github.com/hyperledger/sawtooth-core/pull/112#issuecomment-281861100,vaporos,"Commit d07a6ed is broken.  I'll work on a replacement.

Also, cool that the smoke test caught it.",2017-02-23 01:27:09,2017-02-23 01:27:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/112,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281887418,https://github.com/hyperledger/sawtooth-core/pull/112#issuecomment-281887418,vaporos,The super.__init__() build issue has been fixed.,2017-02-23 03:54:18,2017-02-23 03:54:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/109,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281763280,https://github.com/hyperledger/sawtooth-core/pull/109#issuecomment-281763280,vaporos,"Suggest we split this into two different PRs and use this PR for reference.  One immediate one that fixes pylint to not exclude the consensus directory (might be more involved than what's just in this PR, since it is excluding more than intended), and then another that introduces the new validator registry state view.

I can pull the relevant lint-related pieces together into a PR.  @agunde406 can comment on the amount of work to introduce the view.",2017-02-22 18:47:41,2017-02-22 18:47:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/109,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281765908,https://github.com/hyperledger/sawtooth-core/pull/109#issuecomment-281765908,agunde406,The view for the Validator Registry has not been written yet.,2017-02-22 18:56:35,2017-02-22 18:56:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/109,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281771978,https://github.com/hyperledger/sawtooth-core/pull/109#issuecomment-281771978,ghost,The validator_registry was removed in the previous move commit. All changes in this commit are fixing lint errors stemming from this. As stated in the commit messages this is a cleanup only commit not a porting commit. I will not grow the scope of this PR to include PoET1 porting to the 0.8 consensus interface.  ,2017-02-22 19:17:37,2017-02-22 19:17:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/109,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281792691,https://github.com/hyperledger/sawtooth-core/pull/109#issuecomment-281792691,peterschwarz,"Writing a StateView for the registry should be straight forward.  Submitting the transactions for the registry might be a bit more work, as I don't know if the facilities for sending a txn exists from within the validator.",2017-02-22 20:28:19,2017-02-22 20:28:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/109,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281811414,https://github.com/hyperledger/sawtooth-core/pull/109#issuecomment-281811414,ghost,"It is pointless to add the StateView to this commit. None of the porting activities of moving PoET1 to the new consensus activities are done in this PR nor will this commit be expanded to encompass them. 

As it seems cleanup lint errors and incorrect references are not desired. I will close this PR.  ",2017-02-22 21:34:11,2017-02-22 21:34:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/109,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281859746,https://github.com/hyperledger/sawtooth-core/pull/109#issuecomment-281859746,vaporos,"Sorry for any confusion, we were suggesting two PRs (one attempting to solve the larger linting issue and another to address the view).  Was originally hoping if we coordinated it right, we could avoid the commented-out-code, which isn't actually practical.

This commit is included as part of #112 .  ",2017-02-23 01:20:11,2017-02-23 01:20:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/108,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281517881,https://github.com/hyperledger/sawtooth-core/pull/108#issuecomment-281517881,peterschwarz,"Separating the code and unit test removals means if one rolls back to just before the unit tests are removed, the build is broken.  Unit tests are dependent on the production code, and really should be removed before or at the same time as the removal of the relevant production code.",2017-02-21 23:34:56,2017-02-21 23:34:56
https://api.github.com/repos/hyperledger/sawtooth-core/issues/108,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281526918,https://github.com/hyperledger/sawtooth-core/pull/108#issuecomment-281526918,vaporos,Re-ordered commits and fixed linting issue (pep8/pylint3 were not installed in previous attempt).  Also attempted to fix the build issue by removing more from the dockerfile.,2017-02-22 00:22:21,2017-02-22 00:22:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/108,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281528837,https://github.com/hyperledger/sawtooth-core/pull/108#issuecomment-281528837,vaporos,Added pep8 to docker/sawtooth-build-ubuntu-xenial...,2017-02-22 00:32:44,2017-02-22 00:32:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/108,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281556750,https://github.com/hyperledger/sawtooth-core/pull/108#issuecomment-281556750,vaporos,"Updated to keep installing pylint via pip3 instead of apt-get in vagrant, since the apt-get version is broken.",2017-02-22 03:17:04,2017-02-22 03:17:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/108,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281687696,https://github.com/hyperledger/sawtooth-core/pull/108#issuecomment-281687696,peterschwarz,"It's looking like the PoET consensus code is still dependent on the legacy gossip package.  Not sure if that cleanup should be part of this PR or not.

This must mean that none of the tests related to poet1 have been moved out of legacy (or haven't been implemented yet).",2017-02-22 14:41:07,2017-02-22 14:49:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/108,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281705041,https://github.com/hyperledger/sawtooth-core/pull/108#issuecomment-281705041,vaporos,The PoET code integration is still in-progress and not expected to work in the scope of this PR.  The PoET code move was done in a different PR and (some of) the tests are currently disabled pending completion of that work.,2017-02-22 15:37:36,2017-02-22 15:37:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/106,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281746528,https://github.com/hyperledger/sawtooth-core/pull/106#issuecomment-281746528,ghost,"@aludvik Any problem if we have jjason, tbarnes or nconde(other intel folks that may be affected sign off) on this?",2017-02-22 17:49:19,2017-02-22 17:49:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/106,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281764428,https://github.com/hyperledger/sawtooth-core/pull/106#issuecomment-281764428,aludvik,"No, I will add them as reviewers.",2017-02-22 18:51:40,2017-02-22 18:51:40
https://api.github.com/repos/hyperledger/sawtooth-core/issues/105,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281438267,https://github.com/hyperledger/sawtooth-core/pull/105#issuecomment-281438267,vaporos,"With respect to Windows default path support...

In 0.7, we used a fixed path in Program Files.  In 0.8, we should perhaps set the default relative to the executable -- this would work similar to setting SAWTOOTH_HOME to the directory above bin/, though the subdirectories for 0.7 where not the same as when using SAWTOOTH_HOME. (conf instead of etc for example).  For reference on the previous approach:

https://github.com/hyperledger/sawtooth-core/blob/0-7/core/sawtooth/validator_config.py#L242",2017-02-21 18:46:22,2017-02-21 18:46:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/100,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281881134,https://github.com/hyperledger/sawtooth-core/pull/100#issuecomment-281881134,vaporos,"I wonder if we can kick the build off again. If not, we should re-open this PR.",2017-02-23 03:13:57,2017-02-23 03:13:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/99,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281127061,https://github.com/hyperledger/sawtooth-core/pull/99#issuecomment-281127061,peterschwarz,"You can add the break, but start the next block on an even number: TP ends
at 12, CLIENT starts at 100, etc.  Using http error codes as an example
here of the distances between blocks of related items.

On Mon, Feb 20, 2017 at 10:39 AM, Boyd Johnson <notifications@github.com>
wrote:

> *@boydjohnson* commented on this pull request.
> ------------------------------
>
> In protos/validator.proto
> <https://github.com/hyperledger/sawtooth-core/pull/99#discussion_r102055587>
> :
>
> > @@ -33,59 +33,63 @@ message Message {
>          TP_REGISTER_REQUEST = 1;
>          // Registration response from the validator to the transaction processor
>          TP_REGISTER_RESPONSE = 2;
> +        // Tell the validator that the transaction processor won't take any more transactions
>
> I could add a break of 10 (20?) numbers between top level namespace
> message types. So TP would end at 12, but CLIENT wouldn't start until 23
> (33?).
>
> —
> You are receiving this because your review was requested.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/sawtooth-core/pull/99#discussion_r102055587>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAROee_e-2qcR-eikOhjHbLWmk0paCP9ks5recGogaJpZM4ME3eQ>
> .
>
",2017-02-20 16:41:57,2017-02-20 16:41:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/99,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281197654,https://github.com/hyperledger/sawtooth-core/pull/99#issuecomment-281197654,boydjohnson,"I updated logging statements, fixed typos, and added more comments. The largest difference is that one TpUnregisterRequest is sent for all handlers on a transaction processor, so the handling in processor_iterator.py and processor_handlers.py was updated.",2017-02-20 22:34:33,2017-02-20 22:34:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/97,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281403833,https://github.com/hyperledger/sawtooth-core/pull/97#issuecomment-281403833,ojalatodd,Addressing @delventhalz 's review. Thanks!,2017-02-21 16:51:23,2017-02-21 16:51:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/97,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281831328,https://github.com/hyperledger/sawtooth-core/pull/97#issuecomment-281831328,ojalatodd,"Reviewers: per discussion with @vaporos , this document does not need to cover the complete installation of a UI-server, and all components. Basically a ""place-holder."" 
",2017-02-22 22:50:36,2017-02-22 22:50:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/97,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282111379,https://github.com/hyperledger/sawtooth-core/pull/97#issuecomment-282111379,ojalatodd,"@vaporos  and @delventhalz : 
I believe everything that your items have been resolved.",2017-02-23 20:29:11,2017-02-23 20:29:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/97,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282119948,https://github.com/hyperledger/sawtooth-core/pull/97#issuecomment-282119948,ojalatodd,All tests passed.,2017-02-23 21:01:57,2017-02-23 21:01:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/93,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280507029,https://github.com/hyperledger/sawtooth-core/pull/93#issuecomment-280507029,vaporos,"This PR does not remove a lot of legacy code, that will come in a future PR.  This one is more about shifting to building/testing only python3 packages and updating Jenkins accordingly.",2017-02-17 00:08:07,2017-02-17 00:08:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/93,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280687024,https://github.com/hyperledger/sawtooth-core/pull/93#issuecomment-280687024,vaporos,protobuf reorg is in this PR as it is required to build the deb files.,2017-02-17 15:52:52,2017-02-17 15:52:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/93,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280691082,https://github.com/hyperledger/sawtooth-core/pull/93#issuecomment-280691082,vaporos,"@aludvik - should we do that in a different move-docker-images PR, or is this related to changes here?",2017-02-17 16:07:11,2017-02-17 16:07:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/93,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280692371,https://github.com/hyperledger/sawtooth-core/pull/93#issuecomment-280692371,aludvik,We can do it in another PR,2017-02-17 16:11:32,2017-02-17 16:11:32
https://api.github.com/repos/hyperledger/sawtooth-core/issues/89,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280155129,https://github.com/hyperledger/sawtooth-core/pull/89#issuecomment-280155129,peterschwarz,This is a reopen of #85 ,2017-02-15 22:04:58,2017-02-15 22:04:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/88,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280787832,https://github.com/hyperledger/sawtooth-core/pull/88#issuecomment-280787832,ojalatodd,Waiting on this until PR #68 is merged. ,2017-02-17 22:48:27,2017-02-17 22:48:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/85,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280132087,https://github.com/hyperledger/sawtooth-core/pull/85#issuecomment-280132087,ghost,Probably a nit but shouldn't all of these files have a new line at the end?,2017-02-15 20:40:27,2017-02-15 20:40:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/85,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280134890,https://github.com/hyperledger/sawtooth-core/pull/85#issuecomment-280134890,peterschwarz,"new-lines at the end will fail our linting rules. But, since #79 is not merged in yet, CI did not catch some other linting issues that are there.  Will fix.

nit away!",2017-02-15 20:51:33,2017-02-15 20:59:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/85,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280137821,https://github.com/hyperledger/sawtooth-core/pull/85#issuecomment-280137821,peterschwarz,~~Hold off on this - need to correct some tests~~,2017-02-15 21:02:50,2017-02-15 21:10:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/80,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/279824073,https://github.com/hyperledger/sawtooth-core/pull/80#issuecomment-279824073,boydjohnson,"I can increase the sleeps. I think they are consistent between xo and intkey smoke. It ran again and passed. If you have time run it locally and see how many times it passes. I have only seen 1 fail in ~20 runs locally, but also the fail on the server.",2017-02-14 20:21:19,2017-02-14 20:21:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/79,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280159706,https://github.com/hyperledger/sawtooth-core/pull/79#issuecomment-280159706,aludvik,Did we figure out what the `Unable to create directory /.pylint.d` message is from?,2017-02-15 22:23:08,2017-02-15 22:23:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/78,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281383200,https://github.com/hyperledger/sawtooth-core/pull/78#issuecomment-281383200,peterschwarz,"This should probably be rebased, so that the CI tests will run properly.",2017-02-21 15:48:27,2017-02-21 15:48:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/77,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/279775557,https://github.com/hyperledger/sawtooth-core/pull/77#issuecomment-279775557,jjason,Did you intend for this PR to delete the example validator configuration file?,2017-02-14 17:26:51,2017-02-14 17:26:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/77,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281885584,https://github.com/hyperledger/sawtooth-core/pull/77#issuecomment-281885584,vaporos,Suggest we close this and re-open a new PR when it is transitioned to test the new validator.,2017-02-23 03:40:18,2017-02-23 03:40:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/77,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/282442556,https://github.com/hyperledger/sawtooth-core/pull/77#issuecomment-282442556,nconde,"PR closed, to be reopened when integration with 0.8 is complete. ",2017-02-25 00:34:30,2017-02-25 00:34:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/73,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/279751433,https://github.com/hyperledger/sawtooth-core/pull/73#issuecomment-279751433,agunde406,"The ""fixes"" and ""clean up"" commits should be squashed into the corresponding commits.",2017-02-14 16:07:21,2017-02-14 16:07:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/70,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/279811609,https://github.com/hyperledger/sawtooth-core/pull/70#issuecomment-279811609,vaporos,Rebased without code modifications.,2017-02-14 19:35:21,2017-02-14 19:35:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/69,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/279229170,https://github.com/hyperledger/sawtooth-core/pull/69#issuecomment-279229170,vaporos,"Breaking this up into multiple commits would make it easier to review.  For example, breaking out the error handling changes and genesis changes.  The head parameter and /state could be in different commits.",2017-02-12 16:20:23,2017-02-12 16:20:23
https://api.github.com/repos/hyperledger/sawtooth-core/issues/69,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/279238189,https://github.com/hyperledger/sawtooth-core/pull/69#issuecomment-279238189,delventhalz,"Added CLI command to PR.

Re: breaking up commits
It wasn't immediately obvious as I was working on it how to break things up, since everything was fairly interdependent. In retrospect, those are good suggestions, and I will try to keep my commits smaller in the future.",2017-02-12 18:36:19,2017-02-12 18:36:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/69,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/279867368,https://github.com/hyperledger/sawtooth-core/pull/69#issuecomment-279867368,delventhalz,I've pushed some updates. All comments not under discussion should have been addressed.,2017-02-14 23:15:03,2017-02-14 23:15:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/68,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/279426215,https://github.com/hyperledger/sawtooth-core/pull/68#issuecomment-279426215,ojalatodd,Moved to external: https://github.com/hyperledger/,2017-02-13 15:34:28,2017-02-13 15:34:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/68,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280764321,https://github.com/hyperledger/sawtooth-core/pull/68#issuecomment-280764321,ojalatodd,Tests passed!,2017-02-17 20:57:27,2017-02-17 20:57:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/68,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281163461,https://github.com/hyperledger/sawtooth-core/pull/68#issuecomment-281163461,ojalatodd,"Addressing Shawn's review.
All points addressed. Please take a new look, @vaporos ",2017-02-20 19:28:48,2017-02-20 21:57:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/59,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/272831553,https://github.com/hyperledger/sawtooth-core/pull/59#issuecomment-272831553,feihujiang,@vaporos what's your point about this PR?,2017-01-16 10:59:22,2017-01-16 10:59:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/59,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278545296,https://github.com/hyperledger/sawtooth-core/pull/59#issuecomment-278545296,vaporos,Please resubmit against 0-7 branch.,2017-02-09 04:38:04,2017-02-09 04:38:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/59,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/280356484,https://github.com/hyperledger/sawtooth-core/pull/59#issuecomment-280356484,aludvik,"Changes merged into 0-7 by ""Add pubkey signing and broadcast injected messages #87""",2017-02-16 15:09:28,2017-02-16 15:09:28
https://api.github.com/repos/hyperledger/sawtooth-core/issues/58,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278544552,https://github.com/hyperledger/sawtooth-core/pull/58#issuecomment-278544552,vaporos,"This should not be merged into master, but should be cherry-picked to 0-7 if the change is correct.  @ojalatodd - please review.",2017-02-09 04:31:48,2017-02-09 04:31:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/58,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/281724551,https://github.com/hyperledger/sawtooth-core/pull/58#issuecomment-281724551,ojalatodd,"@feihujiang Sorry for delay on looking at this. 
Is your change here still relevant in light of recent changes to 0-7?

I think you might want to rebase a repush this change. 
If you do that, and you think it still is necessary, I will test it myself then merge it!
thanks,
Todd",2017-02-22 16:37:50,2017-02-22 16:37:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/58,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283401183,https://github.com/hyperledger/sawtooth-core/pull/58#issuecomment-283401183,ojalatodd,Reviewing to see if still valid. ,2017-03-01 17:00:11,2017-03-01 17:00:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/58,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283450603,https://github.com/hyperledger/sawtooth-core/pull/58#issuecomment-283450603,ojalatodd,"Superseded by current tutorial, and keyfile no longer needs to be specified. ",2017-03-01 19:53:43,2017-03-01 19:53:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/58,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/283451143,https://github.com/hyperledger/sawtooth-core/pull/58#issuecomment-283451143,ojalatodd,Not relevant with current tutorials and codebase.,2017-03-01 19:55:38,2017-03-01 19:55:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/57,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/269644588,https://github.com/hyperledger/sawtooth-core/pull/57#issuecomment-269644588,jjason,@feihujiang I have a fix for this that will be upstreamed in the near future with other PoET 1 features.,2016-12-29 15:19:52,2016-12-29 15:19:52
https://api.github.com/repos/hyperledger/sawtooth-core/issues/57,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278998266,https://github.com/hyperledger/sawtooth-core/pull/57#issuecomment-278998266,vaporos,"This issue is fixed in this comment using a slightly different approach:

https://github.com/hyperledger/sawtooth-core/commit/4588cf748f7f5eb9b30f4a70a60d29df471062a2",2017-02-10 16:54:34,2017-02-10 16:54:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/56,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/272829563,https://github.com/hyperledger/sawtooth-core/pull/56#issuecomment-272829563,feihujiang,I rebased this PR.,2017-01-16 10:49:36,2017-01-16 10:49:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/56,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278428959,https://github.com/hyperledger/sawtooth-core/pull/56#issuecomment-278428959,vaporos,"We do not plan compatibility between poet0 and poet1 at this level.  For master (0.8), we don't have poet0.  For the 0-7 branch, we should fix this within the CLI code.  This will keep the 0-7 poet1 closer to the poet1 in master.",2017-02-08 19:06:37,2017-02-08 19:06:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/55,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/269505777,https://github.com/hyperledger/sawtooth-core/pull/55#issuecomment-269505777,vaporos,"The duplication is intentional, as we are attempting to separate core and validator code.  In particular, core should not rely on anything in the validator package, but the reverse is also true.  I think this is mostly the case currently with the exception of the CLI utility for creating the genesis block.",2016-12-28 16:58:14,2016-12-28 16:58:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/55,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/269577417,https://github.com/hyperledger/sawtooth-core/pull/55#issuecomment-269577417,feihujiang,"@vaporos You mean  the validator package should not rely on anything in the core package either? 
I don't think the duplication is a good idea. Maybe we need to put them into an separate package. then the validator and core packages rely on the separate package.
",2016-12-29 03:37:08,2016-12-29 03:37:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/54,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/269319573,https://github.com/hyperledger/sawtooth-core/pull/54#issuecomment-269319573,feihujiang,"A name prefixed with an underscore (e.g. journal._txn_lock) should be treated as a non-public part of the API, should not be invoked from outside of the object.",2016-12-27 12:26:46,2016-12-27 12:26:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/54,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/272842610,https://github.com/hyperledger/sawtooth-core/pull/54#issuecomment-272842610,feihujiang,I rebased this PR.,2017-01-16 11:53:18,2017-01-16 11:53:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/54,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278544278,https://github.com/hyperledger/sawtooth-core/pull/54#issuecomment-278544278,vaporos,"This PR could not be cherry-picked to 0-7 without modifications.  If the change is still relevant to 0-7, please resubmit against that branch.

Since changes to ""legacy code"" that is not part of the 0.8 validator are not being merged into master, I'm closing this particular PR.",2017-02-09 04:29:29,2017-02-09 04:29:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/53,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278543677,https://github.com/hyperledger/sawtooth-core/pull/53#issuecomment-278543677,vaporos,"This change has been accepted and cherry-picked to the 0-7 branch.  Changes to ""legacy code"" that is not part of the 0.8 validator are not being merged into master, so closing this PR against master.",2017-02-09 04:24:00,2017-02-09 04:24:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/52,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/272839046,https://github.com/hyperledger/sawtooth-core/pull/52#issuecomment-272839046,feihujiang,I rebased this PR.,2017-01-16 11:38:27,2017-01-16 11:38:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/52,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278543704,https://github.com/hyperledger/sawtooth-core/pull/52#issuecomment-278543704,vaporos,"This change has been accepted and cherry-picked to the 0-7 branch.  Changes to ""legacy code"" that is not part of the 0.8 validator are not being merged into master, so closing this PR against master.",2017-02-09 04:24:15,2017-02-09 04:24:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/51,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/272828613,https://github.com/hyperledger/sawtooth-core/pull/51#issuecomment-272828613,feihujiang,I rebased this PR.,2017-01-16 10:45:07,2017-01-16 10:45:07
https://api.github.com/repos/hyperledger/sawtooth-core/issues/51,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278544062,https://github.com/hyperledger/sawtooth-core/pull/51#issuecomment-278544062,vaporos,"Not sure if #59 is a more general solution or if they are both needed.  In any case, this PR could not be cherry-picked to 0-7 without modifications.  If the change is still relevant to 0-7 (not solved by #59), please resubmit against that branch.

Since changes to ""legacy code"" that is not part of the 0.8 validator are not being merged into master, I'm closing this particular PR.",2017-02-09 04:27:34,2017-02-09 04:27:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/50,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/272809921,https://github.com/hyperledger/sawtooth-core/pull/50#issuecomment-272809921,feihujiang,"poet0 was deleted, so this PR is meaningless, closed this PR.",2017-01-16 09:19:45,2017-01-16 09:19:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/49,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/268746658,https://github.com/hyperledger/sawtooth-core/pull/49#issuecomment-268746658,feihujiang,"@vaporos I updated this PR for passing run_tests , please take a look.",2016-12-22 08:31:58,2016-12-22 08:31:58
https://api.github.com/repos/hyperledger/sawtooth-core/issues/49,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/268824673,https://github.com/hyperledger/sawtooth-core/pull/49#issuecomment-268824673,agunde406,"When you ran the tests, did you run all of them? I am getting quite a few test failures when testing your code.",2016-12-22 15:37:00,2016-12-22 15:37:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/49,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/268925861,https://github.com/hyperledger/sawtooth-core/pull/49#issuecomment-268925861,feihujiang,"@agunde406 I run all of them, and they were all passed. Did you update this PR? And If you did, but although got quite a few test failures, could you please post messages of failures?
",2016-12-23 01:26:18,2016-12-23 01:26:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/49,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/269001569,https://github.com/hyperledger/sawtooth-core/pull/49#issuecomment-269001569,agunde406,Looks like I was working off a bad build. All tests passed.,2016-12-23 14:58:20,2016-12-23 14:58:20
https://api.github.com/repos/hyperledger/sawtooth-core/issues/49,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/269645243,https://github.com/hyperledger/sawtooth-core/pull/49#issuecomment-269645243,jjason,"@feihujiang What problem is this trying to solve?

Ah....I see PR 47 now.  So, does it make sense to solve this at this level or should it be solved in SignedObject?  If the is the level that is doing verify_signature, it seems that the PublicKey field should be put in minfo there....or am I missing something?",2016-12-29 15:24:39,2016-12-29 15:29:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/49,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/270358016,https://github.com/hyperledger/sawtooth-core/pull/49#issuecomment-270358016,feihujiang,"@jjason yes, this could be solved in SignedObject. I opened #59, please take a  look.",2017-01-04 12:15:21,2017-01-04 12:15:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/49,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278513722,https://github.com/hyperledger/sawtooth-core/pull/49#issuecomment-278513722,vaporos,"Based on the discussion and last comment, I'm assuming this should be solved within SignedObject, so closing this particular PR.",2017-02-09 01:00:02,2017-02-09 01:00:02
https://api.github.com/repos/hyperledger/sawtooth-core/issues/47,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/268332397,https://github.com/hyperledger/sawtooth-core/pull/47#issuecomment-268332397,vaporos,"If this is a case that deserves a warning, should is_valid() also return False in that case as well?",2016-12-20 19:20:14,2016-12-20 19:20:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/47,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/268500385,https://github.com/hyperledger/sawtooth-core/pull/47#issuecomment-268500385,feihujiang,"Yes, as the function of SignedObject, is_valid() should return False in this case. But I found at least EndpointRegistryTransaction and Block have no pub key and addr. We need to found is there any other signedobjects that have no pub key and addr,  fix all of them firstly, then change  is_valid() to return False. So I added a warning here.",2016-12-21 11:28:08,2016-12-21 11:28:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/47,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/268500982,https://github.com/hyperledger/sawtooth-core/pull/47#issuecomment-268500982,feihujiang,@vaporos I'll open a new PR to fix the bug that EndpointRegistryTransaction has no pub key and addr.,2016-12-21 11:31:37,2016-12-21 11:31:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/47,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/272811560,https://github.com/hyperledger/sawtooth-core/pull/47#issuecomment-272811560,feihujiang,@vaporos what's your point about this PR?,2017-01-16 09:27:34,2017-01-16 09:27:34
https://api.github.com/repos/hyperledger/sawtooth-core/issues/47,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278543648,https://github.com/hyperledger/sawtooth-core/pull/47#issuecomment-278543648,vaporos,"This change has been accepted and cherry-picked to the 0-7 branch.  Changes to ""legacy code"" that is not part of the 0.8 validator are not being merged into master, so closing this PR against master.",2017-02-09 04:23:44,2017-02-09 04:23:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/45,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/268336690,https://github.com/hyperledger/sawtooth-core/pull/45#issuecomment-268336690,vaporos,This PR needs to be rebased.,2016-12-20 19:35:29,2016-12-20 19:35:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/45,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/268461594,https://github.com/hyperledger/sawtooth-core/pull/45#issuecomment-268461594,feihujiang,"@vaporos I rebased this PR, please take a look.",2016-12-21 08:10:18,2016-12-21 08:10:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/45,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/272753943,https://github.com/hyperledger/sawtooth-core/pull/45#issuecomment-272753943,feihujiang,@vaporos I just rebased this PR. Could you please review and merge this PR?,2017-01-16 01:21:57,2017-01-16 01:21:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/45,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/278543588,https://github.com/hyperledger/sawtooth-core/pull/45#issuecomment-278543588,vaporos,"This change has been accepted and cherry-picked to the 0-7 branch.  Changes to ""legacy code"" that is not part of the 0.8 validator are not being merged into master, so closing this PR against master.",2017-02-09 04:23:17,2017-02-09 04:23:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/41,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/267008267,https://github.com/hyperledger/sawtooth-core/pull/41#issuecomment-267008267,feihujiang,"@jjason Sorry, I forget to say this PR is just an idea. The idea in this PR is accepted, isn't it? If it is, I'll update this PR tomorrow.",2016-12-14 11:12:43,2016-12-14 11:12:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/41,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/267824241,https://github.com/hyperledger/sawtooth-core/pull/41#issuecomment-267824241,jjason,@vaporos - I tend to agree.,2016-12-18 14:29:03,2016-12-18 14:29:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/40,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/266651246,https://github.com/hyperledger/sawtooth-core/pull/40#issuecomment-266651246,feihujiang,"@vaporos Could you please review this PR?  Running ./bin/run_tests totally costs too much time, this PR could run tests of specified module.",2016-12-13 05:48:06,2016-12-13 05:48:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/40,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/267895979,https://github.com/hyperledger/sawtooth-core/pull/40#issuecomment-267895979,feihujiang,"@vaporos I udpated this PR, please take a look.",2016-12-19 07:05:29,2016-12-19 07:05:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/39,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/265922116,https://github.com/hyperledger/sawtooth-core/pull/39#issuecomment-265922116,feihujiang,"test_libor_update and test_libor_update_duplicate_date failed, because renamed ""public_key"" to ""PublicKey"",  signature in CreateLIBORUpdate need to be renewed,(resigned by the private key I couldn't get).",2016-12-09 03:08:06,2016-12-09 03:08:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/39,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/265985184,https://github.com/hyperledger/sawtooth-core/pull/39#issuecomment-265985184,feihujiang,"@vaporos @agunde406  I updated this PR,  renamed ""public_key"" to ""PublicKey"", and change tests of LIBOR such that they aren't sensitive. Please review.",2016-12-09 10:44:50,2016-12-09 10:44:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/39,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/266425641,https://github.com/hyperledger/sawtooth-core/pull/39#issuecomment-266425641,feihujiang,"I updated this PR, please take a look.",2016-12-12 13:01:45,2016-12-12 13:01:45
https://api.github.com/repos/hyperledger/sawtooth-core/issues/37,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/266668957,https://github.com/hyperledger/sawtooth-core/pull/37#issuecomment-266668957,feihujiang,@vaporos Could you please have a look?,2016-12-13 07:44:51,2016-12-13 07:44:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/36,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/267225397,https://github.com/hyperledger/sawtooth-core/pull/36#issuecomment-267225397,feihujiang,"@ojalatodd I updated this PR, please have a look.",2016-12-15 02:57:41,2016-12-15 02:57:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/36,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/267903002,https://github.com/hyperledger/sawtooth-core/pull/36#issuecomment-267903002,feihujiang,"@vaporos I updated this PR according to your advice, please take a look.",2016-12-19 07:57:00,2016-12-19 07:57:00
https://api.github.com/repos/hyperledger/sawtooth-core/issues/35,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/264752138,https://github.com/hyperledger/sawtooth-core/pull/35#issuecomment-264752138,feihujiang,"@dcmiddle I updated this PR, please have a look.",2016-12-05 02:05:44,2016-12-05 02:05:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/35,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/264760033,https://github.com/hyperledger/sawtooth-core/pull/35#issuecomment-264760033,feihujiang,"@dcmiddle After this PR merged, I'll do code refactoring about [generate_identifier(signingkey)](https://github.com/hyperledger/sawtooth-core/blob/master/validator/gossip/signed_object.py#L64), [generate_signing_key(wifstr=None)](https://github.com/hyperledger/sawtooth-core/blob/master/validator/gossip/signed_object.py#L77) and [get_verifying_key(serialized_msg, serialized_sig)](https://github.com/hyperledger/sawtooth-core/blob/master/validator/gossip/signed_object.py#L93) in SignedObject, move all of them to signing module, What's your point?",2016-12-05 03:25:30,2016-12-05 03:25:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/35,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/264920947,https://github.com/hyperledger/sawtooth-core/pull/35#issuecomment-264920947,dcmiddle,"Looks like the PR is failing Pep-8 checks. The original code predated the lint rules.
You can either update the code to pass the lint checking (bin/run_lint) by 
1. excluding it (all the other tests appear exempted right now)
or 
2. update the code to make it comply

To exclude, add a line to bin/run_lint around line 41 like 
grep -v signing/tests
",2016-12-05 17:37:03,2016-12-05 17:37:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/35,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/265038970,https://github.com/hyperledger/sawtooth-core/pull/35#issuecomment-265038970,feihujiang,@dcmiddle I updated the code to make it comply. please review.,2016-12-06 02:03:08,2016-12-06 02:03:08
https://api.github.com/repos/hyperledger/sawtooth-core/issues/35,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/267228336,https://github.com/hyperledger/sawtooth-core/pull/35#issuecomment-267228336,feihujiang,"@dcmiddle I just rebased this PR, could you please take a look?",2016-12-15 03:21:11,2016-12-15 03:21:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/31,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/262414004,https://github.com/hyperledger/sawtooth-core/pull/31#issuecomment-262414004,feihujiang,@boydjohnson Could you please reivew this PR please? Thanks.,2016-11-23 01:19:04,2016-11-23 01:19:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/31,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/262555279,https://github.com/hyperledger/sawtooth-core/pull/31#issuecomment-262555279,boydjohnson,"Hi @feihujiang, I see that you didn't sign off on your commit. Can you edit the commit using ""rebase -i"" and then ""git commit --amend --signoff"". I will be back in the office on Monday, Nov 28th and will hopefully merge it in then.",2016-11-23 15:59:06,2016-11-23 15:59:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/31,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/262709642,https://github.com/hyperledger/sawtooth-core/pull/31#issuecomment-262709642,feihujiang,"@boydjohnson OK, thanks. I added the sign-off message.  ",2016-11-24 07:39:43,2016-11-24 07:39:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/31,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/263638669,https://github.com/hyperledger/sawtooth-core/pull/31#issuecomment-263638669,boydjohnson,"HI @feihujiang, I like the PR. Please rebase on current master. Our internal test system requires a directory structure that came later than your commit. Thanks.",2016-11-29 17:28:48,2016-11-29 17:28:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/31,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/264149040,https://github.com/hyperledger/sawtooth-core/pull/31#issuecomment-264149040,feihujiang,"@boydjohnson I rebased on the current master, please take a look.",2016-12-01 11:33:21,2016-12-01 11:33:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/30,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/260792287,https://github.com/hyperledger/sawtooth-core/pull/30#issuecomment-260792287,dcmiddle,"This is a great start without having been given very prescriptive requirements.
We can catch up on slack for the right policy to start with.
",2016-11-15 22:34:55,2016-11-15 22:34:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/30,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/261236666,https://github.com/hyperledger/sawtooth-core/pull/30#issuecomment-261236666,feihujiang,"@dcmiddle I updated this PR, please review. Thanks!
",2016-11-17 12:38:55,2016-11-17 12:38:55
https://api.github.com/repos/hyperledger/sawtooth-core/issues/30,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/261510775,https://github.com/hyperledger/sawtooth-core/pull/30#issuecomment-261510775,feihujiang,"Start a validator using the following command:
`./bin/txnvalidator -vvv --config ./validator/etc/permissioned-validators.json --keyfile /home/vagrant/sawtooth/keys/base000.wif`

Send a PermissionedValidatorRegistryTransaction using the following command:
`./bin/sawtooth admin validator-registry --keyfile /home/vagrant/sawtooth/keys/base000.wif --whitelist ./validator/etc/permissioned-validators.json`
",2016-11-18 11:29:21,2016-11-18 11:29:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/30,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/261921866,https://github.com/hyperledger/sawtooth-core/pull/30#issuecomment-261921866,feihujiang,"@dcmiddle Added a unit test, please take a look.",2016-11-21 12:17:38,2016-11-21 12:17:38
https://api.github.com/repos/hyperledger/sawtooth-core/issues/30,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/262316495,https://github.com/hyperledger/sawtooth-core/pull/30#issuecomment-262316495,dcmiddle,"Looks good @feihujiang 
Just need you to add the signed-off message for licensing.
(Bonus points if you rebase when you amend the commit message).",2016-11-22 18:00:41,2016-11-22 18:00:41
https://api.github.com/repos/hyperledger/sawtooth-core/issues/30,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/262413013,https://github.com/hyperledger/sawtooth-core/pull/30#issuecomment-262413013,feihujiang,"@dcmiddle Added the signed-off message for licensing using '''git commit -s''', please have a look.",2016-11-23 01:12:48,2016-11-23 01:12:48
https://api.github.com/repos/hyperledger/sawtooth-core/issues/30,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/262485793,https://github.com/hyperledger/sawtooth-core/pull/30#issuecomment-262485793,feihujiang,"@dcmiddle I updated the PR, and ran ./bin/run_tests locally, it finished successfully. Please take a look.",2016-11-23 11:05:17,2016-11-23 11:05:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/29,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/253426983,https://github.com/hyperledger/sawtooth-core/pull/29#issuecomment-253426983,feihujiang,"@boydjohnson I updated this PR, please review.
",2016-10-13 06:37:51,2016-10-13 06:37:51
https://api.github.com/repos/hyperledger/sawtooth-core/issues/26,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245520216,https://github.com/hyperledger/sawtooth-core/pull/26#issuecomment-245520216,danmack,"Can one of the admins verify this patch?
",2016-09-08 07:49:04,2016-09-08 07:49:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/26,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245520487,https://github.com/hyperledger/sawtooth-core/pull/26#issuecomment-245520487,feihujiang,"@boydjohnson Please review this PR, thanks.
",2016-09-08 07:50:14,2016-09-08 07:50:14
https://api.github.com/repos/hyperledger/sawtooth-core/issues/25,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245401647,https://github.com/hyperledger/sawtooth-core/pull/25#issuecomment-245401647,vaporos,"ok to test
",2016-09-07 20:11:25,2016-09-07 20:11:25
https://api.github.com/repos/hyperledger/sawtooth-core/issues/23,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245047628,https://github.com/hyperledger/sawtooth-core/pull/23#issuecomment-245047628,danmack,"Can one of the admins verify this patch?
",2016-09-06 18:39:09,2016-09-06 18:39:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/244859565,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-244859565,feihujiang,"@boydjohnson Could you please review this PR? Thanks, and [here](https://github.com/hyperledger/sawtooth-core/pull/22/files#diff-2223ebfcb93957679096022eb4513f74R210) fixes a bug.
",2016-09-06 06:19:37,2016-09-06 06:19:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245047630,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-245047630,danmack,"Can one of the admins verify this patch?
",2016-09-06 18:39:10,2016-09-06 18:39:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245108602,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-245108602,boydjohnson,"@feihujiang #19 had to be reverted. Jenkins exited with a success, but running tests locally fail on marketplace. Try running 'nose2 -v' from within mktplace. More work needs to be done on #19 before it can be merged in again.
",2016-09-06 21:55:42,2016-09-06 21:55:42
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245162249,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-245162249,feihujiang,"@boydjohnson I moved codes of #19  to this PR, And runned 'nose2 -v' within mktplace, all tests passed. Please take a look.
",2016-09-07 03:08:21,2016-09-07 03:08:21
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245162348,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-245162348,feihujiang,"And [is_valid_name()](https://github.com/feihujiang/sawtooth-core/blob/4c018946a512bc7d99e779aebc4ce0849970f50c/extensions/mktplace/mktplace/transactions/market_place_object_update.py#L120) checks whether this name already exists, and [apply()](https://github.com/hyperledger/sawtooth-core/pull/22/files#diff-2223ebfcb93957679096022eb4513f74R159)  updates the name map etc. So _register() and __unregister() are useless, remove them.
",2016-09-07 03:09:19,2016-09-07 03:09:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245313156,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-245313156,boydjohnson,"@feihujiang The extra logging that was put in shows up in the tests. It doesn't cause them to fail, but there are many ""identifier for name //Bank-trader/offer-c-trader not found"" warnings. I think that logging code is good, but can you look into why so many warnings are being thrown?
",2016-09-07 15:13:37,2016-09-07 15:13:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245515003,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-245515003,feihujiang,"I looked into the codes, and found the reason, because everytime we invoke [client_cli.main()](https://github.com/hyperledger/sawtooth-core/blob/master/extensions/mktplace/tests/integration/test_all_transactions.py#L65), Logger().addHandler(clog) [here](https://github.com/hyperledger/sawtooth-core/blob/master/extensions/mktplace/mktmain/client_cli.py#L1532), too many handlers are added. So test_transactions_reg() throws two replicated warnings,  test_transactions_unr() throws three replicated warnings etc.
",2016-09-08 07:22:46,2016-09-08 07:22:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245516776,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-245516776,feihujiang,"This PR don't refer the bug that many warnings are being thrown. I'll open a new PR to fix this bug.
",2016-09-08 07:32:16,2016-09-08 07:32:16
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245791063,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-245791063,feihujiang,"@boydjohnson Please take a look.
",2016-09-09 01:17:09,2016-09-09 01:17:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245846872,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-245846872,feihujiang,"Just rebased.
",2016-09-09 08:03:06,2016-09-09 08:03:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/246408936,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-246408936,boydjohnson,"Hi @feihujiang , This looks like a good PR. We are making some large changes to have mktplace use ObjectStore from journal.object_store and UpdatesTransaction (A larger change) from journal.transaction. I'm holding off on testing this PR to have those changes go through. I will look at this again when the ObjectStore change goes through. Thanks for your patience.
",2016-09-12 16:41:10,2016-09-12 16:41:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/246446477,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-246446477,boydjohnson,"Hi @feihujiang, once this is rebased it should be good to go. 
",2016-09-12 18:35:05,2016-09-12 18:35:05
https://api.github.com/repos/hyperledger/sawtooth-core/issues/22,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/246624205,https://github.com/hyperledger/sawtooth-core/pull/22#issuecomment-246624205,feihujiang,"@boydjohnson I rebased, please review.
",2016-09-13 09:19:50,2016-09-13 09:19:50
https://api.github.com/repos/hyperledger/sawtooth-core/issues/19,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/244114052,https://github.com/hyperledger/sawtooth-core/pull/19#issuecomment-244114052,boydjohnson,"Hi @feihujiang when starting a validator with this pull request I get this error:
 File ""/project/sawtooth-core/extensions/mktplace/mktplace/transactions/market_place.py"", line 514, in apply
    self.Update.apply(store)
  File ""/project/sawtooth-core/extensions/mktplace/mktplace/transactions/participant_update.py"", line 116, in apply
    super(Register, self).apply(store)
  File ""/project/sawtooth-core/extensions/mktplace/mktplace/transactions/market_place_object_update.py"", line 158, in apply
    name = self._get_absolute_name(store)
  File ""/project/sawtooth-core/extensions/mktplace/mktplace/transactions/participant_update.py"", line 110, in _get_absolute_name
    name = ""{0}{1}"".format(store.i2n(self.CreatorID), self.Name)
AttributeError: 'Register' object has no attribute 'CreatorID'

Can you show the initial behavior that this PR is fixing?
",2016-09-01 15:22:06,2016-09-01 15:22:06
https://api.github.com/repos/hyperledger/sawtooth-core/issues/19,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/244261451,https://github.com/hyperledger/sawtooth-core/pull/19#issuecomment-244261451,feihujiang,"@boydjohnson Sorry, I made a mistake, fixed and updated this PR. Please review again, thanks.
",2016-09-02 01:40:54,2016-09-02 01:40:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/19,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/244264443,https://github.com/hyperledger/sawtooth-core/pull/19#issuecomment-244264443,feihujiang,"The bug occurs when building a transaction block which has more than a transaction with the same name. The validator invoking is_valid() could't check the error. This PR fixes this bug.
",2016-09-02 02:03:57,2016-09-02 02:03:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/18,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/243109101,https://github.com/hyperledger/sawtooth-core/pull/18#issuecomment-243109101,feihujiang,"@vaporos Address part of server-side prevalidation, please review.
",2016-08-29 12:24:03,2016-08-29 12:24:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/18,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/243109918,https://github.com/hyperledger/sawtooth-core/pull/18#issuecomment-243109918,feihujiang,"POST /prevalidate
Do server-side prevalidation.
",2016-08-29 12:28:03,2016-08-29 12:28:03
https://api.github.com/repos/hyperledger/sawtooth-core/issues/18,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/243241561,https://github.com/hyperledger/sawtooth-core/pull/18#issuecomment-243241561,vaporos,"The changes to mktclient should (at least eventually) be more extensive, removing it's local state entirely in favor of getting that state from the server.  (And, essentially, removing any direct interaction between mktclient and the mktplace transaction family.)  We don't need to do it all at once, but it is good to keep in mind the goal is to remove that dependency.
",2016-08-29 20:14:46,2016-08-29 20:14:46
https://api.github.com/repos/hyperledger/sawtooth-core/issues/18,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/243242004,https://github.com/hyperledger/sawtooth-core/pull/18#issuecomment-243242004,vaporos,"Should we explicitly handle sessions with create/delete?  At a minimum, we need some way to clean up sessions from the validator process.
",2016-08-29 20:16:19,2016-08-29 20:16:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/18,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/243746713,https://github.com/hyperledger/sawtooth-core/pull/18#issuecomment-243746713,feihujiang,"@vaporos I updated this PR, and support creating/deleting sessions, please review. And yes, the goal is removing all of the interaction between mktclient and the mktplace transaction family. But if session is disable, state from the server has no pending transactions now, but some commands need [n2i](https://github.com/hyperledger/sawtooth-core/blob/master/extensions/mktplace/mktmain/client_cli.py#L600),  so I remain [transaction.apply()](https://github.com/feihujiang/sawtooth-core/blob/897adbdac01aabb7f9924495306ff84bca0f4d8d/extensions/mktplace/mktplace/mktplace_client.py#L185) function. I'll remove it when I have a good idea to handle this case. Or could you give me some advice?
",2016-08-31 12:20:19,2016-08-31 12:20:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/18,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245047632,https://github.com/hyperledger/sawtooth-core/pull/18#issuecomment-245047632,danmack,"Can one of the admins verify this patch?
",2016-09-06 18:39:10,2016-09-06 18:39:10
https://api.github.com/repos/hyperledger/sawtooth-core/issues/18,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245491283,https://github.com/hyperledger/sawtooth-core/pull/18#issuecomment-245491283,vaporos,"- ./bin/run_lint
  ************\* Module txnserver.web_pages.prevalidation_page
  E: 33, 0: Inheriting 'Interface', which is not a class. (inherit-non-class)
",2016-09-08 04:35:27,2016-09-08 04:35:27
https://api.github.com/repos/hyperledger/sawtooth-core/issues/18,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245564788,https://github.com/hyperledger/sawtooth-core/pull/18#issuecomment-245564788,feihujiang,"@vaporos Could you give some advice if we don't want to add a zope dependency?
",2016-09-08 11:05:29,2016-09-08 11:05:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/17,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/242343250,https://github.com/hyperledger/sawtooth-core/pull/17#issuecomment-242343250,feihujiang,"And print error message returned from server.
",2016-08-25 10:28:22,2016-08-25 10:28:22
https://api.github.com/repos/hyperledger/sawtooth-core/issues/17,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245047635,https://github.com/hyperledger/sawtooth-core/pull/17#issuecomment-245047635,danmack,"Can one of the admins verify this patch?
",2016-09-06 18:39:11,2016-09-06 18:39:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/13,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/241644085,https://github.com/hyperledger/sawtooth-core/pull/13#issuecomment-241644085,feihujiang,"Rebased for resolving conflicts.
",2016-08-23 06:58:24,2016-08-23 06:58:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/13,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/244270944,https://github.com/hyperledger/sawtooth-core/pull/13#issuecomment-244270944,feihujiang,"Rebased for resolving conflicts again.
",2016-09-02 02:58:36,2016-09-02 02:58:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/13,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/244271051,https://github.com/hyperledger/sawtooth-core/pull/13#issuecomment-244271051,feihujiang,"@vaporos Could you please review this PR? Thanks!
",2016-09-02 02:59:19,2016-09-02 02:59:19
https://api.github.com/repos/hyperledger/sawtooth-core/issues/13,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/246701606,https://github.com/hyperledger/sawtooth-core/pull/13#issuecomment-246701606,vaporos,"ok to test
",2016-09-13 14:34:30,2016-09-13 14:34:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/13,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/247971087,https://github.com/hyperledger/sawtooth-core/pull/13#issuecomment-247971087,feihujiang,"Just rebased, resolve conflicts.
",2016-09-19 11:41:33,2016-09-19 11:41:33
https://api.github.com/repos/hyperledger/sawtooth-core/issues/13,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/267591734,https://github.com/hyperledger/sawtooth-core/pull/13#issuecomment-267591734,vaporos,"Closing, as we do not have concrete examples of what this fixes and journal_core itself is being restructured in master.  Also, it is difficult to determine possible regressions.  If this is still desired, please open a PR against the 0-7 branch and with more description and examples.",2016-12-16 13:15:35,2016-12-16 13:15:35
https://api.github.com/repos/hyperledger/sawtooth-core/issues/12,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/241358699,https://github.com/hyperledger/sawtooth-core/pull/12#issuecomment-241358699,feihujiang,"Just rebased for conflicts.
",2016-08-22 09:24:29,2016-08-22 09:24:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/12,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245047639,https://github.com/hyperledger/sawtooth-core/pull/12#issuecomment-245047639,danmack,"Can one of the admins verify this patch?
",2016-09-06 18:39:11,2016-09-06 18:39:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/12,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245301641,https://github.com/hyperledger/sawtooth-core/pull/12#issuecomment-245301641,vaporos,"I can not repeat the case where we would get a 302 on an exception.  Below is my test with xo (with enhanced logging to show the code).  Even if we did get 302 via an exception, I think that should not necessarily be interpreted as a successful pending status condition.

`vagrant@vagrant-ubuntu-trusty-64:/project/sawtooth-core$ ./bin/xo create game232 --wait -vv
[14:32:23 DEBUG   client] fetch state from http://localhost:8800/XoTransaction/*
[14:32:23 DEBUG   client] get content from url <http://localhost:8800/block?blockcount=10>
[14:32:23 DEBUG   client] full fetch of state for block 934586b9a68d6e75
[14:32:23 DEBUG   client] get content from url <http://localhost:8800/store/XoTransaction/*?blockid=934586b9a68d6e75>
[14:32:23 DEBUG   client] set signing key from file /home/vagrant/.sawtooth/keys/vagrant.wif
[14:32:23 DEBUG   txn_family] minfo: {'Action': 'CREATE', 'Name': 'game232'}
[14:32:23 DEBUG   txn_family] checking (16AKUhxZQ822wbApz9YzpY6pPNFEJHWBiT game232 None)
[14:32:23 DEBUG   txn_family] minfo: {}
[14:32:23 DEBUG   client] Posting transaction: de97e5ce10376870
[14:32:23 DEBUG   client] post transaction to http://localhost:8800/Xo/Transaction with DATALEN=349, DATA=<?kTransaction?fActionfCREATElDependencies?dNameggame232eNonce?A??    =ǃ?iSignaturexXGyerEFlsO5+xh2ee2rA9xSrf3co87wm+zmteCtG/b60ZgQ3lN+XVQT1sJYZF08IhMNOd6hqMAKw8cA9+d78Mlac=oTransactionTypen/XoTransactioni__NONCE__?A??   =?2jm__SIGNATURE__xXHCSmxegIV4tXg0dETpCa+rbVDpHvIgYkNmm1ZOwolo+dbmZx5ZTxnp9fLxEjhRGQmINsREaY25HnAhYF0+f7HU4=h__TYPE__o/Xo/Transaction>
[14:32:23 DEBUG   client] {
  ""Transaction"": {
    ""Action"": ""CREATE"", 
    ""Dependencies"": [], 
    ""Name"": ""game232"", 
    ""Nonce"": 1473258743.117431, 
    ""Signature"": ""GyerEFlsO5+xh2ee2rA9xSrf3co87wm+zmteCtG/b60ZgQ3lN+XVQT1sJYZF08IhMNOd6hqMAKw8cA9+d78Mlac="", 
    ""TransactionType"": ""/XoTransaction""
  }, 
  ""__NONCE__"": 1473258743.128077, 
  ""__SIGNATURE__"": ""HCSmxegIV4tXg0dETpCa+rbVDpHvIgYkNmm1ZOwolo+dbmZx5ZTxnp9fLxEjhRGQmINsREaY25HnAhYF0+f7HU4="", 
  ""__TYPE__"": ""/Xo/Transaction""
}
[14:32:23 DEBUG   txn_family] apply (16AKUhxZQ822wbApz9YzpY6pPNFEJHWBiT game232 None)
[14:32:23 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:32:23 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:32:28 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:32:28 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:32:33 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:32:33 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:32:38 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:32:38 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:32:43 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:32:43 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:32:48 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:32:48 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:32:53 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:32:53 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:32:58 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:32:58 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:33:03 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:33:03 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:33:08 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:33:08 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:33:13 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:33:13 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:33:18 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:33:18 DEBUG   client] waiting for transaction de97e5ce10376870 to commit (pending:302)
[14:33:23 DEBUG   client] get content from url <http://localhost:8800/transaction/de97e5ce10376870>
[14:33:23 WARNING client] transaction de97e5ce10376870 still uncommitted after 60 sec
`
",2016-09-07 14:39:01,2016-09-07 14:39:01
https://api.github.com/repos/hyperledger/sawtooth-core/issues/12,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245574498,https://github.com/hyperledger/sawtooth-core/pull/12#issuecomment-245574498,feihujiang,"@vaporos Why can't ? When a transaction exists but has not been committed, The server return error_response that code = 302.  I have founded codes in transaction_page  [raise Error(http.FOUND, 'transaction not committed {0}'.format(txnid))](https://github.com/hyperledger/sawtooth-core/blob/master/validator/txnserver/web_pages/transaction_page.py#L80)   and [Here](https://github.com/hyperledger/sawtooth-core/blob/master/validator/txnserver/web_pages/base_page.py#L128) .
",2016-09-08 11:55:11,2016-09-08 11:55:11
https://api.github.com/repos/hyperledger/sawtooth-core/issues/12,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/245577477,https://github.com/hyperledger/sawtooth-core/pull/12#issuecomment-245577477,feihujiang,"@vaporos You can  repeat the case as follows:
./bin/xo create game232  -v
Get the transactionID
./bin/sawtooth transaction status transactionID
If the transaction has not been committed, you will get an 302 error.
",2016-09-08 12:09:30,2016-09-08 12:09:30
https://api.github.com/repos/hyperledger/sawtooth-core/issues/11,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/238787339,https://github.com/hyperledger/sawtooth-core/pull/11#issuecomment-238787339,feihujiang,"@vaporos Could you please review this PR?  This pr implements ""sawtooth block list|show [--url URL]"" command you suggested in the slack. Looking forward to your feedback, thanks very much. And I'm working on the other commands like ""sawtooth store"" etc.
",2016-08-10 07:28:29,2016-08-10 07:28:29
https://api.github.com/repos/hyperledger/sawtooth-core/issues/11,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/238894103,https://github.com/hyperledger/sawtooth-core/pull/11#issuecomment-238894103,vaporos,"We need full names in the Signed-off-by: block.
",2016-08-10 14:58:54,2016-08-10 14:58:54
https://api.github.com/repos/hyperledger/sawtooth-core/issues/11,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/239148359,https://github.com/hyperledger/sawtooth-core/pull/11#issuecomment-239148359,feihujiang,"I'm a Chinese person,  FeihuJiang is exactly my full name.
",2016-08-11 12:36:36,2016-08-11 12:36:36
https://api.github.com/repos/hyperledger/sawtooth-core/issues/11,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/239148509,https://github.com/hyperledger/sawtooth-core/pull/11#issuecomment-239148509,feihujiang,"@vaporos I updated this PR, please take a look.
",2016-08-11 12:37:15,2016-08-11 12:37:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/11,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/239148977,https://github.com/hyperledger/sawtooth-core/pull/11#issuecomment-239148977,feihujiang,"And I added ""#sawtooth transaction"" and ""#sawtooth store"" commands in this commit.
",2016-08-11 12:39:24,2016-08-11 12:39:24
https://api.github.com/repos/hyperledger/sawtooth-core/issues/11,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/239233134,https://github.com/hyperledger/sawtooth-core/pull/11#issuecomment-239233134,vaporos,"This needs to pass ./bin/run_lint.  Essentially, run './bin/run_lint' within vagrant, and if it outputs anything, it doesn't pass.  Our overall goal is PEP8 (within reason), and run_lint are the things we enforce from a build system perspective.

`vagrant@vagrant-ubuntu-trusty-64:/project/sawtooth-core$ ./bin/run_lint 
./sawtooth/cli.py:164:1: E302 expected 2 blank lines, found 1
./sawtooth/cli.py:167:80: E501 line too long (87 > 79 characters)
./sawtooth/cli.py:209:1: E302 expected 2 blank lines, found 1
./sawtooth/cli.py:212:80: E501 line too long (87 > 79 characters)
./sawtooth/cli.py:267:1: E302 expected 2 blank lines, found 1
./sawtooth/cli.py:270:80: E501 line too long (87 > 79 characters)
./sawtooth/cli.py:299:1: E302 expected 2 blank lines, found 1
./sawtooth/cli.py:451:1: E302 expected 2 blank lines, found 1
./sawtooth/cli.py:459:1: E302 expected 2 blank lines, found 1
./sawtooth/cli.py:476:24: E272 multiple spaces before keyword
./sawtooth/cli.py:486:1: E302 expected 2 blank lines, found 1
./sawtooth/cli.py:501:80: E501 line too long (81 > 79 characters)
./sawtooth/cli.py:501:82: W291 trailing whitespace
./sawtooth/cli.py:504:24: E272 multiple spaces before keyword
./sawtooth/cli.py:505:80: E501 line too long (91 > 79 characters)
./sawtooth/cli.py:507:80: E501 line too long (81 > 79 characters)
./sawtooth/cli.py:510:80: E501 line too long (86 > 79 characters)
./sawtooth/cli.py:517:1: E302 expected 2 blank lines, found 1
./sawtooth/cli.py:542:80: E501 line too long (86 > 79 characters)
./sawtooth/cli.py:543:80: E501 line too long (92 > 79 characters)
./sawtooth/cli.py:550:1: E302 expected 2 blank lines, found 1
./sawtooth/client.py:573:80: E501 line too long (94 > 79 characters)
./sawtooth/client.py:575:80: E501 line too long (88 > 79 characters)
./sawtooth/client.py:583:80: E501 line too long (82 > 79 characters)
./sawtooth/client.py:715:80: E501 line too long (88 > 79 characters)
./sawtooth/client.py:716:76: W291 trailing whitespace
`
",2016-08-11 17:34:57,2016-08-11 17:34:57
https://api.github.com/repos/hyperledger/sawtooth-core/issues/11,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/239235767,https://github.com/hyperledger/sawtooth-core/pull/11#issuecomment-239235767,vaporos,"I played around with the various commands here and am really liking this. :)
",2016-08-11 17:44:04,2016-08-11 17:44:04
https://api.github.com/repos/hyperledger/sawtooth-core/issues/11,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/239390527,https://github.com/hyperledger/sawtooth-core/pull/11#issuecomment-239390527,feihujiang,"@vaporos Glad you like this. I  ran  './bin/run_lint', and updated this commit, please review.
",2016-08-12 08:30:15,2016-08-12 08:30:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/7,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/234372721,https://github.com/hyperledger/sawtooth-core/pull/7#issuecomment-234372721,boydjohnson,"Thanks @feihujiang, This will be merged in within the hour. Thanks for the good work.
",2016-07-21 20:24:37,2016-07-21 20:24:37
https://api.github.com/repos/hyperledger/sawtooth-core/issues/7,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/234400002,https://github.com/hyperledger/sawtooth-core/pull/7#issuecomment-234400002,boydjohnson,"Hi @feihujiang Just to let you know I won't be able to merge it until tomorrow.
",2016-07-21 22:11:43,2016-07-21 22:11:43
https://api.github.com/repos/hyperledger/sawtooth-core/issues/7,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/234467873,https://github.com/hyperledger/sawtooth-core/pull/7#issuecomment-234467873,feihujiang,"@boydjohnson I saw the sentence ""Before contributing any code, note that you will be asked to sign-off on the [Developer Certificate of Origin](http://developercertificate.org/)"" in [CONTRIBUTING.md](https://github.com/hyperledger/sawtooth-core/blob/master/CONTRIBUTING.md).
 Where should I sign-off on the Developer Certificate of Origin?  Or just using git commit -s/--signoff is OK?
",2016-07-22 06:50:09,2016-07-22 06:50:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/7,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/235095852,https://github.com/hyperledger/sawtooth-core/pull/7#issuecomment-235095852,boydjohnson,"I don't know about that. 

The commit was merged in, but I did something wrong on merging it that the commit hash was changed and so your PR wasn't closed by the commit being merged in.

You can check out https://github.com/hyperledger/sawtooth-core/commit/e7a57efb1c52b0b5a460f0f940b55a7fb3bed59a to see your commit in the codebase.

This PR will have to be closed manually.
",2016-07-25 21:46:09,2016-07-25 21:46:09
https://api.github.com/repos/hyperledger/sawtooth-core/issues/7,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/235136149,https://github.com/hyperledger/sawtooth-core/pull/7#issuecomment-235136149,feihujiang,"OK， close this PR manually.
",2016-07-26 01:26:17,2016-07-26 01:26:17
https://api.github.com/repos/hyperledger/sawtooth-core/issues/6,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/233881819,https://github.com/hyperledger/sawtooth-core/pull/6#issuecomment-233881819,feihujiang,"@rbuysse Could you please review this PR? 
",2016-07-20 08:24:15,2016-07-20 08:24:15
https://api.github.com/repos/hyperledger/sawtooth-core/issues/6,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/234129823,https://github.com/hyperledger/sawtooth-core/pull/6#issuecomment-234129823,feihujiang,"Yes, you are right!
",2016-07-21 01:11:44,2016-07-21 01:11:44
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/218577821,https://github.com/hyperledger/sawtooth-core/pull/2#issuecomment-218577821,vaporos,"Chris, can you change header to use underscores (to match the rest of the file) and wrap at 80 characters?  Thanks!
",2016-05-11 20:20:18,2016-05-11 20:20:18
https://api.github.com/repos/hyperledger/sawtooth-core/issues/2,https://api.github.com/repos/hyperledger/sawtooth-core/issues/comments/222190645,https://github.com/hyperledger/sawtooth-core/pull/2#issuecomment-222190645,christo4ferris,"@vaporos bump
",2016-05-27 16:22:01,2016-05-27 16:22:01
