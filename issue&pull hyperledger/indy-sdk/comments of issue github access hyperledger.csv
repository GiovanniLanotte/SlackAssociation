url issues,url_api comment,url_html comment,user create comment,body,created_at,updated_at
https://api.github.com/repos/hyperledger/indy-sdk/issues/1570,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/478766727,https://github.com/hyperledger/indy-sdk/pull/1570#issuecomment-478766727,cobear25,"I was just about to create this same PR myself. It looks like version 1.8.2 is finally there and working with the latest podspec, after running pod install though it doesn't seem to actually bring in the framework, it's just an empty pod. Any idea what might be going on there?",2019-04-01 22:13:26,2019-04-01 22:13:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/1570,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/478904611,https://github.com/hyperledger/indy-sdk/pull/1570#issuecomment-478904611,Artemkaaas,@cobear25  Thanks. We will fix it. a nested folder `libindy-objc` is needed.,2019-04-02 08:51:19,2019-04-02 08:51:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/1567,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/477767433,https://github.com/hyperledger/indy-sdk/pull/1567#issuecomment-477767433,dhh1128,"This seems like a good idea in theory. However, I think importing from various directory paths makes python code a bit ugly, so I am wondering if we'd be better off using hard links instead--that is, make the same file (e.g., Step1.cs) be hard linked to several places in the directory tree, instead of stored in a single common location.

I am not super strong on this idea; I'm just wondering aloud if this would be better. Feel free to push back.",2019-03-28 20:55:30,2019-03-28 20:55:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/1567,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/477780158,https://github.com/hyperledger/indy-sdk/pull/1567#issuecomment-477780158,r0qs,"@dhh1128, my initial idea was to just change the location of the readme files mainly, centralizing the information, the duplicated codes will still existing after this PR.

But yeah, would be better to normalize this too, maybe using hard links as you mentioned, but how to deal with cases where the same *step* doesn't do exactly the same thing? For instance, look at [this step2](https://github.com/hyperledger/indy-sdk/blob/master/docs/how-tos/write-did-and-query-verkey/rust/src/step2.rs) and [this other step2](https://github.com/hyperledger/indy-sdk/blob/master/docs/how-tos/rotate-key/rust/src/step2.rs), where not only the content of the files are different, but also the naming convention. The name can be easily normalized, but I don't know how to avoid duplication of the code in this case.

The current directory structure of the write-did-and-query-verkey example is:
```
write-did-and-query-verkey
├── cs
│   ├── Program.cs
│   ├── README.md
│   ├── step2.partial
│   ├── step3.partial
│   ├── step4.partial
│   ├── step5.partial
│   ├── template.cs
│   └── write-did-and-query-verkey.csproj
├── java
│   ├── README.md
│   ├── step2.java
│   ├── step3.java
│   ├── step4.java
│   ├── step5.java
│   ├── template.java
│   └── WriteDIDAndQueryVerkey.java
├── nodejs
│   ├── colors.js
│   ├── package.json
│   ├── README.md
│   ├── step2.js
│   ├── step3.js
│   ├── step4.js
│   ├── step5.js
│   ├── template.js
│   ├── util.js
│   └── writeDidAndQueryVerkey.js
├── python
│   ├── extra
│   │   └── add_nym.py
│   ├── README.md
│   ├── step2.py
│   ├── step3.py
│   ├── step4.py
│   ├── step5.py
│   ├── template.py
│   └── write_did_and_query_verkey.py
├── README.md
├── rust
│   ├── Cargo.toml
│   ├── README.md
│   └── src
│       ├── step2.rs
│       ├── step3.rs
│       ├── step4.rs
│       ├── step5.rs
│       ├── template.rs
│       └── write-did-and-query-verkey.rs
└── wallet-slide.png
```
Ans as you can see there is a readme file for every code sample that are basically copies of each other, which can lead to errors, as this one [here](https://github.com/hyperledger/indy-sdk/tree/master/docs/how-tos/negotiate-proof/nodejs#step-1), where someone probably copied the step1 from the python example, but forgot to change ` a python editor` to `a javascript editor`.

My idea is to reduce the probability of this kind of errors occur, making this structure:
```
write-did-and-query-verkey
├── cs
│   ├── Program.cs
│   ├── Template.cs
│   ├── WriteDIDAndQueryVerkey.cs
│   └── write-did-and-query-verkey.csproj
├── java
│   ├── step2.java
│   ├── step3.java
│   ├── step4.java
│   ├── step5.java
│   ├── template.java
│   └── WriteDIDAndQueryVerkey.java
├── nodejs
│   ├── colors.js
│   ├── package.json
│   ├── step2.js
│   ├── step3.js
│   ├── step4.js
│   ├── step5.js
│   ├── template.js
│   ├── util.js
│   └── writeDidAndQueryVerkey.js
├── python
│   ├── extra
│   │   └── add_nym.py
│   ├── step2.py
│   ├── step3.py
│   ├── step4.py
│   ├── step5.py
│   ├── template.py
│   └── write_did_and_query_verkey.py
├── README.md
├── rust
│   ├── Cargo.toml
│   └── src
│       ├── step2.rs
│       ├── step3.rs
│       ├── step4.rs
│       ├── step5.rs
│       ├── template.rs
│       └── write-did-and-query-verkey.rs
└── wallet-slide.png
```

Here, you only have one readme file that describe the example scenario, independent of the programming language chosen by the reader, since all the examples describe the same scenario and only the code changes..",2019-03-28 21:35:39,2019-03-29 00:11:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/1567,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/477809350,https://github.com/hyperledger/indy-sdk/pull/1567#issuecomment-477809350,dhh1128,"Ah yes, you're right--I misunderstood. I was focused on a different problem, which is that often step X of a given how-to is identical to step X of a different how-to. For example, the first few steps of the how-to for issuing credentials are identical to the steps in the ""write a DID to the ledger"" how-to. We can solve that problem with relative hyperlinks. The problem you're solving is different, and I like your solution. So +1 from me.",2019-03-28 23:36:10,2019-03-28 23:36:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/1567,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/478050392,https://github.com/hyperledger/indy-sdk/pull/1567#issuecomment-478050392,johncallahan,"I've been refactoring the rust how-tos lately ([1536 - Save Schema](https://github.com/hyperledger/indy-sdk/pull/1536), [1565 - Issue Credential](https://github.com/hyperledger/indy-sdk/pull/1565)) with two more to go (Proof Verification and Secure Messaging - I'm already done, but I'm submitting one PR at a time).   These examples have proved invaluable to me understanding the whole indy-sdk API (wallet, ledger, etc.)

In each case, I built a Rust project with separate ""cargo new <name> --bin"" project and used src/main.rs and a working Cargo.toml file to make sure the how-to example actually works.  While I understand the step2.rs, step3.rs, etc. process, it seems we could improve the pain factor for newbies.  At least on the rust examples.",2019-03-29 15:54:01,2019-03-29 15:54:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/1567,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/478298513,https://github.com/hyperledger/indy-sdk/pull/1567#issuecomment-478298513,r0qs,"Hi @dhh1128, I think that I finished, below is a summary of my tests, if there is something that needs to be fixed, please let me know. I didn't fix the rust example since @johncallahan already did in other PRs. I'll also try to finish the nodejs examples, but I think that is better to do that in other PRs changing only the code and applying the relative hyperlinks approach that you suggested.

I = Implemented and tested
F = Implemented, but fail or wasn't tested by me
N = Not implemented or incomplete

| How-to                             | Nodejs | Python | Rust | Java | .Net | Objective C |
| ---------------------------------- |:------:|:------:|:----:|:----:|:----:|:-----------:|
| Write a DID and Query Its Verkey   | I      | I      | I    | F    | N    | N           |
| Rotate a Key                       | I      | I      | F    | F    | N    | N           |
| Save a Schema and Cred Def         | N      | I      | I    | F    | N    | N           |
| Issue a Credential                 | N      | I      | F    | F    | N    | N           |
| Negotiate a Proof                  | I      | I      | F    | N    | N    | N           |
| Send a Secure Message              | N      | I      | F    | N    | N    | N           |

Tested with versions:
nodejs v11.13.0
python 3.7.3
rustc 1.33.0",2019-03-30 23:34:32,2019-04-01 08:51:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1567,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/479280296,https://github.com/hyperledger/indy-sdk/pull/1567#issuecomment-479280296,johncallahan,I just submitted the last PRs to complete the update of the rust how-tos   (#1565 Issue Credental and Negotiate Proof; #1572 Send Secure Message and Rotate Key).  I would next like to update the READMEs and Cargo.toml to better guide newbies.,2019-04-03 01:04:27,2019-04-03 01:04:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/1540,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/473852644,https://github.com/hyperledger/indy-sdk/pull/1540#issuecomment-473852644,AxelNennker,"Argh, unneeded changes ended up in this PR. Closing this.",2019-03-18 10:24:39,2019-03-18 10:24:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/1537,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/473725815,https://github.com/hyperledger/indy-sdk/pull/1537#issuecomment-473725815,kdenhartog,@lovesh can we get one of the BCGov team guys ( @swcurran can you let the person who worked on this know of this change ) to check and make sure the VON implementation works with these changes.,2019-03-17 23:19:21,2019-03-17 23:19:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/1537,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/473730140,https://github.com/hyperledger/indy-sdk/pull/1537#issuecomment-473730140,swcurran,@cywolf should look at this.  He and @telegramsam did some work on this last week and Andrew has a test script that can be used to look into this.,2019-03-18 00:12:03,2019-03-18 00:12:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/1537,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/473847728,https://github.com/hyperledger/indy-sdk/pull/1537#issuecomment-473847728,jovfer,@lovesh @kdenhartog @swcurran @TelegramSam I think update for the HIPE should be raised and discussed before merging this PR,2019-03-18 10:10:35,2019-03-18 10:10:35
https://api.github.com/repos/hyperledger/indy-sdk/issues/1531,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472865577,https://github.com/hyperledger/indy-sdk/pull/1531#issuecomment-472865577,Patrik-Stas,"@jovfer Probably not critical to include package-lock.json in vcx demo, but a rule of thumb is to include package-lock.json in repository. The reasoning behind it is here https://stackoverflow.com/questions/44206782/do-i-commit-the-package-lock-json-file-created-by-npm-5/44210813 Particularly good to note comments by curiousdannii  and  Panu Horsmalahti under the accepted answer.",2019-03-14 13:56:31,2019-03-14 13:56:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/1531,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472970608,https://github.com/hyperledger/indy-sdk/pull/1531#issuecomment-472970608,mattraffel,Why are we duplicating what I already did and proved it didn't work?,2019-03-14 17:14:48,2019-03-14 17:14:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/1531,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472990352,https://github.com/hyperledger/indy-sdk/pull/1531#issuecomment-472990352,Artemkaaas,@Patrik-Stas In my opinnion vcx demo should be moved to the samples folder. And lock file will be committed there. But for wrapper lock file shouldn't be commited. I also have checked if openssl and zmq wrappers do i.,2019-03-14 17:58:46,2019-03-14 17:58:46
https://api.github.com/repos/hyperledger/indy-sdk/issues/1531,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472993177,https://github.com/hyperledger/indy-sdk/pull/1531#issuecomment-472993177,Artemkaaas,"@mattraffel Yesterday you wrote that couldn't achive changes we had agreed before (removing lock files from folder).
I had tried the solutionyou you had provided and it didn't work for me.
I tried to solve tsconfig errors and pretty fast found the solution.",2019-03-14 18:05:21,2019-03-14 18:05:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/1531,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/473212564,https://github.com/hyperledger/indy-sdk/pull/1531#issuecomment-473212564,jovfer,"@mattraffel in other words Artem not duplicates but extend your attempt and have found a solution

@Patrik-Stas @Artemkaaas @mattraffel I think we have 2 options: 
1) merge this one (removing lock files)
2) or use `npm audit fix` and just increment problematic dependency issue.

2nd option wasn't work in Matt's environment (the PR #1528 just re-generates lock files, without increment of nested dependency version)
but in my env I'm able to have updated dependency and resolved security warning ",2019-03-15 09:15:09,2019-03-15 09:15:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1531,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/473873400,https://github.com/hyperledger/indy-sdk/pull/1531#issuecomment-473873400,jovfer,alternative solution #1528 has been merged,2019-03-18 11:31:02,2019-03-18 11:31:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/1530,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/473024177,https://github.com/hyperledger/indy-sdk/pull/1530#issuecomment-473024177,johncallahan,"I'm closing this, resetting my fork and will resubmit the PR.  Sorry for my problem with DCO.",2019-03-14 19:28:10,2019-03-14 19:28:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/1528,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472731670,https://github.com/hyperledger/indy-sdk/pull/1528#issuecomment-472731670,Artemkaaas,"What is the meaning of these changes?
We still have 3 vulnerabilities (1 low, 1 moderate, 1 high) on `npm i`.",2019-03-14 07:16:43,2019-03-14 07:16:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1528,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472838987,https://github.com/hyperledger/indy-sdk/pull/1528#issuecomment-472838987,mattraffel,"`npm audit fix` is reporting no no issues, on my local machine.  If we are still having issues then I say the fix I provided is not the solution and we restart from scratch.   The changes I made were **recommended by github**.",2019-03-14 12:50:39,2019-03-14 12:50:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/1528,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472913303,https://github.com/hyperledger/indy-sdk/pull/1528#issuecomment-472913303,jovfer,@mattraffel @Artemkaaas I suggest you to align npm versions. May be it's a reason why you see different output of npm audit.,2019-03-14 15:17:34,2019-03-14 15:17:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/1528,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472928761,https://github.com/hyperledger/indy-sdk/pull/1528#issuecomment-472928761,jovfer,"@mattraffel @Artemkaaas my `npm audit` output below (nodejs 8.15.1)

UPD: almost same in nodejs 10.15.3
```
sminaev@minaev:~/projects/evernym/indy-sdk/vcx/wrappers/node$ npm audit
                                                                                
                       === npm audit security report ===                        
                                                                                
# Run  npm update handlebars --depth 2  to resolve 1 vulnerability
┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ handlebars                                                   │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ typedoc [dev]                                                │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ typedoc > handlebars                                         │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://nodesecurity.io/advisories/755                       │
└───────────────┴──────────────────────────────────────────────────────────────┘


# Run  npm update nise --depth 2  to resolve 1 vulnerability
┌───────────────┬──────────────────────────────────────────────────────────────┐
│ Moderate      │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ just-extend                                                  │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ sinon [dev]                                                  │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ sinon > nise > just-extend                                   │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://nodesecurity.io/advisories/780                       │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│                                Manual Review                                 │
│            Some vulnerabilities require your attention to resolve            │
│                                                                              │
│         Visit https://go.npm.me/audit-guide for additional guidance          │
└──────────────────────────────────────────────────────────────────────────────┘
┌───────────────┬──────────────────────────────────────────────────────────────┐
│ Low           │ Regular Expression Denial of Service                         │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ braces                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Patched in    │ >=2.3.1                                                      │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ babel-cli [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ babel-cli > chokidar > anymatch > micromatch > braces        │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://nodesecurity.io/advisories/786                       │
└───────────────┴──────────────────────────────────────────────────────────────┘
found 3 vulnerabilities (1 low, 1 moderate, 1 high) in 7683 scanned packages
  run `npm audit fix` to fix 2 of them.
  1 vulnerability requires manual review. See the full report for details.
```",2019-03-14 15:47:41,2019-03-14 15:53:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1528,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/473360561,https://github.com/hyperledger/indy-sdk/pull/1528#issuecomment-473360561,jovfer,"@Artemkaaas @mattraffel I've updated this PR by changes from ""npm audit fix"" from my env. Let's see will it pass CI or not...",2019-03-15 16:47:09,2019-03-15 16:47:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1526,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472586532,https://github.com/hyperledger/indy-sdk/pull/1526#issuecomment-472586532,johncallahan,I didn't understand signoff.  Let me submit the PR again,2019-03-13 20:12:19,2019-03-13 20:12:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/1522,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/471914543,https://github.com/hyperledger/indy-sdk/pull/1522#issuecomment-471914543,vimmerru,"@jovfer @AxelNennker 

Just one suggestion to discuss. It was obviously bad decision to use i32 as handle type instead of usize or i64. i32 can't store pointer on x64 systems and as a result we need store Map<i32, cnxt> instead of just cnxt pointer. It causes that we can't avoid synchronization by accessing context by handle that complicates the code and reduces performance. As we define handle types it can be good idea to switch to pointer size types in future versions.",2019-03-12 09:05:29,2019-03-12 09:05:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/1522,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/471935682,https://github.com/hyperledger/indy-sdk/pull/1522#issuecomment-471935682,AxelNennker,"The advantage of i32 is that it is really opaque to the foreign code. No way for it to manipulate the handle or peek inside to manipulate the content. For libindy I see no disadvantages in using i32.

The only pointers libindy is exposing are those to strings which can't be helped. I often wish that not everything in libindy's API was a `*const c_char` (or i32). But that is the price for the best portability, I guess.",2019-03-12 10:06:29,2019-03-12 10:06:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/1522,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/471937954,https://github.com/hyperledger/indy-sdk/pull/1522#issuecomment-471937954,jovfer,"@AxelNennker I think @vimmerru mean the next scenario:
if cmd_handle has size equal (or greater) to pointer size, then application can put context pointer (cast to 32/64-bit integer) as command handle and while executing resulting callback just restore context from pointer. So there is no memory pointer shared from libindy to app. ",2019-03-12 10:12:47,2019-03-12 10:12:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/1522,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/471965520,https://github.com/hyperledger/indy-sdk/pull/1522#issuecomment-471965520,vimmerru,"@AxelNennker @jovfer 

Obvious example https://github.com/hyperledger/indy-sdk/blob/master/wrappers/rust/src/utils/callbacks.rs 

i32 type requires maps, mutexes or dynamic function allocation (like in python)",2019-03-12 11:39:35,2019-03-12 11:39:35
https://api.github.com/repos/hyperledger/indy-sdk/issues/1522,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472019989,https://github.com/hyperledger/indy-sdk/pull/1522#issuecomment-472019989,AxelNennker,"Yes, the wrappers are special in that they hide the handles from the app.
I am at odds with the wrappers for the reason that they are used by libindy/tests and thus currently create a dev-dependency outside the crate of libindy. That is evil.
https://github.com/hyperledger/indy-sdk/blob/master/libindy/Cargo.toml#L96

I am not sure about the value of the Rust wrappers. Should I ever need to write a Rust application that needs code from Indy I think I would be tempted to just use e.g. Wallet directly. Then I would not have to deal with the C-API and all the Commands and Services.  
https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/services/wallet/wallet.rs#L122
(I hope this thinking does not hurt the Indy architects feelings. In that case, sorry)
I know there is no guaranty for that API e.g. Wallet to be stable over time, so this might cost me later, but... live fast and break things. ",2019-03-12 14:18:55,2019-03-12 14:18:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/1518,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/475565972,https://github.com/hyperledger/indy-sdk/pull/1518#issuecomment-475565972,jovfer,@Artemkaaas @mattraffel I suggest to merge this PR as soon as https://github.com/hyperledger/indy-sdk/pull/1518#discussion_r266491335 will be resolved,2019-03-22 10:19:29,2019-03-22 10:19:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/1517,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472372028,https://github.com/hyperledger/indy-sdk/pull/1517#issuecomment-472372028,jovfer,Seems like it's not solution for IS-1212,2019-03-13 10:46:57,2019-03-13 10:48:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1511,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/470007989,https://github.com/hyperledger/indy-sdk/pull/1511#issuecomment-470007989,jovfer,@Artemkaaas please review,2019-03-06 08:03:39,2019-03-06 08:03:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/1511,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472018835,https://github.com/hyperledger/indy-sdk/pull/1511#issuecomment-472018835,Patrik-Stas,"I rebased on the latest master as the build was failing, but seems like it still does. Anything on my side I can do? ",2019-03-12 14:15:59,2019-03-12 14:15:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/1511,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472020906,https://github.com/hyperledger/indy-sdk/pull/1511#issuecomment-472020906,jovfer,@Patrik-Stas there is some unstable behavior on CI/CD. I will inform you if some fixes will be required from your side,2019-03-12 14:21:15,2019-03-12 14:21:15
https://api.github.com/repos/hyperledger/indy-sdk/issues/1506,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468426447,https://github.com/hyperledger/indy-sdk/pull/1506#issuecomment-468426447,jovfer,"@AxelNennker thank you for this painstaking work!
I'll try to review this PR while my flight this weekend.",2019-02-28 20:30:22,2019-02-28 20:30:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/1506,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468445332,https://github.com/hyperledger/indy-sdk/pull/1506#issuecomment-468445332,AxelNennker,Safe travels!,2019-02-28 21:28:11,2019-02-28 21:28:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/1504,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468779175,https://github.com/hyperledger/indy-sdk/pull/1504#issuecomment-468779175,jovfer,Moved to #1509 ,2019-03-01 19:16:41,2019-03-01 19:16:41
https://api.github.com/repos/hyperledger/indy-sdk/issues/1503,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467864176,https://github.com/hyperledger/indy-sdk/pull/1503#issuecomment-467864176,sklump,"How does this improve the software? The docker file builds an indy pool on ubuntu. Isn't the more important abstraction the indy pool, not the OS image on which it operates? Maybe something like indy-pool.ubuntu.dockerfile might serve if it absolutely has to change?",2019-02-27 13:36:52,2019-02-27 13:36:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1503,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467866360,https://github.com/hyperledger/indy-sdk/pull/1503#issuecomment-467866360,vimmerru,It is just indy-pool. Base image doesn't matter here,2019-02-27 13:43:49,2019-02-27 13:43:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/1503,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467871185,https://github.com/hyperledger/indy-sdk/pull/1503#issuecomment-467871185,AxelNennker,"Important thing is that the README.md fits the existing files.
```
ignisvulpis@namenlos:/tmp/indy-sdk/libindy$ ls ci
amazon.dockerfile  indy-sdk.spec.in  libindy-rpm-build-and-upload.sh  setup.android.env.sh  ubuntu.dockerfile
ignisvulpis@namenlos:/tmp/indy-sdk/libindy$ 
```
The PR fixes the README.md 
Maybe somebody had a reason to rename indy-pool.dockerfile to ubuntu.dockerfile.
I would be OK with renaming it back and scrap this PR but the README.md should have working command line instructions",2019-02-27 13:58:21,2019-02-27 13:58:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/1503,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467936111,https://github.com/hyperledger/indy-sdk/pull/1503#issuecomment-467936111,jovfer,"```
DSRs-MacBook-Pro:indy-sdk sminaev$ pwd
/Users/sminaev/projects/indy-sdk
DSRs-MacBook-Pro:indy-sdk sminaev$ ls ci/*.dockerfile
ci/indy-pool.dockerfile
```
`libindy/ci` is a different folder
`ci` is referenced from README.md isn't it?",2019-02-27 16:40:21,2019-02-27 16:40:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/1503,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467995920,https://github.com/hyperledger/indy-sdk/pull/1503#issuecomment-467995920,AxelNennker,"@jovfer is right, I confused the docker file used to build the Android libraries with the docker file used to run the pool. My bad.
Closing this. Sorry.",2019-02-27 19:24:11,2019-02-27 19:24:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/1503,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468078327,https://github.com/hyperledger/indy-sdk/pull/1503#issuecomment-468078327,jovfer,"@AxelNennker np, thanks for tracking the state of documentation. btw due to your note I've looked through our CI directories and find out some inconsistency like we have `libindy/ci/<platform>.dockerfile` but same file is also used for other parts.
So we have helpful output from this conversation, no need to apologize!",2019-02-27 23:52:54,2019-02-27 23:53:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/1501,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467945968,https://github.com/hyperledger/indy-sdk/pull/1501#issuecomment-467945968,jovfer,"I'm OK with current changes if they are compatible with IndyNode
@ashcherbakov please discuss this PR with @Artemkaaas and fill free to merge it without my approval",2019-02-27 17:05:32,2019-02-27 17:05:32
https://api.github.com/repos/hyperledger/indy-sdk/issues/1501,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467950269,https://github.com/hyperledger/indy-sdk/pull/1501#issuecomment-467950269,jovfer,"UPD
https://github.com/hyperledger/indy-plenum/blob/613335afb8c60f811000ca2ed1fc0486867ee300/common/serializers/signing_serializer.py
vs
https://github.com/hyperledger/indy-node/blob/d80973dc31a1556758cbde3c20260cb508e9dacd/indy_common/types.py#L45
So current PR is correct",2019-02-27 17:16:56,2019-02-27 17:16:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1490,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/466272180,https://github.com/hyperledger/indy-sdk/pull/1490#issuecomment-466272180,nsivraj,Accidentally opened the PR against the wrong fork.,2019-02-22 04:45:40,2019-02-22 04:45:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1489,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467147773,https://github.com/hyperledger/indy-sdk/pull/1489#issuecomment-467147773,jovfer,@Artemkaaas please review,2019-02-25 19:26:59,2019-02-25 19:26:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/1489,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472431028,https://github.com/hyperledger/indy-sdk/pull/1489#issuecomment-472431028,Artemkaaas,These are minor changes. I suggest merging of PR and after I'll create new PR with changes.,2019-03-13 13:54:05,2019-03-13 13:54:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1480,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/464920431,https://github.com/hyperledger/indy-sdk/pull/1480#issuecomment-464920431,jovfer,"@xaviernopre please update PR to the latest master, I'm not able to do it from my account.",2019-02-18 23:25:51,2019-02-18 23:25:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/1480,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/465024925,https://github.com/hyperledger/indy-sdk/pull/1480#issuecomment-465024925,xaviernopre,@jovfer Done :-),2019-02-19 07:56:12,2019-02-19 07:56:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/1474,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467116228,https://github.com/hyperledger/indy-sdk/pull/1474#issuecomment-467116228,jovfer,@glowkey @Artemkaaas could you review please?,2019-02-25 18:08:52,2019-02-25 18:08:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1474,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472616960,https://github.com/hyperledger/indy-sdk/pull/1474#issuecomment-472616960,ianco,"> These changes look good. How much effort would it be to add an additional test for the negative condition?

I'll look into adding the test",2019-03-13 21:41:04,2019-03-13 21:41:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1474,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472954400,https://github.com/hyperledger/indy-sdk/pull/1474#issuecomment-472954400,ianco,"Added unit tests
",2019-03-14 16:40:13,2019-03-14 16:40:13
https://api.github.com/repos/hyperledger/indy-sdk/issues/1474,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/473075157,https://github.com/hyperledger/indy-sdk/pull/1474#issuecomment-473075157,ianco,"Added a fix for an edge case I found - see unit tests tests_libindy_prover_get_credentials (fetch with mal-formed json) vs test_retrieve_credentials_emtpy (fetch with valid json but returns no requested attributes).
",2019-03-14 21:39:46,2019-03-14 21:39:46
https://api.github.com/repos/hyperledger/indy-sdk/issues/1469,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/462739865,https://github.com/hyperledger/indy-sdk/pull/1469#issuecomment-462739865,ianco,"Closing, will re-create without the Postgres stuff
",2019-02-12 12:24:52,2019-02-12 12:24:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1469,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/462740157,https://github.com/hyperledger/indy-sdk/pull/1469#issuecomment-462740157,jovfer,"@ianco btw, I think we can just merge master to this branch isn't it?",2019-02-12 12:25:50,2019-02-12 12:25:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/1465,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467035206,https://github.com/hyperledger/indy-sdk/pull/1465#issuecomment-467035206,xaviernopre,@jovfer Same question as for #1444 ;-),2019-02-25 14:39:32,2019-02-25 14:39:32
https://api.github.com/repos/hyperledger/indy-sdk/issues/1462,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/462228025,https://github.com/hyperledger/indy-sdk/pull/1462#issuecomment-462228025,Artemkaaas,"@jakubkoci  Thank you for the contribution!
However, it cannot be accepted without a sign-off from you about intellectual property.
Please see https://github.com/probot/dco#how-it-works and instruction about how to fix it: https://github.com/hyperledger/indy-sdk/blob/master/doc/signing-commits.md#how-to-sign-previous-commits

Could you sign your commit (first one) and update the PR?",2019-02-11 06:16:46,2019-02-11 06:16:46
https://api.github.com/repos/hyperledger/indy-sdk/issues/1462,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/462366077,https://github.com/hyperledger/indy-sdk/pull/1462#issuecomment-462366077,jakubkoci,"@Artemkaaas No problem, I've signed it. BTW The link to ""How to sign previous commit"" you mentioned goes to the 404 page. I found (probably) the correct one here: https://github.com/hyperledger/indy-sdk/blob/master/docs/contributors/signing-commits.md#how-to-sign-previous-commits",2019-02-11 15:20:22,2019-02-11 15:20:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/1459,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/461165648,https://github.com/hyperledger/indy-sdk/pull/1459#issuecomment-461165648,Patrik-Stas,Seems like I accidentally tried to merge to master myself.,2019-02-06 19:59:31,2019-02-06 19:59:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/1459,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/462677873,https://github.com/hyperledger/indy-sdk/pull/1459#issuecomment-462677873,jovfer,"@Patrik-Stas Thank you for the contribution!
However, it cannot be accepted without a sign-off from you about intellectual property.
Please see https://github.com/probot/dco#how-it-works and instruction about how to fix it: https://github.com/hyperledger/indy-sdk/blob/master/docs/contributors/signing-commits.md#how-to-sign-previous-commits

Could you sign your commit (first one) and update the PR?",2019-02-12 09:10:32,2019-02-12 09:10:32
https://api.github.com/repos/hyperledger/indy-sdk/issues/1459,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/462678922,https://github.com/hyperledger/indy-sdk/pull/1459#issuecomment-462678922,Patrik-Stas,"@jovfer thank you, will do",2019-02-12 09:13:45,2019-02-12 09:13:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1459,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/463572012,https://github.com/hyperledger/indy-sdk/pull/1459#issuecomment-463572012,Patrik-Stas,@jovfer Signed off.,2019-02-14 10:16:26,2019-02-14 10:16:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/1458,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/462228125,https://github.com/hyperledger/indy-sdk/pull/1458#issuecomment-462228125,Artemkaaas,"@Alexis-Falquier  Thank you for the contribution!
However, it cannot be accepted without a sign-off from you about intellectual property.
Please see https://github.com/probot/dco#how-it-works and instruction about how to fix it: https://github.com/hyperledger/indy-sdk/blob/master/docs/contributors/signing-commits.md#how-to-sign-previous-commits

Could you sign your commit (first one) and update the PR?",2019-02-11 06:17:49,2019-02-12 09:09:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1454,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472379231,https://github.com/hyperledger/indy-sdk/pull/1454#issuecomment-472379231,jovfer,@dkulic @vimmerru  what is the next step for this PoA?,2019-03-13 11:10:26,2019-03-13 11:10:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/1452,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460304768,https://github.com/hyperledger/indy-sdk/pull/1452#issuecomment-460304768,felippeb,"The artifacts produced for libnullpay on both android and ios are not functional when consumed by our application team. Testing is needed on libnullpay to ensure that the artifact being built by cd is infact functional, as right now that is not the case.",2019-02-04 16:05:06,2019-02-04 16:06:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/1452,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460318283,https://github.com/hyperledger/indy-sdk/pull/1452#issuecomment-460318283,nsivraj,"We do not need extensive testing of libnullpay.a or libnullpay.so BUT we do need to know that the artifact will at least load into the platform before it is uploaded onto the repository website -- https://repo.sovrin.org/ios/libnullpay/ and https://repo.sovrin.org/android/libnullpay/. Currently, there are artifacts uploaded out on that repository website that cannot even be loaded into the platform.",2019-02-04 16:39:15,2019-02-04 16:42:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/1452,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460609465,https://github.com/hyperledger/indy-sdk/pull/1452#issuecomment-460609465,jovfer,"@nsivraj agree. Ok, let's try to support minimal test procedure like build and try to call init function on target platform.
@felippeb Please take a look on CD pipeline, may be you can re-use something.
Also please clean-up the PR and keep only android-related scope.",2019-02-05 11:48:43,2019-02-05 11:48:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1449,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/459702546,https://github.com/hyperledger/indy-sdk/pull/1449#issuecomment-459702546,jovfer,@Artemkaaas please review,2019-02-01 12:08:28,2019-02-01 12:08:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/1446,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/459407926,https://github.com/hyperledger/indy-sdk/pull/1446#issuecomment-459407926,ianco,"Added question to RocketChat but repeating it here:

VCX question - in the python Alice/Faber demo, it looks like the messages aren't getting cleared off the queue when they are read (?) I.e. when Faber sends Alice a credential offer, Alice calls ""offers = await Credential.get_offers(my_connection)"" to get the offer (and then process it). However if Alice makes the same call a second time (or later on, to see if there are any more credential offers available) then the same (original) message is there. So currently Alice has to keep track of any processed offers so they are not processed a second time (?)

Also if Faber subsequently calls ""Credential.get_offers(my_connection)"" with their own connection (to see if anyone is offering credentials to Faber) then I get an error (looks like Faber is trying to read the message intended for Alice?)


Check for and handle offers
src/messages/mod.rs:123 | could not deserialize bundle with i8, will try u8
src/utils/libindy/error_codes.rs:24 | indy-sdk error code: 113
src/api/credential.rs:319 | vcx_credential_get_offers_cb(command_handle: 64, rc: This Credential Error had a value: 1080, msg: null)
Traceback (most recent call last):
File ""faber-pg.py"", line 156, in <module>
loop.run_until_complete(main())
File ""/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py"", line 573, in run_until_complete
return future.result()
File ""faber-pg.py"", line 140, in main
await handle_messages(my_connection, handled_offers, handled_requests)
File ""/Users/icostanzo/Projects/indy-sdk/vcx/wrappers/python3/demo/demo_utils.py"", line 124, in handle_messages
offers = await Credential.get_offers(my_connection)
File ""/Users/icostanzo/Projects/indy-sdk/vcx/wrappers/python3/vcx/api/credential.py"", line 144, in get_offers
Credential.get_offers.cb)
vcx.error.VcxError: ErrorCode.LibindyInvalidStructure

Note - example code is in the PR https://github.com/hyperledger/indy-sdk/pull/1446/files#diff-1cf91bc1e1f616bd97ef154e6a8f8ea4R142
",2019-01-31 16:24:52,2019-01-31 16:24:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1446,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/459816271,https://github.com/hyperledger/indy-sdk/pull/1446#issuecomment-459816271,ianco,"Note also fixes the segfault that occurs after a successful send_proof()
",2019-02-01 18:14:52,2019-02-01 18:14:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1446,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/461811623,https://github.com/hyperledger/indy-sdk/pull/1446#issuecomment-461811623,jovfer,@glowkey could you review please?,2019-02-08 14:00:24,2019-02-08 14:00:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/458987308,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-458987308,xaviernopre,"> Just for clarification: what is the problem this solves? libindy should already build in ubuntu.

Hi @mattraffel . It allow to build the lib for Ubuntu target, using Docker, for example on MacOS. I'm dockerizing `indy-sdk/vcx/wrappers/python3/demo` and for this, to be able to build image for `dummy-cloud-agent`, I need to build `libindy` for Ubuntu (and I'm on MacOS)",2019-01-30 15:31:35,2019-01-30 15:31:35
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/458995382,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-458995382,mattraffel,"> > Just for clarification: what is the problem this solves? libindy should already build in ubuntu.
> 
> Hi @mattraffel . It allow to build the lib for Ubuntu target, using Docker, for example on MacOS. I'm dockerizing `indy-sdk/vcx/wrappers/python3/demo` and for this, to be able to build image for `dummy-cloud-agent`, I need to build `libindy` for Ubuntu (and I'm on MacOS)

we already have a few other docker files.   Im thinking specifically this one:
https://github.com/hyperledger/indy-sdk/blob/master/libindy/ci/ubuntu.dockerfile.   

I want to make sure we are not duplicating dockerfiles.  These things can get left behind as changes are made and become broken.   Can you please look over that one, if you haven't already?",2019-01-30 15:51:39,2019-01-30 15:51:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/459009272,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-459009272,xaviernopre,"@mattraffel As explained, my need was to build the indylib for Ubuntu without being on Ubuntu (I'a on MacOS). I have searched in all the repo, I have try manu Docker files, but none was able to help me to simply build the lib. The file `libindy/ci/ubuntu.dockerfile` is dedicated for CI (as indicated by the `ci` path), it contains unnecessary tools (java, ruby, ...), and without any commands to build the lib. My idea is to provide the simplest solution to build the lib for Ubuntu : the Docker image contains just all necessary, including the `cargo build` command, the `.sh` script help to do the job, and I have completed the existing `doc/ubuntu-build.md` file with instructions for Docker environment, especially command to extract (with `docker container cp ...`) the `.so` generated in the image.",2019-01-30 16:26:15,2019-01-30 16:26:15
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467034996,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-467034996,xaviernopre,"@mattraffel @jovfer Why not merge this PR ? I have done this work and effort. For me, this seems to be interesting and useful for other developers (for example under MacOs like me). I have answered your questions. Is there still a problem ? Thanks",2019-02-25 14:38:54,2019-02-25 14:38:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467070515,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-467070515,mattraffel,"@xaviernopre I'm still not convinced this is needed.  I use mac and I use the various dockerfiles in the repo.   If someone else says its needed, then I am fine with it.  I just want to avoid more dockerfiles that end up having to be maintained, or ignored.  There's other cases where this is happening.",2019-02-25 16:08:23,2019-02-25 16:08:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467338523,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-467338523,xaviernopre,"@mattraffel I understand and agree in general, but :
- My personnal way : arriving to the project, I did not find Docker informations ou resources to help me, all I found was explanation to build the lib on my own computer, nothing for Docker
- After many weeks immersed in the project, and some contributions (NodeJs scripts for ""samples"" or ""how-tos""), I understand a little more the complex architecture of the project
- At that point, I found some Docker resources, but most of the resources (Dockerfile) are dedicated to CI, not really adapted to this particular need (in my opinion)
- For me, this resources are useful, dedicated to the build of lib Indy, and helpful for further new developper arriving on the project (like me some months ago)... ;-) ",2019-02-26 08:09:20,2019-02-26 08:09:20
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467366431,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-467366431,vimmerru,"@xaviernopre I see multiple problems:

1. You docker images are 99% of copy paste of existing image in ci directory except additional RUN commands. It causes obvious support problems. As soon we update any new 3d party dependency version we will need to update both files.
2. Build has a lot of options. It can produce debug and release binaries, use system libsodium or custom and etc. Just one RUN command isn't enough.

It is why we have images inside ci. You can quickly get development environment by run this image and execute commands you need to produce any builds. It satisfies workflow for the most of Indy developers.",2019-02-26 09:35:11,2019-02-26 09:35:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468174843,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-468174843,xaviernopre,"@vimmerru I understand, and I'm not for fiels duplication. But my need is for PR #1465, I'm on MacOs and need to build the lib for Ubuntu. Searching at many places, I didn't find any information to do that, from where my work to dockerize this and share my work. You are taling about ""images in the CI"", but unless I'm mistaken, I have no access to this CI and to this images... On more time, I'm thinking on further developers arriving on the project, and I'm searching for helpful solution...",2019-02-28 07:59:10,2019-02-28 07:59:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/470008547,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-470008547,jovfer,@xaviernopre I think @vimmerru mentioned files inside `libindy/ci` subfolder. Like ubuntu.dockerfile. Is this file useful for your usecase?,2019-03-06 08:05:38,2019-03-06 08:05:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/1444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/470924288,https://github.com/hyperledger/indy-sdk/pull/1444#issuecomment-470924288,xaviernopre,"@jovfer The file `libindy/ci/ubuntu.dockerfile` is very different than my file `build-libindy-ubuntu.dockerfile`. I had taken a look at the files in `ci` to avoid files duplications, but finally, I have created `build-libindy-ubuntu.dockerfile` to have the minimum requirements to build the lib, especially not installing : git, python, zip, unzip, Nodejs, NPM, OpenJDK, Ruby, ... This allows to have a dedicated Docker image with just enough to build the lib for Ubuntu. 

Another point is if someone change `libindy/ci/ubuntu.dockerfile` for CI needs, he will not know if this file is used to just build the lib (= my PR), and this build can be broken without alert.

One more time, I'm just a contributor, I'm not in the ""indy"" team, I have no access and no information on Ci and other of your tools, and I can testify that it's not easy to ""quickly get development environment"" as @vimmerru said... 

And don't forget that this PR is not just for fun, but is a needed step for PR #1465 (but I have done 2 distinct PR to be more clear and modular).

Come back to me if you have other questions or suggestions, I can change the code of my PR, but for the moment, I think this is the best way... 😉 .... I hope this can be merge soon 😉",2019-03-08 13:15:00,2019-03-08 13:15:20
https://api.github.com/repos/hyperledger/indy-sdk/issues/1442,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/459263580,https://github.com/hyperledger/indy-sdk/pull/1442#issuecomment-459263580,jovfer,@Artemkaaas please review,2019-01-31 08:47:14,2019-01-31 08:47:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/1442,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460256150,https://github.com/hyperledger/indy-sdk/pull/1442#issuecomment-460256150,glowkey,"I'm sorry, I don't understand. I had to change it from an enum to strings because the message type can be anything, not just one of the enum values.",2019-02-04 13:50:30,2019-02-04 13:50:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/1440,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/458159090,https://github.com/hyperledger/indy-sdk/pull/1440#issuecomment-458159090,faisal00813,@jovfer These instructions were missing from the android build doc. Devs from community were finding it difficult to build libraries on Ubuntu.,2019-01-28 14:45:43,2019-01-28 14:45:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1437,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/457897857,https://github.com/hyperledger/indy-sdk/pull/1437#issuecomment-457897857,kdenhartog,"Is the team using the pack/unpack stuff for streetcred alright with the message being of type byte[] instead of String? In the python wrapper, I made message type String, and handle the encoding within the wrapper to make it a little easier to use.",2019-01-27 08:05:48,2019-01-27 08:05:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/1437,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/457918769,https://github.com/hyperledger/indy-sdk/pull/1437#issuecomment-457918769,tmarkovski,"I thought about this as well, it makes sense since the byte array will always be UTF8 encoded string. Then I saw the PR for the java wrapper and made it consistent. I think the comments on the wrapper API's are clear enough to indicate what the output is.
For the agent framework, we wrote [few extensions](https://github.com/streetcred-id/agent-framework/blob/60f610d36cfa86eaa8e9b57792c299bcba6f7730/src/AgentFramework.Core/Extensions/FormattingExtensions.cs#L15) to work easier with the conversions and be able to do things like `packedArray.GetUTF8String()`.

Great work on this effort @kdenhartog ",2019-01-27 13:39:17,2019-01-27 13:40:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/1432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/456577777,https://github.com/hyperledger/indy-sdk/pull/1432#issuecomment-456577777,ryMarsh44,I didn't mean to merge it to this repo. Meant to merge into internal repo,2019-01-22 21:53:25,2019-01-22 21:53:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/1430,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/456415355,https://github.com/hyperledger/indy-sdk/pull/1430#issuecomment-456415355,jovfer,@glowkey @hadleym could you review please?,2019-01-22 14:19:23,2019-01-22 14:19:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1428,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/456302002,https://github.com/hyperledger/indy-sdk/pull/1428#issuecomment-456302002,jovfer,"@mikelodder7 thanks for the PR, I hope we include it in nearest release.

@Artemkaaas please review",2019-01-22 07:49:42,2019-01-22 07:49:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/1421,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/455651745,https://github.com/hyperledger/indy-sdk/pull/1421#issuecomment-455651745,hadleym,@glowkey Please review.,2019-01-18 18:59:27,2019-01-18 18:59:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/1421,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/455672189,https://github.com/hyperledger/indy-sdk/pull/1421#issuecomment-455672189,glowkey,I've suggested a change offline specific to node wrapper,2019-01-18 20:09:22,2019-01-18 20:09:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/1421,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/455673293,https://github.com/hyperledger/indy-sdk/pull/1421#issuecomment-455673293,hadleym,Tests within the Node Wrapper that test if release() throws an error have been removed.,2019-01-18 20:13:04,2019-01-18 20:13:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1413,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/456136338,https://github.com/hyperledger/indy-sdk/pull/1413#issuecomment-456136338,jovfer,@xaviernopre could you update the branch to the latest master? Seems like I can't update this PR as it started from protected branch `TwinPeek:master`,2019-01-21 16:45:59,2019-01-21 16:45:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/1413,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/456304016,https://github.com/hyperledger/indy-sdk/pull/1413#issuecomment-456304016,xaviernopre,"@jovfer For me, it's better to do PR from branches, mostly if I put many PR at the same time ;-) . Is it a problem on your side ? Anyway the PR is updated",2019-01-22 07:58:37,2019-01-22 07:58:37
https://api.github.com/repos/hyperledger/indy-sdk/issues/1413,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/456340655,https://github.com/hyperledger/indy-sdk/pull/1413#issuecomment-456340655,jovfer,@xaviernopre PRs from branches more convenient for us too. In this case we can update the PR to latest hyperledger/master.,2019-01-22 10:01:59,2019-01-22 10:02:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1409,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/455179232,https://github.com/hyperledger/indy-sdk/pull/1409#issuecomment-455179232,mattraffel,@mwherman2000 can you fix the DCO requirement?   ,2019-01-17 13:53:23,2019-01-17 13:53:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1409,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/455181030,https://github.com/hyperledger/indy-sdk/pull/1409#issuecomment-455181030,mwherman2000,Done ...wasn't aware the DCO had to be re-completed on each PR. Cheers,2019-01-17 13:59:09,2019-01-17 13:59:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1408,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/456018929,https://github.com/hyperledger/indy-sdk/pull/1408#issuecomment-456018929,jovfer,Will be merged as part of #1400,2019-01-21 10:12:02,2019-01-21 10:51:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/1407,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/456750264,https://github.com/hyperledger/indy-sdk/pull/1407#issuecomment-456750264,srottem,"I can be available on RocketChat but am in the Melbourne, Australia time
zone until May. If you can let me know what time you're available we can
coordinate something.  Please note that I'm unlikely have any available
cycles at the moment to migrate the documentation anywhere else for the
foreseeable future.

On Wed, 23 Jan 2019, 20:54 Sergey Minaev <notifications@github.com wrote:

> *@jovfer* commented on this pull request.
> ------------------------------
>
> In wrappers/dotnet/README.md
> <https://github.com/hyperledger/indy-sdk/pull/1407#discussion_r250122310>:
>
> > @@ -9,7 +9,7 @@ Pull requests welcome!
>
>  ### Documentation
>
> -Documentation for the .NET wrapper is available [here](http://hyperledger.github.io/indy-sdk/wrappers/dotnet/docs/index.html).
> +Documentation for the .NET wrapper is available [here](https://github.com/hyperledger/indy-sdk/blob/master/wrappers/dotnet/docs/index.html).
>
> As far as I know there are 2 main blockers:
>
>    - no one in core team has permission to enable .io
>    - probably there are some contradictions between this documentation
>    and HIPE
>    https://github.com/hyperledger/indy-hipe/tree/master/text/0025-indy-docs-framework
>
> The first one seems just technical question for HL-desk, as I have seen
> some .io for others HL projects.
> I will figure out how to resolve the second one.
> @srottem <https://github.com/srottem> Are you available in rocket.chat of
> sovrin or hyperledger for this discussion?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/indy-sdk/pull/1407#discussion_r250122310>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAaBN3_pOSw3QT1t2Dnm8zisuDHOvAZhks5vGDFqgaJpZM4aBmKy>
> .
>
",2019-01-23 10:29:17,2019-01-23 10:29:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/1407,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467202931,https://github.com/hyperledger/indy-sdk/pull/1407#issuecomment-467202931,jovfer,"Hi @michaeldboyd 
You have worked on ReadTheDocs adoption for IndySDK documentation. Could you provide some feedback please:
1) Are we going to store developer API documentation together with other overviews?
2) If so, is it possible to incapsulate .net documentation into current readthedocs page about IndySDK?",2019-02-25 22:06:07,2019-02-25 22:06:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/1405,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454464637,https://github.com/hyperledger/indy-sdk/pull/1405#issuecomment-454464637,vikpande,pls ignore since the DCO didnt work-out,2019-01-15 16:50:45,2019-01-15 16:50:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1404,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454532076,https://github.com/hyperledger/indy-sdk/pull/1404#issuecomment-454532076,glowkey,"I've worked on VCX in the past so I'll try to answer these questions, but they aren't authoritative.

1) I think the long-term vision is for libvcx to stop managing pool and wallet handles internally but rather to accept the same pool and wallet handles created by libindy. In other words, you could use libindy to create and open whatever wallet you want (with whatever plugin you want) and then give that wallet handle to libvcx. This way libindy and libvxc would work together (within the same process) and use the same wallet without any WalletAlreadyOpened errors.

2) All libvcx objects can be serialized and saved by the application. They can then be deserialized as needed. These serialized objects are not stored in the wallet. It is up to the application to save these somewhere (I guess you could store them in the wallet using the non-secrets API). In other words, libvcx does not manage the life of the object. It is up to the application to create, serialize, destroy, deserialize as needed.

3) See answer for #1. 

4) Yes. There has been a request to add a context handle to each call so that multiple wallets/pools/etc can be handled within the same process. Some of this would be solved by #1, but not everything.

5) I've seen this randomly depending on python and system versions. 

I hope these answers were helpful.",2019-01-15 20:05:45,2019-01-15 20:05:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1404,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454633171,https://github.com/hyperledger/indy-sdk/pull/1404#issuecomment-454633171,ianco,"@glowkey  thanks for the info!
",2019-01-16 02:56:27,2019-01-16 02:56:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/1404,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/455253596,https://github.com/hyperledger/indy-sdk/pull/1404#issuecomment-455253596,ianco,"Closing for now, will review and open a separate PR
",2019-01-17 17:15:45,2019-01-17 17:15:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1396,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454408943,https://github.com/hyperledger/indy-sdk/pull/1396#issuecomment-454408943,jovfer,"@vikpande Thank you for contribution!
However, it cannot be accepted without a sign-off from you about intellectual property.
Please see https://github.com/probot/dco#how-it-works and instruction about how to fix it: https://github.com/hyperledger/indy-sdk/blob/master/doc/signing-commits.md#how-to-sign-previous-commits

Could you sign your commit (first one) and update the PR?",2019-01-15 14:23:48,2019-01-15 14:24:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1396,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454470178,https://github.com/hyperledger/indy-sdk/pull/1396#issuecomment-454470178,vikpande,"> @vikpande Thank you for contribution!
> However, it cannot be accepted without a sign-off from you about intellectual property.
> Please see https://github.com/probot/dco#how-it-works and instruction about how to fix it: https://github.com/hyperledger/indy-sdk/blob/master/doc/signing-commits.md#how-to-sign-previous-commits
> 
> Could you sign your commit (first one) and update the PR?

@jovfer , for some reason, I am able to sign-off the DCO but not able to force push to vikande:patch1.  keep getting error messages "" git error: failed to push some refs to"". i wil delete this pull request and create a new one later when i know more about DCO. looks tedious to sign previous commits. a fresh maybe a better idea. ",2019-01-15 17:05:12,2019-01-15 17:05:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/1396,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454501291,https://github.com/hyperledger/indy-sdk/pull/1396#issuecomment-454501291,vikpande,"deleting this pull request and will create a new one with ""sign off"". ",2019-01-15 18:34:33,2019-01-15 18:34:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1383,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468821422,https://github.com/hyperledger/indy-sdk/pull/1383#issuecomment-468821422,jovfer,This PR is out of date. It's easier to just create new one then it will be required,2019-03-01 21:40:54,2019-03-01 21:40:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/1378,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/452628188,https://github.com/hyperledger/indy-sdk/pull/1378#issuecomment-452628188,jovfer,@KitHat please review,2019-01-09 09:24:39,2019-01-09 09:24:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/1378,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/453137341,https://github.com/hyperledger/indy-sdk/pull/1378#issuecomment-453137341,mattraffel,I am going to have to close this PR and start over because of the merge conflicts,2019-01-10 15:31:45,2019-01-10 15:31:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/448616478,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-448616478,vimmerru,@ianco Thanks for supporting this. I will add comments with suggestions during my review.,2018-12-19 14:33:42,2018-12-19 14:33:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/448616716,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-448616716,vimmerru,1. I suggest to remove api/mod.rs and move ErrorCode to libindy/mod.rs,2018-12-19 14:34:33,2018-12-19 14:34:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/448634769,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-448634769,vimmerru,2. Keep one plain Error enum without suberrors or may be use failure library instead. Implement conversion to ErrorCode as a To trait.,2018-12-19 15:27:18,2018-12-19 15:27:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/448636877,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-448636877,vimmerru,"3. I see structure like

```
- src
  - lib.rs // here init method and all c handlers as private functions without prefixes like _create/_open
  - storage.rs // implementation of PostgressStorage and PostgressStorageType
  - wql // set of utils for wql parsing and sql generation that in the future can be shared as separate library
  - utils // only utils you really need
```

Note: We don't need WalletStorage and WalletStorageType trates here. 

Now you have:

- wallet_storage
- postgress_storage
- postgress_wallet

It is really confusing.",2018-12-19 15:32:48,2018-12-19 15:34:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/448637256,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-448637256,vimmerru,4. All type checks in c handlers should return IvalidState error as all strings will be pre-validated by libindy,2018-12-19 15:33:48,2018-12-19 15:33:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/448892047,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-448892047,vimmerru,5. I suggest to move root folder from samples to `experimental/plugins/postgress_storage`,2018-12-20 06:44:55,2018-12-20 06:44:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/450663866,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-450663866,ianco,"Updated per @vimmerru feedback:

1.  Removed api/mod.rs and moved ErrorCode to libindy/mod.rs
2.  No changes to error code - future change
3.  Re-organized code structure to simplify
4.  C handlers return CommonInvalidState error
5.  Moved code to experimental/plugins/postgres_storage

Also have made the following changes:

- Added wallet_storage support to CLI wallet delete command
- Added wallet storage support to python getting_started
- Added bash scripts to postgres_storage module to illustrate calling CLI and python getting_started using the postgres wallet storage (note these are also used to test updates to the storage)
",2018-12-31 16:16:44,2018-12-31 16:16:44
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/450924069,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-450924069,ianco,"Cleanup is completed, still 2 outstanding issues, I've opened up separate JIRA items (IS-1114, IS-1129)

Included updates to python getting_started.py to support running with postgres plug-in, and added documentation (mostly copied from the HIPE)
",2019-01-02 17:12:52,2019-01-02 17:12:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/453128486,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-453128486,vimmerru,"@ianco Thanks for this contribution, will look ASAP. Sorry for late response, just returned from the holidays. ",2019-01-10 15:09:24,2019-01-10 15:09:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/453173288,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-453173288,ianco,"There are conflicts due to this commit - https://github.com/hyperledger/indy-sdk/commit/5f99530149c488c4ee3f3fa2e37196461e9e4b86

I re-organized the code based on your suggestions (moved from ""samples"" to ""experimental"") but some of the ""samples"" files were updated with new error handling.
",2019-01-10 17:04:22,2019-01-10 17:04:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454843987,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-454843987,ianco,@vimmerru  any update on this?  I took a quick look and the code in indy-sdk currently doesn't compile so looks like there is a merge currently in progress (?)  Thanks.,2019-01-16 16:27:33,2019-01-16 16:27:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454918158,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-454918158,vimmerru,@ianco current master now uses new error handling approach based on ErrorKind pattern and failure library. Most probably the conflict is related to these changes. Do you need help with merging?,2019-01-16 19:57:41,2019-01-16 19:57:41
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454920223,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-454920223,ianco,"Hi @vimmerru , there are 2 issues:

1. Code in indy-sdk master branch does not compile
2. There are conflicts between the code in master branch (changes to code in the old ""samples"" dir vs the code moved to ""experimental""

I wasn't sure if there was work still in progress or if it was up to me to fix these compile errors/merge conflicts.  Sounds like it's on me?
",2019-01-16 20:03:56,2019-01-16 20:03:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1371,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/454930547,https://github.com/hyperledger/indy-sdk/pull/1371#issuecomment-454930547,ianco,"@vimmerru  I fixed the merge conflicts and verified everything compiles and the tests run.  I backed out the (partial) changes relating to error code as it looks like they were committed into the postgres code by mistake.

Note I have a separate ticket (IS-1129) for applying these error code changes to the postgres plug-in.
",2019-01-16 20:35:16,2019-01-16 20:35:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/1365,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/451181502,https://github.com/hyperledger/indy-sdk/pull/1365#issuecomment-451181502,michaeldboyd,@Artemkaaas @vimmerru Can someone please review this PR to be merged?,2019-01-03 15:41:44,2019-01-03 15:41:44
https://api.github.com/repos/hyperledger/indy-sdk/issues/1365,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/457566673,https://github.com/hyperledger/indy-sdk/pull/1365#issuecomment-457566673,cam-parra,@michaeldboyd Please review the concern above. ,2019-01-25 13:05:18,2019-01-25 13:05:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/1365,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/458729259,https://github.com/hyperledger/indy-sdk/pull/1365#issuecomment-458729259,michaeldboyd,@cam-parra @jovfer I have resolved all conflicts. Are there any other blocking changed I need to make?,2019-01-29 22:15:51,2019-01-29 22:15:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/1365,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/459097712,https://github.com/hyperledger/indy-sdk/pull/1365#issuecomment-459097712,mattraffel,"@michaeldboyd If you can resolve the merge conflict, we should be good.  I've started a CI build since it is required.",2019-01-30 20:31:54,2019-01-30 20:32:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/1365,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/459167288,https://github.com/hyperledger/indy-sdk/pull/1365#issuecomment-459167288,michaeldboyd,Done,2019-01-31 00:33:05,2019-01-31 00:33:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/1364,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/452673908,https://github.com/hyperledger/indy-sdk/pull/1364#issuecomment-452673908,jovfer,Closing this debug-purpose PR as https://jira.hyperledger.org/browse/IS-1109 is on hold ,2019-01-09 12:06:06,2019-01-09 12:06:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/1360,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/447771141,https://github.com/hyperledger/indy-sdk/pull/1360#issuecomment-447771141,xaviernopre,👍 ,2018-12-17 09:07:15,2018-12-17 09:07:15
https://api.github.com/repos/hyperledger/indy-sdk/issues/1356,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/447127490,https://github.com/hyperledger/indy-sdk/pull/1356#issuecomment-447127490,stevengubler,"Crap, I branched off in the wrong spot...",2018-12-13 21:30:06,2018-12-13 21:30:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/1354,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446729804,https://github.com/hyperledger/indy-sdk/pull/1354#issuecomment-446729804,michaeldboyd,"Thanks for the change, it's really helpful to make the docs clearer. We need committers to sign their commits in order for them to be merged. Would you mind amending your commit to add a sign off line with your name? Instructions on how to do that are here: 
https://github.com/hyperledger/indy-sdk/blob/master/doc/signing-commits.md#how-to-sign-previous-commits",2018-12-12 20:20:02,2018-12-12 20:20:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/1354,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/448153491,https://github.com/hyperledger/indy-sdk/pull/1354#issuecomment-448153491,jovfer,"@xtrycatchx please note, DCO sign line should be put in each commit of the PR. More details about failed check you can find here: https://github.com/hyperledger/indy-sdk/pull/1354/checks",2018-12-18 09:25:27,2018-12-18 09:25:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/1354,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/472373120,https://github.com/hyperledger/indy-sdk/pull/1354#issuecomment-472373120,jovfer,@xtrycatchx I'm closing the PR for now. Please re-open it after you will fix DCO problem. Feel free to ask me or anyone else in community rocketchat for more details about DCO and how to resolve the problem,2019-03-13 10:50:48,2019-03-13 10:50:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/1344,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445287246,https://github.com/hyperledger/indy-sdk/pull/1344#issuecomment-445287246,xaviernopre,"@jovfer Here is the new PR
@Artemkaaas Sorry for this and thank you for your contribution !",2018-12-07 16:30:02,2018-12-07 16:30:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/1344,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445300667,https://github.com/hyperledger/indy-sdk/pull/1344#issuecomment-445300667,xaviernopre,@jovfer is my Git's champion ! 👍 ,2018-12-07 17:12:57,2018-12-07 17:12:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/1342,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446613658,https://github.com/hyperledger/indy-sdk/pull/1342#issuecomment-446613658,glowkey,I believe the vcx/libvcx/scripts/provision_agent_keys.py script should be updated to handle this new optional parameter.,2018-12-12 14:49:40,2018-12-12 14:49:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1342,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/447781543,https://github.com/hyperledger/indy-sdk/pull/1342#issuecomment-447781543,jovfer,@glowkey please check one more time: is it OK now?,2018-12-17 09:42:53,2018-12-17 09:42:53
https://api.github.com/repos/hyperledger/indy-sdk/issues/1341,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445094858,https://github.com/hyperledger/indy-sdk/pull/1341#issuecomment-445094858,stevengubler,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-445086601,2018-12-07 01:50:57,2018-12-07 01:50:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/1340,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445068155,https://github.com/hyperledger/indy-sdk/pull/1340#issuecomment-445068155,jovfer,"@glowkey @hadleym, please review.

\+ @ryMarsh44 please run Jenkins build after review process will be finished

",2018-12-06 23:28:46,2018-12-06 23:29:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/1339,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444831878,https://github.com/hyperledger/indy-sdk/pull/1339#issuecomment-444831878,jovfer,@xaviernopre please fix DCO in 40ac80c commit,2018-12-06 10:54:13,2018-12-06 10:54:13
https://api.github.com/repos/hyperledger/indy-sdk/issues/1339,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444832129,https://github.com/hyperledger/indy-sdk/pull/1339#issuecomment-444832129,jovfer,@Artemkaaas please review,2018-12-06 10:55:09,2018-12-06 10:55:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1339,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444832669,https://github.com/hyperledger/indy-sdk/pull/1339#issuecomment-444832669,xaviernopre,"Hi @jovfer , I saw the alert on the PR, we are fixing it....",2018-12-06 10:57:10,2018-12-06 10:57:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/1339,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444833317,https://github.com/hyperledger/indy-sdk/pull/1339#issuecomment-444833317,xaviernopre,@jovfer Done :-) ,2018-12-06 10:59:20,2018-12-06 10:59:20
https://api.github.com/repos/hyperledger/indy-sdk/issues/1339,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444838289,https://github.com/hyperledger/indy-sdk/pull/1339#issuecomment-444838289,jovfer,"@xaviernopre thanks
just FYI: now there is a tab `Checks` in GH UI. It contains the useful information like what commit is fail DCO check and why.",2018-12-06 11:18:52,2018-12-06 11:18:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1339,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444842731,https://github.com/hyperledger/indy-sdk/pull/1339#issuecomment-444842731,xaviernopre,@jovfer Hi. I think all is OK now. Can you confirm ? ,2018-12-06 11:36:30,2018-12-06 11:36:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/1339,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445279884,https://github.com/hyperledger/indy-sdk/pull/1339#issuecomment-445279884,xaviernopre,"I cannot resolve DCO problem, I close this PR to open a new one",2018-12-07 16:07:40,2018-12-07 16:07:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444482927,https://github.com/hyperledger/indy-sdk/pull/1338#issuecomment-444482927,jovfer,@Artemkaaas please run this PR only for iOS on Jenkins and share results of our CI with @WandyLau ,2018-12-05 13:21:39,2018-12-05 13:21:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/1338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444839964,https://github.com/hyperledger/indy-sdk/pull/1338#issuecomment-444839964,jovfer,"@WandyLau we have only 1.0.2l on jenkins machines now, so I try to run your PR with older version but got error.
Please find the error description below
```
[ios-test] Analyzing dependencies
[ios-test] Fetching podspec for `CoreBitcoin` from `https://raw.github.com/oleganza/CoreBitcoin/master/CoreBitcoin.podspec`
[ios-test] Downloading dependencies
[ios-test] Installing CoreBitcoin (0.6.8.1)
[ios-test] Installing ISO8601DateFormatter (0.8)
[ios-test] Installing OpenSSL-Universal (1.0.1.16)
[ios-test] Installing OpenSSL-lib-iOS (0.1.0)
[ios-test] Installing libsodium (1.0.12)
[ios-test] Installing libzmq (4.2.3)
[ios-test] Generating Pods project
[ios-test] Integrating client projects
[ios-test] 
[ios-test] [!] Please close any current Xcode sessions and use `Indy.xcworkspace` for this project from now on.
[ios-test] Sending stats
[ios-test] Pod installation complete! There are 5 dependencies from the Podfile and 6 total pods installed.
[ios-test] 
[ios-test] [!] `<PBXGroup name=`Pods` UUID=`FFB35C33119165C4896C64A8`>` attempted to initialize an object with an unknown UUID. `4E103A157091ECB5654FA9BE` for attribute: `children`. This can be the result of a merge and  the unknown UUID is being discarded.
[ios-test] 
[ios-test] [!] `<PBXGroup name=`Pods` UUID=`FFB35C33119165C4896C64A8`>` attempted to initialize an object with an unknown UUID. `33861E44A9CE72607F003ED4` for attribute: `children`. This can be the result of a merge and  the unknown UUID is being discarded.
[ios-test] 
[ios-test] [!] The Podfile contains framework or static library targets (Indy), for which the Podfile does not contain host targets (targets which embed the framework).
[ios-test] If this project is for doing framework development, you can ignore this message. Otherwise, add a target to the Podfile that embeds these frameworks to make this message go away (e.g. a test target).
[ios-test] 
[ios-test] [!] The `Indy [Debug]` target overrides the `FRAMEWORK_SEARCH_PATHS` build setting defined in `Pods/Target Support Files/Pods-Indy/Pods-Indy.debug.xcconfig'. This can lead to problems with the CocoaPods installation
[ios-test] 
[ios-test] [!] The `Indy [Release]` target overrides the `FRAMEWORK_SEARCH_PATHS` build setting defined in `Pods/Target Support Files/Pods-Indy/Pods-Indy.release.xcconfig'. This can lead to problems with the CocoaPods installation
[ios-test]     - Use the `$(inherited)` flag, or
[ios-test]     - Remove the build settings from the target.
[ios-test]     - Use the `$(inherited)` flag, or
[ios-test]     - Remove the build settings from the target.
```

Our team most probably will be able to take a look on it only next week, any help very appreciated.
Let me or @Artemkaaas know if you would like to see any output from Jenkins runs.

Thank you again for the PR. ",2018-12-06 11:25:17,2018-12-06 11:25:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/1338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445541089,https://github.com/hyperledger/indy-sdk/pull/1338#issuecomment-445541089,WandyLau,"What do you think it is error? Or any more info about this? 

I ran it again I got the almost the same output. But it is not error. I can build the indy and run all the test cases. And you can delete these two lines in indy-demo project file:
>4E103A157091ECB5654FA9BE /* Pods-Indy-demo-Indy-demoTests.debug.xcconfig */,
  33861E44A9CE72607F003ED4 /* Pods-Indy-demo-Indy-demoTests.release.xcconfig */,
",2018-12-09 14:06:48,2018-12-09 14:06:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/1338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446193465,https://github.com/hyperledger/indy-sdk/pull/1338#issuecomment-446193465,WandyLau,"@Artemkaaas 
this error means that the head files are missing. Usually The path is not right. I used the out_pod as the head file root directory, and for ""<libindy/*.h>, there should one directory named libindy in the out_pod, including all the corresponding head files. Yes I think the CI file should be modified. ",2018-12-11 12:58:47,2018-12-11 12:58:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/1338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/459640955,https://github.com/hyperledger/indy-sdk/pull/1338#issuecomment-459640955,NanoBytesInc,Any progress on this?,2019-02-01 08:11:56,2019-02-01 08:11:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/459963650,https://github.com/hyperledger/indy-sdk/pull/1338#issuecomment-459963650,WandyLau,@NanoBytesInc I thought they have updated the repo already against xcode 10.0,2019-02-02 13:05:10,2019-02-02 13:05:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/1338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460244839,https://github.com/hyperledger/indy-sdk/pull/1338#issuecomment-460244839,jovfer,"I've asked @Artemkaaas and @mattraffel check current master in his environments and sounds like now master branch is compatible with XCode 10.1.

@WandyLau does master branch version work for you?
If so, should we close this PR and mark https://jira.hyperledger.org/browse/IS-1096 as done?",2019-02-04 13:11:50,2019-02-04 13:11:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/1338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460634105,https://github.com/hyperledger/indy-sdk/pull/1338#issuecomment-460634105,WandyLau,"@jovfer Thanks for the support. Last time as I discussed with @Artemkaaas , the xcode 10.0 is supported. But if it is done now I am ok with this issue closed.",2019-02-05 13:17:19,2019-02-05 13:17:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/1338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/462674393,https://github.com/hyperledger/indy-sdk/pull/1338#issuecomment-462674393,jovfer,"It seems like current master is support 10.1 XCode.
Fill free to re-open PR and re-raise issue if some new problem will be detected",2019-02-12 08:59:08,2019-02-12 08:59:08
https://api.github.com/repos/hyperledger/indy-sdk/issues/1332,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444798964,https://github.com/hyperledger/indy-sdk/pull/1332#issuecomment-444798964,jovfer,"@glowkey @hadleym @ryMarsh44 from high-level point of view I agree with Artem. But we can miss some implementation specific for VCX, so I would like to have your opinion too
Do you have any objections or may be you would like to point out some drawbacks?",2018-12-06 09:03:51,2018-12-06 09:03:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/1332,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444913779,https://github.com/hyperledger/indy-sdk/pull/1332#issuecomment-444913779,glowkey,"I believe {""key"": ""value""} is more user friendly and should be used by vcx_issuer_create_credential. I agree it is better for API and wrappers to use the same format.",2018-12-06 15:36:29,2018-12-06 15:36:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/1332,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444914331,https://github.com/hyperledger/indy-sdk/pull/1332#issuecomment-444914331,mattraffel,"Definitely agree its more user friendly.   What does this break if we change this--thinking Connect.me etc...?   I haven't looked.  The change I made ensured the inputs didn't change.  
",2018-12-06 15:37:57,2018-12-06 15:38:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/1332,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444915517,https://github.com/hyperledger/indy-sdk/pull/1332#issuecomment-444915517,glowkey,While it would change the c-callable API it would not change the wrapper API so end-users won't see any changes.,2018-12-06 15:41:00,2018-12-06 15:41:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/1332,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445945674,https://github.com/hyperledger/indy-sdk/pull/1332#issuecomment-445945674,mattraffel,"> While it would change the c-callable API it would not change the wrapper API so end-users won't see any changes.

The proposal for the additional work to this PR is a breaking change.  While the API signature doesn't change (aka it will compile), consumers will be broken because the format of the input (credential_data) will be broken.  That IS A BREAKING CHANGE. 

One option is to make the API support both formats.  I do not believe that is a smart decision.  Support two different input formats does keep consumers from breaking, but it also makes the libvcx code more fragile.   now you have a logic branch and have to test both paths.

I propose we accept the PR as is and do not progress any additional changes at this time.    

",2018-12-10 19:41:04,2018-12-10 20:00:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1332,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446127196,https://github.com/hyperledger/indy-sdk/pull/1332#issuecomment-446127196,jovfer,"@mattraffel As far as I know and understood from Douglas's message above, the `credential_data` for VCX will be changed and yes, it's breaking change. But end-users consumes not C-callable API, but wrappers. And wrappers already have this new format of `credential_data`.
@glowkey please correct me, if I miss something.",2018-12-11 09:13:06,2018-12-11 09:13:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/1332,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/448280470,https://github.com/hyperledger/indy-sdk/pull/1332#issuecomment-448280470,mattraffel,I will make a new PR,2018-12-18 16:25:22,2018-12-18 16:25:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/1330,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444138207,https://github.com/hyperledger/indy-sdk/pull/1330#issuecomment-444138207,cam-parra,@jovfer these are minor document changes. Could we approve and merge? I have not found any inconsistencies ,2018-12-04 15:21:54,2018-12-04 15:21:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/1324,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442769627,https://github.com/hyperledger/indy-sdk/pull/1324#issuecomment-442769627,jovfer,"@tplooker Thanks for contribution! This PR has a problem with our DCO checker. Commits to be accepted should have information about author name and email in signature section.

More information about our DCO policy is here: https://github.com/apps/dco

Here is an information on how to fix this https://github.com/hyperledger/indy-sdk/blob/master/doc/signing-commits.md",2018-11-29 09:42:54,2018-11-29 09:42:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/1324,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442983238,https://github.com/hyperledger/indy-sdk/pull/1324#issuecomment-442983238,tplooker,"@jovfer thanks, I originally signed it with another account and then updated the signature to include my github linked account, is that sufficient or should I resubmit the PR?",2018-11-29 20:33:49,2018-11-29 20:33:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/1321,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442851615,https://github.com/hyperledger/indy-sdk/pull/1321#issuecomment-442851615,vimmerru,"Hi, thanks for contribution! For the moment we don't have plans to provide python wrapper debian artifacts as a part of our release process, but we can keep spec in indy-sdk repo.",2018-11-29 14:24:56,2018-11-29 14:24:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1321,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442874313,https://github.com/hyperledger/indy-sdk/pull/1321#issuecomment-442874313,absltkaos,"@vimmerru Perfect, sounds good.",2018-11-29 15:26:38,2018-11-29 15:26:38
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442777420,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-442777420,jovfer,"I think we can add same checks to Jenkinsfile.cd too
@vimmerru @stevengubler do you have any objections?",2018-11-29 10:07:26,2018-11-29 10:07:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/443041481,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-443041481,stevengubler,I'll add them real quick,2018-11-30 00:09:49,2018-11-30 00:09:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/443707741,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-443707741,jovfer,@Artemkaaas please run this PR on Jenkins with new .ci file,2018-12-03 13:21:43,2018-12-03 13:21:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444139542,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-444139542,cam-parra,@jovfer has this new standard been approved by the sdk community? ,2018-12-04 15:25:28,2018-12-04 15:25:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444802972,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-444802972,jovfer,"@Artemkaaas please share more context: in which path the CI is failed? I guess it's ubuntu and redhat, isn't it?",2018-12-06 09:15:22,2018-12-06 09:15:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444828031,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-444828031,Artemkaaas,"> @Artemkaaas please share more context: in which path the CI is failed? I guess it's ubuntu and redhat, isn't it?

All parts have failed with the same error.",2018-12-06 10:40:10,2018-12-06 10:40:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445086601,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-445086601,stevengubler,"Running `grep -RI  '[^.0-9]1\.27'` shows these places that the rust version needs to be updated. Are there any others?
```
Jenkinsfile.cd:    sh ""rustup default 1.27.0""
vcx/wrappers/java/ci/android.dockerfile:RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.27.0
vcx/ci/ubuntu.dockerfile:ARG RUST_VER=""1.27.0""
vcx/ci/libindy.dockerfile:ARG RUST_VER=""1.27.0""
vcx/ci/libvcx.dockerfile:RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.27.0
vcx/libvcx/build_scripts/ios/mac/mac.01.libindy.setup.sh:    rustup default 1.27.0
libindy/ci/ubuntu.dockerfile:RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.27.0
libindy/ci/amazon.dockerfile:ENV RUST_ARCHIVE=rust-1.27.0-x86_64-unknown-linux-gnu.tar.gz
Jenkinsfile.ci:    sh ""rustup default 1.27.0""
```",2018-12-07 01:05:40,2018-12-07 01:05:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445094716,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-445094716,stevengubler,See #1341 for updating to 1.29,2018-12-07 01:50:14,2018-12-07 01:50:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445173105,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-445173105,jovfer,"@stevengubler we have merged #1341, please resolve conflicts and run build on Jenkins (if you have an access to it (https://ci.evernym.com/job/Indy%20SDK%20CI/view/change-requests/job/PR-1320/) or ask me or Artem to run the build",2018-12-07 09:26:22,2018-12-07 09:26:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445381212,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-445381212,stevengubler,"@jovfer or @Artemkaaas, I do not have access to evernym's jenkins instance, so if someone else could kick that off for me, that would be great",2018-12-07 22:09:26,2018-12-07 22:10:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445818220,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-445818220,jovfer,"@stevengubler please see my comment above about linux platforms.

Other platforms (Windows and MacOS) are failed with error
```
[libindy] Running batch script

c:\cygwin64\var\lib\jenkins\workspace\Indy_SDK_CI\PR-1320\libindy>cargo clippy -- -W clippy::style -W clippy::correctness -W clippy::complexity -W clippy::perf 
   Compiling num-traits v0.2.6
   Compiling error-chain v0.10.0
   Compiling pkg-config v0.3.14
   Compiling version_check v0.1.5
   Compiling toml v0.2.1
   Compiling num-integer v0.1.39
   Compiling typenum v1.10.0
   Compiling proc-macro2 v0.4.24
   Compiling winapi v0.3.6
   Compiling vcpkg v0.2.6
   Compiling num-bigint v0.2.1
   Compiling cc v1.0.25
    Checking libc v0.2.41
error[E0602]: unknown lint: `clippy::style`
  |
  = note: requested on the command line with `-W clippy::style`

error[E0602]: unknown lint: `clippy::correctness`
  |
  = note: requested on the command line with `-W clippy::correctness`

error[E0602]: unknown lint: `clippy::complexity`
  |
  = note: requested on the command line with `-W clippy::complexity`

error[E0602]: unknown lint: `clippy::perf`
  |
  = note: requested on the command line with `-W clippy::perf`

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0602`.
error: Could not compile `libc`.
warning: build failed, waiting for other jobs to finish...
error: build failed
```",2018-12-10 13:39:43,2018-12-10 13:39:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445982494,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-445982494,stevengubler,"I occurs to me that we really don't need to run static analysis on all platforms, since it is OS independent. Static analysis should best happen at its own separate stage before any builds for the platforms begin.
Thoughts?",2018-12-10 21:35:41,2018-12-10 21:35:41
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445997565,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-445997565,stevengubler,"Also @cam-parra , while this isn't an addition explicitly approved by the community, it is a requirement for full compliance with CII Best Practices and therefore [greatly encouraged by Hyperledger](https://wiki.hyperledger.org/community/project-incubation-exit-criteria#minimum_requirements). ",2018-12-10 22:24:41,2018-12-10 22:24:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446003303,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-446003303,cam-parra,@jovfer I have spoken to @nage and he has confirmed that @stevengubler is correct. If clippy is the best way to go about this requirement then I say let's move forward with this PR but I am open to other suggestions ,2018-12-10 22:45:59,2018-12-10 22:45:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446784435,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-446784435,stevengubler,"Hmmm... I wonder if that syntax is only available on new toolchains, because [it is definitely supported.](https://github.com/rust-lang/rust-clippy#allowingdenying-lints) Let's try downgrading errors to warnings in the actual build.rs files. While its not the most optimal solution, it might be our only option until we upgrade to at least the 1.30 toolchain",2018-12-12 23:33:45,2018-12-12 23:33:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446791489,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-446791489,stevengubler,"_Note to self, don't do your work on master, even if it's on your own fork..._",2018-12-13 00:04:25,2018-12-13 00:04:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446848483,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-446848483,Artemkaaas,I believe we can upgrade rust on 1.30. @jovfer do you mind?,2018-12-13 05:37:24,2018-12-13 05:37:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446891400,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-446891400,jovfer,@stevengubler @Artemkaaas I vote for upgrading Rust. We may also try 1.31.0,2018-12-13 08:59:07,2018-12-13 08:59:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/447123876,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-447123876,stevengubler,"Alright. I'll try for 1.31, and if we run into problems we can come down a version.",2018-12-13 21:17:50,2018-12-13 21:17:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/447130672,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-447130672,stevengubler,The upgrade PR is #1357,2018-12-13 21:41:04,2018-12-13 21:41:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/447277904,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-447277904,jovfer,"@stevengubler https://github.com/hyperledger/indy-sdk/pull/1320/checks

@Artemkaaas btw please run updated PR (master now use 1.31) to check how it works now",2018-12-14 10:07:48,2018-12-14 10:07:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/447992921,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-447992921,stevengubler,Apparently DCO signoff stuffs needs you to signoff `git revert` as well. Who'da thunk,2018-12-17 20:46:43,2018-12-17 20:46:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/449146799,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-449146799,stevengubler,"@jover, @cam-parra, @Artemkaaas, Can someone kick off validation for this pr?",2018-12-20 21:51:00,2018-12-20 21:51:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/449949673,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-449949673,jovfer,"@stevengubler Please resolve https://github.com/hyperledger/indy-sdk/pull/1320#pullrequestreview-184244959
As Artem mentioned, Jenkins workers haven't rust env on host. So you have to use docker to access rust env. As for now this pipelines are failed:
```
[Pipeline] stage
[Pipeline] { (Static Analysis)
[Pipeline] parallel
[Pipeline] [libindy] { (Branch: libindy)
[Pipeline] [libnullpay] { (Branch: libnullpay)
[Pipeline] [libvcx] { (Branch: libvcx)
[Pipeline] [cli] { (Branch: cli)
[Pipeline] [libindy] node
[libindy] Running on ubuntu-14 in /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA
[Pipeline] [libnullpay] node
[libnullpay] Running on ubuntu-01 in /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA
[Pipeline] [libvcx] node
[libvcx] Running on ubuntu-11 in /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA
[Pipeline] [cli] node
[cli] Running on ubuntu-09 in /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA
[Pipeline] [libindy] {
[Pipeline] [libnullpay] {
[Pipeline] [libvcx] {
[Pipeline] [cli] {
[Pipeline] [libindy] isUnix
[Pipeline] [libindy] sh
[libindy] [Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA] Running shell script
[Pipeline] [libnullpay] isUnix
[Pipeline] [libnullpay] sh
[libnullpay] [Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA] Running shell script
[Pipeline] [libvcx] isUnix
[Pipeline] [libvcx] sh
[libvcx] [Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA] Running shell script
[Pipeline] [cli] isUnix
[Pipeline] [cli] sh
[libindy] + rustup default 1.31.0
[libindy] /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA@tmp/durable-17cba020/script.sh: 2: /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA@tmp/durable-17cba020/script.sh: rustup: not found
[cli] [Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA] Running shell script
[Pipeline] [libindy] }
[libnullpay] + rustup default 1.31.0
[libnullpay] /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA@tmp/durable-fc7400e6/script.sh: 2: /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA@tmp/durable-fc7400e6/script.sh: rustup: not found
[Pipeline] [libindy] // node
[libvcx] + rustup default 1.31.0
[libvcx] /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA@tmp/durable-b7fabc85/script.sh: 2: /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA@tmp/durable-b7fabc85/script.sh: rustup: not found
[Pipeline] [libindy] }
[libindy] Failed in branch libindy
[Pipeline] [libnullpay] }
[Pipeline] [libnullpay] // node
[cli] + rustup default 1.31.0
[cli] /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA@tmp/durable-3c4518b4/script.sh: 2: /var/lib/jenkins/workspace/Indy_SDK_CI_PR-1320-DFYQBLQAHNMGWRXIAW2HBWKDMGODKCO45LVF5N2AVRF3KOA4QECA@tmp/durable-3c4518b4/script.sh: rustup: not found
[Pipeline] [libnullpay] }
[libnullpay] Failed in branch libnullpay
[Pipeline] [libvcx] }
[Pipeline] [libvcx] // node
[Pipeline] [libvcx] }
[libvcx] Failed in branch libvcx
[Pipeline] [cli] }
[Pipeline] [cli] // node
[Pipeline] [cli] }
[cli] Failed in branch cli
[Pipeline] // parallel
[Pipeline] }
[Pipeline] // stage
[Pipeline] End of Pipeline
```",2018-12-26 10:57:45,2018-12-26 11:06:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/452125878,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-452125878,stevengubler,"@jovfer, @cam-parra, @Artemkaaas, Can someone kick this off?",2019-01-08 00:00:00,2019-01-08 20:10:13
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/453248446,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-453248446,stevengubler,"@jovfer, @cam-parra, @Artemkaaas, Can someone kick this off?",2019-01-10 20:50:01,2019-01-10 20:50:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/458767460,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-458767460,stevengubler,"So I didn't realize this, but clippy is actually trying to perform build-like operations on the codebases. I was under the impression that it wouldn't need to because most of the static analysis tools I've used in the past just simply read your code and don't produce any sort of artifacts other than a report.

This means that we're not going to get away with the current `static-validation.dockerfile`, because it does not contain the dependencies of each of the projects within sdk (cli, libindy, vcx, etc.).

We should probably opt for adding clippy to the existing `ci/ubuntu.dockerfile`s for each of the projects individually. This will keep dependencies cleaner than throwing all of them into a single `static-validation.dockerfile` that works for all of the projects. I will make that change and hopefully it should work from there.

**Side note:** I apologize for how out of control this PR thread is. I wasn't able to setup a reliable local instance of jenkins to be testing out my changes, so most of my commits have been ""We'll see how CI likes it"" affairs, which is really not how this should be done. Sorry if this has been a headache for some of you guys.",2019-01-30 00:50:06,2019-01-30 00:50:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/458930475,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-458930475,cam-parra,"Thanks, @stevengubler for the explanation! Could you make the changes to the dockerfiles and submit those? @jovfer thanks for helping with this :+1:  As @nage has mentioned before this is a very important PR
",2019-01-30 12:44:00,2019-01-30 12:44:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460364218,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-460364218,stevengubler,"Can someone kick off CI for this PR? I've tested this as thoroughly as I can without having access to evernym's private jenkins libraries. 

It will be great to have this static analysis merged for the Hyperledger Indy CII badge. This would be especially great to happen soon, because the sooner that happens, the sooner we graduate from incubation. (Even more important since the Indy status update is just around the corner)",2019-02-04 18:46:23,2019-02-04 18:46:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460811227,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-460811227,stevengubler,"Looks like everything passed. Can we get someone to approve and merge this, so we can mark this off our list for incubation? ",2019-02-05 21:30:10,2019-02-05 21:30:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460823406,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-460823406,jovfer,"@stevengubler @mattraffel is it passed for master or PR version of pipeline. By default Jenkins take pipeline file from master, not from PR",2019-02-05 22:08:41,2019-02-05 22:08:41
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460823917,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-460823917,mattraffel,I've been kicking off build from [here](https://ci.evernym.com/job/Indy%20SDK%20CI/view/change-requests/),2019-02-05 22:10:25,2019-02-05 22:10:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/460824937,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-460824937,jovfer,"@mattraffel it's just run build based on Jenkinsfile.ci from master
You have to open PR changes -> go to new version of .ci -> copy content (it's more convenient to copy from raw representation) -> open latest build -> replay -> replace by copied -> run",2019-02-05 22:13:49,2019-02-05 22:14:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/464061506,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-464061506,jovfer,"@stevengubler the last run was successful https://build.sovrin.org/job/indy-sdk/job/indy-sdk-ci/job/PR-1320/2/ great job, thank you!

btw I have 2 item to discuss before merging this PR:
1) As for now clippy step extends total CI time for significant value (5-20min in different scenario).I suggest to consider an option to move clippy right before building. And most probably only in one pipeline path, like only for ubuntu
2) Now warning startegy is used for clippy command. My expectation is we have to use deny strategy because in case of just warning some new PR may bring into master new warning and this fact would not be caught by CI",2019-02-15 14:05:28,2019-02-15 14:05:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/464152753,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-464152753,stevengubler,"@jovfer Yes, static analysis looks like it adds a lot of time but I think it's actually just shifting some things around right now. Since it uses the same dockerfile as the builds for the subprojects, the static analysis stage is now taking the time to build the dockerfile instead of the build stages. In the end, it should only add a couple minutes of extra time.

Clippy does just warn in the meantime, but this is so that ongoing developer work is not hindered. Once this is in, lets make a bunch of tickets to address the warnings (by either fixing the occurrences and setting them to deny or removing them from checks altogether).",2019-02-15 18:33:04,2019-02-15 18:33:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/464156265,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-464156265,stevengubler,"According to the logs, the actual time spent running clippy was:

| project    | time     |
|------------|----------|
| libindy    | 2min 17s |
| libnullpay | 55s      |
| libvcx     | 3min     |
| cli        | 2min     |

The rest of the time was building the docker images",2019-02-15 18:44:16,2019-02-15 18:45:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/465636184,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-465636184,jovfer,"@stevengubler 1) could you check time for release builds please?
2) ok, it's acceptable plan. Please create at least one ticket and put `TODO` comment like ""IS-XYZ - fix warnings and switch to deny policy"" around clippy runs",2019-02-20 15:53:44,2019-02-20 15:53:44
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/465813080,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-465813080,stevengubler,"@jovfer 
1) I'm not sure what you mean. Do you mean testing out the delivery pipeline (`Jenkinsfile.cd`)? How should I go about that?
2) We actually already have some tickets for this (some of the issues may possibly be out of date at this point). The parent issue is [IS-823](https://jira.hyperledger.org/browse/IS-823).",2019-02-21 00:33:44,2019-02-21 00:33:44
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/466109766,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-466109766,jovfer,"@stevengubler 
1) yes, estimation of time for delivery pipeline is a target. But you can use .ci pipeline and just switch clippy to release mode (I hope it's supported)
2) ok, good. Please put comments to Jenkinsfile.ci/cd pipelines. And please track that the ticket will not be closed, until warnings are resolved.",2019-02-21 18:23:00,2019-02-21 18:23:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467682212,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-467682212,stevengubler,"Alright here are the release timings (`--release`):

| project | time |
|:-|:-:|
| libindy | 4m 50s |
| libnullpay | 1m 34s |
| libvcx | 5m 22s |
| cli | 3m 31s |

And I added the comments referencing [IS-823](https://jira.hyperledger.org/browse/IS-823)",2019-02-27 01:11:43,2019-02-27 01:11:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467710203,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-467710203,stevengubler,"| project | percent change |
|:-|:-:|
| libindy | +112% |
| libnullpay | +71% |
| libvcx | +79% |
| cli | +76% |",2019-02-27 03:31:30,2019-02-27 03:31:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467989164,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-467989164,jovfer,"@stevengubler thanks for update!
In fact we have +5min for release build and my vote is to accept it: in my mind performing static check as separate step against testing is more clear and 3 / 5 min is reasonable cost for clarity",2019-02-27 19:04:48,2019-02-27 19:05:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/467989583,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-467989583,jovfer,@mattraffel @Artemkaaas could you share your thoughts about trade-off: build time vs separate stage?,2019-02-27 19:06:02,2019-02-27 19:06:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/1320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468280072,https://github.com/hyperledger/indy-sdk/pull/1320#issuecomment-468280072,mattraffel,Im fine with it as well,2019-02-28 13:53:03,2019-02-28 13:53:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/1315,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445798417,https://github.com/hyperledger/indy-sdk/pull/1315#issuecomment-445798417,vimmerru,"@tmarkovski 

Hello, thanks for contribution. In current state we don't have plans to expose wallet storage interfaces on wrappers layer. Each language has very different tricks on working with such native interfaces. Also storage written in .Net can be consumed from .Net applications only. It will cause fragmentation of community. My current vision is the following:

1. Custom storages should be implemented as a native libraries
2. Storage library should provide only one public ""init"" method that will call indy_register_wallet_storage internally
3. Application should care about loading storage plugins. Wrappers can provide simple helper method like `load_plugin(path, init_func_name)`
4. indy-cli already allows to work with native plugins for storage and payments

This approach will allow community to get maximum efficiency. 

If you still see real use cases for implementation of storages in .Net we can re-call. Anyway thanks for contribution.",2018-12-10 12:27:22,2018-12-10 12:28:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/1315,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445874135,https://github.com/hyperledger/indy-sdk/pull/1315#issuecomment-445874135,tmarkovski,"@vimmerru Thanks for the clarification. I can see the reasoning for this.
Is the plan to keep exposing `indy_register_wallet_storage` as C callable method to continue supporting development of non-native plugins in proprietary enterprise scenarios?",2018-12-10 16:17:09,2018-12-10 16:17:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1315,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446176554,https://github.com/hyperledger/indy-sdk/pull/1315#issuecomment-446176554,vimmerru,@tmarkovski ```indy_register_wallet_storage``` is public libindy API and will be supported. We just don't want to expose this in wrappers.,2018-12-11 11:54:36,2018-12-11 11:54:36
https://api.github.com/repos/hyperledger/indy-sdk/issues/1315,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446214012,https://github.com/hyperledger/indy-sdk/pull/1315#issuecomment-446214012,tmarkovski,"@vimmerru Great, thank you.

@jovfer Closing this PR. I'll submit another maintenance PR soon with some cleanup code of the previous wallet type implementation.",2018-12-11 14:06:43,2018-12-11 14:06:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1314,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442801548,https://github.com/hyperledger/indy-sdk/pull/1314#issuecomment-442801548,jovfer,"@vimmerru you have suggested to rename some function inside crypto service from encrypt/decrypt to box/box_open
We also have `CryptoType` trait, what do you think about it? Should methods in it be renamed too?
@kdenhartog FYI",2018-11-29 11:32:46,2018-11-29 11:33:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1314,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444136960,https://github.com/hyperledger/indy-sdk/pull/1314#issuecomment-444136960,cam-parra,@jovfer Could we resolve these naming concerns soon? If it's not a major concern then we should merge ,2018-12-04 15:18:31,2018-12-04 15:18:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/1314,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444192507,https://github.com/hyperledger/indy-sdk/pull/1314#issuecomment-444192507,kdenhartog,"As an FYI, we're going to need to consume the AEAD functionality of sodium oxide. If we want this built into the crypto_type interface (I'm leaning towards not bringing it in), then I'd suggest we change the name of authenticated_encrypt/authenticated_decrypt as well.",2018-12-04 17:48:42,2018-12-04 17:48:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/1314,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445205911,https://github.com/hyperledger/indy-sdk/pull/1314#issuecomment-445205911,jovfer,"@kdenhartog @vimmerru I suggest to merge this PR without renaming but with adding some TODOs. The first problem is broken CryptoType trait (generic purpose trait now uses specific data types). The second one - we have to extend it for new functionality or splint into 2 different traits. This changes I suggest to perform in #1210

@kdenhartog please create the ticket (or may be 2 separate) about problems with CryptoType and add TODO(s) in the codebase.",2018-12-07 11:33:12,2018-12-07 11:33:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/1301,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440272235,https://github.com/hyperledger/indy-sdk/pull/1301#issuecomment-440272235,jovfer,@glowkey @hadleym seems like Java tests are failed on Jenkins https://ci.evernym.com/job/Indy%20SDK%20CI/view/change-requests/job/PR-1301/1/execution/node/1688/log/,2018-11-20 13:24:45,2018-11-20 13:24:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1301,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440277558,https://github.com/hyperledger/indy-sdk/pull/1301#issuecomment-440277558,jovfer,And probably there is some problem with python too https://ci.evernym.com/job/Indy%20SDK%20CI/view/change-requests/job/PR-1301/1/execution/node/1740/log/,2018-11-20 13:42:58,2018-11-20 13:42:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/1301,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440966997,https://github.com/hyperledger/indy-sdk/pull/1301#issuecomment-440966997,jovfer,"@glowkey @hadleym as far as I understand in this PR we have some replacement of #1293 for segfault fix in python.
We also have some segfault with VCX NodeJS wrapper https://ci.evernym.com/job/Indy%20SDK%20CI/job/PR-1301/4/execution/node/2134/log/
In CI/CD cycle it's reproduced only on amazon (RedHat) and release build of libvcx
Could you double-check: is problem with NodeJS related to something similar and we should re-open #1293 or there is some different problem.",2018-11-22 09:28:30,2018-11-22 09:29:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/1294,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439926462,https://github.com/hyperledger/indy-sdk/pull/1294#issuecomment-439926462,jovfer,@ryMarsh44 @hadleym Could you review please?,2018-11-19 15:13:35,2018-11-19 15:13:35
https://api.github.com/repos/hyperledger/indy-sdk/issues/1293,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439281077,https://github.com/hyperledger/indy-sdk/pull/1293#issuecomment-439281077,hadleym,"@glowkey 
Please review.",2018-11-16 04:48:19,2018-11-16 04:48:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/1293,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439860343,https://github.com/hyperledger/indy-sdk/pull/1293#issuecomment-439860343,jovfer,@hadleym please fix Java wrapper too,2018-11-19 11:22:27,2018-11-19 11:22:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/1293,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439927457,https://github.com/hyperledger/indy-sdk/pull/1293#issuecomment-439927457,jovfer,"double-check Artem's suggestion on Jenkins: yes, with incremented rust version this PR can pass build stage on Jenkins for VCX (https://github.com/jovfer/indy-sdk/commit/95b7d2a180d342473e8ad3c8e0652b04c4e7bcda). ",2018-11-19 15:16:15,2018-11-19 15:16:15
https://api.github.com/repos/hyperledger/indy-sdk/issues/1293,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439928555,https://github.com/hyperledger/indy-sdk/pull/1293#issuecomment-439928555,hadleym,"@jovfer
I will fix the Java wrapper as well as the rust version as suggested by @Artemkaaas ",2018-11-19 15:19:18,2018-11-19 15:19:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/1293,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439999082,https://github.com/hyperledger/indy-sdk/pull/1293#issuecomment-439999082,hadleym,"@glowkey has found the correct reason for the python segfaults regarding `vcx_error_c_message`, and will implement a fix in his future PR.",2018-11-19 18:44:12,2018-11-19 18:44:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/1286,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440453254,https://github.com/hyperledger/indy-sdk/pull/1286#issuecomment-440453254,mattraffel,I've asked @srottem to look over these changes.   Can we hold off on a merge until we hear back?,2018-11-20 22:33:09,2018-11-20 22:33:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1286,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440459931,https://github.com/hyperledger/indy-sdk/pull/1286#issuecomment-440459931,srottem,What was the intermittent problem?  The difference between an IntPtr and an int is that int is a fixed 32 bit length while IntPtr can be larger or smaller depending on the architecture it's running on.  Since a Rust int should fit into an IntPtr I'm not sure why we would need to change the type.,2018-11-20 23:00:53,2018-11-20 23:00:53
https://api.github.com/repos/hyperledger/indy-sdk/issues/1286,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440472764,https://github.com/hyperledger/indy-sdk/pull/1286#issuecomment-440472764,tmarkovski,"The intermittent error I am seeing is exception with code WalletInvalidHandle = 200 being thrown after wallet has been opened. I suspect this may be related to rust moving int handle values around on the stack. If this happens, the IntPtr the .net runtime references is no longer a valid handle, as the address value has changed. I looked at how the java wrapper handles this, and noticed it uses int value. I made this change and have been testing it internally for about a week before I made the PR. I didn't encounter the error I was seeing before. I am not entirely positive this was the cause of the problem, just that what I suspected and applied a fix, seemed to solve the problem.
Command handles we use in the wrapper use `int` already as opposed to `IntPtr`, so this seemed like a consistent change, too.",2018-11-20 23:56:16,2018-11-21 00:00:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/1286,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440513707,https://github.com/hyperledger/indy-sdk/pull/1286#issuecomment-440513707,srottem,"I'm not convinced that the change from IntPtr to int is why you're no longer experiencing the problem - IntPtr is usually used to hold pointers from C/C++ and maps to the intptr_t type and although Rust is probably not exposing the handles as this type I wouldn't expect it to have caused a problem.  Regardless, as long as the handles exposed by Rust can be stored reliably in a 32-bit integer I don't see a problem with making the change.   ",2018-11-21 03:15:02,2018-11-21 03:15:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/1286,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440591002,https://github.com/hyperledger/indy-sdk/pull/1286#issuecomment-440591002,jovfer,"@tmarkovski @srottem 
> typedef int32_t       indy_handle_t;

it's a handle definition from libindy sources. So I see no reason to use `IntPtr` as it does **not** match to actual types FFI call. My vote is `int` as it's exactly int32 AFAIK
But I'm not expert in C# so I can miss something important about IntPtr while I try to google these nuances",2018-11-21 09:14:26,2018-11-21 09:15:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/1286,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440670221,https://github.com/hyperledger/indy-sdk/pull/1286#issuecomment-440670221,tmarkovski,"Help me out here, my knowledge in Rust is very limited. This is the scenario I was describing.

C#: invokes a new thread and calls unmanaged libindy function
(Stack memory allocated for thread)
Rust: functions creates an int32 handle with memory adress 0xFFFF, value 1
Rust: calls C callback function back to C# and passes value 1
Rust: calls another function to store value 1. At this point the value passed to the store function is copied on the stack at new memory address 0xFFDD (this is how I know rust handles function calls with value types)
C#: stores IntPtr with value 0xFFFF
(Actual stack memory lives as long as the thread is alive)
(Thread ends, stack memory deallocated, C# keeps the IntPtr because there are strong references to it
At this point, Rust still knows the handle value of 1, but it's at address 0xFFDD, while C# still points to address 0xFFFF)
When new thread allocates the memory at 0xFFFF at some point in time and writes new value, any attempt by C# to use the value at 0xFFFF as handle in Rust would throw ""invalid handle"", since Rust tracks the handle by value, and not reference.

Does this make sense as something that would theoretically be possible to occur?",2018-11-21 13:56:46,2018-11-21 14:10:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/1286,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440958611,https://github.com/hyperledger/indy-sdk/pull/1286#issuecomment-440958611,jovfer,"@tmarkovski let me just simplify and point out the major nuance.
Rust return by callback some **value** as input parameter of the cb-function
Any wrapper must store this value, but not the temporary address.
I have not clear vision what particular will be stored in IntPtr, but if it will be address - it's misuse.
And there is another potential problem here - IntPtr size doesn't match to int32",2018-11-22 08:59:30,2018-11-22 08:59:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/437590576,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-437590576,jovfer,"@mikelodder7 colud you try to specify Dev build of Indy crypto instead of git reference?
Like `indy-crypto = ""0.4.4-dev-71""`",2018-11-10 15:12:09,2018-11-10 15:12:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/437640676,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-437640676,mikelodder7,Done,2018-11-11 03:26:50,2018-11-11 03:26:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/437843232,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-437843232,jovfer,@mikelodder7 `high_cases::verifier_verify_proof::verifier_verify_proof_works_for_correct_proof` is failed on Jenkins. Could you double-check in your local env?,2018-11-12 11:14:47,2018-11-12 11:14:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/437945329,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-437945329,mikelodder7,Okay I updated that test case and another one that were out of date. Those passed before but once I did a new pull against hyperledger/indy-sdk I saw the problem.,2018-11-12 16:32:04,2018-11-12 16:32:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/438184363,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-438184363,jovfer,"@mikelodder7 fix for tests seems like breaking-change in JSON API from application point of view. In other words, new verifier/proover will be incompatible with old proover/verifier.

I've briefly reviewed update for IndyCrypto and find https://github.com/hyperledger/indy-crypto/blame/master/libindy-crypto/src/cl/mod.rs#L847 seems like it's a root reason, isn't it?
",2018-11-13 08:48:14,2018-11-13 09:13:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439310167,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-439310167,vimmerru,I added WIP until we finalize versioning approach and fix backward compatibility problems.,2018-11-16 07:51:02,2018-11-16 07:51:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/443314681,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-443314681,esplinr,"We are excited for these new inequality predicates, but the implementation would require existing proofs to be reissued. We either would need to deprecate the current signature type (CL=Camenish-Lisyanskaya), or do the work necessary to support it and a new signature type (CL2).

We eventually want to support multiple signature types. When a new one is added, the old one becomes deprecated and cannot be used for new credentials. We need to evaluate that scope of work before we can finalize these changes.",2018-11-30 19:34:09,2018-11-30 19:34:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/443323329,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-443323329,mikelodder7,This isn’t a signature change. It’s a proof request proof response change. Those need to be versioned. ,2018-11-30 20:04:07,2018-11-30 20:04:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/443331623,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-443331623,esplinr,"Yes they do, but the work has not yet been done.",2018-11-30 20:35:54,2018-11-30 20:35:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/1283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468772380,https://github.com/hyperledger/indy-sdk/pull/1283#issuecomment-468772380,jovfer,"This PR is paused, please find more details in https://jira.hyperledger.org/browse/IS-1131",2019-03-01 18:57:19,2019-03-01 18:57:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439430078,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439430078,vimmerru,"@ianco 

I don't like idea of introducing new top level library that will require dedicated testing, packages creation and deployment. This library has very small auditory - people who want to write storage plugin in Rust, but we can put this library inside of libindy and make it part  of libindy without copy/paste of code. What do you think?",2018-11-16 15:32:29,2018-11-16 15:33:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439432920,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439432920,vimmerru,"@ianco 

2. The second question is about your vision of contributed plugins. Do you provided them only as example or assume long term support? ",2018-11-16 15:40:57,2018-11-16 15:40:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439434171,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439434171,vimmerru,"@ianco 

3. I still don't like idea of usage libindy tests as plugin's test harness. Can we remove this functionality from PR? It will significantly help in merging without reducing a lot of value.

In my vision test harness should be dedicated tool with well defined tests that will guide developers. It doesn't necessary mean copy/paste of code as we can use the same tool for testing of default storage as part of our CI/CD.",2018-11-16 15:44:33,2018-11-16 15:44:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439434667,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439434667,ianco,"Hi @vimmerru  thanks for the feedback!  I agree it's better to not introduce a new top-level library.  Most of the code is already in libindy - I copied it into a new library (instead of copying it into the postgres plug-in library) to try to avoid duplicate code, and to avoid a dependency on libindy.

The code in this new library is mainly from three places - libindy's util package, the error package, and the service/wallet package (and sub-packages).

If I can make some suggestions:

- Make the libindy util package (and sub-packages) public, then this code is available to third-party libraries like the postgres plug-in
- Likewise make the errors package public
- Create a new util/wallet package (and make it public), and move any wallet code which is generic (i.e. can be used across different plug-ins) to this new package (language.rs and storage.rs)

What do you think?  I can make these changes in the PR.
",2018-11-16 15:46:03,2018-11-16 15:46:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439436400,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439436400,ianco,"2.  For in-mem, just as example.  This is just a copy of the existing util/inmem.rs plug-in re-packaged as a stand-alone library.  For postgres, long-term support.  This is the plug-in BC is using in production, so we don't have any choice to support it!  :-D  However we would like to make it available to the community.

3.  I agree with your feedback re test harness.  This PR (1282) has removed this functionality (it is still in the previous PR 1247).  PR 1282 only contains the plug-in and code directly required to run the plug-in.

Note there are two other functions in the original 1247 PR that I will submit as separate PR's once this plug-in PR is merged:  updates to the python wrapper and CLI to support register plug-ins.
",2018-11-16 15:51:29,2018-11-16 15:52:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439440172,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439440172,vimmerru,"> What do you think? I can make these changes in the PR.

It is important to understand that libindy isn't Rust crate. The only artifact that should be consumed is dynamic or static C-compatible library with only pub functions from api module, all another function will be mangled. 

So it is impossible to share any Rust-specific code or making it public. What we can do is create libindy-common inside of libindy folder and add libindy-common crate to dependencies of libindy.

Anyway it is too far from ideal solution as we make public a lot of private unstable interfaces. Copy paste can work better for this case.

@jovfer What do you think?


",2018-11-16 16:03:08,2018-11-16 16:03:08
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439441331,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439441331,ianco,"OK, I see.  Probably makes sense to create libindy-common inside of libindy folder then.
",2018-11-16 16:06:55,2018-11-16 16:06:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439810395,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439810395,vimmerru,"@ianco @jovfer 

I spend some time for thinking and now i am not sure that introduction of libindy-common this way will help us a lot:

1. Interfaces inside of libindy-common are non-public. They can be very dynamic and often part of refactoring. For example, we plan to switch to more modern error handling approach soon. 
2. Moving them to local shared crate will make them public and cause that any libindy refactoring will affect all dependent projects. I don't want to break samples during any refactoring of libindy.
3. Only storage plugins samples are main consumers of proposed shared crate now will consume only smart part of shared interfaces. 
4. It can make vision that you have to use Rust to write libindy plugins.
5. It will be hard to consume  libindy-common outside of libindy repo for creation of 3d party plugins. It will cause copy\paste anyway.

As a result i suggest to copy paste minimum functionality you need and remove libindy-common at all.",2018-11-19 08:32:07,2018-11-19 08:32:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439846042,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439846042,vimmerru,"@ianco 

We can consider creation of separate repo called something like libindy-wallet-storage-boilerplate and make them as community maintained project if you still really want to avoid any copy-paste.  ",2018-11-19 10:31:45,2018-11-19 10:31:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439849753,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439849753,vimmerru,"@ianco

I have feeling that having both ""in-memory"" and ""postgress"" plugins as a samples is a bit too much as we need to support more code in core project. Also ""in-memory"" plugin was designed as a test tool only and it isn't a good example from my point of view. It doesn't implement full wql and breaks some core assumptions about wallet persistence. I suggest the following:

1. Keep ""in-memory"" inside of libindy/tests as we have it now.
2. Use only ""postgress"" plugin as a sample.

Ideally i want to have ""postgress"" plugin in a dedicated repo maintained and published by community member outside of the core team and available as a binary artifact. Libindy can have the link to this repo in the root Readme.md.

Having ""postgress"" inside of samples can cause:

1. It will not be included to CI/CD
2. It can be outdated",2018-11-19 10:44:55,2018-11-19 10:44:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/439879735,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-439879735,vimmerru,"@ianco 

> As described above, a new command has been added to the CLI to register a new plug-in storage. Once registered, this can be used to create and open a new wallet, and supports all wallet functions.

CLI already supports loading any king of wallet storage plugins. You don't need to provide anything new. How it is designed to work:

1. Each libindy plugin should provide only one public function without params. Usually it is called *{plugin_name}_init()*. This function internally calls register_wallet_storage_type or register_payment_method. Corresponded callbacks usually mangled and doesn't available for direct call.
2. Application calls *{plugin_name}_init()* at the beginning and starts usage of registered storage types or payment methods.
3. cli provides command

```
indy> load-plugin library=<library-name> initializer=<init-func-name>
```

Corresponded design is here: https://github.com/hyperledger/indy-sdk/tree/master/doc/design/006-cli-plugins

For example of implementation you can look to libnullpay",2018-11-19 12:40:18,2018-11-19 12:40:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440298295,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-440298295,esplinr,"Thanks Ian for working on this useful feature. We also appreciate that you created related JIRA issues in the Indy SDK project and submitted a HIPE so that we can discuss the various items included in this PR.

For future reference, the related discussions will also be useful:

https://github.com/hyperledger/indy-hipe/pull/49
https://jira.hyperledger.org/browse/IS-1049
https://jira.hyperledger.org/browse/IS-1052",2018-11-20 14:46:58,2018-11-20 14:46:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442120305,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-442120305,cam-parra,@vimmerru do we have any updates on this? I want to propose a nightly branch to be made so that we can unblock this PR,2018-11-27 16:20:14,2018-11-27 16:20:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442146706,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-442146706,ianco,"@cam-parra  I need to review the requested changes I just haven't had time yet ...  hopefully sometime next week
",2018-11-27 17:30:18,2018-11-27 17:30:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442452480,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-442452480,cam-parra,@ianco Thanks! I will be keeping an eye on this to help with the merge process ,2018-11-28 13:48:19,2018-11-28 13:48:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/444910082,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-444910082,ianco,"Updates made per @vimmerru request:

- Moved ""common"" code into storage-postgres project (copy/paste)
- Implemented single plug-in entry point (tested loading the plug-in in the CLI)
- Removed in-mem plug-in sample

The other requests are a bit more tricky (mutexes, lazy loading, etc) as these changes are giving me rust compile errors, so I'll leave the code for now and address later.",2018-12-06 15:26:53,2018-12-06 15:26:53
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/445818024,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-445818024,vimmerru,@ianco Thanks for the update! Will review ASAP.,2018-12-10 13:39:04,2018-12-10 13:39:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446184083,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-446184083,vimmerru,"@ianco @jovfer 

I believe we can accept PR in current state, but it requires some cleanup later:

1. Copy/paste is much more deep than required. It makes code hard to understand and cause misleading. For example, storage don't need any cryptography and don't know anything about encoding, we don't need so deep error handling and etc...
2.  Current code organization is also caused by copy/paste and can be simplified a lot
3. Correct lazy loading and avoiding of mutex-es",2018-12-11 12:23:15,2018-12-11 12:23:15
https://api.github.com/repos/hyperledger/indy-sdk/issues/1282,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446950006,https://github.com/hyperledger/indy-sdk/pull/1282#issuecomment-446950006,ianco,"@vimmerru  @jovfer

Thanks!  I'll create JIRA's for the following items and start to work on them:

1. Copy/paste is much more deep than required. It makes code hard to understand and cause misleading. For example, storage don't need any cryptography and don't know anything about encoding, we don't need so deep error handling and etc...
2. Current code organization is also caused by copy/paste and can be simplified a lot

I might have some questions regarding dependencies - the code I included via copy/past was based on dependencies of existing code.

I'll create a HIRA for this one but it will take a bit longer to fix.

3. Correct lazy loading and avoiding of mutex-es
",2018-12-13 12:22:56,2018-12-13 12:22:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1275,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/437197280,https://github.com/hyperledger/indy-sdk/pull/1275#issuecomment-437197280,hadleym,"@glowkey @ryMarsh44 
Gentlemen, please review.",2018-11-08 23:41:34,2018-11-08 23:41:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/1275,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/437293821,https://github.com/hyperledger/indy-sdk/pull/1275#issuecomment-437293821,jovfer,"@Artemkaaas please review too.
I would like to have 2 reviews for this PR: one from core VCX team and from core libindy team",2018-11-09 08:59:00,2018-11-09 08:59:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/1275,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/437791141,https://github.com/hyperledger/indy-sdk/pull/1275#issuecomment-437791141,jovfer,@hadleym please fix DCO in 871e84e commit,2018-11-12 08:09:11,2018-11-12 08:09:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/1269,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440209373,https://github.com/hyperledger/indy-sdk/pull/1269#issuecomment-440209373,xaviernopre,@Artemkaaas It's done :-),2018-11-20 09:45:55,2018-11-20 09:45:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/1268,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/436559831,https://github.com/hyperledger/indy-sdk/pull/1268#issuecomment-436559831,jovfer,"@xaviernopre @xnopre Thanks for contribution! We are happy to merge this, but your PR has a problem with our DCO checker. Commits to be accepted should have information about author name and email in signature section. 

More information about our DCO policy is here: https://github.com/apps/dco

Here is an information on how to fix this https://github.com/hyperledger/indy-sdk/blob/master/doc/signing-commits.md",2018-11-07 09:26:52,2018-11-07 09:26:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1268,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/436578356,https://github.com/hyperledger/indy-sdk/pull/1268#issuecomment-436578356,xaviernopre,I will do a new PR with DCO informations,2018-11-07 10:29:33,2018-11-07 10:29:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1268,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/436598845,https://github.com/hyperledger/indy-sdk/pull/1268#issuecomment-436598845,jovfer,Moved to #1269 ,2018-11-07 11:51:09,2018-11-07 11:51:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1267,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/436558916,https://github.com/hyperledger/indy-sdk/pull/1267#issuecomment-436558916,jovfer,Moved from #1265 ,2018-11-07 09:23:25,2018-11-07 09:23:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/1267,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/438200328,https://github.com/hyperledger/indy-sdk/pull/1267#issuecomment-438200328,jovfer,"@ryMarsh44 @glowkey @dkulic do we have any PoA/design about revocation in VCX?
In general, I'm OK to merge this partial implementation (only one type of rev registry). But I would like to be sure, that we will be able to implement rest part without breaking-changes and/or overhead in code complexity",2018-11-13 09:39:28,2018-11-13 09:39:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/1267,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442116581,https://github.com/hyperledger/indy-sdk/pull/1267#issuecomment-442116581,cam-parra,@jovfer please review to unblock @dkulic ,2018-11-27 16:10:18,2018-11-27 16:10:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/1267,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/442377959,https://github.com/hyperledger/indy-sdk/pull/1267#issuecomment-442377959,jovfer,"@cam-parra @dkulic I'm reviewing new functionality right now, but as you can see almost all previous review comments are still actual...",2018-11-28 09:24:54,2018-11-28 09:25:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1267,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446123598,https://github.com/hyperledger/indy-sdk/pull/1267#issuecomment-446123598,jovfer,"@dkulic vcx build failed on Jenkins (Rust 1.29)
```
error[E0658]: access to extern crates through prelude is experimental (see issue #44660)
   --> src/utils/libindy/anoncreds.rs:449:58
    |
449 |     let to = if let Some(_to) = to { _to as i64 } else { time::get_time().sec };
    |                                                          ^^^^

error[E0658]: access to extern crates through prelude is experimental (see issue #44660)
   --> src/disclosed_proof.rs:173:71
    |
173 |                         && cached_rev_state.timestamp <= to.unwrap_or(time::get_time().sec as u64) {
    |                                                                       ^^^^

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0658`.
error: Could not compile `libvcx`.
```",2018-12-11 09:01:08,2018-12-11 09:01:08
https://api.github.com/repos/hyperledger/indy-sdk/issues/1267,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446132100,https://github.com/hyperledger/indy-sdk/pull/1267#issuecomment-446132100,dkulic,"Yes, sorry. 
Looks like this is added in Rust 1.30 (I have tested with 1.31), I will downgrade the compiler to test again.",2018-12-11 09:27:52,2018-12-11 09:27:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1247,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/437172026,https://github.com/hyperledger/indy-sdk/pull/1247#issuecomment-437172026,ianco,"Updated to re-factor shared code (between libindy and storage plug-ins) into separate library.
",2018-11-08 22:01:51,2018-11-08 22:01:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/1247,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/440295671,https://github.com/hyperledger/indy-sdk/pull/1247#issuecomment-440295671,esplinr,"We'll discuss all of these changes in the context of PR 1282.

https://github.com/hyperledger/indy-sdk/pull/1282",2018-11-20 14:39:17,2018-11-20 14:39:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/1238,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/432828196,https://github.com/hyperledger/indy-sdk/pull/1238#issuecomment-432828196,ianco,"Closing until conflicts are resolved
",2018-10-24 21:06:10,2018-10-24 21:06:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/1237,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/432830463,https://github.com/hyperledger/indy-sdk/pull/1237#issuecomment-432830463,lovesh,@jovfer https://github.com/hyperledger/indy-sdk/pull/1246,2018-10-24 21:14:05,2018-10-24 21:14:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/1232,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/431078492,https://github.com/hyperledger/indy-sdk/pull/1232#issuecomment-431078492,mgbailey,"Thanks!


On Thu, Oct 18, 2018 at 2:35 AM Vyacheslav <notifications@github.com> wrote:

> Merged #1232 <https://github.com/hyperledger/indy-sdk/pull/1232> into
> master.
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/indy-sdk/pull/1232#event-1911587010>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AFXuAKRFK8lyPGD79sUiDx1uHHxEwapXks5umD04gaJpZM4XkugJ>
> .
>
",2018-10-18 16:37:52,2018-10-18 16:37:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1231,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/430914842,https://github.com/hyperledger/indy-sdk/pull/1231#issuecomment-430914842,vimmerru,"@amanvell Thanks for contribution! We are happy to merge this, but your PR has a problem with our DCO checker. Commits to be accepted should have information about author name and email in signature section. Here is an information on how to fix this https://github.com/hyperledger/indy-sdk/blob/master/doc/signing-commits.md 

More information about our DCO policy is here: https://github.com/apps/dco

",2018-10-18 08:06:12,2018-10-18 08:06:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/1231,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/436985969,https://github.com/hyperledger/indy-sdk/pull/1231#issuecomment-436985969,jovfer,@amanvell please fix DCO and re-open the PR,2018-11-08 13:01:05,2018-11-08 13:01:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/1223,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/430941140,https://github.com/hyperledger/indy-sdk/pull/1223#issuecomment-430941140,donqui,What are the next steps regarding this PR @vimmerru? What needs to be changed?,2018-10-18 09:30:51,2018-10-18 09:30:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/1223,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/431063807,https://github.com/hyperledger/indy-sdk/pull/1223#issuecomment-431063807,glowkey,Knowing this will break downstream components in a non-trivial way I think we either need to inform them and make a plan or do some more work on this PR to make it less disruptive.,2018-10-18 15:55:26,2018-10-18 15:55:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/1223,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/433411478,https://github.com/hyperledger/indy-sdk/pull/1223#issuecomment-433411478,jovfer,"@glowkey review status from you is marked as ""changes requested"" . Is it actual or outdated? Please update it if needed.
FYI @e-nem-y I would like to see approve from Dough first as my review will override final review status",2018-10-26 13:41:35,2018-10-26 13:41:35
https://api.github.com/repos/hyperledger/indy-sdk/issues/1222,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/430938145,https://github.com/hyperledger/indy-sdk/pull/1222#issuecomment-430938145,jovfer,"@glowkey could you review, please?",2018-10-18 09:21:24,2018-10-18 09:21:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/1222,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/431229830,https://github.com/hyperledger/indy-sdk/pull/1222#issuecomment-431229830,hadleym,I agree with everyone on this.  The test is not handling the real issue. I've determined the issue in the python wrapper and will finish this up tomorrow.,2018-10-19 03:00:47,2018-10-19 03:00:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/1222,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/431437174,https://github.com/hyperledger/indy-sdk/pull/1222#issuecomment-431437174,hadleym,"Added a shutdown fixture that needs to be used whenever testing the libvcx `shutdown` or whenever configuration changes are being made (example: test_utils.py)
",2018-10-19 17:25:52,2018-10-19 17:25:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/1222,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/432686824,https://github.com/hyperledger/indy-sdk/pull/1222#issuecomment-432686824,hadleym,"@jovfer @vimmerru 
Those duplicate commits have been removed from this PR's history.",2018-10-24 14:42:58,2018-10-24 14:42:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/1222,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/433837062,https://github.com/hyperledger/indy-sdk/pull/1222#issuecomment-433837062,jovfer,@hadleym please resolve git conflicts. Sounds like we have other PR merged with new error codes,2018-10-29 09:11:25,2018-10-29 09:11:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/1222,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/433917767,https://github.com/hyperledger/indy-sdk/pull/1222#issuecomment-433917767,hadleym,"@jovfer 
Conflicts resolved.",2018-10-29 13:53:12,2018-10-29 13:53:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/1222,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/433928596,https://github.com/hyperledger/indy-sdk/pull/1222#issuecomment-433928596,hadleym,"@jovfer 
This leaves the MISSING_PAYMENT_METHOD as 1087.  The other two error codes are used, so I have simply incremented their codes.",2018-10-29 14:22:41,2018-10-29 14:22:41
https://api.github.com/repos/hyperledger/indy-sdk/issues/1221,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/429905295,https://github.com/hyperledger/indy-sdk/pull/1221#issuecomment-429905295,donqui,@hadleym @glowkey @ryMarsh44  @vimmerru @Artemkaaas @jovfer please review,2018-10-15 15:39:47,2018-10-15 15:39:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/1213,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/429012879,https://github.com/hyperledger/indy-sdk/pull/1213#issuecomment-429012879,jovfer,Moved from #924 ,2018-10-11 16:00:05,2018-10-11 16:00:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/1212,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/429852012,https://github.com/hyperledger/indy-sdk/pull/1212#issuecomment-429852012,jovfer,Not enough resources in current CI/CD infrastructure. We decide to use only iOS tests on Mac machines,2018-10-15 13:27:30,2018-10-15 13:27:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/1210,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/428926328,https://github.com/hyperledger/indy-sdk/pull/1210#issuecomment-428926328,jovfer,"@kdenhartog there are still some history related to microledgers
https://github.com/hyperledger/indy-sdk/pull/1210/commits/911b6589ab89fca24266175fa62f505f77ce527c
https://github.com/hyperledger/indy-sdk/pull/1210/commits/6c9569dcbc00d0701532c70049397313c4a764e5#diff-c97552f5bd97e0797ff7128a93d65025

Can it be deleted? Most probably it can be done by interactive rebase
1) select edit for commit 6c9569d and drop for 911b658
2) remove microledger file from the commit, amend
3) continue/finish rebase 
4) double check: result HEAD should be same with current one

Fill free to slack me if you have any doubts here or problems while rebase",2018-10-11 11:51:32,2018-10-11 11:51:32
https://api.github.com/repos/hyperledger/indy-sdk/issues/1210,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/429084745,https://github.com/hyperledger/indy-sdk/pull/1210#issuecomment-429084745,kdenhartog,"@jovfer thanks for catching that. I'm glad you double checked it because I was having issues rebasing back that far. That whole commit can be removed so I'll fix it. Would squashing the commits together help?

@vimmerru I'll go in and add these changes. Are these requirements documented anywhere? I had a hard time finding details like this as I was working on it. I'm thinking this should be linked in a CONTRIBUTORS.md link describing these sorts of ""tribal knowledge"" type things. By that I mean, these are things that the maintainers know, but anyone who wants to contribute couldn't figure this out without making a PR or getting caught up to speed by a maintainer.",2018-10-11 19:17:56,2018-10-11 19:17:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1210,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/431619895,https://github.com/hyperledger/indy-sdk/pull/1210#issuecomment-431619895,kdenhartog,"@vimmerru I'm running into some issues with adding these tests you've requested. How should I go about adding a DID that has more than one key? I know how to do this through the command layer, but I'm not finding anything that is available at the API layer.",2018-10-20 21:36:56,2018-10-20 21:36:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1210,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/450255167,https://github.com/hyperledger/indy-sdk/pull/1210#issuecomment-450255167,kdenhartog,@vimmerru @jovfer can you guy's take a look at my updates? I'm working on adding wrapper support next. The APIs are exposed now and tested using high cases module.,2018-12-27 23:46:23,2018-12-27 23:46:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1210,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/450255430,https://github.com/hyperledger/indy-sdk/pull/1210#issuecomment-450255430,kdenhartog,I'll add the work from PR 1314 into this PR as well.,2018-12-27 23:48:15,2018-12-27 23:48:15
https://api.github.com/repos/hyperledger/indy-sdk/issues/1210,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/453514680,https://github.com/hyperledger/indy-sdk/pull/1210#issuecomment-453514680,jovfer,@kdenhartog there are some problems in git history of this PR. I'm going to rebase it and make final state same to the current one,2019-01-11 13:21:07,2019-01-11 13:21:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/1210,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/453529654,https://github.com/hyperledger/indy-sdk/pull/1210#issuecomment-453529654,kdenhartog,"Sounds good. Thanks for fixing that.

I did find one mistake that crept in. Right now ComboBox which is used by `authenticated_encrypt ()`has a dependency on message_pack encoding rather than base64url encoding. This should be changed, but I believe it will cause a breaking change to the original Authcrypt function. 

Instead of breaking the old functionality to support new, I'm thinking the best path forward is to create two `ComboBox` functions. Then when we decide `authcrypt` functions are able to be deprecated, we can remove the old `ComboBox`. 

What's your thoughts on this approach @jovfer",2019-01-11 14:15:25,2019-01-11 14:15:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/1209,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/428646501,https://github.com/hyperledger/indy-sdk/pull/1209#issuecomment-428646501,donqui,@hadleym I do not think that merging this will create any problems.,2018-10-10 16:48:24,2018-10-10 16:48:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/1208,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/431300959,https://github.com/hyperledger/indy-sdk/pull/1208#issuecomment-431300959,dkulic,"bash-4.4$ cargo test --no-run
   Compiling indy v1.6.7 (file:///home/dkulic/work/indy-sdk/libindy)                                                                                                                                                                                                                                                         
    Finished dev [unoptimized + debuginfo] target(s) in 2m 45s

I have rustc 1.29.1, maybe that is the reason.
",2018-10-19 09:20:39,2018-10-19 09:21:37
https://api.github.com/repos/hyperledger/indy-sdk/issues/1208,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/431333301,https://github.com/hyperledger/indy-sdk/pull/1208#issuecomment-431333301,jovfer,"@dkulic I've double-checked on my machine
Compilation of tests is failed both for 1.27.0 Rust and 1.29.1
Please make sure that you have no local uncommitted changes or outdated commits
`git log -1 && git status && cargo test --no-run`",2018-10-19 11:31:45,2018-10-19 11:31:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1193,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427740388,https://github.com/hyperledger/indy-sdk/pull/1193#issuecomment-427740388,jovfer,moved to #1194 ,2018-10-08 07:18:51,2018-10-08 07:18:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/1190,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427312133,https://github.com/hyperledger/indy-sdk/pull/1190#issuecomment-427312133,jovfer,Will be merged as part as #1169 ,2018-10-05 10:05:01,2018-10-05 10:05:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/1187,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427325740,https://github.com/hyperledger/indy-sdk/pull/1187#issuecomment-427325740,jovfer,"@AxelNennker  yes, nested extern crate here is required by re-usage utilities from `src` in `tests`.",2018-10-05 10:59:56,2018-10-05 10:59:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1180,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/426918486,https://github.com/hyperledger/indy-sdk/pull/1180#issuecomment-426918486,AxelNennker,Trying to get rid of the superfluous commits. So closing this and trying again ,2018-10-04 07:46:40,2018-10-04 07:46:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1177,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/430564588,https://github.com/hyperledger/indy-sdk/pull/1177#issuecomment-430564588,vimmerru,"When we write 0.10.12 it means that major.minor version should be fixed and patch version can be increased with cargo update.

We use lock file that locks exact versions, but consider cargo update to be regular procedure to get all available patches.

Allowing minor versions to be updated looks much more dangerous procedure and requires analysis of each crate. A lot of crates don't have strong release process. can avoid some SemVer rules and introduce security issues.

In my vision such updates are better to perform manually. We discussed this inside of core team and suggest to keep current process with fixing minor version.

@AxelNennker I am closing this PR. If you still need further discussion we can re-open it. Also if you want to updated some crates to achieve specific goal and analysed the changes we can accept these PRs.",2018-10-17 09:50:00,2018-10-17 09:50:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/1175,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/432000107,https://github.com/hyperledger/indy-sdk/pull/1175#issuecomment-432000107,ianco,"Note that this PR is superceded by https://github.com/hyperledger/indy-sdk/pull/1238 (Postgres wallet storage plug-in), which includes all the changes in this PR.
",2018-10-22 21:43:37,2018-10-22 21:43:37
https://api.github.com/repos/hyperledger/indy-sdk/issues/1175,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/432935078,https://github.com/hyperledger/indy-sdk/pull/1175#issuecomment-432935078,vimmerru,"@ianco 

See my comments in HIPE https://github.com/hyperledger/indy-hipe/pull/49. I believe we need to align what we want to achieve before deep discussion of code.",2018-10-25 06:50:34,2018-10-25 06:50:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/1172,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/426239415,https://github.com/hyperledger/indy-sdk/pull/1172#issuecomment-426239415,jovfer,Moved from #1164 ,2018-10-02 11:28:41,2018-10-02 11:28:41
https://api.github.com/repos/hyperledger/indy-sdk/issues/1170,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/426395541,https://github.com/hyperledger/indy-sdk/pull/1170#issuecomment-426395541,kdenhartog,"Originally I was going to build on his work, but I diverged from that and made a [commit](https://github.com/hyperledger/indy-sdk/pull/1170/commits/1033002a635700efeed06258bf8db85c40a9a74d) to remove all the microledger code. Would you prefer that I remove all that work and resubmit PR?",2018-10-02 19:11:43,2018-10-02 19:11:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/1170,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427032374,https://github.com/hyperledger/indy-sdk/pull/1170#issuecomment-427032374,jovfer,"yes, we should avoid to include commit history of different subject. Please clean-up the history and update PR",2018-10-04 14:06:57,2018-10-04 14:06:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/1170,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/428015917,https://github.com/hyperledger/indy-sdk/pull/1170#issuecomment-428015917,kdenhartog,"more updates added to align with the suggestions brought up. The code needs tested better still.(refactoring the old ones as well as adding new ones). I also need to update the API so the wrappers gain this functionality. Also need to remove @lovesh commits. @jovfer, what is the best way you'd recommend me doing it? Would it be better to copy files onto the current branch or is there a better way to remove these while keeping my progress commits?",2018-10-08 23:59:01,2018-10-09 00:00:44
https://api.github.com/repos/hyperledger/indy-sdk/issues/1170,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/428119745,https://github.com/hyperledger/indy-sdk/pull/1170#issuecomment-428119745,jovfer,@kdenhartog I suggest to try interactive rebase and drop microledgers commits,2018-10-09 09:13:04,2018-10-09 09:13:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1170,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/428763118,https://github.com/hyperledger/indy-sdk/pull/1170#issuecomment-428763118,kdenhartog,"moved rebased branch to a separate branch called ""multiplex-rebase"" will close this and open a new PR.",2018-10-10 23:08:34,2018-10-10 23:08:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/1170,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/428868215,https://github.com/hyperledger/indy-sdk/pull/1170#issuecomment-428868215,jovfer,moved to #1210 ,2018-10-11 08:32:03,2018-10-11 08:32:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/1166,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427038398,https://github.com/hyperledger/indy-sdk/pull/1166#issuecomment-427038398,jovfer,Merged into 1.6.x in #1185 ,2018-10-04 14:23:31,2018-10-04 14:24:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/1161,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/425254005,https://github.com/hyperledger/indy-sdk/pull/1161#issuecomment-425254005,ianco,"Merge issues, abandoning, will fix and issue a new PR
",2018-09-27 21:48:31,2018-09-27 21:48:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/1160,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427098823,https://github.com/hyperledger/indy-sdk/pull/1160#issuecomment-427098823,sklump,Will resubmit. Difficulty navigating DCO as always.,2018-10-04 17:14:26,2018-10-04 17:14:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/1160,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427188958,https://github.com/hyperledger/indy-sdk/pull/1160#issuecomment-427188958,jovfer,Moved to #1188 ,2018-10-04 22:23:30,2018-10-04 22:23:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/1154,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/426284346,https://github.com/hyperledger/indy-sdk/pull/1154#issuecomment-426284346,AxelNennker,"Turns out that openssl sha2 is twice as fast as the sha2 crate's method and also twice as fast as libsodium's method.
So closing this PR.

```    Finished release [optimized + debuginfo] target(s) in 0.02s                                                                                                                                            
    Running target/release/deps/crypto_bench_rustcrypto-2b1f68cfdab32d00

running 6 tests
test digest::sha256::_1000     ... bench:       4,559 ns/iter (+/- 281) = 219 MB/s
test digest::sha256::_16       ... bench:         306 ns/iter (+/- 23) = 52 MB/s
test digest::sha256::_2000     ... bench:       9,317 ns/iter (+/- 1,000) = 214 MB/s
test digest::sha256::_256      ... bench:       1,439 ns/iter (+/- 41) = 177 MB/s
test digest::sha256::_8192     ... bench:      37,831 ns/iter (+/- 3,092) = 216 MB/s
test digest::sha256::block_len ... bench:         594 ns/iter (+/- 33) = 107 MB/s

test result: ok. 0 passed; 0 failed; 0 ignored; 6 measured; 12 filtered out

   Finished release [optimized + debuginfo] target(s) in 0.01s                                                                                                                                            
    Running target/release/deps/crypto_bench_sodiumoxide-c735c721ccf15fea

running 6 tests
test digest::sha256::_1000       ... bench:       4,243 ns/iter (+/- 170) = 235 MB/s
test digest::sha256::_16         ... bench:         311 ns/iter (+/- 40) = 51 MB/s
test digest::sha256::_2000       ... bench:       8,275 ns/iter (+/- 423) = 241 MB/s
test digest::sha256::_256        ... bench:       1,375 ns/iter (+/- 42) = 186 MB/s
test digest::sha256::_8192       ... bench:      33,960 ns/iter (+/- 7,060) = 241 MB/s
test digest::sha256::block_len   ... bench:         595 ns/iter (+/- 21) = 107 MB/s

test result: ok. 0 passed; 0 failed; 0 ignored; 6 measured; 9 filtered out

   Finished release [optimized + debuginfo] target(s) in 0.01s                                                                                                                                            
    Running target/release/deps/crypto_bench_openssl-89872258fec62510

running 6 tests
test digest::sha256::_1000     ... bench:       2,281 ns/iter (+/- 163) = 438 MB/s
test digest::sha256::_16       ... bench:         278 ns/iter (+/- 54) = 57 MB/s
test digest::sha256::_2000     ... bench:       4,274 ns/iter (+/- 116) = 467 MB/s
test digest::sha256::_256      ... bench:         811 ns/iter (+/- 63) = 315 MB/s
test digest::sha256::_8192     ... bench:      16,959 ns/iter (+/- 2,017) = 483 MB/s
test digest::sha256::block_len ... bench:         453 ns/iter (+/- 84) = 141 MB/s

test result: ok. 0 passed; 0 failed; 0 ignored; 6 measured; 19 filtered out```

",2018-10-02 13:59:21,2018-10-02 13:59:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/1152,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/432689531,https://github.com/hyperledger/indy-sdk/pull/1152#issuecomment-432689531,vimmerru,@farskipper Could you solve the conflict? After this we can merge it.,2018-10-24 14:48:35,2018-10-24 14:48:35
https://api.github.com/repos/hyperledger/indy-sdk/issues/1152,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/432716490,https://github.com/hyperledger/indy-sdk/pull/1152#issuecomment-432716490,farskipper,@vimmerru should be good to go now,2018-10-24 15:54:19,2018-10-24 15:54:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/1146,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/422453066,https://github.com/hyperledger/indy-sdk/pull/1146#issuecomment-422453066,mattraffel,Closing until I resolve the DCO issues,2018-09-18 16:05:29,2018-09-18 16:05:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/1143,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/423569941,https://github.com/hyperledger/indy-sdk/pull/1143#issuecomment-423569941,jovfer,Moved to #1153 ,2018-09-21 15:18:16,2018-09-21 15:18:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/1142,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/423501618,https://github.com/hyperledger/indy-sdk/pull/1142#issuecomment-423501618,jovfer,@AxelNennker do you suggest to increment system openssl library version (to 1.1.1?) also?,2018-09-21 11:32:36,2018-09-21 11:32:36
https://api.github.com/repos/hyperledger/indy-sdk/issues/1142,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/423510848,https://github.com/hyperledger/indy-sdk/pull/1142#issuecomment-423510848,AxelNennker,"Not necessarily. Ubuntu is usually many (minor) versions back.
For Android the 1.1.1 version would need to be on https://repo.sovrin.org/android/libindy-deps/openssl/
We could also try vendored=true if cross-compiling and see if rust-openssl does the right thing.",2018-09-21 12:13:09,2018-09-21 12:13:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/1142,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/423511305,https://github.com/hyperledger/indy-sdk/pull/1142#issuecomment-423511305,jovfer,"@vimmerru I think we should create some backlog task for separate migration to newer system openssl.

I suggest to merge this PR after Android unit tests",2018-09-21 12:14:50,2018-09-21 12:14:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/1142,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/423512157,https://github.com/hyperledger/indy-sdk/pull/1142#issuecomment-423512157,AxelNennker,"At some point in time, before wallet import and export was implemented, openssl was used for some BigNumber stuff missing in Rust like is_prime, rand etc but currently openssl is also used to compute hashes in utils/crypto/hash/openssl.rs
I think that those hashes should be computed with the crate sha2 so reducing dependency on openssl. https://jira.hyperledger.org/browse/IS-1002
The remaining bn routines should then replaces by pure rust and openssl removed entirely. ",2018-09-21 12:18:44,2018-09-21 13:28:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/1142,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/425987787,https://github.com/hyperledger/indy-sdk/pull/1142#issuecomment-425987787,AxelNennker,"> @vimmerru I think we should create some backlog task for separate migration to newer system openssl.
> 
> I suggest to merge this PR after Android unit tests

I think this PR adds to indy-sdk.
As @vimmerru said in https://github.com/hyperledger/indy-crypto/pull/126 this does not change the openssl version used but allows developers who have the latest openssl version to use it.",2018-10-01 17:12:40,2018-10-01 17:12:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1138,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/421007629,https://github.com/hyperledger/indy-sdk/pull/1138#issuecomment-421007629,jovfer,@glowkey could you review this PR?,2018-09-13 13:31:12,2018-09-13 13:31:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/1133,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/420868997,https://github.com/hyperledger/indy-sdk/pull/1133#issuecomment-420868997,AxelNennker,"Not sure this optimization is worth the added complexity and the new dependency on threadpool.

EdgeAgents like mobile apps have only a few of not only one wallet for the one user and key derivation does not take that long.
Some is true for validator nodes. Creation of wallet is a rare event.

Cloud Agents might create many wallets when onboarding a new user but this is event is started through a web server which multi-threaded anyway.

Which use case does this optimization address and is it worth it?",2018-09-13 03:10:23,2018-09-13 03:10:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1133,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/421006218,https://github.com/hyperledger/indy-sdk/pull/1133#issuecomment-421006218,jovfer,"@AxelNennker This PR is in development state now (WIP tag in PR title = work in progress)

You can find HIPE about multi-threading in libindy [here](https://github.com/hyperledger/indy-hipe/tree/master/text/0012-concurrency-improvement).

We plan to use some thread pool (most probably it will be different crate) for all long operations. 

In this PR (as [1st phase](https://github.com/hyperledger/indy-hipe/tree/master/text/0012-concurrency-improvement#phase-1-short-term) ) we plan to support as operation for thread pool next 2 most CPU expensive actions:
* key derivation for wallet (derivation is also used for wallet_open and open is not rare operation)
* anoncreds private keys generation

Please let me know if you have something to add to this list.",2018-09-13 13:26:52,2018-09-13 13:27:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/1132,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/423924345,https://github.com/hyperledger/indy-sdk/pull/1132#issuecomment-423924345,AxelNennker,This is https://jira.hyperledger.org/browse/IS-967 in Jira,2018-09-24 09:50:32,2018-09-24 09:50:32
https://api.github.com/repos/hyperledger/indy-sdk/issues/1132,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427779540,https://github.com/hyperledger/indy-sdk/pull/1132#issuecomment-427779540,AxelNennker,"Could someone do a `cargo update` and commit the new Cargo.lock, please?
Maybe I should not cargo update so often, it's a habit. Then I have to pay attention to not muddle my PRs with the new Cargo.lock.",2018-10-08 10:00:04,2018-10-08 10:00:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1132,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427785518,https://github.com/hyperledger/indy-sdk/pull/1132#issuecomment-427785518,jovfer,@AxelNennker https://github.com/hyperledger/indy-sdk/pull/1196 will be merged to 1.6.x firstly and after RC is published - will be merged to master too,2018-10-08 10:25:50,2018-10-08 10:25:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/1131,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/419845376,https://github.com/hyperledger/indy-sdk/pull/1131#issuecomment-419845376,AxelNennker,"There are tests in indy-node and in indy-plenum restricting endpoint to ip address and port
https://github.com/hyperledger/indy-node/blob/master/indy_common/types.py#L193
https://github.com/hyperledger/indy-plenum/blob/master/plenum/common/util.py#L557",2018-09-10 09:17:14,2018-09-10 09:17:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/1130,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/419568642,https://github.com/hyperledger/indy-sdk/pull/1130#issuecomment-419568642,faisal00813,@nsivraj ^,2018-09-07 21:19:32,2018-09-07 21:19:32
https://api.github.com/repos/hyperledger/indy-sdk/issues/1130,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/419617856,https://github.com/hyperledger/indy-sdk/pull/1130#issuecomment-419617856,jovfer,BTW @faisal00813 please cherry pick this one commit at the top of the `rc` branch and update the PR.,2018-09-08 06:39:28,2018-09-08 06:39:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/1130,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/419650472,https://github.com/hyperledger/indy-sdk/pull/1130#issuecomment-419650472,faisal00813,"The android indy-sdk 1.6.2 did not have armv7 and x86-64 support. We added that with 1.6.3.
After the release of 1.6.3 the faulty aar building or libindy was reported. At that moment of time we did not knew if this was aar build issue or the libindy issue.
But what we did know was its because of rustflags. Then we patched 1.6.3 and 1.6.2 for rustflags.

Rustflags fix wise, 1.6.2 == 1.6.6 but with lack of features and bug fixes from 1.6.3 and 1.6.4.",2018-09-08 15:19:11,2018-09-08 15:19:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/1123,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/419001261,https://github.com/hyperledger/indy-sdk/pull/1123#issuecomment-419001261,faisal00813,@jovfer Please review,2018-09-06 07:57:17,2018-09-06 07:57:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/1123,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/419003733,https://github.com/hyperledger/indy-sdk/pull/1123#issuecomment-419003733,jovfer,as we would like to have it in stable ASAP it will be merged as part of #1124 ,2018-09-06 08:06:04,2018-09-06 08:06:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1123,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/419439461,https://github.com/hyperledger/indy-sdk/pull/1123#issuecomment-419439461,jovfer,"Merged to RC, will be merged to master in #1129 ",2018-09-07 13:29:24,2018-09-07 13:29:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/1122,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427339997,https://github.com/hyperledger/indy-sdk/pull/1122#issuecomment-427339997,jovfer,"@AxelNennker now DID validation is very simple, but in general it may depends on crypto/did type (pure Indy, Sovrin, ...) and contains some logic like in one method above `validate_verkey` https://github.com/hyperledger/indy-sdk/pull/1122/files#diff-b2aa1e9288e2d0f2def56a2310115be5L369

So my personal feeling here - it's better to keep generic approach for the full-qualified DID with potential complex checks.

@vimmerru any thoughts?",2018-10-05 11:55:06,2018-10-05 11:55:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/1122,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427342032,https://github.com/hyperledger/indy-sdk/pull/1122#issuecomment-427342032,AxelNennker,"One aspect is how Indy integrates into Hyperledger in general and whether the services, CryptoServices, and others  are the way to implement the abstraction to have different and several different services in Indy.

Currently the internal did format is not important for the outside world and validation is simple. If we export dids then we need to adhere to the did spec. I don't currently see that Indy needs to deal with dids that are not created by Indy. Probably also a question for @nage 
I prefer simpler code over overly flexible code when the flexibility is not happening soon or never.",2018-10-05 12:04:27,2018-10-05 12:04:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/1122,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/429328228,https://github.com/hyperledger/indy-sdk/pull/1122#issuecomment-429328228,jovfer,"One more concerns here: 
by design service in libindy is isolated item and there is no direct interaction between service, only throw command layer. If we will make some functions in some service as public static - we will lose compile time check about service dependency.
May be we should consider option to move DID validation from service to utils",2018-10-12 13:37:02,2018-10-12 13:37:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/1122,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/430595635,https://github.com/hyperledger/indy-sdk/pull/1122#issuecomment-430595635,AxelNennker,"Yes, maybe it is a good idea to move DID validation away from the crypto_service",2018-10-17 11:42:56,2018-10-17 11:42:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1122,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/432606733,https://github.com/hyperledger/indy-sdk/pull/1122#issuecomment-432606733,vimmerru,"I am concerned about having static functions in a service layer as they contradict with the most of patterns for dependency injection and mocking. We don't use it too much for now, but can switch later. 

Also we will start usage of different types of DIDs in the near future. As a result we will need access to service state to get correct handler and will need to return back to instance method approach.

I suggest the following:

1. We can keep the code as is. 
2. We can move validate method to /utils/did.rs and use it.

Personally i am in favor of approach (1) as the current PR doesn't solve real problems, but can introduce complexity in the future refactorings.",2018-10-24 10:43:17,2018-10-24 10:43:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/1122,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/432607259,https://github.com/hyperledger/indy-sdk/pull/1122#issuecomment-432607259,vimmerru,I am closing this for now. @AxelNennker if you still think that approach (2) is significantly better then re-open.,2018-10-24 10:45:18,2018-10-24 10:45:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/1121,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/431386432,https://github.com/hyperledger/indy-sdk/pull/1121#issuecomment-431386432,AxelNennker,"Resolving this gets me into merge hell. Sorry - I guess this happens when a PR get too old.
I am closing this.",2018-10-19 14:41:02,2018-10-19 14:41:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/1111,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/418102936,https://github.com/hyperledger/indy-sdk/pull/1111#issuecomment-418102936,jovfer,Will be merged as part of #1112 ,2018-09-03 12:36:51,2018-09-03 12:36:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/1108,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/417368258,https://github.com/hyperledger/indy-sdk/pull/1108#issuecomment-417368258,fabienpe,Signed-off-by: fabienpe fabienpe@users.noreply.github.com,2018-08-30 15:48:16,2018-08-30 15:48:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/1108,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/417603293,https://github.com/hyperledger/indy-sdk/pull/1108#issuecomment-417603293,jovfer,moved to #1109 ,2018-08-31 09:08:58,2018-08-31 09:08:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/1088,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/415477965,https://github.com/hyperledger/indy-sdk/pull/1088#issuecomment-415477965,AxelNennker,"Could you tell me how the java wrappers are generated? Manually or a script?
Have you thought about `@deprecated` for the java methods?",2018-08-23 16:20:45,2018-08-23 16:20:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1088,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/417256899,https://github.com/hyperledger/indy-sdk/pull/1088#issuecomment-417256899,jovfer,@AxelNennker I think this improvement firstly should be included in branch for patch 1.6.x. So I've changed base branch. Please do not merge this branch with master before this PR will be merged,2018-08-30 09:38:13,2018-08-30 09:38:13
https://api.github.com/repos/hyperledger/indy-sdk/issues/1088,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/417257287,https://github.com/hyperledger/indy-sdk/pull/1088#issuecomment-417257287,jovfer,"@AxelNennker @Artemkaaas now we have warnings while building tests. I suggest to put `allow deprecated` into utility and change demo test.
```
Compiling indy v1.6.4 (file:///var/lib/jenkins/workspace/Indy_SDK_CI_PR-1088-NGLTR3W7HVRFLEI7SFQPURZ7AUWCFOBYE7E7J32BHSRQ6MHHOTZA/libindy)
warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/demo.rs:294:9
    |
294 |         indy_prover_get_credentials_for_proof_req(prover_get_credentials_for_proof_req_command_handle,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials': Please use indy_prover_search_credentials instead!
   --> tests/utils/anoncreds.rs:247:19
    |
247 |         let err = indy_prover_get_credentials(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(deprecated)] on by default

warning: use of deprecated item 'indy::api::anoncreds::indy_prover_get_credentials_for_proof_req': Please use indy_prover_search_credentials_for_proof_req instead!
   --> tests/utils/anoncreds.rs:307:19
    |
307 |         let err = indy_prover_get_credentials_for_proof_req(command_handle,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    Finished dev [unoptimized + debuginfo] target(s) in 544.26 secs
```",2018-08-30 09:39:30,2018-08-30 09:39:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/1079,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/414264718,https://github.com/hyperledger/indy-sdk/pull/1079#issuecomment-414264718,vimmerru,We have tradeoff between early validation and encapsulation. As we moved all (or at least the most) of domain types to dedicated domain module it can be acceptable. I suggest to look to my comment about check_usefull_json! macro,2018-08-20 10:04:38,2018-08-20 10:04:38
https://api.github.com/repos/hyperledger/indy-sdk/issues/1079,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/414266541,https://github.com/hyperledger/indy-sdk/pull/1079#issuecomment-414266541,AxelNennker,"Yes, I would like to move all the types up. Maybe they are even be exposed in the API so that wrappers can directly access the rust structs.

Also we could change the API so that there are methods with the 'real' types too next to the current json strings. We could write those in Rust and have an 'annotation' `#[derive(StructToJsonString)]` that generates the current API from the struct parameter versions. 

Taking it step by step to more idiomatic code.",2018-08-20 10:11:40,2018-08-20 10:11:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1079,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/414280540,https://github.com/hyperledger/indy-sdk/pull/1079#issuecomment-414280540,AxelNennker,Now if only the other types were visible at API-level e.g. PoolInfo,2018-08-20 11:11:30,2018-08-20 11:11:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/1079,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/416234991,https://github.com/hyperledger/indy-sdk/pull/1079#issuecomment-416234991,vimmerru,@AxelNennker FYI i created https://jira.hyperledger.org/browse/IS-912 for early static validation,2018-08-27 13:56:04,2018-08-27 13:56:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/1079,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/416267412,https://github.com/hyperledger/indy-sdk/pull/1079#issuecomment-416267412,AxelNennker,"I don't see the difference between this PR and what the current code does with regard to the error code returned. The difference is when the error is detected not which error code is returned.
Isn't it invalid structure in both versions?
After this PR is merged the invalid json is immediately detected and the error invalid structure is returned.
In the current code the invalid json is detected later and the same error code is returned.
Or do I misunderstand the code?

// still don't know what position error is that you also mention in IS-912",2018-08-27 15:34:01,2018-08-27 15:34:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/1071,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/413187787,https://github.com/hyperledger/indy-sdk/pull/1071#issuecomment-413187787,vimmerru,@dkulic Do you have any design documents about this?,2018-08-15 12:51:20,2018-08-15 12:51:20
https://api.github.com/repos/hyperledger/indy-sdk/issues/1071,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/413192412,https://github.com/hyperledger/indy-sdk/pull/1071#issuecomment-413192412,dkulic,"Currently only
vcx/README.md
vcx/docs/vcx_arch.md

and  Libvcx integration HIPE #29 
but we plan to add more.",2018-08-15 13:09:40,2018-08-15 13:09:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1059,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/412045467,https://github.com/hyperledger/indy-sdk/pull/1059#issuecomment-412045467,jovfer,"@mikelodder7 let me rephrase you suggestion to be on the same page (and also share some background):
enum `EncryptionMethod` is used to provide backward-compatibility
Initially it was only one option here: it was called as `ChaCha20Poly1305IETF` and assume key derivation in `moderate` mode for `argon2i13` algorithm.

We can add almost any new options. And Artem just add one more specific `ChaCha20Poly1305IETFWithSimplify` which assumes `interactive` mode for `argon2i13` algorithm

1) Do you suggest to not add one more variant with fixed parameters, but add configurable variant like
`ChaCha20Poly1305IETFWithConfigForKeyDerivation` ?
2) if 1 is true, right now it seems like metadata to store is salt + opslimit + memlimit + alg. How do you think, should we fix this list of metadata fields or use some flexible way to allow extending of it (it may decrease code readability)?",2018-08-10 10:36:17,2018-08-10 10:37:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/1055,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/412436259,https://github.com/hyperledger/indy-sdk/pull/1055#issuecomment-412436259,faisal00813,"@AxelNennker Were you able to run the x86 emulator on EC2 instance? I was facing issues related to QEMU when I tried to run x86 emulator. 
I believe it is fine for now since we are not running the emulator based tests in Jenkins CI.",2018-08-13 07:51:33,2018-08-13 07:51:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/1055,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/412442421,https://github.com/hyperledger/indy-sdk/pull/1055#issuecomment-412442421,AxelNennker,"I think running x86 emulator on EC2 is not the topic of this PR. The current script starts two emulators. One for the target arch which is arm anyway and then the second for arm without window and audio.
This PR starts exactly one emulator without window and audio and for the target arch which is arm.

I just saw that you removed the double emulator creation some days ago. That is good but now you are ignoring the TARGET_ARCH parameter. You should use this when you create the avd like you do when you delete the avd. 
For EC2 you can set the TARGET_ARCH to arm and everything works.",2018-08-13 08:18:20,2018-08-13 08:23:36
https://api.github.com/repos/hyperledger/indy-sdk/issues/1055,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/412444798,https://github.com/hyperledger/indy-sdk/pull/1055#issuecomment-412444798,AxelNennker,"Hm, maybe you did not mean your question to be related to this PR... Then: No, I do not use EC2
I heard that the x86 emulator is 10x faster than the arm emulator and that CI running time is affecting the number of PRs Indy can handle per day. So speeding up CI by using the x86 emulator might improve that situation.",2018-08-13 08:27:45,2018-08-13 08:27:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/1048,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/411813992,https://github.com/hyperledger/indy-sdk/pull/1048#issuecomment-411813992,AxelNennker,Working with @sklump  one this to have the von_anchor/codec.py and this in sync. ,2018-08-09 16:16:23,2018-08-09 16:16:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1048,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468774200,https://github.com/hyperledger/indy-sdk/pull/1048#issuecomment-468774200,jovfer,related HIPE discussion https://github.com/hyperledger/indy-hipe/pull/47,2019-03-01 19:02:07,2019-03-01 19:02:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/1048,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468774630,https://github.com/hyperledger/indy-sdk/pull/1048#issuecomment-468774630,jovfer,marked as paused as HIPE discussion is in a progress,2019-03-01 19:03:11,2019-03-01 19:03:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/1043,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/436596395,https://github.com/hyperledger/indy-sdk/pull/1043#issuecomment-436596395,jovfer,"@fabienpe I'm closing this PR as it's not a complete solution. More details in 
https://jira.hyperledger.org/browse/IS-1062 and
https://jira.hyperledger.org/browse/IS-983

Please re-open it if you would like to continue ",2018-11-07 11:40:27,2018-11-07 11:40:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/1034,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/411848234,https://github.com/hyperledger/indy-sdk/pull/1034#issuecomment-411848234,AxelNennker,"I guess I have to do that again. What is here is not what I remember but matches my local branch. 
Wonders of git, I guess. Stay tuned.",2018-08-09 18:12:16,2018-08-09 18:12:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/1028,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/410342891,https://github.com/hyperledger/indy-sdk/pull/1028#issuecomment-410342891,esplinr,"I think we made this change to the wrong repository. It should have been the Docker instructions in the README.md for Indy Node. We need to update these instructions per your feedback, and mark the Indy Node instructions as deprecated until we have the chance to update them.",2018-08-03 18:45:49,2018-08-03 18:45:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/1010,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409162986,https://github.com/hyperledger/indy-sdk/pull/1010#issuecomment-409162986,jovfer,@AxelNennker thank you for PR and helping with Android! Are other parts of java wrapper compatible with Android?,2018-07-31 09:49:12,2018-07-31 09:49:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/1010,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409166704,https://github.com/hyperledger/indy-sdk/pull/1010#issuecomment-409166704,AxelNennker,"There seem to be other things that changed. JSONObject uses the method similar that does not exist on Android... Not sure what to do. 
1) Find a json library that has 'similar' or
2) bring your own 'similar' and change the wrapper
3) remove 'similar' if possible

https://github.com/hyperledger/indy-sdk/blob/4459d2f9b929caa23aadf0c71651f352d84dbde1/wrappers/java/src/test/java/org/hyperledger/indy/sdk/non_secrets/GetRecordTest.java#L30",2018-07-31 10:02:34,2018-07-31 10:02:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/1010,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409174511,https://github.com/hyperledger/indy-sdk/pull/1010#issuecomment-409174511,AxelNennker,"I think that 'similar' can and should be removed from the code. 
E.g.: At the code linked to above I suggest to change the code to something like
assertEquals(id, actual.get(""id""));
assertEquals(value, actual.get(""value""));

Should I create a JIRA issue for this task?",2018-07-31 10:32:40,2018-07-31 10:32:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/1010,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409186415,https://github.com/hyperledger/indy-sdk/pull/1010#issuecomment-409186415,jovfer,"There is a potential problem with nested objects. Like `assertEquals(value, actual.get(""value""));` may be false negative",2018-07-31 11:22:50,2018-07-31 11:22:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/1010,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409187524,https://github.com/hyperledger/indy-sdk/pull/1010#issuecomment-409187524,jovfer,"After brief review I prefer 2nd option (create custom similar to be available on Android). But it's not a final vision...
> Should I create a JIRA issue for this task?

appreciated. Please describe all 3 options and motivation to do it (support Android (at least?)). Jira comments is better place to discuss rather this PR, i think",2018-07-31 11:27:50,2018-07-31 11:28:08
https://api.github.com/repos/hyperledger/indy-sdk/issues/1010,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409190918,https://github.com/hyperledger/indy-sdk/pull/1010#issuecomment-409190918,AxelNennker,JIRA issue is here: https://jira.hyperledger.org/browse/IS-853 ,2018-07-31 11:42:23,2018-07-31 11:42:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/1010,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409696640,https://github.com/hyperledger/indy-sdk/pull/1010#issuecomment-409696640,AxelNennker,added the quotes. ,2018-08-01 19:39:31,2018-08-01 19:39:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/1009,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409689430,https://github.com/hyperledger/indy-sdk/pull/1009#issuecomment-409689430,ShivKushwah,Fixed!,2018-08-01 19:12:56,2018-08-01 19:12:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/1009,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409748694,https://github.com/hyperledger/indy-sdk/pull/1009#issuecomment-409748694,jovfer,"@faisal00813 could you review this, please?",2018-08-01 22:41:51,2018-08-01 22:41:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/995,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/408604667,https://github.com/hyperledger/indy-sdk/pull/995#issuecomment-408604667,jovfer,Will be merged as part of #996 ,2018-07-28 12:24:51,2018-07-28 12:24:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/991,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/408164787,https://github.com/hyperledger/indy-sdk/pull/991#issuecomment-408164787,jovfer,Moved to #992 ,2018-07-26 16:59:01,2018-07-26 16:59:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/982,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409675803,https://github.com/hyperledger/indy-sdk/pull/982#issuecomment-409675803,ryanwest6,Fixed sign-off,2018-08-01 18:29:25,2018-08-01 18:29:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/982,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409873851,https://github.com/hyperledger/indy-sdk/pull/982#issuecomment-409873851,jovfer,@ryanwest6 please resolve conflicts with master,2018-08-02 09:58:20,2018-08-02 09:58:20
https://api.github.com/repos/hyperledger/indy-sdk/issues/978,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/407441138,https://github.com/hyperledger/indy-sdk/pull/978#issuecomment-407441138,vimmerru,@jovfer We need documentation for timeouts and pre_ordered_nodes params in libindy and all wrappers,2018-07-24 15:07:37,2018-07-24 15:07:37
https://api.github.com/repos/hyperledger/indy-sdk/issues/978,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/407442186,https://github.com/hyperledger/indy-sdk/pull/978#issuecomment-407442186,vimmerru,Agreed that will be provided by next PR to don't block teams,2018-07-24 15:10:35,2018-07-24 15:10:35
https://api.github.com/repos/hyperledger/indy-sdk/issues/959,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/407114992,https://github.com/hyperledger/indy-sdk/pull/959#issuecomment-407114992,jovfer,"@faisal00813 please update main readme section about installation for android. https://github.com/hyperledger/indy-sdk/blob/master/README.md#installing-the-sdk
Please specify where android artifacts can be found and also please note about experimental status of these artifacts (as we have skipped tests while CI/CD)",2018-07-23 16:16:04,2018-07-23 16:16:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/958,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/407399799,https://github.com/hyperledger/indy-sdk/pull/958#issuecomment-407399799,esplinr,"We would appreciate more explanation about the approach you are using:
* What is the role of the make file? Does it need to be executed by the CI pipeline?
* Why is the documentation in RST instead of MarkDown?
* What is the location where ReadTheDocs will look for the documentation: Off of which branch? How will we keep that pointed at the correct branch?

In the future, it will be easier for us to accept the pull request if we have information like this described in the issue. There are a lot of files modified here, and we need an overview to understand what we are looking at.",2018-07-24 13:07:24,2018-07-24 13:07:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/958,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/407573050,https://github.com/hyperledger/indy-sdk/pull/958#issuecomment-407573050,mjmckean,"> What is the role of the make file? Does it need to be executed by the CI pipeline?

ReadTheDocs builds html versions of documentation using Sphinx, and the make file that was added solely functions in this build. I don't think the CI pipeline would need to execute it, as its success and failure should only influence the ReadTheDocs output. 
> Why is the documentation in RST instead of MarkDown?

ReadTheDocs supports both ReStructuredText and MarkDown; however, I started building with RST because it seems to be better supported on ReadTheDocs. RST also works well with toctrees, which help organize documentation during the build. I spent a decent amount of time looking at how Hyperledger Fabric has structured their ReadTheDocs, and they use RST.
> What is the location where ReadTheDocs will look for the documentation: Off of which branch? How will we keep that pointed at the correct branch?

ReadTheDocs is currently linked to my branch (https://github.com/mjmckean/indy-sdk) through a web hook and updates each time I push to my branch. I have set it up this way as I develop the documentation so that I can push and see the results without interrupting the main branch. At any time we change that--as long as the files are there, the build will take minutes to complete.

Another option to explore would be having an indy-docs repo that hosts this consumer-facing documentation, which could clean up the indy-sdk PR list a bit. @esplinr suggested putting together a HIPE for this idea, which I will work on this week.",2018-07-24 22:30:15,2018-07-24 22:30:38
https://api.github.com/repos/hyperledger/indy-sdk/issues/958,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/408249946,https://github.com/hyperledger/indy-sdk/pull/958#issuecomment-408249946,burdettadam,"After some reflection on the feedback from this PR, @mjmckean and I have a new HIPE (https://github.com/mjmckean/indy-hipe/tree/master/text/indy-docs-repo) proposing new documentation convention.  ",2018-07-26 22:06:50,2018-07-26 22:06:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/958,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446730359,https://github.com/hyperledger/indy-sdk/pull/958#issuecomment-446730359,michaeldboyd,This PR can be closed. In a day or two I will open a new PR based on the specifications in the new documentation framework HIPE: https://github.com/hyperledger/indy-hipe/pull/63,2018-12-12 20:21:48,2018-12-12 20:21:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/958,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/449946146,https://github.com/hyperledger/indy-sdk/pull/958#issuecomment-449946146,jovfer,Replaced by #1365 ,2018-12-26 10:28:43,2018-12-26 10:28:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/955,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405615169,https://github.com/hyperledger/indy-sdk/pull/955#issuecomment-405615169,JanLin,Signed-off-by: Jan Lindquist <jan.lindquist@dativa.com>,2018-07-17 15:04:02,2018-07-17 15:04:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/953,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405977665,https://github.com/hyperledger/indy-sdk/pull/953#issuecomment-405977665,jovfer,@tmarkovski please resolve conflicts with master,2018-07-18 15:43:40,2018-07-18 15:43:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/953,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/406005015,https://github.com/hyperledger/indy-sdk/pull/953#issuecomment-406005015,tmarkovski,@jovfer Done,2018-07-18 17:06:40,2018-07-18 17:06:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/946,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/417611142,https://github.com/hyperledger/indy-sdk/pull/946#issuecomment-417611142,jovfer,"@vimmerru @Artemkaaas  we can't merge this PR as is (some cases in our CI is broken by this changes)
But most probably we will append the PR in scope of supporting multiply windows workers on Jenkins",2018-08-31 09:39:30,2018-08-31 09:39:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/946,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/468818095,https://github.com/hyperledger/indy-sdk/pull/946#issuecomment-468818095,esplinr,"Associated Jira issue:
https://jira.hyperledger.org/browse/IS-1000",2019-03-01 21:29:27,2019-03-01 21:29:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/945,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405179272,https://github.com/hyperledger/indy-sdk/pull/945#issuecomment-405179272,vimmerru,@fabienpe Could you describe a bit how these changes will help with Firewall?,2018-07-16 08:31:33,2018-07-16 08:31:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/945,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405183612,https://github.com/hyperledger/indy-sdk/pull/945#issuecomment-405183612,fabienpe,"This is a workaround I found to make things work on my VM which is behind a corporate firewall. The HKP protocol uses TCP on port 11371, while wget simply uses the standard HTTP on port 80.",2018-07-16 08:51:30,2018-07-16 08:51:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/945,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405391640,https://github.com/hyperledger/indy-sdk/pull/945#issuecomment-405391640,kdenhartog,"An alternative solution I found to this was to publish docker pool image to the docker hub. This is what Hyperledger Sawtooth is doing. We could build this into the CI/CD pipeline of node. I also ran into this issue at hyperledger hackfest in February. There's also issue #587 which had this concern as well. It's not a common concern, but it would be good to document alternative solutions to solve this problem if we don't want to change the current method.",2018-07-16 21:45:13,2018-07-16 21:45:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/945,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405478201,https://github.com/hyperledger/indy-sdk/pull/945#issuecomment-405478201,fabienpe,"Another workaround I just found is simply to replace
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 68DB5E88 
by
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv  68DB5E88
",2018-07-17 06:49:39,2018-07-17 06:49:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/938,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/404508515,https://github.com/hyperledger/indy-sdk/pull/938#issuecomment-404508515,jovfer,"@fabienpe Thank you for contribution.
However, it cannot be accepted without a sign-off from you about intellectual property. See https://github.com/probot/dco#how-it-works. Could you sign your commit (first one) and update the PR?",2018-07-12 13:16:49,2018-07-12 13:16:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/938,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405235124,https://github.com/hyperledger/indy-sdk/pull/938#issuecomment-405235124,jovfer,"@fabienpe please note, that **all** commits should contains sign-off line. You can use interactive rebase to add sign to your first commit and then force push to the branch.",2018-07-16 12:44:07,2018-07-16 12:44:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/938,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405928105,https://github.com/hyperledger/indy-sdk/pull/938#issuecomment-405928105,jovfer,moved to #963 ,2018-07-18 13:21:20,2018-07-18 13:21:20
https://api.github.com/repos/hyperledger/indy-sdk/issues/924,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/409503285,https://github.com/hyperledger/indy-sdk/pull/924#issuecomment-409503285,jovfer,"@keichiri I've added [WIP] tag to title, please remove it after conflicts with master will be resolved.",2018-08-01 08:57:29,2018-08-01 08:57:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/924,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427340197,https://github.com/hyperledger/indy-sdk/pull/924#issuecomment-427340197,jovfer,@Artemkaaas please take a look at this PR. Can we cherry-pick some commits and improve current tests?,2018-10-05 11:56:04,2018-10-05 11:56:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/924,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/427749079,https://github.com/hyperledger/indy-sdk/pull/924#issuecomment-427749079,jovfer,In scope of https://jira.hyperledger.org/browse/IS-1028 PR should be re-opened or replaced by new one,2018-10-08 07:59:17,2018-10-08 07:59:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/921,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/402413947,https://github.com/hyperledger/indy-sdk/pull/921#issuecomment-402413947,jovfer,Moved to #922 ,2018-07-04 09:00:59,2018-07-04 09:00:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/919,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/401749758,https://github.com/hyperledger/indy-sdk/pull/919#issuecomment-401749758,vimmerru,I am not sure that it is a good idea to have CI/CD without tests execution.,2018-07-02 10:13:20,2018-07-02 10:13:20
https://api.github.com/repos/hyperledger/indy-sdk/issues/919,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/402708869,https://github.com/hyperledger/indy-sdk/pull/919#issuecomment-402708869,jovfer,"As we haven't full CI (build + test) for Android yet, it's better to have at least check build as minimal CI.",2018-07-05 12:41:15,2018-07-05 12:41:15
https://api.github.com/repos/hyperledger/indy-sdk/issues/919,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405649318,https://github.com/hyperledger/indy-sdk/pull/919#issuecomment-405649318,faisal00813,@jovfer @vimmerru I have added test in CI script where a build for android architectures happen and serves as a test that the android build is is not broken.,2018-07-17 16:44:54,2018-07-17 16:44:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/919,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405929347,https://github.com/hyperledger/indy-sdk/pull/919#issuecomment-405929347,jovfer,"If I understood correctly #959 is replacement for this one PR.
@faisal00813 @vimmerru should we close this PR?",2018-07-18 13:24:29,2018-07-18 13:24:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/919,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/406317960,https://github.com/hyperledger/indy-sdk/pull/919#issuecomment-406317960,faisal00813,Closing the PR in favour of #959 ,2018-07-19 15:30:09,2018-07-19 15:30:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/918,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/401739568,https://github.com/hyperledger/indy-sdk/pull/918#issuecomment-401739568,jovfer,"@simbo1905 Thank you for contribution.
However, it cannot be accepted without a sign-off from you about intellectual property. See https://github.com/probot/dco#how-it-works. Can you sign your commit (first one) and update the PR?",2018-07-02 09:46:59,2018-07-02 09:46:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/918,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/401764484,https://github.com/hyperledger/indy-sdk/pull/918#issuecomment-401764484,simbo1905,@jovfer I believe that I have force pushed an amended comment with a `signed-off` notice. ,2018-07-02 10:52:33,2018-07-02 10:52:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/918,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/401764766,https://github.com/hyperledger/indy-sdk/pull/918#issuecomment-401764766,simbo1905,apologies wrong identity will try again. ,2018-07-02 10:53:19,2018-07-02 10:53:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/917,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/405393363,https://github.com/hyperledger/indy-sdk/pull/917#issuecomment-405393363,kdenhartog,@vimmerru Is there a reason the CI hasn't returned a status for this? can we get this reviewed and merged?,2018-07-16 21:52:44,2018-07-16 21:52:44
https://api.github.com/repos/hyperledger/indy-sdk/issues/902,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/399915800,https://github.com/hyperledger/indy-sdk/pull/902#issuecomment-399915800,jovfer,Moved to #903 ,2018-06-25 11:10:37,2018-06-25 11:10:37
https://api.github.com/repos/hyperledger/indy-sdk/issues/896,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/399888543,https://github.com/hyperledger/indy-sdk/pull/896#issuecomment-399888543,jovfer,@n3m4nja you have different email addresses in DCO and commit property. Please fix it to pass DCO check.,2018-06-25 09:23:48,2018-06-25 09:23:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/890,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/399916301,https://github.com/hyperledger/indy-sdk/pull/890#issuecomment-399916301,jovfer,Moved to #903 . Probably will be re-opened and merged separately to master for iOS podspecs.,2018-06-25 11:12:48,2018-06-25 11:12:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/887,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398730809,https://github.com/hyperledger/indy-sdk/pull/887#issuecomment-398730809,nveskovic,java wrapper looks good bmo,2018-06-20 12:26:47,2018-06-20 12:26:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/886,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398669815,https://github.com/hyperledger/indy-sdk/pull/886#issuecomment-398669815,vimmerru,"Also we miss context messages. I agree that error processing code looks too boilerplate now, but i am not sure that just changing to default is a right way to proceed. We will discuss this with core team.",2018-06-20 08:35:27,2018-06-20 08:35:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/886,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398670531,https://github.com/hyperledger/indy-sdk/pull/886#issuecomment-398670531,AxelNennker,"@Artemkaaas 
I would argue that InvalidState after a json decode is a misleading anyway. If the result of a read from the ledger is not valid json then this should have been signalled through an error not by an invalid result string. The InvalidStructure is still capsuled in a PoolError so the developer still knows where this comes from. ",2018-06-20 08:37:45,2018-06-20 08:37:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/886,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398672811,https://github.com/hyperledger/indy-sdk/pull/886#issuecomment-398672811,vimmerru,"Not sure that we return InvalidState for invalid ledger data at all. if so then it needs to be changed, but for the following use case InvalidState works well and deeply used:

- We store some json in the wallet
- We read json from the wallet
- We try to deserialize json 
- We raise InvalidState because we detected invalid data in the wallet that should contain only valid data",2018-06-20 08:45:46,2018-06-20 08:45:46
https://api.github.com/repos/hyperledger/indy-sdk/issues/886,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398672898,https://github.com/hyperledger/indy-sdk/pull/886#issuecomment-398672898,AxelNennker,"@vimmerru Wouldn't the context be clear from the call stack when the error is raised? Usually there is a line number and file name so the developer knows which decoding failed.

Is it possible to reduce the number of json strings as parameters anyway? I would like to see it that the API methods immediately convert the json string to proper objects and then pass references to those objects to lower level methods. fail fast ",2018-06-20 08:46:05,2018-06-20 08:47:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/886,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398674678,https://github.com/hyperledger/indy-sdk/pull/886#issuecomment-398674678,vimmerru,"> @vimmerru Wouldn't the context be clear from the call stack when the error is raised? Usually there is a line number and file name so the developer knows what which decoding failed.

We plan to expose these messages in the future through API. Anyway i am thinking about this proposal.

> Is it possible to reduce the number of json strings as parameters anyway? I would like to see it that the API methods immediately convert the json string to proper objects and then pass references to those objects to lower level methods. fail fast

Application defined jsons are always converted on commands layer and service layer works with domain structures. Anoncreds service can be exception because it uses json interface of indy-crypto.


",2018-06-20 08:52:16,2018-06-20 08:52:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/886,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398752501,https://github.com/hyperledger/indy-sdk/pull/886#issuecomment-398752501,AxelNennker,@vimmerru regarding the wallet InvalidState: That would be still capsuled in a WalletError and InvalidStructure is a good name for that error. But if you want to call that InvalidState then go for it.,2018-06-20 13:41:49,2018-06-20 13:42:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/886,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/402550291,https://github.com/hyperledger/indy-sdk/pull/886#issuecomment-402550291,AxelNennker,Anything I can do to progress this?,2018-07-04 19:53:19,2018-07-04 19:53:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/886,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/402618717,https://github.com/hyperledger/indy-sdk/pull/886#issuecomment-402618717,vimmerru,We can't accept the solution because of context specific meaning of this error and different recovery procedure required.,2018-07-05 06:27:07,2018-07-05 06:27:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/883,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398386211,https://github.com/hyperledger/indy-sdk/pull/883#issuecomment-398386211,vimmerru,"PR should satisfy DCO rules https://github.com/probot/dco#how-it-works. It should be just easy. Just add -s option during commit. 

The following command should help with the current commit:

```
git rebase --exec 'git commit --amend --no-edit -n --signoff' -i branch_name_or_hash
```

and after this just push with force",2018-06-19 12:46:56,2018-06-19 12:46:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/883,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398393222,https://github.com/hyperledger/indy-sdk/pull/883#issuecomment-398393222,haroldship,@vimmerru  Ok I think I managed to do that,2018-06-19 13:10:38,2018-06-19 13:10:38
https://api.github.com/repos/hyperledger/indy-sdk/issues/883,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398394221,https://github.com/hyperledger/indy-sdk/pull/883#issuecomment-398394221,vimmerru,Thanks! Now it looks fine.,2018-06-19 13:13:42,2018-06-19 13:13:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/881,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/399962150,https://github.com/hyperledger/indy-sdk/pull/881#issuecomment-399962150,AxelNennker,@jovfer restored the TODO comments,2018-06-25 14:01:02,2018-06-25 14:01:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/867,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/396605864,https://github.com/hyperledger/indy-sdk/pull/867#issuecomment-396605864,mikelodder7,"What parameters are used by Argon2?
Are you using *interactive*, *moderate*, or *sensitive*, or other settings? I would recommend we use *sensitive*.",2018-06-12 14:17:17,2018-06-12 14:17:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/867,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/396606569,https://github.com/hyperledger/indy-sdk/pull/867#issuecomment-396606569,mikelodder7,Is there a reason we are using passwords to derive the key instead of creating the key ourselves and just using the public key for encryption and saving the private key somewhere else? Is the reason convenience to the end user?,2018-06-12 14:19:23,2018-06-12 14:19:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/867,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/396617055,https://github.com/hyperledger/indy-sdk/pull/867#issuecomment-396617055,dkulic,"Looks like I cannot answer directly (the lack of privileges or similar), so I will write here.
1) Moderate for both (memory and cpu) is used, like in open/create of wallet.
2) The reason is to be in-line with open/create.",2018-06-12 14:48:22,2018-06-12 14:48:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/867,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397276591,https://github.com/hyperledger/indy-sdk/pull/867#issuecomment-397276591,mikelodder7,"Is there a reason it needs to be same as open/create?
I’m mostly okay with it but open/create leave the wallet directly under your control whereas export could be moving somewhere that isn’t. If my concern is not big enough then just leave it. Moderate setting is okay for open/create",2018-06-14 12:29:52,2018-06-14 12:29:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/867,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397623181,https://github.com/hyperledger/indy-sdk/pull/867#issuecomment-397623181,vimmerru,"> Is there a reason it needs to be same as open/create?

It just solves the problem in a similar way and don't have obvious drawbacks. This key is visible for user and introducing of new concept can just cause bad UX",2018-06-15 13:39:49,2018-06-15 13:39:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/867,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397623248,https://github.com/hyperledger/indy-sdk/pull/867#issuecomment-397623248,vimmerru,I am ok with this design,2018-06-15 13:40:04,2018-06-15 13:40:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/866,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397978165,https://github.com/hyperledger/indy-sdk/pull/866#issuecomment-397978165,vimmerru,"@AxelNennker 

CI fails on compile:

```
  Compiling indy v1.4.0 (file:///var/lib/jenkins/workspace/Indy_SDK_CI_PR-866-OZTCI2MFWBCDIXNPDLFMKSUQY6Q6VWRDWULFDUA3M3QOKYZNLHDA/libindy)

error: couldn't read ""tests/utils/../../src/utils/inmem_wallet.rs"": No such file or directory (os error 2)

  --> tests/utils/mod.rs:44:9
```",2018-06-18 08:22:51,2018-06-18 08:22:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/866,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397978463,https://github.com/hyperledger/indy-sdk/pull/866#issuecomment-397978463,vimmerru,@Artemkaaas In my vision inmem_walled should be present inside tests/utils only. What do you think?,2018-06-18 08:24:01,2018-06-18 08:24:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/866,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397999119,https://github.com/hyperledger/indy-sdk/pull/866#issuecomment-397999119,AxelNennker,"I regularly run a RUST_TEST_THREADS=1 cargo test --lib
I don't hit the error: ""error: couldn't read ""tests/utils/../../src/utils/inmem_wallet.rs"": No such file or directory (os error 2)"". 

I changed the path now. Although as I don't hit the error this is like somewhat flying blind.

",2018-06-18 09:40:47,2018-06-18 09:47:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/866,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397999930,https://github.com/hyperledger/indy-sdk/pull/866#issuecomment-397999930,AxelNennker,[off topic for this PR] there are many more warning while compiling libindy like unused imports and such. That makes seeing the real issues harder. Is somebody fixing those already?,2018-06-18 09:43:48,2018-06-18 09:43:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/866,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398011360,https://github.com/hyperledger/indy-sdk/pull/866#issuecomment-398011360,vimmerru,"Yes, we got warning now and code requires corresponded hygiene. There is a PR that will fail CI in case of warnings present and corresponded ticket in Jira. ",2018-06-18 10:29:48,2018-06-18 10:29:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/866,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/399906266,https://github.com/hyperledger/indy-sdk/pull/866#issuecomment-399906266,jovfer,"@AxelNennker `cargo test --lib` is not enough to local verification. This command just run ""unit"" tests (placed in `src/` folder near non-test codebase). There are ""integration"" tests in `tests` folder and these tests are also checked during CI/CD.
Personally I use `cargo test --lib` at initial development state, then switch to `cargo test --test <changed module>` and finally (before final pushing) use `cargo test` to run whole set of tests.",2018-06-25 10:30:09,2018-06-25 10:34:46
https://api.github.com/repos/hyperledger/indy-sdk/issues/866,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/418246049,https://github.com/hyperledger/indy-sdk/pull/866#issuecomment-418246049,AxelNennker,Closing this as it has been dormant for too long and resolving the conflicts is too much work.,2018-09-04 05:34:05,2018-09-04 05:34:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/864,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/396184509,https://github.com/hyperledger/indy-sdk/pull/864#issuecomment-396184509,trthhrtz,"@kdenhartog, here is a full explanation of an issue with `create_wallet()`.

In `python3-indy==1.4.0` it has the following structure: 

`async def create_wallet(pool_name: str, name: str,
xtype: Optional[str], config: Optional[str], credentials: Optional[str]) -> None:`

In particular, there is an issue with `credentials`.

`:param credentials: (optional) Wallet credentials json. List of supported keys are defined by wallet type.
     if NULL, then default config will be used.`

If we don't pass `credentials` here (in other words, if we pass `None` as it was in previous how-to), then the following line: `c_credentials = c_char_p(credentials.encode('utf-8')) if credentials is not None else None` will pass `None` to Rust.

However, Rust version [checks](https://github.com/hyperledger/indy-sdk/blob/1f59c75b5423ed0bf83a30e6cde6a58aed1ffc46/libindy/src/api/wallet.rs#L183) if passed `credentials` is of type string and raises an Error.

Therefore, among other things, I added in this how-to: 
`wallet_credentials = json.dumps({""key"": ""wallet_key""})` which is passed later on as `credentials`.



",2018-06-11 09:41:32,2018-06-11 09:57:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/863,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395973185,https://github.com/hyperledger/indy-sdk/pull/863#issuecomment-395973185,vimmerru,"We can't copy/paste the code from previous commits of another contributor. Sorry, i have to close this.",2018-06-09 14:22:35,2018-06-09 14:22:35
https://api.github.com/repos/hyperledger/indy-sdk/issues/862,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395965239,https://github.com/hyperledger/indy-sdk/pull/862#issuecomment-395965239,vimmerru,"> https://doc.rust-lang.org/rust-by-example/error/multiple_error_types/wrap_error.html

I am ok with this, this enhancement was in our plans also. There are a lot of places to change

> https://doc.rust-lang.org/rust-by-example/error/multiple_error_types/reenter_question_mark.html

It is used a lot already. There are map_error, but for:
- places where implementing From is idiomatically wrong
- map_error is also deeply used for initial tracing errors
- some old code ",2018-06-09 12:22:04,2018-06-09 12:22:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/862,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395968546,https://github.com/hyperledger/indy-sdk/pull/862#issuecomment-395968546,AxelNennker,"Are the places this PR changed OK and it can be merged?

Axel

Related to this I am wondering Why does
SubmitAck(
i32, // cmd_id
Result<String, PoolError>, // result json or error
),
return a PoolError and not an IndyError?
in file https://github.com/hyperledger/indy-sdk/blob/master/libindy/src/commands/ledger.rs#L45",2018-06-09 13:18:11,2018-06-09 13:18:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/862,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395970780,https://github.com/hyperledger/indy-sdk/pull/862#issuecomment-395970780,vimmerru,"> Related to this I am wondering Why does
> return a PoolError and not an IndyError?

Because it is Ack from Pool service, not request from the user
",2018-06-09 13:47:32,2018-06-09 13:47:32
https://api.github.com/repos/hyperledger/indy-sdk/issues/862,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395970838,https://github.com/hyperledger/indy-sdk/pull/862#issuecomment-395970838,vimmerru,"> Are the places this PR changed OK and it can be merged?

It is ok, we will merge it, but most probably in a few days as we have a lot of important PRs in merge queue",2018-06-09 13:48:31,2018-06-09 13:48:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/862,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397979677,https://github.com/hyperledger/indy-sdk/pull/862#issuecomment-397979677,vimmerru,@AxelNennker Could you solve conflict and remove WIP tag after it?,2018-06-18 08:28:34,2018-06-18 08:28:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/862,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397980137,https://github.com/hyperledger/indy-sdk/pull/862#issuecomment-397980137,vimmerru,@AxelNennker Could you solve conflict and remove WIP tag after it?,2018-06-18 08:30:21,2018-06-18 08:30:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/862,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398054480,https://github.com/hyperledger/indy-sdk/pull/862#issuecomment-398054480,AxelNennker,I resolved the merge conflict. It stemmed from the introduction of two new methods import and export.,2018-06-18 13:30:51,2018-06-18 13:30:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/854,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395760854,https://github.com/hyperledger/indy-sdk/pull/854#issuecomment-395760854,keichiri,"I am curious, what are the benefits of this approach?",2018-06-08 13:28:59,2018-06-08 13:28:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/854,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395762516,https://github.com/hyperledger/indy-sdk/pull/854#issuecomment-395762516,AxelNennker,"I am not saying that one way to do this is better than the other.
It seems that Clippy and rustfix agree on this style.
Currently libindy code does not sometimes one way and sometime the other way.

I am using the tools to learn indy-sdk and Rust and have no strong opinion one way or the other but maybe the Clippy people have a point and having one style feels the right thing to do.",2018-06-08 13:35:13,2018-06-08 13:35:13
https://api.github.com/repos/hyperledger/indy-sdk/issues/854,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395762788,https://github.com/hyperledger/indy-sdk/pull/854#issuecomment-395762788,vimmerru,"> I am curious, what are the benefits of this approach?

As i understand to satisfy Clippy linter. 

@AxelNennker 

Do you think Clippy is mature enough to be involved deeply to our development process?",2018-06-08 13:36:17,2018-06-08 13:36:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/854,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395770356,https://github.com/hyperledger/indy-sdk/pull/854#issuecomment-395770356,AxelNennker,"At first I would set it up in a way that there is a warning if new code adds new Clippy warnings. I would not fail a PR for that.

Related but different:
I did a rustfmt some days ago on all libindy Rust files. rustfmt has initial Travis configuration... 

Both put an extra hurdle on new developers to contribute so not sure about all this. Developers paid to develop on indy, especially if they work for the same company, might be easier to convince - or not...

Being dogmatic on style might improve readability and some warnings by those tools might actually help find programming errors. YMMW",2018-06-08 14:02:19,2018-06-08 14:02:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/854,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/401741316,https://github.com/hyperledger/indy-sdk/pull/854#issuecomment-401741316,jovfer,@vimmerru @AxelNennker Do we have any conclusion for this PR?,2018-07-02 09:51:29,2018-07-02 09:51:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/854,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/416593239,https://github.com/hyperledger/indy-sdk/pull/854#issuecomment-416593239,AxelNennker,[clippy is available as a rustup component](https://internals.rust-lang.org/t/clippy-is-available-as-a-rustup-component/7967) from July. Seems Clippy is maturing. Should be in 1.29 or 1.20,2018-08-28 13:55:42,2018-08-28 13:55:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/854,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/418245737,https://github.com/hyperledger/indy-sdk/pull/854#issuecomment-418245737,AxelNennker,I am closing this as resolving the conflicts with the current master is more work than this is worth.,2018-09-04 05:32:00,2018-09-04 05:32:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395460351,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395460351,vimmerru,It significantly contradicts with our vision of error handling. The only reason for new error code is ability to be properly recovered by application and not just for debugging. ZMQ is temporary solution and you breaks encapsulation here.,2018-06-07 15:21:23,2018-06-07 15:21:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395470718,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395470718,AxelNennker,"Hm, io error can be anything like a file write error. Maybe the name zmq error is wrong if zmq is only a temporary solution. What would this error class be called while still distinguishing it from some other IO error? ",2018-06-07 15:49:12,2018-06-07 15:49:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395471159,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395471159,vimmerru,What problem do you want to solve? How you plan to recovery in your app?,2018-06-07 15:50:33,2018-06-07 15:50:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395477424,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395477424,AxelNennker,"I think that a random io error is most likely something the app can't recover from. A zmq error might be more likely to recover from. An io error is more likely an internal error of libindy, I think.

The general problem is better error messages. A random io error might not be recovered from while some zmq errors fall into the category 'Please try again later'.",2018-06-07 16:09:34,2018-06-07 16:31:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395512969,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395512969,AxelNennker,"What I think is wrong with the original code is that zmqerror is mapped to common ioerror while all zmq errors are in fact pool errors. So, I think that there should be some PoolError::SecureTransportError that zmqerrors are mapped to. And that new error is visible through the API.",2018-06-07 18:06:26,2018-06-07 18:06:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395525772,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395525772,AxelNennker,I think the new PR reflects better what I wanted to achieve. Thanks for making me think. :-) ,2018-06-07 18:48:36,2018-06-07 18:48:36
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395681443,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395681443,vimmerru,"zmq raises errors very rarely when something is very wrong with networking on edge device. Most probably there will be no way to recover properly. 

> The general problem is better error messages. 

IOError contains error message as string. The only problem is that for now we don't expose this string in our API and we need the backward compatible way to expose messages. One idea that we have is add ```indy_get_error(command_handle)``` endpoint that can be called if app needs better error message. ",2018-06-08 07:59:01,2018-06-08 07:59:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395697333,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395697333,AxelNennker,"I think zmq errors should not be munched into general ioerrors making them indistinguishable from other io errors. 
zmq errors are always pool/ledger errors but there is currently no way to tell that the app.
PoolLedgerSecureTransportError sounds like a fit.

Maybe there is a need for a 'something is very wrong and there is nothing you can do' error like 'HTTP 500'.

Axel

(LedgerNoConsensusError should be rare too and is a sign that something is very wrong and there is not much the app can do then except telling the user to call the hotline so that somebody starts kicking the ledger.)",2018-06-08 08:58:39,2018-06-08 08:58:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395699014,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395699014,vimmerru,"> zmq errors are always pool/ledger

These errors aren't related to pool/ledger at all. We don't expose network timeouts or bad answer from the node as IOError. Only error like ""no network interface present"". 

LedgerNoConsensusError is recoverable error that all applications must handle. Error like ""no permission to send tcp request"" isn't recoverable and app just need to show corresponded error to the user. It is mostly the same as ""no permission to open wallet file"". ",2018-06-08 09:04:54,2018-06-08 09:11:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395838011,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395838011,AxelNennker,"Could you please point me to a file that uses zmq that is not pool.
I can't find on

Axel

ignisvulpis@namenlos:~/development/hyperledger/indy-sdk/libindy/src$ find . -name \*\.rs -exec fgrep 'crate zmq' {} \; -print
extern crate zmq;
./services/pool/mod.rs
extern crate zmq;
./errors/common.rs
extern crate zmq;
./errors/pool.rs
",2018-06-08 17:52:16,2018-06-08 17:52:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395950406,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395950406,vimmerru,"> Could you please point me to a file that uses zmq that is not pool.

zmq is used only inside PoolService.",2018-06-09 08:16:07,2018-06-09 08:16:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395954165,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395954165,AxelNennker,if zmq is only used inside PoolService then we much zmq::Error into an CommonError::IOError and not into a PoolError?,2018-06-09 09:18:01,2018-06-09 09:18:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395954347,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395954347,vimmerru,"Because they have completely different semantics. Pool errors are errors related to consensus, incompatible merkle tree and similar problems. They are io agnostic. IOError is error like ""busy network interface"" or ""non-existing file"".",2018-06-09 09:20:56,2018-06-09 09:20:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395955186,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395955186,AxelNennker,"I am not convinced and still think that the cause of the error should not be lost. Although many zmq error are io errors as their root cause others are not. There are json decode error and mismatching crypto algs and mismatching key length etc which are not io errors.

Anyway I am closing this. Thanks for the discussion.",2018-06-09 09:35:39,2018-06-09 09:36:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395955351,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395955351,vimmerru,If you see the cases were incorrect error is raised i suggest to discuss as it is very important question. Do you see places where ```json decode error and mismatching crypto algs``` returned is IOError?,2018-06-09 09:38:47,2018-06-09 09:38:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395966739,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395966739,AxelNennker,"I can't find the json decode error or crypto algs errors anymore. Sorry.

I searched through my ~/.cargo/.../zmq-*/**/rs files for error. Most of them are io error but not all.

Inside zmq there is e.g. DecodeError
https://github.com/erickt/rust-zmq/blob/master/src/lib.rs#L1163
This should be rare but could pop-up in libindy. Maybe it can never happen because libindy does not use that part of zmq.

zmq calls a few errors 'native zmq errors':
https://github.com/erickt/rust-zmq/blob/fde336758084a5c05f1d9a7e0753049d37b9f88e/zmq-sys/src/errno.rs#L38
https://github.com/erickt/rust-zmq/blob/7bfd3bacca2fbf4ef32b5fa0160d52af85793402/src/lib.rs#L230
    // native zmq error codes
    EFSM            = errno::EFSM as isize,
    ENOCOMPATPROTO  = errno::ENOCOMPATPROTO as isize,
    ETERM           = errno::ETERM as isize,
    EMTHREAD        = errno::EMTHREAD as isize,


There is probably nothing the app using libindy can do - still it feels that PoolLedgerSecureTransportError is 'more correct' than io error.
https://github.com/AxelNennker/indy-sdk/blob/zmqerror/libindy/src/errors/pool.rs#L32

I guess that if zmq is replaced by e.g. mutual TLS or something then other errors will pop up in pool/ledger.

",2018-06-09 12:48:07,2018-06-09 12:48:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395971300,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-395971300,vimmerru,"I am sorry, you just proposes now non-backward compatible changes that all Indy apps developers, Indy wrapper developers, Indy cli developers must adopt, but motivation doesn't seem so strong for such big change.",2018-06-09 13:56:24,2018-06-09 13:56:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/851,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/396003739,https://github.com/hyperledger/indy-sdk/pull/851#issuecomment-396003739,AxelNennker,That's why I closed the PR. I agree that this is probably not worse the trouble but maybe later when a change is needed for other reasons...,2018-06-09 22:39:20,2018-06-09 22:39:20
https://api.github.com/repos/hyperledger/indy-sdk/issues/850,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397871298,https://github.com/hyperledger/indy-sdk/pull/850#issuecomment-397871298,vimmerru,@brentzundel  asI unerstand we don’t need this PR.  I am closing. You can reopen it if needed. ,2018-06-17 11:07:57,2018-06-17 11:07:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/846,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397307394,https://github.com/hyperledger/indy-sdk/pull/846#issuecomment-397307394,keichiri,"I will so the error maps to CommonInvalidState.
Although my understanding is that it is error used when there is something wrong with indy sdk's internal state. Something is corrupted or there is bug which created invalid state.
This is more of a user error how I see it, but I will change it",2018-06-14 14:03:46,2018-06-14 14:03:46
https://api.github.com/repos/hyperledger/indy-sdk/issues/846,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397581434,https://github.com/hyperledger/indy-sdk/pull/846#issuecomment-397581434,keichiri,"Alright. I removed NotClosed error completely. Although I still am not convinced that this is error that should be considered InvalidState. 
I do think that very granular errors like NotClosed is not good approach, since you might end up with hundreds errors in the end. But maybe new generic errors that would indicate error in the sequence of operations/state machine that is not valid can be added.
Or clarify what exactly InvalidState means, since it seems it is overloaded now",2018-06-15 10:32:25,2018-06-15 10:32:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/845,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395940576,https://github.com/hyperledger/indy-sdk/pull/845#issuecomment-395940576,jovfer,Moved to #858 ,2018-06-09 05:06:10,2018-06-09 05:08:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/842,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397806266,https://github.com/hyperledger/indy-sdk/pull/842#issuecomment-397806266,srottem,I'm given to understand that the version being released next is 1.5.0.  Should the .NET assemblies and packaging be set with the same version number?,2018-06-16 11:29:28,2018-06-16 11:29:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/842,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397972950,https://github.com/hyperledger/indy-sdk/pull/842#issuecomment-397972950,vimmerru,"@srottem Yes, It is better to use the same versions for the moment",2018-06-18 08:02:03,2018-06-18 08:02:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/838,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394760030,https://github.com/hyperledger/indy-sdk/pull/838#issuecomment-394760030,vimmerru,"@dhh1128 

> I've read the proposal and it all makes sense to me. I only have one question. It seems that you are proposing to keep a connection open for 5 seconds after creation. If the connection is used actively, would that reset the timeout (so we're really keeping it open for 5 seconds after last use), or would you close it after 5 seconds even if it was actively used at 4.9 seconds after creation?

The main idea is prohibit sending of new requests through this connection after 5 seconds from creation. not from the time of sending the last request.",2018-06-05 15:45:57,2018-06-05 15:45:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/838,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394777383,https://github.com/hyperledger/indy-sdk/pull/838#issuecomment-394777383,lovesh,"> The main idea is prohibit sending of new requests through this connection after 5 seconds from creation. not from the time of sending the last request.

But shouldn't you be increasing the timeout by say 1 sec (less than connection lifetime) on every sent request since a client maybe actively interacting
",2018-06-05 16:37:07,2018-06-05 16:37:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/838,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394778058,https://github.com/hyperledger/indy-sdk/pull/838#issuecomment-394778058,ashcherbakov,"> But shouldn't you be increasing the timeout by say 1 sec (less than connection lifetime) on every sent request since a client maybe actively interacting
No, otherwise the goal (make sure that client connections are closed periodically) is not achieved.",2018-06-05 16:39:12,2018-06-05 16:39:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/838,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394823539,https://github.com/hyperledger/indy-sdk/pull/838#issuecomment-394823539,lovesh,@ashcherbakov The goal is not to close client connections periodically but on inactivity.,2018-06-05 19:02:00,2018-06-05 19:02:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/838,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394973339,https://github.com/hyperledger/indy-sdk/pull/838#issuecomment-394973339,ashcherbakov,"@lovesh No. The goal is to close it periodically, because ZMQ can not close it from the node side. So, if there are malicious (or even valid) active clients sending requests from time to time, then the no more new clients can be connected. 
You can find more details here: https://docs.google.com/document/d/1XghaJtCrBmql-HdhNtKyof-MTaZUVJ5akJ-Tjlc2bfg/edit#",2018-06-06 07:44:21,2018-06-06 07:44:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/837,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397980565,https://github.com/hyperledger/indy-sdk/pull/837#issuecomment-397980565,vimmerru,@AxelNennker Could you solve conflict and remove WIP tag after it?,2018-06-18 08:31:59,2018-06-18 08:31:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/837,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398669276,https://github.com/hyperledger/indy-sdk/pull/837#issuecomment-398669276,vimmerru,Seems merging caused absence of any changes. ,2018-06-20 08:33:22,2018-06-20 08:33:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/837,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/398682894,https://github.com/hyperledger/indy-sdk/pull/837#issuecomment-398682894,AxelNennker,Strange. Will look into why there are not file changed later. Maybe the change sneeked into some other PR already?,2018-06-20 09:19:42,2018-06-20 09:19:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/837,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/399912852,https://github.com/hyperledger/indy-sdk/pull/837#issuecomment-399912852,jovfer,"@AxelNennker seems like during some changes in master Did structure is changed. Not build failed with message:
```
error[E0599]: no method named `to_string` found for type `domain::crypto::did::Did` in the current scope
   --> src/commands/did.rs:220:77
    |
220 |             return Err(IndyError::DidError(DidError::AlreadyExistsError(did.to_string())));
    |                                                                             ^^^^^^^^^
    | 
   ::: src/domain/crypto/did.rs:37:1
    |
37  | pub struct Did {
    | -------------- method `to_string` not found for this
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `domain::crypto::did::Did : std::string::ToString`
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `to_string`, perhaps you need to implement it:
            candidate #1: `std::string::ToString`
```
Could you fix it, please?",2018-06-25 10:57:34,2018-06-25 10:57:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/837,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/399965218,https://github.com/hyperledger/indy-sdk/pull/837#issuecomment-399965218,AxelNennker,"@jovfer fixed it. Sorry, no idea how this happened.",2018-06-25 14:09:47,2018-06-25 14:09:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/835,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/402412754,https://github.com/hyperledger/indy-sdk/pull/835#issuecomment-402412754,jovfer,Moved to #921 ,2018-07-04 08:56:58,2018-07-04 08:56:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/825,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393897730,https://github.com/hyperledger/indy-sdk/pull/825#issuecomment-393897730,Artemkaaas,I have already done it in PR: https://github.com/hyperledger/indy-sdk/pull/822,2018-06-01 14:27:56,2018-06-01 14:27:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/825,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393900683,https://github.com/hyperledger/indy-sdk/pull/825#issuecomment-393900683,dkulic,Already done in PR: #822,2018-06-01 14:37:40,2018-06-01 14:37:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/820,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393541262,https://github.com/hyperledger/indy-sdk/pull/820#issuecomment-393541262,vimmerru,@nveskovic You need to fix commit to statisfy DCO. Look to https://github.com/probot/dco#how-it-works. Also you can ask Darko or Janko to help,2018-05-31 14:05:10,2018-05-31 14:05:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/820,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393541506,https://github.com/hyperledger/indy-sdk/pull/820#issuecomment-393541506,vimmerru,With content i am ok.,2018-05-31 14:05:52,2018-05-31 14:05:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/816,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393138887,https://github.com/hyperledger/indy-sdk/pull/816#issuecomment-393138887,jovfer,This is temporary PR to experiments about DCO check,2018-05-30 12:14:34,2018-05-30 12:14:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/812,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/392907929,https://github.com/hyperledger/indy-sdk/pull/812#issuecomment-392907929,stevengubler,"As a sidenote, I approved this change with Nathan George, so let's please involve him on any discussion on whether or not this should be our strategy to comply with CII standards.",2018-05-29 19:17:59,2018-05-29 19:17:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/812,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393970352,https://github.com/hyperledger/indy-sdk/pull/812#issuecomment-393970352,stevengubler,"Alright, I made the changes you asked for. Anything else?",2018-06-01 18:29:19,2018-06-01 18:29:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/812,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395993408,https://github.com/hyperledger/indy-sdk/pull/812#issuecomment-395993408,jovfer,@vimmerru @Artemkaaas @KitHat please remove warnings in current master and merge this PR,2018-06-09 19:35:31,2018-06-09 19:35:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/802,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/392446667,https://github.com/hyperledger/indy-sdk/pull/802#issuecomment-392446667,vimmerru,@jcace Thanks for contribution. Our process require DCO checking for each PR. Here is info https://github.com/probot/dco#how-it-works. Could you update your PR according to DCO policy?,2018-05-28 07:42:04,2018-05-28 07:42:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/802,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/392544576,https://github.com/hyperledger/indy-sdk/pull/802#issuecomment-392544576,jcace,"Hi @vimmerru , thanks for the tip. Still getting used to contributing... I added the sign-off so I think it's good now! Thanks",2018-05-28 14:40:48,2018-05-28 14:40:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/801,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/392452506,https://github.com/hyperledger/indy-sdk/pull/801#issuecomment-392452506,jovfer,Fixes for CI are merged in #799,2018-05-28 08:06:01,2018-05-28 08:06:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/796,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393139614,https://github.com/hyperledger/indy-sdk/pull/796#issuecomment-393139614,jovfer,"@divacvl could you fix DCO please? I'm not sure about exact reason, but one of the potential problem is inconsistency between commit author data and your github profile. Please add `vladan.divac@evernym.com` email to your GH account and update visible username to `Vladan Divac` as mentioned in your commit.",2018-05-30 12:17:13,2018-05-30 12:17:13
https://api.github.com/repos/hyperledger/indy-sdk/issues/796,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393210050,https://github.com/hyperledger/indy-sdk/pull/796#issuecomment-393210050,divacvl,"Hi,
I have updated GitHub profile as per the instructions.",2018-05-30 15:39:15,2018-05-30 15:39:15
https://api.github.com/repos/hyperledger/indy-sdk/issues/795,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/392077346,https://github.com/hyperledger/indy-sdk/pull/795#issuecomment-392077346,jovfer,@Artemkaaas @vimmerru please review. CI is passed,2018-05-25 14:34:33,2018-05-25 14:34:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/781,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/390957905,https://github.com/hyperledger/indy-sdk/pull/781#issuecomment-390957905,vimmerru,"Hi, You need to fix DCO check https://github.com/probot/dco#how-it-works",2018-05-22 11:32:25,2018-05-22 11:32:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/781,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/390958354,https://github.com/hyperledger/indy-sdk/pull/781#issuecomment-390958354,lodo1995,@vimmerru Done. It always happen when I do a small edit directly inside Github. I still don't know how to sign-off from there.,2018-05-22 11:34:19,2018-05-22 11:34:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/390637471,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-390637471,lodo1995,"@faisal00813 the path `/sdcard/Documents/.indy_client` is not portable to all devices. For example, my phone, which is a Samsung running KitKat with no sd card, does not have it. On my phone, the documents folder is `/storage/emulated/0`.",2018-05-21 12:16:17,2018-05-21 12:16:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393806202,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-393806202,faisal00813,@jovfer @vimmerru Can you please review this.,2018-06-01 08:22:41,2018-06-01 08:22:41
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397025343,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-397025343,AxelNennker,"I suggest not to use cd ../../../.. to get to the root of indy-sdk from the build scripts but to use
e.g. for arm64

#!/usr/bin/env bash

BASEDIR=$(dirname ""$0"")

DEPS_FOLDER=$BASEDIR/dependencies
LIBZMQ=${DEPS_FOLDER}/zmq/libzmq_arm64
OPENSSL=${DEPS_FOLDER}/openssl/openssl_arm64
LIBSODIUM=${DEPS_FOLDER}/sodium/libsodium_arm64
$BASEDIR/build.sh -f arm64 21 aarch64-linux-android android_support ${OPENSSL} ${LIBSODIUM} ${LIBZMQ}

I have send the changed script via email to @faisal00813 

Another thing: Why delete the android ndk? I copied it here so that it does not get downloaded everytime.",2018-06-13 17:45:04,2018-06-15 09:56:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397585594,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-397585594,vimmerru,It would be nice to have a script in libindy root folder that will build artifacts for all platforms.,2018-06-15 10:51:46,2018-06-15 10:51:46
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397585631,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-397585631,vimmerru,"You use https://github.com/nsivraj/openssl_for_ios_and_android to build openssl, This script isn't performed in isolated environment. Does it require any pre-requirements? Can we just use pre-built binary from the same site?",2018-06-15 10:51:57,2018-06-15 10:51:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397585694,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-397585694,vimmerru,Build looks a bit over-complicated now. You use dockerfiles that just perform builds of one thing. It can be much faster (and easy to understand)  to have one dockerfile that setups all necessary environment and set of scripts to execute inside of this dockerfile.,2018-06-15 10:52:18,2018-06-15 10:52:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/397585719,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-397585719,vimmerru,Is there a way to execute  tests?,2018-06-15 10:52:27,2018-06-15 10:52:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/399497569,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-399497569,AxelNennker,Android NDK 17 is out. Update this?,2018-06-22 16:16:31,2018-06-22 16:16:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/400275780,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-400275780,faisal00813,@AxelNennker I don't see any immediate need for updating to NDK17. The changelog suggests deprecation of GCC and we use CLANG in our scripts.,2018-06-26 11:36:06,2018-06-26 11:36:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/400276160,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-400276160,faisal00813,@vimmerru I have simplified the build scripts. Now a single script in root folder of each module (libindy and libnullpay) builds for all the architectures. ,2018-06-26 11:37:40,2018-06-26 11:37:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/400276744,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-400276744,AxelNennker,"I switched out r16 and moved to r17 and rebuild using my scripts and had no problems doing that.
https://github.com/AxelNennker/indy-sdk/blob/android_builds/doc/android-build.md 
I think if you try to change the 16 to 17  and they still work then switch otherwise don't.",2018-06-26 11:40:07,2018-06-26 11:40:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/400276844,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-400276844,faisal00813,Also addressed the concern regarding https://github.com/nsivraj/openssl_for_ios_and_android . Now we use a fork https://github.com/evernym/indy-android-dependencies with a tag.,2018-06-26 11:40:34,2018-06-26 11:48:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/777,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/400648839,https://github.com/hyperledger/indy-sdk/pull/777#issuecomment-400648839,jovfer,"@faisal00813  After auto-merge test compilation is failed, please fix it also
https://ci.evernym.com/job/Indy%20SDK%20CI/view/change-requests/job/PR-777/8/execution/node/97/log/",2018-06-27 12:08:16,2018-06-27 12:08:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/775,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393521030,https://github.com/hyperledger/indy-sdk/pull/775#issuecomment-393521030,vimmerru,I don't see any new API added in this import/export PR. Also there are no any integration tests. We don't merge the code without integration tests (at least basic). Also there are some additional comments that require handling. Do you consider this work as complete or plan to add new functions to api.rs?,2018-05-31 12:56:36,2018-05-31 12:56:36
https://api.github.com/repos/hyperledger/indy-sdk/issues/775,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/396902951,https://github.com/hyperledger/indy-sdk/pull/775#issuecomment-396902951,keichiri,"@vimmerru  I will fix the path issues. 
I am not sure what you mean by commented tests.
There is only one that I see, and that one is very old, not added now",2018-06-13 11:19:49,2018-06-13 11:19:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/766,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/389840798,https://github.com/hyperledger/indy-sdk/pull/766#issuecomment-389840798,mikelodder7,I will remove the docker file. This is the one I use for testing my builds. I also have an android one but I’ll submit that in a different PR.,2018-05-17 11:55:00,2018-05-17 11:55:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/766,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393085669,https://github.com/hyperledger/indy-sdk/pull/766#issuecomment-393085669,jovfer,"@mikelodder7 last CI failed for:
* libindy tests on ubuntu, amazonlinux and windows
* iOS, python and java wrappers
",2018-05-30 09:00:23,2018-05-30 09:00:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/750,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/389218557,https://github.com/hyperledger/indy-sdk/pull/750#issuecomment-389218557,vimmerru,"@Artemkaaas 

Could you provide more valuable description and links to all JIRA tickets this PR covers?",2018-05-15 15:54:16,2018-05-15 15:54:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/749,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/388925111,https://github.com/hyperledger/indy-sdk/pull/749#issuecomment-388925111,trthhrtz,After release of python indy 1.4 version this pull request is not up-to-date anymore,2018-05-14 18:56:11,2018-05-14 18:56:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/747,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/389055665,https://github.com/hyperledger/indy-sdk/pull/747#issuecomment-389055665,vimmerru,I don't understand exact use case for these changes. Could you describe use the case?,2018-05-15 06:20:35,2018-05-15 06:20:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/747,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/389058071,https://github.com/hyperledger/indy-sdk/pull/747#issuecomment-389058071,vimmerru,"For the current moment GSG is available as:

1. Libindy sample: indy-sdk\samples\python\src\getting_started.py
2. Jupyter script: C:\workspace\src\indy-sdk\doc\getting-started\getting-started.ipynb

- To run 1 you just need the pool from indy-sdk\ci\indy-pool.dockerfile
- To run 2 we already have docker-compose script that starts all environment

I don't understand why we need something additional. ",2018-05-15 06:32:22,2018-05-15 06:32:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/747,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/392911047,https://github.com/hyperledger/indy-sdk/pull/747#issuecomment-392911047,stevengubler,"As I said [on JIRA](https://jira.hyperledger.org/browse/IS-686?focusedCommentId=44752&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-44752):
> Good to know about that python script, I was not aware of that. However, it looks to me like the script goes beyond setting up the pool and goes through Alice's part too. The goal of this script was to create a docker pool that has Faber, Acme, and Thrift all set up by default, so that the user can jump right in as Alice.
>
> I not completely sure of how this will be used, but @michaeldboyd  has plans for the getting started guide and he said would like to have this dockerfile for what he's trying to do. I don't know the exact details, so I'm just trying to get it into the repo so that he can use it for what he needs.",2018-05-29 19:26:10,2018-06-04 21:21:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/747,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394257995,https://github.com/hyperledger/indy-sdk/pull/747#issuecomment-394257995,jovfer,"@stevengubler If you reference to something (https://github.com/hyperledger/indy-sdk/pull/747#issuecomment-392911047), please provide the link, not just quoted text without context of task, conversation, etc.",2018-06-04 07:20:49,2018-06-04 07:20:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/747,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394262650,https://github.com/hyperledger/indy-sdk/pull/747#issuecomment-394262650,vimmerru,"@jovfer @ashcherbakov @stevengubler 

I see that we are trying to add some code for old deprecated GSG that is still supported in indy-node repo. For me it looks like it will confuse people a lot. Also we already have similar setup here https://github.com/hyperledger/indy-node/blob/master/environment/docker/pool/StartIndyAgents.md

",2018-06-04 07:41:01,2018-06-04 07:41:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/747,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394513876,https://github.com/hyperledger/indy-sdk/pull/747#issuecomment-394513876,stevengubler,"@jovfer @ashcherbakov @vimmerru 
Oh good. I was unware of these existing docker setups. Maybe work can be done to make them a little more visible and intuitive. Either way, I guess it makes this PR unneeded. Thanks for your help.

---
*Also, as a matter of etiquette, should I close this pull request or let you guys do it?*

*And one last question, do you guys happen to know off the top of your head where [client.ubuntu.dockerfile](https://github.com/hyperledger/indy-node/blob/master/environment/docker/pool/client.ubuntu.dockerfile) gets the `indycore` base image? Is that on docker hub?*",2018-06-04 21:59:14,2018-06-04 22:03:46
https://api.github.com/repos/hyperledger/indy-sdk/issues/747,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/395128831,https://github.com/hyperledger/indy-sdk/pull/747#issuecomment-395128831,jovfer,"@stevengubler 
> should I close this pull request or let you guys do it?

Usually we wait consensus from both sides: the author and reviewer. As I see you opinion to close the PR I will do it. Personally I have only one suggesting: if you are closing your PR by yourself please provide the reason in comment.

> And one last question, do you guys happen to know off the top of your head where 

client.ubuntu.dockerfile gets the indycore base image? Is that on docker hub?
AFAIR `indycore` built from neighbor dockerfile. BTW it's a good question for https://chat.hyperledger.org/channel/indy-node because answer may be helpful for community",2018-06-06 16:21:09,2018-06-06 16:21:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/746,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/389114131,https://github.com/hyperledger/indy-sdk/pull/746#issuecomment-389114131,jovfer,"Most probably we will change structure of builds and dependencies, so this PR is not actual now.",2018-05-15 10:05:30,2018-05-15 10:05:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/734,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/387974933,https://github.com/hyperledger/indy-sdk/pull/734#issuecomment-387974933,vimmerru,Why we don't use relative links here? ,2018-05-10 07:25:23,2018-05-10 07:25:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/734,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/388168444,https://github.com/hyperledger/indy-sdk/pull/734#issuecomment-388168444,kdenhartog,I didn't add them at the beginning because I didn't have a relative link at the beginning. I'll submit a PR that switches them to relative links.,2018-05-10 20:01:49,2018-05-10 20:01:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/733,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/387569340,https://github.com/hyperledger/indy-sdk/pull/733#issuecomment-387569340,kdenhartog,updated to move docs back to the original locations so that the links can be found by those who have already had them shared and included in documents referencing this work.,2018-05-08 23:02:38,2018-05-08 23:03:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/729,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393527170,https://github.com/hyperledger/indy-sdk/pull/729#issuecomment-393527170,vimmerru,Similar changes were merged in a dedicated PR. So i suggest to close this. @swcurran If some additional processing is needed i suggest to just re-open.,2018-05-31 13:19:05,2018-05-31 13:19:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/727,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/388016335,https://github.com/hyperledger/indy-sdk/pull/727#issuecomment-388016335,jovfer,Final version of this changes is merged in #735 ,2018-05-10 10:29:28,2018-05-10 10:29:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/722,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386697959,https://github.com/hyperledger/indy-sdk/pull/722#issuecomment-386697959,peacekeeper,This is a duplicate of https://github.com/hyperledger/indy-sdk/pull/653,2018-05-04 18:47:02,2018-05-04 18:47:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/722,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386796229,https://github.com/hyperledger/indy-sdk/pull/722#issuecomment-386796229,vimmerru,"We also plan to bump sodiumoxide version. For example, here https://github.com/hyperledger/indy-sdk/pull/719. The problem to merge it right now is that it requires also updates in packages. If you can wait for some time I suggest to a bit postpone this until we update all infrastructure ",2018-05-05 10:38:03,2018-05-05 10:38:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/722,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386798118,https://github.com/hyperledger/indy-sdk/pull/722#issuecomment-386798118,peacekeeper,"Just curious, what ""packages"" and ""infrastructure"" do you mean that require updates before this can be merged?",2018-05-05 11:15:57,2018-05-05 11:15:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/722,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386826386,https://github.com/hyperledger/indy-sdk/pull/722#issuecomment-386826386,AxelNennker,Are there jira issues for the package/infrastructure updates?,2018-05-05 18:40:56,2018-05-05 18:40:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/722,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/387090851,https://github.com/hyperledger/indy-sdk/pull/722#issuecomment-387090851,jovfer,Close as duplicate of #653 ,2018-05-07 14:53:23,2018-05-07 14:53:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/717,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/387379536,https://github.com/hyperledger/indy-sdk/pull/717#issuecomment-387379536,vimmerru,"I suggest to merge it as is, but we will need to make some impovments",2018-05-08 12:02:01,2018-05-08 12:02:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/715,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394408863,https://github.com/hyperledger/indy-sdk/pull/715#issuecomment-394408863,vimmerru,@farskipper Could you fix conflicts? Also as i understand we need integrate the same changes as for CI PR.,2018-06-04 16:03:14,2018-06-04 16:03:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/715,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394409138,https://github.com/hyperledger/indy-sdk/pull/715#issuecomment-394409138,vimmerru,"@farskipper We can create new npm user, but i am a bit afraid that this user can post artifacts with the same name. What do you think about this?",2018-06-04 16:04:10,2018-06-04 16:04:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/715,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394713112,https://github.com/hyperledger/indy-sdk/pull/715#issuecomment-394713112,farskipper,"@vimmerru Ok, I updated the branch and fixed the merge conflict.

Not sure what you meant by ""afraid this user can post artifacts with the same name.""  If we create a new npm user, I'll give it permission to publish to `npmjs.com/package/indy-sdk`; and this `Jenkinsfile.cd` is setup to publish pre-releases as well as full releases.",2018-06-05 13:41:20,2018-06-05 13:41:20
https://api.github.com/repos/hyperledger/indy-sdk/issues/715,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/407670046,https://github.com/hyperledger/indy-sdk/pull/715#issuecomment-407670046,ArthurManz,Why is this PR paused?,2018-07-25 08:05:14,2018-07-25 08:05:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/715,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/446711396,https://github.com/hyperledger/indy-sdk/pull/715#issuecomment-446711396,farskipper,I can transfer ownership of the npm package `indy-sdk` to `~hyperledger-ci` or whatever user you'll use to publish the builds. Just let me know which user should own it.,2018-12-12 19:22:32,2018-12-12 19:22:32
https://api.github.com/repos/hyperledger/indy-sdk/issues/714,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393971177,https://github.com/hyperledger/indy-sdk/pull/714#issuecomment-393971177,farskipper,@Artemkaaas Thanks. I made a fix for Jenkinsfile.ci and added nodejs to the ci dockerfiles,2018-06-01 18:32:28,2018-06-01 18:32:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/714,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394341360,https://github.com/hyperledger/indy-sdk/pull/714#issuecomment-394341360,jovfer,Moved into #830: little updated ci pipline and fixed tests to satisfy the latest Libindy,2018-06-04 12:43:53,2018-06-04 12:44:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/711,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386518264,https://github.com/hyperledger/indy-sdk/pull/711#issuecomment-386518264,vimmerru,"We can merge it as is now to unblock Artem, but there are places for improvements. Let's discuss together today.",2018-05-04 06:49:38,2018-05-04 06:49:38
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386066838,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-386066838,michaeldboyd,"The commit that is failing the DCO has the same signature as all the other commits. I don't know why it is failing, sorry.",2018-05-02 18:00:48,2018-05-02 18:00:48
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386249056,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-386249056,jovfer,@michaeldboyd DCO should presents in all commits of the PR. Some commits in this PR has missed DCO.,2018-05-03 10:13:11,2018-05-03 10:13:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386290952,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-386290952,vimmerru,@jovfer I can find commits without DCO. Seems it is some problem of DCO checker,2018-05-03 13:13:42,2018-05-03 13:13:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386339367,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-386339367,jovfer,"@vimmerru I mean `407a869`, `03171dd`,... commits. They have GPG signature, but don't have string signature in commit message as it described in https://github.com/probot/dco#how-it-works",2018-05-03 15:39:58,2018-05-03 15:39:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386342278,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-386342278,jovfer,Should be merged after #701 ,2018-05-03 15:48:30,2018-05-03 15:48:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386360495,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-386360495,michaeldboyd,"@jovfer @vimmerru I have used the command that I wrote about: `git rebase --exec 'git commit --amend --no-edit -n -s -S' -i HASH` to fix my commit history, where HASH is the commit hash of the earliest commit needing to be changed. I am not sure if this is the best way to do it. Is there a better way to change commits? Are GPG signatures even required?",2018-05-03 16:46:32,2018-05-03 16:47:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386531602,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-386531602,jovfer,"@michaeldboyd your command most probably is fastest way to fix DCO in multiply commits. 
If missed DCO is detected right after commit (and only in this, the latest commit) I usually perform `git commit --amend --no-edit --sign-off` .",2018-05-04 08:05:03,2018-05-04 08:05:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386650061,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-386650061,michaeldboyd,"The merge conflict in the readme can be resolved by accepting the upstream, I didn't make any more changes in it.",2018-05-04 16:12:23,2018-05-04 16:12:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/391817954,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-391817954,michaeldboyd,@dhh1128  @vimmerru What else needs to happen so this can be merged with master?,2018-05-24 18:40:19,2018-05-24 18:40:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/706,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/391976389,https://github.com/hyperledger/indy-sdk/pull/706#issuecomment-391976389,vimmerru,"@michaeldboyd 

1. We need to remove any changes related to getting-started from this PR. 
2. I am not sure that we explain idea of DCO. May be just add links to DCO (https://developercertificate.org/) and DCO bot page.",2018-05-25 08:09:47,2018-05-25 08:09:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/701,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386352965,https://github.com/hyperledger/indy-sdk/pull/701#issuecomment-386352965,michaeldboyd,@jovfer Just fixed that typo,2018-05-03 16:21:52,2018-05-03 16:21:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/699,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/387319583,https://github.com/hyperledger/indy-sdk/pull/699#issuecomment-387319583,jovfer,@lovesh I will mark this PR as [WIP] because some discussion threads are in progress. Please remove this suffix after necessary changes will be done.,2018-05-08 08:03:22,2018-05-08 08:03:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/699,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/431288814,https://github.com/hyperledger/indy-sdk/pull/699#issuecomment-431288814,vimmerru,"No any progress here for month and codebase is changes significantly. I am closing this,",2018-10-19 08:36:58,2018-10-19 08:36:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/697,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386998770,https://github.com/hyperledger/indy-sdk/pull/697#issuecomment-386998770,vimmerru,I suggest to merge this. It is in review significant time and we don't have negative feedback,2018-05-07 08:39:59,2018-05-07 08:39:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/696,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/392505339,https://github.com/hyperledger/indy-sdk/pull/696#issuecomment-392505339,vimmerru,"@dhh1128 

> Also, I want to eliminate the relationship between wallets and pools. A wallet should be able to hold info from multiple pools, with the DID method prefix guaranteeing uniqueness (that is, we store ""did:sov:abcxyz"", not just ""abcxzy"" as the wallet key.

I suggest to implement this as a dedicated PR. Too much for one PR. ",2018-05-28 11:46:14,2018-05-28 11:46:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/692,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/384978980,https://github.com/hyperledger/indy-sdk/pull/692#issuecomment-384978980,esplinr,"I missed the DCO sign-off, so I'm going to resubmit.",2018-04-27 14:01:14,2018-04-27 14:01:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/673,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/383899512,https://github.com/hyperledger/indy-sdk/pull/673#issuecomment-383899512,jovfer,"@dbluhm It would be nice to update README for CLI too. Probably we merge this PR without README notes, in this case please create new one PR",2018-04-24 11:37:38,2018-04-24 11:37:38
https://api.github.com/repos/hyperledger/indy-sdk/issues/673,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/383965602,https://github.com/hyperledger/indy-sdk/pull/673#issuecomment-383965602,dbluhm,"@jovfer got it, I'll be sure to update the README",2018-04-24 15:01:19,2018-04-24 15:01:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/672,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/384558554,https://github.com/hyperledger/indy-sdk/pull/672#issuecomment-384558554,lodo1995,"@lovesh I think I made some confusion with the commits, but now the imports are absolute, the `src` directory is a module and I added some info in `README.md` about how to run a script inside a module.",2018-04-26 08:32:44,2018-04-26 08:32:44
https://api.github.com/repos/hyperledger/indy-sdk/issues/671,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/383916289,https://github.com/hyperledger/indy-sdk/pull/671#issuecomment-383916289,lodo1995,"@jovfer Thank you for your feedback. I will go through the CI/CD pipeline configs and also resolve the conflicts (another pull request has been merged). The idea to switch to the newest version that provides the required functionality is just to keep the library as updated as possible. I don't see any very compelling reason for this, so it's not urgent to put this in the nearest RC build. I'm mainly concerned about the documentation of the master branch, as it is currently wrong and might make things difficult for new contributors.",2018-04-24 12:43:49,2018-04-24 12:43:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/671,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/384563767,https://github.com/hyperledger/indy-sdk/pull/671#issuecomment-384563767,lodo1995,@jovfer updated; have a look whether now it's good or if there are other things to fix,2018-04-26 08:50:04,2018-04-26 08:50:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/671,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/385284129,https://github.com/hyperledger/indy-sdk/pull/671#issuecomment-385284129,lodo1995,@jovfer I think this is ready now.,2018-04-29 21:41:08,2018-04-29 21:41:08
https://api.github.com/repos/hyperledger/indy-sdk/issues/671,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/385904352,https://github.com/hyperledger/indy-sdk/pull/671#issuecomment-385904352,lodo1995,Related to #653 ,2018-05-02 08:35:06,2018-05-02 08:35:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/665,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/382898846,https://github.com/hyperledger/indy-sdk/pull/665#issuecomment-382898846,dbluhm,I missed the DCO requirement. I'll clean this up and resubmit,2018-04-19 22:22:12,2018-04-19 22:22:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/661,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/383050594,https://github.com/hyperledger/indy-sdk/pull/661#issuecomment-383050594,jovfer,moved to #668 ,2018-04-20 10:08:13,2018-04-20 10:08:13
https://api.github.com/repos/hyperledger/indy-sdk/issues/653,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/381898502,https://github.com/hyperledger/indy-sdk/pull/653#issuecomment-381898502,vimmerru,@peacekeeper Thanks for pointing to new sodiumoxide. It can't be merged right now as is as it requires to modify our packages and environment to use new libsodium binaries (you can just see that tests fail).,2018-04-17 08:30:22,2018-04-17 08:46:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/653,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/387840972,https://github.com/hyperledger/indy-sdk/pull/653#issuecomment-387840972,dbluhm,So it looks like the current problem here is that the CI/CD is using a version of libsodium that is too old to play nice with sodiumoxide 0.0.16. Would it be an acceptable workaround to build libsodium 1.0.16 on our ci dockerfile instead of installing libsodium 1.0.8 through apt?,2018-05-09 18:57:28,2018-05-09 18:57:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/653,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/387975882,https://github.com/hyperledger/indy-sdk/pull/653#issuecomment-387975882,vimmerru,We have binary packages for multiple platforms. Ubuntu 16.04 is still the most common linux distro and we need the simple way to install our packages here.,2018-05-10 07:30:07,2018-05-25 10:32:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/653,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/392721364,https://github.com/hyperledger/indy-sdk/pull/653#issuecomment-392721364,AxelNennker,"Somebody did the change in the meantime.
https://github.com/hyperledger/indy-sdk/blob/master/libindy/Cargo.toml#L60
This can be closed, I think.",2018-05-29 09:57:33,2018-05-29 09:57:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/653,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393083224,https://github.com/hyperledger/indy-sdk/pull/653#issuecomment-393083224,jovfer,In scope of #696 sodium was incremented to .16v . To pass CI ubuntu now use custom build of system libsodium instead of sodium18 from xenial apt repo ,2018-05-30 08:52:46,2018-05-30 08:52:46
https://api.github.com/repos/hyperledger/indy-sdk/issues/640,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/381745999,https://github.com/hyperledger/indy-sdk/pull/640#issuecomment-381745999,brentzundel,"What is here looks good to me.
I don't see a way to set fees (build_fees_txn) or query fees (build_get_fees_txn).
Those were mentioned in the ""Token library and CLI WBS"" document.

Also, I'm not sure if this is the place to include it, or if another pull request against this document should be made in the future, but there will also need to be libindy functionality to generically support 'paid credentials.'  
In my view this could be done with an indy_issuer_create_paid_credential_offer that mimics indy_issuer_create_credential_offer, and an indy_prover_create_paid_credential_req that mimics indy_prover_create_credential_req.",2018-04-16 20:54:21,2018-04-16 20:58:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/640,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/382428001,https://github.com/hyperledger/indy-sdk/pull/640#issuecomment-382428001,jovfer,"@brentzundel 
1) I've added missed build_fees_txn with getter. Thank you for note!
2) For me, @vimmerru and @ashcherbakov 'paid credentials' is scope of separate discussion, PR, etc.",2018-04-18 15:29:21,2018-04-18 15:29:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/640,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/382436674,https://github.com/hyperledger/indy-sdk/pull/640#issuecomment-382436674,jovfer,"I've added my `approve` for the PR, but there were some changes from me, so another one review is required.",2018-04-18 15:54:05,2018-04-18 15:54:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/638,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393567315,https://github.com/hyperledger/indy-sdk/pull/638#issuecomment-393567315,saholman,@jovfer What still needs to be done before this can be merged into the master branch?,2018-05-31 15:23:42,2018-05-31 15:23:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/638,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393572895,https://github.com/hyperledger/indy-sdk/pull/638#issuecomment-393572895,vimmerru,@saholman I suggest to merge NodeJS CI pipeline first(we plan to merge it soon). Main problem is supporting of this code in the future and checking of correctness as part of our CI,2018-05-31 15:38:00,2018-05-31 15:38:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/638,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/394691333,https://github.com/hyperledger/indy-sdk/pull/638#issuecomment-394691333,jovfer,Moved to #834 ,2018-06-05 12:31:12,2018-06-05 12:31:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/636,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/380471819,https://github.com/hyperledger/indy-sdk/pull/636#issuecomment-380471819,brentzundel,This pull request adds pdf documents to the repo that were formerly stored in google docs and linked to in the main dkms document. Adding them will enable us to update the links in the main dkms document so they no longer point to google drive.,2018-04-11 14:26:45,2018-04-11 14:26:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/636,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/380852665,https://github.com/hyperledger/indy-sdk/pull/636#issuecomment-380852665,vimmerru,"@brentzundel Are you sure that we can store here documents with ""Evernym"" name? What is the license?",2018-04-12 15:47:57,2018-04-12 15:47:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/636,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/381181908,https://github.com/hyperledger/indy-sdk/pull/636#issuecomment-381181908,brentzundel,"These are the public-facing DKMS docs. Links to the google doc versions of these documents is already in Indy. We want the links to point to publicly available versions hosted on github, rather than to google docs.",2018-04-13 16:00:29,2018-04-13 16:00:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/636,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/381694666,https://github.com/hyperledger/indy-sdk/pull/636#issuecomment-381694666,brentzundel,"the PR approval and merging process is at best obscure and difficult to follow, at worst deliberately obtuse and byzantine. Documentation of the way the process is supposed to work would be extremely beneficial.",2018-04-16 17:59:23,2018-04-16 17:59:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/636,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/381694914,https://github.com/hyperledger/indy-sdk/pull/636#issuecomment-381694914,brentzundel,This PR has been superseded by https://github.com/hyperledger/indy-sdk/pull/649,2018-04-16 18:00:11,2018-04-16 18:00:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/635,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/380213433,https://github.com/hyperledger/indy-sdk/pull/635#issuecomment-380213433,brentzundel,fail,2018-04-10 19:06:11,2018-04-10 19:06:11
https://api.github.com/repos/hyperledger/indy-sdk/issues/632,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/379477915,https://github.com/hyperledger/indy-sdk/pull/632#issuecomment-379477915,jovfer,"@kazarena Thank you for the PR with clarification!
There was some refactoring in our documentation after your discussion with @vimmerru 
I think it's better to move your update to root readme.md https://github.com/hyperledger/indy-sdk#how-to-start-local-nodes-pool-with-docker
and may be provide link to this section from macos readme.
Also please fix DCO for the first commit in your PR https://github.com/probot/dco#how-it-works",2018-04-07 15:34:06,2018-04-07 15:34:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/632,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/379493535,https://github.com/hyperledger/indy-sdk/pull/632#issuecomment-379493535,kazarena,@jovfer All done,2018-04-07 19:30:59,2018-04-07 19:30:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/630,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/379240634,https://github.com/hyperledger/indy-sdk/pull/630#issuecomment-379240634,jovfer,It would be nice to add appropriate integration or unit test for error case.,2018-04-06 12:39:06,2018-04-06 12:39:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/622,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/378602199,https://github.com/hyperledger/indy-sdk/pull/622#issuecomment-378602199,dkulic,No signoff,2018-04-04 13:36:27,2018-04-04 13:36:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/377173820,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-377173820,ArthurManz,This is simply AWESOME!! :+1: ,2018-03-29 09:12:14,2018-03-29 09:12:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/377175001,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-377175001,vimmerru,"@farskipper 

Thanks for contribution. We will look to it soon. One thing that you can solve now is fixing of commits to satisfy our DCO check. See https://github.com/probot/dco#how-it-works for details.

You can use interactive rebase like this:

git rebase --exec 'git commit --amend --no-edit -n --signoff' -i branch_name_or_hash


",2018-03-29 09:16:30,2018-03-29 09:16:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/377240623,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-377240623,farskipper,Thanks @vimmerru I got those commits signed off now.,2018-03-29 13:48:00,2018-03-29 13:48:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/380859053,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-380859053,vimmerru,"@farskipper Do you have progress with tests? 

There was big PR merged related to credentials revocation feature https://github.com/hyperledger/indy-sdk/pull/550. It will require update in your wrapper.",2018-04-12 16:07:33,2018-04-12 16:07:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/380863796,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-380863796,dmitrizagidulin,"Super excited about this, well done!",2018-04-12 16:22:40,2018-04-12 16:22:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/381279044,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-381279044,farskipper,@vimmerru Just finished updating to support the #550 changes. I'll make time next week to work more on the tests.,2018-04-13 22:52:38,2018-04-13 22:52:38
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/383336717,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-383336717,farskipper,"@vimmerru I finished the tests. I haven't been able to view ci.evernym.com to see if my Jenkins file changes are working for this wrapper. Other than that, I'm ready to merge.

Here's the link to easily view the readme: https://github.com/Picolab/indy-sdk/tree/master/wrappers/nodejs",2018-04-21 22:29:53,2018-04-21 22:29:53
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/383623273,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-383623273,vimmerru,"@farskipper Thanks, I will check it deeply soon",2018-04-23 15:46:24,2018-04-23 15:46:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386288614,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-386288614,vimmerru,"@farskipper 

One question. We are trying to keep wrappers code and especially tests consistent for all wrappers. As i can see you use different tests organization for this wrapper. It can cause supportability problems later.  Do you plan to maintain this wrapper?",2018-05-03 13:05:34,2018-05-03 13:05:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386332696,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-386332696,farskipper,"The test files are partitioned like the directories in the python wrapper. But yes, with the intent of being long files instead of directories (it's an ethos shared by other nodejs projects). Admittedly I have fewer tests than the python wrapper. My goal was to simply assert the function binding exists and does the json dance. For example, many of the build-a-request functions I don't submit the transaction b/c I'm just testing that the binding exists and returns a json object for the request. The cpp and js code for this wrapper is very thin and repetitive.

The test runner, [ava](https://www.npmjs.com/package/ava), runs each test concurrently. Every test creates its own pool/wallet(s) so tests are atomic. Yes, right now every file has a single test that calls several indy functions and is stateful :astonished: but it’s really not that bad IMHO when the api changes you either change a bunch of small tests or you change one long test. Either way there is work and debugging involved.

Yes, I plan on maintaining it. ...assuming I don’t get hit by a bus :)
And as time goes on, we can always add more tests.",2018-05-03 15:20:14,2018-05-03 15:20:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386341823,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-386341823,vimmerru,"There are some tests called ""demo"". They illustrate the main workflows and can be used as code example. Can you implement these tests https://github.com/hyperledger/indy-sdk/tree/master/wrappers/python/tests/demo ?",2018-05-03 15:47:13,2018-05-03 15:47:13
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386346714,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-386346714,farskipper,"Sure, I can add those",2018-05-03 16:01:53,2018-05-03 16:01:53
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386354295,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-386354295,vimmerru,"Also i suggest to merge this in 2 steps:

1. Merge the code without integration to CI/CD pipeline
2. Integrate to CI/CD as a next step in dedicated PR

It will allow to merge 1 much faster",2018-05-03 16:26:01,2018-05-03 16:26:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386356975,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-386356975,farskipper,"Good idea, I'll take those out later today.",2018-05-03 16:34:55,2018-05-03 16:34:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386505952,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-386505952,farskipper,"Ok, ci config is in #714 and cd in #715 ",2018-05-04 04:58:50,2018-05-04 04:58:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386516486,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-386516486,vimmerru,"I approved the PR, but merge can be a bit postponed until 1.4 version is released.",2018-05-04 06:37:06,2018-05-04 06:37:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/386669784,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-386669784,farskipper,Great! Sounds good,2018-05-04 17:23:25,2018-05-04 17:23:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/616,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/388449896,https://github.com/hyperledger/indy-sdk/pull/616#issuecomment-388449896,vimmerru,@jovfer Can we start merging this?,2018-05-11 18:36:27,2018-05-11 18:36:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/614,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/376815186,https://github.com/hyperledger/indy-sdk/pull/614#issuecomment-376815186,jovfer,Moved to #615 ,2018-03-28 09:05:09,2018-03-28 09:05:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/596,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/378938227,https://github.com/hyperledger/indy-sdk/pull/596#issuecomment-378938227,mhailstone,Signed-off-by: Matthew Hailstone <matthew.hailstone@gmail.com>,2018-04-05 13:36:26,2018-04-05 13:36:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/596,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/379054979,https://github.com/hyperledger/indy-sdk/pull/596#issuecomment-379054979,dhh1128,Closing this since another PR from @mhailstone contained the same changes.,2018-04-05 19:46:31,2018-04-05 19:46:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/595,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/376236787,https://github.com/hyperledger/indy-sdk/pull/595#issuecomment-376236787,dhh1128,"@keichiri You need to sign off your commit. This tells Hyperledger that you are acknowledging that you can't contribute IP encumbered by a patent, that you own copyright to what you commit, etc. See https://github.com/probot/dco#how-it-works. You do this by modifying your commit command -- git commit -s -m ""commit message"" (the -s is what does the sign-off by adding ""Signed-off-by: <you>"" to the commit message). If you've already pushed, you can modify the head commit of your branch and then re-raise the PR. We can't accept the PR until it has this sign-off in it.",2018-03-26 16:57:53,2018-03-26 16:57:53
https://api.github.com/repos/hyperledger/indy-sdk/issues/594,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/376091026,https://github.com/hyperledger/indy-sdk/pull/594#issuecomment-376091026,faisal00813,@dhh1128 @vimmerru ^ please review.,2018-03-26 08:45:33,2018-03-26 08:49:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/583,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/374752178,https://github.com/hyperledger/indy-sdk/pull/583#issuecomment-374752178,TechWritingWhiz,Closing this PR. I screwed up again. :(,2018-03-20 20:51:42,2018-03-20 20:51:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/582,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/374736871,https://github.com/hyperledger/indy-sdk/pull/582#issuecomment-374736871,TechWritingWhiz,I forgot to add a bunch of stuff. I'm just going to close this out.,2018-03-20 20:01:14,2018-03-20 20:01:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/578,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/374125667,https://github.com/hyperledger/indy-sdk/pull/578#issuecomment-374125667,jovfer,@trthhrtz please fix DCO in the first commit of PR.,2018-03-19 07:44:54,2018-03-19 07:44:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/578,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/374316563,https://github.com/hyperledger/indy-sdk/pull/578#issuecomment-374316563,trthhrtz,"@jovfer, done",2018-03-19 18:25:29,2018-03-19 18:25:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/578,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/375393202,https://github.com/hyperledger/indy-sdk/pull/578#issuecomment-375393202,trthhrtz,"@jovfer , resolved conflicts. Could you please re-review?",2018-03-22 17:33:37,2018-03-22 17:33:37
https://api.github.com/repos/hyperledger/indy-sdk/issues/578,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/375854562,https://github.com/hyperledger/indy-sdk/pull/578#issuecomment-375854562,trthhrtz,"@vimmerru , could you please take a look?",2018-03-24 07:57:59,2018-03-24 07:57:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/574,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/374125943,https://github.com/hyperledger/indy-sdk/pull/574#issuecomment-374125943,jovfer,@michaeldboyd please fix DCO in all (except merges) commits,2018-03-19 07:46:19,2018-03-19 07:46:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/564,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/371189715,https://github.com/hyperledger/indy-sdk/pull/564#issuecomment-371189715,vimmerru,"> I don't think you can search tag values if you encrypt them.

In my vision the most of tags will be encrypted/hashed. It will allow to compare exact values in queries. For queries with ""like"" or ""gte"" predicates we can't use encryption. We can allow user to store some unencrypted tags with entities in the wallet for complex search purposes.

> ""wallet entity"" is too verbose; use ""item"" (we already have ""wallet"" as a prefix for every function)

API is object-oriented and prefix here means ""class name"". wallet_entity_get_id means WalleteEntity::get_id(), but i understand your point. 

> I'm not happy about using a string as an id for a wallet. For a few secrets, this is fine--but for a large wallet with tens of millions of keys, wouldn't it be more efficient to make the key an integer? (There is no reason to identify credentials with a string, BTW, since such identifiers have no independent meaning, unlike the naming convention we've chosen for secrets)

For the most of entities like Key, DID, ClaimDefinition we have natural id that libindy API accepts. We need the way to convert this id to wallet id. So i vote for string id.

> I'm dubious about the wisdom of doing mongo-db-style queries.

It is the point for discussion. I will vote for any query-style that is easy to parse and analyze. I see ""tags"" as an object in document-oriented database and mongo-style query is very natural way to query documents. I really don't like SQL because we will need to write our own parser and it is really non-obvious how to map tags to some tables.

> It's not clear to me how creating and opening wallet storage is intended to relate to creating and opening a wallet.

In my vision it is one-to-one mapping:

wallet_create calls storage_create 
wallet_open calls storage_open
and etc...
",2018-03-07 16:10:01,2018-03-07 16:10:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/560,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/375965048,https://github.com/hyperledger/indy-sdk/pull/560#issuecomment-375965048,jovfer,Moved to #550 ,2018-03-25 12:00:26,2018-03-25 12:00:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/556,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/369650839,https://github.com/hyperledger/indy-sdk/pull/556#issuecomment-369650839,skhoroshavin,"Concerning commit https://github.com/hyperledger/indy-sdk/pull/556/commits/7c9f5b870050032630a4e1e1f4cd79af56b9f5d6: after looking through the rest of notebook I'm not sure if this change is good - it just might be better to rename few _verkey variables to _keys. The main reason for this change is that I felt it misleading to have the very same data (although from different sources) in variables those naming is quite different semantically. Feedback is very welcome.

Also it might be better to refactor onboarding function into different parts to separate actors better, but this is out of scope of this PR, I'm going to open an issue to discuss this.",2018-03-01 16:36:23,2018-03-01 16:37:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/551,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/372806708,https://github.com/hyperledger/indy-sdk/pull/551#issuecomment-372806708,StevenL2015,Any progress on this pull request?,2018-03-13 20:27:03,2018-03-13 20:27:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/551,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/372814865,https://github.com/hyperledger/indy-sdk/pull/551#issuecomment-372814865,vimmerru,"> Any progress on this pull request?

Raised questions are still opened. So we can't merge it.",2018-03-13 20:54:17,2018-03-13 20:54:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/542,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/376935527,https://github.com/hyperledger/indy-sdk/pull/542#issuecomment-376935527,jovfer,@Artemkaaas I've change base branch of this PR to feature/revocation. Let's discuss if you actually want to merge it into master directly.,2018-03-28 15:46:28,2018-03-28 15:46:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/541,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/367041809,https://github.com/hyperledger/indy-sdk/pull/541#issuecomment-367041809,TechWritingWhiz,I fixed it. Let me know if I need to do another pull request.,2018-02-20 16:51:19,2018-02-20 16:51:19
https://api.github.com/repos/hyperledger/indy-sdk/issues/532,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/365525846,https://github.com/hyperledger/indy-sdk/pull/532#issuecomment-365525846,vimmerru,"Thanks for contribution. The code looks good, but our process enforces the Developer Certificate of Origin (https://developercertificate.org/) on Pull Requests. It requires all commit messages to contain the Signed-off-by line with an email address that matches the commit author.

Git has a -s command line option to append this automatically to your commit message:
$ git commit -s -m 'This is my commit message'

To pass our DCO validation i suggest to perform interactive re-base of your commits with added sign off line.

See https://github.com/probot/dco for more details. If you need some help just ask me.",2018-02-14 08:04:54,2018-02-14 08:04:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/532,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/365762707,https://github.com/hyperledger/indy-sdk/pull/532#issuecomment-365762707,hidde-jan,@vimmerru @jovfer I fixed the DCO and rebased my commits. I guess that's everything?,2018-02-14 22:14:24,2018-02-14 22:14:24
https://api.github.com/repos/hyperledger/indy-sdk/issues/523,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/363714919,https://github.com/hyperledger/indy-sdk/pull/523#issuecomment-363714919,jovfer,Moved to #524 ,2018-02-07 09:51:14,2018-02-07 09:51:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/517,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/362598254,https://github.com/hyperledger/indy-sdk/pull/517#issuecomment-362598254,jovfer,@jjensen-evernym please fix DCO for the first commit in the PR,2018-02-02 14:18:08,2018-02-02 14:18:08
https://api.github.com/repos/hyperledger/indy-sdk/issues/517,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/362652761,https://github.com/hyperledger/indy-sdk/pull/517#issuecomment-362652761,jjensen-evernym,I had a local git issue so I re-did the fork and resubmitted as PR 520. DCO should be correct on that PR. Thank you.,2018-02-02 17:38:02,2018-02-02 17:38:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/517,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/363063206,https://github.com/hyperledger/indy-sdk/pull/517#issuecomment-363063206,jovfer,Moved to #520 ,2018-02-05 11:53:05,2018-02-05 11:53:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/513,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/362204659,https://github.com/hyperledger/indy-sdk/pull/513#issuecomment-362204659,jovfer,@sklump Is `stephen.klump@becker-carroll.com` email added to your GitHub account? Right now I don't understand the reason of DCO fail (waiting),2018-02-01 09:14:58,2018-02-01 10:36:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/513,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/362245342,https://github.com/hyperledger/indy-sdk/pull/513#issuecomment-362245342,sklump,"Hello,


Address stephen.klump@becker-carroll.com must be present somewhere in GitHub as a secondary. I will remember for future submissions.


I spent years and years as a subversion administrator and when anything goes off the straight and narrow path in git, I still get myself in trouble. Sorry for all the clutter.


Regards,

Stephen



________________________________
From: Sergey Minaev <notifications@github.com>
Sent: February 1, 2018 4:14 AM
To: hyperledger/indy-sdk
Cc: Stephen Klump; Mention
Subject: Re: [hyperledger/indy-sdk] Align comments with recent data structure updates. (#513)


@sklump<https://github.com/sklump> Is stephen.klump@becker-carroll.com email added to your GitHub account? Right now I don't understand the reason of DCO fail

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub<https://github.com/hyperledger/indy-sdk/pull/513#issuecomment-362204659>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AI527J7jbuqVewmAvmIsUZKXITEHSHJDks5tQYCSgaJpZM4Rz6Zl>.
",2018-02-01 12:00:45,2018-02-01 12:00:45
https://api.github.com/repos/hyperledger/indy-sdk/issues/513,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/367287941,https://github.com/hyperledger/indy-sdk/pull/513#issuecomment-367287941,jovfer,Moved to #537,2018-02-21 10:50:09,2018-02-21 10:50:09
https://api.github.com/repos/hyperledger/indy-sdk/issues/512,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/361920259,https://github.com/hyperledger/indy-sdk/pull/512#issuecomment-361920259,sklump,"This is absurd. If the bot knows who I am and knows what to expect, I shouldn't have to work for it - it should work for me.",2018-01-31 12:39:40,2018-01-31 12:39:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/511,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/361919039,https://github.com/hyperledger/indy-sdk/pull/511#issuecomment-361919039,sklump,ah ffs,2018-01-31 12:33:59,2018-01-31 12:33:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/506,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/361547473,https://github.com/hyperledger/indy-sdk/pull/506#issuecomment-361547473,jovfer,@Artemkaaas review please,2018-01-30 10:19:33,2018-01-30 10:19:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/506,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/361547589,https://github.com/hyperledger/indy-sdk/pull/506#issuecomment-361547589,jovfer,@sklump Please fix DCO,2018-01-30 10:19:53,2018-01-30 10:19:53
https://api.github.com/repos/hyperledger/indy-sdk/issues/506,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/361891629,https://github.com/hyperledger/indy-sdk/pull/506#issuecomment-361891629,jovfer,@sklump DCO should present in all commits. I suggest to use interactive `rebase` to fix the first one.,2018-01-31 10:34:41,2018-01-31 10:34:41
https://api.github.com/repos/hyperledger/indy-sdk/issues/506,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/361892214,https://github.com/hyperledger/indy-sdk/pull/506#issuecomment-361892214,vimmerru,@jovfer Could you provide more detailed instruction how to fix DCO? ,2018-01-31 10:36:42,2018-01-31 10:36:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/506,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/361896727,https://github.com/hyperledger/indy-sdk/pull/506#issuecomment-361896727,jovfer,"```
git fetch --all
git checkout patch-1
git rebase -i hyperledger/master #(use reword for each commit and manually add correct string for sign)
git push -f
```",2018-01-31 10:54:37,2018-01-31 10:54:53
https://api.github.com/repos/hyperledger/indy-sdk/issues/506,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/361914799,https://github.com/hyperledger/indy-sdk/pull/506#issuecomment-361914799,sklump,I can't get git to do what we want. I will resubmit from scratch. Please close this pull request if I can't.,2018-01-31 12:14:16,2018-01-31 12:14:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/501,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/376503680,https://github.com/hyperledger/indy-sdk/pull/501#issuecomment-376503680,vimmerru,"Seems like outdated. I suggest to close for now,",2018-03-27 12:18:02,2018-03-27 12:18:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/487,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/363424661,https://github.com/hyperledger/indy-sdk/pull/487#issuecomment-363424661,jovfer,Moved to #523,2018-02-06 13:39:16,2018-02-06 13:39:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/477,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/357597131,https://github.com/hyperledger/indy-sdk/pull/477#issuecomment-357597131,vimmerru,"@hyperfocus 

Hi, Thanks for contribution. We have a rule that each git commit should have DCO sign-off (use -s option with each git commit that will add author and email information to commit message).

Could you fix this? To fix the latest commit in the branch you can use:

```
git commit --amend -s --no-edit
```

And after this push with force to replace this commit with a new one:

```
git push -f
```",2018-01-15 06:56:17,2018-01-15 06:56:17
https://api.github.com/repos/hyperledger/indy-sdk/issues/476,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/357254020,https://github.com/hyperledger/indy-sdk/pull/476#issuecomment-357254020,jovfer,iOS agent is fixed,2018-01-12 14:35:39,2018-01-12 14:35:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/475,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/357247783,https://github.com/hyperledger/indy-sdk/pull/475#issuecomment-357247783,jovfer,test this please,2018-01-12 14:10:52,2018-01-12 14:10:52
https://api.github.com/repos/hyperledger/indy-sdk/issues/463,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/354990498,https://github.com/hyperledger/indy-sdk/pull/463#issuecomment-354990498,numical,"Hi, I have added the DCO in the second commit but the checks still report it missing. ",2018-01-03 11:27:04,2018-01-03 11:27:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/463,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/356905029,https://github.com/hyperledger/indy-sdk/pull/463#issuecomment-356905029,jovfer,"Hi @numical 
DCO should present in all commits of PR
I suggest delete last commit, amend the first one with signature and force push to the branch of PR
```
git reset --hard HEAD~1
git commit --amend --signoff --no-edit
git push -f
```
",2018-01-11 11:17:42,2018-01-11 11:17:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/463,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/356905337,https://github.com/hyperledger/indy-sdk/pull/463#issuecomment-356905337,jovfer,Also `git rebase --interactive` can be helpful in more complex cases (e.g. to add DCO for multiply commits),2018-01-11 11:19:08,2018-01-11 11:20:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/463,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/389144509,https://github.com/hyperledger/indy-sdk/pull/463#issuecomment-389144509,esplinr,"@numical Do you need some more help signing the DCO?

We would like to accept this improvement, but need to meet the legal requirements for contribution.",2018-05-15 12:12:43,2018-05-15 12:12:43
https://api.github.com/repos/hyperledger/indy-sdk/issues/463,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/393527693,https://github.com/hyperledger/indy-sdk/pull/463#issuecomment-393527693,vimmerru,On ubuntu we now suggest to build libsodium from sources. So information seems a bit outdated. Also no any feedback from requester for months. ,2018-05-31 13:21:02,2018-05-31 13:21:02
https://api.github.com/repos/hyperledger/indy-sdk/issues/449,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/354109608,https://github.com/hyperledger/indy-sdk/pull/449#issuecomment-354109608,jovfer,@vimmerru should we synchronize in this PR the version of indy-node in pool.dockerfile (set to build with python migration script)?,2017-12-27 12:50:56,2017-12-27 12:50:56
https://api.github.com/repos/hyperledger/indy-sdk/issues/444,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/357034656,https://github.com/hyperledger/indy-sdk/pull/444#issuecomment-357034656,jovfer,Merged in #471 ,2018-01-11 19:27:07,2018-01-11 19:27:07
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352028194,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-352028194,vimmerru,@trongnhan1312400 Could you provide a bit more context about this PR? Do we have a jira tickets? What components you test? and etc???,2017-12-15 15:06:29,2017-12-15 15:06:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352357807,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-352357807,nghia47,"@vimmerru This PR is for the functional test of Python wrapper (libindy_1.0.1_amd64.deb). There are 31 Wallet, Pool, Signus and Ledger test cases. The tests are not driven by any unit test framework but are standalone python scripts and currently requires python 3.6. And there is no Jira card for this.",2017-12-18 08:30:42,2017-12-18 08:30:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352359590,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-352359590,ashcherbakov,We use Python 3.5 for indy-node and indy-sdk wrapper. Can we use Python 3.5 for these tests as well?,2017-12-18 08:39:04,2017-12-18 08:39:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352370308,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-352370308,vimmerru,"But what is the purpose for these tests? Python Wrapper already covered by similar functional tests placed inside of indy-sdk\wrappers\python\tests folder.

Only reason i see is acceptance testing of final artifacts after packaging. For acceptance tests i don't like proposed location. For me it looks better to put acceptance tests inside of top level ""acceptance"" folder. ",2017-12-18 09:24:03,2017-12-18 09:24:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352660685,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-352660685,nghia47,"@ashcherbakov: These tests run well with python3.5. Will update the python requirement.

@vimmerru The existed tests are the unit-test and uses all hardcode data. They do not covered the end to end workflow but the new functional tests do. Currently, we are automating the positive tests, the next steps are negative, boundary ones. 
About acceptance tests, you are absolutely right. It should be under ""acceptance"" folder.",2017-12-19 07:22:18,2017-12-19 07:22:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/354087740,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-354087740,vimmerru,"> The existed tests are the unit-test and uses all hardcode data. They do not covered the end to end workflow but the new functional tests do. Currently, we are automating the positive tests, the next steps are negative, boundary ones.

In this case i don't understand why we need additional unti tests for python wrapper as we already have acceptable coverage by unit tests based on pytest and placed inside the same folder. 

You just add unnecessary complexity. We have list of unit tests that designed similar way in libindy and each wrapper. We support these tests and execute on each CI run. With this tests without CI integration we will get regressions in test code soon and just break our development process. 

@nghia47 @ashcherbakov What do you think?",2017-12-27 09:56:36,2017-12-27 09:56:36
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/354248776,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-354248776,nghia47,"The goals of our new tests are:
- Simulator the real scenarios that end-user performs with the system. By covering the end-to-end workflow, the tests use the runtime data to verify the product features, prevent the leaks of using hardcode data.
- Any user should be able to run the python scripts without having outside dependencies (other than the libindy library). Any user should be able to download and run any or all of the scripts to quickly asses the functionality of libindy and/or the Sovrin client (by using libindy). 

Moreover, these tests are used for regression test purpose, a type of testing process so will not affect current development process. It will help the team have a clearer quality report of the product, make sure that a change or addition hasn't broken any existing product features.

So, we should keep both of tests, the current unit tests is used for CI run and our tests will be stored in a separated folder and will be executed via an other CI task.

@ashcherbakov Please advise. ",2017-12-28 08:16:29,2017-12-28 08:16:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/354282621,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-354282621,vimmerru,"@nghia47 @ashcherbakov 

> Simulator the real scenarios that end-user performs with the system. By covering the end-to-end workflow, the tests use the runtime data to verify the product features, prevent the leaks of using hardcode data.

With complete scenarios you perform testing not just python wrapper, but the whole multi-component system (python wrapper, indy node, libindy). So it isn't python wrapper tests. As result i don't like the current place. 

Also current tests ins't based on predefined values only. There are complete integration scenarios too and we will have duplication. 

So can we implement this tests as acceptance? It can be much more valuable from my point of view. The only difference is that for acceptance case you need to install libindy as binary artifact instead of usage of git-managed source code.

> Any user should be able to run the python scripts without having outside dependencies (other than the libindy library). Any user should be able to download and run any or all of the scripts to quickly asses the functionality of libindy and/or the Sovrin client (by using libindy).

Your tests also require near the same preparation as current tests:

1. You have to deploy pool (most tricky part)
2. You have to install dependencies: python3.6 -m pip install base58",2017-12-28 12:41:42,2017-12-28 12:41:42
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/354283189,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-354283189,vimmerru,"> and will be executed via an other CI task.

I am really don't like any additional CI tasks introduction as it breaks our continuous delivery process. For now all releases are performed in completely automated way. 

See our current release process and testing approach documentation:

https://github.com/hyperledger/indy-sdk/blob/master/doc/release-workflow.md
https://github.com/hyperledger/indy-sdk/blob/master/doc/test-design.md
https://github.com/hyperledger/indy-sdk/blob/master/doc/cd-pipeline.svg

Any PRs with breaking changes can be merged only after updating of this documentation and approval.",2017-12-28 12:46:30,2017-12-28 12:46:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/354717850,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-354717850,nghia47,"@vimmerru @ashcherbakov
I will work with Kelly Wilson <kelly.wilson@evernym.com> and Steve Lafranca <steve.lafranca@evernym.com> on this new tests to provide more information. ",2018-01-02 08:10:10,2018-01-02 08:10:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/432,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/357404325,https://github.com/hyperledger/indy-sdk/pull/432#issuecomment-357404325,nghia47,"@vimmerru @ashcherbakov 
Please help to cancel this pull request. We had a new repo for our test.
Thank you for your support and review.",2018-01-13 02:47:47,2018-01-13 02:47:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/389,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/345703809,https://github.com/hyperledger/indy-sdk/pull/389#issuecomment-345703809,jovfer,Not stable fix,2017-11-20 14:01:38,2017-11-20 15:36:53
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/345017742,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-345017742,jovfer,@deerdear DCO check is failed for both commits in PR. You can use interactive rebase or cherry-pick to fix it.,2017-11-16 18:40:22,2017-11-16 18:40:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/345735650,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-345735650,jovfer,@deerdear DCO still failed. Sign-off should presents in all commits of the PR. Please rebase or cherry-pick useful commits. After that you can force push to this branch or create new one PR.,2017-11-20 15:46:34,2017-11-20 15:46:34
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/351980491,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-351980491,jovfer,"@deerdear could you please fix DCO for first 2 commits and force-push to this PR branch?
I suggest to use interactive rebase
```
git fetch --all
git checkout patch-2
git rebase -i hyperledger/master (use reword for each commit and manually add correct string for sign)
git push -f
```

",2017-12-15 11:13:51,2017-12-15 11:13:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/351981216,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-351981216,jovfer,"For all 3 useful commits signature should be 
```
 Signed-off-by: Jonatan Bergquist <jonatan.h.bergquist@gmail.com>
```",2017-12-15 11:17:32,2017-12-15 11:17:32
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352009776,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-352009776,deerdear,"Hi @jovfer  Thanks, I'm trying but I don't really get what to do. I'm trying to do `git rebase -i hyperledger/master` but I get this error then:`fatal: Needed a single revision
invalid upstream hyperledger/master`",2017-12-15 13:48:01,2017-12-15 13:48:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352034577,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-352034577,jovfer,@deerdear did you have link to this remote (hyperledger) in your local git repo copy?,2017-12-15 15:32:27,2017-12-15 15:32:27
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352034910,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-352034910,deerdear,"@jovfer No, how do I add it?
",2017-12-15 15:33:47,2017-12-15 15:33:47
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352035154,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-352035154,jovfer,UPD @deerdear `git remote add hyperledger https://github.com/hyperledger/indy-sdk.git`,2017-12-15 15:34:40,2017-12-15 15:35:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352037143,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-352037143,deerdear,"No, not working. I did `git remote add hyperledger/master https://github.com/hyperledger/indy-sdk.git`",2017-12-15 15:42:14,2017-12-15 15:42:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352037451,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-352037451,jovfer,@deerdear let's continue in rocketchat.,2017-12-15 15:43:23,2017-12-15 15:43:23
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352037888,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-352037888,vimmerru,"@deerdear May be just create new branch from our master, add this small fix, commit with -s and issue new PR?",2017-12-15 15:45:08,2017-12-15 15:45:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/385,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/352038388,https://github.com/hyperledger/indy-sdk/pull/385#issuecomment-352038388,jovfer,@vimmerru there are some links to this PR. I prefer to just fix this one,2017-12-15 15:47:01,2017-12-15 15:47:01
https://api.github.com/repos/hyperledger/indy-sdk/issues/384,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/344852163,https://github.com/hyperledger/indy-sdk/pull/384#issuecomment-344852163,jovfer,Test PR. 380 and 383 will be merged separately,2017-11-16 08:36:57,2017-11-16 08:36:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/378,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/343511755,https://github.com/hyperledger/indy-sdk/pull/378#issuecomment-343511755,jovfer,Moved to #379 ,2017-11-10 15:59:05,2017-11-10 15:59:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/364,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/342320727,https://github.com/hyperledger/indy-sdk/pull/364#issuecomment-342320727,ckochenower,@jovfer - DCO sign-off is now in my commit message and I have set the indy-* dep versions to the versions you say have been tested.,2017-11-06 23:16:58,2017-11-06 23:16:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/359,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/342419257,https://github.com/hyperledger/indy-sdk/pull/359#issuecomment-342419257,jovfer,Moved to #364 ,2017-11-07 09:08:21,2017-11-07 09:08:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/352,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/341644045,https://github.com/hyperledger/indy-sdk/pull/352#issuecomment-341644045,jovfer,"@srottem https://github.com/hyperledger/indy-sdk/pull/352/commits/7ebf4d8ab27903bc589d4c576199e2da9d314628 is a commit with missed DCO, please fix it. 
I suggest to reset last 2 commits (this one and my merge) and cherry-pick ""Update"" commit with signature.",2017-11-03 08:26:25,2017-11-03 08:26:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/352,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/341645808,https://github.com/hyperledger/indy-sdk/pull/352#issuecomment-341645808,srottem,Done.  Apologies - I haven't figured out how to automate the DCO sign-off from my git client and I sometimes forget to to it.  I'll see if I can improve this for the future.  Should now be ready for you to merge in master again.,2017-11-03 08:37:29,2017-11-03 08:37:29
https://api.github.com/repos/hyperledger/indy-sdk/issues/344,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/339364920,https://github.com/hyperledger/indy-sdk/pull/344#issuecomment-339364920,jovfer,"Temporary PR, will be restored later",2017-10-25 15:16:13,2017-10-25 15:16:13
https://api.github.com/repos/hyperledger/indy-sdk/issues/342,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/339747519,https://github.com/hyperledger/indy-sdk/pull/342#issuecomment-339747519,mikelodder7,Okay I made the change.,2017-10-26 17:56:12,2017-10-26 17:56:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/342,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/343406305,https://github.com/hyperledger/indy-sdk/pull/342#issuecomment-343406305,jovfer,@mikelodder7 please do not forget to fix DCO check,2017-11-10 08:20:14,2017-11-10 08:20:14
https://api.github.com/repos/hyperledger/indy-sdk/issues/342,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/343512845,https://github.com/hyperledger/indy-sdk/pull/342#issuecomment-343512845,mikelodder7,Going to do another one this one is getting long,2017-11-10 16:03:06,2017-11-10 16:03:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/342,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/343516624,https://github.com/hyperledger/indy-sdk/pull/342#issuecomment-343516624,jovfer,moved to #380 ,2017-11-10 16:16:15,2017-11-10 16:16:15
https://api.github.com/repos/hyperledger/indy-sdk/issues/338,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/338625038,https://github.com/hyperledger/indy-sdk/pull/338#issuecomment-338625038,jovfer,Moved from #336 ,2017-10-23 11:07:49,2017-10-23 11:07:49
https://api.github.com/repos/hyperledger/indy-sdk/issues/331,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/338177804,https://github.com/hyperledger/indy-sdk/pull/331#issuecomment-338177804,jovfer,merged in #333 ,2017-10-20 11:13:05,2017-10-20 11:13:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/328,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/354112323,https://github.com/hyperledger/indy-sdk/pull/328#issuecomment-354112323,jovfer,This PR is draft. Actual implementation is #395 ,2017-12-27 13:15:18,2017-12-27 13:15:36
https://api.github.com/repos/hyperledger/indy-sdk/issues/327,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/337244620,https://github.com/hyperledger/indy-sdk/pull/327#issuecomment-337244620,anastasia-tarasova,merge after #326,2017-10-17 14:12:12,2017-10-17 14:12:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/322,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/336856371,https://github.com/hyperledger/indy-sdk/pull/322#issuecomment-336856371,anastasia-tarasova,moved to #323 ,2017-10-16 11:15:57,2017-10-16 11:15:57
https://api.github.com/repos/hyperledger/indy-sdk/issues/320,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/338131424,https://github.com/hyperledger/indy-sdk/pull/320#issuecomment-338131424,jovfer,Temporary closed,2017-10-20 07:44:55,2017-10-20 07:44:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/319,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/338656055,https://github.com/hyperledger/indy-sdk/pull/319#issuecomment-338656055,jovfer,"@srottem I've tried to update the PR from master and resolved some simple conflicts. But PR still failed - seems like some auto-merged files is incorrect (missed granular exception usage?)
Please let me know, if you want to see error logs from Jenkins to fix this PR.",2017-10-23 13:19:40,2017-10-23 13:19:40
https://api.github.com/repos/hyperledger/indy-sdk/issues/319,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/338687093,https://github.com/hyperledger/indy-sdk/pull/319#issuecomment-338687093,srottem,"Yes, it looks like there is an expected exception in a test that's still
using the error code matcher rather than the hamcrest isA() matcher.  I've
fixed the problem and all tests pass.

On Mon, Oct 23, 2017 at 3:21 PM, Sergey Minaev <notifications@github.com>
wrote:

> *@jovfer* approved this pull request.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/indy-sdk/pull/319#pullrequestreview-71176677>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAaBNySE_z6D0rxCUNWwF2iPfllyacuAks5svJLpgaJpZM4P4a9A>
> .
>
",2017-10-23 14:58:12,2017-10-23 14:58:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/315,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/336089018,https://github.com/hyperledger/indy-sdk/pull/315#issuecomment-336089018,jovfer,Obtained from #311 ,2017-10-12 10:32:21,2017-10-12 10:32:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/311,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/336088862,https://github.com/hyperledger/indy-sdk/pull/311#issuecomment-336088862,jovfer,Moved to #315 ,2017-10-12 10:31:39,2017-10-12 10:31:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/302,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/335129091,https://github.com/hyperledger/indy-sdk/pull/302#issuecomment-335129091,jovfer,Wrong repository for the branch,2017-10-09 11:18:06,2017-10-09 11:18:06
https://api.github.com/repos/hyperledger/indy-sdk/issues/294,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/334436235,https://github.com/hyperledger/indy-sdk/pull/294#issuecomment-334436235,jovfer,@vimmerru please review python,2017-10-05 11:22:00,2017-10-05 11:22:00
https://api.github.com/repos/hyperledger/indy-sdk/issues/283,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/332799937,https://github.com/hyperledger/indy-sdk/pull/283#issuecomment-332799937,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=283) <br/>All committers have signed the CLA.,2017-09-28 10:49:03,2017-09-28 10:49:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/280,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/333500286,https://github.com/hyperledger/indy-sdk/pull/280#issuecomment-333500286,jovfer,Already in master,2017-10-02 10:45:26,2017-10-02 10:45:26
https://api.github.com/repos/hyperledger/indy-sdk/issues/277,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/332164801,https://github.com/hyperledger/indy-sdk/pull/277#issuecomment-332164801,sklump,"Unit tests should include a much larger test number, such as an EPOCH date. I've tried 1506099439 often, and it hangs the machine for hours. I have a less elegant fix, attached, that returns in a few seconds, tops.

I've never written anything in Rust before, and it will show. Surely in such a pointer-heavy language, for example, there must be a memset to zeroes. But the basic algorithm runs much faster than the admittedly beautiful fix under review.

[helpers-4sq.rs.txt](https://github.com/hyperledger/indy-sdk/files/1332885/helpers-4sq.rs.txt)


",2017-09-26 11:07:33,2017-09-26 11:12:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/274,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/335808851,https://github.com/hyperledger/indy-sdk/pull/274#issuecomment-335808851,jovfer,"@srottem @vimmerru 
this approach differ against Java wrapper. Is granular exceptions really useful in this case?",2017-10-11 13:26:59,2017-10-11 13:26:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/274,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/335821990,https://github.com/hyperledger/indy-sdk/pull/274#issuecomment-335821990,srottem,"I think so, yes, and the Java wrapper would benefit from this as well (I'm happy to handle implementation).  It allows developers to handle exceptions in a way that is more in line with normal error handling in those languages and the errors convey more information directly to the developer.  I've already provided a PR to add parameter guard clauses to the Java wrapper as parameter errors from the SDK actually even convey incorrect information to the developer (e.g. param1 from a Java/.NET wrapper call does not correspond to the 1st parameter of an SDK call).",2017-10-11 14:07:25,2017-10-11 14:09:58
https://api.github.com/repos/hyperledger/indy-sdk/issues/274,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/335838869,https://github.com/hyperledger/indy-sdk/pull/274#issuecomment-335838869,jovfer,"I agree almost full with @srottem (may be this one insignificant exception: order of parameters between a wrapper and libindy - it should be same).
@vimmerru ?",2017-10-11 14:56:16,2017-10-11 14:56:16
https://api.github.com/repos/hyperledger/indy-sdk/issues/274,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/335848423,https://github.com/hyperledger/indy-sdk/pull/274#issuecomment-335848423,srottem,"@jovfer It's not really possible for the parameter indicies to be the same; for example, when calling the SendAsync method on an AgentConnection instance the only parameter passed by the caller is the message string.  Under the covers the SendAsync method calls indy_agent_send and due to its signature the message string is passed as the 3rd parameter. ",2017-10-11 15:24:45,2017-10-12 07:31:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/274,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/335852487,https://github.com/hyperledger/indy-sdk/pull/274#issuecomment-335852487,srottem,"@dhh1128 Actually, we're maintaining a map of errors anyway; in the .NET and Java wrappers have an enumeration that matches the list of existing error numbers returned by the SDK.  For granular exceptions I've gone with the approach that all Indy generated errors derive from IndyException which exposes the error number reported by the SDK - I propose that we just throw the base IndyException for any error that doesn't match a known error number.",2017-10-11 15:36:25,2017-10-11 15:36:25
https://api.github.com/repos/hyperledger/indy-sdk/issues/274,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/336052375,https://github.com/hyperledger/indy-sdk/pull/274#issuecomment-336052375,jovfer,@srottem please resolve conflict and we will merge this PR,2017-10-12 08:03:28,2017-10-12 08:03:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/274,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/336082675,https://github.com/hyperledger/indy-sdk/pull/274#issuecomment-336082675,srottem,Conflicts resolved and IndyException or one of its subclasses with always be thrown regardless of whether or not we have a specific mapping for an SDK error number.,2017-10-12 10:04:59,2017-10-12 10:04:59
https://api.github.com/repos/hyperledger/indy-sdk/issues/269,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/330861325,https://github.com/hyperledger/indy-sdk/pull/269#issuecomment-330861325,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=269) <br/>All committers have signed the CLA.,2017-09-20 14:02:30,2017-09-20 15:09:28
https://api.github.com/repos/hyperledger/indy-sdk/issues/256,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/328470429,https://github.com/hyperledger/indy-sdk/pull/256#issuecomment-328470429,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=256) <br/>All committers have signed the CLA.,2017-09-11 09:17:22,2017-09-11 09:30:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/250,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/327565730,https://github.com/hyperledger/indy-sdk/pull/250#issuecomment-327565730,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=250) <br/>All committers have signed the CLA.,2017-09-06 18:02:44,2017-09-06 18:03:21
https://api.github.com/repos/hyperledger/indy-sdk/issues/249,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/327393342,https://github.com/hyperledger/indy-sdk/pull/249#issuecomment-327393342,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=249) <br/>All committers have signed the CLA.,2017-09-06 06:58:40,2017-09-06 06:59:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/249,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/327393705,https://github.com/hyperledger/indy-sdk/pull/249#issuecomment-327393705,faisal00813,@vimmerru Can you please review it,2017-09-06 07:00:22,2017-09-06 07:00:22
https://api.github.com/repos/hyperledger/indy-sdk/issues/233,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/325641899,https://github.com/hyperledger/indy-sdk/pull/233#issuecomment-325641899,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=233) <br/>All committers have signed the CLA.,2017-08-29 12:00:34,2017-08-29 12:07:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/225,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/324919270,https://github.com/hyperledger/indy-sdk/pull/225#issuecomment-324919270,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=225) <br/>All committers have signed the CLA.,2017-08-25 13:25:39,2017-08-25 13:27:33
https://api.github.com/repos/hyperledger/indy-sdk/issues/222,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/324658238,https://github.com/hyperledger/indy-sdk/pull/222#issuecomment-324658238,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=222) <br/>All committers have signed the CLA.,2017-08-24 14:50:02,2017-08-24 15:14:37
https://api.github.com/repos/hyperledger/indy-sdk/issues/210,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/324002143,https://github.com/hyperledger/indy-sdk/pull/210#issuecomment-324002143,jovfer,Already present in master #206.,2017-08-22 11:47:04,2017-08-22 11:47:04
https://api.github.com/repos/hyperledger/indy-sdk/issues/204,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/325269047,https://github.com/hyperledger/indy-sdk/pull/204#issuecomment-325269047,jovfer,this hotfix can be closed: generic solution in #223 ,2017-08-28 06:16:31,2017-08-28 06:16:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/202,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/324639263,https://github.com/hyperledger/indy-sdk/pull/202#issuecomment-324639263,vimmerru,Could you resolve conflicts?,2017-08-24 13:44:35,2017-08-24 13:44:35
https://api.github.com/repos/hyperledger/indy-sdk/issues/202,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/324662151,https://github.com/hyperledger/indy-sdk/pull/202#issuecomment-324662151,srottem,Conflicts resolved.,2017-08-24 15:02:55,2017-08-24 15:02:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/200,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/323429950,https://github.com/hyperledger/indy-sdk/pull/200#issuecomment-323429950,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=200) <br/>All committers have signed the CLA.,2017-08-18 18:37:31,2017-08-18 18:38:10
https://api.github.com/repos/hyperledger/indy-sdk/issues/196,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/324285125,https://github.com/hyperledger/indy-sdk/pull/196#issuecomment-324285125,jovfer,Was merged as part of #205,2017-08-23 10:12:51,2017-08-23 10:12:51
https://api.github.com/repos/hyperledger/indy-sdk/issues/195,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/323113161,https://github.com/hyperledger/indy-sdk/pull/195#issuecomment-323113161,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=195) <br/>All committers have signed the CLA.,2017-08-17 15:46:29,2017-08-17 18:22:30
https://api.github.com/repos/hyperledger/indy-sdk/issues/164,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/321255196,https://github.com/hyperledger/indy-sdk/pull/164#issuecomment-321255196,jovfer,Java pipeline seems like fixed in #167 ,2017-08-09 13:28:54,2017-08-09 13:28:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/160,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/324668695,https://github.com/hyperledger/indy-sdk/pull/160#issuecomment-324668695,srottem,It looks like the failing build is because the CloseWalletTest.testCloseWalletWorksForPlugged is actually doing what it's supposed to - it looks like it's uncovered an SDK issue.  Bug reported: https://jira.hyperledger.org/browse/INDY-762,2017-08-24 15:22:50,2017-08-24 15:22:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/160,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/325302305,https://github.com/hyperledger/indy-sdk/pull/160#issuecomment-325302305,jovfer,https://jira.hyperledger.org/browse/IS-310 has been fixed,2017-08-28 09:09:50,2017-08-28 09:09:50
https://api.github.com/repos/hyperledger/indy-sdk/issues/158,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/319996318,https://github.com/hyperledger/indy-sdk/pull/158#issuecomment-319996318,vimmerru,Looks like we fixed the problem with tests freezes and don't need this workaround now.,2017-08-03 15:03:31,2017-08-03 15:03:31
https://api.github.com/repos/hyperledger/indy-sdk/issues/156,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/319924076,https://github.com/hyperledger/indy-sdk/pull/156#issuecomment-319924076,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=156) <br/>All committers have signed the CLA.,2017-08-03 09:54:41,2017-08-03 09:57:12
https://api.github.com/repos/hyperledger/indy-sdk/issues/128,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/318810242,https://github.com/hyperledger/indy-sdk/pull/128#issuecomment-318810242,srottem,Closed in favor of  https://github.com/hyperledger/indy-sdk/pull/147,2017-07-29 07:13:18,2017-07-29 07:13:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/127,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/317019084,https://github.com/hyperledger/indy-sdk/pull/127#issuecomment-317019084,srottem,Just stylistic - it might be more intention revealing to rename WalletType to CustomWalletTypeBase.,2017-07-21 14:40:06,2017-07-21 15:58:05
https://api.github.com/repos/hyperledger/indy-sdk/issues/98,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/315120645,https://github.com/hyperledger/indy-sdk/pull/98#issuecomment-315120645,vimmerru,What about removing of this call from iOS wrapper?,2017-07-13 15:52:55,2017-07-13 15:52:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/98,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/315275631,https://github.com/hyperledger/indy-sdk/pull/98#issuecomment-315275631,Artemkaaas,It is hard. I can not check for iOS what all tests work after deleting seqNo.,2017-07-14 05:44:54,2017-07-14 05:44:54
https://api.github.com/repos/hyperledger/indy-sdk/issues/89,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/313867381,https://github.com/hyperledger/indy-sdk/pull/89#issuecomment-313867381,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=89) <br/>All committers have signed the CLA.,2017-07-08 16:49:39,2017-07-08 16:50:03
https://api.github.com/repos/hyperledger/indy-sdk/issues/87,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/313656949,https://github.com/hyperledger/indy-sdk/pull/87#issuecomment-313656949,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=87) <br/>All committers have signed the CLA.,2017-07-07 11:29:03,2017-07-07 11:43:37
https://api.github.com/repos/hyperledger/indy-sdk/issues/79,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/313697101,https://github.com/hyperledger/indy-sdk/pull/79#issuecomment-313697101,jovfer,Merged as part of #83 ,2017-07-07 14:25:39,2017-07-07 14:25:39
https://api.github.com/repos/hyperledger/indy-sdk/issues/74,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/312304333,https://github.com/hyperledger/indy-sdk/pull/74#issuecomment-312304333,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=74) <br/>All committers have signed the CLA.,2017-06-30 15:51:42,2017-06-30 15:52:18
https://api.github.com/repos/hyperledger/indy-sdk/issues/70,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/312047149,https://github.com/hyperledger/indy-sdk/pull/70#issuecomment-312047149,CLAassistant,"[![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=70) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=70) before we can accept your contribution.<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/hyperledger/indy-sdk?pullRequest=70) it.</sub>",2017-06-29 17:59:55,2017-06-29 17:59:55
https://api.github.com/repos/hyperledger/indy-sdk/issues/60,https://api.github.com/repos/hyperledger/indy-sdk/issues/comments/311327332,https://github.com/hyperledger/indy-sdk/pull/60#issuecomment-311327332,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/indy-sdk?pullRequest=60) <br/>All committers have signed the CLA.,2017-06-27 11:11:34,2017-06-27 11:29:14
