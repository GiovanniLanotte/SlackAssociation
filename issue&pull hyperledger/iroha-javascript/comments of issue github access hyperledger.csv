url issues,url_api comment,url_html comment,user create comment,body,created_at,updated_at
https://api.github.com/repos/hyperledger/iroha-javascript/issues/28,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/456010531,https://github.com/hyperledger/iroha-javascript/issues/28#issuecomment-456010531,neewy,"you can reuse code from here 
https://github.com/hyperledger/iroha/pull/1944",2019-01-21 09:46:51,2019-01-21 09:46:51
https://api.github.com/repos/hyperledger/iroha-javascript/issues/26,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/377196544,https://github.com/hyperledger/iroha-javascript/issues/26#issuecomment-377196544,stinger112,"@valinaga 
Hi! This project isn't maintained anymore, we created new lib in [main Iroha repo](https://github.com/hyperledger/iroha/tree/develop/shared_model/packages/javascript)

AFAIK, C++ native part of new **iroha-lib** NPM package doesn't support compilation on ARM architecture, so it can't work with react-native. But we work on portability of native part and maybe it can be realized in compilation scenario in the future.

Please, ask your future questions in Iroha repository.

Best wishes,
Arseniy Fokin.",2018-03-29 10:43:31,2018-03-29 10:43:31
https://api.github.com/repos/hyperledger/iroha-javascript/issues/25,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/377193106,https://github.com/hyperledger/iroha-javascript/issues/25#issuecomment-377193106,stinger112,"@RobTS this project isn't maintained anymore, but you can install [our new library](https://www.npmjs.com/package/iroha-lib) by NPM or watch source code in main Iroha repo. For now, it placed [here](https://github.com/hyperledger/iroha/tree/develop/shared_model/packages/javascript) (internal path can be changed).

Please, ask your future questions in Iroha repository. 

Best wishes, 
Arseniy Fokin.",2018-03-29 10:27:41,2018-03-29 10:27:41
https://api.github.com/repos/hyperledger/iroha-javascript/issues/23,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/341843001,https://github.com/hyperledger/iroha-javascript/issues/23#issuecomment-341843001,robinleboe-sw,The demo link is still broken. ,2017-11-03 22:30:44,2017-11-03 22:30:44
https://api.github.com/repos/hyperledger/iroha-javascript/issues/23,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/377197543,https://github.com/hyperledger/iroha-javascript/issues/23#issuecomment-377197543,stinger112,"@djKooks @robinleboe-sw 

This project isn't maintained anymore, but you can install [our new library](https://www.npmjs.com/package/iroha-lib) by NPM or watch source code in main Iroha repo. For now, it placed [here](https://github.com/hyperledger/iroha/tree/develop/shared_model/packages/javascript) (internal path can be changed).

Please, ask your future questions in Iroha repository.

Best wishes,
Arseniy Fokin.",2018-03-29 10:48:15,2018-03-29 10:48:15
https://api.github.com/repos/hyperledger/iroha-javascript/issues/22,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/333983964,https://github.com/hyperledger/iroha-javascript/pull/22#issuecomment-333983964,CLAassistant,"[![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/hyperledger/iroha-javascript?pullRequest=22) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla-assistant.io/hyperledger/iroha-javascript?pullRequest=22) before we can accept your contribution.<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/hyperledger/iroha-javascript?pullRequest=22) it.</sub>",2017-10-03 21:27:58,2017-10-03 21:27:58
https://api.github.com/repos/hyperledger/iroha-javascript/issues/21,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/309201332,https://github.com/hyperledger/iroha-javascript/pull/21#issuecomment-309201332,CLAassistant,"[![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/hyperledger/iroha-javascript?pullRequest=21) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla-assistant.io/hyperledger/iroha-javascript?pullRequest=21) before we can accept your contribution.<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/hyperledger/iroha-javascript?pullRequest=21) it.</sub>",2017-06-17 08:18:24,2017-06-17 08:18:24
https://api.github.com/repos/hyperledger/iroha-javascript/issues/19,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/302633620,https://github.com/hyperledger/iroha-javascript/pull/19#issuecomment-302633620,gucc1,ðŸ™† ,2017-05-19 07:45:45,2017-05-19 07:45:45
https://api.github.com/repos/hyperledger/iroha-javascript/issues/18,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/302601200,https://github.com/hyperledger/iroha-javascript/pull/18#issuecomment-302601200,oimou,Signed a developer certificate.,2017-05-19 03:45:00,2017-05-19 03:45:00
https://api.github.com/repos/hyperledger/iroha-javascript/issues/18,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/302614059,https://github.com/hyperledger/iroha-javascript/pull/18#issuecomment-302614059,gucc1,LGTM!,2017-05-19 05:43:17,2017-05-19 05:43:17
https://api.github.com/repos/hyperledger/iroha-javascript/issues/17,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/302301283,https://github.com/hyperledger/iroha-javascript/pull/17#issuecomment-302301283,oimou,"Ran into this error when `npm run build:node`. Does it successfully work on your environment?

* node 7.10.0
* npm 4.2.0
* tsc 2.3.2

```console
ERROR in [at-loader] ./src/rest/services/account.ts:41:36 
    TS2345: Argument of type 'AxiosPromise' is not assignable to parameter of type 'Promise<any>'.
  Types of property 'then' are incompatible.
    Type '{ <R1, R2>(onFulfilled: (value: AxiosResponse) => R1 | Promise<R1>, onRejected: (error: any) => R...' is not assignable to type '{ (onfulfilled?: ((value: any) => any) | null | undefined, onrejected?: ((reason: any) => any) | ...'.
      Type 'Promise<any>' is not assignable to type 'Promise<any>'. Two different types with this name exist, but they are unrelated.
        Types of property 'then' are incompatible.
          Type '{ <R1, R2>(onFulfilled: (value: any) => R1 | Promise<R1>, onRejected: (error: any) => R2 | Promis...' is not assignable to type '{ (onfulfilled?: ((value: any) => any) | null | undefined, onrejected?: ((reason: any) => any) | ...'.
            Type 'Promise<any>' is not assignable to type 'Promise<any>'. Two different types with this name exist, but they are unrelated.

ERROR in [at-loader] ./src/rest/services/account.ts:45:36 
    TS2345: Argument of type 'AxiosPromise' is not assignable to parameter of type 'Promise<any>'.

ERROR in [at-loader] ./src/rest/services/asset.ts:51:34 
    TS2345: Argument of type 'AxiosPromise' is not assignable to parameter of type 'Promise<any>'.

ERROR in [at-loader] ./src/rest/services/asset.ts:54:34 
    TS2345: Argument of type 'AxiosPromise' is not assignable to parameter of type 'Promise<any>'.

ERROR in [at-loader] ./src/rest/services/asset.ts:57:36 
    TS2345: Argument of type 'AxiosPromise' is not assignable to parameter of type 'Promise<any>'.

ERROR in [at-loader] ./src/rest/services/domain.ts:28:35 
    TS2345: Argument of type 'AxiosPromise' is not assignable to parameter of type 'Promise<any>'.

ERROR in [at-loader] ./src/rest/services/domain.ts:32:35 
    TS2345: Argument of type 'AxiosPromise' is not assignable to parameter of type 'Promise<any>'.

ERROR in [at-loader] ./src/rest/services/transaction.ts:37:47 
    TS2345: Argument of type 'AxiosPromise' is not assignable to parameter of type 'Promise<any>'.
```

",2017-05-18 05:03:45,2017-05-18 05:03:45
https://api.github.com/repos/hyperledger/iroha-javascript/issues/16,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/297648719,https://github.com/hyperledger/iroha-javascript/pull/16#issuecomment-297648719,oimou,"Hi, I'm Keiji. Let me make sure one thing about how to manage 3rd-party libraries.

According to `gh-pages` branch, 3rd-party libraries (`supercop.js` and `js-sha3.js`) were bundled into `./dist/iroha.js` before. And, by recent changes, 3rd-party libraries are now excluded from bundled file. (For what I've seen, this PR is a configuration for this.)

When I was looking over this PR, I found that iroha-javascript doesn't work on browser.

Steps to reproduce
---
1. `npm run build:web` and build `irohajs.js`
2. Prepare a simple html like this:

```index.html
<!DOCTYPE html>
<html>
<head>
        <!-- Load 3rd-party libraries where placed to the same directory by hand -->
	<script src=""./supercop.js""></script>
	<script src=""./js-sha3.js""></script>
	<script src=""./irohajs.js""></script>
</head>
<body>
	<h1>iroha web client</h1>
</body>
</html>
```

3. Open it in browser and see console outputs.

Expected
---
No error.

Actual
---

```Error
Uncaught TypeError: Cannot read property 'sha3_256' of undefined
    at Object.<anonymous> (irohajs.ts:6)
    at Object.r.exports (irohajs.js:1943)
    at r (bootstrap 77e0038â€¦:19)
    at bootstrap 77e0038â€¦:65
    at bootstrap 77e0038â€¦:65
    at universalModuleDefinition:9
    at universalModuleDefinition:9
```

My system environment
---
Browser: Chrome Version 58.0.3029.81 (64-bit)
Node: v7.9.0
NPM: v4.2.0

Cause
---

The cause probably be that neither `supercop.js` nor `js-sha3.js` can be loaded by <script> tag because both supports only CommonJS style ðŸ¤” 

Solutions
---

Make `supercop.js` and `js-sha3.js` loadable as <script> tag, or Bundle these libraries into irohajs.js. It might be out of range of this PR.

Let me know if this problem is my environment's fault.",2017-04-27 08:30:19,2017-04-27 08:35:10
https://api.github.com/repos/hyperledger/iroha-javascript/issues/16,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/297684683,https://github.com/hyperledger/iroha-javascript/pull/16#issuecomment-297684683,theofilis,I investigate how it will be preferable way to distribute browser version of this library.,2017-04-27 11:12:40,2017-04-28 07:51:07
https://api.github.com/repos/hyperledger/iroha-javascript/issues/16,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/297928128,https://github.com/hyperledger/iroha-javascript/pull/16#issuecomment-297928128,oimou,"Thanks.

Though I proposed to modify `supercop.js` and `js-sha3.js`, it seems not so good choice. While to bundle 3rd-party libraries doesn't make sense for nodejs usage, it seems better to bundle them for browser usage in order to use the same code for both environment. (rather than to modify them)",2017-04-28 07:27:14,2017-04-28 07:27:14
https://api.github.com/repos/hyperledger/iroha-javascript/issues/16,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/299123809,https://github.com/hyperledger/iroha-javascript/pull/16#issuecomment-299123809,oimou,"If we have to modify two libraries,

## supercop.js
supercop.js was ported to JS by @GUCCI-swallow, so it seems easier to modify. 

## js-sha3
The problem is that js-sha3 is a 3rd-party library, but if we fork the repository, modification should not be so hard. Also I've searched alternative libraries of js-sha3:

* crypto-js https://github.com/brix/crypto-js
  * it says it has sha-3 impl but it actually has only Keccak (not sha-3) impl.
* Web Cryptography API (and polyfills)
  * it's preferable because browser native, but no sha-3 implementation.
* node-sha3
  * C++ native extension, so it's hard to use on browser.
  * emscripten may be able to convert it?


",2017-05-04 08:21:21,2017-05-04 08:21:21
https://api.github.com/repos/hyperledger/iroha-javascript/issues/16,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/299410655,https://github.com/hyperledger/iroha-javascript/pull/16#issuecomment-299410655,oimou,"Emil told me:
> it seems that forking, adapting and sending a PR to upstream is a better alternative, because contributing to open-source is good, and also the time is moving forward.",2017-05-05 08:31:30,2017-05-05 08:31:30
https://api.github.com/repos/hyperledger/iroha-javascript/issues/14,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/295136699,https://github.com/hyperledger/iroha-javascript/pull/14#issuecomment-295136699,yves-pkstd,"Today i took a look at the implementation and code wise it looks good to me.  However once I build the project, create a test npm package with npm pack and install that npm package in a demo nodejs application I am running into many webpack related problems.  

Now of course it could be  a problem on my end, and I hope it is :),  with setup and config problems but I am curious to hear if anybody else is encountering the same problems as I am.

So what is going wrong:
- if I import the project in js or ts like  var Iroha = require(""irohajs"");  an error is thrown when I run my node script.
   ""Type error: i is not a function"" for webpack -p
  ""Type error: existsSync is not a function"" for webpack.   existsSync being a fs module function.

Obviously this means that something is going wrong during the packaging. 

I know that the following setting should cover that problem but for some reason it is not in my case.

`  node: {
    fs: ""empty"",
    net: ""empty"",
    tls: ""empty""
  },`

The way I fixed it is by using the externals webpack config setting.    By passing an array of node module paths to the externals setting, webpack leaves require() tags that import from node_modules alone. This results in a code bundle  that does not bundle node modules, for example js-sha3, but just leaves the require('js-sha3) tag in place.    After doing this I could use the iroha api in my node script.

problem and solution is decribed in great detail here: http://jlongster.com/Backend-Apps-with-Webpack--Part-I

Which brings me to the question: as this is a package for nodejs usage, do we include everything in the irohajs.bundle or just the iroha code?  Personally, I don't feel the need for a bundle that even includes vendor code.

As the web javascript client will differ greatly, grpc-web (alpha stage) or http rest by grpc-gateway is used, maybe it seems ok to just focus on node when it comes to the webpack settings or later use webpacks target setting and create a config for 'node' and one for 'web'.  Currently the target setting is missing so it defaults to web.

Would love to hear all your thoughts on this.",2017-04-19 07:24:38,2017-04-19 08:43:43
https://api.github.com/repos/hyperledger/iroha-javascript/issues/14,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/296359650,https://github.com/hyperledger/iroha-javascript/pull/14#issuecomment-296359650,theofilis,"Hi, Yves 

Your observation are very helpful.

You are right, it is wrong to include vendors library with irohajs and it would be great to have to different webpack configuration one for web and other for nodejs.

So, I write down those two issues/recommendation for webpack configuration.

- [x] Do not include vendor libraries at irohajs bundle.
- [x] Distinct configuration for web & nodejs client.",2017-04-22 09:09:35,2017-04-22 09:53:49
https://api.github.com/repos/hyperledger/iroha-javascript/issues/14,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/296362109,https://github.com/hyperledger/iroha-javascript/pull/14#issuecomment-296362109,theofilis,"For a parametrized webpack builds I follow that [guide](https://blog.ngconsultant.io/a-guide-to-simple-parametrized-webpack-builds-24d43fcf8ae2).

",2017-04-22 09:55:00,2017-04-22 09:55:00
https://api.github.com/repos/hyperledger/iroha-javascript/issues/14,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/376875495,https://github.com/hyperledger/iroha-javascript/pull/14#issuecomment-376875495,stinger112,"PR outdated. 

New versions of official Iroha library called **iroha-lib** and hosted inside [main Iroha's repo](https://github.com/hyperledger/iroha/tree/develop/shared_model/packages/javascript) and on [NPM](https://www.npmjs.com/package/iroha-lib).",2018-03-28 12:53:09,2018-03-28 12:54:55
https://api.github.com/repos/hyperledger/iroha-javascript/issues/12,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/293177838,https://github.com/hyperledger/iroha-javascript/pull/12#issuecomment-293177838,takemiyamakoto,@theofilis Do you have a telegram username?,2017-04-11 07:43:28,2017-04-11 07:43:28
https://api.github.com/repos/hyperledger/iroha-javascript/issues/12,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/293307215,https://github.com/hyperledger/iroha-javascript/pull/12#issuecomment-293307215,theofilis,"Yes, I have! My username is theofilis.",2017-04-11 15:49:55,2017-04-11 15:49:55
https://api.github.com/repos/hyperledger/iroha-javascript/issues/11,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/287598878,https://github.com/hyperledger/iroha-javascript/pull/11#issuecomment-287598878,takemiyamakoto,"Thank you for your contribution!!

Overall, this looks okay. I guess there is just the question on whether we want to switch to typescript from JS. I think more people than me should comment on this, so let's see what people think.",2017-03-19 07:02:15,2017-03-19 07:02:29
https://api.github.com/repos/hyperledger/iroha-javascript/issues/11,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/287648349,https://github.com/hyperledger/iroha-javascript/pull/11#issuecomment-287648349,theofilis,"In this article you could find reasons why it's good idea to adopt Typescript

https://medium.freecodecamp.com/when-should-i-use-typescript-311cb5fe801b#.xxvrfzoa6",2017-03-19 21:17:50,2017-03-19 21:17:50
https://api.github.com/repos/hyperledger/iroha-javascript/issues/11,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/287959290,https://github.com/hyperledger/iroha-javascript/pull/11#issuecomment-287959290,takemiyamakoto,I personally like Typescript. I think we can have a decision today.,2017-03-21 02:37:36,2017-03-21 02:37:36
https://api.github.com/repos/hyperledger/iroha-javascript/issues/9,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/289204936,https://github.com/hyperledger/iroha-javascript/issues/9#issuecomment-289204936,theofilis,"Hello, I've started implementation of gRPC client. First it will support NodeJS then I will try to port it at browser.",2017-03-25 11:01:25,2017-03-25 11:01:25
https://api.github.com/repos/hyperledger/iroha-javascript/issues/9,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/289208316,https://github.com/hyperledger/iroha-javascript/issues/9#issuecomment-289208316,takemiyamakoto,This is the latest flatbuffer format: https://gist.github.com/Warchant/b7049e2f0653bd30c78f06b283c30bf0/revisions#diff-81f138be4276f4ba228e0164d8d7b773R27,2017-03-25 12:19:01,2017-03-25 12:19:01
https://api.github.com/repos/hyperledger/iroha-javascript/issues/9,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/296980949,https://github.com/hyperledger/iroha-javascript/issues/9#issuecomment-296980949,kj3104,@theofilis How is the progress for implement of gRPC?,2017-04-25 09:56:38,2017-04-25 09:56:55
https://api.github.com/repos/hyperledger/iroha-javascript/issues/9,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/297677292,https://github.com/hyperledger/iroha-javascript/issues/9#issuecomment-297677292,theofilis,"Hi, I manage to create a client with gRPC+protobuff, although I haven't have any significant progress with flatbuff. 

I started gRPC+protobuff in order to I become familiar with gRPC. 

Guy, if you found any helpful material for gRPC+flatbuffer don't hesitate to share it.",2017-04-27 10:34:56,2017-04-27 10:34:56
https://api.github.com/repos/hyperledger/iroha-javascript/issues/9,https://api.github.com/repos/hyperledger/iroha-javascript/issues/comments/377197171,https://github.com/hyperledger/iroha-javascript/issues/9#issuecomment-377197171,stinger112,Issue is outdated.,2018-03-29 10:46:32,2018-03-29 10:46:32
