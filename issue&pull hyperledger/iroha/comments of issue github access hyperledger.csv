url issues,url_api comment,url_html comment,user create comment,body,created_at,updated_at
https://api.github.com/repos/hyperledger/iroha/issues/2209,https://api.github.com/repos/hyperledger/iroha/issues/comments/479501967,https://github.com/hyperledger/iroha/pull/2209#issuecomment-479501967,luckychess,CI confuses me a bit - looks like all tests are passed but it shows failure status.,2019-04-03 14:00:19,2019-04-03 14:00:19
https://api.github.com/repos/hyperledger/iroha/issues/2209,https://api.github.com/repos/hyperledger/iroha/issues/comments/479822917,https://github.com/hyperledger/iroha/pull/2209#issuecomment-479822917,MBoldyrev,also it would be nice to give the patch `patch/synchronize-lock-recursion-thread-safety.patch` a more meaningful and descriptive name. I would suggest either renaming it with some `rxcpp` prefix or moving to a directory like `patches/external/rxcpp` (it other patches to rxcpp are probable).,2019-04-04 09:28:53,2019-04-04 09:28:53
https://api.github.com/repos/hyperledger/iroha/issues/2202,https://api.github.com/repos/hyperledger/iroha/issues/comments/478472474,https://github.com/hyperledger/iroha/pull/2202#issuecomment-478472474,igor-egorov,"A comment before the code review regarding an **alternative design**:
> Use something like circular buffer to allow newer batches push out the oldest ones.

I don't think that applying circular buffer here is a good solution. That case can cause a situation when a user puts half of the signatures to a transaction and then the transaction will disappear at some point in `GetPendingTransactions` query response. It will be neither passed to stateful validation nor ""mst""-expired in case of circular buffer substitution. 
Probably for that case, we will have to introduce some additional status (what will look very weird for me).
",2019-04-01 07:47:47,2019-04-01 07:47:47
https://api.github.com/repos/hyperledger/iroha/issues/2201,https://api.github.com/repos/hyperledger/iroha/issues/comments/478941816,https://github.com/hyperledger/iroha/pull/2201#issuecomment-478941816,lebdron,Does not seem required since develop builds successfully without any changes at the moment.,2019-04-02 10:43:08,2019-04-02 10:43:08
https://api.github.com/repos/hyperledger/iroha/issues/2198,https://api.github.com/repos/hyperledger/iroha/issues/comments/479840381,https://github.com/hyperledger/iroha/pull/2198#issuecomment-479840381,igor-egorov,CI failed due to known issue of 9.0 apple clang.,2019-04-04 10:22:41,2019-04-04 10:22:41
https://api.github.com/repos/hyperledger/iroha/issues/2196,https://api.github.com/repos/hyperledger/iroha/issues/comments/478940740,https://github.com/hyperledger/iroha/pull/2196#issuecomment-478940740,lebdron,Please add a task and TODO to remove unused configs.,2019-04-02 10:39:25,2019-04-02 10:39:25
https://api.github.com/repos/hyperledger/iroha/issues/2188,https://api.github.com/repos/hyperledger/iroha/issues/comments/475156804,https://github.com/hyperledger/iroha/pull/2188#issuecomment-475156804,igor-egorov,">do we need honest validators in all these module tests?

Not sure. I left it as is because the main focus was not to break tests, which were already using the real instance of ProtoQueryFactory (just one more dependency was added - ProtoBlocksQueryFactory).",2019-03-21 09:13:26,2019-03-21 09:14:44
https://api.github.com/repos/hyperledger/iroha/issues/2184,https://api.github.com/repos/hyperledger/iroha/issues/comments/474514931,https://github.com/hyperledger/iroha/pull/2184#issuecomment-474514931,luckychess,"Hi, @namitkrarya. Congratulations on your first Iroha PR!
Your idea is very sensible. Unfortunately, we have at least two reasons not to make that change right now:

- Removing a field from block is a backward-incompatible change (since block's hashes become different) and prefer to avoid them at this point, at least before we make Iroha fully backwards compatible with different block versions (v2 in this case).
- Another mechanism for limiting amount of transactions in a block should be designed. It could be a stateless validation rule of something different. At the moment we are not sure.

Thank you for mentioning that, it does seem outdated. But we need to have a discussion about how to make the change and what alternative design to use.
",2019-03-19 18:30:51,2019-03-19 18:30:51
https://api.github.com/repos/hyperledger/iroha/issues/2176,https://api.github.com/repos/hyperledger/iroha/issues/comments/473814962,https://github.com/hyperledger/iroha/pull/2176#issuecomment-473814962,lebdron,"`git show ead86af` can be used to review the merge commit, since github shows changes in develop, which are not related to fake peers.",2019-03-18 08:30:20,2019-03-18 08:30:20
https://api.github.com/repos/hyperledger/iroha/issues/2173,https://api.github.com/repos/hyperledger/iroha/issues/comments/473792584,https://github.com/hyperledger/iroha/pull/2173#issuecomment-473792584,lebdron,"@neewy 
I am not sure that both suggested changes are applicable at the moment. There were no load tests for MST transactions yet, and testing for 500ms delay is still in progress.",2019-03-18 07:01:32,2019-03-18 07:01:32
https://api.github.com/repos/hyperledger/iroha/issues/2171,https://api.github.com/repos/hyperledger/iroha/issues/comments/472885560,https://github.com/hyperledger/iroha/pull/2171#issuecomment-472885560,neewy,@LiraLemur can you please jump in and help with styling and proper alignment? Thanks!,2019-03-14 14:29:58,2019-03-14 14:29:58
https://api.github.com/repos/hyperledger/iroha/issues/2171,https://api.github.com/repos/hyperledger/iroha/issues/comments/472899319,https://github.com/hyperledger/iroha/pull/2171#issuecomment-472899319,LiraLemur,@neewy please check if you like my idea,2019-03-14 14:52:03,2019-03-14 14:52:03
https://api.github.com/repos/hyperledger/iroha/issues/2171,https://api.github.com/repos/hyperledger/iroha/issues/comments/472927022,https://github.com/hyperledger/iroha/pull/2171#issuecomment-472927022,neewy,@LiraLemur can we format it somehow so that it occupies less vertical space? e.g. table in all-contributors: https://github.com/all-contributors/all-contributors#emoji-key,2019-03-14 15:44:03,2019-03-14 15:44:03
https://api.github.com/repos/hyperledger/iroha/issues/2171,https://api.github.com/repos/hyperledger/iroha/issues/comments/476477071,https://github.com/hyperledger/iroha/pull/2171#issuecomment-476477071,neewy,It it better to reformat this table in two rows ,2019-03-26 05:05:49,2019-03-26 05:05:49
https://api.github.com/repos/hyperledger/iroha/issues/2171,https://api.github.com/repos/hyperledger/iroha/issues/comments/476695142,https://github.com/hyperledger/iroha/pull/2171#issuecomment-476695142,LiraLemur,Fixed the table ,2019-03-26 15:13:12,2019-03-26 15:13:12
https://api.github.com/repos/hyperledger/iroha/issues/2168,https://api.github.com/repos/hyperledger/iroha/issues/comments/478470323,https://github.com/hyperledger/iroha/pull/2168#issuecomment-478470323,bakhtin,Make sure to fix a cleanup schedule. The rest seems fine,2019-04-01 07:40:33,2019-04-01 07:40:33
https://api.github.com/repos/hyperledger/iroha/issues/2162,https://api.github.com/repos/hyperledger/iroha/issues/comments/472304956,https://github.com/hyperledger/iroha/pull/2162#issuecomment-472304956,neewy,Just a hint for the future: if you update the docs include [ci skip] to your commits so that CI is not triggered for your build,2019-03-13 07:06:04,2019-03-13 07:06:04
https://api.github.com/repos/hyperledger/iroha/issues/2161,https://api.github.com/repos/hyperledger/iroha/issues/comments/472241525,https://github.com/hyperledger/iroha/issues/2161#issuecomment-472241525,sorabot,"Thank you for reporting this! To resolve issues quicker and more efficiently, we now track them in Jira - that way they get considered during sprint planning and never get lost or mishandled 😊 We have already carefully transferred your reported issue [here][Jira].
If you want to track your issue or help us fix it (that would be awesome!), please follow the link above. Even if you do not have a  LFID needed for logging in, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

In case you have just a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖

[Jira]: https://jira.hyperledger.org/browse/IR-395",2019-03-13 01:15:41,2019-03-13 01:15:41
https://api.github.com/repos/hyperledger/iroha/issues/2160,https://api.github.com/repos/hyperledger/iroha/issues/comments/474245988,https://github.com/hyperledger/iroha/pull/2160#issuecomment-474245988,MBoldyrev,"> Several tasks in jira should be created:
> 
>     * make BlockLoaderImpl testable with grpc mocks
> 
>     * test that deadline in context is set
> 
>     * test that nothing is emitted if there are multiple blocks but no subscribers

The created tasks are [IR-409](https://jira.hyperledger.org/projects/IR/issues/IR-409) and [IR-410](https://jira.hyperledger.org/projects/IR/issues/IR-410).",2019-03-19 08:36:00,2019-03-19 08:36:00
https://api.github.com/repos/hyperledger/iroha/issues/2157,https://api.github.com/repos/hyperledger/iroha/issues/comments/471714973,https://github.com/hyperledger/iroha/pull/2157#issuecomment-471714973,neewy,Did you run sanitizer against this version?,2019-03-11 20:24:23,2019-03-11 20:24:23
https://api.github.com/repos/hyperledger/iroha/issues/2157,https://api.github.com/repos/hyperledger/iroha/issues/comments/471974770,https://github.com/hyperledger/iroha/pull/2157#issuecomment-471974770,luckychess,@neewy yep and it doesn't complain anymore,2019-03-12 12:11:28,2019-03-12 12:11:28
https://api.github.com/repos/hyperledger/iroha/issues/2156,https://api.github.com/repos/hyperledger/iroha/issues/comments/471974702,https://github.com/hyperledger/iroha/pull/2156#issuecomment-471974702,neewy,"@MBoldyrev TBH I did not write the code myself — I reused the script from https://github.com/JeremyAgost/lcov-llvm-function-mishit-filter repo. We can test it with your suggestions, but it seem to work now with python3.5",2019-03-12 12:11:10,2019-03-12 12:11:10
https://api.github.com/repos/hyperledger/iroha/issues/2156,https://api.github.com/repos/hyperledger/iroha/issues/comments/472279816,https://github.com/hyperledger/iroha/pull/2156#issuecomment-472279816,MBoldyrev,"> @MBoldyrev TBH I did not write the code myself — I reused the script from https://github.com/JeremyAgost/lcov-llvm-function-mishit-filter repo. We can test it with your suggestions, but it seem to work now with python3.5

I see, but it as fa as I can see, the code is bogous, and one of the purposes of the PR review concept is preventing bad things from entering our repo. I see that the script contains some bad stuff, and I'd like to remove it prior to merging this. The script seems simple enough to rewrite it ourselves in a more robust way.",2019-03-13 04:56:43,2019-03-13 04:56:43
https://api.github.com/repos/hyperledger/iroha/issues/2155,https://api.github.com/repos/hyperledger/iroha/issues/comments/471313058,https://github.com/hyperledger/iroha/issues/2155#issuecomment-471313058,sorabot,"Thank you for reporting this! To resolve issues quicker and more efficiently, we now track them in Jira - that way they get considered during sprint planning and never get lost or mishandled 😊 We have already carefully transferred your reported issue [here][Jira].
If you want to track your issue or help us fix it (that would be awesome!), please follow the link above. Even if you do not have a  LFID needed for logging in, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

In case you have just a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖

[Jira]: https://jira.hyperledger.org/browse/IR-389",2019-03-10 14:52:11,2019-03-10 14:52:11
https://api.github.com/repos/hyperledger/iroha/issues/2155,https://api.github.com/repos/hyperledger/iroha/issues/comments/471408037,https://github.com/hyperledger/iroha/issues/2155#issuecomment-471408037,takemiyamakoto,Were you able to figure out reporting this in Jira?,2019-03-11 05:22:01,2019-03-11 05:22:01
https://api.github.com/repos/hyperledger/iroha/issues/2155,https://api.github.com/repos/hyperledger/iroha/issues/comments/472230904,https://github.com/hyperledger/iroha/issues/2155#issuecomment-472230904,pythlang,"Thank you fo reaching out; I believe it was automatically logged in JIRA, however, it has not been assigned as far as I can tell.

After including it in the global cmakelists.txt, I also ended up with a similar issue with the ametsuchi library not being able to be found; I included it in the root global as well and that appears to have fixed both problems, however, I'm unsure of the consequences of doing such a thing.",2019-03-13 00:18:48,2019-03-13 00:18:48
https://api.github.com/repos/hyperledger/iroha/issues/2154,https://api.github.com/repos/hyperledger/iroha/issues/comments/471312413,https://github.com/hyperledger/iroha/issues/2154#issuecomment-471312413,sorabot,"Thank you for reporting this! To resolve issues quicker and more efficiently, we now track them in Jira - that way they get considered during sprint planning and never get lost or mishandled 😊 We have already carefully transferred your reported issue [here][Jira].
If you want to track your issue or help us fix it (that would be awesome!), please follow the link above. Even if you do not have a  LFID needed for logging in, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

In case you have just a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖

[Jira]: https://jira.hyperledger.org/browse/IR-388",2019-03-10 14:44:12,2019-03-10 14:44:12
https://api.github.com/repos/hyperledger/iroha/issues/2153,https://api.github.com/repos/hyperledger/iroha/issues/comments/471474368,https://github.com/hyperledger/iroha/pull/2153#issuecomment-471474368,neewy,Tested on macOS Mojave and Ubuntu 16.04 (report available here https://0x0.st/zH3p.gz) @lebdron ,2019-03-11 09:55:49,2019-03-11 09:55:49
https://api.github.com/repos/hyperledger/iroha/issues/2146,https://api.github.com/repos/hyperledger/iroha/issues/comments/469833172,https://github.com/hyperledger/iroha/pull/2146#issuecomment-469833172,LiraLemur,"> Thanks!
> 
> Internal links on the Contributing page are broken :(
> <img alt=""image"" width=""100"" src=""https://user-images.githubusercontent.com/36847043/53815551-e73f0780-3f72-11e9-802c-43347c1607b6.png"">

@igor-egorov that's odd - ""Contact developers"" worked, that's what I've tried. Maybe you could check for the change of the pattern there? 
M2R's documentation also suggests it should work :(",2019-03-05 19:51:54,2019-03-05 20:03:01
https://api.github.com/repos/hyperledger/iroha/issues/2142,https://api.github.com/repos/hyperledger/iroha/issues/comments/471914057,https://github.com/hyperledger/iroha/pull/2142#issuecomment-471914057,MBoldyrev,Will be implemented with different approach.,2019-03-12 09:03:52,2019-03-12 09:03:52
https://api.github.com/repos/hyperledger/iroha/issues/2138,https://api.github.com/repos/hyperledger/iroha/issues/comments/469555866,https://github.com/hyperledger/iroha/pull/2138#issuecomment-469555866,neewy,Btw we can merge these changes in case there is a feature toggle (if you explicitly allow perform remote shutdown in config),2019-03-05 06:25:28,2019-03-05 06:25:28
https://api.github.com/repos/hyperledger/iroha/issues/2135,https://api.github.com/repos/hyperledger/iroha/issues/comments/471421085,https://github.com/hyperledger/iroha/pull/2135#issuecomment-471421085,neewy,I changed the base to develop — can you please run this once again against the codebase in develop?,2019-03-11 06:38:31,2019-03-11 06:38:31
https://api.github.com/repos/hyperledger/iroha/issues/2135,https://api.github.com/repos/hyperledger/iroha/issues/comments/471460595,https://github.com/hyperledger/iroha/pull/2135#issuecomment-471460595,Warchant,"I have boost installed, but build fails with:
```
[  8%] Building CXX object libs/logger/CMakeFiles/logger.dir/logger_spdlog.o
/Users/bogdan/tools/iroha/libs/logger/logger_spdlog.cpp:15:10: fatal error: 'boost/assert.hpp' file not found
#include <boost/assert.hpp>
```

Closing. Maybe if build is fixed, I will attempt again.",2019-03-11 09:15:08,2019-03-11 09:15:08
https://api.github.com/repos/hyperledger/iroha/issues/2129,https://api.github.com/repos/hyperledger/iroha/issues/comments/468128327,https://github.com/hyperledger/iroha/pull/2129#issuecomment-468128327,sudomann,"@Baydarich I recently created a [pull request](https://github.com/hyperledger/iroha/pull/2123) regarding deploying ansible in kubernetes clusters. I have no experience in security of any sort; could  you make some suggestions as to how i could improve security handling?
Best I have thought of is the generated files containing private keys to be deleted by ansible after being used to deploy.",2019-02-28 03:59:09,2019-02-28 04:00:45
https://api.github.com/repos/hyperledger/iroha/issues/2129,https://api.github.com/repos/hyperledger/iroha/issues/comments/468200950,https://github.com/hyperledger/iroha/pull/2129#issuecomment-468200950,Baydarich,@sudomann I left a comment in your pull request,2019-02-28 09:28:45,2019-02-28 09:28:45
https://api.github.com/repos/hyperledger/iroha/issues/2127,https://api.github.com/repos/hyperledger/iroha/issues/comments/468156184,https://github.com/hyperledger/iroha/pull/2127#issuecomment-468156184,MBoldyrev,"In a discussion on commit hash inclusion to log lines format we decided it is an excessive info, so I reverted that change and added a single log line containing the version to be printed during startup.",2019-02-28 06:38:18,2019-02-28 06:38:18
https://api.github.com/repos/hyperledger/iroha/issues/2127,https://api.github.com/repos/hyperledger/iroha/issues/comments/468156438,https://github.com/hyperledger/iroha/pull/2127#issuecomment-468156438,MBoldyrev,"That is how it looks compiled on my machine:
```
[2019-02-28 09:32:51.729015315] [I] [Init]: Irohad version: v0.75-4927-g50675ce8d
```",2019-02-28 06:39:32,2019-02-28 06:39:32
https://api.github.com/repos/hyperledger/iroha/issues/2127,https://api.github.com/repos/hyperledger/iroha/issues/comments/468337211,https://github.com/hyperledger/iroha/pull/2127#issuecomment-468337211,MBoldyrev,"As the logger formatting with git hash was considered unneeded, I rebased the branch from the new logger to develop.",2019-02-28 16:23:41,2019-02-28 16:23:41
https://api.github.com/repos/hyperledger/iroha/issues/2126,https://api.github.com/repos/hyperledger/iroha/issues/comments/467359944,https://github.com/hyperledger/iroha/pull/2126#issuecomment-467359944,MBoldyrev,"Commits 2f09018, 4241a1e, e940c49 and d1f2be94e were accidentally merged from #2072 without being squashed.",2019-02-26 09:16:14,2019-02-26 09:16:14
https://api.github.com/repos/hyperledger/iroha/issues/2126,https://api.github.com/repos/hyperledger/iroha/issues/comments/467413684,https://github.com/hyperledger/iroha/pull/2126#issuecomment-467413684,neewy,Can you please also write some docs about verbosity level here?..,2019-02-26 12:07:31,2019-02-26 12:07:31
https://api.github.com/repos/hyperledger/iroha/issues/2126,https://api.github.com/repos/hyperledger/iroha/issues/comments/468901028,https://github.com/hyperledger/iroha/pull/2126#issuecomment-468901028,MBoldyrev,"> Looks good but please fix `mst_fuzz` and `status_fuzzing` and `torii_fuzzing` targets.

These targets are outdated due to missing CI checks for them, and it has nothing to do with the new logger. So I tried to fix them in a separate PR: please see #2136.",2019-03-02 08:43:31,2019-03-02 08:43:31
https://api.github.com/repos/hyperledger/iroha/issues/2124,https://api.github.com/repos/hyperledger/iroha/issues/comments/468398664,https://github.com/hyperledger/iroha/pull/2124#issuecomment-468398664,neewy,Please consider changes from #2113,2019-02-28 19:11:08,2019-02-28 19:11:08
https://api.github.com/repos/hyperledger/iroha/issues/2124,https://api.github.com/repos/hyperledger/iroha/issues/comments/471421355,https://github.com/hyperledger/iroha/pull/2124#issuecomment-471421355,neewy,Since we managed to update the docs about all the libs I will close this PR. Reopen if needed — in this case please resolve conflicts first.,2019-03-11 06:40:00,2019-03-11 06:40:00
https://api.github.com/repos/hyperledger/iroha/issues/2123,https://api.github.com/repos/hyperledger/iroha/issues/comments/466800353,https://github.com/hyperledger/iroha/pull/2123#issuecomment-466800353,sudomann,Would be great if someone could help out in setting appropriate resource limits. I have no idea what iroha needs and lack expertise to measure/analyze.,2019-02-24 18:03:50,2019-02-24 18:03:50
https://api.github.com/repos/hyperledger/iroha/issues/2123,https://api.github.com/repos/hyperledger/iroha/issues/comments/468199769,https://github.com/hyperledger/iroha/pull/2123#issuecomment-468199769,Baydarich,"@sudomann You were asking me about improving security handling. Deleting files with private keys from a deployment host after the process is finished sounds like a good idea, but be sure to backup them somewhere in a safe place.

I don't understand why there are private and public keys embedded directly in configuration files, can you clarify a bit?",2019-02-28 09:25:10,2019-02-28 09:25:10
https://api.github.com/repos/hyperledger/iroha/issues/2123,https://api.github.com/repos/hyperledger/iroha/issues/comments/468237273,https://github.com/hyperledger/iroha/pull/2123#issuecomment-468237273,sudomann,"@Baydarich When Ansible generates keys for each peer, they are first recorded into a [csv file](https://github.com/hyperledger/iroha/pull/2123/files#diff-ddc699e3ae6686442dc6b6ec37d8b027). 

1.  For lack of a better alternative, I improved upon the existing kubernetes setup, which [preserves each peer as its own unique entity](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/) with fixed persistent storage. The csv file is handy for subsequent tasks such as registering all peers in the `genesis.block` file, since the peer's hostname and public key are extracted from it.

2. Later on in the process, the public and private keys of each peer are extracted from that csv file to generate [a `yml` resource file for cluster secrets](https://github.com/hyperledger/iroha/pull/2123/files#diff-4a95290b9cf2e56f70a1c73d80792872). The keys are encoded in base64 (requirement of Kubernetes) but can be very easily reverted to readable hex. This yml file is used to create all the secrets at once with a single command.

3. Before each pod hosting a peer is started, these keys are [mounted](https://github.com/hyperledger/iroha/pull/2123/files#diff-595af1be216cc2b8cac1f232038f5211L41) [from secrets](https://github.com/hyperledger/iroha/pull/2123/files#diff-595af1be216cc2b8cac1f232038f5211R100) and [copied](https://github.com/hyperledger/iroha/pull/2123/files#diff-595af1be216cc2b8cac1f232038f5211R28) to appropriate containers. 

As I understand, there is no further use in knowing/keeping the private keys beyond that once all the peers have them mounted. For potential debugging purposes however, I thought it made sense to have files showing that the role was working as intended. e.g verifying using the csv file that the peers were assigned the right combination of hostname and public key when added in the `genesis.block` (in the same order), along with the mounted secrets (in the same order).

I've thought about changing the Ansible steps to instead add a peer to the `genesis.block` file with its hostname, and create its secret *as* they are generated, but this is much more annoying for a developer to debug, with nothing but a trail of scattered stdout text to piece together.    ",2019-02-28 11:22:53,2019-02-28 14:35:58
https://api.github.com/repos/hyperledger/iroha/issues/2123,https://api.github.com/repos/hyperledger/iroha/issues/comments/472290850,https://github.com/hyperledger/iroha/pull/2123#issuecomment-472290850,bakhtin,Thanks for the contribution. I skimmed through the code and overall it looks good. But we need some time to actually test the new playbook. Based on the test results I'll be able to give a proper feedback.,2019-03-13 05:59:26,2019-03-13 05:59:26
https://api.github.com/repos/hyperledger/iroha/issues/2120,https://api.github.com/repos/hyperledger/iroha/issues/comments/475167954,https://github.com/hyperledger/iroha/pull/2120#issuecomment-475167954,muratovv,This PR was introduced as sugar for managing subscriptions but it seems that the maintainers want to find a more elegant solution which includes both: automatic management of subscriptions and subject/observer lifetime.,2019-03-21 09:53:45,2019-03-21 09:53:45
https://api.github.com/repos/hyperledger/iroha/issues/2119,https://api.github.com/repos/hyperledger/iroha/issues/comments/465754396,https://github.com/hyperledger/iroha/pull/2119#issuecomment-465754396,igor-egorov,"@lebdron could you please confirm two things for `locustfile.py` and `locustfile-performance.py`:

1. Variables `host`, `min_wait` and `max_wait` are correctly placed and defined.

2. Class `task_set` is the class defined witin a scope of `ApiUser` class.


```python

class ApiUser(IrohaLocust):
    
    host = ""127.0.0.1:50051""
    min_wait = 100
    max_wait = 1000
    
    class task_set(TaskSet):

```",2019-02-20 21:07:36,2019-02-20 21:07:36
https://api.github.com/repos/hyperledger/iroha/issues/2119,https://api.github.com/repos/hyperledger/iroha/issues/comments/465950655,https://github.com/hyperledger/iroha/pull/2119#issuecomment-465950655,lebdron,"@igor-egorov Yes, this code is according to the [example](https://docs.locust.io/en/stable/testing-other-systems.html#sample-xml-rpc-locust-client)",2019-02-21 10:40:53,2019-02-21 10:40:53
https://api.github.com/repos/hyperledger/iroha/issues/2118,https://api.github.com/repos/hyperledger/iroha/issues/comments/465549659,https://github.com/hyperledger/iroha/issues/2118#issuecomment-465549659,sorabot,"Thank you for reporting this! To resolve issues quicker and more efficiently, we now track them in Jira - that way they get considered during sprint planning and never get lost or mishandled 😊 We have already carefully transferred your reported issue [here][Jira].
If you want to track your issue or help us fix it (that would be awesome!), please follow the link above. Even if you do not have a  LFID needed for logging in, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

In case you have just a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖

[Jira]: https://jira.hyperledger.org/browse/IR-349",2019-02-20 12:14:00,2019-02-20 12:14:00
https://api.github.com/repos/hyperledger/iroha/issues/2114,https://api.github.com/repos/hyperledger/iroha/issues/comments/465287335,https://github.com/hyperledger/iroha/pull/2114#issuecomment-465287335,LiraLemur,I somehow managed to create a protected branch on the previous PR. Please check this one - I've made the suggested changes :) ,2019-02-19 19:59:54,2019-02-19 19:59:54
https://api.github.com/repos/hyperledger/iroha/issues/2112,https://api.github.com/repos/hyperledger/iroha/issues/comments/465140094,https://github.com/hyperledger/iroha/issues/2112#issuecomment-465140094,sorabot,"If you believe you’ve found a bug and have a Linux Foundation ID already, please open a JIRA ticket [here](https://jira.hyperledger.org/secure/CreateIssue!default.jspa) (Iroha project)🙏 If you do not have a LFID, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

If you have a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖
[Jira]: https://jira.hyperledger.org/browse/IR-340",2019-02-19 14:04:55,2019-02-19 14:04:55
https://api.github.com/repos/hyperledger/iroha/issues/2112,https://api.github.com/repos/hyperledger/iroha/issues/comments/465543455,https://github.com/hyperledger/iroha/issues/2112#issuecomment-465543455,BulatSaif,"Thank you for reporting this! To resolve issues quicker and more efficiently, we now track them in Jira - that way they get considered during sprint planning and never get lost or mishandled 😊 We have already carefully transferred your reported issue [here][Jira].
If you want to track your issue or help us fix it (that would be awesome!), please follow the link above. Even if you do not have a  LFID needed for logging in, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

In case you have just a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖

[Jira]: https://jira.hyperledger.org/browse/IR-340",2019-02-20 11:51:58,2019-02-20 11:58:44
https://api.github.com/repos/hyperledger/iroha/issues/2111,https://api.github.com/repos/hyperledger/iroha/issues/comments/465137580,https://github.com/hyperledger/iroha/issues/2111#issuecomment-465137580,sorabot,"If you believe you’ve found a bug and have a Linux Foundation ID already, please open a JIRA ticket [here](https://jira.hyperledger.org/secure/CreateIssue!default.jspa) (Iroha project)🙏 If you do not have a LFID, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

If you have a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖
[Jira]: https://jira.hyperledger.org/browse/IR-339",2019-02-19 13:58:43,2019-02-19 13:58:43
https://api.github.com/repos/hyperledger/iroha/issues/2110,https://api.github.com/repos/hyperledger/iroha/issues/comments/465130838,https://github.com/hyperledger/iroha/issues/2110#issuecomment-465130838,sorabot,"If you believe you’ve found a bug and have a Linux Foundation ID already, please open a JIRA ticket [here](https://jira.hyperledger.org/secure/CreateIssue!default.jspa) (Iroha project)🙏 If you do not have a LFID, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

If you have a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖",2019-02-19 13:38:14,2019-02-19 13:38:14
https://api.github.com/repos/hyperledger/iroha/issues/2106,https://api.github.com/repos/hyperledger/iroha/issues/comments/465221822,https://github.com/hyperledger/iroha/pull/2106#issuecomment-465221822,neewy,Draft? wow,2019-02-19 17:05:55,2019-02-19 17:05:55
https://api.github.com/repos/hyperledger/iroha/issues/2105,https://api.github.com/repos/hyperledger/iroha/issues/comments/465242155,https://github.com/hyperledger/iroha/pull/2105#issuecomment-465242155,neewy,"@MBoldyrev, unfortunately, this is an issue we have to live with for some time until RxCpp is fixed",2019-02-19 18:00:04,2019-02-19 18:00:04
https://api.github.com/repos/hyperledger/iroha/issues/2105,https://api.github.com/repos/hyperledger/iroha/issues/comments/465439402,https://github.com/hyperledger/iroha/pull/2105#issuecomment-465439402,MBoldyrev,"> @MBoldyrev, unfortunately, this is an issue we have to live with for some time until RxCpp is fixed

If we are going to use Rx from elsewhere, we need to make sure it has the patch. I do not see a reasonable way to check it even after the Andrew's pull request to Rx repo is merged - users still may have the old version (and most probably they will for a long time). I think we must use a fixed version of the library applying the patch with CMake until it gets into the Rx repo, and after that switch to a fixed version from the repo, but not blindly use any Rx lib found in the user environment.",2019-02-20 06:12:34,2019-02-20 06:12:34
https://api.github.com/repos/hyperledger/iroha/issues/2105,https://api.github.com/repos/hyperledger/iroha/issues/comments/472884658,https://github.com/hyperledger/iroha/pull/2105#issuecomment-472884658,lebdron,"Since https://github.com/ReactiveX/RxCpp/pull/486 was merged, it might be better to bump the version instead.",2019-03-14 14:28:32,2019-03-14 14:28:32
https://api.github.com/repos/hyperledger/iroha/issues/2104,https://api.github.com/repos/hyperledger/iroha/issues/comments/465513865,https://github.com/hyperledger/iroha/pull/2104#issuecomment-465513865,neewy,We need to cover new operator with a test,2019-02-20 10:19:50,2019-02-20 10:19:50
https://api.github.com/repos/hyperledger/iroha/issues/2103,https://api.github.com/repos/hyperledger/iroha/issues/comments/467434824,https://github.com/hyperledger/iroha/pull/2103#issuecomment-467434824,lebdron,"@igor-egorov Looks great.
```
[2019-02-26 13:15:52.458655126][th:16723][warning] IROHAD N12shared_model5proto5BlockE: created 9, alive :0
[2019-02-26 13:15:52.458691668][th:16723][info] TxProcessor there are no transactions to be committed
^C[2019-02-26 13:15:54.266723170][th:16716][info] MAIN shutting down...
[2019-02-26 13:15:54.459066329][th:16723][info] OnDemandOrderingServiceImpl onCollaborationOutcome => Round: [block=2, reject=4, ]
[2019-02-26 13:15:54.459909614][th:16723][warning] OnDemandOsClientGrpc RPC failed: Connect Failed
[2019-02-26 13:15:54.460881338][th:16723][info] YAC Order for voting: {127.0.0.1:10001}
[2019-02-26 13:15:54.461079430][th:16723][info] YAC Vote for round Round: [block=2, reject=4, ], hash (, ) to peer Peer: [address=127.0.0.1:10001, pubkey=Publ
ddd58404d1315e0eb27902c5d7c8eb0602c16238f005773df406bc191308929 ], ]                                                                                          icKey: [b
[2019-02-26 13:15:54.461194647][th:16723][info] AsyncGrpcClient Send votes bundle[size=1] to 127.0.0.1:10001                                                  itor, Var
[2019-02-26 13:15:54.461241223][th:16719][warning] AsyncGrpcClient RPC failed: Connect Failed                                                                 eld-initi
[2019-02-26 13:15:54.461248525][th:16723][info] IROHAD ~~~~~~~~~| PROPOSAL ^_^ |~~~~~~~~~                                                                     icKey: [b
[2019-02-26 13:15:54.461314376][th:16723][warning] IROHAD N12shared_model5proto5BlockE: created 9, alive :0
```",2019-02-26 13:20:29,2019-02-26 13:20:29
https://api.github.com/repos/hyperledger/iroha/issues/2102,https://api.github.com/repos/hyperledger/iroha/issues/comments/467093845,https://github.com/hyperledger/iroha/pull/2102#issuecomment-467093845,igor-egorov,Please review the two last commits.,2019-02-25 17:08:23,2019-02-25 17:08:23
https://api.github.com/repos/hyperledger/iroha/issues/2101,https://api.github.com/repos/hyperledger/iroha/issues/comments/464295994,https://github.com/hyperledger/iroha/pull/2101#issuecomment-464295994,MBoldyrev,"Please see an alternative approach in #2104. While implementing the same idea, it avoids copying the external source code (less maintenance troubles) and also causes less false wakeups (when an event is scheduled after next scheduled wakeup).",2019-02-16 05:44:38,2019-02-16 05:44:38
https://api.github.com/repos/hyperledger/iroha/issues/2101,https://api.github.com/repos/hyperledger/iroha/issues/comments/465168331,https://github.com/hyperledger/iroha/pull/2101#issuecomment-465168331,igor-egorov,#2104 will be applied with an additional fix for rx combine_latest from @lebdron ,2019-02-19 15:10:01,2019-02-19 15:10:01
https://api.github.com/repos/hyperledger/iroha/issues/2100,https://api.github.com/repos/hyperledger/iroha/issues/comments/465287777,https://github.com/hyperledger/iroha/pull/2100#issuecomment-465287777,LiraLemur,Closing this one because a protected branch was created and it seems impossible to push new commits into it. Please see https://github.com/hyperledger/iroha/pull/2114,2019-02-19 20:01:12,2019-02-19 20:01:12
https://api.github.com/repos/hyperledger/iroha/issues/2097,https://api.github.com/repos/hyperledger/iroha/issues/comments/463457210,https://github.com/hyperledger/iroha/issues/2097#issuecomment-463457210,sorabot,"If you believe you’ve found a bug and have a Linux Foundation ID already, please open a JIRA ticket [here](https://jira.hyperledger.org/secure/CreateIssue!default.jspa) (Iroha project)🙏 If you do not have a LFID, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

If you have a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖",2019-02-14 02:11:41,2019-02-14 02:11:41
https://api.github.com/repos/hyperledger/iroha/issues/2097,https://api.github.com/repos/hyperledger/iroha/issues/comments/463472585,https://github.com/hyperledger/iroha/issues/2097#issuecomment-463472585,frgomes,;-(,2019-02-14 03:23:19,2019-02-14 03:49:08
https://api.github.com/repos/hyperledger/iroha/issues/2097,https://api.github.com/repos/hyperledger/iroha/issues/comments/464658609,https://github.com/hyperledger/iroha/issues/2097#issuecomment-464658609,LiraLemur,"@frgomes Hi! It's been a long journey for the issues - we tried different approaches and it seems like the best one for real and quicker solution is creating issues in Jira, where they are considered during sprint planning. 
There are some good news, though - this version of Sorabot is only the first one - we are testing a new one already - it will automatically take the info you've entered and put it into Jira issue with a link. What do you think of that? ",2019-02-18 09:39:59,2019-02-18 09:39:59
https://api.github.com/repos/hyperledger/iroha/issues/2097,https://api.github.com/repos/hyperledger/iroha/issues/comments/464690990,https://github.com/hyperledger/iroha/issues/2097#issuecomment-464690990,frgomes,"@LiraLemur : Hi! Thanks a lot for your time revisiting this issue which was automagically closed.

Regarding your question:
I would not keep two issue management systems in the first place.
In any case, since this happened for whatever reason, having a bot which keeps a ticket in sync between Jira and Github is definitely a very good idea.

Once again, thanks a lot for your message and for your time.
",2019-02-18 11:12:07,2019-02-18 11:12:07
https://api.github.com/repos/hyperledger/iroha/issues/2094,https://api.github.com/repos/hyperledger/iroha/issues/comments/463175340,https://github.com/hyperledger/iroha/pull/2094#issuecomment-463175340,igor-egorov,"Tests are failing and have to be fixed.

Nevertheless, **you are able** to compile `irohad` from this branch with additional configuration parameters.",2019-02-13 12:06:36,2019-02-13 12:06:36
https://api.github.com/repos/hyperledger/iroha/issues/2094,https://api.github.com/repos/hyperledger/iroha/issues/comments/463184801,https://github.com/hyperledger/iroha/pull/2094#issuecomment-463184801,neewy,"Just add a fallback solution for old configs. It can be done later in a feature trunk.
",2019-02-13 12:40:36,2019-02-14 06:20:58
https://api.github.com/repos/hyperledger/iroha/issues/2094,https://api.github.com/repos/hyperledger/iroha/issues/comments/464642945,https://github.com/hyperledger/iroha/pull/2094#issuecomment-464642945,neewy,"@lebdron @igor-egorov 
Before merging this pull request we need to:
- [x] fix failing system test
- [x] make values consistent across the config file. I suggest an explicit usage of units (s, ms, etc.)
- [x] add standard fallback values for the parameters that are introduced. In the future, we need to have standard values for all parameters

What do you think? ",2019-02-18 08:55:42,2019-02-26 19:09:44
https://api.github.com/repos/hyperledger/iroha/issues/2094,https://api.github.com/repos/hyperledger/iroha/issues/comments/466316375,https://github.com/hyperledger/iroha/pull/2094#issuecomment-466316375,igor-egorov,"Having some set of default values is good.
It is good to have them printed when irohad is started.",2019-02-22 08:31:32,2019-02-22 08:31:48
https://api.github.com/repos/hyperledger/iroha/issues/2094,https://api.github.com/repos/hyperledger/iroha/issues/comments/467339308,https://github.com/hyperledger/iroha/pull/2094#issuecomment-467339308,neewy,@lebdron please commit your changes for Ansible scripts here :),2019-02-26 08:11:56,2019-02-26 08:11:56
https://api.github.com/repos/hyperledger/iroha/issues/2094,https://api.github.com/repos/hyperledger/iroha/issues/comments/468233691,https://github.com/hyperledger/iroha/pull/2094#issuecomment-468233691,igor-egorov,"The CI has been experiencing troubles with the Mac environment.
Linux CI has been passed.
All the tests passed on local Mac.

<details>
  <summary>Tests Run Log</summary>

```
➜  build git:(feature/og-config-params) ctest --output-on-failure
Test project /Users/igor/cpp/iroha-og-params/build
        Start   1: module_ametsuchi_test
  1/150 Test   #1: module_ametsuchi_test ..............................   Passed    2.76 sec
        Start   2: module_wsv_query_command_test
  2/150 Test   #2: module_wsv_query_command_test ......................   Passed    1.95 sec
        Start   3: module_flat_file_test
  3/150 Test   #3: module_flat_file_test ..............................   Passed    0.04 sec
        Start   4: module_block_query_test
  4/150 Test   #4: module_block_query_test ............................   Passed    1.20 sec
        Start   5: module_storage_init_test
  5/150 Test   #5: module_storage_init_test ...........................   Passed    1.04 sec
        Start   6: module_postgres_options_test
  6/150 Test   #6: module_postgres_options_test .......................   Passed    0.01 sec
        Start   7: module_postgres_executor_test
  7/150 Test   #7: module_postgres_executor_test ......................   Passed   20.50 sec
        Start   8: module_postgres_query_executor_test
  8/150 Test   #8: module_postgres_query_executor_test ................   Passed   20.40 sec
        Start   9: module_tx_presence_cache_test
  9/150 Test   #9: module_tx_presence_cache_test ......................   Passed    0.02 sec
        Start  10: module_blob_converter_test
 10/150 Test  #10: module_blob_converter_test .........................   Passed    0.01 sec
        Start  11: module_raw_block_loader_test
 11/150 Test  #11: module_raw_block_loader_test .......................   Passed    0.01 sec
        Start  12: module_cluster_order_test
 12/150 Test  #12: module_cluster_order_test ..........................   Passed    0.01 sec
        Start  13: module_yac_cold_case_test
 13/150 Test  #13: module_yac_cold_case_test ..........................   Passed    0.02 sec
        Start  14: module_yac_sunny_day_test
 14/150 Test  #14: module_yac_sunny_day_test ..........................   Passed    0.02 sec
        Start  15: module_yac_rainy_day_test
 15/150 Test  #15: module_yac_rainy_day_test ..........................   Passed    0.01 sec
        Start  16: module_yac_unknown_peer_test
 16/150 Test  #16: module_yac_unknown_peer_test .......................   Passed    0.01 sec
        Start  17: module_yac_block_storage_test
 17/150 Test  #17: module_yac_block_storage_test ......................   Passed    0.01 sec
        Start  18: module_yac_proposal_storage_test
 18/150 Test  #18: module_yac_proposal_storage_test ...................   Passed    0.01 sec
        Start  19: module_yac_timer_test
 19/150 Test  #19: module_yac_timer_test ..............................   Passed    0.01 sec
        Start  20: module_yac_network_test
 20/150 Test  #20: module_yac_network_test ............................   Passed    0.02 sec
        Start  21: module_yac_peer_orderer_test
 21/150 Test  #21: module_yac_peer_orderer_test .......................   Passed    0.02 sec
        Start  22: module_yac_gate_test
 22/150 Test  #22: module_yac_gate_test ...............................   Passed    0.01 sec
        Start  23: module_yac_hash_provider_test
 23/150 Test  #23: module_yac_hash_provider_test ......................   Passed    0.01 sec
        Start  24: module_yac_common_test
 24/150 Test  #24: module_yac_common_test .............................   Passed    0.01 sec
        Start  25: module_yac_crypto_provider_test
 25/150 Test  #25: module_yac_crypto_provider_test ....................   Passed    0.01 sec
        Start  26: module_supermajority_checker_test
 26/150 Test  #26: module_supermajority_checker_test ..................   Passed    0.01 sec
        Start  27: module_logger_test
 27/150 Test  #27: module_logger_test .................................   Passed    0.01 sec
        Start  28: module_server_runner_test
 28/150 Test  #28: module_server_runner_test ..........................   Passed    0.02 sec
        Start  29: module_model_crypto_provider_test
 29/150 Test  #29: module_model_crypto_provider_test ..................   Passed    0.01 sec
        Start  30: module_command_converter_test
 30/150 Test  #30: module_command_converter_test ......................   Passed    0.03 sec
        Start  31: module_transaction_converter_test
 31/150 Test  #31: module_transaction_converter_test ..................   Passed    0.01 sec
        Start  32: module_block_converter_test
 32/150 Test  #32: module_block_converter_test ........................   Passed    0.01 sec
        Start  33: module_query_responses_test
 33/150 Test  #33: module_query_responses_test ........................   Passed    0.01 sec
        Start  34: module_model_operators_test
 34/150 Test  #34: module_model_operators_test ........................   Passed    0.01 sec
        Start  35: module_json_command_converter_test
 35/150 Test  #35: module_json_command_converter_test .................   Passed    0.01 sec
        Start  36: module_json_transaction_converter_test
 36/150 Test  #36: module_json_transaction_converter_test .............   Passed    0.01 sec
        Start  37: module_json_block_converter_test
 37/150 Test  #37: module_json_block_converter_test ...................   Passed    0.01 sec
        Start  38: module_json_query_factory_test
 38/150 Test  #38: module_json_query_factory_test .....................   Passed    0.01 sec
        Start  39: module_pb_query_factory_test
 39/150 Test  #39: module_pb_query_factory_test .......................   Passed    0.01 sec
        Start  40: module_state_test
 40/150 Test  #40: module_state_test ..................................   Passed    0.03 sec
        Start  41: module_storage_test
 41/150 Test  #41: module_storage_test ................................   Passed    0.02 sec
        Start  42: module_completer_test
 42/150 Test  #42: module_completer_test ..............................   Passed    0.01 sec
        Start  43: module_transport_test
 43/150 Test  #43: module_transport_test ..............................   Passed    0.05 sec
        Start  44: module_mst_processor_test
 44/150 Test  #44: module_mst_processor_test ..........................   Passed    0.03 sec
        Start  45: module_gossip_propagation_strategy_test
 45/150 Test  #45: module_gossip_propagation_strategy_test ............   Passed    0.07 sec
        Start  46: module_mst_net_input_test
 46/150 Test  #46: module_mst_net_input_test ..........................   Passed    1.87 sec
        Start  47: module_block_loader_test
 47/150 Test  #47: module_block_loader_test ...........................   Passed    0.08 sec
        Start  48: module_on_demand_os_test
 48/150 Test  #48: module_on_demand_os_test ...........................   Passed    0.11 sec
        Start  49: module_on_demand_os_client_grpc_test
 49/150 Test  #49: module_on_demand_os_client_grpc_test ...............   Passed    0.01 sec
        Start  50: module_on_demand_os_server_grpc_test
 50/150 Test  #50: module_on_demand_os_server_grpc_test ...............   Passed    0.02 sec
        Start  51: module_on_demand_connection_manager_test
 51/150 Test  #51: module_on_demand_connection_manager_test ...........   Passed    0.01 sec
        Start  52: module_on_demand_ordering_gate_test
 52/150 Test  #52: module_on_demand_ordering_gate_test ................   Passed    0.01 sec
        Start  53: module_on_demand_cache_test
 53/150 Test  #53: module_on_demand_cache_test ........................   Passed    0.01 sec
        Start  54: module_simulator_test
 54/150 Test  #54: module_simulator_test ..............................   Passed    0.04 sec
        Start  55: module_synchronizer_test
 55/150 Test  #55: module_synchronizer_test ...........................   Passed    0.05 sec
        Start  56: module_torii_transport_command_test
 56/150 Test  #56: module_torii_transport_command_test ................   Passed    0.04 sec
        Start  57: module_torii_queries_test
 57/150 Test  #57: module_torii_queries_test ..........................   Passed    0.07 sec
        Start  58: module_query_service_test
 58/150 Test  #58: module_query_service_test ..........................   Passed    0.02 sec
        Start  59: module_torii_service_query_test
 59/150 Test  #59: module_torii_service_query_test ....................   Passed    0.03 sec
        Start  60: module_command_sync_client_test
 60/150 Test  #60: module_command_sync_client_test ....................   Passed    0.01 sec
        Start  61: module_transaction_processor_test
 61/150 Test  #61: module_transaction_processor_test ..................   Passed    0.08 sec
        Start  62: module_query_processor_test
 62/150 Test  #62: module_query_processor_test ........................   Passed    0.02 sec
        Start  63: module_chain_validation_test
 63/150 Test  #63: module_chain_validation_test .......................   Passed    0.01 sec
        Start  64: module_stateful_validator_test
 64/150 Test  #64: module_stateful_validator_test .....................   Passed    0.04 sec
        Start  65: module_pending_txs_storage_test
 65/150 Test  #65: module_pending_txs_storage_test ....................   Passed    0.02 sec
        Start  66: module_cache_test
 66/150 Test  #66: module_cache_test ..................................   Passed    0.09 sec
        Start  67: module_single_pointer_cache_test
 67/150 Test  #67: module_single_pointer_cache_test ...................   Passed    1.03 sec
        Start  68: module_transaction_cache_test
 68/150 Test  #68: module_transaction_cache_test ......................   Passed    0.01 sec
        Start  69: module_hash_test
 69/150 Test  #69: module_hash_test ...................................   Passed    0.01 sec
        Start  70: module_signature_test
 70/150 Test  #70: module_signature_test ..............................   Passed    0.01 sec
        Start  71: module_keys_manager_test
 71/150 Test  #71: module_keys_manager_test ...........................   Passed    0.03 sec
        Start  72: module_time_test
 72/150 Test  #72: module_time_test ...................................   Passed    0.01 sec
        Start  73: module_string_converter_test
 73/150 Test  #73: module_string_converter_test .......................   Passed    0.01 sec
        Start  74: module_result_test
 74/150 Test  #74: module_result_test .................................   Passed    0.01 sec
        Start  75: module_combine_latest_until_first_completed_test
 75/150 Test  #75: module_combine_latest_until_first_completed_test ...   Passed    0.68 sec
        Start  76: module_rxcpp_subject_usage
 76/150 Test  #76: module_rxcpp_subject_usage .........................   Passed    0.01 sec
        Start  77: module_tbb_test
 77/150 Test  #77: module_tbb_test ....................................   Passed    0.01 sec
        Start  78: framework_port_guard_test
 78/150 Test  #78: framework_port_guard_test ..........................   Passed    0.02 sec
        Start  79: module_reference_holder_test
 79/150 Test  #79: module_reference_holder_test .......................   Passed    0.01 sec
        Start  80: module_interface_test
 80/150 Test  #80: module_interface_test ..............................   Passed    0.02 sec
        Start  81: module_shared_proto_commands_test
 81/150 Test  #81: module_shared_proto_commands_test ..................   Passed    0.01 sec
        Start  82: module_shared_proto_tx_response_test
 82/150 Test  #82: module_shared_proto_tx_response_test ...............   Passed    0.47 sec
        Start  83: module_shared_proto_transaction_test
 83/150 Test  #83: module_shared_proto_transaction_test ...............   Passed    0.01 sec
        Start  84: module_shared_proto_queries_test
 84/150 Test  #84: module_shared_proto_queries_test ...................   Passed    0.01 sec
        Start  85: module_shared_proto_query_responses_test
 85/150 Test  #85: module_shared_proto_query_responses_test ...........   Passed    0.01 sec
        Start  86: module_shared_proto_util_test
 86/150 Test  #86: module_shared_proto_util_test ......................   Passed    0.01 sec
        Start  87: module_permissions_test
 87/150 Test  #87: module_permissions_test ............................   Passed    0.01 sec
        Start  88: module_proto_batch_test
 88/150 Test  #88: module_proto_batch_test ............................   Passed    0.03 sec
        Start  89: module_proto_transaction_sequence_test
 89/150 Test  #89: module_proto_transaction_sequence_test .............   Passed    0.03 sec
        Start  90: module_proto_common_objects_factory_test
 90/150 Test  #90: module_proto_common_objects_factory_test ...........   Passed    0.01 sec
        Start  91: module_proto_proposal_factory_test
 91/150 Test  #91: module_proto_proposal_factory_test .................   Passed    0.01 sec
        Start  92: module_proto_block_factory_test
 92/150 Test  #92: module_proto_block_factory_test ....................   Passed    0.01 sec
        Start  93: module_proto_query_response_factory_test
 93/150 Test  #93: module_proto_query_response_factory_test ...........   Passed    0.02 sec
        Start  94: module_model_query_builder_test
 94/150 Test  #94: module_model_query_builder_test ....................   Passed    0.01 sec
        Start  95: module_model_crypto_test
 95/150 Test  #95: module_model_crypto_test ...........................   Passed    0.01 sec
        Start  96: module_json_proto_converter_test
 96/150 Test  #96: module_json_proto_converter_test ...................   Passed    0.01 sec
        Start  97: module_transport_builder_test
 97/150 Test  #97: module_transport_builder_test ......................   Passed    0.09 sec
        Start  98: module_proto_transaction_responses_builder_test
 98/150 Test  #98: module_proto_transaction_responses_builder_test ....   Passed    0.01 sec
        Start  99: module_proto_transaction_responses_factory_test
 99/150 Test  #99: module_proto_transaction_responses_factory_test ....   Passed    0.01 sec
        Start 100: module_block_builder_test
100/150 Test #100: module_block_builder_test ..........................   Passed    0.01 sec
        Start 101: module_transaction_response_builder_test
101/150 Test #101: module_transaction_response_builder_test ...........   Passed    0.01 sec
        Start 102: module_transaction_validator_test
102/150 Test #102: module_transaction_validator_test ..................   Passed    0.02 sec
        Start 103: module_query_validator_test
103/150 Test #103: module_query_validator_test ........................   Passed    0.01 sec
        Start 104: module_proto_query_validator_test
104/150 Test #104: module_proto_query_validator_test ..................   Passed    0.01 sec
        Start 105: module_field_validator_test
105/150 Test #105: module_field_validator_test ........................   Passed    0.07 sec
        Start 106: module_container_validator_test
106/150 Test #106: module_container_validator_test ....................   Passed    0.02 sec
        Start 107: module_block_validator_test
107/150 Test #107: module_block_validator_test ........................   Passed    0.02 sec
        Start 108: module_proto_transaction_validator_test
108/150 Test #108: module_proto_transaction_validator_test ............   Passed    0.01 sec
        Start 109: module_proto_block_validator_test
109/150 Test #109: module_proto_block_validator_test ..................   Passed    0.01 sec
        Start 110: module_proposal_validator_test
110/150 Test #110: module_proposal_validator_test .....................   Passed    0.02 sec
        Start 111: module_blob_test
111/150 Test #111: module_blob_test ...................................   Passed    0.01 sec
        Start 112: module_crypto_usage_test
112/150 Test #112: module_crypto_usage_test ...........................   Passed    0.02 sec
        Start 113: module_security_signatures_test
113/150 Test #113: module_security_signatures_test ....................   Passed    0.01 sec
        Start 114: framework_test_subscriber_testing
114/150 Test #114: framework_test_subscriber_testing ..................   Passed    0.01 sec
        Start 115: integration_add_asset_qty_test
115/150 Test #115: integration_add_asset_qty_test .....................   Passed    7.05 sec
        Start 116: integration_create_account_test
116/150 Test #116: integration_create_account_test ....................   Passed    9.87 sec
        Start 117: integration_create_domain_test
117/150 Test #117: integration_create_domain_test .....................   Passed    9.58 sec
        Start 118: integration_create_role_test
118/150 Test #118: integration_create_role_test .......................   Passed    9.53 sec
        Start 119: integration_get_transactions_test
119/150 Test #119: integration_get_transactions_test ..................   Passed   10.07 sec
        Start 120: integration_grant_permission_test
120/150 Test #120: integration_grant_permission_test ..................   Passed   16.42 sec
        Start 121: integration_revoke_permission_test
121/150 Test #121: integration_revoke_permission_test .................   Passed   11.44 sec
        Start 122: integration_invalid_fields_test
122/150 Test #122: integration_invalid_fields_test ....................   Passed    1.98 sec
        Start 123: integration_query_test
123/150 Test #123: integration_query_test .............................   Passed    1.19 sec
        Start 124: integration_subtract_asset_qty_test
124/150 Test #124: integration_subtract_asset_qty_test ................   Passed    6.82 sec
        Start 125: integration_transfer_asset_test
125/150 Test #125: integration_transfer_asset_test ....................   Passed   19.15 sec
        Start 126: integration_tx_acceptance_test
126/150 Test #126: integration_tx_acceptance_test .....................   Passed   13.34 sec
        Start 127: integration_tx_heavy_data
127/150 Test #127: integration_tx_heavy_data ..........................   Passed    0.05 sec
        Start 128: integration_get_account_assets_test
128/150 Test #128: integration_get_account_assets_test ................   Passed    1.43 sec
        Start 129: integration_set_account_detail_test
129/150 Test #129: integration_set_account_detail_test ................   Passed   10.47 sec
        Start 130: integration_get_roles_test
130/150 Test #130: integration_get_roles_test .........................   Passed    2.32 sec
        Start 131: integration_queries_acceptance_test
131/150 Test #131: integration_queries_acceptance_test ................   Passed   25.44 sec
        Start 132: integration_create_asset_test
132/150 Test #132: integration_create_asset_test ......................   Passed   13.41 sec
        Start 133: integration_get_account_asset_txs_test
133/150 Test #133: integration_get_account_asset_txs_test .............   Passed    2.09 sec
        Start 134: integration_query_permissions_common_test
134/150 Test #134: integration_query_permissions_common_test ..........   Passed  165.41 sec
        Start 135: integration_get_account_test
135/150 Test #135: integration_get_account_test .......................   Passed   29.25 sec
        Start 136: integration_add_signatory_test
136/150 Test #136: integration_add_signatory_test .....................   Passed   16.45 sec
        Start 137: integration_remove_signatory_test
137/150 Test #137: integration_remove_signatory_test ..................   Passed   22.40 sec
        Start 138: integration_get_asset_info_test
138/150 Test #138: integration_get_asset_info_test ....................   Passed    7.84 sec
        Start 139: integration_get_role_permissions_test
139/150 Test #139: integration_get_role_permissions_test ..............   Passed    4.01 sec
        Start 140: integration_replay_test
140/150 Test #140: integration_replay_test ............................   Passed   21.75 sec
        Start 141: integration_basic_mst_state_propagation_test
141/150 Test #141: integration_basic_mst_state_propagation_test .......   Passed    7.51 sec
        Start 142: integration_set_account_quorum_test
142/150 Test #142: integration_set_account_quorum_test ................   Passed   13.17 sec
        Start 143: integration_consensus_sunny_day
143/150 Test #143: integration_consensus_sunny_day ....................   Passed    0.04 sec
        Start 144: integration_pipeline_test
144/150 Test #144: integration_pipeline_test ..........................   Passed    5.56 sec
        Start 145: integration_batch_pipeline_test
145/150 Test #145: integration_batch_pipeline_test ....................   Passed   10.29 sec
        Start 146: integration_multisig_tx_pipeline_test
146/150 Test #146: integration_multisig_tx_pipeline_test ..............   Passed   12.05 sec
        Start 147: integration_chain_validator_storage_test
147/150 Test #147: integration_chain_validator_storage_test ...........   Passed    2.47 sec
        Start 148: regression_regression_test
148/150 Test #148: regression_regression_test .........................   Passed    9.63 sec
        Start 149: regression_query_regression_test
149/150 Test #149: regression_query_regression_test ...................   Passed    1.72 sec
        Start 150: system_irohad_test
150/150 Test #150: system_irohad_test .................................   Passed   30.76 sec

100% tests passed, 0 tests failed out of 150

Total Test time (real) = 586.51 sec
```
</details>",2019-02-28 11:10:11,2019-02-28 11:10:11
https://api.github.com/repos/hyperledger/iroha/issues/2093,https://api.github.com/repos/hyperledger/iroha/issues/comments/463589989,https://github.com/hyperledger/iroha/pull/2093#issuecomment-463589989,neewy,"@BulatSaif do we need to trigger CI for docs? I think that in this case we can put some tags in commits, in order not to trigger CI…",2019-02-14 11:15:54,2019-02-14 11:15:54
https://api.github.com/repos/hyperledger/iroha/issues/2093,https://api.github.com/repos/hyperledger/iroha/issues/comments/463628753,https://github.com/hyperledger/iroha/pull/2093#issuecomment-463628753,BulatSaif,"@neewy , which docs are you mean?
1. https://iroha.readthedocs.io/en/master/  
or 
2. https://docs.iroha.tech/

1- is separate service, do not triggered from CI
2- our service, can be trigger by request in new CI, by default it is trigger only for master and develop 

",2019-02-14 13:35:50,2019-02-14 13:35:50
https://api.github.com/repos/hyperledger/iroha/issues/2093,https://api.github.com/repos/hyperledger/iroha/issues/comments/463661995,https://github.com/hyperledger/iroha/pull/2093#issuecomment-463661995,LiraLemur,"> 2. https://docs.iroha.tech/

I was not aware we even had that O_o 
@BulatSaif  This PR is about the first one. It builds the docs from here: https://github.com/hyperledger/iroha/tree/master/docs thus triggering the CI 
",2019-02-14 15:09:39,2019-02-14 15:09:39
https://api.github.com/repos/hyperledger/iroha/issues/2093,https://api.github.com/repos/hyperledger/iroha/issues/comments/463941968,https://github.com/hyperledger/iroha/pull/2093#issuecomment-463941968,BulatSaif,"Now I understand. Yes, we can skip CI if only iroha/docs/ or  *.md files are changed.
@neewy, please, can you create the task for that
",2019-02-15 07:52:46,2019-02-15 07:52:46
https://api.github.com/repos/hyperledger/iroha/issues/2093,https://api.github.com/repos/hyperledger/iroha/issues/comments/464701870,https://github.com/hyperledger/iroha/pull/2093#issuecomment-464701870,neewy,"@BulatSaif yes <3
",2019-02-18 11:46:10,2019-02-18 11:46:10
https://api.github.com/repos/hyperledger/iroha/issues/2092,https://api.github.com/repos/hyperledger/iroha/issues/comments/463509101,https://github.com/hyperledger/iroha/pull/2092#issuecomment-463509101,BulatSaif,"Currently  build fails due to error :
```
CMake Error at /usr/local/Cellar/cmake/3.11.4/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):

  Could NOT find PythonInterp: Found unsuitable version ""1.4"", but required
  is at least ""3.5"" (found /Users/jenkins/.pyenv/shims/python3.5)
```
But looks like it work fine on `mac-mcst-1`,
@bakhtin, can you please add pysha3 to rest of mac
",2019-02-14 06:35:08,2019-02-14 06:35:08
https://api.github.com/repos/hyperledger/iroha/issues/2092,https://api.github.com/repos/hyperledger/iroha/issues/comments/463630912,https://github.com/hyperledger/iroha/pull/2092#issuecomment-463630912,BulatSaif,"@bakhtin `mac-mcst-1 `and `mac-mcst-2` works fine, but problem with `mac-mcst-3`",2019-02-14 13:42:35,2019-02-14 13:42:35
https://api.github.com/repos/hyperledger/iroha/issues/2092,https://api.github.com/repos/hyperledger/iroha/issues/comments/464075424,https://github.com/hyperledger/iroha/pull/2092#issuecomment-464075424,BulatSaif,mac-mcst-3 now works ,2019-02-15 14:47:15,2019-02-15 14:47:15
https://api.github.com/repos/hyperledger/iroha/issues/2091,https://api.github.com/repos/hyperledger/iroha/issues/comments/463171000,https://github.com/hyperledger/iroha/pull/2091#issuecomment-463171000,MBoldyrev,"> Cannot find K const definition for the BFT case :(

It's here:
https://github.com/hyperledger/iroha/blob/90a7eef46c5da4f2fae2baea989dd4e85f90815e/irohad/consensus/yac/impl/supermajority_checker_bft.hpp#L16",2019-02-13 11:51:09,2019-02-13 11:51:09
https://api.github.com/repos/hyperledger/iroha/issues/2087,https://api.github.com/repos/hyperledger/iroha/issues/comments/463081115,https://github.com/hyperledger/iroha/pull/2087#issuecomment-463081115,neewy,"Encountered the following problem:
```
ERROR: yaml.constructor.ConstructorError: while constructing a mapping
  in ""./docker-compose.yml"", line 18, column 7
expected a mapping or list of mappings for merging, but found scalar
  in ""./docker-compose.yml"", line 6, column 16
```",2019-02-13 06:51:41,2019-02-13 06:51:41
https://api.github.com/repos/hyperledger/iroha/issues/2087,https://api.github.com/repos/hyperledger/iroha/issues/comments/463596977,https://github.com/hyperledger/iroha/pull/2087#issuecomment-463596977,neewy,The problem still persists on macOS and Ubuntu 18.10 x64,2019-02-14 11:41:28,2019-02-14 11:41:28
https://api.github.com/repos/hyperledger/iroha/issues/2087,https://api.github.com/repos/hyperledger/iroha/issues/comments/463597838,https://github.com/hyperledger/iroha/pull/2087#issuecomment-463597838,neewy,"Ubuntu
docker-compose version 1.22.0, build unknown
Docker version 18.09.2, build 6247962",2019-02-14 11:44:43,2019-02-14 11:44:43
https://api.github.com/repos/hyperledger/iroha/issues/2087,https://api.github.com/repos/hyperledger/iroha/issues/comments/463597933,https://github.com/hyperledger/iroha/pull/2087#issuecomment-463597933,neewy,"macOS
Docker version 18.09.1, build 4c52b90
docker-compose version 1.23.2, build 1110ad01",2019-02-14 11:45:10,2019-02-14 11:45:10
https://api.github.com/repos/hyperledger/iroha/issues/2080,https://api.github.com/repos/hyperledger/iroha/issues/comments/461716225,https://github.com/hyperledger/iroha/pull/2080#issuecomment-461716225,Akvinikym,"But, what is still going to happen in release mode, if there is no place to store the batches? Won't some other Iroha modules crash because of it? Maybe there is sense in terminating the program in such case?",2019-02-08 07:36:57,2019-02-08 07:36:57
https://api.github.com/repos/hyperledger/iroha/issues/2080,https://api.github.com/repos/hyperledger/iroha/issues/comments/461723684,https://github.com/hyperledger/iroha/pull/2080#issuecomment-461723684,MBoldyrev,"> But, what is still going to happen in release mode, if there is no place to store the batches? Won't some other Iroha modules crash because of it? Maybe there is sense in terminating the program in such case?

As I see, the only effect is the proposal loss.",2019-02-08 08:13:26,2019-02-08 08:13:26
https://api.github.com/repos/hyperledger/iroha/issues/2074,https://api.github.com/repos/hyperledger/iroha/issues/comments/459905419,https://github.com/hyperledger/iroha/issues/2074#issuecomment-459905419,sorabot,"If you believe you’ve found a bug and have a Linux Foundation ID already, please open a JIRA ticket [here](https://jira.hyperledger.org/secure/CreateIssue!default.jspa) (Iroha project)🙏 If you do not have a LFID, you can get it [here](https://identity.linuxfoundation.org/hybridauth/window/GitHub?destination=user&destination_error=user) in a few moments.

If you have a quick question on how things work, let us know in a chat: https://chat.hyperledger.org/channel/iroha

You are always welcome to participate in discussions in JIRA comments section or Rocket.Chat or help others🖖",2019-02-01 23:39:08,2019-02-01 23:39:08
https://api.github.com/repos/hyperledger/iroha/issues/2073,https://api.github.com/repos/hyperledger/iroha/issues/comments/459942895,https://github.com/hyperledger/iroha/pull/2073#issuecomment-459942895,Warchant,You should add that script to CI,2019-02-02 07:16:59,2019-02-02 07:17:11
https://api.github.com/repos/hyperledger/iroha/issues/2069,https://api.github.com/repos/hyperledger/iroha/issues/comments/460146350,https://github.com/hyperledger/iroha/pull/2069#issuecomment-460146350,bakhtin,Why the build has failed (pr-head)?,2019-02-04 06:46:38,2019-02-19 07:59:31
https://api.github.com/repos/hyperledger/iroha/issues/2069,https://api.github.com/repos/hyperledger/iroha/issues/comments/462262570,https://github.com/hyperledger/iroha/pull/2069#issuecomment-462262570,BulatSaif,"@Stayer , can you add this feature to new CI also?
",2019-02-11 09:27:00,2019-02-19 07:59:43
https://api.github.com/repos/hyperledger/iroha/issues/2069,https://api.github.com/repos/hyperledger/iroha/issues/comments/462373306,https://github.com/hyperledger/iroha/pull/2069#issuecomment-462373306,Stayer,"> @Stayer , can you add this feature to new CI also?

Ok",2019-02-11 15:38:39,2019-02-19 07:59:51
https://api.github.com/repos/hyperledger/iroha/issues/2069,https://api.github.com/repos/hyperledger/iroha/issues/comments/462713455,https://github.com/hyperledger/iroha/pull/2069#issuecomment-462713455,BulatSaif,"General comment form Nikoly to last PR in new CI: 
>Per each module or file we might need to include license header as described here:
>https://wiki.hyperledger.org/community/copyright-and-license-policy
https://www.hyperledger.org/about/charter №13 
>you can reuse code from here
hyperledger/iroha#1944

>Also, per each file it is desired to see what does it do or store. Can we please add just a line or something so that others can quickly understand what a purpose some file serves?",2019-02-12 10:53:53,2019-02-19 08:06:39
https://api.github.com/repos/hyperledger/iroha/issues/2069,https://api.github.com/repos/hyperledger/iroha/issues/comments/462714047,https://github.com/hyperledger/iroha/pull/2069#issuecomment-462714047,BulatSaif,as I understand it will no work with clang?,2019-02-12 10:55:41,2019-02-12 10:55:41
https://api.github.com/repos/hyperledger/iroha/issues/2069,https://api.github.com/repos/hyperledger/iroha/issues/comments/465027879,https://github.com/hyperledger/iroha/pull/2069#issuecomment-465027879,Stayer,"> as I understand it will no work with clang?

yes, you are right",2019-02-19 08:05:56,2019-02-19 08:06:26
https://api.github.com/repos/hyperledger/iroha/issues/2065,https://api.github.com/repos/hyperledger/iroha/issues/comments/458888325,https://github.com/hyperledger/iroha/issues/2065#issuecomment-458888325,sorabot,"**Issues here are closed**

Sorry mate, you have to post this to our Jira
",2019-01-30 10:14:22,2019-01-30 10:14:22
https://api.github.com/repos/hyperledger/iroha/issues/2064,https://api.github.com/repos/hyperledger/iroha/issues/comments/458922639,https://github.com/hyperledger/iroha/pull/2064#issuecomment-458922639,lebdron,CI error was noted by @BulatSaif ,2019-01-30 12:13:40,2019-01-30 12:13:40
https://api.github.com/repos/hyperledger/iroha/issues/2062,https://api.github.com/repos/hyperledger/iroha/issues/comments/458501532,https://github.com/hyperledger/iroha/pull/2062#issuecomment-458501532,lebdron,Blocked by https://github.com/hyperledger/iroha/pull/2028,2019-01-29 11:11:40,2019-01-29 11:11:40
https://api.github.com/repos/hyperledger/iroha/issues/2061,https://api.github.com/repos/hyperledger/iroha/issues/comments/459644006,https://github.com/hyperledger/iroha/pull/2061#issuecomment-459644006,MBoldyrev,Closed due to new aliasing rules establishing.,2019-02-01 08:24:55,2019-02-01 08:24:55
https://api.github.com/repos/hyperledger/iroha/issues/2060,https://api.github.com/repos/hyperledger/iroha/issues/comments/458146127,https://github.com/hyperledger/iroha/pull/2060#issuecomment-458146127,neewy,"> Refactor **yah** network_impl to make it testable.

German language has slipped here 🇩🇪 ",2019-01-28 14:12:11,2019-01-28 14:12:21
https://api.github.com/repos/hyperledger/iroha/issues/2059,https://api.github.com/repos/hyperledger/iroha/issues/comments/457913974,https://github.com/hyperledger/iroha/issues/2059#issuecomment-457913974,l4l,"Most of the postgresql queries to the WSV are prepared statement. And afaik postgresql by default doesn't enable it support. You need to specify postgres parameter `max_prepared_transactions=100`, or if you're using docker: `docker run -d postgres:9.5 -c 'max_prepared_transactions=100'`.
You may check, that it was properly set by executing `SHOW max_prepared_transactions;` sql query.",2019-01-27 12:33:19,2019-01-27 12:33:19
https://api.github.com/repos/hyperledger/iroha/issues/2054,https://api.github.com/repos/hyperledger/iroha/issues/comments/457542957,https://github.com/hyperledger/iroha/issues/2054#issuecomment-457542957,LiraLemur,Can you please sent the JSON file please so we could check? ,2019-01-25 11:24:29,2019-01-25 11:24:29
https://api.github.com/repos/hyperledger/iroha/issues/2054,https://api.github.com/repos/hyperledger/iroha/issues/comments/457584128,https://github.com/hyperledger/iroha/issues/2054#issuecomment-457584128,aleksandrovych,"{
    ""creator_account_id"": ""first_manager_bot@tecsynt"",
    ""query_counter"": 3,
    ""created_ts"": 1548418640649,
    ""signature"": {
        ""pubkey"": ""313a07e6384776ed95447710d15e59148473ccfc052a681317a72a69f2a49910"",
        ""signature"": ""a6908d88dbb006f8eb04a2d91c7b92028cff0b36de9af4265be9ae67bf4a2239891a6fd8b0697e16fb313916311e4dbc9472ba2baf50b0496a114d139a0e380a""
    },
    ""query_type"": ""GetAccount"",
    ""account_id"": ""first_manager_bot@tecsynt""
}",2019-01-25 14:10:27,2019-01-25 14:10:27
https://api.github.com/repos/hyperledger/iroha/issues/2054,https://api.github.com/repos/hyperledger/iroha/issues/comments/457584782,https://github.com/hyperledger/iroha/issues/2054#issuecomment-457584782,aleksandrovych,"Also please explain, how to get transaction status, if I send it in this way(./iroha-cli --json_transaction tx.json), because I only get this info in file: 

[2019-01-25 12:58:00.782684053][th:612][info] CLI-MAIN Send transaction to 0.0.0.0:50051 
[2019-01-25 12:58:00.787602210][th:612][info] TransactionResponseHandler Transaction successfully sent

no transaction hash or another info to check transaction status. Also I dont see this transaction hash and status in tx_status_by_hash table after conect to postgres",2019-01-25 14:12:49,2019-01-25 15:21:43
https://api.github.com/repos/hyperledger/iroha/issues/2054,https://api.github.com/repos/hyperledger/iroha/issues/comments/460215965,https://github.com/hyperledger/iroha/issues/2054#issuecomment-460215965,LiraLemur,"Sorry it took so long. Seems like there is a problem with CLI in regards to JSON. This functionality was not updated unfortunately, since CLI is not used as a full production-ready component. 
That's not Iroha issue though - only CLI should be affected. ",2019-02-04 11:30:35,2019-02-04 11:30:35
https://api.github.com/repos/hyperledger/iroha/issues/2053,https://api.github.com/repos/hyperledger/iroha/issues/comments/457154249,https://github.com/hyperledger/iroha/pull/2053#issuecomment-457154249,igor-egorov,The test is missing btw,2019-01-24 10:51:27,2019-01-24 10:51:27
https://api.github.com/repos/hyperledger/iroha/issues/2053,https://api.github.com/repos/hyperledger/iroha/issues/comments/457156104,https://github.com/hyperledger/iroha/pull/2053#issuecomment-457156104,neewy,"@igor-egorov it is hard to reproduce — it takes from 2 to 10 minutes of variable load and I trust if Andrei approved the PR, as they were trying to verify this yesterday",2019-01-24 10:58:07,2019-01-24 10:58:07
https://api.github.com/repos/hyperledger/iroha/issues/2051,https://api.github.com/repos/hyperledger/iroha/issues/comments/458060651,https://github.com/hyperledger/iroha/pull/2051#issuecomment-458060651,igor-egorov,"Please fix build for review
",2019-01-28 09:45:40,2019-01-28 09:45:40
https://api.github.com/repos/hyperledger/iroha/issues/2050,https://api.github.com/repos/hyperledger/iroha/issues/comments/456910236,https://github.com/hyperledger/iroha/pull/2050#issuecomment-456910236,l4l,It seems to have compiling issues,2019-01-23 18:18:23,2019-01-23 18:18:23
https://api.github.com/repos/hyperledger/iroha/issues/2050,https://api.github.com/repos/hyperledger/iroha/issues/comments/456914404,https://github.com/hyperledger/iroha/pull/2050#issuecomment-456914404,MBoldyrev,"> It seems to have compiling issues

@l4l please see the description in the PR header on the compilation issues. It is an inconsistent part of a bigger change. If you want to compile it, please merge the other parts, or use the whole change commit that I mentioned in the header. ",2019-01-23 18:29:35,2019-01-23 18:29:35
https://api.github.com/repos/hyperledger/iroha/issues/2049,https://api.github.com/repos/hyperledger/iroha/issues/comments/458058754,https://github.com/hyperledger/iroha/pull/2049#issuecomment-458058754,igor-egorov,`pr-head` has to pass,2019-01-28 09:40:23,2019-01-28 09:40:23
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/459400192,https://github.com/hyperledger/iroha/issues/2048#issuecomment-459400192,YasirAzeem,"
Here are the status logs sent to one peer and tx status from that same peer. As it can be seen, its taking too much time.
[iroha_logs_rc2.txt](https://github.com/hyperledger/iroha/files/2818045/iroha_logs_rc2.txt)
",2019-01-31 16:04:19,2019-01-31 16:04:19
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/460224572,https://github.com/hyperledger/iroha/issues/2048#issuecomment-460224572,igor-egorov,"Hello @YasirAzeem, please check that you did not send a hundred of transactions with max_proposal_size set to ten. If so, try to increase max_proposal_size and check.

Please reply if the issue has been solved or it is still here.",2019-02-04 12:03:05,2019-02-04 12:03:05
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/460308326,https://github.com/hyperledger/iroha/issues/2048#issuecomment-460308326,YasirAzeem,"No I am just sending one transaction not 100s and my max proposal is set to
5 only

On Mon, Feb 4, 2019, 5:03 PM Igor Egorov <notifications@github.com wrote:

> Hello @YasirAzeem <https://github.com/YasirAzeem>, please check that you
> did not send a hundred of transactions with max_proposal_size set to ten.
> If so, try to increase max_proposal_size and check.
>
> Please reply if the issue has been solved or it is still here.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/iroha/issues/2048#issuecomment-460224572>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AXV2WNOblc0puADQ1CZlHEqbXJo9k9_Bks5vKCF9gaJpZM4aOj6k>
> .
>
",2019-02-04 16:14:25,2019-02-04 16:14:25
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/460401923,https://github.com/hyperledger/iroha/issues/2048#issuecomment-460401923,YasirAzeem,@igor-egorov Issue is still there even with the new merge into master/latest branch. Still slow processing. Same logs.,2019-02-04 20:32:26,2019-02-04 20:32:26
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/460533488,https://github.com/hyperledger/iroha/issues/2048#issuecomment-460533488,neewy,@YasirAzeem which client library do you use?,2019-02-05 06:59:02,2019-02-05 06:59:02
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/460534044,https://github.com/hyperledger/iroha/issues/2048#issuecomment-460534044,neewy,Now I see that you are using python SDK,2019-02-05 07:02:16,2019-02-05 07:02:16
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/460606101,https://github.com/hyperledger/iroha/issues/2048#issuecomment-460606101,YasirAzeem,Yes Python SDK present in example the one with `prepare.sh` ,2019-02-05 11:36:29,2019-02-05 11:36:29
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/460950890,https://github.com/hyperledger/iroha/issues/2048#issuecomment-460950890,neewy,"@YasirAzeem sorry, but we are abandoning the support of code-generated libs. You can find a new library here: https://github.com/hyperledger/iroha/pull/2028

Here is the video with a screencast on how to use this new library: https://www.youtube.com/watch?v=PN7WoLReDs4&frags=pl%2Cwn 
This new library will be available soon at https://github.com/hyperledger/iroha-python/tree/develop repo",2019-02-06 09:12:56,2019-02-06 09:12:56
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/461176201,https://github.com/hyperledger/iroha/issues/2048#issuecomment-461176201,YasirAzeem,"I don't think its the problem of the library as you can see from the logs file I sent, other nodes don't even have the transaction until a few seconds have elapsed. They show status as if there hasn't received it at all but after a few seconds all nodes accept it. Its all there is on `Irohad` logs as well. Those are also attached. ",2019-02-06 20:31:38,2019-02-06 20:31:38
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/461747709,https://github.com/hyperledger/iroha/issues/2048#issuecomment-461747709,YasirAzeem,@neewy Are you sure its only old Python SDK issue? It doesn't seem like that.,2019-02-08 09:49:19,2019-02-08 09:49:19
https://api.github.com/repos/hyperledger/iroha/issues/2048,https://api.github.com/repos/hyperledger/iroha/issues/comments/472475003,https://github.com/hyperledger/iroha/issues/2048#issuecomment-472475003,sudomann,@YasirAzeem   Are you still having this problem with rc4?,2019-03-13 15:34:19,2019-03-13 15:34:19
https://api.github.com/repos/hyperledger/iroha/issues/2045,https://api.github.com/repos/hyperledger/iroha/issues/comments/458056453,https://github.com/hyperledger/iroha/pull/2045#issuecomment-458056453,igor-egorov,Please note failing CI,2019-01-28 09:34:05,2019-01-28 09:34:05
https://api.github.com/repos/hyperledger/iroha/issues/2042,https://api.github.com/repos/hyperledger/iroha/issues/comments/456694184,https://github.com/hyperledger/iroha/pull/2042#issuecomment-456694184,neewy,"Also, per each module it is desired to see what does it do or store. Can we please add just a line or something so that others can quickly understand what a purpose some file serves?",2019-01-23 07:08:17,2019-01-23 07:08:17
https://api.github.com/repos/hyperledger/iroha/issues/2042,https://api.github.com/repos/hyperledger/iroha/issues/comments/456694284,https://github.com/hyperledger/iroha/pull/2042#issuecomment-456694284,neewy,"As I remember, @lebdron had some questions or suggestion to discuss modularity of our CI. I can approve this PR after a mutual discussion with him.",2019-01-23 07:08:49,2019-01-23 07:09:02
https://api.github.com/repos/hyperledger/iroha/issues/2042,https://api.github.com/repos/hyperledger/iroha/issues/comments/458007257,https://github.com/hyperledger/iroha/pull/2042#issuecomment-458007257,BulatSaif,"@neewy, @lebdron There are any update? ",2019-01-28 05:57:31,2019-01-28 05:57:31
https://api.github.com/repos/hyperledger/iroha/issues/2034,https://api.github.com/repos/hyperledger/iroha/issues/comments/455805542,https://github.com/hyperledger/iroha/pull/2034#issuecomment-455805542,l4l,"I think it's better remove all redundant tests here, rather than just marking. As an example - #1047, where all these markings was useless

Though it might be nice to leave TODOs ""as is"" for review and remove code pieces in separate commit",2019-01-19 18:51:12,2019-01-19 18:51:12
https://api.github.com/repos/hyperledger/iroha/issues/2034,https://api.github.com/repos/hyperledger/iroha/issues/comments/455841674,https://github.com/hyperledger/iroha/pull/2034#issuecomment-455841674,MBoldyrev,"> Though it might be nice to leave TODOs ""as is"" for review and remove code pieces in separate commit

That is exactly what we intend here - reviewing change proposals and creating separate tasks for them.
",2019-01-20 06:32:34,2019-01-20 06:32:34
https://api.github.com/repos/hyperledger/iroha/issues/2033,https://api.github.com/repos/hyperledger/iroha/issues/comments/455542872,https://github.com/hyperledger/iroha/pull/2033#issuecomment-455542872,neewy,We might want to release a hotfix for this bug. Is this change atomic? Can we rebase it onto master? @lebdron ,2019-01-18 13:17:58,2019-01-18 13:17:58
https://api.github.com/repos/hyperledger/iroha/issues/2033,https://api.github.com/repos/hyperledger/iroha/issues/comments/455599932,https://github.com/hyperledger/iroha/pull/2033#issuecomment-455599932,lebdron,"Yes, it should work fine with master branch.",2019-01-18 16:12:02,2019-01-18 16:12:02
https://api.github.com/repos/hyperledger/iroha/issues/2033,https://api.github.com/repos/hyperledger/iroha/issues/comments/456047097,https://github.com/hyperledger/iroha/pull/2033#issuecomment-456047097,Akvinikym,Please also pay attention you are merging into master,2019-01-21 11:47:18,2019-01-21 11:47:18
https://api.github.com/repos/hyperledger/iroha/issues/2032,https://api.github.com/repos/hyperledger/iroha/issues/comments/456780921,https://github.com/hyperledger/iroha/pull/2032#issuecomment-456780921,MBoldyrev,Need to fix some multithreading concurrency issues prior to merging this: #2045 #2049,2019-01-23 12:17:45,2019-01-23 12:18:09
https://api.github.com/repos/hyperledger/iroha/issues/2031,https://api.github.com/repos/hyperledger/iroha/issues/comments/455543773,https://github.com/hyperledger/iroha/pull/2031#issuecomment-455543773,neewy,"We need to discuss responsibilities first. There is no problem with this interface solely, but having individual buffers for each client means taking too much on shoulders of Iroha peer. We won't be able to provide an adequate level of fault tolerance in case of huge loads. Although, it might be enough just to warn users about their responsibilities in this case.",2019-01-18 13:21:01,2019-01-18 13:21:01
https://api.github.com/repos/hyperledger/iroha/issues/2028,https://api.github.com/repos/hyperledger/iroha/issues/comments/455996967,https://github.com/hyperledger/iroha/pull/2028#issuecomment-455996967,neewy,Can we close then https://github.com/hyperledger/iroha/pull/1861 ?,2019-01-21 09:03:34,2019-01-21 09:03:34
https://api.github.com/repos/hyperledger/iroha/issues/2027,https://api.github.com/repos/hyperledger/iroha/issues/comments/455090245,https://github.com/hyperledger/iroha/pull/2027#issuecomment-455090245,BulatSaif,"Now README file inside build page:
![screenshot from 2019-01-17 11-45-10](https://user-images.githubusercontent.com/24387396/51306087-8eacbd00-1a4d-11e9-8558-9a7dcbc54c3c.png)
``` bash

```
![screenshot from 2019-01-17 11-46-10](https://user-images.githubusercontent.com/24387396/51306094-91a7ad80-1a4d-11e9-9bcc-1cd1e9f37a2b.png)

",2019-01-17 08:48:34,2019-01-17 08:48:34
https://api.github.com/repos/hyperledger/iroha/issues/2027,https://api.github.com/repos/hyperledger/iroha/issues/comments/455491923,https://github.com/hyperledger/iroha/pull/2027#issuecomment-455491923,bakhtin,"Please, verify that this section actually works: https://github.com/hyperledger/iroha/blob/51853c898a4687d7aa9affaab88b9c586f34cd28/Jenkinsfile#L40
AFAIK, `UNSTABLE` result does not throw an exception (probably, `ABORTED` also not).",2019-01-18 10:00:49,2019-01-18 10:00:49
https://api.github.com/repos/hyperledger/iroha/issues/2027,https://api.github.com/repos/hyperledger/iroha/issues/comments/455501261,https://github.com/hyperledger/iroha/pull/2027#issuecomment-455501261,bakhtin,"`cpusAvailable` should be configurable (see current pipeline). Default is 8 for Linux and 4 for Mac
https://github.com/hyperledger/iroha/blob/51853c898a4687d7aa9affaab88b9c586f34cd28/Jenkinsfile#L226-L227",2019-01-18 10:33:02,2019-01-18 10:33:02
https://api.github.com/repos/hyperledger/iroha/issues/2026,https://api.github.com/repos/hyperledger/iroha/issues/comments/458926572,https://github.com/hyperledger/iroha/pull/2026#issuecomment-458926572,neewy,Why this PR is not merged? @muratovv ,2019-01-30 12:29:07,2019-01-30 12:29:07
https://api.github.com/repos/hyperledger/iroha/issues/2025,https://api.github.com/repos/hyperledger/iroha/issues/comments/454378232,https://github.com/hyperledger/iroha/pull/2025#issuecomment-454378232,neewy,"Thank you for your contribution!
If you delete this library — where can we find new one?

Please fix your pull request: it has issues with DCO. You can do it automatically using git commit -s.",2019-01-15 12:38:35,2019-01-15 12:38:35
https://api.github.com/repos/hyperledger/iroha/issues/2025,https://api.github.com/repos/hyperledger/iroha/issues/comments/454380149,https://github.com/hyperledger/iroha/pull/2025#issuecomment-454380149,Pobepto,"> If you delete this library — where can we find new?

@neewy, the new version of javascript library will be available soon. I will create new PR for including it to the iroha repository 🙂


",2019-01-15 12:45:56,2019-01-15 12:45:56
https://api.github.com/repos/hyperledger/iroha/issues/2025,https://api.github.com/repos/hyperledger/iroha/issues/comments/454764034,https://github.com/hyperledger/iroha/pull/2025#issuecomment-454764034,l4l,I'm quite afraid that docs separated from the code might eventually cause inconsistency,2019-01-16 12:36:44,2019-01-16 12:36:57
https://api.github.com/repos/hyperledger/iroha/issues/2025,https://api.github.com/repos/hyperledger/iroha/issues/comments/458926846,https://github.com/hyperledger/iroha/pull/2025#issuecomment-458926846,neewy,Ｇｏｏｄ　ｊｏｂｅｒｔ　Ｒｏｂｅｒｔ,2019-01-30 12:30:11,2019-01-30 12:30:11
https://api.github.com/repos/hyperledger/iroha/issues/2024,https://api.github.com/repos/hyperledger/iroha/issues/comments/454768517,https://github.com/hyperledger/iroha/pull/2024#issuecomment-454768517,l4l,"> ulimit -c unlimited settings doesn't restrict size of core dump. In theory, it might be too large

Looks dangerous, might be consider using something like logrotate (but for coredumps)?",2019-01-16 12:53:23,2019-01-16 12:53:23
https://api.github.com/repos/hyperledger/iroha/issues/2024,https://api.github.com/repos/hyperledger/iroha/issues/comments/455048833,https://github.com/hyperledger/iroha/pull/2024#issuecomment-455048833,Stayer,"> > ulimit -c unlimited settings doesn't restrict size of core dump. In theory, it might be too large
> 
> Looks dangerous, might be consider using something like logrotate (but for coredumps)?

Our build servers works like that:
1. Creates VM on AWS
2. Run docker inside for build & tests
3. Upload artifacts, binaries, coredumps, etc. to artifacts server
4. Remove this VM

Typically, AWS instances are using only for build one task, and very rarely for two or three jobs. At the end of working day everything is deleted.",2019-01-17 05:36:57,2019-01-17 05:42:02
https://api.github.com/repos/hyperledger/iroha/issues/2022,https://api.github.com/repos/hyperledger/iroha/issues/comments/456784227,https://github.com/hyperledger/iroha/pull/2022#issuecomment-456784227,neewy,@lebdron please resolve the conflicts and check if the tests can still build on Windows (attach the `ctest` output),2019-01-23 12:30:11,2019-01-23 12:30:11
https://api.github.com/repos/hyperledger/iroha/issues/2022,https://api.github.com/repos/hyperledger/iroha/issues/comments/457121593,https://github.com/hyperledger/iroha/pull/2022#issuecomment-457121593,lebdron,"```
The following tests FAILED:
          1 - module_ametsuchi_test (Failed)
          7 - module_postgres_executor_test (Failed)
          8 - module_postgres_query_executor_test (Failed)
         28 - module_server_runner_test (Failed)
         35 - module_json_command_converter_test (Failed)
         36 - module_json_transaction_converter_test (Failed)
         38 - module_json_query_factory_test (Failed)
         43 - module_mst_processor_test (Failed)
         46 - module_block_loader_test (Failed)
         57 - module_torii_transport_command_test (Failed)
        142 - integration_consensus_sunny_day (Failed)
```
However, I had another set of failing tests before merging develop.
```
The following tests FAILED:
          1 - module_ametsuchi_test (Failed)
          7 - module_postgres_executor_test (Failed)
          8 - module_postgres_query_executor_test (Failed)
         28 - module_server_runner_test (Failed)
         35 - module_json_command_converter_test (Failed)
         36 - module_json_transaction_converter_test (Failed)
         38 - module_json_query_factory_test (Failed)
         43 - module_mst_processor_test (Failed)
         46 - module_block_loader_test (Failed)
         57 - module_torii_transport_command_test (Failed)
        145 - integration_add_signatory_test (Failed)
        147 - integration_get_asset_info_test (Failed)
        152 - integration_consensus_sunny_day (Failed)
```
Therefore integration tests should be checked for nondeterministic behavior in another task.",2019-01-24 09:10:18,2019-01-24 09:10:18
https://api.github.com/repos/hyperledger/iroha/issues/2019,https://api.github.com/repos/hyperledger/iroha/issues/comments/453869214,https://github.com/hyperledger/iroha/issues/2019#issuecomment-453869214,building39,"I might add that this peer is running on a virtual machine, not in a docker container.",2019-01-13 21:55:34,2019-01-13 21:55:34
https://api.github.com/repos/hyperledger/iroha/issues/2019,https://api.github.com/repos/hyperledger/iroha/issues/comments/455171648,https://github.com/hyperledger/iroha/issues/2019#issuecomment-455171648,luckychess,I would suggest you to update Iroha to rc2 first. Beta 5 is a pretty old now.,2019-01-17 13:28:06,2019-01-17 13:28:06
https://api.github.com/repos/hyperledger/iroha/issues/2019,https://api.github.com/repos/hyperledger/iroha/issues/comments/455173603,https://github.com/hyperledger/iroha/issues/2019#issuecomment-455173603,LiraLemur,"We are moving issues to Jira at the moment. 
If Konstantin's solution does not work, please contact us in chat - we will find a way: 
https://chat.hyperledger.org/channel/iroha",2019-01-17 13:34:42,2019-01-17 13:34:42
https://api.github.com/repos/hyperledger/iroha/issues/2010,https://api.github.com/repos/hyperledger/iroha/issues/comments/453003320,https://github.com/hyperledger/iroha/pull/2010#issuecomment-453003320,Warchant,"This logger is synchronous, consider adding async logging for better performance.

When you have many log lines for every transaction, and you don't really care about logging outcome, as well as ordering of loglines, async logger is more preferable and performant.",2019-01-10 07:58:09,2019-01-10 08:10:56
https://api.github.com/repos/hyperledger/iroha/issues/2010,https://api.github.com/repos/hyperledger/iroha/issues/comments/455810222,https://github.com/hyperledger/iroha/pull/2010#issuecomment-455810222,l4l,Fix the build please,2019-01-19 19:54:23,2019-01-19 19:54:23
https://api.github.com/repos/hyperledger/iroha/issues/2010,https://api.github.com/repos/hyperledger/iroha/issues/comments/455839912,https://github.com/hyperledger/iroha/pull/2010#issuecomment-455839912,MBoldyrev,"> Fix the build please

I want to take the name of existing entity, `logger::Logger`, so unless I use it throughout the project or do some tricks with including and linking, or with renaming, it will not compile. And those tricks will have to be undone.
This change is for a trunk, so it will not break anything. And if you want to verify that it builds, you can build the `logger` lib, which does so.",2019-01-20 05:47:59,2019-01-20 05:47:59
https://api.github.com/repos/hyperledger/iroha/issues/2009,https://api.github.com/repos/hyperledger/iroha/issues/comments/453580370,https://github.com/hyperledger/iroha/pull/2009#issuecomment-453580370,l4l,"I would consider adding a note about active development branch (aka `dev`), master might be a bit stale after some time after release",2019-01-11 16:45:46,2019-01-11 16:45:46
https://api.github.com/repos/hyperledger/iroha/issues/2002,https://api.github.com/repos/hyperledger/iroha/issues/comments/451619711,https://github.com/hyperledger/iroha/issues/2002#issuecomment-451619711,building39,"The build instructions aren't working for me. Here's what I did:
```
~/git$ git clone -b develop https://github.com/hyperledger/iroha
Cloning into 'iroha'...
remote: Enumerating objects: 367, done.
remote: Counting objects: 100% (367/367), done.
remote: Compressing objects: 100% (304/304), done.
remote: Total 74990 (delta 145), reused 106 (delta 62), pack-reused 74623
Receiving objects: 100% (74990/74990), 51.04 MiB | 131.00 KiB/s, done.
Resolving deltas: 100% (56492/56492), done.
~/git$ cd iroha
~/git$ cmake --version
cmake version 3.13.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
~/git/iroha$ mkdir build; cd build; cmake ..; make -j$(nproc)
-- The C compiler identification is GNU 7.3.0
-- The CXX compiler identification is GNU 7.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- -DCMAKE_BUILD_TYPE=Debug
-- -DTESTING=ON
-- -DBENCHMARKING=OFF
-- -DFUZZING=OFF
-- -DCOVERAGE=OFF
-- -DPACKAGE_ZIP=OFF
-- -DPACKAGE_TGZ=OFF
-- -DPACKAGE_RPM=OFF
-- -DPACKAGE_DEB=OFF
-- -DENABLE_LIBS_PACKAGING=ON
-- -DSWIG_PYTHON=OFF
-- -DSWIG_JAVA=OFF
-- -DSUPPORT_PYTHON2=OFF
-- -DSWIG_CSHARP=OFF
-- -DSWIG_NODE=OFF
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found gtest: /usr/include  
-- Found spdlog: /usr/include  
-- Found protobuf: /usr/include  
-- Found grpc: /usr/local/lib/libgrpc.so  
-- Found rapidjson: /usr/include  
-- Found pq: /usr/include/postgresql  
-- Found soci: /usr/include/soci  
-- Found gflags: /usr/include  
-- Found rxcpp: /usr/local/include  
-- Found tbb: /usr/include  
-- Boost version: 1.65.1
-- Found the following Boost libraries:
--   filesystem
--   system
--   thread
--   chrono
--   date_time
--   atomic
-- Found ed25519: /usr/local/include  
-- Configuring done
-- Generating done
-- Build files have been written to: /home/mmartin/git/iroha/build
[  1%] Generating ../../schema/endpoint.pb.h, ../../schema/endpoint.pb.cc
endpoint.proto: No such file or directory
[  1%] Generating yac.grpc.pb.h, yac.grpc.pb.cc, yac_mock.grpc.pb.h
shared_model/schema/CMakeFiles/schema.dir/build.make:118: recipe for target 'schema/endpoint.pb.h' failed
make[2]: *** [schema/endpoint.pb.h] Error 1
CMakeFiles/Makefile2:3763: recipe for target 'shared_model/schema/CMakeFiles/schema.dir/all' failed
make[1]: *** [shared_model/schema/CMakeFiles/schema.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
[  1%] Generating yac.pb.h, yac.pb.cc
yac.proto: No such file or directory
schema/CMakeFiles/yac_grpc.dir/build.make:70: recipe for target 'schema/yac.grpc.pb.h' failed
make[2]: *** [schema/yac.grpc.pb.h] Error 1
make[2]: *** Waiting for unfinished jobs....
yac.proto: No such file or directory
schema/CMakeFiles/yac_grpc.dir/build.make:62: recipe for target 'schema/yac.pb.h' failed
make[2]: *** [schema/yac.pb.h] Error 1
CMakeFiles/Makefile2:98: recipe for target 'schema/CMakeFiles/yac_grpc.dir/all' failed
make[1]: *** [schema/CMakeFiles/yac_grpc.dir/all] Error 2
Makefile:140: recipe for target 'all' failed
make: *** [all] Error 2
~/git/iroha/build$
```",2019-01-05 02:15:50,2019-01-05 02:15:50
https://api.github.com/repos/hyperledger/iroha/issues/2002,https://api.github.com/repos/hyperledger/iroha/issues/comments/453583092,https://github.com/hyperledger/iroha/issues/2002#issuecomment-453583092,l4l,"Sorry, our docs are quite outdated. Current active development branch is `dev`, and for releases we use `master` (so it's better use master branch). Issue should be fixed in #2009 

I hope that will help, feel free to add something if issue still there",2019-01-11 16:53:37,2019-01-11 16:54:11
https://api.github.com/repos/hyperledger/iroha/issues/2001,https://api.github.com/repos/hyperledger/iroha/issues/comments/450414421,https://github.com/hyperledger/iroha/pull/2001#issuecomment-450414421,Warchant,"Please give me 1 day, so I can update iroha pure Java and execute tests. Do not merge.

UPD: reported 5 bugs in Discord#bugs",2018-12-28 19:29:50,2018-12-28 21:58:35
https://api.github.com/repos/hyperledger/iroha/issues/2000,https://api.github.com/repos/hyperledger/iroha/issues/comments/451244814,https://github.com/hyperledger/iroha/issues/2000#issuecomment-451244814,richhildyard,"Same issue here. Martin, did you find a solution?",2019-01-03 19:07:16,2019-01-03 19:07:16
https://api.github.com/repos/hyperledger/iroha/issues/2000,https://api.github.com/repos/hyperledger/iroha/issues/comments/451306817,https://github.com/hyperledger/iroha/issues/2000#issuecomment-451306817,laSinteZ,"@martin-lizner @richhildyard try using genesis block from [dev](https://github.com/hyperledger/iroha/tree/dev) branch, not develop.

I guess guys still didn't fix problems with develop/dev branch and we should update our docs :)",2019-01-03 23:07:57,2019-01-03 23:07:57
https://api.github.com/repos/hyperledger/iroha/issues/2000,https://api.github.com/repos/hyperledger/iroha/issues/comments/451401084,https://github.com/hyperledger/iroha/issues/2000#issuecomment-451401084,richhildyard,"Thank you.
I had a problem with the private keys not matching just using the dev genesis block, but if I changed the existing block to match the dev branch at the bottom of the file to:   ""prevBlockHash"": 00000000000000000000000000000000000000000000000000000000000000000""
then removed the existing containers and volume and rebuilt, everything came together.
",2019-01-04 09:58:21,2019-01-04 09:58:21
https://api.github.com/repos/hyperledger/iroha/issues/2000,https://api.github.com/repos/hyperledger/iroha/issues/comments/455160737,https://github.com/hyperledger/iroha/issues/2000#issuecomment-455160737,LiraLemur,"I changed develop to master in docs, so should not be an issue now. 
Happy to hear everything worked out fine!

If you still have any questions, please contact us here: https://chat.hyperledger.org/channel/iroha",2019-01-17 12:49:32,2019-01-17 12:49:32
https://api.github.com/repos/hyperledger/iroha/issues/1994,https://api.github.com/repos/hyperledger/iroha/issues/comments/472780617,https://github.com/hyperledger/iroha/pull/1994#issuecomment-472780617,neewy,Let's merge that!,2019-03-14 09:56:05,2019-03-14 09:56:05
https://api.github.com/repos/hyperledger/iroha/issues/1994,https://api.github.com/repos/hyperledger/iroha/issues/comments/472780965,https://github.com/hyperledger/iroha/pull/1994#issuecomment-472780965,lebdron,@neewy waiting for CI to pass,2019-03-14 09:57:05,2019-03-14 09:57:05
https://api.github.com/repos/hyperledger/iroha/issues/1992,https://api.github.com/repos/hyperledger/iroha/issues/comments/449850757,https://github.com/hyperledger/iroha/pull/1992#issuecomment-449850757,lebdron,"Looks like #1692 is indeed in dev, but this line has to be also changed
https://github.com/hyperledger/iroha/blob/72fd90cc7562c907a7cddbb6b1992714b293dbd7/cmake/dependencies.cmake#L5",2018-12-25 13:31:36,2018-12-25 13:31:36
https://api.github.com/repos/hyperledger/iroha/issues/1988,https://api.github.com/repos/hyperledger/iroha/issues/comments/449967468,https://github.com/hyperledger/iroha/pull/1988#issuecomment-449967468,igor-egorov,"```choco install cmake --installargs 'ADD_CMAKE_TO_PATH=""""User""""'```",2018-12-26 13:34:25,2018-12-26 13:34:25
https://api.github.com/repos/hyperledger/iroha/issues/1986,https://api.github.com/repos/hyperledger/iroha/issues/comments/450096260,https://github.com/hyperledger/iroha/pull/1986#issuecomment-450096260,neewy,"Tried to run it locally on ubuntu server 18.04.1, failed to run. I am checking what is happening at the moment with my environment. It would be nice to have requirements.txt file for python dependencies",2018-12-27 07:44:25,2018-12-27 07:44:25
https://api.github.com/repos/hyperledger/iroha/issues/1986,https://api.github.com/repos/hyperledger/iroha/issues/comments/450147733,https://github.com/hyperledger/iroha/pull/1986#issuecomment-450147733,l4l,dco :(,2018-12-27 13:09:26,2018-12-27 13:09:26
https://api.github.com/repos/hyperledger/iroha/issues/1986,https://api.github.com/repos/hyperledger/iroha/issues/comments/450300016,https://github.com/hyperledger/iroha/pull/1986#issuecomment-450300016,bakhtin,"Updated playbook to deploy on the remote host by default (previously, it was set up to deploy locally). Corrected README file to reflect these changes. @neewy you may want to follow role's README to run the role once more.",2018-12-28 06:34:26,2018-12-28 06:34:26
https://api.github.com/repos/hyperledger/iroha/issues/1986,https://api.github.com/repos/hyperledger/iroha/issues/comments/453056725,https://github.com/hyperledger/iroha/pull/1986#issuecomment-453056725,sudomann,"> There is also a Bash script (config_gen.sh) to generate Iroha keys and genesis.block that is executed from inside an Ansible task.

🥇 
Man, you did my work for me already. @bakhtin I appreciate your efforts!",2019-01-10 11:02:05,2019-01-10 11:02:43
https://api.github.com/repos/hyperledger/iroha/issues/1985,https://api.github.com/repos/hyperledger/iroha/issues/comments/449315731,https://github.com/hyperledger/iroha/issues/1985#issuecomment-449315731,Warchant,">If we want to reduce link time, it could be more beneficial to create a single target for all source files, and then add all executables to it. This however may be problematic since now we cannot separately configure concrete parts of the system.

if you do this, you will slow down average compilation time, because single change will lead to the full recompilation",2018-12-21 08:50:49,2018-12-21 08:50:49
https://api.github.com/repos/hyperledger/iroha/issues/1985,https://api.github.com/repos/hyperledger/iroha/issues/comments/449317287,https://github.com/hyperledger/iroha/issues/1985#issuecomment-449317287,nickaleks,"> if you do this, you will slow down average compilation time, because single change will lead to the full recompilation

Not really, since only the changed file will be recompiled.",2018-12-21 08:55:01,2018-12-21 08:55:09
https://api.github.com/repos/hyperledger/iroha/issues/1985,https://api.github.com/repos/hyperledger/iroha/issues/comments/450028399,https://github.com/hyperledger/iroha/issues/1985#issuecomment-450028399,l4l,"## Single Library

>  -  CMake file gets big

Any proof on that? I think it just simplifies CMakeLists, since there's no additional targets

>  -  Every executable must be linked with the whole library

Not a big problem actually. Only required symbols is being found, thus shouldn't consume much time (though, not sure)

>  -  Every time change occurs, whole library must be relinked

And every executable as well, since it depends on the library

>  -  Configuration cannot be different for different modules

What kind of configuration you're talking about?

It also worth mentioning, that it also makes development a bit harder, since you need to recompile a lot of stuff, even for a small changes. That make a significant difference, if you're trying different code cases (e.g for bug reproducing).


Overall, I would say it's not a good idea to concern about linking time without numbers. Compilation (especially template instantiation) may take much more time, so linking optimization becomes meaningless",2018-12-26 21:24:43,2018-12-26 21:24:43
https://api.github.com/repos/hyperledger/iroha/issues/1985,https://api.github.com/repos/hyperledger/iroha/issues/comments/450102369,https://github.com/hyperledger/iroha/issues/1985#issuecomment-450102369,nickaleks,"> Any proof on that? I think it just simplifies CMakeLists, since there's no additional targets

The issue here is that everything must be listed in a single CMakeLists, which makes it quite large.

> Not a big problem actually. Only required symbols is being found, thus shouldn't consume much time (though, not sure)

To link a library, it's symbol table must be scanned, and the larger it is, the longer it takes. Also with static linking, the library must be physically copied to a final executable. And do not forget that the linker usually removes unused symbols.

> What kind of configuration you're talking about?

For example, I want to add certain defines to one module, but not the other via CMake. This is not possible in this case.

> It also worth mentioning, that it also makes development a bit harder, since you need to recompile a lot 

You need to recompile only the stuff that has been changed.",2018-12-27 08:24:40,2018-12-27 08:24:40
https://api.github.com/repos/hyperledger/iroha/issues/1985,https://api.github.com/repos/hyperledger/iroha/issues/comments/455160261,https://github.com/hyperledger/iroha/issues/1985#issuecomment-455160261,LiraLemur,Moved to Jira: https://jira.hyperledger.org/browse/IR-202,2019-01-17 12:47:42,2019-01-17 12:47:42
https://api.github.com/repos/hyperledger/iroha/issues/1984,https://api.github.com/repos/hyperledger/iroha/issues/comments/449837832,https://github.com/hyperledger/iroha/pull/1984#issuecomment-449837832,luckychess,@l4l What exact issue you mean?,2018-12-25 10:31:41,2018-12-25 10:31:41
https://api.github.com/repos/hyperledger/iroha/issues/1980,https://api.github.com/repos/hyperledger/iroha/issues/comments/449331700,https://github.com/hyperledger/iroha/pull/1980#issuecomment-449331700,nickaleks,Cool PR name :),2018-12-21 09:32:15,2018-12-21 09:32:15
https://api.github.com/repos/hyperledger/iroha/issues/1978,https://api.github.com/repos/hyperledger/iroha/issues/comments/448997434,https://github.com/hyperledger/iroha/pull/1978#issuecomment-448997434,igor-egorov,DCO has to be updated,2018-12-20 13:20:32,2018-12-20 13:20:32
https://api.github.com/repos/hyperledger/iroha/issues/1978,https://api.github.com/repos/hyperledger/iroha/issues/comments/449319667,https://github.com/hyperledger/iroha/pull/1978#issuecomment-449319667,neewy,"Lol, GitHub suggestions break DCO",2018-12-21 09:01:04,2018-12-21 09:01:04
https://api.github.com/repos/hyperledger/iroha/issues/1975,https://api.github.com/repos/hyperledger/iroha/issues/comments/454016104,https://github.com/hyperledger/iroha/pull/1975#issuecomment-454016104,neewy,🎆,2019-01-14 14:06:50,2019-01-14 14:06:50
https://api.github.com/repos/hyperledger/iroha/issues/1975,https://api.github.com/repos/hyperledger/iroha/issues/comments/455154875,https://github.com/hyperledger/iroha/pull/1975#issuecomment-455154875,neewy,🎉 ,2019-01-17 12:28:03,2019-01-17 12:28:03
https://api.github.com/repos/hyperledger/iroha/issues/1974,https://api.github.com/repos/hyperledger/iroha/issues/comments/448878563,https://github.com/hyperledger/iroha/pull/1974#issuecomment-448878563,MBoldyrev,CI is failing because the fake peers do not know about on-demand OS yet. The support for ODOS is added in #1975.,2018-12-20 05:27:50,2018-12-20 05:27:50
https://api.github.com/repos/hyperledger/iroha/issues/1972,https://api.github.com/repos/hyperledger/iroha/issues/comments/448674888,https://github.com/hyperledger/iroha/pull/1972#issuecomment-448674888,neewy,@nickaleks please leave a suggestion with a description of  -c 'max_prepared_transactions=100' parameter: why is it needed?,2018-12-19 17:18:05,2018-12-19 17:18:05
https://api.github.com/repos/hyperledger/iroha/issues/1972,https://api.github.com/repos/hyperledger/iroha/issues/comments/448974321,https://github.com/hyperledger/iroha/pull/1972#issuecomment-448974321,nickaleks,"I would add to ""Run postgres server"" a section about optional parameters.
Currently, we have max_prepared_transactions option, which enables 2 phase commit optimization for iroha.
Postgres documentation suggests setting it to a max number of connections, which is 100 by default.",2018-12-20 11:58:35,2018-12-20 11:58:44
https://api.github.com/repos/hyperledger/iroha/issues/1972,https://api.github.com/repos/hyperledger/iroha/issues/comments/450094638,https://github.com/hyperledger/iroha/pull/1972#issuecomment-450094638,neewy,"It is not said where Iroha peer takes Postgres parameters. We need to mention about that in the docs here as well. There is a section above ""Run Postgresql in a container"".
@LiraLemur ",2018-12-27 07:33:41,2018-12-27 07:33:41
https://api.github.com/repos/hyperledger/iroha/issues/1972,https://api.github.com/repos/hyperledger/iroha/issues/comments/450341369,https://github.com/hyperledger/iroha/pull/1972#issuecomment-450341369,LiraLemur,"> It is not said where Iroha peer takes Postgres parameters. We need to mention about that in the docs here as well. There is a section above ""Run Postgresql in a container"".
> @LiraLemur

Hope I've got your comment right, please check. ",2018-12-28 11:00:00,2018-12-28 11:00:00
https://api.github.com/repos/hyperledger/iroha/issues/1970,https://api.github.com/repos/hyperledger/iroha/issues/comments/449019829,https://github.com/hyperledger/iroha/pull/1970#issuecomment-449019829,l4l,Why is it added only to x86_64 arch?,2018-12-20 14:38:30,2018-12-20 14:38:30
https://api.github.com/repos/hyperledger/iroha/issues/1970,https://api.github.com/repos/hyperledger/iroha/issues/comments/449037171,https://github.com/hyperledger/iroha/pull/1970#issuecomment-449037171,BulatSaif,"@l4l, there are no clang-7 armv7l deb packages in llvm repository 
",2018-12-20 15:32:24,2018-12-20 15:32:24
https://api.github.com/repos/hyperledger/iroha/issues/1968,https://api.github.com/repos/hyperledger/iroha/issues/comments/449020430,https://github.com/hyperledger/iroha/pull/1968#issuecomment-449020430,l4l,"How did you test, that the listed subscriptions leaks memory? I'm not really sure, but though that `unsubscribe` is called on such object destruction, fix me if I'm wrong",2018-12-20 14:40:31,2018-12-20 14:40:31
https://api.github.com/repos/hyperledger/iroha/issues/1968,https://api.github.com/repos/hyperledger/iroha/issues/comments/449286838,https://github.com/hyperledger/iroha/pull/1968#issuecomment-449286838,luckychess,"I built irohad target with leak sanitizer, than run and stop it. It clearly showed leaks without unsubscribe.",2018-12-21 07:17:03,2018-12-21 07:17:03
https://api.github.com/repos/hyperledger/iroha/issues/1964,https://api.github.com/repos/hyperledger/iroha/issues/comments/448110325,https://github.com/hyperledger/iroha/pull/1964#issuecomment-448110325,neewy,"@coderintherye hi Kevin! Thank you for the contribution and interest to the project. We are sorry to have an outdated development branch in our docs. Since this is placed in text all across the docs we think that it is better for us to migrate to develop (finally).
We had to use dev branch as a replacement for develop because of DCO issues.
Our projected ETA for dev/develop thing is the start of next week (Monday-Tuesday).

Please stay tuned!",2018-12-18 06:22:16,2018-12-18 06:22:16
https://api.github.com/repos/hyperledger/iroha/issues/1964,https://api.github.com/repos/hyperledger/iroha/issues/comments/448110995,https://github.com/hyperledger/iroha/pull/1964#issuecomment-448110995,neewy,"Although we are limited to the capacity of HL IT team, which is going to be away for the weekends/holidays.

You can help us by replacing `develop` with `master` instead.
Please sign-off your commits with -s option @coderintherye ",2018-12-18 06:25:46,2018-12-18 06:25:46
https://api.github.com/repos/hyperledger/iroha/issues/1964,https://api.github.com/repos/hyperledger/iroha/issues/comments/448422906,https://github.com/hyperledger/iroha/pull/1964#issuecomment-448422906,coderintherye,"@neewy Ok, done as instructed, would you want to re-open this PR or should I make a new PR off the updated branch? It's ok if it needs to stay open till post-holidays",2018-12-19 00:24:37,2018-12-19 00:24:37
https://api.github.com/repos/hyperledger/iroha/issues/1962,https://api.github.com/repos/hyperledger/iroha/issues/comments/448156844,https://github.com/hyperledger/iroha/pull/1962#issuecomment-448156844,MBoldyrev,"> Is it possible that one config will prevent something from being committed and another config would not? If so, that is unacceptable change.

@igor-egorov,
but that is directly implied from the idea of switching between BFT/CFT consistency models. If you mean we should somehow ensure the rest peers use the same mode - that is out of scope of this change and should be discussed and (maybe) implemented separately.",2018-12-18 09:36:25,2018-12-18 09:36:25
https://api.github.com/repos/hyperledger/iroha/issues/1962,https://api.github.com/repos/hyperledger/iroha/issues/comments/449380038,https://github.com/hyperledger/iroha/pull/1962#issuecomment-449380038,nickaleks,"Maybe think about how to check that, and only when we are able to check that the network is consistent, then add this feature. Otherwise, we are gonna have a bad time.",2018-12-21 12:47:43,2018-12-21 12:47:43
https://api.github.com/repos/hyperledger/iroha/issues/1962,https://api.github.com/repos/hyperledger/iroha/issues/comments/454011187,https://github.com/hyperledger/iroha/pull/1962#issuecomment-454011187,neewy,Unfortunately this change does not resolve the original problem. This task and PR are going to be closed.,2019-01-14 13:51:56,2019-01-14 13:51:56
https://api.github.com/repos/hyperledger/iroha/issues/1961,https://api.github.com/repos/hyperledger/iroha/issues/comments/454011011,https://github.com/hyperledger/iroha/pull/1961#issuecomment-454011011,neewy,Unfortunately this change does not resolve the original problem. This task and PR are going to be closed.,2019-01-14 13:51:21,2019-01-14 13:51:21
https://api.github.com/repos/hyperledger/iroha/issues/1961,https://api.github.com/repos/hyperledger/iroha/issues/comments/454298691,https://github.com/hyperledger/iroha/pull/1961#issuecomment-454298691,MBoldyrev,"updated the branch to use 3f+1 ""BFT""",2019-01-15 07:57:16,2019-01-15 07:57:16
https://api.github.com/repos/hyperledger/iroha/issues/1960,https://api.github.com/repos/hyperledger/iroha/issues/comments/448891678,https://github.com/hyperledger/iroha/pull/1960#issuecomment-448891678,bakhtin,"Please, make a test run of the pipeline to check the upload of Docker images and other artifacts. For that replace `dev` and `master` branch instances in the code with the name of the current branch. Also make sure you push Docker images with some other tag (not `latest` or `develop` or `develop-build`)",2018-12-20 06:42:47,2018-12-20 06:42:47
https://api.github.com/repos/hyperledger/iroha/issues/1960,https://api.github.com/repos/hyperledger/iroha/issues/comments/449314748,https://github.com/hyperledger/iroha/pull/1960#issuecomment-449314748,BulatSaif,"1. There were some conflict in  load functions(`vars =  load "".jenkinsci/vars.groovy""`), using `def` in front helps.
2. `mac-mcst-3 `have different curl version that break upload process,  using ` curl --http1.1` helps 
3. There are several conflict in build parameter, 
ex: 
 -`fuzzing` and `compiler version`,  `fuzzing` works only with `clang`
-`tests_` and build type `Release`, tests do not build, 
-`package` and build type  `Debug`,  *.tar.gz empty , tests empty 
-`sanitize` and   build type `Release`
-etc
so checkbox becomes useless, you can not select that you want.
there are to solutions that I see:
1.rewrite the cmakeFile  
2.reduce options, see: https://soramitsu.atlassian.net/browse/DOPS-202

@bakhtin package are  pushed  successfully.
- please, delete image with tag `*not-supposed-to-be-pushed`
https://hub.docker.com/r/hyperledger/iroha/tags 
- please, folders` PR-1960-20181220*`
https://nexus.iroha.tech/#browse/browse:artifacts:iroha%2Fmacos
https://nexus.iroha.tech/#browse/browse:artifacts:iroha%2Flinux%2Fx86_64


 
",2018-12-21 08:47:57,2018-12-21 08:47:57
https://api.github.com/repos/hyperledger/iroha/issues/1959,https://api.github.com/repos/hyperledger/iroha/issues/comments/448180515,https://github.com/hyperledger/iroha/pull/1959#issuecomment-448180515,nickaleks,Also your test doesn't pass,2018-12-18 10:54:57,2018-12-18 10:54:57
https://api.github.com/repos/hyperledger/iroha/issues/1955,https://api.github.com/repos/hyperledger/iroha/issues/comments/455159718,https://github.com/hyperledger/iroha/issues/1955#issuecomment-455159718,LiraLemur,"Thank you for reporting this, indeed, there is an issue with develop branch at the moment. 
Please use dev branch or master branch - they are up-to-date. 

And if you encounter any issues, please contact us here: https://chat.hyperledger.org/channel/iroha",2019-01-17 12:45:46,2019-01-17 12:45:46
https://api.github.com/repos/hyperledger/iroha/issues/1955,https://api.github.com/repos/hyperledger/iroha/issues/comments/455805112,https://github.com/hyperledger/iroha/issues/1955#issuecomment-455805112,l4l,"Indeed, CLI component is stale and might not work. We haven't some plans on that yet, but still it is possible to use different language bindings. Since it would be changed at some time anyway I'm closing an issue",2019-01-19 18:45:48,2019-01-19 18:45:48
https://api.github.com/repos/hyperledger/iroha/issues/1953,https://api.github.com/repos/hyperledger/iroha/issues/comments/449504445,https://github.com/hyperledger/iroha/pull/1953#issuecomment-449504445,l4l,"> The logger should not be created in-place in components

Quite arguable fix, I hope that will not lead to more pain to ctors juggling",2018-12-21 21:36:53,2018-12-21 21:36:53
https://api.github.com/repos/hyperledger/iroha/issues/1952,https://api.github.com/repos/hyperledger/iroha/issues/comments/447866748,https://github.com/hyperledger/iroha/pull/1952#issuecomment-447866748,BulatSaif,Closed in favor of #1960,2018-12-17 14:35:12,2018-12-17 14:35:12
https://api.github.com/repos/hyperledger/iroha/issues/1951,https://api.github.com/repos/hyperledger/iroha/issues/comments/448974855,https://github.com/hyperledger/iroha/pull/1951#issuecomment-448974855,l4l,"For now we just continuing copy-pasting initialization from application.cpp, since it's a straightforward solution. For further refactoring see: [IR-142](https://jira.hyperledger.org/browse/IR-142)
Each fuzzing target will be fixed per one pr",2018-12-20 12:00:46,2018-12-20 12:00:46
https://api.github.com/repos/hyperledger/iroha/issues/1950,https://api.github.com/repos/hyperledger/iroha/issues/comments/446968344,https://github.com/hyperledger/iroha/pull/1950#issuecomment-446968344,BulatSaif,"Run with fuzzing enable (it fails):  
https://jenkins.soramitsu.co.jp/blue/organizations/jenkins/iroha%2Firoha-hyperledger/detail/feature%2Ffuzzing-build-nightly/4/pipeline
**upd:**
new link https://jenkins.soramitsu.co.jp/blue/organizations/jenkins/iroha%2Firoha-hyperledger/detail/PR-1950/4/pipeline",2018-12-13 13:29:43,2018-12-13 14:22:27
https://api.github.com/repos/hyperledger/iroha/issues/1950,https://api.github.com/repos/hyperledger/iroha/issues/comments/446987414,https://github.com/hyperledger/iroha/pull/1950#issuecomment-446987414,BulatSaif,"TODO: After merge in dev
add  this to Jenkins `iroha-nightly-develop`:
```
0 1 * * * %x86_64_macos=False; fuzzing=True
```",2018-12-13 14:28:48,2018-12-13 14:28:48
https://api.github.com/repos/hyperledger/iroha/issues/1950,https://api.github.com/repos/hyperledger/iroha/issues/comments/447133337,https://github.com/hyperledger/iroha/pull/1950#issuecomment-447133337,l4l,"Since build of fuzzing targets disabled by default they brokes sometimes. I will work on that, not an issue of the pr
UPD: wip at #1951",2018-12-13 21:50:20,2018-12-13 23:08:10
https://api.github.com/repos/hyperledger/iroha/issues/1948,https://api.github.com/repos/hyperledger/iroha/issues/comments/447132826,https://github.com/hyperledger/iroha/pull/1948#issuecomment-447132826,l4l,"> Formalized correct behaviour

not really formal :(",2018-12-13 21:48:34,2018-12-13 21:48:40
https://api.github.com/repos/hyperledger/iroha/issues/1948,https://api.github.com/repos/hyperledger/iroha/issues/comments/447235425,https://github.com/hyperledger/iroha/pull/1948#issuecomment-447235425,Akvinikym,"> > Formalized correct behaviour
> 
> not really formal :(

I think, this is OK format to describe this issue - two use-cases along with comments, why this choice was made",2018-12-14 07:06:36,2018-12-14 07:06:36
https://api.github.com/repos/hyperledger/iroha/issues/1947,https://api.github.com/repos/hyperledger/iroha/issues/comments/455990423,https://github.com/hyperledger/iroha/pull/1947#issuecomment-455990423,neewy,"This pull request depends on mock interface definition, introduced at https://github.com/hyperledger/iroha/pull/2026",2019-01-21 08:41:06,2019-01-21 08:41:06
https://api.github.com/repos/hyperledger/iroha/issues/1947,https://api.github.com/repos/hyperledger/iroha/issues/comments/465226989,https://github.com/hyperledger/iroha/pull/1947#issuecomment-465226989,neewy,"@muratovv what is the status?
",2019-02-19 17:19:32,2019-02-19 17:19:32
https://api.github.com/repos/hyperledger/iroha/issues/1944,https://api.github.com/repos/hyperledger/iroha/issues/comments/447844437,https://github.com/hyperledger/iroha/pull/1944#issuecomment-447844437,MBoldyrev,pls see update in the description,2018-12-17 13:25:34,2018-12-17 13:25:34
https://api.github.com/repos/hyperledger/iroha/issues/1941,https://api.github.com/repos/hyperledger/iroha/issues/comments/446591097,https://github.com/hyperledger/iroha/pull/1941#issuecomment-446591097,neewy,I would put API changes as the second item in the list. ,2018-12-12 13:40:18,2018-12-12 13:40:18
https://api.github.com/repos/hyperledger/iroha/issues/1941,https://api.github.com/repos/hyperledger/iroha/issues/comments/446601105,https://github.com/hyperledger/iroha/pull/1941#issuecomment-446601105,kamilsa,"> I would put API changes as the second item in the list.

I've put it a bit higher in the notes",2018-12-12 14:12:29,2018-12-12 14:12:42
https://api.github.com/repos/hyperledger/iroha/issues/1941,https://api.github.com/repos/hyperledger/iroha/issues/comments/446605770,https://github.com/hyperledger/iroha/pull/1941#issuecomment-446605770,neewy,"Dear @tkuhrt @ryjones and @thelinuxfoundation:
DCO Commit sign-off was manually approved. As we are releasing rc1.0, we are going to fix these non-conformances in our transition phase.",2018-12-12 14:26:32,2018-12-12 14:26:32
https://api.github.com/repos/hyperledger/iroha/issues/1940,https://api.github.com/repos/hyperledger/iroha/issues/comments/447128542,https://github.com/hyperledger/iroha/pull/1940#issuecomment-447128542,l4l,"May you please confirm that no fixes required for  _.jenkinsci_, _deploy_ and _docs_ folders? Ping @bakhtin ",2018-12-13 21:33:53,2018-12-13 21:33:53
https://api.github.com/repos/hyperledger/iroha/issues/1940,https://api.github.com/repos/hyperledger/iroha/issues/comments/447252035,https://github.com/hyperledger/iroha/pull/1940#issuecomment-447252035,bagf,Welcome to pull my changes here https://github.com/hyperledger/iroha/compare/feature/hex-in-client-api...CastleOne:k8s-hex-peer-key-genesis-block `k8s-hex-peer-key-genesis-block` is a branch off this PR but also contains dev branch changes hence the large diff,2018-12-14 08:26:50,2018-12-14 08:28:28
https://api.github.com/repos/hyperledger/iroha/issues/1938,https://api.github.com/repos/hyperledger/iroha/issues/comments/447627228,https://github.com/hyperledger/iroha/pull/1938#issuecomment-447627228,neewy,What about queries? @LiraLemur ,2018-12-16 08:59:03,2018-12-16 08:59:03
https://api.github.com/repos/hyperledger/iroha/issues/1938,https://api.github.com/repos/hyperledger/iroha/issues/comments/448550112,https://github.com/hyperledger/iroha/pull/1938#issuecomment-448550112,LiraLemur,"> What about queries? @LiraLemur

https://github.com/hyperledger/iroha/pull/1971 - here they are :) ",2018-12-19 10:42:45,2018-12-19 10:42:45
https://api.github.com/repos/hyperledger/iroha/issues/1932,https://api.github.com/repos/hyperledger/iroha/issues/comments/446214220,https://github.com/hyperledger/iroha/pull/1932#issuecomment-446214220,grimadas,"Should we make supermajority rule pluggable, defined in runtime? ",2018-12-11 14:07:24,2018-12-11 14:07:32
https://api.github.com/repos/hyperledger/iroha/issues/1932,https://api.github.com/repos/hyperledger/iroha/issues/comments/446467354,https://github.com/hyperledger/iroha/pull/1932#issuecomment-446467354,MBoldyrev,"> Should we make supermajority rule pluggable, defined in runtime?

AFAIK it is a more remote plan.",2018-12-12 05:31:03,2018-12-12 05:31:03
https://api.github.com/repos/hyperledger/iroha/issues/1932,https://api.github.com/repos/hyperledger/iroha/issues/comments/453437259,https://github.com/hyperledger/iroha/pull/1932#issuecomment-453437259,neewy,Unfortunately this change does not resolve the original problem. This task and PR are going to be closed.,2019-01-11 08:56:26,2019-01-11 08:56:26
https://api.github.com/repos/hyperledger/iroha/issues/1931,https://api.github.com/repos/hyperledger/iroha/issues/comments/453439137,https://github.com/hyperledger/iroha/pull/1931#issuecomment-453439137,neewy,@MBoldyrev we should resolve the conflict and try to merge this PR next week,2019-01-11 09:01:28,2019-01-11 09:01:28
https://api.github.com/repos/hyperledger/iroha/issues/1931,https://api.github.com/repos/hyperledger/iroha/issues/comments/454010678,https://github.com/hyperledger/iroha/pull/1931#issuecomment-454010678,neewy,@muratovv please review this PR,2019-01-14 13:50:13,2019-01-14 13:50:13
https://api.github.com/repos/hyperledger/iroha/issues/1931,https://api.github.com/repos/hyperledger/iroha/issues/comments/455996236,https://github.com/hyperledger/iroha/pull/1931#issuecomment-455996236,neewy,this change has become stale since it does not fix an original problem,2019-01-21 09:01:08,2019-01-21 09:01:08
https://api.github.com/repos/hyperledger/iroha/issues/1924,https://api.github.com/repos/hyperledger/iroha/issues/comments/445143454,https://github.com/hyperledger/iroha/pull/1924#issuecomment-445143454,neewy,"I would change the target into a trunk, where we can update documentation as well @grimadas ",2018-12-07 07:08:41,2018-12-07 07:08:59
https://api.github.com/repos/hyperledger/iroha/issues/1922,https://api.github.com/repos/hyperledger/iroha/issues/comments/445145207,https://github.com/hyperledger/iroha/pull/1922#issuecomment-445145207,neewy,If possible attach a short PR description as it might be seen by anyone :) ,2018-12-07 07:18:20,2018-12-07 07:18:20
https://api.github.com/repos/hyperledger/iroha/issues/1922,https://api.github.com/repos/hyperledger/iroha/issues/comments/447234871,https://github.com/hyperledger/iroha/pull/1922#issuecomment-447234871,bakhtin,Work is now in progress in `trunk/new-pipeline`,2018-12-14 07:03:39,2018-12-14 07:03:39
https://api.github.com/repos/hyperledger/iroha/issues/1919,https://api.github.com/repos/hyperledger/iroha/issues/comments/444810756,https://github.com/hyperledger/iroha/pull/1919#issuecomment-444810756,luckychess,"Created for OSS testing, no need to merge.",2018-12-06 09:42:25,2018-12-06 09:42:25
https://api.github.com/repos/hyperledger/iroha/issues/1918,https://api.github.com/repos/hyperledger/iroha/issues/comments/455159018,https://github.com/hyperledger/iroha/issues/1918#issuecomment-455159018,LiraLemur,"Moved the issue to Jira: https://jira.hyperledger.org/browse/IR-201

It would also be great if you could contact us in our chatroom and tell us more about your research and experience: https://chat.hyperledger.org/channel/iroha",2019-01-17 12:43:21,2019-01-17 12:43:21
https://api.github.com/repos/hyperledger/iroha/issues/1916,https://api.github.com/repos/hyperledger/iroha/issues/comments/445144852,https://github.com/hyperledger/iroha/pull/1916#issuecomment-445144852,neewy,"For conflict resolution we are waiting for #1914 to be merged into dev, then a PR to be merged from https://github.com/hyperledger/iroha/tree/trunk/block-oneof ",2018-12-07 07:16:25,2018-12-07 07:16:25
https://api.github.com/repos/hyperledger/iroha/issues/1916,https://api.github.com/repos/hyperledger/iroha/issues/comments/446233122,https://github.com/hyperledger/iroha/pull/1916#issuecomment-446233122,kamilsa,Closed in favour https://github.com/hyperledger/iroha/pull/1940,2018-12-11 15:01:31,2018-12-11 15:01:31
https://api.github.com/repos/hyperledger/iroha/issues/1906,https://api.github.com/repos/hyperledger/iroha/issues/comments/455158194,https://github.com/hyperledger/iroha/issues/1906#issuecomment-455158194,LiraLemur,"Please try to use a new version of Iroha from master branch (we've had some pretty great changes there!) 
If the issue remains, please contact us here: https://chat.hyperledger.org/channel/iroha",2019-01-17 12:40:36,2019-01-17 12:40:36
https://api.github.com/repos/hyperledger/iroha/issues/1902,https://api.github.com/repos/hyperledger/iroha/issues/comments/448158158,https://github.com/hyperledger/iroha/pull/1902#issuecomment-448158158,MBoldyrev,need to add on demand os to fake peers,2018-12-18 09:40:55,2018-12-18 09:40:55
https://api.github.com/repos/hyperledger/iroha/issues/1896,https://api.github.com/repos/hyperledger/iroha/issues/comments/443181075,https://github.com/hyperledger/iroha/pull/1896#issuecomment-443181075,MBoldyrev,"needed to force push because after a rebase to a squashed commit in trunk the PR history extended over the squashed commits. Do not know how to avoid that.
![ugly](https://user-images.githubusercontent.com/11086641/49287650-5f4aec80-f4af-11e8-8045-463aecc1194d.png)
",2018-11-30 11:51:22,2018-11-30 11:51:22
https://api.github.com/repos/hyperledger/iroha/issues/1896,https://api.github.com/repos/hyperledger/iroha/issues/comments/443261537,https://github.com/hyperledger/iroha/pull/1896#issuecomment-443261537,MBoldyrev,"Needed the PortGuard, so merged dev. Had to merge the new pimpl for `QueryResponse`, so @kamilsa, please have a look at the merge, as it is mostly about your new paged tx responce.",2018-11-30 16:36:45,2018-11-30 16:36:45
https://api.github.com/repos/hyperledger/iroha/issues/1893,https://api.github.com/repos/hyperledger/iroha/issues/comments/442955878,https://github.com/hyperledger/iroha/pull/1893#issuecomment-442955878,Warchant,Another drawback is legacy for new networks :(,2018-11-29 19:09:28,2018-11-29 19:09:28
https://api.github.com/repos/hyperledger/iroha/issues/1891,https://api.github.com/repos/hyperledger/iroha/issues/comments/443193344,https://github.com/hyperledger/iroha/pull/1891#issuecomment-443193344,MBoldyrev,"As I wrote: https://github.com/hyperledger/iroha/pull/1865#issuecomment-442777786, it seems that replay policies should be applied outside ""transport"" classes. Not only it would granulate responsibilities and suit the OOP style, but also remove the need for tricks where we need a transport with no replay checks. All the logic besides internal types conversion and transfer should be kept outside transport classes, I think.
However this is just a suggestion and it does not directly affect implemented functions, so I suggest creating a separate task for refactoring which would not block this feature.",2018-11-30 12:46:15,2018-11-30 12:46:15
https://api.github.com/repos/hyperledger/iroha/issues/1886,https://api.github.com/repos/hyperledger/iroha/issues/comments/443116124,https://github.com/hyperledger/iroha/pull/1886#issuecomment-443116124,neewy,We need to assign reviewers,2018-11-30 07:28:20,2018-11-30 07:28:20
https://api.github.com/repos/hyperledger/iroha/issues/1878,https://api.github.com/repos/hyperledger/iroha/issues/comments/441879174,https://github.com/hyperledger/iroha/issues/1878#issuecomment-441879174,hira000,"The size of the block store is about 2 GB. Even if this is all put in memory, it does not reach 8 GB, so I'd like to know quickly why 8 GB of memory is used and how to avoid using memory.",2018-11-27 02:52:58,2018-11-27 02:52:58
https://api.github.com/repos/hyperledger/iroha/issues/1878,https://api.github.com/repos/hyperledger/iroha/issues/comments/442098905,https://github.com/hyperledger/iroha/issues/1878#issuecomment-442098905,igor-egorov,"Hi, I did not investigate the issue, but unfortunately, restarting the daemon should NOT help now :( 

The problem is that state restoring is implemented not the most optimal way (it loads all the blocks during the start to the RAM). Of course, the memory will be freed after daemon started, but possible memory fragmentation may cause slow down.",2018-11-27 15:25:43,2018-11-27 15:25:43
https://api.github.com/repos/hyperledger/iroha/issues/1878,https://api.github.com/repos/hyperledger/iroha/issues/comments/442271460,https://github.com/hyperledger/iroha/issues/1878#issuecomment-442271460,hira000,"Thank you for your reply.

I understood that all the blocks are expanded in memory when the daemon starts up.

However, it seems that memory has not been released after the daemon has started.

Since swap is 0, we can not deal with it because we can not find the reason why large memory usage leads to slowdown, so we are in trouble.
Why is it slowing down? How can I avoid slowdown?

If memory is actually freed and fragmentation is the cause of slowdown, will it be possible to avoid slowdown by defragmenting memory after Iroha daemon is started? Please let me know if you know the concrete method.

▼Before starting daemon
$ cat /proc/meminfo
MemTotal:        7706696 kB
MemFree:         5930204 kB
MemAvailable:    6795520 kB
Buffers:               0 kB
Cached:          1079572 kB
SwapCached:            0 kB
Active:           345124 kB
Inactive:         918028 kB
Active(anon):     323664 kB
Inactive(anon):    36368 kB
Active(file):      21460 kB
Inactive(file):   881660 kB
Unevictable:           0 kB
Mlocked:               0 kB
SwapTotal:             0 kB
SwapFree:              0 kB
Dirty:                36 kB
Writeback:             0 kB
AnonPages:        183636 kB
Mapped:           178596 kB
Shmem:            176452 kB
Slab:             332924 kB
SReclaimable:     266964 kB
SUnreclaim:        65960 kB
KernelStack:        3328 kB
PageTables:        10924 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:     3853348 kB
Committed_AS:    1062568 kB
VmallocTotal:   34359738367 kB
VmallocUsed:       18772 kB
VmallocChunk:   34359717428 kB
HardwareCorrupted:     0 kB
AnonHugePages:     34816 kB
CmaTotal:              0 kB
CmaFree:               0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
DirectMap4k:      114664 kB
DirectMap2M:     3772416 kB
DirectMap1G:     4194304 kB

▼After starting daemon, and after releasing the memory with the following command （approximately 2.2 million transactions have been issued）
echo 3 > /proc/sys/vm/drop_caches

$ cat /proc/meminfo
MemTotal:        7706696 kB
MemFree:          118856 kB
MemAvailable:        444 kB
Buffers:               0 kB
Cached:           179908 kB
SwapCached:            0 kB
Active:          7375144 kB
Inactive:          39688 kB
Active(anon):    7375008 kB
Inactive(anon):    36368 kB
Active(file):        136 kB
Inactive(file):     3320 kB
Unevictable:           0 kB
Mlocked:               0 kB
SwapTotal:             0 kB
SwapFree:              0 kB
Dirty:                 0 kB
Writeback:             0 kB
AnonPages:       7234924 kB
Mapped:           163720 kB
Shmem:            176452 kB
Slab:              71396 kB
SReclaimable:      31400 kB
SUnreclaim:        39996 kB
KernelStack:        3504 kB
PageTables:        27684 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:     3853348 kB
Committed_AS:    8145728 kB
VmallocTotal:   34359738367 kB
VmallocUsed:       18772 kB
VmallocChunk:   34359717428 kB
HardwareCorrupted:     0 kB
AnonHugePages:    112640 kB
CmaTotal:              0 kB
CmaFree:               0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
DirectMap4k:      114664 kB
DirectMap2M:     3772416 kB
DirectMap1G:     4194304 kB

▼Valgrind checks memory usage of Iroha daemon
==21507== HEAP SUMMARY:
==21507==     in use at exit: 175,058 bytes in 1,754 blocks
==21507==   total heap usage: 51,626,058 allocs, 51,624,304 frees, 7,887,978,442 bytes allocated",2018-11-28 00:28:05,2018-11-28 00:28:05
https://api.github.com/repos/hyperledger/iroha/issues/1878,https://api.github.com/repos/hyperledger/iroha/issues/comments/442299299,https://github.com/hyperledger/iroha/issues/1878#issuecomment-442299299,hira000,"Looking at Valgrind's output, most seems to be a memory reference by google:protobuf.
It may be a problem of protobuf.
I'd like to check the version of protobuf, but I do not know how. How can I check the version?
It seems to be reproduced in many environments if the protobuf in Docker is due to the old, but has anyone recreated similar events?

[valgrind_memcheck_02_has_0100_account_data.log](https://github.com/hyperledger/iroha/files/2622626/valgrind_memcheck_02_has_0100_account_data.log)
",2018-11-28 02:49:20,2018-11-28 02:49:20
https://api.github.com/repos/hyperledger/iroha/issues/1878,https://api.github.com/repos/hyperledger/iroha/issues/comments/455157704,https://github.com/hyperledger/iroha/issues/1878#issuecomment-455157704,LiraLemur,Moved the issue to Jira: https://jira.hyperledger.org/browse/IR-200,2019-01-17 12:38:51,2019-01-17 12:38:51
https://api.github.com/repos/hyperledger/iroha/issues/1877,https://api.github.com/repos/hyperledger/iroha/issues/comments/444867428,https://github.com/hyperledger/iroha/pull/1877#issuecomment-444867428,MBoldyrev,The issue of this PR is supposed to be solved after the base branch is merged to dev.,2018-12-06 13:17:46,2018-12-06 13:17:46
https://api.github.com/repos/hyperledger/iroha/issues/1875,https://api.github.com/repos/hyperledger/iroha/issues/comments/441347692,https://github.com/hyperledger/iroha/pull/1875#issuecomment-441347692,Stayer,"LGTM
Wait for @bakhtin ",2018-11-24 06:42:29,2018-11-24 06:42:29
https://api.github.com/repos/hyperledger/iroha/issues/1875,https://api.github.com/repos/hyperledger/iroha/issues/comments/444865549,https://github.com/hyperledger/iroha/pull/1875#issuecomment-444865549,neewy,@bagf happy to see this first-time contribution from you! Can we meet your team in our public rocket.chat in order to get more details about your project? Please join the group https://chat.hyperledger.org/channel/iroha,2018-12-06 13:10:43,2018-12-06 13:11:08
https://api.github.com/repos/hyperledger/iroha/issues/1873,https://api.github.com/repos/hyperledger/iroha/issues/comments/444867310,https://github.com/hyperledger/iroha/pull/1873#issuecomment-444867310,MBoldyrev,The issue of this PR is supposed to be solved after the base branch is merged to dev.,2018-12-06 13:17:23,2018-12-06 13:17:23
https://api.github.com/repos/hyperledger/iroha/issues/1872,https://api.github.com/repos/hyperledger/iroha/issues/comments/441167251,https://github.com/hyperledger/iroha/pull/1872#issuecomment-441167251,bakhtin,Can we throw a warning when blockstore is present and overwrite ledger flag is set?,2018-11-23 07:02:31,2018-11-23 07:02:31
https://api.github.com/repos/hyperledger/iroha/issues/1872,https://api.github.com/repos/hyperledger/iroha/issues/comments/441207854,https://github.com/hyperledger/iroha/pull/1872#issuecomment-441207854,igor-egorov,"> Can we throw a warning when blockstore is present and overwrite ledger flag is set?

That is already implemented
<img width=""366"" alt=""image"" src=""https://user-images.githubusercontent.com/36847043/48939600-c6075d80-ef25-11e8-8a63-bd2f5dfe42a8.png"">
",2018-11-23 10:43:03,2018-11-23 10:43:41
https://api.github.com/repos/hyperledger/iroha/issues/1865,https://api.github.com/repos/hyperledger/iroha/issues/comments/440541386,https://github.com/hyperledger/iroha/pull/1865#issuecomment-440541386,nickaleks,Please make sure CI passes,2018-11-21 05:55:02,2018-11-21 05:55:02
https://api.github.com/repos/hyperledger/iroha/issues/1865,https://api.github.com/repos/hyperledger/iroha/issues/comments/440605320,https://github.com/hyperledger/iroha/pull/1865#issuecomment-440605320,igor-egorov,Ok. The problem is that the trunk cannot be build. Konstantin should fix the build in #1866 . Then I will trigger the build again.,2018-11-21 10:00:58,2018-11-21 10:00:58
https://api.github.com/repos/hyperledger/iroha/issues/1865,https://api.github.com/repos/hyperledger/iroha/issues/comments/442777786,https://github.com/hyperledger/iroha/pull/1865#issuecomment-442777786,MBoldyrev,"Why would the replay check not be done outside the transport? It seems to me that transport should do nothing more than pass whatever it gets, with as little business logic as possible. And MST notification seems like an appropriate place to do intermediate modifications like filtration. I think it is a good practice restricting a class to a precise single function, where possible.
As a ground for that thoughts imagine a case where we need a bare MST transport for testing purposes that just sends and receives what it is told to.",2018-11-29 10:08:46,2018-11-29 10:08:46
https://api.github.com/repos/hyperledger/iroha/issues/1863,https://api.github.com/repos/hyperledger/iroha/issues/comments/439674506,https://github.com/hyperledger/iroha/pull/1863#issuecomment-439674506,MBoldyrev,"I think this kind of tests should be done on ITF, as it now has the MST handle merged in dev:
https://github.com/hyperledger/iroha/blob/4e7dbf69d42417bd3c533216ec6e097c97f550ce/test/framework/integration_framework/integration_test_framework.hpp#L252-L261
Or you could use a more convenient handle of Fake Peer that is not yet merged:
https://github.com/hyperledger/iroha/blob/312dc36c78a6e371191a7c5689a8c309eb93d6ab/test/framework/integration_framework/fake_peer/fake_peer.hpp#L153-L154",2018-11-18 07:55:43,2018-11-18 07:55:43
https://api.github.com/repos/hyperledger/iroha/issues/1863,https://api.github.com/repos/hyperledger/iroha/issues/comments/440564067,https://github.com/hyperledger/iroha/pull/1863#issuecomment-440564067,neewy,"Can we please merge it? :) our dev branch fails due to test segfault, and this PR fixes it",2018-11-21 07:27:48,2018-11-21 07:27:48
https://api.github.com/repos/hyperledger/iroha/issues/1863,https://api.github.com/repos/hyperledger/iroha/issues/comments/441014385,https://github.com/hyperledger/iroha/pull/1863#issuecomment-441014385,igor-egorov,"> Can we please merge it? :) our dev branch fails due to test segfault, and this PR fixes it

Unfortunately, the `dev` fails due to another similar bug. @Akvinikym is investigating and fixing the issue. This pr will be updated soon too.",2018-11-22 12:23:13,2018-11-22 12:23:13
https://api.github.com/repos/hyperledger/iroha/issues/1863,https://api.github.com/repos/hyperledger/iroha/issues/comments/441171491,https://github.com/hyperledger/iroha/pull/1863#issuecomment-441171491,igor-egorov,"Need to merge despite failing CI, because the pr contains a part of fix.",2018-11-23 07:39:20,2018-11-23 07:39:20
https://api.github.com/repos/hyperledger/iroha/issues/1861,https://api.github.com/repos/hyperledger/iroha/issues/comments/439331090,https://github.com/hyperledger/iroha/pull/1861#issuecomment-439331090,igor-egorov,We should somehow remove the existing library from pypi when trunk will be merged,2018-11-16 09:18:17,2018-11-16 09:18:17
https://api.github.com/repos/hyperledger/iroha/issues/1861,https://api.github.com/repos/hyperledger/iroha/issues/comments/439331479,https://github.com/hyperledger/iroha/pull/1861#issuecomment-439331479,igor-egorov,summon @Stayer ,2018-11-16 09:19:29,2018-11-16 09:19:29
https://api.github.com/repos/hyperledger/iroha/issues/1861,https://api.github.com/repos/hyperledger/iroha/issues/comments/439890087,https://github.com/hyperledger/iroha/pull/1861#issuecomment-439890087,igor-egorov,summon @bakhtin ,2018-11-19 13:20:19,2018-11-19 13:20:19
https://api.github.com/repos/hyperledger/iroha/issues/1861,https://api.github.com/repos/hyperledger/iroha/issues/comments/439900049,https://github.com/hyperledger/iroha/pull/1861#issuecomment-439900049,bakhtin,You cannot remove a package from PyPi once it was uploaded there. It can only be replaced with a newer version.,2018-11-19 13:54:18,2018-11-19 13:54:18
https://api.github.com/repos/hyperledger/iroha/issues/1861,https://api.github.com/repos/hyperledger/iroha/issues/comments/439919864,https://github.com/hyperledger/iroha/pull/1861#issuecomment-439919864,l4l,"I guess it might be either renamed, or have a comment about its obsolescence",2018-11-19 14:54:53,2018-11-19 14:54:53
https://api.github.com/repos/hyperledger/iroha/issues/1861,https://api.github.com/repos/hyperledger/iroha/issues/comments/440577373,https://github.com/hyperledger/iroha/pull/1861#issuecomment-440577373,l4l,what's wrong with the ci?,2018-11-21 08:26:01,2018-11-21 08:26:01
https://api.github.com/repos/hyperledger/iroha/issues/1861,https://api.github.com/repos/hyperledger/iroha/issues/comments/456024452,https://github.com/hyperledger/iroha/pull/1861#issuecomment-456024452,neewy,"report to LFIT team if branch is not needed since it is protected
",2019-01-21 10:28:33,2019-01-21 10:28:33
https://api.github.com/repos/hyperledger/iroha/issues/1859,https://api.github.com/repos/hyperledger/iroha/issues/comments/443626779,https://github.com/hyperledger/iroha/pull/1859#issuecomment-443626779,MBoldyrev,moved to #1898,2018-12-03 08:25:32,2018-12-03 08:25:32
https://api.github.com/repos/hyperledger/iroha/issues/1859,https://api.github.com/repos/hyperledger/iroha/issues/comments/444889635,https://github.com/hyperledger/iroha/pull/1859#issuecomment-444889635,MBoldyrev,"The related branch can be safely deleted, and I have not enough permissions to do it myself.",2018-12-06 14:31:04,2018-12-06 14:31:04
https://api.github.com/repos/hyperledger/iroha/issues/1858,https://api.github.com/repos/hyperledger/iroha/issues/comments/439360434,https://github.com/hyperledger/iroha/pull/1858#issuecomment-439360434,igor-egorov,Please wait for my review too (need to check that all dependencies are generated correctly),2018-11-16 11:05:47,2018-11-16 11:05:47
https://api.github.com/repos/hyperledger/iroha/issues/1858,https://api.github.com/repos/hyperledger/iroha/issues/comments/439786393,https://github.com/hyperledger/iroha/pull/1858#issuecomment-439786393,nickaleks,LGTM,2018-11-19 06:37:02,2018-11-19 06:37:02
https://api.github.com/repos/hyperledger/iroha/issues/1855,https://api.github.com/repos/hyperledger/iroha/issues/comments/439674365,https://github.com/hyperledger/iroha/issues/1855#issuecomment-439674365,samanshahmohamadi,It was a problem with status codes and names in the `develop` branch. I changed the branch to `dev` and the issue resolved.,2018-11-18 07:51:46,2018-11-18 07:51:46
https://api.github.com/repos/hyperledger/iroha/issues/1853,https://api.github.com/repos/hyperledger/iroha/issues/comments/444831391,https://github.com/hyperledger/iroha/pull/1853#issuecomment-444831391,neewy,Plz update with latest dev and fix remaining unconformances,2018-12-06 10:52:32,2018-12-06 10:52:32
https://api.github.com/repos/hyperledger/iroha/issues/1849,https://api.github.com/repos/hyperledger/iroha/issues/comments/438975054,https://github.com/hyperledger/iroha/pull/1849#issuecomment-438975054,MBoldyrev,"@Akvinikym, please see #1859. I added the test example there, on top of a commit that renames the example test, to avoid excessive merges.",2018-11-15 09:28:26,2018-11-15 09:28:26
https://api.github.com/repos/hyperledger/iroha/issues/1849,https://api.github.com/repos/hyperledger/iroha/issues/comments/439297273,https://github.com/hyperledger/iroha/pull/1849#issuecomment-439297273,MBoldyrev,"@lebdron, regarding the new on-demand OS, let me do it in a separate PR. I will rename this one to clarify it concerns only the old one.",2018-11-16 06:38:56,2018-11-16 06:38:56
https://api.github.com/repos/hyperledger/iroha/issues/1844,https://api.github.com/repos/hyperledger/iroha/issues/comments/438988506,https://github.com/hyperledger/iroha/pull/1844#issuecomment-438988506,igor-egorov,"Since those files (`tx-example.py` and `blocks-query.py`) are not tested in CI, the branch will be merged without waiting for CI.",2018-11-15 10:13:27,2018-11-15 10:13:27
https://api.github.com/repos/hyperledger/iroha/issues/1840,https://api.github.com/repos/hyperledger/iroha/issues/comments/437107868,https://github.com/hyperledger/iroha/pull/1840#issuecomment-437107868,l4l,Fix the build please,2018-11-08 18:33:58,2018-11-08 18:33:58
https://api.github.com/repos/hyperledger/iroha/issues/1838,https://api.github.com/repos/hyperledger/iroha/issues/comments/436990316,https://github.com/hyperledger/iroha/pull/1838#issuecomment-436990316,luckychess,Closed due to DCO issues.,2018-11-08 13:16:56,2018-11-08 13:16:56
https://api.github.com/repos/hyperledger/iroha/issues/1836,https://api.github.com/repos/hyperledger/iroha/issues/comments/436909722,https://github.com/hyperledger/iroha/pull/1836#issuecomment-436909722,aj07,"Also, it's better to send node , Python PR separately.",2018-11-08 08:17:34,2018-11-08 08:17:34
https://api.github.com/repos/hyperledger/iroha/issues/1836,https://api.github.com/repos/hyperledger/iroha/issues/comments/436941535,https://github.com/hyperledger/iroha/pull/1836#issuecomment-436941535,neewy,"> Hyperledger Internship 2018 Quarter 3 specifications. Mentored by Ankit Raj. 

Can we familiarize ourselves with the specifications? ",2018-11-08 10:08:32,2018-11-08 10:08:32
https://api.github.com/repos/hyperledger/iroha/issues/1836,https://api.github.com/repos/hyperledger/iroha/issues/comments/436951887,https://github.com/hyperledger/iroha/pull/1836#issuecomment-436951887,arijitthehacker,Not sure why the DCO Check keeps on failing even though I have signed off the commits.,2018-11-08 10:44:56,2018-11-08 10:44:56
https://api.github.com/repos/hyperledger/iroha/issues/1836,https://api.github.com/repos/hyperledger/iroha/issues/comments/436953220,https://github.com/hyperledger/iroha/pull/1836#issuecomment-436953220,arijitthehacker,"> > Hyperledger Internship 2018 Quarter 3 specifications. Mentored by Ankit Raj.
> 
> Can we familiarize ourselves with the specifications?

Was tasked with working on the Iroha Documentation. Including the missing parts which have been added and with the grammar and understandability of the documentation.

Changes that have been done at the PR:
 Iroha API Reference (Commands Section): It has been modified with the JSON formats which were previously missing.
Python Library Section: It has been changed to add the Python Library Installation and an example of using Python Client Library
NodeJS Library Section: It has been changed to add the Node Library Installation and an example of using Node Library.
CLI: Command Line Interface Section has been added in Core Concepts along with images for demonstration.
",2018-11-08 10:49:50,2018-11-08 10:49:50
https://api.github.com/repos/hyperledger/iroha/issues/1836,https://api.github.com/repos/hyperledger/iroha/issues/comments/437562205,https://github.com/hyperledger/iroha/pull/1836#issuecomment-437562205,aj07,"@arijitthehacker Please send issue first (separately ) then do PR. Also, its better to send small PR instead of bigger one. 
https://help.github.com/articles/creating-an-issue/
https://help.github.com/articles/creating-a-pull-request/

Also, I tried to test those on my system. It gave an error. Just curious, how you performed the steps. Will you please share the screencast of the process you are performing?",2018-11-10 06:26:06,2018-11-10 06:26:06
https://api.github.com/repos/hyperledger/iroha/issues/1836,https://api.github.com/repos/hyperledger/iroha/issues/comments/437733705,https://github.com/hyperledger/iroha/pull/1836#issuecomment-437733705,arijitthehacker,"> @arijitthehacker Please send issue first (separately ) then do PR. Also, its better to send small PR instead of bigger one.
> https://help.github.com/articles/creating-an-issue/
> https://help.github.com/articles/creating-a-pull-request/
> 
> Also, I tried to test those on my system. It gave an error. Just curious, how you performed the steps. Will you please share the screencast of the process you are performing?

Will send you the detailed steps by mail. Could you let me know why the DCO Steps keep failing even though it's properly signed-off ?",2018-11-12 02:33:25,2018-11-12 02:33:25
https://api.github.com/repos/hyperledger/iroha/issues/1836,https://api.github.com/repos/hyperledger/iroha/issues/comments/437761152,https://github.com/hyperledger/iroha/pull/1836#issuecomment-437761152,aj07,@arijitthehacker its clearly mentioned in detail section that sign off is missing. https://github.com/hyperledger/iroha/pull/1836/checks?check_run_id=30045591,2018-11-12 05:29:23,2018-11-12 05:29:23
https://api.github.com/repos/hyperledger/iroha/issues/1836,https://api.github.com/repos/hyperledger/iroha/issues/comments/449346696,https://github.com/hyperledger/iroha/pull/1836#issuecomment-449346696,laSinteZ,"Greetings! Thank you for your contribution, we really appreciate that.

To be honest, I don't see a point in this PR: most of it is copied from READMEs and already outdated: for example, we are rewriting NodeJS library and this section is outdated, we are testing new Python library, so this section is not needed as well.

I will close this PR for now since it is not really relevant at the moment.
",2018-12-21 10:16:07,2018-12-21 10:16:07
https://api.github.com/repos/hyperledger/iroha/issues/1833,https://api.github.com/repos/hyperledger/iroha/issues/comments/438025894,https://github.com/hyperledger/iroha/pull/1833#issuecomment-438025894,l4l,"The problem there, that CliClient class is hard to test without any refactorings, as example it cannot connect to some api, instead of real port. Since it will be removed in future (and I hope soon), it probably shouldn't be supported, like an old model",2018-11-12 20:57:14,2018-11-12 20:57:14
https://api.github.com/repos/hyperledger/iroha/issues/1833,https://api.github.com/repos/hyperledger/iroha/issues/comments/449824139,https://github.com/hyperledger/iroha/pull/1833#issuecomment-449824139,lebdron,@l4l @luckychess @muratovv can we make a decision on this test?,2018-12-25 08:34:06,2018-12-25 08:34:06
https://api.github.com/repos/hyperledger/iroha/issues/1833,https://api.github.com/repos/hyperledger/iroha/issues/comments/449856839,https://github.com/hyperledger/iroha/pull/1833#issuecomment-449856839,luckychess,"Well, finally we decided to remove this test and put TODO about its refactoring without running whole command and query services but only with a code to make endpoints work.",2018-12-25 15:09:47,2018-12-25 15:09:47
https://api.github.com/repos/hyperledger/iroha/issues/1832,https://api.github.com/repos/hyperledger/iroha/issues/comments/435414087,https://github.com/hyperledger/iroha/pull/1832#issuecomment-435414087,Warchant,">Iroha can apply multi-signature transactions several times, due to lack of transaction replay protection

Do you have a plan to solve this?

>Platform independent. Lighter. A better solution if you want to use Python with Iroha: #1761

If it does not depend on iroha, it is better make it a separate repository, so users can use pip to install it:
```
$ pip install git+https://github.com/mypython/irohalib
```",2018-11-02 15:18:08,2018-11-02 15:35:47
https://api.github.com/repos/hyperledger/iroha/issues/1832,https://api.github.com/repos/hyperledger/iroha/issues/comments/436962233,https://github.com/hyperledger/iroha/pull/1832#issuecomment-436962233,neewy,"@Warchant 
> Do you have a plan to solve this?

Currently this is the top priority item in maintainers sprint, as well as ordering service

> If it does not depend on iroha, it is better make it a separate repository, so users can use pip to install it

I like this idea, I would appreciate if we can move further with this proposal after agreement in maintainers team. Can you tell what are your thoughts? @kamilsa @muratovv @lebdron @igor-egorov @luckychess ",2018-11-08 11:24:02,2018-11-08 11:24:14
https://api.github.com/repos/hyperledger/iroha/issues/1832,https://api.github.com/repos/hyperledger/iroha/issues/comments/446876404,https://github.com/hyperledger/iroha/pull/1832#issuecomment-446876404,lebdron,RC1 was released instead https://github.com/hyperledger/iroha/pull/1941,2018-12-13 08:02:48,2018-12-13 08:02:48
https://api.github.com/repos/hyperledger/iroha/issues/1831,https://api.github.com/repos/hyperledger/iroha/issues/comments/435774436,https://github.com/hyperledger/iroha/pull/1831#issuecomment-435774436,lebdron,Changed base to `trunk/bft-os-integration` since block loading in `VoteOther` case is not handled yet.,2018-11-05 07:07:42,2018-11-05 07:07:42
https://api.github.com/repos/hyperledger/iroha/issues/1830,https://api.github.com/repos/hyperledger/iroha/issues/comments/435418404,https://github.com/hyperledger/iroha/pull/1830#issuecomment-435418404,Warchant,"2PC can be blocked in some cases. 
See https://en.wikipedia.org/wiki/Two-phase_commit_protocol#Disadvantages
Is this something you considered in the design?",2018-11-02 15:30:44,2018-11-02 15:31:22
https://api.github.com/repos/hyperledger/iroha/issues/1830,https://api.github.com/repos/hyperledger/iroha/issues/comments/435769938,https://github.com/hyperledger/iroha/pull/1830#issuecomment-435769938,nickaleks,"@Warchant yes, we handle it when we receive different commit.",2018-11-05 06:41:12,2018-11-05 06:41:12
https://api.github.com/repos/hyperledger/iroha/issues/1830,https://api.github.com/repos/hyperledger/iroha/issues/comments/435817442,https://github.com/hyperledger/iroha/pull/1830#issuecomment-435817442,bakhtin,Fixed Jenkins files to use `max_prepared_transactions` Postgresql option,2018-11-05 09:57:30,2018-11-05 09:57:30
https://api.github.com/repos/hyperledger/iroha/issues/1830,https://api.github.com/repos/hyperledger/iroha/issues/comments/436150693,https://github.com/hyperledger/iroha/pull/1830#issuecomment-436150693,nickaleks,@bakhtin 👍 ,2018-11-06 07:00:21,2018-11-06 07:00:21
https://api.github.com/repos/hyperledger/iroha/issues/1828,https://api.github.com/repos/hyperledger/iroha/issues/comments/435584606,https://github.com/hyperledger/iroha/pull/1828#issuecomment-435584606,l4l,Moved to #1829 ,2018-11-03 12:36:18,2018-11-03 12:36:18
https://api.github.com/repos/hyperledger/iroha/issues/1827,https://api.github.com/repos/hyperledger/iroha/issues/comments/435584628,https://github.com/hyperledger/iroha/pull/1827#issuecomment-435584628,muratovv,"I missed this part in the review. I think better to add comments for the interface targets in `libs/common/CMakeLists.txt`. I expect something like this:

```
add_library(libs_timeout INTERFACE
	# timeout.hpp
	)
```
This approach will improve understating what dependency you require and helpful in further refactorings.

Thank you.",2018-11-03 12:36:48,2018-11-03 12:36:48
https://api.github.com/repos/hyperledger/iroha/issues/1825,https://api.github.com/repos/hyperledger/iroha/issues/comments/435399082,https://github.com/hyperledger/iroha/pull/1825#issuecomment-435399082,neewy,Is closed since this branch has failed DCO checks,2018-11-02 14:32:04,2018-11-02 14:32:04
https://api.github.com/repos/hyperledger/iroha/issues/1824,https://api.github.com/repos/hyperledger/iroha/issues/comments/448104411,https://github.com/hyperledger/iroha/pull/1824#issuecomment-448104411,lebdron,Fixed in https://github.com/hyperledger/iroha/pull/1914 . Please reopen if there are any issues with the `delay.hpp` in that pull request.,2018-12-18 05:47:29,2018-12-18 05:47:29
https://api.github.com/repos/hyperledger/iroha/issues/1823,https://api.github.com/repos/hyperledger/iroha/issues/comments/434586930,https://github.com/hyperledger/iroha/pull/1823#issuecomment-434586930,luckychess,https://gist.github.com/luckychess/512b26ea5cccee8d02ca0cecd3ba5565,2018-10-31 07:24:58,2018-10-31 07:24:58
https://api.github.com/repos/hyperledger/iroha/issues/1822,https://api.github.com/repos/hyperledger/iroha/issues/comments/434379109,https://github.com/hyperledger/iroha/pull/1822#issuecomment-434379109,l4l,"1. There's gcc8/clang7
2. Would be nice to support CI building with the older compilers as well",2018-10-30 16:45:13,2018-10-30 16:45:21
https://api.github.com/repos/hyperledger/iroha/issues/1822,https://api.github.com/repos/hyperledger/iroha/issues/comments/434652716,https://github.com/hyperledger/iroha/pull/1822#issuecomment-434652716,bakhtin,"1. Yep, but the requirement is to compile Iroha with these three compilers: gcc-5, gcc-7, clan-6. You can get more details from @muratovv or @lebdron.
2. That is the first step for enabling these compilers in CI.",2018-10-31 11:29:45,2018-10-31 11:29:45
https://api.github.com/repos/hyperledger/iroha/issues/1819,https://api.github.com/repos/hyperledger/iroha/issues/comments/455158592,https://github.com/hyperledger/iroha/pull/1819#issuecomment-455158592,neewy,Closing stale PRs,2019-01-17 12:41:55,2019-01-17 12:41:55
https://api.github.com/repos/hyperledger/iroha/issues/1817,https://api.github.com/repos/hyperledger/iroha/issues/comments/434071911,https://github.com/hyperledger/iroha/pull/1817#issuecomment-434071911,l4l,"```
The following tests FAILED:

	 10 - module_postgres_executor_test (Failed)
```

:(",2018-10-29 20:42:37,2018-10-29 20:42:37
https://api.github.com/repos/hyperledger/iroha/issues/1816,https://api.github.com/repos/hyperledger/iroha/issues/comments/439890517,https://github.com/hyperledger/iroha/pull/1816#issuecomment-439890517,MBoldyrev,The [task](https://soramitsu.atlassian.net/browse/IR-1789) was canceled.,2018-11-19 13:21:47,2018-11-19 13:21:47
https://api.github.com/repos/hyperledger/iroha/issues/1811,https://api.github.com/repos/hyperledger/iroha/issues/comments/434753366,https://github.com/hyperledger/iroha/pull/1811#issuecomment-434753366,igor-egorov,"### Be careful
it is unsafe to use mst without future fixes

Iroha built from this branch can infinitely apply the same transaction when MST is enabled. Thus, single transfer asset issued by a client can be repeated every consensus round (several seconds) again and again till the transaction will be considered stateful invalid.
That behaviour will be fixed in upcoming pull requests.",2018-10-31 16:24:17,2018-10-31 16:24:17
https://api.github.com/repos/hyperledger/iroha/issues/1811,https://api.github.com/repos/hyperledger/iroha/issues/comments/439821691,https://github.com/hyperledger/iroha/pull/1811#issuecomment-439821691,l4l,Plz refactor with constants introduced in #1766 ,2018-11-19 09:13:24,2018-11-19 09:13:24
https://api.github.com/repos/hyperledger/iroha/issues/1811,https://api.github.com/repos/hyperledger/iroha/issues/comments/455990797,https://github.com/hyperledger/iroha/pull/1811#issuecomment-455990797,neewy,"We will close this pull request because it is stale. However, as the changes are important we'll include work items to refactor this code to JIRA backlog and merge changes gradually. ",2019-01-21 08:42:20,2019-01-21 08:42:20
https://api.github.com/repos/hyperledger/iroha/issues/1802,https://api.github.com/repos/hyperledger/iroha/issues/comments/432222782,https://github.com/hyperledger/iroha/pull/1802#issuecomment-432222782,MBoldyrev,поторопился ребейзить на дев..,2018-10-23 12:18:35,2018-10-23 12:18:35
https://api.github.com/repos/hyperledger/iroha/issues/1802,https://api.github.com/repos/hyperledger/iroha/issues/comments/432224988,https://github.com/hyperledger/iroha/pull/1802#issuecomment-432224988,MBoldyrev,this was meant for [#1785](https://github.com/hyperledger/iroha/pull/1785),2018-10-23 12:26:04,2018-10-23 12:26:24
https://api.github.com/repos/hyperledger/iroha/issues/1801,https://api.github.com/repos/hyperledger/iroha/issues/comments/432220258,https://github.com/hyperledger/iroha/pull/1801#issuecomment-432220258,MBoldyrev,wrong branch,2018-10-23 12:09:55,2018-10-23 12:09:55
https://api.github.com/repos/hyperledger/iroha/issues/1799,https://api.github.com/repos/hyperledger/iroha/issues/comments/433309734,https://github.com/hyperledger/iroha/pull/1799#issuecomment-433309734,nickaleks,"Also, if possible, remove shared_model_proto_backend from ametsuchi dependencies in CMake",2018-10-26 07:10:17,2018-10-26 07:10:17
https://api.github.com/repos/hyperledger/iroha/issues/1798,https://api.github.com/repos/hyperledger/iroha/issues/comments/431653636,https://github.com/hyperledger/iroha/pull/1798#issuecomment-431653636,l4l,Consider fixing CI,2018-10-21 09:39:55,2018-10-21 09:39:55
https://api.github.com/repos/hyperledger/iroha/issues/1793,https://api.github.com/repos/hyperledger/iroha/issues/comments/433886021,https://github.com/hyperledger/iroha/pull/1793#issuecomment-433886021,igor-egorov,"to @l4l,
I don't think that it is possible to construct the same object at the same time from two threads
so now, it is kind of safe",2018-10-29 12:06:47,2018-10-29 12:06:47
https://api.github.com/repos/hyperledger/iroha/issues/1789,https://api.github.com/repos/hyperledger/iroha/issues/comments/430603200,https://github.com/hyperledger/iroha/pull/1789#issuecomment-430603200,bakhtin,Do you use bindings generated with Java from that image? Or use this image directly?,2018-10-17 12:11:04,2018-10-17 12:11:04
https://api.github.com/repos/hyperledger/iroha/issues/1789,https://api.github.com/repos/hyperledger/iroha/issues/comments/430606223,https://github.com/hyperledger/iroha/pull/1789#issuecomment-430606223,Warchant,"No, but it is not a good idea to migrate to newer java version with no reason",2018-10-17 12:21:19,2018-10-17 12:21:19
https://api.github.com/repos/hyperledger/iroha/issues/1789,https://api.github.com/repos/hyperledger/iroha/issues/comments/430611863,https://github.com/hyperledger/iroha/pull/1789#issuecomment-430611863,bakhtin,"As long as Java update would not break anything for SORA team, I'll keep this version bump. Having the most recent version of the software is always a good practice.",2018-10-17 12:39:52,2018-10-17 12:39:52
https://api.github.com/repos/hyperledger/iroha/issues/1789,https://api.github.com/repos/hyperledger/iroha/issues/comments/430794776,https://github.com/hyperledger/iroha/pull/1789#issuecomment-430794776,l4l,"Agree there's no need to bump java version. It's even better use the lower possible version of it, since it's completely backward compatible but not vice versa",2018-10-17 21:23:42,2018-10-17 21:23:42
https://api.github.com/repos/hyperledger/iroha/issues/1789,https://api.github.com/repos/hyperledger/iroha/issues/comments/435009776,https://github.com/hyperledger/iroha/pull/1789#issuecomment-435009776,neewy,"@bakhtin did you check that bindings, generated with this version, actually work?",2018-11-01 11:16:11,2018-11-01 11:16:11
https://api.github.com/repos/hyperledger/iroha/issues/1789,https://api.github.com/repos/hyperledger/iroha/issues/comments/435284814,https://github.com/hyperledger/iroha/pull/1789#issuecomment-435284814,bakhtin,"I checked it can be compiled. Although, not tried them to interact with Iroha instance",2018-11-02 06:32:37,2018-11-02 06:32:53
https://api.github.com/repos/hyperledger/iroha/issues/1789,https://api.github.com/repos/hyperledger/iroha/issues/comments/444801064,https://github.com/hyperledger/iroha/pull/1789#issuecomment-444801064,bakhtin,`ppa:webupd8team/java` is now live (it was down for some time) again. And Java 9 has reached EOL. As Java 8 is LTS we'll stick to this version for now. I'm closing this PR,2018-12-06 09:08:38,2018-12-06 09:08:38
https://api.github.com/repos/hyperledger/iroha/issues/1788,https://api.github.com/repos/hyperledger/iroha/issues/comments/432216281,https://github.com/hyperledger/iroha/pull/1788#issuecomment-432216281,MBoldyrev,"The change including adding of mock peers grows big, and I will submit it in another PR.",2018-10-23 11:55:41,2018-10-23 11:55:41
https://api.github.com/repos/hyperledger/iroha/issues/1787,https://api.github.com/repos/hyperledger/iroha/issues/comments/430787326,https://github.com/hyperledger/iroha/pull/1787#issuecomment-430787326,l4l,Looks quite similar to #1731,2018-10-17 20:58:14,2018-10-17 20:58:14
https://api.github.com/repos/hyperledger/iroha/issues/1787,https://api.github.com/repos/hyperledger/iroha/issues/comments/430930340,https://github.com/hyperledger/iroha/pull/1787#issuecomment-430930340,nickaleks,"@l4l Yes, but I need these changes asap as to work further. #1731 Is big and will take some time get merged.",2018-10-18 08:56:27,2018-10-18 08:56:27
https://api.github.com/repos/hyperledger/iroha/issues/1787,https://api.github.com/repos/hyperledger/iroha/issues/comments/430949949,https://github.com/hyperledger/iroha/pull/1787#issuecomment-430949949,l4l,"<details><summary>offtop but true</summary>
<img src=""https://media.makeameme.org/created/merge-conflicts-as.jpg""/>
</details>",2018-10-18 09:59:24,2018-10-18 09:59:24
https://api.github.com/repos/hyperledger/iroha/issues/1785,https://api.github.com/repos/hyperledger/iroha/issues/comments/432974189,https://github.com/hyperledger/iroha/pull/1785#issuecomment-432974189,muratovv,"Also, pls add TODO(and task) for fixing dependencies of mst_processor_test",2018-10-25 09:08:42,2018-10-25 09:08:42
https://api.github.com/repos/hyperledger/iroha/issues/1781,https://api.github.com/repos/hyperledger/iroha/issues/comments/429792539,https://github.com/hyperledger/iroha/pull/1781#issuecomment-429792539,bakhtin,"Please, also review existing docs on running Iroha in Docker and change it accordingly if anything has changed",2018-10-15 10:25:15,2018-10-15 10:25:15
https://api.github.com/repos/hyperledger/iroha/issues/1781,https://api.github.com/repos/hyperledger/iroha/issues/comments/441693359,https://github.com/hyperledger/iroha/pull/1781#issuecomment-441693359,Warchant,Not relevant any more,2018-11-26 16:02:35,2018-11-26 16:02:35
https://api.github.com/repos/hyperledger/iroha/issues/1776,https://api.github.com/repos/hyperledger/iroha/issues/comments/440234143,https://github.com/hyperledger/iroha/pull/1776#issuecomment-440234143,igor-egorov,DO NOT DELETE the branch,2018-11-20 11:03:08,2018-11-20 11:03:08
https://api.github.com/repos/hyperledger/iroha/issues/1770,https://api.github.com/repos/hyperledger/iroha/issues/comments/429538339,https://github.com/hyperledger/iroha/pull/1770#issuecomment-429538339,l4l,Please update your branch and make sure that CI become green,2018-10-13 12:35:39,2018-10-13 12:35:39
https://api.github.com/repos/hyperledger/iroha/issues/1770,https://api.github.com/repos/hyperledger/iroha/issues/comments/430204455,https://github.com/hyperledger/iroha/pull/1770#issuecomment-430204455,l4l,"Roses are red,
Violets are blue
and red CI saddens you",2018-10-16 11:38:46,2018-10-16 11:38:46
https://api.github.com/repos/hyperledger/iroha/issues/1768,https://api.github.com/repos/hyperledger/iroha/issues/comments/447235464,https://github.com/hyperledger/iroha/pull/1768#issuecomment-447235464,bakhtin,work in now in progress in `trunk/ansible-rewrite`. These changes will also be considered there,2018-12-14 07:06:47,2018-12-14 07:06:47
https://api.github.com/repos/hyperledger/iroha/issues/1766,https://api.github.com/repos/hyperledger/iroha/issues/comments/429538827,https://github.com/hyperledger/iroha/pull/1766#issuecomment-429538827,l4l,Please prefer updating your branch (aka `git fetch origin dev:dev && git merge dev`) instead of rebasing. Otherwise it's hard to review fixes,2018-10-13 12:42:26,2018-10-13 12:49:32
https://api.github.com/repos/hyperledger/iroha/issues/1766,https://api.github.com/repos/hyperledger/iroha/issues/comments/431563755,https://github.com/hyperledger/iroha/pull/1766#issuecomment-431563755,MBoldyrev,rebased the commits,2018-10-20 09:13:02,2018-10-20 09:13:02
https://api.github.com/repos/hyperledger/iroha/issues/1763,https://api.github.com/repos/hyperledger/iroha/issues/comments/427756684,https://github.com/hyperledger/iroha/pull/1763#issuecomment-427756684,igor-egorov,... and DCO signature is missing for the first two commits,2018-10-08 08:30:59,2018-10-08 08:30:59
https://api.github.com/repos/hyperledger/iroha/issues/1763,https://api.github.com/repos/hyperledger/iroha/issues/comments/428562889,https://github.com/hyperledger/iroha/pull/1763#issuecomment-428562889,neewy,"@igor-egorov @Solonets before merging this PR we need to check if it can break down existing blockstores. So if you merge it please notify everyone in advance over Telegram/Rocketchat
",2018-10-10 13:03:39,2018-10-10 13:03:39
https://api.github.com/repos/hyperledger/iroha/issues/1763,https://api.github.com/repos/hyperledger/iroha/issues/comments/434759589,https://github.com/hyperledger/iroha/pull/1763#issuecomment-434759589,igor-egorov,Please notify our community when merged,2018-10-31 16:40:17,2018-10-31 16:40:17
https://api.github.com/repos/hyperledger/iroha/issues/1763,https://api.github.com/repos/hyperledger/iroha/issues/comments/444826942,https://github.com/hyperledger/iroha/pull/1763#issuecomment-444826942,neewy,Duplicated in https://github.com/hyperledger/iroha/pull/1916 this pull request,2018-12-06 10:36:17,2018-12-06 10:36:17
https://api.github.com/repos/hyperledger/iroha/issues/1761,https://api.github.com/repos/hyperledger/iroha/issues/comments/431029685,https://github.com/hyperledger/iroha/pull/1761#issuecomment-431029685,igor-egorov,CI fail was caused by a separate bug that is fixed in https://github.com/hyperledger/iroha/pull/1793,2018-10-18 14:25:48,2018-10-18 14:25:48
https://api.github.com/repos/hyperledger/iroha/issues/1755,https://api.github.com/repos/hyperledger/iroha/issues/comments/426627208,https://github.com/hyperledger/iroha/pull/1755#issuecomment-426627208,l4l,"Imo it's better solve with a spinlock, e.g:

```
auto timeout = now() + 20s; // should be really big
while (not iroha_process_->running() && now() < timeout);
ASSERT_TRUE(iroha_process_->running());
```
",2018-10-03 12:56:12,2018-10-03 12:56:12
https://api.github.com/repos/hyperledger/iroha/issues/1755,https://api.github.com/repos/hyperledger/iroha/issues/comments/426632924,https://github.com/hyperledger/iroha/pull/1755#issuecomment-426632924,Solonets,"@l4l you have to insure that iroha have been initialized and started to listen the port, not that process have been started, for this we need to track irohad output",2018-10-03 13:14:57,2018-10-03 13:14:57
https://api.github.com/repos/hyperledger/iroha/issues/1755,https://api.github.com/repos/hyperledger/iroha/issues/comments/426643781,https://github.com/hyperledger/iroha/pull/1755#issuecomment-426643781,l4l,Indeed. I guess this task should be solved with the healthcheck issue in future,2018-10-03 13:47:40,2018-10-03 13:47:40
https://api.github.com/repos/hyperledger/iroha/issues/1753,https://api.github.com/repos/hyperledger/iroha/issues/comments/426577710,https://github.com/hyperledger/iroha/pull/1753#issuecomment-426577710,lebdron,"Since pr-head CI was successful, it seems that test which failed in branch is not deterministic. This has to be investigated in a separate task.",2018-10-03 09:56:22,2018-10-03 09:56:22
https://api.github.com/repos/hyperledger/iroha/issues/1749,https://api.github.com/repos/hyperledger/iroha/issues/comments/429538726,https://github.com/hyperledger/iroha/pull/1749#issuecomment-429538726,l4l,CI is red :(,2018-10-13 12:40:43,2018-10-13 12:40:43
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/426528630,https://github.com/hyperledger/iroha/issues/1748#issuecomment-426528630,truongnmt,"I just tuning some parameter here is what I got.

First attempt:
```
max_proposal_size: 50
proposal_delay: 7000
vote_delay: 100
300 threads, ramp-up 5 seconds (meaning that it take 5 seconds for all thread to send request. So roughly ~60 tx/s)
Error rate: 96%
```
![screenshot from 2018-10-03 11-22-24](https://user-images.githubusercontent.com/11817656/46394097-33f78b80-c712-11e8-980c-81e47f3433cd.png)


Second attempt:
```
max_proposal_size: 200
proposal_delay: 7000
vote_delay: 100
300 threads, ramp-up 5 seconds
Error rate: 96%
```
![screenshot from 2018-10-03 12-58-23](https://user-images.githubusercontent.com/11817656/46394113-4376d480-c712-11e8-9f59-84d78d976924.png)


Third attempt:
```
max_proposal_size: 300
proposal_delay: 10000
vote_delay: 100
300 threads, ramp-up 5 seconds
Error rate: 97%
```
![screenshot from 2018-10-03 13-29-03](https://user-images.githubusercontent.com/11817656/46394148-6608ed80-c712-11e8-9716-948e3922b34b.png)


Fourth attempt:
```
max_proposal_size: 300
proposal_delay: 1000
vote_delay: 100
300 threads, ramp-up 5 seconds
Error rate: 70.47%
```
![screenshot from 2018-10-03 13-51-56](https://user-images.githubusercontent.com/11817656/46394662-f4ca3a00-c713-11e8-8dad-31a29c9a399a.png)

**Fifth attempt:**
```
max_proposal_size: 300
proposal_delay: 500
vote_delay: 100
300 threads, ramp-up 5 seconds
Error rate: 35%
```
![screenshot from 2018-10-03 14-02-33](https://user-images.githubusercontent.com/11817656/46395245-f268df80-c715-11e8-9958-838cad79bd09.png)

No.6 attempt:
```
max_proposal_size: 300
proposal_delay: 100
vote_delay: 100
300 threads, ramp-up 5 seconds
Error rate: 81.54% :(
```
![screenshot from 2018-10-03 14-11-15](https://user-images.githubusercontent.com/11817656/46395336-35c34e00-c716-11e8-8147-14614d17e69a.png)
",2018-10-03 06:44:10,2018-10-03 07:11:27
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/426534797,https://github.com/hyperledger/iroha/issues/1748#issuecomment-426534797,truongnmt,"Notice that on No. 6 attempt, I got error:
```
[2018-10-03 07:06:12.498330740][th:1261][warning] BlockLoaderImpl Block not found
[2018-10-03 07:06:12.499745529][th:1261][error] YacGate Could not get block from block loader
```
After this error, Iroha no recieve any request, even I restart Iroha instance, it said:
```
[2018-10-03 07:15:19.669143938][th:998][info] AsyncGrpcClient transactions in proposal: 1
[2018-10-03 07:15:19.669978975][th:998][info] OrderingGate Received new proposal, height: 864
```
It keep saying that and increasing height after I send request again.",2018-10-03 07:13:20,2018-10-03 07:30:14
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/427146193,https://github.com/hyperledger/iroha/issues/1748#issuecomment-427146193,l4l,"That amazing research you've done, thank you!
But still there's some lack of information to conclude and understand the core of the issues.

> 1 host with 4 peers (nodes)

Am I correct that you've launched one aws instance and 4 iroha peers on it? That may cause thread scheduling, memory exhausting and numerous of other issues.
Also where was the client launched? (on the same aws instance or outside)

> I setup a scenario using JMeter ... error rate 95%

I'm not familiar with that tool. Could you explain what does ""error rate"" means in this particular context? Dropped network packets, cancels on OSI application level or smth else?

Any other additional info might be really helpful, so feel free anything other info (even if you consider is barely useful)!",2018-10-04 19:46:46,2018-10-04 19:46:46
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/427566992,https://github.com/hyperledger/iroha/issues/1748#issuecomment-427566992,truongnmt,"Sorry for my late response. 
> 1 host with 4 peers (nodes)

Yes one aws instance and 4 iroha peers. I setup JMeter (client) on my localhost. In AWS instance I setup Iroha and Iroha Python SDK with Flask server API to hander user request.

I did a test with 4 AWS instances, each has 1 peer. But I didn't notice any different in comparison with 1 instance 4 peers.

I think the reason is this. During a heavy load, due to the waiting time too long (either because of max_proposal_size or proposal_delay), most of the request go timeout. While the time to process transactions is very fast. With the default config: 
```
""max_proposal_size"" : 10,
""proposal_delay"" : 5000,
""vote_delay"" : 5000,
""load_delay"" : 5000
```
I using Postman to send request to server, it takes 10s to complete. With 100 concurrent user, timeout is inevitable. So with this config:
```
max_proposal_size: 300
proposal_delay: 500
vote_delay: 100,
load_delay: 5000
```
The request only take 600-800ms @@. That's nut! 

About the JMeter, that is a tool to test web performance. So I setup an scenario that 300 user will create account. Just provide params, host web server IP and it will run it for you. Success request will return status 200. The rest (501, 502 ...) is fail. So the error rate is the percent of failure request in total.",2018-10-06 11:37:18,2018-10-06 11:37:33
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/429899538,https://github.com/hyperledger/iroha/issues/1748#issuecomment-429899538,truongnmt,"```
max_proposal_size: 300
proposal_delay: 500
vote_delay: 100,
load_delay: 5000
```
As I running with this params value for a while, I just got [this bug](https://soramitsu.atlassian.net/browse/IR-1737) without any peer shut down. Maybe `vote_delay` too fast that it haven't appear on another peer yet?

![screenshot-1](https://user-images.githubusercontent.com/11817656/46960819-8dc06400-d0c9-11e8-922d-420dfb300ed4.png)
",2018-10-15 15:26:00,2018-10-15 15:28:00
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/430210086,https://github.com/hyperledger/iroha/issues/1748#issuecomment-430210086,nickaleks,"Hi, regarding any performance numbers, we are currently in the process of optimization transactions.
Currently, we do not have a precise number to show. Latest dev branch can have about 300 tx/sec of throughput.

Regarding your benchmark, could you please specify how many transactions/sec did you send to iroha? Did you send them to a single peer or a whole network?

Regarding the bug you encountered, we are currently looking into it, please expect fixes to be in the dev branch soon.",2018-10-16 12:00:07,2018-10-16 12:00:07
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/430926191,https://github.com/hyperledger/iroha/issues/1748#issuecomment-430926191,TranBaVinhSon,"@nickaleks Could you send me a configuration for `300 tx/sec`?
how many peers, hosts, `config.docker` file...etc ",2018-10-18 08:43:28,2018-10-18 08:43:28
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/432200780,https://github.com/hyperledger/iroha/issues/1748#issuecomment-432200780,nickaleks,"Unfortunately, this number is not confirmed right now. As soon as we have a benchmark to show, It will be published.",2018-10-23 11:00:41,2018-10-23 11:00:41
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/433002003,https://github.com/hyperledger/iroha/issues/1748#issuecomment-433002003,truongnmt,"Again, reading about the [configuration tips](https://iroha.readthedocs.io/en/latest/guides/configuration.html#environment-specific-parameters) and try to implement as suggested: raise `max_proposal_size` and `proposal_delay` on handle a lot of transactions.

Here is my setting: 
max_proposal_size: 400
proposal_delay: 5000
vote_delay: 400

Here is the result with an individual request using Postman: **6-9s**.

Using jmeter tool, I sent **400 transactions** in 1 second and here is the result:
<img width=""870"" alt=""screen shot 2018-10-25 at 17 20 10"" src=""https://user-images.githubusercontent.com/11817656/47494538-1d110880-d87c-11e8-8a17-5b734acc1161.png"">

**95%** of the transactions failed. If I understand correctly, `max_proposal_size: 400` and
`proposal_delay: 5000` means that on receiving >400 transactions *or* after 5s, all transactions will be processed at once. I wonder why first 268 transactions failed already? It should have wait  🤔

![image](https://user-images.githubusercontent.com/11817656/47493844-7841fb80-d87a-11e8-9671-d6eea4c92cb3.png)

>Regarding your benchmark, could you please specify how many transactions/sec did you send to iroha? Did you send them to a single peer or a whole network?

I sent total 400 transactions in 1 second. I have 4 peers and I sent randomly between 4 peers.",2018-10-25 10:38:51,2018-10-25 10:40:03
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/433003288,https://github.com/hyperledger/iroha/issues/1748#issuecomment-433003288,nickaleks,Are you sure your transactions are correct? What is the response status of those transactions?,2018-10-25 10:43:44,2018-10-25 10:43:44
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/433006027,https://github.com/hyperledger/iroha/issues/1748#issuecomment-433006027,truongnmt,"Yes I'm sure all transactions are correct. I create random user name so no one has the same name. Here is a sample response:

```
Thread Name: Create user 1-157
Sample Start: 2018-10-25 17:18:54 ICT
Load time: 384
Connect Time: 192
Latency: 384
Size in bytes: 348
Sent bytes:163
Headers size in bytes: 166
Body size in bytes: 182
Sample Count: 1
Error Count: 1
Data type (""text""|""bin""|""""): text
Response code: 502
Response message: Bad Gateway


HTTPSampleResult fields:
ContentType: text/html
DataEncoding: null
```

All failed transactions has the same response, 502 Bad gateway.",2018-10-25 10:54:32,2018-10-25 10:54:32
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/433014880,https://github.com/hyperledger/iroha/issues/1748#issuecomment-433014880,truongnmt,"Here is error log on nginx:  /var/log/nginx/error.log

```
2018/10/25 11:16:11 [error] 31138#31138: *4406 connect() to unix:/home/ubuntu/iroha/app.sock failed
(11: Resource temporarily unavailable) while connecting to upstream, client: <client_request_ip>,
server: <host IP>, request: ""GET <api_link> HTTP/1.1"", upstream:
""http://unix:/home/ubuntu/iroha/app.sock:<api_link>"", host: ""<host IP>""
```",2018-10-25 11:27:58,2018-10-25 11:28:23
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/433017856,https://github.com/hyperledger/iroha/issues/1748#issuecomment-433017856,truongnmt,"Oh I think I figured it out, wait me a second @@ ",2018-10-25 11:39:43,2018-10-25 11:39:43
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/433602496,https://github.com/hyperledger/iroha/issues/1748#issuecomment-433602496,truongnmt,"I think I could solve half of the problem.

> I wonder why first 268 transactions failed already? It should have wait 🤔
![image](https://user-images.githubusercontent.com/11817656/47601251-08f21600-d9f8-11e8-8463-93ee49418d0b.png)

So I inscrease the value of `somaxconn`. Simply put, the `somaxconn` is the maximum number of queued connections we want on a socket. This `somaxconn` specifies how long we want this line to be. If more clients attempt to connect to our server, more than the backlog, those connections will be dropped. 

=> `$ sudo nano /proc/sys/net/core/somaxconn` and increase from 128 to 20000. 

So all connections will be placed on queue to be processed. This is what I got:

<img width=""941"" alt=""screen shot 2018-10-27 at 15 13 08"" src=""https://user-images.githubusercontent.com/11817656/47601694-97699600-d9fe-11e8-8173-a22dc041ae3b.png"">

If my understanding is true, why I send all 400 transaction at once but Iroha only return result 3 requests each time, 3 requests on 11s, 3 requests on 25s and 3 requests on 39s. I think I should have result of all 400 requests at once, since all of them are processed in one chunk? 🤔",2018-10-27 08:37:21,2018-10-27 08:40:35
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/455119538,https://github.com/hyperledger/iroha/issues/1748#issuecomment-455119538,LiraLemur,This is being worked on :) https://jira.hyperledger.org/browse/IR-17 - here's the link,2019-01-17 10:21:05,2019-01-17 10:21:05
https://api.github.com/repos/hyperledger/iroha/issues/1748,https://api.github.com/repos/hyperledger/iroha/issues/comments/455120323,https://github.com/hyperledger/iroha/issues/1748#issuecomment-455120323,truongnmt,Appriciated! Keep up the hard work! 💪💪💪 ,2019-01-17 10:23:27,2019-01-17 10:23:27
https://api.github.com/repos/hyperledger/iroha/issues/1747,https://api.github.com/repos/hyperledger/iroha/issues/comments/433168924,https://github.com/hyperledger/iroha/issues/1747#issuecomment-433168924,lebdron,Fixed in https://github.com/hyperledger/iroha/pull/1792,2018-10-25 19:03:58,2018-10-25 19:03:58
https://api.github.com/repos/hyperledger/iroha/issues/1742,https://api.github.com/repos/hyperledger/iroha/issues/comments/465507438,https://github.com/hyperledger/iroha/pull/1742#issuecomment-465507438,neewy,This pull request introduces unwanted changes to API,2019-02-20 10:01:41,2019-02-20 10:01:41
https://api.github.com/repos/hyperledger/iroha/issues/1739,https://api.github.com/repos/hyperledger/iroha/issues/comments/424600125,https://github.com/hyperledger/iroha/pull/1739#issuecomment-424600125,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L74](https://github.com/hyperledger/iroha/blob/ace53b2ccc79ae0f80f265dbb003f9d519f0b861/irohad/ametsuchi/impl/postgres_block_query.hpp#L74): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L82](https://github.com/hyperledger/iroha/blob/ace53b2ccc79ae0f80f265dbb003f9d519f0b861/irohad/ametsuchi/impl/postgres_block_query.hpp#L82): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L92](https://github.com/hyperledger/iroha/blob/ace53b2ccc79ae0f80f265dbb003f9d519f0b861/irohad/ametsuchi/impl/postgres_block_query.hpp#L92): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_query.hpp#L104](https://github.com/hyperledger/iroha/blob/ace53b2ccc79ae0f80f265dbb003f9d519f0b861/irohad/ametsuchi/impl/postgres_wsv_query.hpp#L104): Unused private function: 'PostgresWsvQuery::fromResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-26 06:28:58,2018-09-26 06:28:58
https://api.github.com/repos/hyperledger/iroha/issues/1738,https://api.github.com/repos/hyperledger/iroha/issues/comments/424304520,https://github.com/hyperledger/iroha/pull/1738#issuecomment-424304520,laSinteZ,"Now there is no warning, but (if you check status streaming) now there is 1 additional stateless check.

Before:
`7 -> 9 -> 3 -> 1 -> 5`

Now:
`7 -> 9 -> 3 -> 1 -> 5`
`7 -> 9 -> 1 -> 3 -> 1 -> 5`

Seems like this change is for good (since there is a stateless check before stateful) and maybe the bug present longer (since there is a stateful check before stateless, thus 3 -> 1)",2018-09-25 11:20:42,2018-09-25 11:20:49
https://api.github.com/repos/hyperledger/iroha/issues/1738,https://api.github.com/repos/hyperledger/iroha/issues/comments/424307535,https://github.com/hyperledger/iroha/pull/1738#issuecomment-424307535,laSinteZ,"Well, now it is 
`7 -> 9 -> 1 -> 3 -> 5`",2018-09-25 11:33:08,2018-09-25 11:34:38
https://api.github.com/repos/hyperledger/iroha/issues/1737,https://api.github.com/repos/hyperledger/iroha/issues/comments/425014073,https://github.com/hyperledger/iroha/pull/1737#issuecomment-425014073,igor-egorov,Some extra time is required to solve the testing methodology problem with multisig_tx_pipeline_test.,2018-09-27 08:57:54,2018-09-27 08:57:54
https://api.github.com/repos/hyperledger/iroha/issues/1736,https://api.github.com/repos/hyperledger/iroha/issues/comments/425136417,https://github.com/hyperledger/iroha/pull/1736#issuecomment-425136417,bakhtin,We have issues having all the dependencies in separate directories. Mitigation needed,2018-09-27 15:27:49,2018-09-27 15:27:49
https://api.github.com/repos/hyperledger/iroha/issues/1732,https://api.github.com/repos/hyperledger/iroha/issues/comments/424244393,https://github.com/hyperledger/iroha/pull/1732#issuecomment-424244393,l4l,Seems CI doesn't agree with you,2018-09-25 07:59:12,2018-09-25 07:59:19
https://api.github.com/repos/hyperledger/iroha/issues/1732,https://api.github.com/repos/hyperledger/iroha/issues/comments/430965085,https://github.com/hyperledger/iroha/pull/1732#issuecomment-430965085,MBoldyrev,rebased the revert and the fix,2018-10-18 10:55:21,2018-10-18 10:55:21
https://api.github.com/repos/hyperledger/iroha/issues/1730,https://api.github.com/repos/hyperledger/iroha/issues/comments/423729188,https://github.com/hyperledger/iroha/pull/1730#issuecomment-423729188,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [consensus_sunny_day.cpp#L73](https://github.com/hyperledger/iroha/blob/0dbd8370ae275ae10e11484f1a3e3391fe951961/test/integration/consensus/consensus_sunny_day.cpp#L73): Variable 'my_peer' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-22 09:05:26,2018-09-22 09:05:26
https://api.github.com/repos/hyperledger/iroha/issues/1727,https://api.github.com/repos/hyperledger/iroha/issues/comments/423949057,https://github.com/hyperledger/iroha/pull/1727#issuecomment-423949057,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L74](https://github.com/hyperledger/iroha/blob/24643a79574032c1f078fef964421a6edd0420bc/irohad/ametsuchi/impl/postgres_block_query.hpp#L74): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L82](https://github.com/hyperledger/iroha/blob/24643a79574032c1f078fef964421a6edd0420bc/irohad/ametsuchi/impl/postgres_block_query.hpp#L82): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L92](https://github.com/hyperledger/iroha/blob/24643a79574032c1f078fef964421a6edd0420bc/irohad/ametsuchi/impl/postgres_block_query.hpp#L92): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-24 11:51:49,2018-09-24 11:51:49
https://api.github.com/repos/hyperledger/iroha/issues/1725,https://api.github.com/repos/hyperledger/iroha/issues/comments/422046839,https://github.com/hyperledger/iroha/pull/1725#issuecomment-422046839,lebdron,@kamilsa ~unfortunately it fails in dev~ dev was outdated,2018-09-17 14:47:44,2018-09-17 14:53:09
https://api.github.com/repos/hyperledger/iroha/issues/1724,https://api.github.com/repos/hyperledger/iroha/issues/comments/423826717,https://github.com/hyperledger/iroha/pull/1724#issuecomment-423826717,l4l,Build is failing :(,2018-09-23 16:00:19,2018-09-23 16:00:19
https://api.github.com/repos/hyperledger/iroha/issues/1720,https://api.github.com/repos/hyperledger/iroha/issues/comments/424513148,https://github.com/hyperledger/iroha/pull/1720#issuecomment-424513148,sorabot,"SonarQube analysis reported 3 issues

1. ![MAJOR][MAJOR] [integration_test_framework.cpp#L319](https://github.com/hyperledger/iroha/blob/a27006dd84799f9ad180d04102e7a6b7b5d78a14/test/framework/integration_framework/integration_test_framework.cpp#L319): Reference to auto variable returned. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AreturnReference)
1. ![MINOR][MINOR] [acceptance_fixture.hpp#L162](https://github.com/hyperledger/iroha/blob/a27006dd84799f9ad180d04102e7a6b7b5d78a14/test/integration/acceptance/acceptance_fixture.hpp#L162): The class 'PipelineIntegrationTest' defines member variable with name 'kAdminId' also defined in its parent class 'AcceptanceFixture'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [acceptance_fixture.hpp#L163](https://github.com/hyperledger/iroha/blob/a27006dd84799f9ad180d04102e7a6b7b5d78a14/test/integration/acceptance/acceptance_fixture.hpp#L163): The class 'PipelineIntegrationTest' defines member variable with name 'kAdminKeypair' also defined in its parent class 'AcceptanceFixture'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-25 21:48:23,2018-09-25 21:48:23
https://api.github.com/repos/hyperledger/iroha/issues/1718,https://api.github.com/repos/hyperledger/iroha/issues/comments/421373027,https://github.com/hyperledger/iroha/pull/1718#issuecomment-421373027,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L91](https://github.com/hyperledger/iroha/blob/2bef4ebe68464faedda2b17ed43a5dbbe05075cf/irohad/ordering/impl/ordering_gate_impl.hpp#L91): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-14 14:18:30,2018-09-14 14:18:30
https://api.github.com/repos/hyperledger/iroha/issues/1716,https://api.github.com/repos/hyperledger/iroha/issues/comments/423829820,https://github.com/hyperledger/iroha/pull/1716#issuecomment-423829820,sorabot,"SonarQube analysis reported 1 issue

1. ![MAJOR][MAJOR] [integration_test_framework.cpp#L291](https://github.com/hyperledger/iroha/blob/17c342086538900d3cd62e459da0f106910935b6/test/framework/integration_framework/integration_test_framework.cpp#L291): Reference to auto variable returned. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AreturnReference)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2018-09-23 16:43:13,2018-09-23 16:43:13
https://api.github.com/repos/hyperledger/iroha/issues/1712,https://api.github.com/repos/hyperledger/iroha/issues/comments/420244582,https://github.com/hyperledger/iroha/pull/1712#issuecomment-420244582,l4l,"Decided to delay this issue, since `DetailEntry` need to be separated before and it's not that trivial.",2018-09-11 11:44:26,2018-09-11 11:44:26
https://api.github.com/repos/hyperledger/iroha/issues/1712,https://api.github.com/repos/hyperledger/iroha/issues/comments/426644218,https://github.com/hyperledger/iroha/pull/1712#issuecomment-426644218,l4l,"Outdated, eventually will be reworked",2018-10-03 13:48:47,2018-10-03 13:48:47
https://api.github.com/repos/hyperledger/iroha/issues/1711,https://api.github.com/repos/hyperledger/iroha/issues/comments/420237635,https://github.com/hyperledger/iroha/pull/1711#issuecomment-420237635,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [yac_gate_impl.hpp#L68](https://github.com/hyperledger/iroha/blob/c5c110ff41407250e80487bce533329aa0086d69/irohad/consensus/yac/impl/yac_gate_impl.hpp#L68): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [synchronizer_impl.hpp#L68](https://github.com/hyperledger/iroha/blob/c5c110ff41407250e80487bce533329aa0086d69/irohad/synchronizer/impl/synchronizer_impl.hpp#L68): Unused private function: 'SynchronizerImpl::processApplicableBlock' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [synchronizer_impl.hpp#L78](https://github.com/hyperledger/iroha/blob/c5c110ff41407250e80487bce533329aa0086d69/irohad/synchronizer/impl/synchronizer_impl.hpp#L78): Unused private function: 'SynchronizerImpl::downloadMissingChain' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L62](https://github.com/hyperledger/iroha/blob/c5c110ff41407250e80487bce533329aa0086d69/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L62): The function 'createUnbuildTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L142](https://github.com/hyperledger/iroha/blob/c5c110ff41407250e80487bce533329aa0086d69/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L142): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L338](https://github.com/hyperledger/iroha/blob/c5c110ff41407250e80487bce533329aa0086d69/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L338): Function parameter 'tx' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-11 11:14:56,2018-09-11 11:14:56
https://api.github.com/repos/hyperledger/iroha/issues/1709,https://api.github.com/repos/hyperledger/iroha/issues/comments/423933947,https://github.com/hyperledger/iroha/pull/1709#issuecomment-423933947,neewy,why this is not merged yet??,2018-09-24 10:36:10,2018-09-24 10:36:10
https://api.github.com/repos/hyperledger/iroha/issues/1707,https://api.github.com/repos/hyperledger/iroha/issues/comments/419343662,https://github.com/hyperledger/iroha/pull/1707#issuecomment-419343662,sorabot,"SonarQube analysis reported 1 issue

1. ![MAJOR][MAJOR] [integration_test_framework.cpp#L288](https://github.com/hyperledger/iroha/blob/a60485b9fc3fb91f8e01ea2f0468c6f0f3f058a4/test/framework/integration_framework/integration_test_framework.cpp#L288): Reference to auto variable returned. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AreturnReference)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2018-09-07 07:03:44,2018-09-07 07:03:44
https://api.github.com/repos/hyperledger/iroha/issues/1705,https://api.github.com/repos/hyperledger/iroha/issues/comments/418472097,https://github.com/hyperledger/iroha/pull/1705#issuecomment-418472097,igor-egorov,everything was done as planned,2018-09-04 18:31:40,2018-09-04 18:31:40
https://api.github.com/repos/hyperledger/iroha/issues/1703,https://api.github.com/repos/hyperledger/iroha/issues/comments/418173436,https://github.com/hyperledger/iroha/pull/1703#issuecomment-418173436,sorabot,"SonarQube analysis reported 8 issues

1. ![MINOR][MINOR] [interactive_common_cli.cpp#L43](https://github.com/hyperledger/iroha/blob/2c2be8f36def42b809cbfdc9f6c9b54c61f6bc01/iroha-cli/interactive/impl/interactive_common_cli.cpp#L43): Return value of function to_string() is not used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AignoredReturnValue)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L68](https://github.com/hyperledger/iroha/blob/2c2be8f36def42b809cbfdc9f6c9b54c61f6bc01/irohad/consensus/yac/impl/yac_gate_impl.hpp#L68): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [yac.hpp#L92](https://github.com/hyperledger/iroha/blob/2c2be8f36def42b809cbfdc9f6c9b54c61f6bc01/irohad/consensus/yac/yac.hpp#L92): Unused private function: 'Yac::applyState' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ordering_init.cpp#L59](https://github.com/hyperledger/iroha/blob/2c2be8f36def42b809cbfdc9f6c9b54c61f6bc01/irohad/main/impl/ordering_init.cpp#L59): The function 'initOrderingGate' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [on_demand_ordering_service_impl.hpp#L57](https://github.com/hyperledger/iroha/blob/2c2be8f36def42b809cbfdc9f6c9b54c61f6bc01/irohad/ordering/impl/on_demand_ordering_service_impl.hpp#L57): Unused private function: 'OnDemandOrderingServiceImpl::packNextProposals' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [on_demand_ordering_service_impl.hpp#L64](https://github.com/hyperledger/iroha/blob/2c2be8f36def42b809cbfdc9f6c9b54c61f6bc01/irohad/ordering/impl/on_demand_ordering_service_impl.hpp#L64): Unused private function: 'OnDemandOrderingServiceImpl::tryErase' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L49](https://github.com/hyperledger/iroha/blob/2c2be8f36def42b809cbfdc9f6c9b54c61f6bc01/test/integration/transport/ordering_gate_service_test.cpp#L49): Variable 'factory_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L51](https://github.com/hyperledger/iroha/blob/2c2be8f36def42b809cbfdc9f6c9b54c61f6bc01/test/integration/transport/ordering_gate_service_test.cpp#L51): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-03 18:24:59,2018-09-03 18:24:59
https://api.github.com/repos/hyperledger/iroha/issues/1702,https://api.github.com/repos/hyperledger/iroha/issues/comments/419618670,https://github.com/hyperledger/iroha/pull/1702#issuecomment-419618670,muratovv,"Please, fix tests and solve conflicts before further processing.",2018-09-08 06:58:01,2018-09-08 06:58:01
https://api.github.com/repos/hyperledger/iroha/issues/1702,https://api.github.com/repos/hyperledger/iroha/issues/comments/421943845,https://github.com/hyperledger/iroha/pull/1702#issuecomment-421943845,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L92](https://github.com/hyperledger/iroha/blob/1f54578cfb3adc9db25569204f970a15180c0ce9/irohad/ordering/impl/ordering_gate_impl.hpp#L92): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [proto_transaction_sequence_test.cpp#L19](https://github.com/hyperledger/iroha/blob/1f54578cfb3adc9db25569204f970a15180c0ce9/test/module/shared_model/backend_proto/proto_transaction_sequence_test.cpp#L19): The function 'createAnswerWithErrors' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-17 09:33:09,2018-09-17 09:33:09
https://api.github.com/repos/hyperledger/iroha/issues/1701,https://api.github.com/repos/hyperledger/iroha/issues/comments/424030288,https://github.com/hyperledger/iroha/pull/1701#issuecomment-424030288,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [postgres_command_executor.cpp#L103](https://github.com/hyperledger/iroha/blob/0b23ef513c9272d247c358dad1adf67afcb02122/irohad/ametsuchi/impl/postgres_command_executor.cpp#L103): The scope of the variable 'result' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)
1. ![MINOR][MINOR] [postgres_executor_test.cpp#L105](https://github.com/hyperledger/iroha/blob/0b23ef513c9272d247c358dad1adf67afcb02122/test/module/irohad/ametsuchi/postgres_executor_test.cpp#L105): The class 'RemoveSignatory' defines member variable with name 'pubkey' also defined in its parent class 'CommandExecutorTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-24 16:05:46,2018-09-24 16:05:46
https://api.github.com/repos/hyperledger/iroha/issues/1699,https://api.github.com/repos/hyperledger/iroha/issues/comments/417642171,https://github.com/hyperledger/iroha/pull/1699#issuecomment-417642171,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [transport_builder_test.cpp#L65](https://github.com/hyperledger/iroha/blob/34772c59eeac03ec5f96bb8c18d42bec24fecd13/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L65): The function 'createUnbuildTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L164](https://github.com/hyperledger/iroha/blob/34772c59eeac03ec5f96bb8c18d42bec24fecd13/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L164): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L464](https://github.com/hyperledger/iroha/blob/34772c59eeac03ec5f96bb8c18d42bec24fecd13/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L464): Function parameter 'tx' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-31 11:58:05,2018-08-31 11:58:05
https://api.github.com/repos/hyperledger/iroha/issues/1695,https://api.github.com/repos/hyperledger/iroha/issues/comments/417037959,https://github.com/hyperledger/iroha/pull/1695#issuecomment-417037959,neewy,@lebdron I would consider making a hotfix if this problem persists in master branch,2018-08-29 17:30:30,2018-08-29 17:30:30
https://api.github.com/repos/hyperledger/iroha/issues/1695,https://api.github.com/repos/hyperledger/iroha/issues/comments/417102165,https://github.com/hyperledger/iroha/pull/1695#issuecomment-417102165,igor-egorov,`module_transport_builder_test` has failed on both platforms - Linux and Mac.,2018-08-29 20:53:41,2018-08-29 20:53:41
https://api.github.com/repos/hyperledger/iroha/issues/1695,https://api.github.com/repos/hyperledger/iroha/issues/comments/417235360,https://github.com/hyperledger/iroha/pull/1695#issuecomment-417235360,lebdron,"@neewy Master branch does not contain the affected code, so a hotfix is not required.",2018-08-30 08:29:20,2018-08-30 08:29:20
https://api.github.com/repos/hyperledger/iroha/issues/1695,https://api.github.com/repos/hyperledger/iroha/issues/comments/417257148,https://github.com/hyperledger/iroha/pull/1695#issuecomment-417257148,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [transport_builder_test.cpp#L65](https://github.com/hyperledger/iroha/blob/61d93a920bb3ec12ad15f72f1cca0b9f522be217/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L65): The function 'createUnbuildTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L164](https://github.com/hyperledger/iroha/blob/61d93a920bb3ec12ad15f72f1cca0b9f522be217/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L164): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L464](https://github.com/hyperledger/iroha/blob/61d93a920bb3ec12ad15f72f1cca0b9f522be217/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L464): Function parameter 'tx' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-30 09:39:04,2018-08-30 09:39:04
https://api.github.com/repos/hyperledger/iroha/issues/1695,https://api.github.com/repos/hyperledger/iroha/issues/comments/417287578,https://github.com/hyperledger/iroha/pull/1695#issuecomment-417287578,lebdron,"integration_pipeline_test is not deterministic, as it failed on iteration 29 on a local machine. It is not related to the pull request and will be fixed in another task.",2018-08-30 11:33:51,2018-08-30 11:33:51
https://api.github.com/repos/hyperledger/iroha/issues/1694,https://api.github.com/repos/hyperledger/iroha/issues/comments/418466988,https://github.com/hyperledger/iroha/pull/1694#issuecomment-418466988,l4l,Will be reworked with [new schema](https://gist.github.com/l4l/d9b278001587a3b98b0546e405d933bc),2018-09-04 18:15:17,2018-09-04 18:15:17
https://api.github.com/repos/hyperledger/iroha/issues/1691,https://api.github.com/repos/hyperledger/iroha/issues/comments/448650026,https://github.com/hyperledger/iroha/issues/1691#issuecomment-448650026,kristophor,"the command only takes 2 parameters, need to add account ID or simply remove account ID from parameter description.

    InteractiveTransactionCli::parseAddAssetQuantity(
        std::vector<std::string> params) {
      auto asset_id = params[0];
      auto amount = params[1];
      return generator_.generateAddAssetQuantity(asset_id, amount);
    }",2018-12-19 16:08:25,2018-12-19 16:09:29
https://api.github.com/repos/hyperledger/iroha/issues/1691,https://api.github.com/repos/hyperledger/iroha/issues/comments/448652762,https://github.com/hyperledger/iroha/issues/1691#issuecomment-448652762,kristophor,"the cli code was updated on Sept 18 but from the Iroha document that 
`git clone -b develop https://github.com/hyperledger/iroha --depth=1 `
is getting the code from develop branch that doesn't contain this code.

it seems like the code is not merged.
",2018-12-19 16:15:35,2018-12-19 16:16:31
https://api.github.com/repos/hyperledger/iroha/issues/1691,https://api.github.com/repos/hyperledger/iroha/issues/comments/448655849,https://github.com/hyperledger/iroha/issues/1691#issuecomment-448655849,neewy,"@kristophor we have issues with branches now. They are confusing, as our current development branch is `dev`. We cannot fix this until holidays are over, as HL IT team is away. ",2018-12-19 16:23:51,2018-12-19 16:23:51
https://api.github.com/repos/hyperledger/iroha/issues/1691,https://api.github.com/repos/hyperledger/iroha/issues/comments/448656931,https://github.com/hyperledger/iroha/issues/1691#issuecomment-448656931,kristophor,ok lets update the document to reflect from dev branch instead of develop branch then,2018-12-19 16:26:50,2018-12-19 16:26:50
https://api.github.com/repos/hyperledger/iroha/issues/1691,https://api.github.com/repos/hyperledger/iroha/issues/comments/455110007,https://github.com/hyperledger/iroha/issues/1691#issuecomment-455110007,LiraLemur,"> ok lets update the document to reflect from dev branch instead of develop branch then

@kristophor Hi! I changed the develop to master in documentation (master is being updated regularly now and there is no issue with it). Please try to use it. 

We are moving the issues to Jira now, I'll also move this issue there: https://jira.hyperledger.org/browse/IR-198

And if any questions remain, please contact us in chat: https://chat.hyperledger.org/channel/iroha",2019-01-17 09:51:41,2019-01-17 09:51:41
https://api.github.com/repos/hyperledger/iroha/issues/1691,https://api.github.com/repos/hyperledger/iroha/issues/comments/455365446,https://github.com/hyperledger/iroha/issues/1691#issuecomment-455365446,Baptiste-Leterrier,Glad I could help :D my very first very little contribution ! ,2019-01-17 23:05:31,2019-01-17 23:05:31
https://api.github.com/repos/hyperledger/iroha/issues/1691,https://api.github.com/repos/hyperledger/iroha/issues/comments/455804798,https://github.com/hyperledger/iroha/issues/1691#issuecomment-455804798,l4l,I guess it now can be closed,2019-01-19 18:41:09,2019-01-19 18:41:09
https://api.github.com/repos/hyperledger/iroha/issues/1690,https://api.github.com/repos/hyperledger/iroha/issues/comments/417063105,https://github.com/hyperledger/iroha/pull/1690#issuecomment-417063105,l4l,Consider also `Signature::pubkey` -> `Signature::public_key`,2018-08-29 18:46:28,2018-08-29 18:46:28
https://api.github.com/repos/hyperledger/iroha/issues/1690,https://api.github.com/repos/hyperledger/iroha/issues/comments/417646724,https://github.com/hyperledger/iroha/pull/1690#issuecomment-417646724,sorabot,"SonarQube analysis reported 11 issues
* ![MINOR][MINOR] 11 minor

#### Top 10 issues

1. ![MINOR][MINOR] [transaction.hpp#L30](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/shared_model/backend/protobuf/transaction.hpp#L30): Member variable 'Transaction::reduced_hash_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [client_api.cpp#L31](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/shared_model/bindings/client_api.cpp#L31): The function 'validateTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L48](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/shared_model/bindings/client_api.cpp#L48): The function 'validateQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L64](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/shared_model/bindings/client_api.cpp#L64): The function 'signTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L81](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/shared_model/bindings/client_api.cpp#L81): The function 'signQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L98](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/shared_model/bindings/client_api.cpp#L98): The function 'hashTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L111](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/shared_model/bindings/client_api.cpp#L111): The function 'hashQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L124](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/shared_model/bindings/client_api.cpp#L124): The function 'utxReducedHash' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [shared_proto_queries_test.cpp#L42](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/test/module/shared_model/backend_proto/shared_proto_queries_test.cpp#L42): Variable 'asset_id' is assigned a value that is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunreadVariable)
1. ![MINOR][MINOR] [shared_proto_queries_test.cpp#L84](https://github.com/hyperledger/iroha/blob/46e1b10e9422b2ceb9a1419968abd2616d41b43c/test/module/shared_model/backend_proto/shared_proto_queries_test.cpp#L84): Variable 'asset_id' is assigned a value that is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunreadVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-31 12:19:38,2018-08-31 12:19:38
https://api.github.com/repos/hyperledger/iroha/issues/1689,https://api.github.com/repos/hyperledger/iroha/issues/comments/416927729,https://github.com/hyperledger/iroha/issues/1689#issuecomment-416927729,l4l,"Yeah, I have exactly same issue here with gcc 8.2.0. I will take a look, when I have time one that.
I'd suggest a workaround: either downgrade your compiler (gcc6 should work) or use clang (it works for me)",2018-08-29 12:02:39,2018-08-29 12:03:31
https://api.github.com/repos/hyperledger/iroha/issues/1689,https://api.github.com/repos/hyperledger/iroha/issues/comments/416968700,https://github.com/hyperledger/iroha/issues/1689#issuecomment-416968700,faizol,"Thanks, I got it compiled using clang.",2018-08-29 14:13:25,2018-08-29 14:13:25
https://api.github.com/repos/hyperledger/iroha/issues/1689,https://api.github.com/repos/hyperledger/iroha/issues/comments/417006833,https://github.com/hyperledger/iroha/issues/1689#issuecomment-417006833,igor-egorov,The symptoms say that there was not enough RAM for compiling.,2018-08-29 16:00:29,2018-08-29 16:00:29
https://api.github.com/repos/hyperledger/iroha/issues/1689,https://api.github.com/repos/hyperledger/iroha/issues/comments/420236284,https://github.com/hyperledger/iroha/issues/1689#issuecomment-420236284,l4l,"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=86594
It's about compiler defect, actually",2018-09-11 11:08:47,2018-09-11 11:12:08
https://api.github.com/repos/hyperledger/iroha/issues/1689,https://api.github.com/repos/hyperledger/iroha/issues/comments/421349759,https://github.com/hyperledger/iroha/issues/1689#issuecomment-421349759,l4l,Should be fixed in #1714 now,2018-09-14 12:56:10,2018-09-14 12:56:10
https://api.github.com/repos/hyperledger/iroha/issues/1688,https://api.github.com/repos/hyperledger/iroha/issues/comments/417390053,https://github.com/hyperledger/iroha/pull/1688#issuecomment-417390053,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L49](https://github.com/hyperledger/iroha/blob/7831d0e217792107030d3ccd4ae59b3315d12ccd/test/integration/transport/ordering_gate_service_test.cpp#L49): Variable 'factory_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L51](https://github.com/hyperledger/iroha/blob/7831d0e217792107030d3ccd4ae59b3315d12ccd/test/integration/transport/ordering_gate_service_test.cpp#L51): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-30 16:53:30,2018-08-30 16:53:30
https://api.github.com/repos/hyperledger/iroha/issues/1686,https://api.github.com/repos/hyperledger/iroha/issues/comments/416848770,https://github.com/hyperledger/iroha/pull/1686#issuecomment-416848770,neewy,"Dismissed approves, strange test behaviour has to be investigated",2018-08-29 07:09:33,2018-08-29 07:09:33
https://api.github.com/repos/hyperledger/iroha/issues/1685,https://api.github.com/repos/hyperledger/iroha/issues/comments/417715156,https://github.com/hyperledger/iroha/pull/1685#issuecomment-417715156,sorabot,"SonarQube analysis reported 1 issue

1. ![MAJOR][MAJOR] [integration_test_framework.cpp#L289](https://github.com/hyperledger/iroha/blob/4a30e0e539353e3267b54a14061ea087045b6c02/test/framework/integration_framework/integration_test_framework.cpp#L289): Reference to auto variable returned. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AreturnReference)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2018-08-31 16:18:05,2018-08-31 16:18:05
https://api.github.com/repos/hyperledger/iroha/issues/1684,https://api.github.com/repos/hyperledger/iroha/issues/comments/416923083,https://github.com/hyperledger/iroha/issues/1684#issuecomment-416923083,igor-egorov,"Hi @Bo3o2S 
Thanks for submitting the issue!
Most likely the problem is caused by using the deprecated NDK GCC 4.9 toolchain. The fix is to switch to NDK clang toolchain. We will update our repo soon.

To build the library please apply the patch to your `android-build.sh` script:
```
diff --git a/shared_model/packages/android/android-build.sh b/shared_model/packages/android/android-build.sh
index 6a3b6783b..227cb26a5 100755
--- a/shared_model/packages/android/android-build.sh
+++ b/shared_model/packages/android/android-build.sh
@@ -55,7 +55,7 @@ else
     exit 1
 fi
 
-ANDROID_TOOLCHAIN_ARGS=(-DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=""$VERSION"" -DCMAKE_ANDROID_ARCH_ABI=""$PLATFORM"" -DANDROID_NDK=""$NDK_PATH"" -DCMAKE_ANDROID_STL_TYPE=c++_static)
+ANDROID_TOOLCHAIN_ARGS=(-DCMAKE_SYSTEM_NAME=Android -DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang -DANDROID_TOOLCHAIN=clang -DNDK_TOOLCHAIN_VERSION=clang -DCMAKE_SYSTEM_VERSION=""$VERSION"" -DCMAKE_ANDROID_ARCH_ABI=""$PLATFORM"" -DANDROID_NDK=""$NDK_PATH"" -DCMAKE_ANDROID_STL_TYPE=c++_static)
 DEPS_DIR=""$PWD""/iroha/dependencies
 INSTALL_ARGS=(-DCMAKE_INSTALL_PREFIX=""$DEPS_DIR"")
 

```

The patch adds the following variables to `ANDROID_TOOLCHAIN_ARGS`:
```
-DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang -DANDROID_TOOLCHAIN=clang -DNDK_TOOLCHAIN_VERSION=clang
```

Please let me know if the issue is still present.

",2018-08-29 11:43:38,2018-08-29 11:45:54
https://api.github.com/repos/hyperledger/iroha/issues/1684,https://api.github.com/repos/hyperledger/iroha/issues/comments/417346274,https://github.com/hyperledger/iroha/issues/1684#issuecomment-417346274,Bo3o2S,"it's working now and copile and link successfully
but when i tried to run sample app with linked library, it cannot find ""rand"" function

![image](https://user-images.githubusercontent.com/14229134/44859387-fc2e9b80-acae-11e8-86c1-ccef28bf8c6d.png)
",2018-08-30 14:47:08,2018-08-30 14:47:08
https://api.github.com/repos/hyperledger/iroha/issues/1684,https://api.github.com/repos/hyperledger/iroha/issues/comments/419148199,https://github.com/hyperledger/iroha/issues/1684#issuecomment-419148199,Warchant,"@Bo3o2S please share here the output of 

**Linux**:
```
ldd libirohajava.so
```

**MAC**:
```
otool -L libirohajava.jnilib
```",2018-09-06 15:58:11,2018-09-06 15:58:11
https://api.github.com/repos/hyperledger/iroha/issues/1684,https://api.github.com/repos/hyperledger/iroha/issues/comments/419327622,https://github.com/hyperledger/iroha/issues/1684#issuecomment-419327622,Bo3o2S,"**OS : ubuntu 16.04 64 bit
command : ldd libirohajava.so**

![image](https://user-images.githubusercontent.com/14229134/45200207-aeb3bf00-b2aa-11e8-8a3d-39e5f0934518.png)

",2018-09-07 05:31:58,2018-09-07 05:31:58
https://api.github.com/repos/hyperledger/iroha/issues/1684,https://api.github.com/repos/hyperledger/iroha/issues/comments/419451220,https://github.com/hyperledger/iroha/issues/1684#issuecomment-419451220,Warchant,@Bo3o2S something is wrong with your `.so` file. Try to rebuild it.,2018-09-07 14:09:12,2018-09-07 14:09:12
https://api.github.com/repos/hyperledger/iroha/issues/1684,https://api.github.com/repos/hyperledger/iroha/issues/comments/420107786,https://github.com/hyperledger/iroha/issues/1684#issuecomment-420107786,Bo3o2S,"i tried to build 5times but it's not different.
i just change ANDROID_TOOLCAHIN_ARGS ""igor-egorov"" suggest in android-build.sh. 
and i can build but when i entered the command ""ldd libirohajava.so"", it still appears ""not a dynamic executable""

i change ANDROID_TOOLCHAIN_ARGS like this
 
**ANDROID_TOOLCHAIN_ARGS=(-DCMAKE_SYSTEM_NAME=Android -DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang -DANDROID_TOOLCHAIN=clang -DNDK_TOOLCHAIN_VERSION=clang -DCMAKE_SYSTEM_VERSION=""$VERSION"" -DCMAKE_ANDROID_ARCH_ABI=""$PLATFORM"" -DANDROID_NDK=""$NDK_PATH"" -DCMAKE_ANDROID_STL_TYPE=c++_static)
DEPS_DIR=""$PWD""/iroha/dependencies
INSTALL_ARGS=(-DCMAKE_INSTALL_PREFIX=""$DEPS_DIR"")**

what's wrong with it?",2018-09-11 00:45:48,2018-09-11 00:45:48
https://api.github.com/repos/hyperledger/iroha/issues/1684,https://api.github.com/repos/hyperledger/iroha/issues/comments/455107086,https://github.com/hyperledger/iroha/issues/1684#issuecomment-455107086,LiraLemur,"Please try new library: https://github.com/Warchant/iroha-pure-java - if any difficulties remain let us know in the chat: https://chat.hyperledger.org/channel/iroha

Since the version in the issue is old, I suggest closing the issue. ",2019-01-17 09:42:21,2019-01-17 09:42:21
https://api.github.com/repos/hyperledger/iroha/issues/1683,https://api.github.com/repos/hyperledger/iroha/issues/comments/416761992,https://github.com/hyperledger/iroha/pull/1683#issuecomment-416761992,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [get_account_test.cpp#L70](https://github.com/hyperledger/iroha/blob/d50364c85834f0e0f97d267c5707dc54b0bda838/test/integration/acceptance/get_account_test.cpp#L70): The function 'checkNoAccountResponse' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-28 22:31:06,2018-08-28 22:31:06
https://api.github.com/repos/hyperledger/iroha/issues/1682,https://api.github.com/repos/hyperledger/iroha/issues/comments/416400318,https://github.com/hyperledger/iroha/pull/1682#issuecomment-416400318,l4l,"It seems that similar fixes was already proposed at #1680 
Also it's not clear for me, why this environment vars are needed. Could you explain that?",2018-08-27 23:23:11,2018-08-27 23:23:11
https://api.github.com/repos/hyperledger/iroha/issues/1682,https://api.github.com/repos/hyperledger/iroha/issues/comments/416462423,https://github.com/hyperledger/iroha/pull/1682#issuecomment-416462423,itorK,"You're right, I commited 6 hours after #1680  :)
Enviroment vars is needed when you compiled boost in your custom directory.


 ",2018-08-28 06:07:23,2018-08-28 06:07:23
https://api.github.com/repos/hyperledger/iroha/issues/1682,https://api.github.com/repos/hyperledger/iroha/issues/comments/416519291,https://github.com/hyperledger/iroha/pull/1682#issuecomment-416519291,nickaleks,@itorK Isn't BOOST_ROOT enough for cmake? I believe CMake is able to deduce include directory from that.,2018-08-28 09:42:16,2018-08-28 09:42:16
https://api.github.com/repos/hyperledger/iroha/issues/1682,https://api.github.com/repos/hyperledger/iroha/issues/comments/416573096,https://github.com/hyperledger/iroha/pull/1682#issuecomment-416573096,l4l,Could you please review @nickaleks comment and since similar pr is merged there's a need in a rebase,2018-08-28 12:54:02,2018-08-28 12:54:02
https://api.github.com/repos/hyperledger/iroha/issues/1682,https://api.github.com/repos/hyperledger/iroha/issues/comments/419830950,https://github.com/hyperledger/iroha/pull/1682#issuecomment-419830950,itorK,"Sorry for my late answer, but yes @nickaleks  you're right  BOOST_ROOT is enough.",2018-09-10 08:30:26,2018-09-10 08:30:26
https://api.github.com/repos/hyperledger/iroha/issues/1682,https://api.github.com/repos/hyperledger/iroha/issues/comments/420228372,https://github.com/hyperledger/iroha/pull/1682#issuecomment-420228372,l4l,"Could you update your branch, since PR mentioned earlier was already merged. Thanks",2018-09-11 10:37:01,2018-09-11 10:37:01
https://api.github.com/repos/hyperledger/iroha/issues/1682,https://api.github.com/repos/hyperledger/iroha/issues/comments/423933688,https://github.com/hyperledger/iroha/pull/1682#issuecomment-423933688,neewy,Since this PR is stale I would like to close it until the correction mentioned by @l4l is introduced @itorK ,2018-09-24 10:34:56,2018-09-24 10:34:56
https://api.github.com/repos/hyperledger/iroha/issues/1681,https://api.github.com/repos/hyperledger/iroha/issues/comments/416235025,https://github.com/hyperledger/iroha/pull/1681#issuecomment-416235025,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [mst_storage_impl.cpp#L12](https://github.com/hyperledger/iroha/blob/0caf99fd849aa1309ceefc24d110b489f6c2d3c2/irohad/multi_sig_transactions/storage/impl/mst_storage_impl.cpp#L12): Function parameter 'target_peer' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L64](https://github.com/hyperledger/iroha/blob/0caf99fd849aa1309ceefc24d110b489f6c2d3c2/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L64): The function 'createUnbuildTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L163](https://github.com/hyperledger/iroha/blob/0caf99fd849aa1309ceefc24d110b489f6c2d3c2/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L163): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L462](https://github.com/hyperledger/iroha/blob/0caf99fd849aa1309ceefc24d110b489f6c2d3c2/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L462): Function parameter 'tx' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-27 13:56:08,2018-08-27 13:56:08
https://api.github.com/repos/hyperledger/iroha/issues/1678,https://api.github.com/repos/hyperledger/iroha/issues/comments/455106305,https://github.com/hyperledger/iroha/issues/1678#issuecomment-455106305,LiraLemur,Moved to Jira: https://jira.hyperledger.org/browse/IR-197,2019-01-17 09:39:50,2019-01-17 09:39:50
https://api.github.com/repos/hyperledger/iroha/issues/1677,https://api.github.com/repos/hyperledger/iroha/issues/comments/419743595,https://github.com/hyperledger/iroha/pull/1677#issuecomment-419743595,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [find_fuzz.cpp#L27](https://github.com/hyperledger/iroha/blob/f4f79a4795860f069a6ef126a89b6c0ad32c0878/test/fuzzing/find_fuzz.cpp#L27): Variable 'storage_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [find_fuzz.cpp#L28](https://github.com/hyperledger/iroha/blob/f4f79a4795860f069a6ef126a89b6c0ad32c0878/test/fuzzing/find_fuzz.cpp#L28): Variable 'bq_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [find_fuzz.cpp#L29](https://github.com/hyperledger/iroha/blob/f4f79a4795860f069a6ef126a89b6c0ad32c0878/test/fuzzing/find_fuzz.cpp#L29): Variable 'wq_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [find_fuzz.cpp#L39](https://github.com/hyperledger/iroha/blob/f4f79a4795860f069a6ef126a89b6c0ad32c0878/test/fuzzing/find_fuzz.cpp#L39): The function 'LLVMFuzzerTestOneInput' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-09 20:42:17,2018-09-09 20:42:17
https://api.github.com/repos/hyperledger/iroha/issues/1676,https://api.github.com/repos/hyperledger/iroha/issues/comments/416253670,https://github.com/hyperledger/iroha/issues/1676#issuecomment-416253670,l4l,Seems related to https://soramitsu.atlassian.net/browse/IR-1658,2018-08-27 14:53:05,2018-08-27 14:53:05
https://api.github.com/repos/hyperledger/iroha/issues/1676,https://api.github.com/repos/hyperledger/iroha/issues/comments/419940506,https://github.com/hyperledger/iroha/issues/1676#issuecomment-419940506,lebdron,Fixed in https://github.com/hyperledger/iroha/pull/1695,2018-09-10 14:48:23,2018-09-10 14:48:23
https://api.github.com/repos/hyperledger/iroha/issues/1675,https://api.github.com/repos/hyperledger/iroha/issues/comments/417659555,https://github.com/hyperledger/iroha/pull/1675#issuecomment-417659555,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [on_demand_ordering_service_impl.hpp#L57](https://github.com/hyperledger/iroha/blob/919d72bd6480dd33cff90cbb9796de90ba1a4fb9/irohad/ordering/impl/on_demand_ordering_service_impl.hpp#L57): Unused private function: 'OnDemandOrderingServiceImpl::packNextProposals' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [on_demand_ordering_service_impl.hpp#L64](https://github.com/hyperledger/iroha/blob/919d72bd6480dd33cff90cbb9796de90ba1a4fb9/irohad/ordering/impl/on_demand_ordering_service_impl.hpp#L64): Unused private function: 'OnDemandOrderingServiceImpl::tryErase' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-31 13:12:09,2018-08-31 13:12:09
https://api.github.com/repos/hyperledger/iroha/issues/1674,https://api.github.com/repos/hyperledger/iroha/issues/comments/419374014,https://github.com/hyperledger/iroha/pull/1674#issuecomment-419374014,kamilsa,"This PR is not needed anymore, since EmptyBlock entoty will be removed",2018-09-07 09:03:57,2018-09-07 09:03:57
https://api.github.com/repos/hyperledger/iroha/issues/1673,https://api.github.com/repos/hyperledger/iroha/issues/comments/415817477,https://github.com/hyperledger/iroha/pull/1673#issuecomment-415817477,igor-egorov,"To reviewers: I saw compilation errors. Please review despite them. I will be able to fix them after the Sunday. Locally I had no such errors, probably because of cache.",2018-08-24 16:51:55,2018-08-24 16:51:55
https://api.github.com/repos/hyperledger/iroha/issues/1673,https://api.github.com/repos/hyperledger/iroha/issues/comments/416842613,https://github.com/hyperledger/iroha/pull/1673#issuecomment-416842613,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [keys_manager_impl.cpp#L56](https://github.com/hyperledger/iroha/blob/217401408b7ff4c33337da1459b37076574283c2/libs/crypto/keys_manager_impl.cpp#L56): Function parameter 'account_id' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [keys_manager_impl.hpp#L33](https://github.com/hyperledger/iroha/blob/217401408b7ff4c33337da1459b37076574283c2/libs/crypto/keys_manager_impl.hpp#L33): Function parameter 'account_id' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-29 06:42:42,2018-08-29 06:42:42
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/416255747,https://github.com/hyperledger/iroha/issues/1672#issuecomment-416255747,l4l,"The issue is explained by the line:
`Stateful validation error: transaction ... did not pass initial verification: checking 'signatures are a subset of signatories', error message 'stateful validator error: signatures in transaction are not account signatories: signatures'`

That basically means that the transaction was signed with the wrong key. Thus there's a need in more detailed list of steps that you've done (it probably either an issue of iroha-cli, or some mistake(s) in key choosing/state setting) for reproducing",2018-08-27 14:59:16,2018-08-27 14:59:16
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/416435069,https://github.com/hyperledger/iroha/issues/1672#issuecomment-416435069,truongnmt,"Thanks for your reply @l4l.

Although the error is clear but still I don't know where I should fix. I just ran `--overwrite_ledger` to clean all my blocks, here is the log on my iroha-cli: https://gist.github.com/truongnmt/b4a0cf78328aca9d52c3a95b067b96cf

So to recap, I have `Peer A (13.78.38.212)`, `Peer B (65.52.164.195)`, `iroha-cli from Peer B`.
`iroha-cli` create asset and send command to `Peer B`, then both `Peer A` and `Peer B` said that:

> TxProcessor Stateful validation error: transaction 13c5fe504618ba3c0682c43acc227c7ad7b1924cead06bf412834692dd044b78 did not pass initial verification: checking 'signatures are a subset of signatories', error message 'stateful validator error: signatures in transaction are not account signatories

When check transaction status from iroha-cli, result from `Peer A` and `Peer B`:

> Transaction has not passed stateful validation. Stateful validation error: transaction 13c5fe504618ba3c0682c43acc227c7ad7b1924cead06bf412834692dd044b78 did not pass initial verification: checking 'signatures are a subset of signatories', error message 'stateful validator error: signatures in transaction are not account signatories: signatures' public keys: PublicKey [eb97b2355a383a78fa42263a32488d0288145254c827cd2d76f2072e1e0c4d8c ]
> 
> signatories: PublicKey: [af121b9a571c9360d409835c60015efdbee928ef5f5e0e4bd7abb132a0643141 ]
> 
",2018-08-28 03:00:23,2018-08-28 03:01:28
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/416489365,https://github.com/hyperledger/iroha/issues/1672#issuecomment-416489365,l4l,"How did you launch `iroha-cli`? Might be you missed account name in params or the used keys are empty? Also may you create exactly same transaction (that you've done at 1st step) and save it as json, that might be helpful as well",2018-08-28 08:02:48,2018-08-28 08:02:48
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/416493658,https://github.com/hyperledger/iroha/issues/1672#issuecomment-416493658,truongnmt,"Just exactly in the getting started, I ran: `iroha-cli -account_name admin@test` 

Here is the json:
```
{
    ""signatures"": [
        {
            ""pubkey"": ""eb97b2355a383a78fa42263a32488d0288145254c827cd2d76f2072e1e0c4d8c"",
            ""signature"": ""303e332d8063ad2bef13b300eb1bfc77eb4ed3abaeede169da62a01bc25248679f34a029ca65fc73365732214d7fdff8adbb8b51eb9a9c57b3fa7e04a9f64c05""
        }
    ],
    ""created_ts"": 1535444145903,
    ""creator_account_id"": ""admin@test"",
    ""quorum"": 1,
    ""commands"": [
        {
            ""command_type"": ""CreateAsset"",
            ""asset_name"": ""mfc"",
            ""domain_id"": ""test"",
            ""precision"": 2
        }
    ]
}
```",2018-08-28 08:17:52,2018-08-28 08:17:52
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/416523705,https://github.com/hyperledger/iroha/issues/1672#issuecomment-416523705,igor-egorov,"Hi @truongnmt 
There was a known issue with `--overwrite-ledger`flag - #1640 
Please make sure you are using Iroha from the latest develop branch. It seems that the master branch does not contain the fix yet. 

Be careful - Iroha docker image labeled as `latest` points to the master branch.
To use develop branch in docker environment, please use `develop` or `develop-build` image.
[Our page](https://hub.docker.com/r/hyperledger/iroha/) at docker hub.",2018-08-28 09:56:54,2018-08-28 09:56:54
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/416524792,https://github.com/hyperledger/iroha/issues/1672#issuecomment-416524792,truongnmt,"@igor-egorov Thanks so much for your reply.
I will test on `develop` branch and report to you.",2018-08-28 09:59:46,2018-08-28 09:59:46
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/416817372,https://github.com/hyperledger/iroha/issues/1672#issuecomment-416817372,truongnmt,"Seem that it's not the error of `--overwrite-ledger` flag, I remove `blockstore` and container, all fresh, also tested on `develop` branch but still the same error :<",2018-08-29 04:05:58,2018-08-29 04:05:58
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/419170390,https://github.com/hyperledger/iroha/issues/1672#issuecomment-419170390,igor-egorov,"Thanks for checking! 
Could you please confirm that the issue is still there if single node installation is used instead of two nodes?",2018-09-06 17:07:57,2018-09-06 17:07:57
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/419481249,https://github.com/hyperledger/iroha/issues/1672#issuecomment-419481249,igor-egorov,"Hi @truongnmt 
I have tried to reproduce your issue and had no luck.
I have been able to create the network of two Iroha nodes and commit a transaction with CreateAsset command.

In order to get understanding what was different in your case please try the following.


I used Docker environment for testing. Both nodes were running on a single machine in different containers.

```shell
docker pull hyperledger/iroha:latest

docker volume create blockstore1
docker volume create blockstore2

docker network create iroha-network

# ports mapping - hostPort:containerPort
docker run --name iroha-postgres1 \
  -e POSTGRES_USER=postgres \
  -e POSTGRES_PASSWORD=mysecretpassword \
  -p 5432:5432 \
  --network=iroha-network \
  -d postgres:9.5

docker run --name iroha-postgres2 \
  -e POSTGRES_USER=postgres \
  -e POSTGRES_PASSWORD=mysecretpassword \
  -p 5433:5432 \
  --network=iroha-network \
  -d postgres:9.5
```

The two following commands should be executed in separate terminal windows because both of them will enter you into container's environment.
```shell
docker run -it --name iroha1 \
  -p 50051:50051 \
  -v $(pwd)/example:/opt/iroha_data \
  -v blockstore1:/tmp/block_store \
  --network=iroha-network \
  --entrypoint=/bin/bash \
  hyperledger/iroha:latest

docker run -it --name iroha2 \
  -p 50052:50051 \
  -v $(pwd)/example:/opt/iroha_data \
  -v blockstore2:/tmp/block_store \
  --network=iroha-network \
  --entrypoint=/bin/bash \
  hyperledger/iroha:latest
```

Now you need to know IP addresses used by Postgeses and Irohas:
```shell
docker inspect iroha1 | grep -i ipaddr
docker inspect iroha2 | grep -i ipaddr
docker inspect iroha-postgres1 | grep -i ipaddr
docker inspect iroha-postgres2 | grep -i ipaddr
```
 In my case they were:
```
+-----------------+------------+
| iroha1          | 172.19.0.4 |
+-----------------+------------+
| iroha2          | 172.19.0.5 |
+-----------------+------------+
| iroha-postgres1 | 172.19.0.2 |
+-----------------+------------+
| iroha-postgres2 | 172.19.0.3 |
+-----------------+------------+
```
We need to create nodes' keypairs, genesis block via composing peers.list and passing it to iroha-cli:
```shell
$ cat peers.list
172.19.0.4:10001
172.19.0.5:10001

$ iroha-cli --genesis_block --peers_address peers.list
```

Now we have to compose config files for both Iroha instances:
```
$ cat config1.docker
{
  ""block_store_path"" : ""/tmp/block_store/"",
  ""torii_port"" : 50051,
  ""internal_port"" : 10001,
  ""pg_opt"" : ""host=iroha-postgres1 port=5432 user=postgres password=mysecretpassword"",
  ""max_proposal_size"" : 10,
  ""proposal_delay"" : 5000,
  ""vote_delay"" : 5000,
  ""load_delay"" : 5000,
  ""mst_enable"" : false
}

$ cat config2.docker
{
  ""block_store_path"" : ""/tmp/block_store/"",
  ""torii_port"" : 50051,
  ""internal_port"" : 10001,
  ""pg_opt"" : ""host=iroha-postgres2 port=5432 user=postgres password=mysecretpassword"",
  ""max_proposal_size"" : 10,
  ""proposal_delay"" : 5000,
  ""vote_delay"" : 5000,
  ""load_delay"" : 5000,
  ""mst_enable"" : false
}
```

```shell
# in first docker container being in the folder where iroha-cli(peers.list) was executed)
irohad --config config1.docker --genesis_block genesis.block --keypair_name node0

# the same precondition for the second container
irohad --config config2.docker --genesis_block genesis.block --keypair_name node1
```

Now open one more terminal window on a host system and enter one of already running containers:
```shell
docker exec -it iroha1 /bin/bash

# now you are inside the container with the first iroha
iroha-cli --account_name admin@test
```

```diff
Welcome to Iroha-Cli.
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 1
Forming a new transactions, choose command to add:
1. Detach role from account (detach)
2. Add new role to account (apnd_role)
3. Create new role (crt_role)
4. Set account key/value detail (set_acc_kv)
5. Transfer Assets (tran_ast)
6. Grant permission over your account (grant_perm)
7. Subtract Assets Quantity from Account (sub_ast_qty)
8. Set Account Quorum (set_qrm)
9. Remove Signatory (rem_sign)
10. Create Domain (crt_dmn)
11. Revoke permission from account (revoke_perm)
12. Create Account (crt_acc)
13. Add Signatory to Account (add_sign)
14. Create Asset (crt_ast)
15. Add Peer to Iroha Network (add_peer)
16. Add Asset Quantity (add_ast_qty)
0. Back (b)
> : 14
!Asset name: mfc
!Domain Id: test
!Asset precision: 2
Command is formed. Choose what to do:
1. Add one more command to the transaction (add)
2. Send to Iroha peer (send)
3. Go back and start a new transaction (b)
4. Save as json file (save)
> : 2
Peer address (0.0.0.0):
Peer port (50051):
[2018-09-07 15:36:44.161690800][th:188][info] TransactionResponseHandler Transaction successfully sent
!Congratulation, your transaction was accepted for processing.
!Its hash is c19064baacdba98d292064a851d480fd7345967bc5e4c5f07cd479779404fe7d
--------------------
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 2
Choose query:
1. Get all permissions related to role (get_role_perm)
2. Get Transactions by transactions' hashes (get_tx)
3. Get information about asset (get_ast_info)
4. Get Account's Transactions (get_acc_tx)
5. Get Account's Asset Transactions (get_acc_ast_tx)
6. Get all current roles in the system (get_roles)
7. Get Account's Signatories (get_acc_sign)
8. Get Account's Assets (get_acc_ast)
9. Get Account Information (get_acc)
0. Back (b)
> : 2
!Requested tx hashes: c19064baacdba98d292064a851d480fd7345967bc5e4c5f07cd479779404fe7d
Query is formed. Choose what to do:
1. Send to Iroha peer (send)
2. Save as json file (save)
0. Back (b)
> : 1
Peer address (0.0.0.0):
Peer port (50051):
[2018-09-07 15:37:25.211863600][th:188][info] QueryResponseHandler [Transaction]
[2018-09-07 15:37:25.211940400][th:188][info] QueryResponseHandler -Hash- c19064baacdba98d292064a851d480fd7345967bc5e4c5f07cd479779404fe7d
[2018-09-07 15:37:25.211979100][th:188][info] QueryResponseHandler -Creator Id- admin@test
[2018-09-07 15:37:25.211986400][th:188][info] QueryResponseHandler -Created Time- 1536334604158
[2018-09-07 15:37:25.212020900][th:188][info] QueryResponseHandler -Commands- 1
[2018-09-07 15:37:25.213003600][th:188][info] QueryResponseHandler  CreateAsset: [asset_name=mfc, domain_id=test, precision=2, ]
--------------------
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> :
```

Logs from the 1st Iroha node:
```diff
...
[2018-09-07 15:36:47.874996400][th:186][info] ChainValidator validate block: height 2, hash cedb5dbcb90a12b4e62b6f54294e65968719149046137d85c60205f543768f39
[2018-09-07 15:36:47.885525200][th:186][info] IROHAD ~~~~~~~~~| COMMIT =^._.^= |~~~~~~~~~
[2018-09-07 15:36:47.885607800][th:186][info] TxProcessor on commit committed: c19064baacdba98d292064a851d480fd7345967bc5e4c5f07cd479779404fe7d
```

Logs from the 2nd Iroha node:
```diff
...
[2018-09-07 15:36:47.876979900][th:45][info] ChainValidator validate block: height 2, hash cedb5dbcb90a12b4e62b6f54294e65968719149046137d85c60205f543768f39
[2018-09-07 15:36:47.885189100][th:45][info] IROHAD ~~~~~~~~~| COMMIT =^._.^= |~~~~~~~~~
[2018-09-07 15:36:47.885369100][th:45][info] TxProcessor on commit committed: c19064baacdba98d292064a851d480fd7345967bc5e4c5f07cd479779404fe7d
```",2018-09-07 15:44:56,2018-09-07 15:44:56
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/419779426,https://github.com/hyperledger/iroha/issues/1672#issuecomment-419779426,truongnmt,"@igor-egorov Thanks for a very detail script. Yes, I confirm that I was able to run correctly on multiple node on **1 host**. But I'm deploy on **2 host**, each host has 1 container, and I still get the error. Here is my implementation:

```
docker volume create blockstore
```

Create some-postgres container on two host.
Create iroha container on two host:
```
sudo docker run -it --name iroha-develop \
-p 50051:50051 \
-p 10001:10001 \
-v $(pwd)/iroha-develop/example:/opt/iroha_data \
-v blockstore:/tmp/block_store \
--network=iroha-network \
--entrypoint=/bin/bash \
hyperledger/iroha:develop

$ cat peers.list
13.78.38.212:10001
65.52.164.195:10001

iroha-cli --genesis_block --peers_address peers.list
```

On host 13.78.38.212:
```
irohad --config config.docker --genesis_block genesis.block --keypair_name node0
```
On host 65.52.164.195:
```
irohad --config config.docker --genesis_block genesis.block --keypair_name node1
```

On create asset, I got the error as title. 

Notice that on checking genesis block and node0, node1 key on host **13.78.38.212**:
```
$ cat genesis.block
...
            ""commands"": [
              {
                ""addPeer"": {
                  ""peer"": {
                    ""address"": ""13.78.38.212:10001"",
                    ""peerKey"": ""AnOaNx/f8/qE1+SvybhviIGqxD0KnNKAHVygq4qfZpM=""
                  }
                }
              },
              {
                ""addPeer"": {
                  ""peer"": {
                    ""address"": ""65.52.164.195:10001"",
                    ""peerKey"": ""NuqiKzdGdkx8g/tKHkJeEhRzrwlfnx0+rLJATxFIHWI=""
                  }
                }
              },

$ cat node0.pub
02739a371fdff3fa84d7e4afc9b86f8881aac43d0a9cd2801d5ca0ab8a9f6693

$cat node1.pub
36eaa22b3746764c7c83fb4a1e425e121473af095f9f1d3eacb2404f11481d62
```

On checking genesis block and node0, node1 key on host **65.52.164.195**:
```
$ cat genesis.block
...
            ""commands"": [
              {
                ""addPeer"": {
                  ""peer"": {
                    ""address"": ""13.78.38.212:10001"",
                    ""peerKey"": ""j5CkagZztVOhT9Zgc9QEKZbVbjEUptS87ywPwJWNZlo=""
                  }
                }
              },
              {
                ""addPeer"": {
                  ""peer"": {
                    ""address"": ""65.52.164.195:10001"",
                    ""peerKey"": ""3fPYIatUpoIRDOWO1xz3B7+dqU6RZ5PudfxdSkhdnl0=""
                  }
                }
              },

$ cat node0.pub
8f90a46a0673b553a14fd66073d4042996d56e3114a6d4bcef2c0fc0958d665aroot@91bdcdc6ae8a:/

$ cat node1.pub
ddf3d821ab54a682110ce58ed71cf707bf9da94e916793ee75fc5d4a485d9e5d
```

Does this is the cause? Cause error is about signature.",2018-09-10 03:47:29,2018-09-10 03:47:56
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/420231129,https://github.com/hyperledger/iroha/issues/1672#issuecomment-420231129,l4l,"@truongnmt 
Keys are need to be the same for the same peer among other peers in the system, otherwise a proposal cannot be confirmed that it was signed by a particular peer. Moreover genesis blocks required to be the same, otherwise chain of blocks will be different (and ""blockchain"" become meaningless).
So could you confirm, that the issue is not present with the same genesis blocks",2018-09-11 10:47:33,2018-09-11 10:47:33
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/420478379,https://github.com/hyperledger/iroha/issues/1672#issuecomment-420478379,truongnmt,"@l4l if I use automate tool like Ansible, the genesis.block will be copy between peer right. That's the point I think. I will check and report to you later. Thanks!",2018-09-12 01:15:55,2018-09-12 01:15:55
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/420956205,https://github.com/hyperledger/iroha/issues/1672#issuecomment-420956205,truongnmt,"On using Ansible on 1 host with 5 nodes, I still get that error:
```
Transaction has not passed stateful validation. Stateful validation error: transaction 44063e0b8acff0e264bf8b9aa9adc09d10ffe48ba6d5f83e99e8bca126c3fb7f did not pass initial verification: checking 'signatures are a subset of signatories', error message 'stateful validator error: signatures in transaction are not account signatories:
signatures' public keys: PublicKey: [313a07e6384776ed95447710d15e59148473ccfc052a681317a72a69f2a49910 ]

signatories: PublicKey: [826ff8bfb7e0076adf32fa459110dcbf6779769bf41c36fd5fc3331c0c640c16 ]
'
```

Actually I'm deploy using docker `develop` tag. I will record a video to show you what's wrong with my steps.",2018-09-13 10:13:03,2018-09-13 17:12:57
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/421096080,https://github.com/hyperledger/iroha/issues/1672#issuecomment-421096080,truongnmt,"Here is my record: https://www.youtube.com/watch?v=gvvqoLSKEGE&feature=youtu.be
This time I'm testing on docker `latest` tag.
And I have check `genesis.block`, same in all 5 container.

![screen shot 2018-09-14 at 00 53 41](https://user-images.githubusercontent.com/11817656/45506257-ea71eb80-b7b8-11e8-933c-42d366e83af3.png)
",2018-09-13 17:55:57,2018-09-13 18:06:14
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/454802970,https://github.com/hyperledger/iroha/issues/1672#issuecomment-454802970,LiraLemur,"Hi! Lots of improvements were made during the latest releases. Please contact us here: https://chat.hyperledger.org/channel/iroha if the difficulties remain. 

Since the issue was reported on outdated version I consider it outdated and ok to close. ",2019-01-16 14:41:09,2019-01-16 14:41:09
https://api.github.com/repos/hyperledger/iroha/issues/1672,https://api.github.com/repos/hyperledger/iroha/issues/comments/455120793,https://github.com/hyperledger/iroha/issues/1672#issuecomment-455120793,truongnmt,Sure things! Congrat on Iroha! Haven't following on Iroh for a while. Wish you all the best!,2019-01-17 10:24:57,2019-01-17 10:24:57
https://api.github.com/repos/hyperledger/iroha/issues/1670,https://api.github.com/repos/hyperledger/iroha/issues/comments/416279350,https://github.com/hyperledger/iroha/pull/1670#issuecomment-416279350,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [on_demand_ordering_service_impl.hpp#L57](https://github.com/hyperledger/iroha/blob/f8be7cce0b4ae9fb35679d1e96fb8f06349c00b8/irohad/ordering/impl/on_demand_ordering_service_impl.hpp#L57): Unused private function: 'OnDemandOrderingServiceImpl::packNextProposals' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [on_demand_ordering_service_impl.hpp#L64](https://github.com/hyperledger/iroha/blob/f8be7cce0b4ae9fb35679d1e96fb8f06349c00b8/irohad/ordering/impl/on_demand_ordering_service_impl.hpp#L64): Unused private function: 'OnDemandOrderingServiceImpl::tryErase' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-27 16:11:54,2018-08-27 16:11:54
https://api.github.com/repos/hyperledger/iroha/issues/1668,https://api.github.com/repos/hyperledger/iroha/issues/comments/415638369,https://github.com/hyperledger/iroha/issues/1668#issuecomment-415638369,manhdaovan,"In the case of different hosts, I think you must expose 10001 port when running docker image.
Add -p 10001:10001 to docker command, and open 10001 on the host machine using Azure management windows, and try again.",2018-08-24 03:13:56,2018-08-24 03:14:04
https://api.github.com/repos/hyperledger/iroha/issues/1668,https://api.github.com/repos/hyperledger/iroha/issues/comments/415642557,https://github.com/hyperledger/iroha/issues/1668#issuecomment-415642557,truongnmt,"Weeeeee, it worked! Thanks a lot 🙌 ",2018-08-24 03:46:38,2018-08-24 03:46:38
https://api.github.com/repos/hyperledger/iroha/issues/1668,https://api.github.com/repos/hyperledger/iroha/issues/comments/415643771,https://github.com/hyperledger/iroha/issues/1668#issuecomment-415643771,truongnmt,"So I create a new docker image as @manhdaovan said:

```
sudo docker run -it --name iroha \
-p 50051:50051 \
-p 10001:10001 \
-v $(pwd)/iroha-master/example:/opt/iroha_data \
-v blockstore:/tmp/block_store \
--network=iroha-network \
--entrypoint=/bin/bash \
hyperledger/iroha:latest
```

Thanks a lot 🙌 🙌 🙌 ",2018-08-24 03:56:55,2018-08-24 03:57:30
https://api.github.com/repos/hyperledger/iroha/issues/1667,https://api.github.com/repos/hyperledger/iroha/issues/comments/415060385,https://github.com/hyperledger/iroha/pull/1667#issuecomment-415060385,dram,"Just FYI, cmake version in Ubuntu 18.04 LTS is 3.10.2.

https://packages.ubuntu.com/bionic/cmake",2018-08-22 14:52:28,2018-08-22 14:52:28
https://api.github.com/repos/hyperledger/iroha/issues/1667,https://api.github.com/repos/hyperledger/iroha/issues/comments/415061465,https://github.com/hyperledger/iroha/pull/1667#issuecomment-415061465,nickaleks,"Yep, but we will need the functionality introduced in 3.11 in the future. Downloading and installing CMake is very straightforward, and all our development containers do that.",2018-08-22 14:55:14,2018-08-22 14:55:14
https://api.github.com/repos/hyperledger/iroha/issues/1667,https://api.github.com/repos/hyperledger/iroha/issues/comments/415066463,https://github.com/hyperledger/iroha/pull/1667#issuecomment-415066463,dram,"Ok, np.",2018-08-22 15:08:38,2018-08-22 15:08:38
https://api.github.com/repos/hyperledger/iroha/issues/1667,https://api.github.com/repos/hyperledger/iroha/issues/comments/415649043,https://github.com/hyperledger/iroha/pull/1667#issuecomment-415649043,bakhtin,Android Docker image will soon be removed as we're migrating to a separate libiroha repo. Yet do we need to bump CMake version in that repo? Will we be using any new CMake functionality there?,2018-08-24 04:40:51,2018-08-24 04:40:51
https://api.github.com/repos/hyperledger/iroha/issues/1667,https://api.github.com/repos/hyperledger/iroha/issues/comments/415665945,https://github.com/hyperledger/iroha/pull/1667#issuecomment-415665945,nickaleks,"Since it is not removed yet, we need to make sure the project can be built there.",2018-08-24 06:36:46,2018-08-24 06:36:46
https://api.github.com/repos/hyperledger/iroha/issues/1666,https://api.github.com/repos/hyperledger/iroha/issues/comments/415376873,https://github.com/hyperledger/iroha/pull/1666#issuecomment-415376873,igor-egorov,DCO will be fixed automatically when new commits pushed.,2018-08-23 11:04:40,2018-08-23 11:04:40
https://api.github.com/repos/hyperledger/iroha/issues/1665,https://api.github.com/repos/hyperledger/iroha/issues/comments/416132752,https://github.com/hyperledger/iroha/pull/1665#issuecomment-416132752,lebdron,Test failures in branch run are unrelated to the contents of the pull request. They will be assigned a task and fixed as a part of another task.,2018-08-27 06:56:08,2018-08-27 06:56:08
https://api.github.com/repos/hyperledger/iroha/issues/1664,https://api.github.com/repos/hyperledger/iroha/issues/comments/415345045,https://github.com/hyperledger/iroha/pull/1664#issuecomment-415345045,igor-egorov,Updated [demo](https://html-udwijiuryk.now.sh/maintenance/permissions#can-grant-can-add-my-signatory),2018-08-23 09:02:34,2018-08-23 09:02:34
https://api.github.com/repos/hyperledger/iroha/issues/1664,https://api.github.com/repos/hyperledger/iroha/issues/comments/415393135,https://github.com/hyperledger/iroha/pull/1664#issuecomment-415393135,igor-egorov,Failed test in torii_service_test `StatusWhenBlocking` was fixed as part of #1663 ,2018-08-23 12:13:39,2018-08-23 12:13:39
https://api.github.com/repos/hyperledger/iroha/issues/1662,https://api.github.com/repos/hyperledger/iroha/issues/comments/415490955,https://github.com/hyperledger/iroha/pull/1662#issuecomment-415490955,sorabot,"SonarQube analysis reported 7 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L68](https://github.com/hyperledger/iroha/blob/4c71ae2dc3a1cd1fa99f660bf1bc247dbb325dfa/irohad/ametsuchi/impl/postgres_block_query.hpp#L68): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L76](https://github.com/hyperledger/iroha/blob/4c71ae2dc3a1cd1fa99f660bf1bc247dbb325dfa/irohad/ametsuchi/impl/postgres_block_query.hpp#L76): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L86](https://github.com/hyperledger/iroha/blob/4c71ae2dc3a1cd1fa99f660bf1bc247dbb325dfa/irohad/ametsuchi/impl/postgres_block_query.hpp#L86): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L65](https://github.com/hyperledger/iroha/blob/4c71ae2dc3a1cd1fa99f660bf1bc247dbb325dfa/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L65): The class 'BlockQueryTransferTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L65](https://github.com/hyperledger/iroha/blob/4c71ae2dc3a1cd1fa99f660bf1bc247dbb325dfa/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L65): The class 'CommandExecutorTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L65](https://github.com/hyperledger/iroha/blob/4c71ae2dc3a1cd1fa99f660bf1bc247dbb325dfa/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L65): The class 'WsvQueryCommandTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [storage_init_test.cpp#L24](https://github.com/hyperledger/iroha/blob/4c71ae2dc3a1cd1fa99f660bf1bc247dbb325dfa/test/module/irohad/ametsuchi/storage_init_test.cpp#L24): Variable 'pg_opt_without_dbname_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-23 16:56:29,2018-08-23 16:56:29
https://api.github.com/repos/hyperledger/iroha/issues/1661,https://api.github.com/repos/hyperledger/iroha/issues/comments/420012779,https://github.com/hyperledger/iroha/pull/1661#issuecomment-420012779,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [mst_processor_impl.hpp#L84](https://github.com/hyperledger/iroha/blob/2fa86e1449ee9fb736c44f54be4233b2e0e7e36e/irohad/multi_sig_transactions/mst_processor_impl.hpp#L84): Unused private function: 'FairMstProcessor::completedBatchesNotify' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [mst_processor_impl.hpp#L91](https://github.com/hyperledger/iroha/blob/2fa86e1449ee9fb736c44f54be4233b2e0e7e36e/irohad/multi_sig_transactions/mst_processor_impl.hpp#L91): Unused private function: 'FairMstProcessor::updatedBatchesNotify' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [mst_processor_impl.hpp#L97](https://github.com/hyperledger/iroha/blob/2fa86e1449ee9fb736c44f54be4233b2e0e7e36e/irohad/multi_sig_transactions/mst_processor_impl.hpp#L97): Unused private function: 'FairMstProcessor::expiredBatchesNotify' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-09-10 18:25:41,2018-09-10 18:25:41
https://api.github.com/repos/hyperledger/iroha/issues/1659,https://api.github.com/repos/hyperledger/iroha/issues/comments/415007017,https://github.com/hyperledger/iroha/pull/1659#issuecomment-415007017,sorabot,"SonarQube analysis reported 8 issues

1. ![MINOR][MINOR] [transaction.hpp#L42](https://github.com/hyperledger/iroha/blob/8003f82e6954fb9a6096e3a5a0794522e94cafb9/shared_model/backend/protobuf/transaction.hpp#L42): Member variable 'Transaction::reduced_hash_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [client_api.cpp#L31](https://github.com/hyperledger/iroha/blob/8003f82e6954fb9a6096e3a5a0794522e94cafb9/shared_model/bindings/client_api.cpp#L31): The function 'validateTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L48](https://github.com/hyperledger/iroha/blob/8003f82e6954fb9a6096e3a5a0794522e94cafb9/shared_model/bindings/client_api.cpp#L48): The function 'validateQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L64](https://github.com/hyperledger/iroha/blob/8003f82e6954fb9a6096e3a5a0794522e94cafb9/shared_model/bindings/client_api.cpp#L64): The function 'signTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L81](https://github.com/hyperledger/iroha/blob/8003f82e6954fb9a6096e3a5a0794522e94cafb9/shared_model/bindings/client_api.cpp#L81): The function 'signQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L98](https://github.com/hyperledger/iroha/blob/8003f82e6954fb9a6096e3a5a0794522e94cafb9/shared_model/bindings/client_api.cpp#L98): The function 'hashTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L111](https://github.com/hyperledger/iroha/blob/8003f82e6954fb9a6096e3a5a0794522e94cafb9/shared_model/bindings/client_api.cpp#L111): The function 'hashQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L124](https://github.com/hyperledger/iroha/blob/8003f82e6954fb9a6096e3a5a0794522e94cafb9/shared_model/bindings/client_api.cpp#L124): The function 'utxReducedHash' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-22 11:56:47,2018-08-22 11:56:47
https://api.github.com/repos/hyperledger/iroha/issues/1658,https://api.github.com/repos/hyperledger/iroha/issues/comments/416256775,https://github.com/hyperledger/iroha/issues/1658#issuecomment-416256775,l4l,"Seems that you are building project with outdated cache files. Cache should be cleaned after libs update, it can be done up via _clean.sh_ script (deleting all files in iroha/build/schema/ might also work)",2018-08-27 15:02:11,2018-08-27 15:02:11
https://api.github.com/repos/hyperledger/iroha/issues/1656,https://api.github.com/repos/hyperledger/iroha/issues/comments/417704576,https://github.com/hyperledger/iroha/pull/1656#issuecomment-417704576,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [proto_transaction_sequence_test.cpp#L19](https://github.com/hyperledger/iroha/blob/94a41cec6aa63c32cefd97cff05044573feec929/test/module/shared_model/backend_proto/proto_transaction_sequence_test.cpp#L19): The function 'createAnswerWithErrors' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-31 15:42:45,2018-08-31 15:42:45
https://api.github.com/repos/hyperledger/iroha/issues/1655,https://api.github.com/repos/hyperledger/iroha/issues/comments/414051913,https://github.com/hyperledger/iroha/issues/1655#issuecomment-414051913,truongnmt,"Update:
Iroha: master branch
Proto: copy from master branch [here](https://github.com/hyperledger/iroha/tree/master/shared_model/schema) and [here](https://github.com/hyperledger/iroha/tree/master/schema)
Android SDK: 1.4
But still get error, the public key and private key I got from `admin@test` from example folder.
```
[2018-08-18 11:10:08.916164400][th:45][warning] CommandService Stateless invalid tx: Signature: [[Wrong signature [353f151fc9a7db3ec484156647e7c24014af250576699a59eb257a8666615e2ae350e9b7dbead36d203be73c527c1ab8b10a0c98d61defbb04b9fabe25924404;313a07e6384776ed95447710d15e59148473ccfc052a681317a72a69f2a49910] ]]
Transaction: [[Transaction should contain at least one command Wrongly formed creator_account_id, passed value: ''. Field should match regex '[a-z_0-9]{1,32}\@([a-zA-Z]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)*[a-zA-Z]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?' bad timestamp: too old, timestamp: 0, now: 1534590608915 Quorum should be within range (0, 128] ]]
, hash: 708713afdb215a7fdd1b3246ec662a3d992648dc262ca1d5360be94b6d75313b
```",2018-08-18 11:37:20,2018-08-18 11:50:44
https://api.github.com/repos/hyperledger/iroha/issues/1655,https://api.github.com/repos/hyperledger/iroha/issues/comments/414184312,https://github.com/hyperledger/iroha/issues/1655#issuecomment-414184312,truongnmt,"Tested on [iroha-android](https://github.com/hyperledger/iroha-android) repository:
This is what client send:
<img width=""641"" alt=""screen shot 2018-08-20 at 09 48 37"" src=""https://user-images.githubusercontent.com/11817656/44318305-6f3e4380-a45f-11e8-9f7c-7b9f4d672366.png"">

- iroha server master branch response: 
```
[2018-08-20 02:45:00.811779200][th:23][warning] CommandService Stateless invalid tx: Transaction: [[Transaction should contain at least one command Wrongly formed creator_account_id, passed value: ''. Field should match regex '[a-z_0-9]{1,32}\@([a-zA-Z]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)*[a-zA-Z]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?' bad timestamp: too old, timestamp: 0, now: 1534733100811 Quorum should be within range (0, 128] ]]
, hash: 50433a976fa5653f2f6636f6c1260845e47f1b734497e55264f06678aa8e842d
```

- iroha server develop branch response:
```
[2018-08-20 02:55:36.283199200][th:21][warning] CommandService Stateless invalid tx: Transaction: [[Transaction should contain at least one command Wrongly formed creator_account_id, passed value: ''. Field should match regex '[a-z_0-9]{1,32}\@([a-zA-Z]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)*[a-zA-Z]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?' bad timestamp: too old, timestamp: 0, now: 1534733736282 Quorum should be within range (0, 128] ]]
, hash: 39835987c5c57ef1ff092b8cdbc55b53f78dd83425743efdfb32cfacf6390da6
```

Weird that the [default IP](https://github.com/hyperledger/iroha-android/blob/master/iroha-android-sample/build.gradle#L22) of the app `199.247.26.56` just worked. ",2018-08-20 02:59:36,2018-08-20 02:59:36
https://api.github.com/repos/hyperledger/iroha/issues/1655,https://api.github.com/repos/hyperledger/iroha/issues/comments/414192117,https://github.com/hyperledger/iroha/issues/1655#issuecomment-414192117,truongnmt,"Genesis.block file:

```
root@1e1307a96ff2:/opt/iroha_data# cat genesis.block
{
   ""payload"":{
      ""transactions"":[
         {
            ""payload"":{
               ""reducedPayload"":{
                  ""commands"":[
                     {
                        ""addPeer"":{
                           ""peer"":{
                              ""address"":""0.0.0.0:10001"",
                              ""peerKey"":""vd1YQE0TFeDrJ5AsXXyOsGAsFiOPAFdz30BrwZEwiSk=""
                           }
                        }
                     },
                     {
                        ""createRole"":{
                           ""roleName"":""admin"",
                           ""permissions"":[
                              ""can_add_peer"",
                              ""can_add_signatory"",
                              ""can_create_account"",
                              ""can_create_domain"",
                              ""can_get_all_acc_ast"",
                              ""can_get_all_acc_ast_txs"",
                              ""can_get_all_acc_detail"",
                              ""can_get_all_acc_txs"",
                              ""can_get_all_accounts"",
                              ""can_get_all_signatories"",
                              ""can_get_all_txs"",
                              ""can_get_blocks"",
                              ""can_get_roles"",
                              ""can_read_assets"",
                              ""can_remove_signatory"",
                              ""can_set_quorum""
                           ]
                        }
                     },
                     {
                        ""createRole"":{
                           ""roleName"":""user"",
                           ""permissions"":[
                              ""can_add_signatory"",
                              ""can_get_my_acc_ast"",
                              ""can_get_my_acc_ast_txs"",
                              ""can_get_my_acc_detail"",
                              ""can_get_my_acc_txs"",
                              ""can_get_my_account"",
                              ""can_get_my_signatories"",
                              ""can_get_my_txs"",
                              ""can_grant_can_add_my_signatory"",
                              ""can_grant_can_remove_my_signatory"",
                              ""can_grant_can_set_my_account_detail"",
                              ""can_grant_can_set_my_quorum"",
                              ""can_grant_can_transfer_my_assets"",
                              ""can_receive"",
                              ""can_remove_signatory"",
                              ""can_set_quorum"",
                              ""can_transfer""
                           ]
                        }
                     },
                     {
                        ""createRole"":{
                           ""roleName"":""money_creator"",
                           ""permissions"":[
                              ""can_add_asset_qty"",
                              ""can_create_asset"",
                              ""can_receive"",
                              ""can_transfer""
                           ]
                        }
                     },
                     {
                        ""createDomain"":{
                           ""domainId"":""test"",
                           ""defaultRole"":""user""
                        }
                     },
                     {
                        ""createAsset"":{
                           ""assetName"":""coin"",
                           ""domainId"":""test"",
                           ""precision"":2
                        }
                     },
                     {
                        ""createAccount"":{
                           ""accountName"":""admin"",
                           ""domainId"":""test"",
                           ""mainPubkey"":""MToH5jhHdu2VRHcQ0V5ZFIRzzPwFKmgTF6cqafKkmRA=""
                        }
                     },
                     {
                        ""createAccount"":{
                           ""accountName"":""test"",
                           ""domainId"":""test"",
                           ""mainPubkey"":""cW/lBfafGFEaGwg5Faqf9z7zbmaIGZ85WXUNs4uPS/w=""
                        }
                     },
                     {
                        ""appendRole"":{
                           ""accountId"":""admin@test"",
                           ""roleName"":""admin""
                        }
                     },
                     {
                        ""appendRole"":{
                           ""accountId"":""admin@test"",
                           ""roleName"":""money_creator""
                        }
                     }
                  ],
                  ""quorum"":1
               }
            }
         }
      ],
      ""txNumber"":1,
      ""height"":""1"",
      ""prevBlockHash"":""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=""
   }
}
```",2018-08-20 04:08:39,2018-08-20 04:08:39
https://api.github.com/repos/hyperledger/iroha/issues/1655,https://api.github.com/repos/hyperledger/iroha/issues/comments/454801251,https://github.com/hyperledger/iroha/issues/1655#issuecomment-454801251,LiraLemur,"Hello! Please try a very new java library - it should work much better! 
https://github.com/Warchant/iroha-pure-java

The issue will be closed because the version is outdated. ",2019-01-16 14:36:12,2019-01-16 14:36:12
https://api.github.com/repos/hyperledger/iroha/issues/1655,https://api.github.com/repos/hyperledger/iroha/issues/comments/455120987,https://github.com/hyperledger/iroha/issues/1655#issuecomment-455120987,truongnmt,Sure things! Haven't following for a while! Keep up the good work guys! 💪 💪 💪 ,2019-01-17 10:25:32,2019-01-17 10:25:32
https://api.github.com/repos/hyperledger/iroha/issues/1654,https://api.github.com/repos/hyperledger/iroha/issues/comments/413468489,https://github.com/hyperledger/iroha/pull/1654#issuecomment-413468489,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [postgres_executor_test.cpp#L99](https://github.com/hyperledger/iroha/blob/58bfc25642db0f0a5944b6bacf51cb79c3c7f16c/test/module/irohad/ametsuchi/postgres_executor_test.cpp#L99): The class 'RemoveSignatory' defines member variable with name 'pubkey' also defined in its parent class 'CommandExecutorTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-16 08:32:48,2018-08-16 08:32:48
https://api.github.com/repos/hyperledger/iroha/issues/1650,https://api.github.com/repos/hyperledger/iroha/issues/comments/414286581,https://github.com/hyperledger/iroha/pull/1650#issuecomment-414286581,igor-egorov,"Please check failure of `50 - module_ordering_service_test (Failed)` on Linux.
",2018-08-20 11:39:16,2018-08-20 11:39:16
https://api.github.com/repos/hyperledger/iroha/issues/1647,https://api.github.com/repos/hyperledger/iroha/issues/comments/415346666,https://github.com/hyperledger/iroha/pull/1647#issuecomment-415346666,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [synchronizer_impl.hpp#L70](https://github.com/hyperledger/iroha/blob/1d4b07344a57d3c535e53c29f36fdff38f1358ef/irohad/synchronizer/impl/synchronizer_impl.hpp#L70): Unused private function: 'SynchronizerImpl::processApplicableBlock' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [synchronizer_impl.hpp#L80](https://github.com/hyperledger/iroha/blob/1d4b07344a57d3c535e53c29f36fdff38f1358ef/irohad/synchronizer/impl/synchronizer_impl.hpp#L80): Unused private function: 'SynchronizerImpl::downloadMissingChain' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [status_fuzz.cpp#L38](https://github.com/hyperledger/iroha/blob/1d4b07344a57d3c535e53c29f36fdff38f1358ef/test/fuzzing/status_fuzz.cpp#L38): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [torii_fuzz.cpp#L35](https://github.com/hyperledger/iroha/blob/1d4b07344a57d3c535e53c29f36fdff38f1358ef/test/fuzzing/torii_fuzz.cpp#L35): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L49](https://github.com/hyperledger/iroha/blob/1d4b07344a57d3c535e53c29f36fdff38f1358ef/test/integration/transport/ordering_gate_service_test.cpp#L49): Variable 'factory_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L51](https://github.com/hyperledger/iroha/blob/1d4b07344a57d3c535e53c29f36fdff38f1358ef/test/integration/transport/ordering_gate_service_test.cpp#L51): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-23 09:08:10,2018-08-23 09:08:10
https://api.github.com/repos/hyperledger/iroha/issues/1644,https://api.github.com/repos/hyperledger/iroha/issues/comments/412541639,https://github.com/hyperledger/iroha/pull/1644#issuecomment-412541639,igor-egorov,[DEMO](https://html-hzhcfnurir.now.sh/maintenance/permissions#can-get-domain-acc-detail),2018-08-13 14:40:00,2018-08-13 14:40:00
https://api.github.com/repos/hyperledger/iroha/issues/1643,https://api.github.com/repos/hyperledger/iroha/issues/comments/412469979,https://github.com/hyperledger/iroha/pull/1643#issuecomment-412469979,igor-egorov,https://soramitsu.atlassian.net/wiki/spaces/IS/pages/299958273/Acceptance+Tests is updated too.,2018-08-13 10:07:08,2018-08-13 10:07:08
https://api.github.com/repos/hyperledger/iroha/issues/1642,https://api.github.com/repos/hyperledger/iroha/issues/comments/414059345,https://github.com/hyperledger/iroha/pull/1642#issuecomment-414059345,igor-egorov,"State test has incomplete description on lines 115-117
https://github.com/hyperledger/iroha/blob/25d27b375549ccf535a64c389e1aaa943e23f8f7/test/module/irohad/multi_sig_transactions/state_test.cpp#L114-L119",2018-08-18 13:50:09,2018-08-18 13:50:09
https://api.github.com/repos/hyperledger/iroha/issues/1642,https://api.github.com/repos/hyperledger/iroha/issues/comments/414319186,https://github.com/hyperledger/iroha/pull/1642#issuecomment-414319186,igor-egorov,Please update the branch and resolve conflicts,2018-08-20 13:37:26,2018-08-20 13:37:26
https://api.github.com/repos/hyperledger/iroha/issues/1642,https://api.github.com/repos/hyperledger/iroha/issues/comments/415809679,https://github.com/hyperledger/iroha/pull/1642#issuecomment-415809679,neewy,👍 ,2018-08-24 16:21:44,2018-08-24 16:21:44
https://api.github.com/repos/hyperledger/iroha/issues/1642,https://api.github.com/repos/hyperledger/iroha/issues/comments/415840451,https://github.com/hyperledger/iroha/pull/1642#issuecomment-415840451,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [mst_storage_impl.cpp#L12](https://github.com/hyperledger/iroha/blob/7d050ae5d5a574a200ed091c2ac7a2db9b32d532/irohad/multi_sig_transactions/storage/impl/mst_storage_impl.cpp#L12): Function parameter 'target_peer' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L64](https://github.com/hyperledger/iroha/blob/7d050ae5d5a574a200ed091c2ac7a2db9b32d532/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L64): The function 'createUnbuildTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L163](https://github.com/hyperledger/iroha/blob/7d050ae5d5a574a200ed091c2ac7a2db9b32d532/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L163): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L462](https://github.com/hyperledger/iroha/blob/7d050ae5d5a574a200ed091c2ac7a2db9b32d532/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L462): Function parameter 'tx' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-24 18:16:29,2018-08-24 18:16:29
https://api.github.com/repos/hyperledger/iroha/issues/1641,https://api.github.com/repos/hyperledger/iroha/issues/comments/412411780,https://github.com/hyperledger/iroha/pull/1641#issuecomment-412411780,neewy,"Great, I like ""Grantable"" tags",2018-08-13 05:27:03,2018-08-13 05:27:03
https://api.github.com/repos/hyperledger/iroha/issues/1639,https://api.github.com/repos/hyperledger/iroha/issues/comments/411997020,https://github.com/hyperledger/iroha/pull/1639#issuecomment-411997020,igor-egorov,Test was successful. The pr is closed.,2018-08-10 07:14:37,2018-08-10 07:14:37
https://api.github.com/repos/hyperledger/iroha/issues/1638,https://api.github.com/repos/hyperledger/iroha/issues/comments/419634817,https://github.com/hyperledger/iroha/issues/1638#issuecomment-419634817,thiennm,I'm having the same issue. Could you please share how you solved it?,2018-09-08 11:25:06,2018-09-08 11:25:06
https://api.github.com/repos/hyperledger/iroha/issues/1636,https://api.github.com/repos/hyperledger/iroha/issues/comments/411999251,https://github.com/hyperledger/iroha/pull/1636#issuecomment-411999251,igor-egorov,Get roles test was (I hope accidentally) committed to the develop branch before this pr. Please be careful and try to avoid such cases in future.,2018-08-10 07:24:31,2018-08-10 07:24:31
https://api.github.com/repos/hyperledger/iroha/issues/1636,https://api.github.com/repos/hyperledger/iroha/issues/comments/411999560,https://github.com/hyperledger/iroha/pull/1636#issuecomment-411999560,igor-egorov,* It was committed alongside with merges to actualize feature branch state after receiving reviewers' approvals.,2018-08-10 07:25:53,2018-08-10 07:25:53
https://api.github.com/repos/hyperledger/iroha/issues/1634,https://api.github.com/repos/hyperledger/iroha/issues/comments/411311484,https://github.com/hyperledger/iroha/issues/1634#issuecomment-411311484,aalinyu,Why only release source code?,2018-08-08 07:20:47,2018-08-08 07:20:47
https://api.github.com/repos/hyperledger/iroha/issues/1634,https://api.github.com/repos/hyperledger/iroha/issues/comments/411313021,https://github.com/hyperledger/iroha/issues/1634#issuecomment-411313021,aalinyu,"When i am compling the souce code get:
```
make[2]: *** [../external/src/reactive_extensions_rxcpp-stamp/reactive_extensions_rxcpp-download] Error 1
make[1]: *** [CMakeFiles/reactive_extensions_rxcpp.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
error: RPC failed; curl 18 transfer closed with outstanding read data remaining
fatal: The remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
Cloning into 'grpc_grpc'...
error: RPC failed; curl 56 LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 60
fatal: The remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
-- Had to git clone more than once:
          3 times.
CMake Error at /Users/aalin/Downloads/iroha-1.0.0_beta-4/external/tmp/grpc_grpc-gitclone.cmake:66 (message):
  Failed to clone repository: 'https://github.com/grpc/grpc'


make[2]: *** [../external/src/grpc_grpc-stamp/grpc_grpc-download] Error 1
make[1]: *** [CMakeFiles/grpc_grpc.dir/all] Error 2
make: *** [all] Error 2
```",2018-08-08 07:27:01,2018-08-08 07:27:01
https://api.github.com/repos/hyperledger/iroha/issues/1634,https://api.github.com/repos/hyperledger/iroha/issues/comments/414642897,https://github.com/hyperledger/iroha/issues/1634#issuecomment-414642897,dram,"It's caused by failed `git clone`.

Recently, I tried to build Iroha under Ubuntu 18.04. Several dependences (e.g. grpc, soci) can be installed using `apt-get`, i.e.:

```
build-essential cmake libboost-all-dev libgtest-dev google-mock libgflags-dev libtbb-dev rapidjson-dev libspdlog-dev libprotobuf-dev libgrpc++-dev libsoci-dev protobuf-compiler protobuf-compiler-grpc libpq-dev
```

But `gtest`, `rxcpp` and `ed25519` still need to be pulled from git repo.

BTW, I have no success to build Iroha v1.0.0_beta-4 under Ubuntu 18.04, more investigation is needed.",2018-08-21 11:31:26,2018-08-21 11:31:26
https://api.github.com/repos/hyperledger/iroha/issues/1634,https://api.github.com/repos/hyperledger/iroha/issues/comments/414904642,https://github.com/hyperledger/iroha/issues/1634#issuecomment-414904642,dram,"With following patch, compilation can go further, seems that grpc has changed a lot from 0.11 to 1.3.

```diff
diff --git a/cmake/functions.cmake b/cmake/functions.cmake
index 93f93523a..90ccc03d1 100644
--- a/cmake/functions.cmake
+++ b/cmake/functions.cmake
@@ -73,7 +73,7 @@ function(compile_proto_to_cpp PROTO)
   add_custom_command(
       OUTPUT ${SCHEMA_OUT_DIR}/${GEN_PB_HEADER} ${SCHEMA_OUT_DIR}/${GEN_PB}
       COMMAND ${GEN_COMMAND}
-      ARGS -I${GEN_ARGS} -I${CMAKE_CURRENT_SOURCE_DIR} ${ARGN} --cpp_out=${SCHEMA_OUT_DIR} ${PROTO}
+      ARGS -I${GEN_ARGS} -I${CMAKE_CURRENT_SOURCE_DIR} ${ARGN} --cpp_out=${SCHEMA_OUT_DIR} ${SCHEMA_PATH}/${PROTO}
       DEPENDS protoc ${SCHEMA_PATH}/${PROTO}
       WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
       )
@@ -85,7 +85,7 @@ function(compile_proto_only_grpc_to_cpp PROTO)
   add_custom_command(
       OUTPUT ${SCHEMA_OUT_DIR}/${GEN_GRPC_PB_HEADER} ${SCHEMA_OUT_DIR}/${GEN_GRPC_PB}
       COMMAND ${CMAKE_COMMAND} -E env LD_LIBRARY_PATH=${protobuf_LIBRARY_DIR}:$ENV{LD_LIBRARY_PATH} ""${protoc_EXECUTABLE}""
-      ARGS -I${protobuf_INCLUDE_DIR} -I${CMAKE_CURRENT_SOURCE_DIR} ${ARGN} --grpc_out=${SCHEMA_OUT_DIR} --plugin=protoc-gen-grpc=""${grpc_CPP_PLUGIN}"" ${PROTO}
+      ARGS -I${protobuf_INCLUDE_DIR} -I${CMAKE_CURRENT_SOURCE_DIR} ${ARGN} --grpc_out=${SCHEMA_OUT_DIR} --plugin=protoc-gen-grpc=""${grpc_CPP_PLUGIN}"" ${SCHEMA_PATH}/${PROTO}
       DEPENDS grpc_cpp_plugin ${SCHEMA_PATH}/${PROTO}
       WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
       )
diff --git a/irohad/torii/impl/command_service.cpp b/irohad/torii/impl/command_service.cpp
index 9dd6dbf80..1e676a658 100644
--- a/irohad/torii/impl/command_service.cpp
+++ b/irohad/torii/impl/command_service.cpp
@@ -165,12 +165,12 @@ namespace torii {
               }
               // form an error message, shared between all txs in a sequence
               auto first_tx_blob =
-                  shared_model::proto::makeBlob(txs[0].payload());
+                  shared_model::proto::makeBlob(txs.Get(0).payload());
               auto first_tx_hash =
                   shared_model::crypto::DefaultHashProvider::makeHash(
                       first_tx_blob);
               auto last_tx_blob =
-                  shared_model::proto::makeBlob(txs[txs.size() - 1].payload());
+                  shared_model::proto::makeBlob(txs.Get(txs.size() - 1).payload());
               auto last_tx_hash =
                   shared_model::crypto::DefaultHashProvider::makeHash(
                       last_tx_blob);
diff --git a/shared_model/backend/protobuf/util.hpp b/shared_model/backend/protobuf/util.hpp
index 981974907..86f38a147 100644
--- a/shared_model/backend/protobuf/util.hpp
+++ b/shared_model/backend/protobuf/util.hpp
@@ -28,7 +28,7 @@ namespace shared_model {
     template <typename T>
     crypto::Blob makeBlob(T &&message) {
       crypto::Blob::Bytes data;
-      data.resize(message.ByteSizeLong());
+      data.resize(message.ByteSize());
       message.SerializeToArray(data.data(), data.size());
       return crypto::Blob(std::move(data));
     }
diff --git a/shared_model/interfaces/iroha_internal/transaction_sequence.cpp b/shared_model/interfaces/iroha_internal/transaction_sequence.cpp
index 025413a28..1b98ea9f7 100644
--- a/shared_model/interfaces/iroha_internal/transaction_sequence.cpp
+++ b/shared_model/interfaces/iroha_internal/transaction_sequence.cpp
@@ -3,6 +3,8 @@
  * SPDX-License-Identifier: Apache-2.0
  */

+#include <unordered_map>
+
 #include ""interfaces/iroha_internal/transaction_sequence.hpp""

 #include ""interfaces/iroha_internal/transaction_batch.hpp""

```",2018-08-22 04:12:56,2018-08-22 04:12:56
https://api.github.com/repos/hyperledger/iroha/issues/1634,https://api.github.com/repos/hyperledger/iroha/issues/comments/414905914,https://github.com/hyperledger/iroha/issues/1634#issuecomment-414905914,aalinyu,I have no success to build Iroha v1.0.0_beta-4 under Centos 6.8 too,2018-08-22 04:20:48,2018-08-22 04:20:48
https://api.github.com/repos/hyperledger/iroha/issues/1634,https://api.github.com/repos/hyperledger/iroha/issues/comments/454753087,https://github.com/hyperledger/iroha/issues/1634#issuecomment-454753087,LiraLemur,The version of Iroha mentioned is old. Please try a new one if issue is still occurring. ,2019-01-16 11:55:41,2019-01-16 11:55:41
https://api.github.com/repos/hyperledger/iroha/issues/1633,https://api.github.com/repos/hyperledger/iroha/issues/comments/411089750,https://github.com/hyperledger/iroha/pull/1633#issuecomment-411089750,igor-egorov,I suggest slightly change the names to run-pg-dev.sh and stop-pg-dev.sh.,2018-08-07 15:05:54,2018-08-07 15:05:54
https://api.github.com/repos/hyperledger/iroha/issues/1632,https://api.github.com/repos/hyperledger/iroha/issues/comments/411008180,https://github.com/hyperledger/iroha/pull/1632#issuecomment-411008180,lebdron,Hi @itorK ! Thanks for the pull request. Could you please sign off the commit? It is done with `-s` option for `git commit`.,2018-08-07 10:18:15,2018-08-07 10:18:15
https://api.github.com/repos/hyperledger/iroha/issues/1631,https://api.github.com/repos/hyperledger/iroha/issues/comments/412183938,https://github.com/hyperledger/iroha/pull/1631#issuecomment-412183938,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [yac_gate_impl.hpp#L68](https://github.com/hyperledger/iroha/blob/6b13258593a66ee9b5df5166e7e0d6598501cca8/irohad/consensus/yac/impl/yac_gate_impl.hpp#L68): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-10 19:35:22,2018-08-10 19:35:22
https://api.github.com/repos/hyperledger/iroha/issues/1629,https://api.github.com/repos/hyperledger/iroha/issues/comments/413863889,https://github.com/hyperledger/iroha/pull/1629#issuecomment-413863889,sorabot,"SonarQube analysis reported 7 issues

1. ![MINOR][MINOR] [ordering_init.cpp#L60](https://github.com/hyperledger/iroha/blob/644b0ed8ca0bd7c505b50633a965bec3a1e10907/irohad/main/impl/ordering_init.cpp#L60): The function 'initOrderingGate' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L48](https://github.com/hyperledger/iroha/blob/644b0ed8ca0bd7c505b50633a965bec3a1e10907/test/integration/transport/ordering_gate_service_test.cpp#L48): Variable 'factory_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L50](https://github.com/hyperledger/iroha/blob/644b0ed8ca0bd7c505b50633a965bec3a1e10907/test/integration/transport/ordering_gate_service_test.cpp#L50): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L62](https://github.com/hyperledger/iroha/blob/644b0ed8ca0bd7c505b50633a965bec3a1e10907/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L62): The class 'BlockQueryTransferTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L62](https://github.com/hyperledger/iroha/blob/644b0ed8ca0bd7c505b50633a965bec3a1e10907/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L62): The class 'CommandExecutorTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L62](https://github.com/hyperledger/iroha/blob/644b0ed8ca0bd7c505b50633a965bec3a1e10907/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L62): The class 'WsvQueryCommandTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [postgres_executor_test.cpp#L104](https://github.com/hyperledger/iroha/blob/644b0ed8ca0bd7c505b50633a965bec3a1e10907/test/module/irohad/ametsuchi/postgres_executor_test.cpp#L104): The class 'RemoveSignatory' defines member variable with name 'pubkey' also defined in its parent class 'CommandExecutorTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-17 13:21:46,2018-08-17 13:21:46
https://api.github.com/repos/hyperledger/iroha/issues/1627,https://api.github.com/repos/hyperledger/iroha/issues/comments/412895706,https://github.com/hyperledger/iroha/pull/1627#issuecomment-412895706,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [yac_gate_impl.hpp#L68](https://github.com/hyperledger/iroha/blob/f778e601138fbc17da7d96d1ce269c50a5995824/irohad/consensus/yac/impl/yac_gate_impl.hpp#L68): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-14 14:40:14,2018-08-14 14:40:14
https://api.github.com/repos/hyperledger/iroha/issues/1626,https://api.github.com/repos/hyperledger/iroha/issues/comments/416338796,https://github.com/hyperledger/iroha/pull/1626#issuecomment-416338796,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L96](https://github.com/hyperledger/iroha/blob/82bde380e62da3c178be256270e51f56cf1e196f/irohad/ordering/impl/ordering_gate_impl.hpp#L96): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-27 19:22:53,2018-08-27 19:22:53
https://api.github.com/repos/hyperledger/iroha/issues/1625,https://api.github.com/repos/hyperledger/iroha/issues/comments/409896599,https://github.com/hyperledger/iroha/pull/1625#issuecomment-409896599,sorabot,"SonarQube analysis reported 9 issues

1. ![MINOR][MINOR] [client_api.cpp#L31](https://github.com/hyperledger/iroha/blob/a2c423deb70118a56a419889b974fb7706332d40/shared_model/bindings/client_api.cpp#L31): The function 'validateTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L48](https://github.com/hyperledger/iroha/blob/a2c423deb70118a56a419889b974fb7706332d40/shared_model/bindings/client_api.cpp#L48): The function 'validateQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L64](https://github.com/hyperledger/iroha/blob/a2c423deb70118a56a419889b974fb7706332d40/shared_model/bindings/client_api.cpp#L64): The function 'signTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L81](https://github.com/hyperledger/iroha/blob/a2c423deb70118a56a419889b974fb7706332d40/shared_model/bindings/client_api.cpp#L81): The function 'signQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L98](https://github.com/hyperledger/iroha/blob/a2c423deb70118a56a419889b974fb7706332d40/shared_model/bindings/client_api.cpp#L98): The function 'hashTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L111](https://github.com/hyperledger/iroha/blob/a2c423deb70118a56a419889b974fb7706332d40/shared_model/bindings/client_api.cpp#L111): The function 'hashQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L65](https://github.com/hyperledger/iroha/blob/a2c423deb70118a56a419889b974fb7706332d40/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L65): The function 'createUnbuildTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L162](https://github.com/hyperledger/iroha/blob/a2c423deb70118a56a419889b974fb7706332d40/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L162): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L462](https://github.com/hyperledger/iroha/blob/a2c423deb70118a56a419889b974fb7706332d40/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L462): Function parameter 'tx' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-02 11:35:35,2018-08-02 11:35:35
https://api.github.com/repos/hyperledger/iroha/issues/1623,https://api.github.com/repos/hyperledger/iroha/issues/comments/413883354,https://github.com/hyperledger/iroha/pull/1623#issuecomment-413883354,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [interactive_common_cli.cpp#L43](https://github.com/hyperledger/iroha/blob/a5b00bef69386d3b36cbfb0a2c9c25c8c1f2f813/iroha-cli/interactive/impl/interactive_common_cli.cpp#L43): Return value of function to_string() is not used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AignoredReturnValue)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L68](https://github.com/hyperledger/iroha/blob/a5b00bef69386d3b36cbfb0a2c9c25c8c1f2f813/irohad/consensus/yac/impl/yac_gate_impl.hpp#L68): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-17 14:27:10,2018-08-17 14:27:10
https://api.github.com/repos/hyperledger/iroha/issues/1621,https://api.github.com/repos/hyperledger/iroha/issues/comments/414290310,https://github.com/hyperledger/iroha/pull/1621#issuecomment-414290310,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [synchronizer_impl.hpp#L69](https://github.com/hyperledger/iroha/blob/9fa3fc9e84fcdc691e5f885d4a2873b7588b21ba/irohad/synchronizer/impl/synchronizer_impl.hpp#L69): Unused private function: 'SynchronizerImpl::processApplicableBlock' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [synchronizer_impl.hpp#L79](https://github.com/hyperledger/iroha/blob/9fa3fc9e84fcdc691e5f885d4a2873b7588b21ba/irohad/synchronizer/impl/synchronizer_impl.hpp#L79): Unused private function: 'SynchronizerImpl::downloadMissingChain' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [tx_acceptance_test.cpp#L240](https://github.com/hyperledger/iroha/blob/9fa3fc9e84fcdc691e5f885d4a2873b7588b21ba/test/integration/acceptance/tx_acceptance_test.cpp#L240): Variable 'kAccountId' is assigned a value that is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunreadVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-20 11:54:09,2018-08-20 11:54:09
https://api.github.com/repos/hyperledger/iroha/issues/1618,https://api.github.com/repos/hyperledger/iroha/issues/comments/409174735,https://github.com/hyperledger/iroha/pull/1618#issuecomment-409174735,muratovv,CI doesn't pass because of client_test. This test will be fixed in https://github.com/hyperledger/iroha/pull/1619.,2018-07-31 10:33:35,2018-07-31 10:33:35
https://api.github.com/repos/hyperledger/iroha/issues/1614,https://api.github.com/repos/hyperledger/iroha/issues/comments/411675699,https://github.com/hyperledger/iroha/pull/1614#issuecomment-411675699,sorabot,"SonarQube analysis reported 10 issues

1. ![MINOR][MINOR] [client_api.cpp#L31](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/shared_model/bindings/client_api.cpp#L31): The function 'validateTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L48](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/shared_model/bindings/client_api.cpp#L48): The function 'validateQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L64](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/shared_model/bindings/client_api.cpp#L64): The function 'signTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L81](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/shared_model/bindings/client_api.cpp#L81): The function 'signQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L98](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/shared_model/bindings/client_api.cpp#L98): The function 'hashTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L111](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/shared_model/bindings/client_api.cpp#L111): The function 'hashQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [proto_transaction_sequence_test.cpp#L19](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/test/module/shared_model/backend_proto/proto_transaction_sequence_test.cpp#L19): The function 'createAnswerWithErrors' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L64](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L64): The function 'createUnbuildTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L163](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L163): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L463](https://github.com/hyperledger/iroha/blob/bf407d346faa7d27a05e49cd36c7bd00a090cf96/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L463): Function parameter 'tx' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-09 08:14:25,2018-08-09 08:14:25
https://api.github.com/repos/hyperledger/iroha/issues/1612,https://api.github.com/repos/hyperledger/iroha/issues/comments/411729284,https://github.com/hyperledger/iroha/pull/1612#issuecomment-411729284,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [ordering_init.cpp#L55](https://github.com/hyperledger/iroha/blob/78ad3c970986633774f6bafee5e96f8211ab5866/irohad/main/impl/ordering_init.cpp#L55): The function 'initOrderingGate' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L48](https://github.com/hyperledger/iroha/blob/78ad3c970986633774f6bafee5e96f8211ab5866/test/integration/transport/ordering_gate_service_test.cpp#L48): Variable 'factory_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L50](https://github.com/hyperledger/iroha/blob/78ad3c970986633774f6bafee5e96f8211ab5866/test/integration/transport/ordering_gate_service_test.cpp#L50): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-09 11:42:39,2018-08-09 11:42:39
https://api.github.com/repos/hyperledger/iroha/issues/1605,https://api.github.com/repos/hyperledger/iroha/issues/comments/412857867,https://github.com/hyperledger/iroha/pull/1605#issuecomment-412857867,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [postgres_executor_test.cpp#L98](https://github.com/hyperledger/iroha/blob/6c856b1d489b00ca79dc517c484f964d9a28f9f8/test/module/irohad/ametsuchi/postgres_executor_test.cpp#L98): The class 'RemoveSignatory' defines member variable with name 'pubkey' also defined in its parent class 'CommandExecutorTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [postgres_executor_test.cpp#L1408](https://github.com/hyperledger/iroha/blob/6c856b1d489b00ca79dc517c484f964d9a28f9f8/test/module/irohad/ametsuchi/postgres_executor_test.cpp#L1408): The function 'checkTransfer' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-14 12:41:24,2018-08-14 12:41:24
https://api.github.com/repos/hyperledger/iroha/issues/1598,https://api.github.com/repos/hyperledger/iroha/issues/comments/416537094,https://github.com/hyperledger/iroha/pull/1598#issuecomment-416537094,igor-egorov,There is only one failed test - module_ordering_service_test. This pr will be merged without fixing it - we have a separate task for this https://soramitsu.atlassian.net/browse/IR-1659 .,2018-08-28 10:41:54,2018-08-28 10:41:54
https://api.github.com/repos/hyperledger/iroha/issues/1597,https://api.github.com/repos/hyperledger/iroha/issues/comments/407720221,https://github.com/hyperledger/iroha/pull/1597#issuecomment-407720221,neewy,@lebdron @igor-egorov can we review Codacy issues and decide if we need to put them in backlog? ,2018-07-25 11:17:26,2018-07-25 11:17:26
https://api.github.com/repos/hyperledger/iroha/issues/1597,https://api.github.com/repos/hyperledger/iroha/issues/comments/408053413,https://github.com/hyperledger/iroha/pull/1597#issuecomment-408053413,kamilsa,Please put a note that get pending transactions is not implemented yet. So far only shared model query class has been implemented,2018-07-26 10:32:14,2018-07-26 10:32:14
https://api.github.com/repos/hyperledger/iroha/issues/1597,https://api.github.com/repos/hyperledger/iroha/issues/comments/408056076,https://github.com/hyperledger/iroha/pull/1597#issuecomment-408056076,neewy,@kamilsa 🙆 ,2018-07-26 10:44:09,2018-07-26 10:44:09
https://api.github.com/repos/hyperledger/iroha/issues/1597,https://api.github.com/repos/hyperledger/iroha/issues/comments/408142672,https://github.com/hyperledger/iroha/pull/1597#issuecomment-408142672,neewy,"As our CI has issues with dependency updates, we have decided to postpone our release until Jenkins can update build dependencies @bakhtin @kamilsa @lebdron ",2018-07-26 15:46:28,2018-07-26 15:46:28
https://api.github.com/repos/hyperledger/iroha/issues/1597,https://api.github.com/repos/hyperledger/iroha/issues/comments/408580449,https://github.com/hyperledger/iroha/pull/1597#issuecomment-408580449,neewy,Release is blocked with quality gate. Need to review & localize test issues before releasing,2018-07-28 03:55:21,2018-07-28 03:55:21
https://api.github.com/repos/hyperledger/iroha/issues/1597,https://api.github.com/repos/hyperledger/iroha/issues/comments/409916150,https://github.com/hyperledger/iroha/pull/1597#issuecomment-409916150,sorabot,"SonarQube analysis reported 19 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 18 minor

#### Top 10 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L203](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L203): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [interactive_common_cli.cpp#L43](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/iroha-cli/interactive/impl/interactive_common_cli.cpp#L43): Return value of function to_string() is not used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AignoredReturnValue)
1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L145](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/iroha-cli/interactive/interactive_transaction_cli.hpp#L145): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_index.hpp#L54](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/irohad/ametsuchi/impl/postgres_block_index.hpp#L54): Unused private function: 'PostgresBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L64](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/irohad/ametsuchi/impl/postgres_block_query.hpp#L64): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/irohad/ametsuchi/impl/postgres_block_query.hpp#L72): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L82](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/irohad/ametsuchi/impl/postgres_block_query.hpp#L82): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ordering_init.cpp#L55](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/irohad/main/impl/ordering_init.cpp#L55): The function 'initOrderingGate' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [pb_common.cpp#L54](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/irohad/model/converters/impl/pb_common.cpp#L54): The function 'serializeAsset' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [pb_common.cpp#L71](https://github.com/hyperledger/iroha/blob/67c450e3002351cc3ddeb51142c92cb067021057/irohad/model/converters/impl/pb_common.cpp#L71): The function 'serializeDomain' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-08-02 12:55:18,2018-08-02 12:55:18
https://api.github.com/repos/hyperledger/iroha/issues/1594,https://api.github.com/repos/hyperledger/iroha/issues/comments/407672240,https://github.com/hyperledger/iroha/pull/1594#issuecomment-407672240,neewy,"> Doesn't work on docker_3 machine....

??",2018-07-25 08:13:53,2018-07-25 08:13:53
https://api.github.com/repos/hyperledger/iroha/issues/1594,https://api.github.com/repos/hyperledger/iroha/issues/comments/408079496,https://github.com/hyperledger/iroha/pull/1594#issuecomment-408079496,neewy,"@Stayer update your PR with `git fetch origin develop:develop; git rebase develop`
",2018-07-26 12:24:14,2018-07-26 12:24:14
https://api.github.com/repos/hyperledger/iroha/issues/1592,https://api.github.com/repos/hyperledger/iroha/issues/comments/408193791,https://github.com/hyperledger/iroha/pull/1592#issuecomment-408193791,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L47](https://github.com/hyperledger/iroha/blob/65c96a7d25fe76bb21110e2560477a7fed2e54dd/test/integration/transport/ordering_gate_service_test.cpp#L47): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-26 18:35:37,2018-07-26 18:35:37
https://api.github.com/repos/hyperledger/iroha/issues/1591,https://api.github.com/repos/hyperledger/iroha/issues/comments/408795411,https://github.com/hyperledger/iroha/pull/1591#issuecomment-408795411,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L64](https://github.com/hyperledger/iroha/blob/c70898beab55d042062c76e73314e53da96174ca/irohad/ametsuchi/impl/postgres_block_query.hpp#L64): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/c70898beab55d042062c76e73314e53da96174ca/irohad/ametsuchi/impl/postgres_block_query.hpp#L72): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L82](https://github.com/hyperledger/iroha/blob/c70898beab55d042062c76e73314e53da96174ca/irohad/ametsuchi/impl/postgres_block_query.hpp#L82): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-30 08:59:15,2018-07-30 08:59:15
https://api.github.com/repos/hyperledger/iroha/issues/1590,https://api.github.com/repos/hyperledger/iroha/issues/comments/407416802,https://github.com/hyperledger/iroha/issues/1590#issuecomment-407416802,l4l,"Could you try with the following versions:
- grpc 1.11.0 (I actually use 1.8.4 and it's working fine, so you may try it as well)
- protobuf 3.5.1

Also, what commit are you using? And could you please check, that after docker startup you're able to connect to `localhost:50051` (netcat/curl should work)",2018-07-24 14:00:08,2018-07-24 14:00:08
https://api.github.com/repos/hyperledger/iroha/issues/1590,https://api.github.com/repos/hyperledger/iroha/issues/comments/407666897,https://github.com/hyperledger/iroha/issues/1590#issuecomment-407666897,aalinyu,"@l4l  I use the master branch :`0b2066b Kitsu on 2018/7/24 at 01:28 (committed by GitHub) Add mst documentation (#1566)`get the error.
when i use the latest release verson will be fine.",2018-07-25 07:52:37,2018-07-25 07:52:37
https://api.github.com/repos/hyperledger/iroha/issues/1590,https://api.github.com/repos/hyperledger/iroha/issues/comments/407716365,https://github.com/hyperledger/iroha/issues/1590#issuecomment-407716365,l4l,"I guess it master branch. So what about the connection to Iroha nodes, does it work?",2018-07-25 10:59:33,2018-07-25 10:59:33
https://api.github.com/repos/hyperledger/iroha/issues/1590,https://api.github.com/repos/hyperledger/iroha/issues/comments/407716783,https://github.com/hyperledger/iroha/issues/1590#issuecomment-407716783,aalinyu,"connection to Iroha node work ok

Kitsu <notifications@github.com> 于2018年7月25日周三 下午6:59写道：

> I guess it master branch. So what about the connection to Iroha nodes,
> does it work?
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/iroha/issues/1590#issuecomment-407716365>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ATfO3PN9phjrRmSmOWFbHueVf7Jpz90Xks5uKE-bgaJpZM4VcRmY>
> .
>
",2018-07-25 11:01:18,2018-07-25 11:01:18
https://api.github.com/repos/hyperledger/iroha/issues/1590,https://api.github.com/repos/hyperledger/iroha/issues/comments/407718710,https://github.com/hyperledger/iroha/issues/1590#issuecomment-407718710,l4l,"Ok, and did you try different grpc/protobuf versions?",2018-07-25 11:10:14,2018-07-25 11:10:14
https://api.github.com/repos/hyperledger/iroha/issues/1590,https://api.github.com/repos/hyperledger/iroha/issues/comments/408003241,https://github.com/hyperledger/iroha/issues/1590#issuecomment-408003241,aalinyu,"@l4l i have try grpc 1.13.2 , protobuf 3.6.0 got the same error",2018-07-26 07:26:42,2018-07-26 07:26:42
https://api.github.com/repos/hyperledger/iroha/issues/1590,https://api.github.com/repos/hyperledger/iroha/issues/comments/454752622,https://github.com/hyperledger/iroha/issues/1590#issuecomment-454752622,LiraLemur,"Issue is old, will be closed. Please try a new Iroha version. ",2019-01-16 11:53:58,2019-01-16 11:53:58
https://api.github.com/repos/hyperledger/iroha/issues/1589,https://api.github.com/repos/hyperledger/iroha/issues/comments/407416674,https://github.com/hyperledger/iroha/pull/1589#issuecomment-407416674,neewy,Please change target branch to develop,2018-07-24 13:59:44,2018-07-24 13:59:44
https://api.github.com/repos/hyperledger/iroha/issues/1588,https://api.github.com/repos/hyperledger/iroha/issues/comments/407088039,https://github.com/hyperledger/iroha/pull/1588#issuecomment-407088039,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [postgres_executor_test.cpp#L80](https://github.com/hyperledger/iroha/blob/336f06d7853fd543b5cb822168b5c99db5aa9502/test/module/irohad/ametsuchi/postgres_executor_test.cpp#L80): The class 'RemoveSignatory' defines member variable with name 'pubkey' also defined in its parent class 'CommandExecutorTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-23 14:58:31,2018-07-23 14:58:31
https://api.github.com/repos/hyperledger/iroha/issues/1587,https://api.github.com/repos/hyperledger/iroha/issues/comments/408696614,https://github.com/hyperledger/iroha/pull/1587#issuecomment-408696614,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [ordering_init.cpp#L55](https://github.com/hyperledger/iroha/blob/22861ea05b08674d6cf4f6ef96af6439757ac6e9/irohad/main/impl/ordering_init.cpp#L55): The function 'initOrderingGate' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L48](https://github.com/hyperledger/iroha/blob/22861ea05b08674d6cf4f6ef96af6439757ac6e9/test/integration/transport/ordering_gate_service_test.cpp#L48): Variable 'factory_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L50](https://github.com/hyperledger/iroha/blob/22861ea05b08674d6cf4f6ef96af6439757ac6e9/test/integration/transport/ordering_gate_service_test.cpp#L50): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-29 18:34:16,2018-07-29 18:34:16
https://api.github.com/repos/hyperledger/iroha/issues/1585,https://api.github.com/repos/hyperledger/iroha/issues/comments/407656647,https://github.com/hyperledger/iroha/pull/1585#issuecomment-407656647,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [postgres_executor_test.cpp#L82](https://github.com/hyperledger/iroha/blob/cd98d9eeac63b98de894f842bc90ab29a14ba9c0/test/module/irohad/ametsuchi/postgres_executor_test.cpp#L82): The class 'RemoveSignatory' defines member variable with name 'pubkey' also defined in its parent class 'CommandExecutorTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L130](https://github.com/hyperledger/iroha/blob/cd98d9eeac63b98de894f842bc90ab29a14ba9c0/test/module/irohad/execution/command_validate_execute_test.cpp#L130): The function 'makeEmptyError' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L135](https://github.com/hyperledger/iroha/blob/cd98d9eeac63b98de894f842bc90ab29a14ba9c0/test/module/irohad/execution/command_validate_execute_test.cpp#L135): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-25 07:10:10,2018-07-25 07:10:10
https://api.github.com/repos/hyperledger/iroha/issues/1584,https://api.github.com/repos/hyperledger/iroha/issues/comments/407527046,https://github.com/hyperledger/iroha/pull/1584#issuecomment-407527046,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L64](https://github.com/hyperledger/iroha/blob/e747fe9950679deedb596ca6306dda7097564ced/irohad/ametsuchi/impl/postgres_block_query.hpp#L64): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/e747fe9950679deedb596ca6306dda7097564ced/irohad/ametsuchi/impl/postgres_block_query.hpp#L72): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L82](https://github.com/hyperledger/iroha/blob/e747fe9950679deedb596ca6306dda7097564ced/irohad/ametsuchi/impl/postgres_block_query.hpp#L82): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L61](https://github.com/hyperledger/iroha/blob/e747fe9950679deedb596ca6306dda7097564ced/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L61): The class 'BlockQueryTransferTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L61](https://github.com/hyperledger/iroha/blob/e747fe9950679deedb596ca6306dda7097564ced/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L61): The class 'CommandExecutorTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L61](https://github.com/hyperledger/iroha/blob/e747fe9950679deedb596ca6306dda7097564ced/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L61): The class 'WsvQueryCommandTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-24 19:39:35,2018-07-24 19:39:35
https://api.github.com/repos/hyperledger/iroha/issues/1582,https://api.github.com/repos/hyperledger/iroha/issues/comments/406984482,https://github.com/hyperledger/iroha/pull/1582#issuecomment-406984482,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L97](https://github.com/hyperledger/iroha/blob/2c99de3f5251bfa34bd4813887568f8d7eda7f27/irohad/ordering/impl/ordering_gate_impl.hpp#L97): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-23 08:44:12,2018-07-23 08:44:12
https://api.github.com/repos/hyperledger/iroha/issues/1581,https://api.github.com/repos/hyperledger/iroha/issues/comments/407933196,https://github.com/hyperledger/iroha/pull/1581#issuecomment-407933196,l4l,"So far I've removed overflow checks, since it going to be in #1585
Also *FieldValidator::validateAmount* has code similar to *amount.cpp* file and that is ok, because the last one is going to be removed. The code in this function also written in such a way, so it's easier to migrate to `using Amount = std::string`",2018-07-25 23:58:23,2018-07-25 23:58:23
https://api.github.com/repos/hyperledger/iroha/issues/1580,https://api.github.com/repos/hyperledger/iroha/issues/comments/406446380,https://github.com/hyperledger/iroha/issues/1580#issuecomment-406446380,l4l,"Indeed, the documentation is not perfect and you are very welcome to contribute. If you'd like discuss/clarify any terms you may ask for them either here, or at any of our chat ([gitter](https://gitter.im/hyperledger-iroha/Lobby), [rocket](https://chat.hyperledger.org/channel/iroha), or [telegram](https://t.me/hyperledgeriroha)).

If you are really interested in contribution, please perform correction by some ""reviewable pieces"" (e.g up to 100 loc in diff). Otherwise it might be hard to check for maintainers, thus merging of the PR may go to nowhere.
Setup for building docs described at [related readme](https://github.com/hyperledger/iroha/tree/develop/docs), and the PRs must based on the `develop` branch. Feel free to ask any additional questions.

And thank you for your initiative!",2018-07-19 23:42:24,2018-07-19 23:42:24
https://api.github.com/repos/hyperledger/iroha/issues/1580,https://api.github.com/repos/hyperledger/iroha/issues/comments/408690623,https://github.com/hyperledger/iroha/issues/1580#issuecomment-408690623,thaddeus-cambron,This makes sense. Thank you for the direction. I connected with igor-egorov through the Training and Education Working Group. He suggested that I look at Core concepts first.,2018-07-29 16:55:46,2018-07-30 01:55:00
https://api.github.com/repos/hyperledger/iroha/issues/1580,https://api.github.com/repos/hyperledger/iroha/issues/comments/408778968,https://github.com/hyperledger/iroha/issues/1580#issuecomment-408778968,neewy,@thaddeus-cambron hi! Happy to hear that you can help with grammar issues and consistency. Are there any updates?,2018-07-30 07:56:36,2018-07-30 07:56:36
https://api.github.com/repos/hyperledger/iroha/issues/1580,https://api.github.com/repos/hyperledger/iroha/issues/comments/410483932,https://github.com/hyperledger/iroha/issues/1580#issuecomment-410483932,thaddeus-cambron,I have been working through the Hyperledger Training and Education Working Group with Igor Eqorov as a contact. I am scheduled to give him a draft update of the Core Concepts this weekend - 8/5.,2018-08-04 23:19:58,2018-08-04 23:19:58
https://api.github.com/repos/hyperledger/iroha/issues/1580,https://api.github.com/repos/hyperledger/iroha/issues/comments/410545513,https://github.com/hyperledger/iroha/issues/1580#issuecomment-410545513,thaddeus-cambron,"The following is a gist I created for review,  prior to initiating a PR:
https://gist.github.com/thaddeus-cambron/4f337191e89cdfe4cdf698372631d9f7",2018-08-05 20:24:52,2018-08-05 20:24:52
https://api.github.com/repos/hyperledger/iroha/issues/1580,https://api.github.com/repos/hyperledger/iroha/issues/comments/416161863,https://github.com/hyperledger/iroha/issues/1580#issuecomment-416161863,l4l,"@thaddeus-cambron it's pretty hard to review such fixes without pr, moreover such comments might be missing (as you see there was no response for a 3 weeks)
",2018-08-27 08:57:57,2018-08-27 08:57:57
https://api.github.com/repos/hyperledger/iroha/issues/1580,https://api.github.com/repos/hyperledger/iroha/issues/comments/416215853,https://github.com/hyperledger/iroha/issues/1580#issuecomment-416215853,thaddeus-cambron,I am working directly with @igor-egorov. This work was set up through the Hyperledger Training & Education Working Group. and @igor-egorov through a Google Doc.,2018-08-27 12:50:32,2018-08-27 12:50:32
https://api.github.com/repos/hyperledger/iroha/issues/1580,https://api.github.com/repos/hyperledger/iroha/issues/comments/454751921,https://github.com/hyperledger/iroha/issues/1580#issuecomment-454751921,LiraLemur,Igor told me we could close this issue. Thank you! ,2019-01-16 11:51:17,2019-01-16 11:51:17
https://api.github.com/repos/hyperledger/iroha/issues/1579,https://api.github.com/repos/hyperledger/iroha/issues/comments/406622826,https://github.com/hyperledger/iroha/pull/1579#issuecomment-406622826,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [find_fuzz.cpp#L28](https://github.com/hyperledger/iroha/blob/0ee1799a79bd009e93278b09fa3d452bb2231f0f/test/fuzzing/find_fuzz.cpp#L28): Variable 'storage_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [find_fuzz.cpp#L29](https://github.com/hyperledger/iroha/blob/0ee1799a79bd009e93278b09fa3d452bb2231f0f/test/fuzzing/find_fuzz.cpp#L29): Variable 'bq_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [find_fuzz.cpp#L30](https://github.com/hyperledger/iroha/blob/0ee1799a79bd009e93278b09fa3d452bb2231f0f/test/fuzzing/find_fuzz.cpp#L30): Variable 'wq_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [find_fuzz.cpp#L40](https://github.com/hyperledger/iroha/blob/0ee1799a79bd009e93278b09fa3d452bb2231f0f/test/fuzzing/find_fuzz.cpp#L40): The function 'LLVMFuzzerTestOneInput' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [status_fuzz.cpp#L36](https://github.com/hyperledger/iroha/blob/0ee1799a79bd009e93278b09fa3d452bb2231f0f/test/fuzzing/status_fuzz.cpp#L36): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [torii_fuzz.cpp#L33](https://github.com/hyperledger/iroha/blob/0ee1799a79bd009e93278b09fa3d452bb2231f0f/test/fuzzing/torii_fuzz.cpp#L33): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-20 14:45:57,2018-07-20 14:45:57
https://api.github.com/repos/hyperledger/iroha/issues/1578,https://api.github.com/repos/hyperledger/iroha/issues/comments/406326121,https://github.com/hyperledger/iroha/issues/1578#issuecomment-406326121,l4l,"Account identifier was removed from the command (#1511), since it doesn't introduce additional information (the account can add assets only to him/her-self).
I hope the problem is solved, so closing the issue. Feel free to bump it, if the issue is remaining",2018-07-19 15:53:45,2018-07-19 15:53:45
https://api.github.com/repos/hyperledger/iroha/issues/1578,https://api.github.com/repos/hyperledger/iroha/issues/comments/406476180,https://github.com/hyperledger/iroha/issues/1578#issuecomment-406476180,ayushpalak,"How can I add asset then, the info in doc is old and giving error. help plz",2018-07-20 03:09:49,2018-07-20 03:09:49
https://api.github.com/repos/hyperledger/iroha/issues/1578,https://api.github.com/repos/hyperledger/iroha/issues/comments/406569691,https://github.com/hyperledger/iroha/issues/1578#issuecomment-406569691,igor-egorov,"@ayushpalak (mention used since the issue was closed)
New assets can be added only to account of transaction creator. So the account of transaction creator should have can_add_asset_qty permission.

You can find an example of usage in documentation: http://iroha.readthedocs.io/en/latest/maintenance/permissions.html#can-add-asset-qty",2018-07-20 11:09:37,2018-07-20 11:10:56
https://api.github.com/repos/hyperledger/iroha/issues/1578,https://api.github.com/repos/hyperledger/iroha/issues/comments/410523459,https://github.com/hyperledger/iroha/issues/1578#issuecomment-410523459,AmitKalita,"Well the issue is not resolved. I am still facing the same problem
",2018-08-05 14:22:02,2018-08-05 14:22:02
https://api.github.com/repos/hyperledger/iroha/issues/1578,https://api.github.com/repos/hyperledger/iroha/issues/comments/416166157,https://github.com/hyperledger/iroha/issues/1578#issuecomment-416166157,l4l,@AmitKalita it was already discussed that it's not an issue. AddAssetQty is intended to be performed only and only toward account creator,2018-08-27 09:14:15,2018-08-27 09:14:15
https://api.github.com/repos/hyperledger/iroha/issues/1575,https://api.github.com/repos/hyperledger/iroha/issues/comments/414546766,https://github.com/hyperledger/iroha/pull/1575#issuecomment-414546766,dram,"As `boost::thread` dependency is introduced, I think that docs related to boost installation also need to be updated, i.e. https://github.com/hyperledger/iroha/blame/v1.0.0_beta-4/docs/source/guides/build.rst#L78-L82",2018-08-21 04:32:50,2018-08-21 04:32:50
https://api.github.com/repos/hyperledger/iroha/issues/1574,https://api.github.com/repos/hyperledger/iroha/issues/comments/406199473,https://github.com/hyperledger/iroha/pull/1574#issuecomment-406199473,Akvinikym,"Please, also pay attentional that I fixed the SFV test, which breaks in develop every second time. The change is tiny, so I decided to put it here",2018-07-19 08:35:19,2018-07-19 08:35:19
https://api.github.com/repos/hyperledger/iroha/issues/1573,https://api.github.com/repos/hyperledger/iroha/issues/comments/406246337,https://github.com/hyperledger/iroha/pull/1573#issuecomment-406246337,sorabot,"SonarQube analysis reported 7 issues

1. ![MINOR][MINOR] [postgres_block_index.hpp#L54](https://github.com/hyperledger/iroha/blob/be92c271a422d3b9ca8cddafe5f2d9bb26c32054/irohad/ametsuchi/impl/postgres_block_index.hpp#L54): Unused private function: 'PostgresBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L78](https://github.com/hyperledger/iroha/blob/be92c271a422d3b9ca8cddafe5f2d9bb26c32054/irohad/ametsuchi/impl/postgres_block_query.hpp#L78): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L86](https://github.com/hyperledger/iroha/blob/be92c271a422d3b9ca8cddafe5f2d9bb26c32054/irohad/ametsuchi/impl/postgres_block_query.hpp#L86): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L96](https://github.com/hyperledger/iroha/blob/be92c271a422d3b9ca8cddafe5f2d9bb26c32054/irohad/ametsuchi/impl/postgres_block_query.hpp#L96): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L81](https://github.com/hyperledger/iroha/blob/be92c271a422d3b9ca8cddafe5f2d9bb26c32054/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L81): The class 'BlockQueryTransferTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L81](https://github.com/hyperledger/iroha/blob/be92c271a422d3b9ca8cddafe5f2d9bb26c32054/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L81): The class 'WsvQueryCommandTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [storage_init_test.cpp#L23](https://github.com/hyperledger/iroha/blob/be92c271a422d3b9ca8cddafe5f2d9bb26c32054/test/module/irohad/ametsuchi/storage_init_test.cpp#L23): Variable 'pg_opt_without_dbname_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-19 11:37:15,2018-07-19 11:37:15
https://api.github.com/repos/hyperledger/iroha/issues/1570,https://api.github.com/repos/hyperledger/iroha/issues/comments/406415670,https://github.com/hyperledger/iroha/pull/1570#issuecomment-406415670,l4l,"> There is possible to improve it with O(N).

Not really (or I'm too silly, so please explain how), it's O(nlogn) with sorting (that basically requires copying though probably not efficient in that particular case), since `SignatureRangeType` is forward iterable. This optimization task probably requires some refactorings, so it would be nice to add the task in jira

Also please update the branch, so CI becomes green",2018-07-19 21:11:13,2018-07-19 21:11:13
https://api.github.com/repos/hyperledger/iroha/issues/1570,https://api.github.com/repos/hyperledger/iroha/issues/comments/407009311,https://github.com/hyperledger/iroha/pull/1570#issuecomment-407009311,muratovv,"@l4l 
Solutions with O(N) is the following. Rework `unordered_set` with `set`. And fetch the first elements from left and right for 2*lg(n) and check iterators for O(n) because iterating on the tree is O(1). The last step to check the equality size of left and right. So, we have: 2*lg(n) + O(1)*n + 2*O(1) == O(n).",2018-07-23 10:16:09,2018-07-23 10:16:09
https://api.github.com/repos/hyperledger/iroha/issues/1570,https://api.github.com/repos/hyperledger/iroha/issues/comments/407010380,https://github.com/hyperledger/iroha/pull/1570#issuecomment-407010380,muratovv,"@kamilsa 
>Maybe we can change the signature set type to ordered set?

Yes, it possible. But I think the change doesn't relate to the current pr, isn't it? ",2018-07-23 10:19:45,2018-07-23 10:19:45
https://api.github.com/repos/hyperledger/iroha/issues/1570,https://api.github.com/repos/hyperledger/iroha/issues/comments/407011241,https://github.com/hyperledger/iroha/pull/1570#issuecomment-407011241,kamilsa,@muratovv then we need to create the task in Jira for that,2018-07-23 10:23:15,2018-07-23 10:23:15
https://api.github.com/repos/hyperledger/iroha/issues/1568,https://api.github.com/repos/hyperledger/iroha/issues/comments/405571215,https://github.com/hyperledger/iroha/pull/1568#issuecomment-405571215,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transport_builder_test.cpp#L160](https://github.com/hyperledger/iroha/blob/f59611b759fb10699aefd61ed36ded80de6f19c4/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L160): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-17 12:53:12,2018-07-17 12:53:12
https://api.github.com/repos/hyperledger/iroha/issues/1567,https://api.github.com/repos/hyperledger/iroha/issues/comments/405583997,https://github.com/hyperledger/iroha/pull/1567#issuecomment-405583997,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transport_builder_test.cpp#L159](https://github.com/hyperledger/iroha/blob/736b4c228d7988aa150ea94223658ad1a3eec33d/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L159): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-17 13:35:43,2018-07-17 13:35:43
https://api.github.com/repos/hyperledger/iroha/issues/1565,https://api.github.com/repos/hyperledger/iroha/issues/comments/405669099,https://github.com/hyperledger/iroha/pull/1565#issuecomment-405669099,muratovv,"Also, pls, fix tests.
```
The following tests FAILED:
	 60 - module_stateful_validator_test (Failed)
	 85 - module_transport_builder_test (Failed)
```
",2018-07-17 17:50:26,2018-07-17 17:50:26
https://api.github.com/repos/hyperledger/iroha/issues/1565,https://api.github.com/repos/hyperledger/iroha/issues/comments/405918451,https://github.com/hyperledger/iroha/pull/1565#issuecomment-405918451,kamilsa,"module_stateful_validator_test is failing in develop
module_transport_builder_test fixed",2018-07-18 12:48:13,2018-07-18 12:48:13
https://api.github.com/repos/hyperledger/iroha/issues/1565,https://api.github.com/repos/hyperledger/iroha/issues/comments/406271859,https://github.com/hyperledger/iroha/pull/1565#issuecomment-406271859,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [transport_builder_test.cpp#L65](https://github.com/hyperledger/iroha/blob/f2d5574d944b7e295d3eb7c8f5f15cda6fe47f70/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L65): The function 'createUnbuildTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L162](https://github.com/hyperledger/iroha/blob/f2d5574d944b7e295d3eb7c8f5f15cda6fe47f70/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L162): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L462](https://github.com/hyperledger/iroha/blob/f2d5574d944b7e295d3eb7c8f5f15cda6fe47f70/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L462): Function parameter 'tx' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-19 13:14:36,2018-07-19 13:14:36
https://api.github.com/repos/hyperledger/iroha/issues/1564,https://api.github.com/repos/hyperledger/iroha/issues/comments/405101806,https://github.com/hyperledger/iroha/pull/1564#issuecomment-405101806,sorabot,"SonarQube analysis reported 1 issue

1. ![MAJOR][MAJOR] [query_response_template.hpp#L204](https://github.com/hyperledger/iroha/blob/5b7de1716a85c55f19b7b92e5b5aa0a536d36e47/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L204): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2018-07-15 16:16:36,2018-07-15 16:16:36
https://api.github.com/repos/hyperledger/iroha/issues/1563,https://api.github.com/repos/hyperledger/iroha/issues/comments/406096935,https://github.com/hyperledger/iroha/pull/1563#issuecomment-406096935,l4l,"It seems that older clang compilers have a bug :\
https://reviews.llvm.org/D41223",2018-07-18 22:43:29,2018-07-18 22:43:29
https://api.github.com/repos/hyperledger/iroha/issues/1562,https://api.github.com/repos/hyperledger/iroha/issues/comments/405283598,https://github.com/hyperledger/iroha/pull/1562#issuecomment-405283598,neewy,@l4l presision is a nice meme,2018-07-16 15:20:05,2018-07-16 15:20:05
https://api.github.com/repos/hyperledger/iroha/issues/1559,https://api.github.com/repos/hyperledger/iroha/issues/comments/454750099,https://github.com/hyperledger/iroha/issues/1559#issuecomment-454750099,LiraLemur,Outdated,2019-01-16 11:44:26,2019-01-16 11:44:26
https://api.github.com/repos/hyperledger/iroha/issues/1558,https://api.github.com/repos/hyperledger/iroha/issues/comments/404543552,https://github.com/hyperledger/iroha/pull/1558#issuecomment-404543552,igor-egorov,"Won't wait for CI, since it does not build python bindings anyway.",2018-07-12 15:02:23,2018-07-12 15:02:23
https://api.github.com/repos/hyperledger/iroha/issues/1557,https://api.github.com/repos/hyperledger/iroha/issues/comments/406294957,https://github.com/hyperledger/iroha/pull/1557#issuecomment-406294957,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [postgres_executor_test.cpp#L77](https://github.com/hyperledger/iroha/blob/6f42eaed2e7243f276794342a77236d3fa9873c1/test/module/irohad/ametsuchi/postgres_executor_test.cpp#L77): The class 'RemoveSignatory' defines member variable with name 'pubkey' also defined in its parent class 'CommandExecutorTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L130](https://github.com/hyperledger/iroha/blob/6f42eaed2e7243f276794342a77236d3fa9873c1/test/module/irohad/execution/command_validate_execute_test.cpp#L130): The function 'makeEmptyError' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L135](https://github.com/hyperledger/iroha/blob/6f42eaed2e7243f276794342a77236d3fa9873c1/test/module/irohad/execution/command_validate_execute_test.cpp#L135): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-19 14:25:58,2018-07-19 14:25:58
https://api.github.com/repos/hyperledger/iroha/issues/1555,https://api.github.com/repos/hyperledger/iroha/issues/comments/404782844,https://github.com/hyperledger/iroha/pull/1555#issuecomment-404782844,igor-egorov,Java bindings and BTF fails. Investigation in progress.,2018-07-13 09:41:55,2018-07-13 09:42:25
https://api.github.com/repos/hyperledger/iroha/issues/1555,https://api.github.com/repos/hyperledger/iroha/issues/comments/405303724,https://github.com/hyperledger/iroha/pull/1555#issuecomment-405303724,sorabot,"SonarQube analysis reported 6 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L203](https://github.com/hyperledger/iroha/blob/13b89bd60f9d84068d2506d887757bd8c9869707/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L203): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [pb_common.cpp#L54](https://github.com/hyperledger/iroha/blob/13b89bd60f9d84068d2506d887757bd8c9869707/irohad/model/converters/impl/pb_common.cpp#L54): The function 'serializeAsset' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [pb_common.cpp#L71](https://github.com/hyperledger/iroha/blob/13b89bd60f9d84068d2506d887757bd8c9869707/irohad/model/converters/impl/pb_common.cpp#L71): The function 'serializeDomain' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L160](https://github.com/hyperledger/iroha/blob/13b89bd60f9d84068d2506d887757bd8c9869707/irohad/model/converters/impl/pb_query_response_factory.cpp#L160): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L152](https://github.com/hyperledger/iroha/blob/13b89bd60f9d84068d2506d887757bd8c9869707/test/module/irohad/execution/command_validate_execute_test.cpp#L152): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [shared_proto_transaction_test.cpp#L66](https://github.com/hyperledger/iroha/blob/13b89bd60f9d84068d2506d887757bd8c9869707/test/module/shared_model/backend_proto/shared_proto_transaction_test.cpp#L66): Variable 'account_id' is assigned a value that is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunreadVariable)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-16 16:21:12,2018-07-16 16:21:12
https://api.github.com/repos/hyperledger/iroha/issues/1554,https://api.github.com/repos/hyperledger/iroha/issues/comments/404760012,https://github.com/hyperledger/iroha/issues/1554#issuecomment-404760012,muratovv,"Hello,
Can you provide the genesis block and the target transaction? We have to reproduce the situation and confirm (and fix) the bug. Also, pls, specify the revision of the code.

Thank you for interest in Iroha project. Iroha's team appreciates your efforts.",2018-07-13 08:09:37,2018-07-13 08:09:37
https://api.github.com/repos/hyperledger/iroha/issues/1554,https://api.github.com/repos/hyperledger/iroha/issues/comments/404764187,https://github.com/hyperledger/iroha/issues/1554#issuecomment-404764187,big-fish0,"@muratovv 
My target transaction is 
      
```
m_txBuilder.creatorAccountId(""admin@test"")
            .createdTime(BigInteger.valueOf( System.currentTimeMillis() ))
            .addAssetQuantity(@""admin@test"", ""coin#test"", ""1.00"")
            .transferAsset(""admin@test"", ""test@test"", ""coin#test"", description, ""1.00"")
            .build();

```
For example,If `admin@test `has 10 `coin#test`,and i do the  target transaction ,and the transfer asset amount  greater than 10,then this transaction is failed.If i set the transfer asset amount lower than 10,example 9.00,It's ok.

I get the code at 2018-07-03",2018-07-13 08:26:40,2018-07-13 09:24:07
https://api.github.com/repos/hyperledger/iroha/issues/1554,https://api.github.com/repos/hyperledger/iroha/issues/comments/404768387,https://github.com/hyperledger/iroha/issues/1554#issuecomment-404768387,big-fish0,"@muratovv 
genesis.block
```
{
   ""payload"":{
      ""transactions"":[
         {
            ""payload"":{
               ""commands"":[
                  {
                     ""addPeer"":{
                        ""peer"":{
                           ""address"":""localhost:10001"",
                           ""peerKey"":""0E2icbV/5jQmrh3Jf2lSEEA3QR/PTztzncIX9F5fyZs=""
                        }
                     }
                  },
                  {
                     ""createRole"":{
                        ""roleName"":""admin"",
                        ""permissions"":[
                           ""can_add_peer"",
                           ""can_add_signatory"",
                           ""can_create_account"",
                           ""can_create_domain"",
                           ""can_get_all_acc_ast"",
                           ""can_get_all_acc_ast_txs"",
                           ""can_get_all_acc_detail"",
                           ""can_get_all_acc_txs"",
                           ""can_get_all_accounts"",
                           ""can_get_all_signatories"",
                           ""can_get_all_txs"",
                           ""can_get_roles"",
                           ""can_read_assets"",
                           ""can_remove_signatory"",
                           ""can_set_quorum"",
                           ""can_get_blocks"",
                           ""can_subtract_asset_qty""
                        ]
                     }
                  },
                  {
                     ""createRole"":{
                        ""roleName"":""user"",
                        ""permissions"":[
                           ""can_add_signatory"",
                           ""can_get_my_acc_ast"",
                           ""can_get_my_acc_ast_txs"",
                           ""can_get_my_acc_detail"",
                           ""can_get_my_acc_txs"",
                           ""can_get_my_account"",
                           ""can_get_my_signatories"",
                           ""can_get_my_txs"",
                           ""can_grant_can_add_my_signatory"",
                           ""can_grant_can_remove_my_signatory"",
                           ""can_grant_can_set_my_account_detail"",
                           ""can_grant_can_set_my_quorum"",
                           ""can_grant_can_transfer_my_assets"",
                           ""can_receive"",
                           ""can_remove_signatory"",
                           ""can_set_quorum"",
                           ""can_transfer"",
                           ""can_add_asset_qty"",
                           ""can_create_asset"",
                           ""can_subtract_asset_qty""
                        ]
                     }
                  },
                  {
                     ""createRole"":{
                        ""roleName"":""money_creator"",
                        ""permissions"":[
                           ""can_add_asset_qty"",
                           ""can_create_asset"",
                           ""can_receive"",
                           ""can_transfer""
                        ]
                     }
                  },
                  {
                     ""createDomain"":{
                        ""domainId"":""test"",
                        ""defaultRole"":""user""
                     }
                  },
		  {
                     ""createDomain"":{
                        ""domainId"":""sun"",
                        ""defaultRole"":""user""
                     }
                  },

                  {
                     ""createDomain"":{
                        ""domainId"":""sun-0555"",
                        ""defaultRole"":""user""
                     }
                  },

                  {
                     ""createAsset"":{
                        ""assetName"":""coin"",
                        ""domainId"":""test"",
                        ""precision"":2
                     }
                  },
                  {
                     ""createAccount"":{
                        ""accountName"":""admin"",
                        ""domainId"":""test"",
                        ""mainPubkey"":""iJ9riB4zG+IUh9t33PMsX409XoBm540v6sQjn+kdQW8=""
                     }
                  },
                  {
                     ""createAccount"":{
                        ""accountName"":""test"",
                        ""domainId"":""test"",
                        ""mainPubkey"":""3MfszkSPLhkKSBrsfKIe5S7aVG5mC0gg9JdtATIVcJc=""
                     }
                  },
                  {
                     ""appendRole"":{
                        ""accountId"":""admin@test"",
                        ""roleName"":""admin""
                     }
                  },
                  {
                     ""appendRole"":{
                        ""accountId"":""admin@test"",
                        ""roleName"":""money_creator""
                     }
                  }
               ]
            }
         }
      ],
      ""txNumber"":1,
      ""height"":""1"",
      ""prevBlockHash"":""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=""
   }
}

```",2018-07-13 08:43:26,2018-07-13 08:43:26
https://api.github.com/repos/hyperledger/iroha/issues/1554,https://api.github.com/repos/hyperledger/iroha/issues/comments/404792258,https://github.com/hyperledger/iroha/issues/1554#issuecomment-404792258,l4l,"> transfer amount 10.00

> .transferAsset(""admin@test"", ""test@test"", ""coin#test"", description, ""1.00"")

Some inconsistency here. Could you please double check the code? And if you're sure about its correctness please share the source and the binary blob of your transaction:
- `new ModelProtoTransaction(<your_unsigned_tx>).signAndAddSignature(keys).finish()`;
- then print it in hex.

I just checked that there's no bug in Iroha itself, though it still can be bug somewhere at bindings, but that's require quite some time for investigation
",2018-07-13 10:20:54,2018-07-13 10:20:54
https://api.github.com/repos/hyperledger/iroha/issues/1554,https://api.github.com/repos/hyperledger/iroha/issues/comments/404794665,https://github.com/hyperledger/iroha/issues/1554#issuecomment-404794665,big-fish0,"@l4l 
If admin@test's coin#test balance is 10.00,and My target transaction is 
```
m_txBuilder.creatorAccountId(""admin@test"")
            .createdTime(BigInteger.valueOf( System.currentTimeMillis() ))
            .addAssetQuantity(""admin@test"", ""coin#test"", ""11.00"")
            .transferAsset(""admin@test"", ""test@test"", ""coin#test"", description, ""11.00"")
            .build();
```
That's failed.

But  My target transaction is 
```
m_txBuilder.creatorAccountId(""admin@test"")
            .createdTime(BigInteger.valueOf( System.currentTimeMillis() ))
            .addAssetQuantity(""admin@test"", ""coin#test"", ""9.00"")
            .transferAsset(""admin@test"", ""test@test"", ""coin#test"", description, ""9.00"")
            .build();
```
It's ok",2018-07-13 10:32:12,2018-07-13 10:33:27
https://api.github.com/repos/hyperledger/iroha/issues/1554,https://api.github.com/repos/hyperledger/iroha/issues/comments/405538994,https://github.com/hyperledger/iroha/issues/1554#issuecomment-405538994,l4l,Since the #1555 merged there's lot of things changed. Could you please retry this transaction? I'm still not able to verify it,2018-07-17 10:40:00,2018-07-17 10:40:00
https://api.github.com/repos/hyperledger/iroha/issues/1554,https://api.github.com/repos/hyperledger/iroha/issues/comments/416929492,https://github.com/hyperledger/iroha/issues/1554#issuecomment-416929492,l4l,"Since there's no response for more than a month I'm closing the issue. Feel free to add something, if the same issue is still present",2018-08-29 12:09:37,2018-08-29 12:09:37
https://api.github.com/repos/hyperledger/iroha/issues/1553,https://api.github.com/repos/hyperledger/iroha/issues/comments/406447406,https://github.com/hyperledger/iroha/issues/1553#issuecomment-406447406,l4l,"Thank you!
After recent fix (#1511) documentation & iroha-cli become outdated. The issue is also described in #1559, so I'm closing the issue",2018-07-19 23:48:40,2018-07-19 23:48:40
https://api.github.com/repos/hyperledger/iroha/issues/1551,https://api.github.com/repos/hyperledger/iroha/issues/comments/403781939,https://github.com/hyperledger/iroha/pull/1551#issuecomment-403781939,l4l,"DCO please, and what's wrong with the jenkins?",2018-07-10 10:51:22,2018-07-10 10:51:22
https://api.github.com/repos/hyperledger/iroha/issues/1550,https://api.github.com/repos/hyperledger/iroha/issues/comments/403861595,https://github.com/hyperledger/iroha/pull/1550#issuecomment-403861595,sorabot,"SonarQube analysis reported 5 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L204](https://github.com/hyperledger/iroha/blob/890916598723beb43478a0698342b8e62744ebf7/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L204): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [pb_common.cpp#L75](https://github.com/hyperledger/iroha/blob/890916598723beb43478a0698342b8e62744ebf7/irohad/model/converters/impl/pb_common.cpp#L75): The function 'serializeAsset' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [pb_common.cpp#L93](https://github.com/hyperledger/iroha/blob/890916598723beb43478a0698342b8e62744ebf7/irohad/model/converters/impl/pb_common.cpp#L93): The function 'serializeDomain' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [pb_query_response_factory.hpp#L54](https://github.com/hyperledger/iroha/blob/890916598723beb43478a0698342b8e62744ebf7/irohad/model/converters/pb_query_response_factory.hpp#L54): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L155](https://github.com/hyperledger/iroha/blob/890916598723beb43478a0698342b8e62744ebf7/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L155): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-10 15:20:04,2018-07-10 15:20:04
https://api.github.com/repos/hyperledger/iroha/issues/1550,https://api.github.com/repos/hyperledger/iroha/issues/comments/404319517,https://github.com/hyperledger/iroha/pull/1550#issuecomment-404319517,l4l,"There's none actually. The first impl considered splitting endpoint to torii_responses, so qry_responses looks more accurate and meaningful naming",2018-07-11 21:40:51,2018-07-11 21:40:51
https://api.github.com/repos/hyperledger/iroha/issues/1549,https://api.github.com/repos/hyperledger/iroha/issues/comments/403799414,https://github.com/hyperledger/iroha/pull/1549#issuecomment-403799414,igor-egorov,Please merge develop branch into yours. That should fix failing tests.,2018-07-10 12:09:12,2018-07-10 12:09:12
https://api.github.com/repos/hyperledger/iroha/issues/1549,https://api.github.com/repos/hyperledger/iroha/issues/comments/404088233,https://github.com/hyperledger/iroha/pull/1549#issuecomment-404088233,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transport_builder_test.cpp#L160](https://github.com/hyperledger/iroha/blob/d5f3b0e7491d18db706d3a48f5b75bb5d412a1d8/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L160): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-11 08:29:34,2018-07-11 08:29:34
https://api.github.com/repos/hyperledger/iroha/issues/1548,https://api.github.com/repos/hyperledger/iroha/issues/comments/404536297,https://github.com/hyperledger/iroha/pull/1548#issuecomment-404536297,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transport_builder_test.cpp#L159](https://github.com/hyperledger/iroha/blob/4f45bdb25d88cb7425fdb2a5eca20e2c66e12366/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L159): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-12 14:41:37,2018-07-12 14:41:37
https://api.github.com/repos/hyperledger/iroha/issues/1547,https://api.github.com/repos/hyperledger/iroha/issues/comments/403453889,https://github.com/hyperledger/iroha/issues/1547#issuecomment-403453889,laSinteZ,@raymondfx does it work now? You have written in chat that it works. Could you tell us what was wrong?,2018-07-09 11:55:02,2018-07-09 11:55:02
https://api.github.com/repos/hyperledger/iroha/issues/1547,https://api.github.com/repos/hyperledger/iroha/issues/comments/406448086,https://github.com/hyperledger/iroha/issues/1547#issuecomment-406448086,l4l,"Since there's no activity there I'm closing an issue.

For the future lurkers: the issue probably is in the configuration file, particularly postgresql hostname `some-postgres` in `pg_opt`. You may review [psql docs](https://www.postgresql.org/docs/9.4/static/libpq-connect.html#LIBPQ-PARAMKEYWORDS) for more detailed info",2018-07-19 23:53:27,2018-07-19 23:53:27
https://api.github.com/repos/hyperledger/iroha/issues/1546,https://api.github.com/repos/hyperledger/iroha/issues/comments/402993330,https://github.com/hyperledger/iroha/issues/1546#issuecomment-402993330,Alexey-N-Chernyshov,"@big-fish0, please send us your genesis block and config",2018-07-06 10:19:01,2018-07-06 10:19:01
https://api.github.com/repos/hyperledger/iroha/issues/1546,https://api.github.com/repos/hyperledger/iroha/issues/comments/402993757,https://github.com/hyperledger/iroha/issues/1546#issuecomment-402993757,Alexey-N-Chernyshov,"@big-fish0, which version of Iroha do you use? ",2018-07-06 10:20:50,2018-07-06 10:20:50
https://api.github.com/repos/hyperledger/iroha/issues/1546,https://api.github.com/repos/hyperledger/iroha/issues/comments/403333088,https://github.com/hyperledger/iroha/issues/1546#issuecomment-403333088,big-fish0,"@Alexey-N-Chernyshov 
I got the iroha source and image at 2018-07-03

genesis.block
```
{
   ""payload"":{
      ""transactions"":[
         {
            ""payload"":{
               ""commands"":[
                  {
                     ""addPeer"":{
                        ""peer"":{
                           ""address"":""localhost:10001"",
                           ""peerKey"":""0E2icbV/5jQmrh3Jf2lSEEA3QR/PTztzncIX9F5fyZs=""
                        }
                     }
                  },
                  {
                     ""createRole"":{
                        ""roleName"":""admin"",
                        ""permissions"":[
                           ""can_add_peer"",
                           ""can_add_signatory"",
                           ""can_create_account"",
                           ""can_create_domain"",
                           ""can_get_all_acc_ast"",
                           ""can_get_all_acc_ast_txs"",
                           ""can_get_all_acc_detail"",
                           ""can_get_all_acc_txs"",
                           ""can_get_all_accounts"",
                           ""can_get_all_signatories"",
                           ""can_get_all_txs"",
                           ""can_get_roles"",
                           ""can_read_assets"",
                           ""can_remove_signatory"",
                           ""can_set_quorum"",
                           ""can_get_blocks"",
                           ""can_subtract_asset_qty""
                        ]
                     }
                  },
                  {
                     ""createRole"":{
                        ""roleName"":""user"",
                        ""permissions"":[
                           ""can_add_signatory"",
                           ""can_get_my_acc_ast"",
                           ""can_get_my_acc_ast_txs"",
                           ""can_get_my_acc_detail"",
                           ""can_get_my_acc_txs"",
                           ""can_get_my_account"",
                           ""can_get_my_signatories"",
                           ""can_get_my_txs"",
                           ""can_grant_can_add_my_signatory"",
                           ""can_grant_can_remove_my_signatory"",
                           ""can_grant_can_set_my_account_detail"",
                           ""can_grant_can_set_my_quorum"",
                           ""can_grant_can_transfer_my_assets"",
                           ""can_receive"",
                           ""can_remove_signatory"",
                           ""can_set_quorum"",
                           ""can_transfer"",
                           ""can_add_asset_qty"",
                           ""can_create_asset"",
                           ""can_subtract_asset_qty""
                        ]
                     }
                  },
                  {
                     ""createRole"":{
                        ""roleName"":""money_creator"",
                        ""permissions"":[
                           ""can_add_asset_qty"",
                           ""can_create_asset"",
                           ""can_receive"",
                           ""can_transfer""
                        ]
                     }
                  },
                  {
                     ""createDomain"":{
                        ""domainId"":""test"",
                        ""defaultRole"":""user""
                     }
                  },
		  {
                     ""createDomain"":{
                        ""domainId"":""sun"",
                        ""defaultRole"":""user""
                     }
                  },

                  {
                     ""createDomain"":{
                        ""domainId"":""sun-0555"",
                        ""defaultRole"":""user""
                     }
                  },

                  {
                     ""createAsset"":{
                        ""assetName"":""point"",
                        ""domainId"":""sun"",
                        ""precision"":0
                     }
                  },
                  {
                     ""createAccount"":{
                        ""accountName"":""admin"",
                        ""domainId"":""test"",
                        ""mainPubkey"":""iJ9riB4zG+IUh9t33PMsX409XoBm540v6sQjn+kdQW8=""
                     }
                  },
                  {
                     ""createAccount"":{
                        ""accountName"":""test"",
                        ""domainId"":""test"",
                        ""mainPubkey"":""3MfszkSPLhkKSBrsfKIe5S7aVG5mC0gg9JdtATIVcJc=""
                     }
                  },
                  {
                     ""appendRole"":{
                        ""accountId"":""admin@test"",
                        ""roleName"":""admin""
                     }
                  },
                  {
                     ""appendRole"":{
                        ""accountId"":""admin@test"",
                        ""roleName"":""money_creator""
                     }
                  }
               ]
            }
         }
      ],
      ""txNumber"":1,
      ""height"":""1"",
      ""prevBlockHash"":""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=""
   }
}
```
config.docker

```
{
  ""block_store_path"" : ""/tmp/block_store/"",
  ""torii_port"" : 50051,
  ""internal_port"" : 10001,
  ""pg_opt"" : ""host=iroha0_postgres_1 port=5432 user=postgres password=mysecretpassword"",
  ""max_proposal_size"" : 10,
  ""proposal_delay"" : 5000,
  ""vote_delay"" : 5000,
  ""load_delay"" : 5000,
  ""mst_enable"" : false
}
```
",2018-07-09 01:10:16,2018-07-09 01:10:16
https://api.github.com/repos/hyperledger/iroha/issues/1546,https://api.github.com/repos/hyperledger/iroha/issues/comments/403351921,https://github.com/hyperledger/iroha/issues/1546#issuecomment-403351921,big-fish0,"This time I use the account(admin@test) to create some accounts ,About 95% is successed,but 5% is failed.
The log tells me that `CreateAccount: has permission command validation failed: account admin@test does not have permission can_create_account`",2018-07-09 03:47:21,2018-07-09 03:47:21
https://api.github.com/repos/hyperledger/iroha/issues/1546,https://api.github.com/repos/hyperledger/iroha/issues/comments/403400432,https://github.com/hyperledger/iroha/issues/1546#issuecomment-403400432,Alexey-N-Chernyshov,"@big-fish0, could you reproduce the bug on the latest `develop`? It seems it works well now. And specify commit you have used when encountered a bug, please.",2018-07-09 08:25:52,2018-07-09 08:25:52
https://api.github.com/repos/hyperledger/iroha/issues/1546,https://api.github.com/repos/hyperledger/iroha/issues/comments/403403230,https://github.com/hyperledger/iroha/issues/1546#issuecomment-403403230,big-fish0,"@Alexey-N-Chernyshov 
Yes,I use the same code can get the bug everytime. Which day the is latest develop version,mine is 2018-07-03.
I used 10 threads x 10 loop to `createAccount`,and the account's name like test1@test,test2@test,test3@test ......",2018-07-09 08:36:21,2018-07-09 08:36:51
https://api.github.com/repos/hyperledger/iroha/issues/1546,https://api.github.com/repos/hyperledger/iroha/issues/comments/403405442,https://github.com/hyperledger/iroha/issues/1546#issuecomment-403405442,big-fish0,"@Alexey-N-Chernyshov 
You can see my code at 1L,maybe the error is the static parameter `count`,Maybe it is my code occurs this bug",2018-07-09 08:44:21,2018-07-09 08:44:52
https://api.github.com/repos/hyperledger/iroha/issues/1546,https://api.github.com/repos/hyperledger/iroha/issues/comments/454747639,https://github.com/hyperledger/iroha/issues/1546#issuecomment-454747639,LiraLemur,Seems outdated,2019-01-16 11:34:12,2019-01-16 11:34:12
https://api.github.com/repos/hyperledger/iroha/issues/1544,https://api.github.com/repos/hyperledger/iroha/issues/comments/402972313,https://github.com/hyperledger/iroha/pull/1544#issuecomment-402972313,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/291e835324c95fe6bc11c26d234d38b659335a91/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L36): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/291e835324c95fe6bc11c26d234d38b659335a91/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-06 08:53:55,2018-07-06 08:53:55
https://api.github.com/repos/hyperledger/iroha/issues/1543,https://api.github.com/repos/hyperledger/iroha/issues/comments/405903849,https://github.com/hyperledger/iroha/pull/1543#issuecomment-405903849,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [client_api.cpp#L31](https://github.com/hyperledger/iroha/blob/35b526c4aecaa55238f8b4da2a8c4a0216fbea17/shared_model/bindings/client_api.cpp#L31): The function 'validateTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L48](https://github.com/hyperledger/iroha/blob/35b526c4aecaa55238f8b4da2a8c4a0216fbea17/shared_model/bindings/client_api.cpp#L48): The function 'validateQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L64](https://github.com/hyperledger/iroha/blob/35b526c4aecaa55238f8b4da2a8c4a0216fbea17/shared_model/bindings/client_api.cpp#L64): The function 'signTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L81](https://github.com/hyperledger/iroha/blob/35b526c4aecaa55238f8b4da2a8c4a0216fbea17/shared_model/bindings/client_api.cpp#L81): The function 'signQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L98](https://github.com/hyperledger/iroha/blob/35b526c4aecaa55238f8b4da2a8c4a0216fbea17/shared_model/bindings/client_api.cpp#L98): The function 'hashTransaction' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [client_api.cpp#L111](https://github.com/hyperledger/iroha/blob/35b526c4aecaa55238f8b4da2a8c4a0216fbea17/shared_model/bindings/client_api.cpp#L111): The function 'hashQuery' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-18 11:49:29,2018-07-18 11:49:29
https://api.github.com/repos/hyperledger/iroha/issues/1542,https://api.github.com/repos/hyperledger/iroha/issues/comments/404760625,https://github.com/hyperledger/iroha/pull/1542#issuecomment-404760625,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transport_builder_test.cpp#L159](https://github.com/hyperledger/iroha/blob/6f1cd24f91fa3fad4fee8a48acd96dfa0b07cacd/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L159): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-13 08:12:06,2018-07-13 08:12:06
https://api.github.com/repos/hyperledger/iroha/issues/1538,https://api.github.com/repos/hyperledger/iroha/issues/comments/404495148,https://github.com/hyperledger/iroha/pull/1538#issuecomment-404495148,sorabot,"SonarQube analysis reported 5 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L46](https://github.com/hyperledger/iroha/blob/a7a1875b9503451bbdf55558aad02e95cd90421f/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L46): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_command_executor.hpp#L45](https://github.com/hyperledger/iroha/blob/a7a1875b9503451bbdf55558aad02e95cd90421f/irohad/ametsuchi/impl/postgres_command_executor.hpp#L45): Unused private function: 'PostgresCommandExecutor::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L38](https://github.com/hyperledger/iroha/blob/a7a1875b9503451bbdf55558aad02e95cd90421f/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L38): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L39](https://github.com/hyperledger/iroha/blob/a7a1875b9503451bbdf55558aad02e95cd90421f/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L39): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L168](https://github.com/hyperledger/iroha/blob/a7a1875b9503451bbdf55558aad02e95cd90421f/test/module/irohad/execution/command_validate_execute_test.cpp#L168): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-12 12:28:23,2018-07-12 12:28:23
https://api.github.com/repos/hyperledger/iroha/issues/1538,https://api.github.com/repos/hyperledger/iroha/issues/comments/405211106,https://github.com/hyperledger/iroha/pull/1538#issuecomment-405211106,victordrobny,All sql executors are in https://github.com/hyperledger/iroha/pull/1557,2018-07-16 10:52:37,2018-07-16 10:52:37
https://api.github.com/repos/hyperledger/iroha/issues/1537,https://api.github.com/repos/hyperledger/iroha/issues/comments/403454128,https://github.com/hyperledger/iroha/issues/1537#issuecomment-403454128,laSinteZ,"@EranHr could you give us more detail? How did you run the example (log will be great), which version of iroha are you using (develop/master), etc.?",2018-07-09 11:56:01,2018-07-09 11:56:01
https://api.github.com/repos/hyperledger/iroha/issues/1537,https://api.github.com/repos/hyperledger/iroha/issues/comments/406448386,https://github.com/hyperledger/iroha/issues/1537#issuecomment-406448386,l4l,"Closing, since there's no activity. @EranHr, feel free to provide more details so we can help you",2018-07-19 23:55:40,2018-07-19 23:55:40
https://api.github.com/repos/hyperledger/iroha/issues/1531,https://api.github.com/repos/hyperledger/iroha/issues/comments/402205690,https://github.com/hyperledger/iroha/pull/1531#issuecomment-402205690,igor-egorov,"status_fuzzing test reaches out of memory state even if ~12G was allowed to use.

```
test_bin/status_fuzzing -rss_limit_mb=12000

...

==17953== ERROR: libFuzzer: out-of-memory (used: 12003Mb; limit: 12000Mb)
   To change the out-of-memory limit use -rss_limit_mb=<N>
```",2018-07-03 15:53:19,2018-07-03 15:53:19
https://api.github.com/repos/hyperledger/iroha/issues/1531,https://api.github.com/repos/hyperledger/iroha/issues/comments/403979498,https://github.com/hyperledger/iroha/pull/1531#issuecomment-403979498,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [status_fuzz.cpp#L36](https://github.com/hyperledger/iroha/blob/305f1caea08b5d4ea5ec640994a2aa5720506193/test/fuzzing/status_fuzz.cpp#L36): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [status_fuzz.cpp#L60](https://github.com/hyperledger/iroha/blob/305f1caea08b5d4ea5ec640994a2aa5720506193/test/fuzzing/status_fuzz.cpp#L60): The function 'LLVMFuzzerTestOneInput' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [torii_fuzz.cpp#L33](https://github.com/hyperledger/iroha/blob/305f1caea08b5d4ea5ec640994a2aa5720506193/test/fuzzing/torii_fuzz.cpp#L33): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-10 21:58:58,2018-07-10 21:58:58
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402022515,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402022515,big-fish0,"And also sometimes logs that
```
七月 03, 2018 1:55:10 下午 io.grpc.internal.ManagedChannelImpl$ManagedChannelReference cleanQueue
严重: *~*~*~ Channel io.grpc.internal.ManagedChannelImpl-433 for target 192.168.1.211:50051 was not shutdown properly!!! ~*~*~*
    Make sure to call shutdown()/shutdownNow() and awaitTermination().
java.lang.RuntimeException: ManagedChannel allocation site
	at io.grpc.internal.ManagedChannelImpl$ManagedChannelReference.<init>(ManagedChannelImpl.java:1065)
	at io.grpc.internal.ManagedChannelImpl.<init>(ManagedChannelImpl.java:485)
	at io.grpc.internal.AbstractManagedChannelImplBuilder.build(AbstractManagedChannelImplBuilder.java:349)
	at com.bjb.service.IrohaTransaction.sendCmd2Iroha(IrohaTransaction.java:299)
	at com.bjb.service.IrohaService.cmdIsSuccess(IrohaService.java:199)
	at com.bjb.service.IrohaService.cmdAddAssetQuantity(IrohaService.java:337)
	at com.bjb.service.IrohaService$$FastClassBySpringCGLIB$$7bde04b0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at com.bjb.service.IrohaService$$EnhancerBySpringCGLIB$$1b39e440.cmdAddAssetQuantity(<generated>)
	at com.bjb.controller.TestController.addAsset(TestController.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:814)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:737)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:969)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:860)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:845)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:521)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1096)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:674)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
```",2018-07-03 06:01:29,2018-07-03 06:01:29
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402081859,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402081859,big-fish0,I guess the hash value is related to the time when the transaction was generated.Was  time accuracy  accurate to milliseconds?,2018-07-03 09:44:01,2018-07-03 09:44:01
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402097171,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402097171,l4l,Could you also provide a irohad log?,2018-07-03 10:25:07,2018-07-03 10:25:07
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402097588,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402097588,big-fish0,"@l4l 
How can i get the irohad log?I used the docker environment",2018-07-03 10:26:13,2018-07-03 10:26:56
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402099133,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402099133,l4l,"@big-fish0 
get the container id via `docker ps` (maybe you need to add -a also)
then get the logs via `docker logs -f <id>`",2018-07-03 10:30:49,2018-07-03 10:30:49
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402101810,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402101810,big-fish0,"```
root@iroha:~# docker ps
CONTAINER ID        IMAGE                             COMMAND                  CREATED             STATUS              PORTS                                                NAMES
232cae951df5        hyperledger/iroha:develop-build   ""/bin/bash""              3 hours ago         Up 3 hours          0.0.0.0:20000->20000/tcp, 0.0.0.0:50051->50051/tcp   iroha0_node_1
e6a075bc2aa7        postgres:9.5                      ""docker-entrypoint.s…""   3 hours ago         Up 3 hours          0.0.0.0:5432->5432/tcp                               iroha0_postgres_1
```
`root@iroha:~# docker logs -f 232cae951df5`

It doesn't return any log,it was null

",2018-07-03 10:37:55,2018-07-04 05:50:06
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402174921,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402174921,neewy,"Seems that Iroha did not start. Which is really a bad sign, can you please tell when did you pull the image?",2018-07-03 14:22:23,2018-07-03 14:22:23
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402334663,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402334663,big-fish0,"@neewy Yesterday(2018-07-03)
And i use this to get the iroha images

`git clone -b develop https://github.com/hyperledger/iroha --depth=1`

`./run-iroha-dev.sh`",2018-07-04 01:17:11,2018-07-04 01:22:37
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402658723,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402658723,big-fish0,"@l4l @neewy 
I have forgotten to tell you, I had started 10 threads to run this code
```
for (Integer i = 0; i < 100; i++) {
			
	try {
	  String hex = irohaService.cmdAddAssetQuantity(""admin@test"", ""admin@test"", ""coin#test"", ""1.00"");
	} catch (InvalidProtocolBufferException e) {
	 e.printStackTrace();
	}
	   System.out.println(hex);
	}
```

I think it was the parameter  time causes this bug.Today ,I run follow code ,i got 199 bugs like `CommandService Found transaction xxxx in cache, ignoring `

```
package com.iroha.test;
import java.io.IOException;
import java.math.BigInteger;
import java.nio.file.Files;
import java.nio.file.Paths;

import com.google.protobuf.ByteString;
import com.google.protobuf.Descriptors;
import com.google.protobuf.InvalidProtocolBufferException;

import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import iroha.protocol.BlockOuterClass;
import iroha.protocol.CommandServiceGrpc;
import iroha.protocol.Endpoint;
import iroha.protocol.Queries;
import iroha.protocol.QueryServiceGrpc;
import iroha.protocol.Responses;
import jp.co.soramitsu.iroha.ByteVector;
import jp.co.soramitsu.iroha.Keypair;
import jp.co.soramitsu.iroha.ModelCrypto;
import jp.co.soramitsu.iroha.ModelProtoQuery;
import jp.co.soramitsu.iroha.ModelProtoTransaction;
import jp.co.soramitsu.iroha.ModelQueryBuilder;
import jp.co.soramitsu.iroha.ModelTransactionBuilder;
import jp.co.soramitsu.iroha.UnsignedQuery;
import jp.co.soramitsu.iroha.UnsignedTx;

class TransactionExample
{
	static {
        try {
        	System.loadLibrary(""ed25519"");
        	System.loadLibrary(""protobuf"");
            System.loadLibrary(""irohajava"");
        } catch (UnsatisfiedLinkError e) {
            System.err.println(""Native code library failed to load. \n"" + e);
            System.exit(1);
        }
    }
  
  private static ModelCrypto crypto = new ModelCrypto();
  private static ModelTransactionBuilder txBuilder = new ModelTransactionBuilder();
  private static ModelQueryBuilder queryBuilder = new ModelQueryBuilder();
  
  public static byte[] toByteArray(ByteVector blob)
  {
    byte[] bs = new byte[(int)blob.size()];
    for (int i = 0; i < blob.size(); i++) {
      bs[i] = ((byte)blob.get(i));
    }
    return bs;
  }
  
  public static String readKeyFromFile(String path)
  {
    try
    {
      return new String(Files.readAllBytes(Paths.get(path, new String[0])));
    }
    catch (IOException e)
    {
      System.err.println(""Unable to read key files.\n "" + e);
      System.exit(1);
    }
    return """";
  }
  
  public static void main(String[] args)
  {
    Keypair keys = crypto.convertFromExisting(readKeyFromFile(""./admin@test.pub""), 
      readKeyFromFile(""./admin@test.priv""));
    
    
    String creator = ""admin@test"";
   ###  long currentTime = System.currentTimeMillis();
    
    for (int i = 0; i < 200; i++) {
		
    	 
	    UnsignedTx utx = txBuilder.creatorAccountId(creator).createdTime(BigInteger.valueOf(currentTime)).addAssetQuantity(creator, ""coin#test"", ""1.00"").build();
	    
	    
	    ByteVector txblob = new ModelProtoTransaction(utx).signAndAddSignature(keys).finish().blob();
	    
	
	    byte[] bs = toByteArray(txblob);
	    
	
	    BlockOuterClass.Transaction protoTx = null;
	    try
	    {
	      protoTx = BlockOuterClass.Transaction.parseFrom(bs);
	    }
	    catch (InvalidProtocolBufferException e)
	    {
	      System.err.println(""Exception while converting byte array to protobuf:"" + e.getMessage());
	      System.exit(1);
	    }
	    ManagedChannel channel = ManagedChannelBuilder.forAddress(""192.168.1.211"", 50051).usePlaintext(true).build();
	    CommandServiceGrpc.CommandServiceBlockingStub stub = CommandServiceGrpc.newBlockingStub(channel);
	    stub.torii(protoTx);
	   /* try
	    {
	      Thread.sleep(5000L);
	    }
	    catch (InterruptedException ex)
	    {
	      Thread.currentThread().interrupt();
	    }*/
	//    System.out.println(""Hash of the transaction: "" + utx.hash().hex());
    }

  }
}
```

",2018-07-05 09:14:06,2018-07-05 09:14:06
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402688901,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402688901,l4l,"The problem is here: `createdTime(BigInteger.valueOf(currentTime))`
You have exactly same transactions that are going to the irohad, and after the first one it's been put in the cache. The rest (199 out of 200) are considered as duplicate.",2018-07-05 11:12:04,2018-07-05 11:12:04
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402896808,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402896808,big-fish0,"@l4l 
Yes, it is. But if we start multiple threads to do the same thing as `addassetqty,` it also will produces the same error like:`CommandService Found transaction xxxx in cache, ignoring`",2018-07-06 01:19:41,2018-07-06 01:21:08
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402913921,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402913921,big-fish0,"For example, I had tried run 10 threads x 10 loop on the same pc, this time occured 6 times :
CommandService Found transaction xxxx in cache, ignoring

```
package com.iroha.test;

import java.io.IOException;
import java.math.BigInteger;
import java.nio.file.Files;
import java.nio.file.Paths;

import com.google.protobuf.InvalidProtocolBufferException;

import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import iroha.protocol.BlockOuterClass;
import iroha.protocol.CommandServiceGrpc;
import jp.co.soramitsu.iroha.ByteVector;
import jp.co.soramitsu.iroha.Keypair;
import jp.co.soramitsu.iroha.ModelCrypto;
import jp.co.soramitsu.iroha.ModelProtoTransaction;
import jp.co.soramitsu.iroha.ModelTransactionBuilder;
import jp.co.soramitsu.iroha.UnsignedTx;

public class Test {

	static {
        try {
        	System.loadLibrary(""ed25519"");
        	System.loadLibrary(""protobuf"");
            System.loadLibrary(""irohajava"");
        } catch (UnsatisfiedLinkError e) {
            System.err.println(""Native code library failed to load. \n"" + e);
            System.exit(1);
        }
    }
	
	public static void main(String[] args) {
		for (int i = 0; i < 10; i++) {
			irohaThread it = new irohaThread();
			it.start();
		}

	}

}


class irohaThread extends Thread{
	
	static long preTime = 0;
	static int count = 0;
	private static ModelCrypto crypto = new ModelCrypto();
	private static ModelTransactionBuilder txBuilder = new ModelTransactionBuilder();
	  
	public static byte[] toByteArray(ByteVector blob)
	{
	    byte[] bs = new byte[(int)blob.size()];
	    for (int i = 0; i < blob.size(); i++) {
	    	bs[i] = ((byte)blob.get(i));
	    }
	    return bs;
	}
	  
	public static String readKeyFromFile(String path)
	{
	    try
	    {
	    	return new String(Files.readAllBytes(Paths.get(path, new String[0])));
	    }
	    catch (IOException e)
	    {
	    	System.err.println(""Unable to read key files.\n "" + e);
	    	System.exit(1);
	    }
	    return """";
	}
	
	Keypair keys = crypto.convertFromExisting(readKeyFromFile(""./admin@test.pub""),readKeyFromFile(""./admin@test.priv""));
    String creator = ""admin@test"";
    
	
	@Override
	public void run() {
		for (int i = 0; i < 10; i++) {
			
			long currentTime = System.currentTimeMillis();
			System.out.println(currentTime);
		    UnsignedTx utx = txBuilder.creatorAccountId(creator).createdTime(BigInteger.valueOf(currentTime)).addAssetQuantity(creator, ""coin#test"", ""1.00"").build();
		    
		    
		    ByteVector txblob = new ModelProtoTransaction(utx).signAndAddSignature(keys).finish().blob();
		    
		
		    byte[] bs = toByteArray(txblob);
		    
		
		    BlockOuterClass.Transaction protoTx = null;
		    try
		    {
		      protoTx = BlockOuterClass.Transaction.parseFrom(bs);
		    }
		    catch (InvalidProtocolBufferException e)
		    {
		      System.err.println(""Exception while converting byte array to protobuf:"" + e.getMessage());
		      System.exit(1);
		    }
		    ManagedChannel channel = ManagedChannelBuilder.forAddress(""192.168.1.211"", 50051).usePlaintext(true).build();
		    CommandServiceGrpc.CommandServiceBlockingStub stub = CommandServiceGrpc.newBlockingStub(channel);
		    stub.torii(protoTx);
		    System.out.println(""done"");
	    }
	}
}
```
",2018-07-06 03:19:30,2018-07-06 03:19:30
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402982753,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402982753,l4l,"Since cache isn't synchronize (e.g after putting a value can be delayed by verification time), it's possible to happen. The proper behavior should lead to the accepting of the first one (considering it stateful valid), and the rest should be rejected (e.g stateful fail or found in cache).
Could you confirm that it's not an issue now?",2018-07-06 09:34:36,2018-07-06 09:34:36
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/402984850,https://github.com/hyperledger/iroha/issues/1530#issuecomment-402984850,big-fish0,"It is indeed a problem now, in practical applications, this problem may occur if multiple users request the same interface.",2018-07-06 09:43:01,2018-07-06 09:43:01
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/403055183,https://github.com/hyperledger/iroha/issues/1530#issuecomment-403055183,l4l,"The point is, that the time mustn't be the same. And the second point is that users still have different account names.
These are the cases which change transaction binary representation, thus changes its hash. So in reality there's no such problem",2018-07-06 14:44:20,2018-07-06 14:44:20
https://api.github.com/repos/hyperledger/iroha/issues/1530,https://api.github.com/repos/hyperledger/iroha/issues/comments/403428866,https://github.com/hyperledger/iroha/issues/1530#issuecomment-403428866,big-fish0,"@l4l 
Thanks.",2018-07-09 10:07:56,2018-07-09 10:07:56
https://api.github.com/repos/hyperledger/iroha/issues/1528,https://api.github.com/repos/hyperledger/iroha/issues/comments/401855394,https://github.com/hyperledger/iroha/issues/1528#issuecomment-401855394,Warchant,"Stack-based interpreter (VM) can also be used:

```
PUSH domain_id
PUSH default_role
OP_CREATEDOMAIN // pops top 2 items from a stack, interprets them as strings and executes OP_CREATEDOMAIN
```

P.S. in previous msg there is no stack, only pure string parsing
",2018-07-02 16:09:58,2018-07-06 08:50:26
https://api.github.com/repos/hyperledger/iroha/issues/1528,https://api.github.com/repos/hyperledger/iroha/issues/comments/454747321,https://github.com/hyperledger/iroha/issues/1528#issuecomment-454747321,LiraLemur,Moved to Jira: https://jira.hyperledger.org/browse/IR-195,2019-01-16 11:32:52,2019-01-16 11:32:52
https://api.github.com/repos/hyperledger/iroha/issues/1527,https://api.github.com/repos/hyperledger/iroha/issues/comments/402443281,https://github.com/hyperledger/iroha/pull/1527#issuecomment-402443281,l4l,"and dco, please :(",2018-07-04 10:52:14,2018-07-04 10:52:14
https://api.github.com/repos/hyperledger/iroha/issues/1527,https://api.github.com/repos/hyperledger/iroha/issues/comments/422176313,https://github.com/hyperledger/iroha/pull/1527#issuecomment-422176313,l4l,ping?,2018-09-17 21:22:39,2018-09-17 21:22:39
https://api.github.com/repos/hyperledger/iroha/issues/1526,https://api.github.com/repos/hyperledger/iroha/issues/comments/401748814,https://github.com/hyperledger/iroha/issues/1526#issuecomment-401748814,Warchant,What is the version of bindings? Provide commit pls.,2018-07-02 10:11:01,2018-07-02 10:11:01
https://api.github.com/repos/hyperledger/iroha/issues/1525,https://api.github.com/repos/hyperledger/iroha/issues/comments/401653957,https://github.com/hyperledger/iroha/pull/1525#issuecomment-401653957,sorabot, commit b8f1d68ac24b9410a48f74cd2f2fde3f5ff89cb2 build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1525/1/,2018-07-02 02:18:18,2018-07-02 02:18:18
https://api.github.com/repos/hyperledger/iroha/issues/1525,https://api.github.com/repos/hyperledger/iroha/issues/comments/416167447,https://github.com/hyperledger/iroha/pull/1525#issuecomment-416167447,l4l,Could you please rebase you branch over current develop and [add DCO](https://github.com/probot/dco#how-it-works)?,2018-08-27 09:19:10,2018-08-27 09:19:10
https://api.github.com/repos/hyperledger/iroha/issues/1525,https://api.github.com/repos/hyperledger/iroha/issues/comments/422176990,https://github.com/hyperledger/iroha/pull/1525#issuecomment-422176990,l4l,Do you need a help with the pr?,2018-09-17 21:24:48,2018-09-17 21:24:48
https://api.github.com/repos/hyperledger/iroha/issues/1524,https://api.github.com/repos/hyperledger/iroha/issues/comments/401854096,https://github.com/hyperledger/iroha/pull/1524#issuecomment-401854096,neewy,"There were issues with this PR since I have changed the interface in improper way.
I've just changed the test and disabled it.",2018-07-02 16:05:08,2018-07-02 16:05:08
https://api.github.com/repos/hyperledger/iroha/issues/1523,https://api.github.com/repos/hyperledger/iroha/issues/comments/401541003,https://github.com/hyperledger/iroha/pull/1523#issuecomment-401541003,sorabot,@bakhtin @Stayer  commit 1498388bac4b5505f4870d3fd46cbb29dbb8cb46 build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1523/1/,2018-06-30 13:22:54,2018-06-30 13:22:54
https://api.github.com/repos/hyperledger/iroha/issues/1523,https://api.github.com/repos/hyperledger/iroha/issues/comments/401597613,https://github.com/hyperledger/iroha/pull/1523#issuecomment-401597613,sorabot,@bakhtin @Stayer  commit ce75c71521e28e4af8e1c3e1bc413c3367b46cc4 build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1523/2/,2018-07-01 10:21:28,2018-07-01 10:21:28
https://api.github.com/repos/hyperledger/iroha/issues/1523,https://api.github.com/repos/hyperledger/iroha/issues/comments/401715455,https://github.com/hyperledger/iroha/pull/1523#issuecomment-401715455,sorabot,@Stayer @bakhtin  commit ce75c71521e28e4af8e1c3e1bc413c3367b46cc4 build status: ABORTED. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1523/3/,2018-07-02 08:43:22,2018-07-02 08:43:22
https://api.github.com/repos/hyperledger/iroha/issues/1523,https://api.github.com/repos/hyperledger/iroha/issues/comments/401718166,https://github.com/hyperledger/iroha/pull/1523#issuecomment-401718166,sorabot,@Stayer @bakhtin  commit ce75c71521e28e4af8e1c3e1bc413c3367b46cc4 build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1523/4/,2018-07-02 08:49:47,2018-07-02 08:49:47
https://api.github.com/repos/hyperledger/iroha/issues/1523,https://api.github.com/repos/hyperledger/iroha/issues/comments/401769346,https://github.com/hyperledger/iroha/pull/1523#issuecomment-401769346,sorabot,@Stayer @bakhtin  commit 540e47587d0bf7e0dd445a5cdc5f2333641e6f2f build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1523/5/,2018-07-02 11:05:21,2018-07-02 11:05:21
https://api.github.com/repos/hyperledger/iroha/issues/1523,https://api.github.com/repos/hyperledger/iroha/issues/comments/401807598,https://github.com/hyperledger/iroha/pull/1523#issuecomment-401807598,sorabot,@Stayer @bakhtin  commit 55132f089d057b641d2682d8f83babfeec98302b build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1523/6/,2018-07-02 13:40:27,2018-07-02 13:40:27
https://api.github.com/repos/hyperledger/iroha/issues/1523,https://api.github.com/repos/hyperledger/iroha/issues/comments/401881623,https://github.com/hyperledger/iroha/pull/1523#issuecomment-401881623,sorabot,@Stayer @bakhtin  commit 55132f089d057b641d2682d8f83babfeec98302b build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1523/7/,2018-07-02 17:44:57,2018-07-02 17:44:57
https://api.github.com/repos/hyperledger/iroha/issues/1523,https://api.github.com/repos/hyperledger/iroha/issues/comments/401901474,https://github.com/hyperledger/iroha/pull/1523#issuecomment-401901474,sorabot,@Stayer @bakhtin  commit 55132f089d057b641d2682d8f83babfeec98302b build status: ABORTED. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1523/8/,2018-07-02 18:58:08,2018-07-02 18:58:08
https://api.github.com/repos/hyperledger/iroha/issues/1523,https://api.github.com/repos/hyperledger/iroha/issues/comments/402429716,https://github.com/hyperledger/iroha/pull/1523#issuecomment-402429716,sorabot,@Stayer @bakhtin  commit 55132f089d057b641d2682d8f83babfeec98302b build status: ABORTED. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1523/9/,2018-07-04 09:57:35,2018-07-04 09:57:35
https://api.github.com/repos/hyperledger/iroha/issues/1522,https://api.github.com/repos/hyperledger/iroha/issues/comments/401536260,https://github.com/hyperledger/iroha/pull/1522#issuecomment-401536260,sorabot,@muratovv @grimadas  commit c74be97903d27e2b12517ddfea6a25d920c794a2 build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1522/1/,2018-06-30 11:51:59,2018-06-30 11:51:59
https://api.github.com/repos/hyperledger/iroha/issues/1520,https://api.github.com/repos/hyperledger/iroha/issues/comments/401455517,https://github.com/hyperledger/iroha/pull/1520#issuecomment-401455517,sorabot,@lebdron @l4l  commit ecc1fa516d82d87e36883df16e0bd9bdae36530a build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1520/1/,2018-06-29 19:45:34,2018-06-29 19:45:34
https://api.github.com/repos/hyperledger/iroha/issues/1520,https://api.github.com/repos/hyperledger/iroha/issues/comments/401534029,https://github.com/hyperledger/iroha/pull/1520#issuecomment-401534029,sorabot,@lebdron @l4l  commit 76d23c9189faf41a2cf3e94c1436971f6980ec2f build status: UNSTABLE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1520/2/,2018-06-30 11:03:40,2018-06-30 11:03:40
https://api.github.com/repos/hyperledger/iroha/issues/1520,https://api.github.com/repos/hyperledger/iroha/issues/comments/401534900,https://github.com/hyperledger/iroha/pull/1520#issuecomment-401534900,sorabot,@lebdron @l4l  commit 76d23c9189faf41a2cf3e94c1436971f6980ec2f build status: UNSTABLE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1520/3/,2018-06-30 11:23:56,2018-06-30 11:23:56
https://api.github.com/repos/hyperledger/iroha/issues/1520,https://api.github.com/repos/hyperledger/iroha/issues/comments/401538000,https://github.com/hyperledger/iroha/pull/1520#issuecomment-401538000,sorabot,@lebdron @l4l  commit 76d23c9189faf41a2cf3e94c1436971f6980ec2f build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1520/4/,2018-06-30 12:25:42,2018-06-30 12:25:42
https://api.github.com/repos/hyperledger/iroha/issues/1520,https://api.github.com/repos/hyperledger/iroha/issues/comments/401549551,https://github.com/hyperledger/iroha/pull/1520#issuecomment-401549551,muratovv,"I have faced with the issue about `irohanode`.
```
[100%] Building CXX object shared_model/bindings/CMakeFiles/irohanode.dir/bindingsJAVASCRIPT_wrap.o
/Users/fyodormuratov/Documents/dev/soramitsu/iroha/build/shared_model/bindings/bindingsJAVASCRIPT_wrap.cxx:966:27: error: no template named 'WeakCallbackData'
      in namespace 'v8'; did you mean 'WeakCallbackInfo'?
  void (*dtor) (const v8::WeakCallbackData<v8::Object, SWIGV8_Proxy> &data);
                      ~~~~^~~~~~~~~~~~~~~~
                          WeakCallbackInfo
/usr/local/include/node/v8.h:8175:16: note: 'WeakCallbackInfo' declared here
  friend class WeakCallbackInfo;
               ^
```
How can I fix it?",2018-06-30 15:59:46,2018-06-30 15:59:46
https://api.github.com/repos/hyperledger/iroha/issues/1520,https://api.github.com/repos/hyperledger/iroha/issues/comments/401561351,https://github.com/hyperledger/iroha/pull/1520#issuecomment-401561351,l4l,"@muratovv it seems that you're using non-patched swig, please use either downloaded by the cmake, or patch yourself (in _patch_ folder)",2018-06-30 19:27:27,2018-06-30 19:27:27
https://api.github.com/repos/hyperledger/iroha/issues/1520,https://api.github.com/repos/hyperledger/iroha/issues/comments/402053863,https://github.com/hyperledger/iroha/pull/1520#issuecomment-402053863,sorabot,@lebdron @l4l  commit 3b6fdbf9df98308f4a01d3fb17cee5bb8ec8fa4a build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1520/8/,2018-07-03 08:20:31,2018-07-03 08:20:31
https://api.github.com/repos/hyperledger/iroha/issues/1519,https://api.github.com/repos/hyperledger/iroha/issues/comments/401432871,https://github.com/hyperledger/iroha/issues/1519#issuecomment-401432871,tyvision,"Thus, it will look like that:
```groovy
stage('bindings') {
  when {
     allOf {
      expression { return params.bindings }
      expression { return params.x86_64_linux }
    }
  ...
  }
...
}
stage('windows_bindings') {
  when {
    allOf {
      expression { return params.bindings }
      expression { return params.x86_64_win }
    }
  }
...
}
```",2018-06-29 18:13:58,2018-06-29 18:16:18
https://api.github.com/repos/hyperledger/iroha/issues/1519,https://api.github.com/repos/hyperledger/iroha/issues/comments/401532905,https://github.com/hyperledger/iroha/issues/1519#issuecomment-401532905,tyvision,"Proposed solution is at the https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/fix%252Fci-pipeline-logic/1/console
or `fix/ci-pipeline-logic` branch.",2018-06-30 10:38:36,2018-06-30 10:38:36
https://api.github.com/repos/hyperledger/iroha/issues/1519,https://api.github.com/repos/hyperledger/iroha/issues/comments/454752163,https://github.com/hyperledger/iroha/issues/1519#issuecomment-454752163,LiraLemur,Outdated since we are getting rid of bindings in favour of better solutions. ,2019-01-16 11:52:14,2019-01-16 11:52:14
https://api.github.com/repos/hyperledger/iroha/issues/1518,https://api.github.com/repos/hyperledger/iroha/issues/comments/401411468,https://github.com/hyperledger/iroha/pull/1518#issuecomment-401411468,sorabot,@muratovv @lebdron  commit 7182044c1bebe628f4f50446eb2c40295cfc9e68 build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1518/1/,2018-06-29 16:49:34,2018-06-29 16:49:34
https://api.github.com/repos/hyperledger/iroha/issues/1518,https://api.github.com/repos/hyperledger/iroha/issues/comments/401538193,https://github.com/hyperledger/iroha/pull/1518#issuecomment-401538193,sorabot,@muratovv @lebdron  commit 0dd995b6d211c9e766b2ca5dc2c7442d4dc18370 build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1518/2/,2018-06-30 12:29:53,2018-06-30 12:29:53
https://api.github.com/repos/hyperledger/iroha/issues/1518,https://api.github.com/repos/hyperledger/iroha/issues/comments/402185909,https://github.com/hyperledger/iroha/pull/1518#issuecomment-402185909,sorabot,@muratovv @lebdron  commit 4ea14852dcd0fc11a6c5cf91a50b6d41d942b720 build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1518/4/,2018-07-03 14:54:01,2018-07-03 14:54:01
https://api.github.com/repos/hyperledger/iroha/issues/1517,https://api.github.com/repos/hyperledger/iroha/issues/comments/401530742,https://github.com/hyperledger/iroha/pull/1517#issuecomment-401530742,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [command_executor.cpp#L39](https://github.com/hyperledger/iroha/blob/020376b6d8521b0e47801f0d7dc9e742185d8b11/irohad/execution/impl/command_executor.cpp#L39): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L167](https://github.com/hyperledger/iroha/blob/020376b6d8521b0e47801f0d7dc9e742185d8b11/test/module/irohad/execution/command_validate_execute_test.cpp#L167): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-30 09:53:27,2018-06-30 09:53:27
https://api.github.com/repos/hyperledger/iroha/issues/1517,https://api.github.com/repos/hyperledger/iroha/issues/comments/401548722,https://github.com/hyperledger/iroha/pull/1517#issuecomment-401548722,sorabot,@igor-egorov @Alexey-N-Chernyshov  commit 0bdc97c448a69437253021c3209c091c9b530334 build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1517/4/,2018-06-30 15:44:16,2018-06-30 15:44:16
https://api.github.com/repos/hyperledger/iroha/issues/1517,https://api.github.com/repos/hyperledger/iroha/issues/comments/401569115,https://github.com/hyperledger/iroha/pull/1517#issuecomment-401569115,sorabot,@igor-egorov @Alexey-N-Chernyshov  commit 1d82e9fc1d55a1e19bfb3a98c9b78c4b27c5549e build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1517/5/,2018-06-30 22:07:20,2018-06-30 22:07:20
https://api.github.com/repos/hyperledger/iroha/issues/1517,https://api.github.com/repos/hyperledger/iroha/issues/comments/403235567,https://github.com/hyperledger/iroha/pull/1517#issuecomment-403235567,l4l,Come to the decision that it's not a desired behavior,2018-07-07 18:43:43,2018-07-07 18:43:43
https://api.github.com/repos/hyperledger/iroha/issues/1516,https://api.github.com/repos/hyperledger/iroha/issues/comments/454752200,https://github.com/hyperledger/iroha/issues/1516#issuecomment-454752200,LiraLemur,Outdated since we are getting rid of bindings in favour of better solutions. ,2019-01-16 11:52:20,2019-01-16 11:52:20
https://api.github.com/repos/hyperledger/iroha/issues/1515,https://api.github.com/repos/hyperledger/iroha/issues/comments/401407220,https://github.com/hyperledger/iroha/pull/1515#issuecomment-401407220,sorabot,@lebdron @bakhtin  commit 01eae000c908d447eabac372842eb2e3d44e12ff build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1515/4/,2018-06-29 16:33:04,2018-06-29 16:33:04
https://api.github.com/repos/hyperledger/iroha/issues/1515,https://api.github.com/repos/hyperledger/iroha/issues/comments/401468186,https://github.com/hyperledger/iroha/pull/1515#issuecomment-401468186,sorabot,@lebdron @bakhtin  commit f5ed4008a4880d44203bdb9b55d2b9e09baea455 build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1515/5/,2018-06-29 20:40:27,2018-06-29 20:40:27
https://api.github.com/repos/hyperledger/iroha/issues/1512,https://api.github.com/repos/hyperledger/iroha/issues/comments/401307639,https://github.com/hyperledger/iroha/issues/1512#issuecomment-401307639,l4l,dup of #1432,2018-06-29 09:52:19,2018-06-29 09:52:19
https://api.github.com/repos/hyperledger/iroha/issues/1511,https://api.github.com/repos/hyperledger/iroha/issues/comments/401315887,https://github.com/hyperledger/iroha/pull/1511#issuecomment-401315887,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [command_executor.cpp#L39](https://github.com/hyperledger/iroha/blob/714a0fa92beadfce15fe779115ffcd6f39bc04ed/irohad/execution/impl/command_executor.cpp#L39): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L47](https://github.com/hyperledger/iroha/blob/714a0fa92beadfce15fe779115ffcd6f39bc04ed/test/integration/transport/ordering_gate_service_test.cpp#L47): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L167](https://github.com/hyperledger/iroha/blob/714a0fa92beadfce15fe779115ffcd6f39bc04ed/test/module/irohad/execution/command_validate_execute_test.cpp#L167): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-29 10:29:03,2018-06-29 10:29:03
https://api.github.com/repos/hyperledger/iroha/issues/1511,https://api.github.com/repos/hyperledger/iroha/issues/comments/401397893,https://github.com/hyperledger/iroha/pull/1511#issuecomment-401397893,sorabot,@igor-egorov @Alexey-N-Chernyshov  commit d1d7c55c8392727582685204b9bcff4d4dc32c5f build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1511/3/,2018-06-29 15:57:23,2018-06-29 15:57:23
https://api.github.com/repos/hyperledger/iroha/issues/1511,https://api.github.com/repos/hyperledger/iroha/issues/comments/401468313,https://github.com/hyperledger/iroha/pull/1511#issuecomment-401468313,sorabot,@igor-egorov @Alexey-N-Chernyshov  commit 71629f76403b6f6c100625ea8674de5d1b952023 build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1511/4/,2018-06-29 20:40:58,2018-06-29 20:40:58
https://api.github.com/repos/hyperledger/iroha/issues/1508,https://api.github.com/repos/hyperledger/iroha/issues/comments/402497849,https://github.com/hyperledger/iroha/pull/1508#issuecomment-402497849,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/b8d7a2da939410af24c22cf4ec33609239da3645/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L36): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/b8d7a2da939410af24c22cf4ec33609239da3645/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-04 14:39:00,2018-07-04 14:39:00
https://api.github.com/repos/hyperledger/iroha/issues/1506,https://api.github.com/repos/hyperledger/iroha/issues/comments/401143100,https://github.com/hyperledger/iroha/pull/1506#issuecomment-401143100,l4l,"Could you understand why is that needed? It looks like significant step towards the validator over-complication

If I understood correctly, most of the pr aimed for that diff lines:
![screenshot_20180628_221201](https://user-images.githubusercontent.com/5658339/42055628-5c06a4be-7b20-11e8-9737-d476095ccb49.png)

But what's the problem with the previous code then if it did almost the same thing?",2018-06-28 19:14:37,2018-06-28 19:14:37
https://api.github.com/repos/hyperledger/iroha/issues/1506,https://api.github.com/repos/hyperledger/iroha/issues/comments/401322223,https://github.com/hyperledger/iroha/pull/1506#issuecomment-401322223,kamilsa,"We need to be able to validate transactions collections (in proposal, block or just list of transactions) using either signed or unsigned transaction collection validator. Now we don't have fair implementations of them",2018-06-29 11:01:51,2018-06-29 11:01:51
https://api.github.com/repos/hyperledger/iroha/issues/1506,https://api.github.com/repos/hyperledger/iroha/issues/comments/401729578,https://github.com/hyperledger/iroha/pull/1506#issuecomment-401729578,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transaction_sequence.cpp#L15](https://github.com/hyperledger/iroha/blob/9a1b2d136ad802035b9ad81d5573db2085ff2aff/shared_model/interfaces/iroha_internal/transaction_sequence.cpp#L15): The function 'createTransactionSequence' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-02 09:21:28,2018-07-02 09:21:28
https://api.github.com/repos/hyperledger/iroha/issues/1506,https://api.github.com/repos/hyperledger/iroha/issues/comments/401959552,https://github.com/hyperledger/iroha/pull/1506#issuecomment-401959552,sorabot,@Akvinikym @l4l  commit 8b3a6621c89b5e08e31e588f501b5ba8073890c2 build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1506/4/,2018-07-02 22:43:31,2018-07-02 22:43:31
https://api.github.com/repos/hyperledger/iroha/issues/1505,https://api.github.com/repos/hyperledger/iroha/issues/comments/404750905,https://github.com/hyperledger/iroha/pull/1505#issuecomment-404750905,sorabot,"SonarQube analysis reported 7 issues

1. ![MINOR][MINOR] [postgres_block_index.hpp#L54](https://github.com/hyperledger/iroha/blob/1bb1ba37de069b7ddf3b0a866b8b77cbb05b7ba5/irohad/ametsuchi/impl/postgres_block_index.hpp#L54): Unused private function: 'PostgresBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L78](https://github.com/hyperledger/iroha/blob/1bb1ba37de069b7ddf3b0a866b8b77cbb05b7ba5/irohad/ametsuchi/impl/postgres_block_query.hpp#L78): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L86](https://github.com/hyperledger/iroha/blob/1bb1ba37de069b7ddf3b0a866b8b77cbb05b7ba5/irohad/ametsuchi/impl/postgres_block_query.hpp#L86): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L96](https://github.com/hyperledger/iroha/blob/1bb1ba37de069b7ddf3b0a866b8b77cbb05b7ba5/irohad/ametsuchi/impl/postgres_block_query.hpp#L96): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L79](https://github.com/hyperledger/iroha/blob/1bb1ba37de069b7ddf3b0a866b8b77cbb05b7ba5/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L79): The class 'BlockQueryTransferTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [ametsuchi_fixture.hpp#L79](https://github.com/hyperledger/iroha/blob/1bb1ba37de069b7ddf3b0a866b8b77cbb05b7ba5/test/module/irohad/ametsuchi/ametsuchi_fixture.hpp#L79): The class 'WsvQueryCommandTest' defines member variable with name 'sql' also defined in its parent class 'AmetsuchiTest'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplInheritedMember)
1. ![MINOR][MINOR] [storage_init_test.cpp#L21](https://github.com/hyperledger/iroha/blob/1bb1ba37de069b7ddf3b0a866b8b77cbb05b7ba5/test/module/irohad/ametsuchi/storage_init_test.cpp#L21): Variable 'pg_opt_without_dbname_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-13 07:30:16,2018-07-13 07:30:16
https://api.github.com/repos/hyperledger/iroha/issues/1504,https://api.github.com/repos/hyperledger/iroha/issues/comments/402209838,https://github.com/hyperledger/iroha/pull/1504#issuecomment-402209838,sorabot,@victordrobny @kamilsa  commit 6903af84a6bb5bfa8dfafaadde40eb5eae5c8b27 build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1504/10/,2018-07-03 16:06:25,2018-07-03 16:06:25
https://api.github.com/repos/hyperledger/iroha/issues/1503,https://api.github.com/repos/hyperledger/iroha/issues/comments/400580150,https://github.com/hyperledger/iroha/pull/1503#issuecomment-400580150,bakhtin,"Successfully compiled binaries after applying this patch on ARMv7 platform:
```
root@d29676a564e0:/opt/iroha_deps/iroha# file build/bin/iroha-cli 
build/bin/iroha-cli: ELF 32-bit LSB shared object, ARM, EABI5 version 1 (GNU/Linux), dynamically linked, interpreter /lib/ld-linux-armhf.so.3, for GNU/Linux 3.2.0, BuildID[sha1]=9d4847e33995a30e125b71a6555830cc7bc4fa91, not stripped
root@d29676a564e0:/opt/iroha_deps/iroha# file build/bin/irohad    
build/bin/irohad: ELF 32-bit LSB shared object, ARM, EABI5 version 1 (GNU/Linux), dynamically linked, interpreter /lib/ld-linux-armhf.so.3, for GNU/Linux 3.2.0, BuildID[sha1]=5cd9ab5b37008b1b79edb6475acfec8a0abe9cb7, with debug_info, not stripped
```",2018-06-27 08:02:40,2018-06-27 08:02:40
https://api.github.com/repos/hyperledger/iroha/issues/1502,https://api.github.com/repos/hyperledger/iroha/issues/comments/401398602,https://github.com/hyperledger/iroha/pull/1502#issuecomment-401398602,sorabot,@kamilsa @lebdron  commit 66220fc242756891ee5aec18811e4423acd48ab9 build status: UNSTABLE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1502/4/,2018-06-29 15:59:56,2018-06-29 15:59:56
https://api.github.com/repos/hyperledger/iroha/issues/1502,https://api.github.com/repos/hyperledger/iroha/issues/comments/401467539,https://github.com/hyperledger/iroha/pull/1502#issuecomment-401467539,sorabot,@kamilsa @lebdron  commit 8572628ae4f86909fd6e2c035d26879bcef0a9d4 build status: SUCCESS. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1502/5/,2018-06-29 20:37:29,2018-06-29 20:37:29
https://api.github.com/repos/hyperledger/iroha/issues/1502,https://api.github.com/repos/hyperledger/iroha/issues/comments/401564365,https://github.com/hyperledger/iroha/pull/1502#issuecomment-401564365,sorabot,@kamilsa @lebdron  commit 7b40ac496ad29c4808dc1b0b7a125c1dd0ae72bc build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1502/6/,2018-06-30 20:27:22,2018-06-30 20:27:22
https://api.github.com/repos/hyperledger/iroha/issues/1502,https://api.github.com/repos/hyperledger/iroha/issues/comments/401569888,https://github.com/hyperledger/iroha/pull/1502#issuecomment-401569888,sorabot,@kamilsa @lebdron  commit a32cabd8f59c28b1de1813b0078547617bf22cae build status: FAILURE. build URL: https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/PR-1502/7/,2018-06-30 22:23:16,2018-06-30 22:23:16
https://api.github.com/repos/hyperledger/iroha/issues/1501,https://api.github.com/repos/hyperledger/iroha/issues/comments/400373813,https://github.com/hyperledger/iroha/pull/1501#issuecomment-400373813,l4l,"Would be nice to give a reference at `core_concepts/glossary.html#permission` and maybe some other places. Also I'm not sure, that maintenance is a good place",2018-06-26 16:19:06,2018-06-26 16:19:06
https://api.github.com/repos/hyperledger/iroha/issues/1501,https://api.github.com/repos/hyperledger/iroha/issues/comments/400667937,https://github.com/hyperledger/iroha/pull/1501#issuecomment-400667937,igor-egorov,"Thanks! I will add a link into the glossary. 

We consider ""Maintenance"" section good enough because tuning of permissions is a kind of maintenance process. Nevertheless, feel free to share your vision of a better place for the page.",2018-06-27 13:17:59,2018-06-27 13:17:59
https://api.github.com/repos/hyperledger/iroha/issues/1501,https://api.github.com/repos/hyperledger/iroha/issues/comments/401526472,https://github.com/hyperledger/iroha/pull/1501#issuecomment-401526472,neewy,"Oh god, this is so good",2018-06-30 08:24:22,2018-06-30 08:24:22
https://api.github.com/repos/hyperledger/iroha/issues/1501,https://api.github.com/repos/hyperledger/iroha/issues/comments/405181907,https://github.com/hyperledger/iroha/pull/1501#issuecomment-405181907,igor-egorov,There is no reason to wait CI. Merged without waiting.,2018-07-16 08:44:15,2018-07-16 08:44:15
https://api.github.com/repos/hyperledger/iroha/issues/1498,https://api.github.com/repos/hyperledger/iroha/issues/comments/400628579,https://github.com/hyperledger/iroha/issues/1498#issuecomment-400628579,nickaleks,Found an issue that query processor need read lock on the database in order to avoid data inconsistency,2018-06-27 10:42:35,2018-06-27 10:42:35
https://api.github.com/repos/hyperledger/iroha/issues/1498,https://api.github.com/repos/hyperledger/iroha/issues/comments/454413285,https://github.com/hyperledger/iroha/issues/1498#issuecomment-454413285,LiraLemur,moved to Jira: https://jira.hyperledger.org/browse/IR-194,2019-01-15 14:36:13,2019-01-15 14:36:13
https://api.github.com/repos/hyperledger/iroha/issues/1497,https://api.github.com/repos/hyperledger/iroha/issues/comments/399991038,https://github.com/hyperledger/iroha/pull/1497#issuecomment-399991038,l4l,please write meaningful pr title,2018-06-25 15:23:31,2018-06-25 15:23:31
https://api.github.com/repos/hyperledger/iroha/issues/1496,https://api.github.com/repos/hyperledger/iroha/issues/comments/399767572,https://github.com/hyperledger/iroha/pull/1496#issuecomment-399767572,uditha-atukorala,"@l4l, if I use clang-format (e.g. `clang-format -i -style=Google interactive_common_cli.hpp`) the entire file seem to get reformatted. Should I do it anyway or am I using clan-format incorrectly? ",2018-06-24 16:09:48,2018-06-24 16:09:48
https://api.github.com/repos/hyperledger/iroha/issues/1496,https://api.github.com/repos/hyperledger/iroha/issues/comments/399768261,https://github.com/hyperledger/iroha/pull/1496#issuecomment-399768261,l4l,"@uditha-atukorala we have minor differences with google code style (in terms of clang-format) actually. They are listed in [config](https://github.com/hyperledger/iroha/blob/develop/.clang-format), so prefer using `-style=file` (or smth like that)",2018-06-24 16:19:16,2018-06-24 16:19:16
https://api.github.com/repos/hyperledger/iroha/issues/1496,https://api.github.com/repos/hyperledger/iroha/issues/comments/400020286,https://github.com/hyperledger/iroha/pull/1496#issuecomment-400020286,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [interactive_common_cli.cpp#L43](https://github.com/hyperledger/iroha/blob/047f6339a23e99e3137b2be6295042349c604d84/iroha-cli/interactive/impl/interactive_common_cli.cpp#L43): Return value of function to_string() is not used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AignoredReturnValue)
1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L145](https://github.com/hyperledger/iroha/blob/047f6339a23e99e3137b2be6295042349c604d84/iroha-cli/interactive/interactive_transaction_cli.hpp#L145): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-25 16:50:50,2018-06-25 16:50:50
https://api.github.com/repos/hyperledger/iroha/issues/1494,https://api.github.com/repos/hyperledger/iroha/issues/comments/399474912,https://github.com/hyperledger/iroha/pull/1494#issuecomment-399474912,kamilsa,Please also add https://github.com/hyperledger/iroha/pull/1402 to release notes. This is new account assets query allowing to retrieve all user's assets ,2018-06-22 15:08:37,2018-06-22 15:08:37
https://api.github.com/repos/hyperledger/iroha/issues/1494,https://api.github.com/repos/hyperledger/iroha/issues/comments/399496096,https://github.com/hyperledger/iroha/pull/1494#issuecomment-399496096,neewy,"@kamilsa for some reason it disappeared from notes
",2018-06-22 16:12:04,2018-06-22 16:12:04
https://api.github.com/repos/hyperledger/iroha/issues/1494,https://api.github.com/repos/hyperledger/iroha/issues/comments/399496639,https://github.com/hyperledger/iroha/pull/1494#issuecomment-399496639,neewy,@kamilsa done,2018-06-22 16:13:39,2018-06-22 16:13:39
https://api.github.com/repos/hyperledger/iroha/issues/1494,https://api.github.com/repos/hyperledger/iroha/issues/comments/399505440,https://github.com/hyperledger/iroha/pull/1494#issuecomment-399505440,sorabot,"SonarQube analysis reported 17 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 16 minor

#### Top 10 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L204](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L204): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L44](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L44): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L81](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/irohad/ametsuchi/impl/postgres_block_query.hpp#L81): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L89](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/irohad/ametsuchi/impl/postgres_block_query.hpp#L89): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L99](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/irohad/ametsuchi/impl/postgres_block_query.hpp#L99): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L107](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L107): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L36): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L66](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/irohad/consensus/yac/impl/yac_gate_impl.hpp#L66): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L36](https://github.com/hyperledger/iroha/blob/3608e4bcff7d31b715fdcdc34837318acd43a66c/irohad/execution/impl/command_executor.cpp#L36): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-22 16:39:14,2018-06-22 16:39:14
https://api.github.com/repos/hyperledger/iroha/issues/1493,https://api.github.com/repos/hyperledger/iroha/issues/comments/401735990,https://github.com/hyperledger/iroha/pull/1493#issuecomment-401735990,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/098e43db54fa0b3dc906e4b40d0c6fb3652efb3e/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L36): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/098e43db54fa0b3dc906e4b40d0c6fb3652efb3e/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-02 09:38:58,2018-07-02 09:38:58
https://api.github.com/repos/hyperledger/iroha/issues/1489,https://api.github.com/repos/hyperledger/iroha/issues/comments/399400704,https://github.com/hyperledger/iroha/pull/1489#issuecomment-399400704,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [common_executor.cpp#L28](https://github.com/hyperledger/iroha/blob/dc6642cce7967a62ae39e68265bc84c64ed30566/irohad/execution/impl/common_executor.cpp#L28): The function 'getAccountPermissions' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-22 10:38:31,2018-06-22 10:38:31
https://api.github.com/repos/hyperledger/iroha/issues/1488,https://api.github.com/repos/hyperledger/iroha/issues/comments/399029265,https://github.com/hyperledger/iroha/pull/1488#issuecomment-399029265,neewy,"@Solonets please use English only in pull request discussions, this is a mandatory thing for all maintainers  ",2018-06-21 09:00:21,2018-06-21 09:00:21
https://api.github.com/repos/hyperledger/iroha/issues/1486,https://api.github.com/repos/hyperledger/iroha/issues/comments/399857505,https://github.com/hyperledger/iroha/pull/1486#issuecomment-399857505,sorabot,"SonarQube analysis reported 5 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L44](https://github.com/hyperledger/iroha/blob/ddaefc83095623dd79cb5597d2f52043b9201d11/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L44): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/ddaefc83095623dd79cb5597d2f52043b9201d11/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L36): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/ddaefc83095623dd79cb5597d2f52043b9201d11/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [command_executor.cpp#L39](https://github.com/hyperledger/iroha/blob/ddaefc83095623dd79cb5597d2f52043b9201d11/irohad/execution/impl/command_executor.cpp#L39): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L167](https://github.com/hyperledger/iroha/blob/ddaefc83095623dd79cb5597d2f52043b9201d11/test/module/irohad/execution/command_validate_execute_test.cpp#L167): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-25 07:25:51,2018-06-25 07:25:51
https://api.github.com/repos/hyperledger/iroha/issues/1485,https://api.github.com/repos/hyperledger/iroha/issues/comments/398767979,https://github.com/hyperledger/iroha/pull/1485#issuecomment-398767979,igor-egorov,"Note about SonarQube report - that is just a false positive error.

> launchers.cpp#L57: The function 'initialized' is never used.

https://github.com/hyperledger/iroha/blob/53f1894ed2b8ba703f6fccb9b939b9c9a76762f7/test/integration/binary/binaries_test_fixture.hpp#L117",2018-06-20 14:23:15,2018-06-20 14:23:15
https://api.github.com/repos/hyperledger/iroha/issues/1485,https://api.github.com/repos/hyperledger/iroha/issues/comments/403081341,https://github.com/hyperledger/iroha/pull/1485#issuecomment-403081341,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [launchers.cpp#L73](https://github.com/hyperledger/iroha/blob/ec2b9f4abeed410cf35ac12eb933979b485c4e87/test/integration/binary/launchers.cpp#L73): The function 'initialized' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-07-06 16:21:34,2018-07-06 16:21:34
https://api.github.com/repos/hyperledger/iroha/issues/1480,https://api.github.com/repos/hyperledger/iroha/issues/comments/398716599,https://github.com/hyperledger/iroha/pull/1480#issuecomment-398716599,sorabot,"SonarQube analysis reported 8 issues

1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/8048000212377db329c3f0f73128a43ba0e45d1f/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/8048000212377db329c3f0f73128a43ba0e45d1f/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/8048000212377db329c3f0f73128a43ba0e45d1f/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/8048000212377db329c3f0f73128a43ba0e45d1f/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L294](https://github.com/hyperledger/iroha/blob/8048000212377db329c3f0f73128a43ba0e45d1f/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L294): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L294](https://github.com/hyperledger/iroha/blob/8048000212377db329c3f0f73128a43ba0e45d1f/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L294): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L294](https://github.com/hyperledger/iroha/blob/8048000212377db329c3f0f73128a43ba0e45d1f/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L294): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L294](https://github.com/hyperledger/iroha/blob/8048000212377db329c3f0f73128a43ba0e45d1f/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L294): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-20 11:27:22,2018-06-20 11:27:22
https://api.github.com/repos/hyperledger/iroha/issues/1479,https://api.github.com/repos/hyperledger/iroha/issues/comments/399143744,https://github.com/hyperledger/iroha/pull/1479#issuecomment-399143744,luckychess,"Also header ```%include ""backend/protobuf/permissions.hpp""``` is not needed in bindings.i file and removing it will prevent methods like ```fromTransport``` and ```toTransport``` from exposing (thanks @lebdron from pointing on it).",2018-06-21 15:26:17,2018-06-21 15:26:17
https://api.github.com/repos/hyperledger/iroha/issues/1478,https://api.github.com/repos/hyperledger/iroha/issues/comments/399756162,https://github.com/hyperledger/iroha/issues/1478#issuecomment-399756162,l4l,"I may guess it's the problem in your code, since:
- irohad itself doesn't use java at all (or any other JVM)
- bindings doesn't have interface for managed (and non-managed as well) grpc connections, afaik",2018-06-24 13:22:57,2018-06-24 13:22:57
https://api.github.com/repos/hyperledger/iroha/issues/1478,https://api.github.com/repos/hyperledger/iroha/issues/comments/401307841,https://github.com/hyperledger/iroha/issues/1478#issuecomment-401307841,l4l,Any response on that?,2018-06-29 09:53:08,2018-06-29 09:53:08
https://api.github.com/repos/hyperledger/iroha/issues/1478,https://api.github.com/repos/hyperledger/iroha/issues/comments/401388531,https://github.com/hyperledger/iroha/issues/1478#issuecomment-401388531,walkero,"Sorry, I haven‘t got any progress. I am simplifying my program to make the error occur again.",2018-06-29 15:25:41,2018-06-29 15:25:41
https://api.github.com/repos/hyperledger/iroha/issues/1478,https://api.github.com/repos/hyperledger/iroha/issues/comments/401460652,https://github.com/hyperledger/iroha/issues/1478#issuecomment-401460652,l4l,Maybe it was already fixed? Anyway feel free to add additional information if you find some. For now I'm closing the issue,2018-06-29 20:07:33,2018-06-29 20:07:33
https://api.github.com/repos/hyperledger/iroha/issues/1477,https://api.github.com/repos/hyperledger/iroha/issues/comments/407757667,https://github.com/hyperledger/iroha/pull/1477#issuecomment-407757667,Alexey-N-Chernyshov,"please, check if CI succeded",2018-07-25 13:40:30,2018-07-25 13:40:30
https://api.github.com/repos/hyperledger/iroha/issues/1474,https://api.github.com/repos/hyperledger/iroha/issues/comments/398340359,https://github.com/hyperledger/iroha/pull/1474#issuecomment-398340359,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [field_validator.cpp#L237](https://github.com/hyperledger/iroha/blob/a237aabc18ea08eeb26a7895d2a3d4fddc4dc82d/shared_model/validators/field_validator.cpp#L237): The function 'validateRolePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [field_validator.cpp#L262](https://github.com/hyperledger/iroha/blob/a237aabc18ea08eeb26a7895d2a3d4fddc4dc82d/shared_model/validators/field_validator.cpp#L262): The function 'validateGrantablePermissions' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-19 09:44:05,2018-06-19 09:44:05
https://api.github.com/repos/hyperledger/iroha/issues/1472,https://api.github.com/repos/hyperledger/iroha/issues/comments/399037160,https://github.com/hyperledger/iroha/pull/1472#issuecomment-399037160,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L81](https://github.com/hyperledger/iroha/blob/c4463ceaabb128dcae95b788a2e11e74ee8325c5/irohad/ametsuchi/impl/postgres_block_query.hpp#L81): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L89](https://github.com/hyperledger/iroha/blob/c4463ceaabb128dcae95b788a2e11e74ee8325c5/irohad/ametsuchi/impl/postgres_block_query.hpp#L89): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L99](https://github.com/hyperledger/iroha/blob/c4463ceaabb128dcae95b788a2e11e74ee8325c5/irohad/ametsuchi/impl/postgres_block_query.hpp#L99): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ordering_init.cpp#L52](https://github.com/hyperledger/iroha/blob/c4463ceaabb128dcae95b788a2e11e74ee8325c5/irohad/main/impl/ordering_init.cpp#L52): The function 'initOrderingGate' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-21 09:26:37,2018-06-21 09:26:37
https://api.github.com/repos/hyperledger/iroha/issues/1470,https://api.github.com/repos/hyperledger/iroha/issues/comments/398392185,https://github.com/hyperledger/iroha/pull/1470#issuecomment-398392185,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [command_executor.cpp#L36](https://github.com/hyperledger/iroha/blob/efaf1bb7c167af0a396342cc25f45f0776563a4a/irohad/execution/impl/command_executor.cpp#L36): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-19 13:07:14,2018-06-19 13:07:14
https://api.github.com/repos/hyperledger/iroha/issues/1469,https://api.github.com/repos/hyperledger/iroha/issues/comments/398707345,https://github.com/hyperledger/iroha/pull/1469#issuecomment-398707345,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transaction_sequence.cpp#L12](https://github.com/hyperledger/iroha/blob/2abb4da246ee8c06be8c0d78df1e0f6123e95051/shared_model/interfaces/iroha_internal/transaction_sequence.cpp#L12): The function 'createTransactionSequence' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-20 10:49:37,2018-06-20 10:49:37
https://api.github.com/repos/hyperledger/iroha/issues/1469,https://api.github.com/repos/hyperledger/iroha/issues/comments/399032959,https://github.com/hyperledger/iroha/pull/1469#issuecomment-399032959,neewy,Why such feature is not implemented in a trunk? @kamilsa @muratovv ,2018-06-21 09:12:48,2018-06-21 09:12:48
https://api.github.com/repos/hyperledger/iroha/issues/1468,https://api.github.com/repos/hyperledger/iroha/issues/comments/397896414,https://github.com/hyperledger/iroha/issues/1468#issuecomment-397896414,l4l,"Well, I guess it's a quorum field (it's set by default to 1 and it's ok):
https://github.com/hyperledger/iroha/blob/902c541cdb8bcca188cf44bab388572365bc3c5a/schema/block.proto#L16

Dunno why isn't it properly showed.",2018-06-17 18:14:12,2018-06-17 18:14:12
https://api.github.com/repos/hyperledger/iroha/issues/1468,https://api.github.com/repos/hyperledger/iroha/issues/comments/397898035,https://github.com/hyperledger/iroha/issues/1468#issuecomment-397898035,Warchant,"I forgot to invalidate build cache, since first I used bindings from master and then I used bindings from develop.

It is not bug.
",2018-06-17 18:41:17,2018-06-17 18:41:17
https://api.github.com/repos/hyperledger/iroha/issues/1467,https://api.github.com/repos/hyperledger/iroha/issues/comments/397895477,https://github.com/hyperledger/iroha/issues/1467#issuecomment-397895477,l4l,"Message description is wrong actually. Peer address must also contain port, e.g `""192.168.1.2:12345""`",2018-06-17 17:58:36,2018-06-17 17:58:36
https://api.github.com/repos/hyperledger/iroha/issues/1467,https://api.github.com/repos/hyperledger/iroha/issues/comments/397895542,https://github.com/hyperledger/iroha/issues/1467#issuecomment-397895542,Warchant,"@l4l yes, this is logging bug.",2018-06-17 17:59:50,2018-06-17 17:59:50
https://api.github.com/repos/hyperledger/iroha/issues/1466,https://api.github.com/repos/hyperledger/iroha/issues/comments/398341557,https://github.com/hyperledger/iroha/issues/1466#issuecomment-398341557,stinger112,"Version for Iroha v1.0 beta-2 has been under testing because I tried to implement it using experimental Emscripten compilation.

Now we decide to make this experiment as default, so now you can install the version **iroha-lib** for the latest Iroha release by `yarn add iroha-lib` without tags.",2018-06-19 09:48:17,2018-06-19 09:48:17
https://api.github.com/repos/hyperledger/iroha/issues/1466,https://api.github.com/repos/hyperledger/iroha/issues/comments/400274732,https://github.com/hyperledger/iroha/issues/1466#issuecomment-400274732,stinger112,The new version of [**iroha-lib**](https://www.npmjs.com/package/iroha-lib/v/0.1.7) for _Iroha v1.0 beta-3_ has been released.,2018-06-26 11:31:27,2018-06-26 11:32:08
https://api.github.com/repos/hyperledger/iroha/issues/1465,https://api.github.com/repos/hyperledger/iroha/issues/comments/454408892,https://github.com/hyperledger/iroha/issues/1465#issuecomment-454408892,LiraLemur,Moved to Jira: https://jira.hyperledger.org/browse/IR-193,2019-01-15 14:23:40,2019-01-15 14:23:40
https://api.github.com/repos/hyperledger/iroha/issues/1465,https://api.github.com/repos/hyperledger/iroha/issues/comments/454443136,https://github.com/hyperledger/iroha/issues/1465#issuecomment-454443136,Warchant,Outdated,2019-01-15 15:54:52,2019-01-15 15:54:52
https://api.github.com/repos/hyperledger/iroha/issues/1464,https://api.github.com/repos/hyperledger/iroha/issues/comments/398452591,https://github.com/hyperledger/iroha/pull/1464#issuecomment-398452591,sorabot,"SonarQube analysis reported 2 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L204](https://github.com/hyperledger/iroha/blob/31963798f3cc672d897cc3ec37d17e895e2dd474/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L204): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L160](https://github.com/hyperledger/iroha/blob/31963798f3cc672d897cc3ec37d17e895e2dd474/irohad/model/converters/impl/pb_query_response_factory.cpp#L160): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-19 16:00:05,2018-06-19 16:00:05
https://api.github.com/repos/hyperledger/iroha/issues/1463,https://api.github.com/repos/hyperledger/iroha/issues/comments/397833089,https://github.com/hyperledger/iroha/pull/1463#issuecomment-397833089,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [field_validator.cpp#L235](https://github.com/hyperledger/iroha/blob/fba484b0d9469c64bfc87d6fe6a60c860d599df0/shared_model/validators/field_validator.cpp#L235): The function 'validateRolePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [field_validator.cpp#L260](https://github.com/hyperledger/iroha/blob/fba484b0d9469c64bfc87d6fe6a60c860d599df0/shared_model/validators/field_validator.cpp#L260): The function 'validateGrantablePermissions' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L47](https://github.com/hyperledger/iroha/blob/fba484b0d9469c64bfc87d6fe6a60c860d599df0/test/integration/transport/ordering_gate_service_test.cpp#L47): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L163](https://github.com/hyperledger/iroha/blob/fba484b0d9469c64bfc87d6fe6a60c860d599df0/test/module/irohad/execution/command_validate_execute_test.cpp#L163): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-16 19:07:57,2018-06-16 19:07:57
https://api.github.com/repos/hyperledger/iroha/issues/1461,https://api.github.com/repos/hyperledger/iroha/issues/comments/397579853,https://github.com/hyperledger/iroha/pull/1461#issuecomment-397579853,l4l,What's the problem with: `Hash(blob.hex())`?,2018-06-15 10:24:55,2018-06-15 10:24:55
https://api.github.com/repos/hyperledger/iroha/issues/1461,https://api.github.com/repos/hyperledger/iroha/issues/comments/397596785,https://github.com/hyperledger/iroha/pull/1461#issuecomment-397596785,Alexey-N-Chernyshov,"@l4l, 'blob.hex()' returns hex representation while `Hash(string)` constructor requires binary string. There was no way to create `Hash` from hex string in java bindings.",2018-06-15 11:48:18,2018-06-15 11:48:18
https://api.github.com/repos/hyperledger/iroha/issues/1461,https://api.github.com/repos/hyperledger/iroha/issues/comments/397598390,https://github.com/hyperledger/iroha/pull/1461#issuecomment-397598390,l4l,"Ah, I see. What about `toBinaryString`:
https://github.com/hyperledger/iroha/blob/f138d79a3fc17b329b61bc31a7463649d11b6978/shared_model/cryptography/blob.hpp#L32

Works in python for me:
![screenshot_20180615_145430](https://user-images.githubusercontent.com/5658339/41466739-2eb38e6a-70ac-11e8-8f2c-1cc8be25c455.png)
",2018-06-15 11:56:07,2018-06-15 11:56:07
https://api.github.com/repos/hyperledger/iroha/issues/1461,https://api.github.com/repos/hyperledger/iroha/issues/comments/397642080,https://github.com/hyperledger/iroha/pull/1461#issuecomment-397642080,Alexey-N-Chernyshov,It doesn't work in Java. I think it is because of encoding. Moreover the binary string shouldn't appear in client sources.,2018-06-15 14:36:52,2018-06-15 14:36:52
https://api.github.com/repos/hyperledger/iroha/issues/1461,https://api.github.com/repos/hyperledger/iroha/issues/comments/397950442,https://github.com/hyperledger/iroha/pull/1461#issuecomment-397950442,sorabot,"SonarQube analysis reported 16 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 15 minor

#### Top 10 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L215](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L215): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L79](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/irohad/ametsuchi/impl/postgres_block_query.hpp#L79): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L87](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/irohad/ametsuchi/impl/postgres_block_query.hpp#L87): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L97](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/irohad/ametsuchi/impl/postgres_block_query.hpp#L97): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L36](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/irohad/execution/impl/command_executor.cpp#L36): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [field_validator.cpp#L234](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/shared_model/validators/field_validator.cpp#L234): The function 'validateRolePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [field_validator.cpp#L259](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/shared_model/validators/field_validator.cpp#L259): The function 'validateGrantablePermissions' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/e402d6c29ee7b3122cf8351c13d0180cd52ef402/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-18 06:04:00,2018-06-18 06:04:00
https://api.github.com/repos/hyperledger/iroha/issues/1457,https://api.github.com/repos/hyperledger/iroha/issues/comments/397584524,https://github.com/hyperledger/iroha/pull/1457#issuecomment-397584524,bakhtin,"- Please confirm whether generated bindings works on Python 3.5.x.
- In order to differentiate between different build types, I suggest to make changes in Jenkinsfile global variables section and add a boolean variable called 'Nightly'. Release and dev build types should correspond to 'master' and 'develop' branch respectively.
- Ping @luckychess to help with SWIG patching such that resulting bindings use proper imports",2018-06-15 10:46:08,2018-06-15 10:46:54
https://api.github.com/repos/hyperledger/iroha/issues/1457,https://api.github.com/repos/hyperledger/iroha/issues/comments/400540143,https://github.com/hyperledger/iroha/pull/1457#issuecomment-400540143,Stayer,python 3 version was changed to 3.5.x,2018-06-27 04:36:38,2018-06-27 04:36:38
https://api.github.com/repos/hyperledger/iroha/issues/1457,https://api.github.com/repos/hyperledger/iroha/issues/comments/400540254,https://github.com/hyperledger/iroha/pull/1457#issuecomment-400540254,Stayer,"wheel name:
${env.GIT_TAG_NAME}-${env.GIT_BRANCH}-${env.BUILD_NUMBER}
",2018-06-27 04:37:37,2018-06-28 10:01:05
https://api.github.com/repos/hyperledger/iroha/issues/1457,https://api.github.com/repos/hyperledger/iroha/issues/comments/401247961,https://github.com/hyperledger/iroha/pull/1457#issuecomment-401247961,Stayer,"Tested on:
OS: Windows 7 X86_64
Python 3.5.5

Log:
```
Python 3.6.5 :: Anaconda, Inc.

(base) C:\Users\tester\Downloads>activate py3.5

(py3.5) C:\Users\tester\Downloads>pip install iroha-develop-cp35-cp35m-win_amd
64.whl
Processing c:\users\tester\downloads\iroha-develop-cp35-cp35m-win_amd64.whl
Requirement already satisfied: grpcio>=1.12.1 in c:\users\tester\anaconda3\env
s\py3.5\lib\site-packages (from iroha==develop) (1.12.1)
Requirement already satisfied: protobuf>=3.5.2.post1 in c:\users\tester\anacon
da3\envs\py3.5\lib\site-packages (from iroha==develop) (3.6.0)
Requirement already satisfied: six>=1.5.2 in c:\users\tester\anaconda3\envs\py
3.5\lib\site-packages (from grpcio>=1.12.1->iroha==develop) (1.11.0)
Requirement already satisfied: setuptools in c:\users\tester\anaconda3\envs\py
3.5\lib\site-packages (from protobuf>=3.5.2.post1->iroha==develop) (39.2.0)
Installing collected packages: iroha
  Found existing installation: iroha null-nightly
    Uninstalling iroha-null-nightly:
      Successfully uninstalled iroha-null-nightly
Successfully installed iroha-develop

(py3.5) C:\Users\tester\Downloads>python
Python 3.5.5 |Anaconda, Inc.| (default, Apr  7 2018, 04:52:34) [MSC v.1900 64 bi
t (AMD64)] on win32
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import iroha
>>> dir(iroha)
['AddAssetQuantity', 'AddPeer', 'AddSignatory', 'AppendRole', 'Blob', 'Blob_from
HexString', 'Blob_swigregister', 'Block', 'BlocksQuery', 'BlocksQuery_swigregist
er', 'ByteVector', 'ByteVector_swigregister', 'COMMITTED', 'Command', 'CreateAcc
ount', 'CreateAsset', 'CreateDomain', 'CreateRole', 'DESCRIPTOR', 'DetachRole',
'GetAccount', 'GetAccountAssetTransactions', 'GetAccountAssets', 'GetAccountDeta
il', 'GetAccountTransactions', 'GetAssetInfo', 'GetRolePermissions', 'GetRoles',
 'GetSignatories', 'GetTransactions', 'GrantPermission', 'GrantablePermissionSet
', 'GrantablePermissionSet_swigregister', 'Grantable_COUNT', 'Grantable_kAddMySi
gnatory', 'Grantable_kRemoveMySignatory', 'Grantable_kSetMyAccountDetail', 'Gran
table_kSetMyQuorum', 'Grantable_kTransferMyAssets', 'Hash', 'HashVector', 'HashV
ector_swigregister', 'Hash_fromHexString', 'Hash_swigregister', 'Header', 'IntVe
ctor', 'IntVector_swigregister', 'Keypair', 'Keypair_swigregister', 'MST_EXPIRED
', 'ModelBlocksQueryBuilder', 'ModelBlocksQueryBuilder_swigregister', 'ModelCryp
to', 'ModelCrypto_swigregister', 'ModelProtoBlocksQuery', 'ModelProtoBlocksQuery
_swigregister', 'ModelProtoQuery', 'ModelProtoQuery_swigregister', 'ModelProtoTr
ansaction', 'ModelProtoTransaction_swigregister', 'ModelQueryBuilder', 'ModelQue
ryBuilder_swigregister', 'ModelTransactionBuilder', 'ModelTransactionBuilder_swi
gregister', 'NOT_RECEIVED', 'PrivateKey', 'PrivateKey_swigregister', 'PublicKey'
, 'PublicKey_swigregister', 'Query', 'QueryPayloadMeta', 'Query_swigregister', '
RemoveSignatory', 'RevokePermission', 'RolePermissionSet', 'RolePermissionSet_sw
igregister', 'Role_COUNT', 'Role_kAddAssetQty', 'Role_kAddMySignatory', 'Role_kA
ddPeer', 'Role_kAddSignatory', 'Role_kAppendRole', 'Role_kCreateAccount', 'Role_
kCreateAsset', 'Role_kCreateDomain', 'Role_kCreateRole', 'Role_kDetachRole', 'Ro
le_kGetAllAccAst', 'Role_kGetAllAccAstTxs', 'Role_kGetAllAccDetail', 'Role_kGetA
llAccTxs', 'Role_kGetAllAccounts', 'Role_kGetAllSignatories', 'Role_kGetAllTxs',
 'Role_kGetBlocks', 'Role_kGetDomainAccAst', 'Role_kGetDomainAccAstTxs', 'Role_k
GetDomainAccDetail', 'Role_kGetDomainAccTxs', 'Role_kGetDomainAccounts', 'Role_k
GetDomainSignatories', 'Role_kGetMyAccAst', 'Role_kGetMyAccAstTxs', 'Role_kGetMy
AccDetail', 'Role_kGetMyAccTxs', 'Role_kGetMyAccount', 'Role_kGetMySignatories',
 'Role_kGetMyTxs', 'Role_kGetRoles', 'Role_kReadAssets', 'Role_kReceive', 'Role_
kRemoveMySignatory', 'Role_kRemoveSignatory', 'Role_kSetDetail', 'Role_kSetMyAcc
ountDetail', 'Role_kSetMyQuorum', 'Role_kSetQuorum', 'Role_kSubtractAssetQty', '
Role_kTransfer', 'Role_kTransferMyAssets', 'STATEFUL_VALIDATION_FAILED', 'STATEF
UL_VALIDATION_SUCCESS', 'STATELESS_VALIDATION_FAILED', 'STATELESS_VALIDATION_SUC
CESS', 'SetAccountDetail', 'SetAccountQuorum', 'Signature', 'SignatureVector', '
SignatureVector_swigregister', 'Signature_swigregister', 'Signed', 'Signed_swigr
egister', 'StringVector', 'StringVector_swigregister', 'SubtractAssetQuantity',
'SwigPyIterator', 'SwigPyIterator_swigregister', 'ToriiResponse', 'Transaction',
 'Transaction_swigregister', 'TransferAsset', 'TxStatus', 'TxStatusRequest', 'Un
signedBlockQuery', 'UnsignedBlockQuery_swigregister', 'UnsignedQuery', 'Unsigned
Query_swigregister', 'UnsignedTx', 'UnsignedTx_swigregister', '__builtins__', '_
_cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__p
ath__', '__spec__', '_iroha', 'block__pb2', 'block_pb2', 'commands__pb2', 'comma
nds_pb2', 'descriptor_pb2', 'endpoint_pb2', 'enum_type_wrapper', 'google_dot_pro
tobuf_dot_empty__pb2', 'iroha', 'isValid', 'permissionFor', 'primitive__pb2', 'p
rimitive_pb2', 'queries__pb2', 'queries_pb2', 'responses__pb2', 'responses_pb2',
 'sys', 'toBinaryString']
>>>
```",2018-06-29 05:00:28,2018-06-29 05:00:28
https://api.github.com/repos/hyperledger/iroha/issues/1457,https://api.github.com/repos/hyperledger/iroha/issues/comments/404995080,https://github.com/hyperledger/iroha/pull/1457#issuecomment-404995080,Stayer,"Successfull compilation and bindings upload
https://jenkins.soramitsu.co.jp/blue/organizations/jenkins/iroha%2Firoha-hyperledger/detail/PR-1457/166/pipeline/
https://nexus.soramitsu.co.jp/#browse/browse:pypi-develop:iroha%2Fdevelop-7ec6546d",2018-07-14 03:23:26,2018-07-14 03:23:26
https://api.github.com/repos/hyperledger/iroha/issues/1457,https://api.github.com/repos/hyperledger/iroha/issues/comments/422177360,https://github.com/hyperledger/iroha/pull/1457#issuecomment-422177360,l4l,Any update on that?,2018-09-17 21:26:18,2018-09-17 21:26:18
https://api.github.com/repos/hyperledger/iroha/issues/1454,https://api.github.com/repos/hyperledger/iroha/issues/comments/396632092,https://github.com/hyperledger/iroha/pull/1454#issuecomment-396632092,lebdron,"jenkins/branch fails due to missing python 3 in CI, which should be fixed in another pull request, so that it will be possible to test python bindings on Windows. Shared model build works.


jenkins/pr-head fails due to the following nondeterministic test:
https://github.com/hyperledger/iroha/blob/aa96e9eb6079586cf775fb87279dabd9206a1fb7/test/integration/acceptance/transfer_asset_test.cpp#L285-L292
Transactions can be received by OS in any order, so this should be also fix in another pull request.",2018-06-12 15:29:09,2018-06-12 15:29:22
https://api.github.com/repos/hyperledger/iroha/issues/1453,https://api.github.com/repos/hyperledger/iroha/issues/comments/396840944,https://github.com/hyperledger/iroha/pull/1453#issuecomment-396840944,nickaleks,"I don't think that FlatFile is a good name for an interface, since it is a concrete implementation. Maybe use a more ""conceptual"" name like KeyValueStorage or smth like that",2018-06-13 07:26:02,2018-06-13 07:26:02
https://api.github.com/repos/hyperledger/iroha/issues/1452,https://api.github.com/repos/hyperledger/iroha/issues/comments/396486355,https://github.com/hyperledger/iroha/pull/1452#issuecomment-396486355,Alexey-N-Chernyshov,What has happened with CI?,2018-06-12 07:00:02,2018-06-12 07:00:02
https://api.github.com/repos/hyperledger/iroha/issues/1451,https://api.github.com/repos/hyperledger/iroha/issues/comments/396086541,https://github.com/hyperledger/iroha/pull/1451#issuecomment-396086541,l4l,Could you wait a bit before merge of #1434? There's a need for some fixes to be resolved?,2018-06-10 22:17:48,2018-06-10 22:17:48
https://api.github.com/repos/hyperledger/iroha/issues/1451,https://api.github.com/repos/hyperledger/iroha/issues/comments/396168678,https://github.com/hyperledger/iroha/pull/1451#issuecomment-396168678,neewy,@l4l when ~~ICO~~ https://github.com/hyperledger/iroha/pull/1434 is going to be merged?,2018-06-11 08:46:56,2018-06-11 08:46:56
https://api.github.com/repos/hyperledger/iroha/issues/1451,https://api.github.com/repos/hyperledger/iroha/issues/comments/396353271,https://github.com/hyperledger/iroha/pull/1451#issuecomment-396353271,l4l,<s>only god know</s> i hope soon,2018-06-11 19:10:15,2018-06-11 19:10:15
https://api.github.com/repos/hyperledger/iroha/issues/1451,https://api.github.com/repos/hyperledger/iroha/issues/comments/397746491,https://github.com/hyperledger/iroha/pull/1451#issuecomment-397746491,neewy,"![image](https://user-images.githubusercontent.com/11841667/41490245-de6bcd46-70fb-11e8-9e7e-84d1896cb35e.png)
@l4l ",2018-06-15 21:26:18,2018-06-15 21:26:18
https://api.github.com/repos/hyperledger/iroha/issues/1451,https://api.github.com/repos/hyperledger/iroha/issues/comments/398041272,https://github.com/hyperledger/iroha/pull/1451#issuecomment-398041272,neewy,https://soramitsu.atlassian.net/wiki/spaces/IS/pages/299958273/Acceptance+Tests added test cases there,2018-06-18 12:43:14,2018-06-18 12:43:14
https://api.github.com/repos/hyperledger/iroha/issues/1450,https://api.github.com/repos/hyperledger/iroha/issues/comments/397576096,https://github.com/hyperledger/iroha/pull/1450#issuecomment-397576096,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [yac.hpp#L92](https://github.com/hyperledger/iroha/blob/83af533016e6cbec6e86a750ef2e2f86adf1392b/irohad/consensus/yac/yac.hpp#L92): Unused private function: 'Yac::applyState' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-15 10:07:36,2018-06-15 10:07:36
https://api.github.com/repos/hyperledger/iroha/issues/1449,https://api.github.com/repos/hyperledger/iroha/issues/comments/396534409,https://github.com/hyperledger/iroha/pull/1449#issuecomment-396534409,l4l,also incorrect DCO :(,2018-06-12 09:56:06,2018-06-12 09:56:06
https://api.github.com/repos/hyperledger/iroha/issues/1449,https://api.github.com/repos/hyperledger/iroha/issues/comments/400374561,https://github.com/hyperledger/iroha/pull/1449#issuecomment-400374561,l4l,ping?,2018-06-26 16:21:11,2018-06-26 16:21:11
https://api.github.com/repos/hyperledger/iroha/issues/1449,https://api.github.com/repos/hyperledger/iroha/issues/comments/407749281,https://github.com/hyperledger/iroha/pull/1449#issuecomment-407749281,lebdron,Will be done in another pull request.,2018-07-25 13:12:39,2018-07-25 13:12:39
https://api.github.com/repos/hyperledger/iroha/issues/1448,https://api.github.com/repos/hyperledger/iroha/issues/comments/396040291,https://github.com/hyperledger/iroha/pull/1448#issuecomment-396040291,l4l,dup of #1437 :\,2018-06-10 11:07:47,2018-06-10 11:07:47
https://api.github.com/repos/hyperledger/iroha/issues/1444,https://api.github.com/repos/hyperledger/iroha/issues/comments/397067155,https://github.com/hyperledger/iroha/pull/1444#issuecomment-397067155,neewy,How about assigning reviewers?,2018-06-13 20:02:49,2018-06-13 20:02:49
https://api.github.com/repos/hyperledger/iroha/issues/1444,https://api.github.com/repos/hyperledger/iroha/issues/comments/397524328,https://github.com/hyperledger/iroha/pull/1444#issuecomment-397524328,Alexey-N-Chernyshov,It seems to me that linux build failed.,2018-06-15 06:15:44,2018-06-15 06:15:44
https://api.github.com/repos/hyperledger/iroha/issues/1444,https://api.github.com/repos/hyperledger/iroha/issues/comments/398338282,https://github.com/hyperledger/iroha/pull/1444#issuecomment-398338282,sorabot,"SonarQube analysis reported 5 issues

1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L107](https://github.com/hyperledger/iroha/blob/1a30a6e5893105e836e45c1fe1de4f2fd9cb9725/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L107): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L36](https://github.com/hyperledger/iroha/blob/1a30a6e5893105e836e45c1fe1de4f2fd9cb9725/irohad/execution/impl/command_executor.cpp#L36): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [common_executor.cpp#L28](https://github.com/hyperledger/iroha/blob/1a30a6e5893105e836e45c1fe1de4f2fd9cb9725/irohad/execution/impl/common_executor.cpp#L28): The function 'getAccountPermissions' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [permissions.cpp#L31](https://github.com/hyperledger/iroha/blob/1a30a6e5893105e836e45c1fe1de4f2fd9cb9725/shared_model/interfaces/impl/permissions.cpp#L31): The function 'permissionOf' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L163](https://github.com/hyperledger/iroha/blob/1a30a6e5893105e836e45c1fe1de4f2fd9cb9725/test/module/irohad/execution/command_validate_execute_test.cpp#L163): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-19 09:36:48,2018-06-19 09:36:48
https://api.github.com/repos/hyperledger/iroha/issues/1438,https://api.github.com/repos/hyperledger/iroha/issues/comments/399025538,https://github.com/hyperledger/iroha/pull/1438#issuecomment-399025538,neewy,"Guys, can you put more explanation to pull request?
Actually it is not only me who reads them, but in fact our community as well
@Solonets @l4l @x3medima17 @kamilsa 

It is just +2minutes. Don't be in a rush when you want your code to be reviewed or merged, we are working in an open environment and it requires more openness. I know that our process is not perfect now in this direction, but if we will get more closed — than it would be harder for us to change in the future.",2018-06-21 08:47:56,2018-06-21 08:47:56
https://api.github.com/repos/hyperledger/iroha/issues/1437,https://api.github.com/repos/hyperledger/iroha/issues/comments/396661084,https://github.com/hyperledger/iroha/pull/1437#issuecomment-396661084,lebdron,"Well, GetAccountAssets tests work in docker develop image after some actions, but other tests fail.
```
  ..................................................x............................................................................terminate called after throwing an instance of 'std:
:out_of_range'
  what():  bitset::set: __position (which is 18446744072523542336) >= _Nb (which is 43)
Aborted (core dumped)



  ---
    operator: throws
    expected: '/Hash set should contain at least one hash/'
    actual:   undefined
    at: Test.<anonymous> (/opt/iroha/iroha/shared_model/packages/javascript/tests/queryBuilder.js:92:5)
    stack: |-
  ...



  24 tests
  126 passed
  1 failed
```",2018-06-12 16:57:30,2018-06-12 16:57:30
https://api.github.com/repos/hyperledger/iroha/issues/1437,https://api.github.com/repos/hyperledger/iroha/issues/comments/396736148,https://github.com/hyperledger/iroha/pull/1437#issuecomment-396736148,l4l,"javascripts are indeed failing, but that behavior was before the pr and requires shared model permissions (and maybe smth else)",2018-06-12 21:14:13,2018-06-12 21:14:13
https://api.github.com/repos/hyperledger/iroha/issues/1436,https://api.github.com/repos/hyperledger/iroha/issues/comments/395711928,https://github.com/hyperledger/iroha/pull/1436#issuecomment-395711928,l4l,"That's pr is significantly depends on #1434, so I will merge them",2018-06-08 09:53:03,2018-06-08 09:53:16
https://api.github.com/repos/hyperledger/iroha/issues/1434,https://api.github.com/repos/hyperledger/iroha/issues/comments/397606494,https://github.com/hyperledger/iroha/pull/1434#issuecomment-397606494,sorabot,"SonarQube analysis reported 13 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 12 minor

#### Top 10 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L215](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L215): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [command_executor.cpp#L36](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/irohad/execution/impl/command_executor.cpp#L36): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [field_validator.cpp#L234](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/shared_model/validators/field_validator.cpp#L234): The function 'validateRolePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [field_validator.cpp#L259](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/shared_model/validators/field_validator.cpp#L259): The function 'validateGrantablePermissions' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L294](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L294): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L294](https://github.com/hyperledger/iroha/blob/88123d160ca2ca911aa4927fdf1a3aaf99e2712a/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L294): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-15 12:33:27,2018-06-15 12:33:27
https://api.github.com/repos/hyperledger/iroha/issues/1432,https://api.github.com/repos/hyperledger/iroha/issues/comments/406449906,https://github.com/hyperledger/iroha/issues/1432#issuecomment-406449906,l4l,"I guess the issue is fixed, since android bindings are updated now
Feel free to add smth here, if the issue is still persist",2018-07-20 00:05:44,2018-07-20 00:05:44
https://api.github.com/repos/hyperledger/iroha/issues/1431,https://api.github.com/repos/hyperledger/iroha/issues/comments/395444812,https://github.com/hyperledger/iroha/issues/1431#issuecomment-395444812,l4l,"Amount value has uint256 type:
https://github.com/hyperledger/iroha/blob/86a8c01bc2784371f8425770eed42e8916acd46d/schema/primitive.proto#L97

and uint256 itself is not a built-in type, so you need to set it up as well:
https://github.com/hyperledger/iroha/blob/86a8c01bc2784371f8425770eed42e8916acd46d/schema/primitive.proto#L89-L94

[Here's](https://gist.github.com/l4l/f3502261c759625d1486f312503b58dd/revisions#diff-3121b4980b0420247f995734e05e1fb9L117) the fix for your genesis

Though, I think we should print more detailed error here and documented somewhere",2018-06-07 14:38:36,2018-06-07 14:43:33
https://api.github.com/repos/hyperledger/iroha/issues/1431,https://api.github.com/repos/hyperledger/iroha/issues/comments/395613966,https://github.com/hyperledger/iroha/issues/1431#issuecomment-395613966,MikhailMe,"Thanks a lot, this is works
I am closing issue",2018-06-08 01:09:15,2018-06-08 01:09:15
https://api.github.com/repos/hyperledger/iroha/issues/1430,https://api.github.com/repos/hyperledger/iroha/issues/comments/395457791,https://github.com/hyperledger/iroha/issues/1430#issuecomment-395457791,l4l,Could you try it once again after pulling fixes from #1433?,2018-06-07 15:14:13,2018-06-07 15:14:13
https://api.github.com/repos/hyperledger/iroha/issues/1430,https://api.github.com/repos/hyperledger/iroha/issues/comments/395572262,https://github.com/hyperledger/iroha/issues/1430#issuecomment-395572262,MikhailMe,"yeap, now a script works, thanks
i am closing issue",2018-06-07 21:33:00,2018-06-07 21:33:00
https://api.github.com/repos/hyperledger/iroha/issues/1423,https://api.github.com/repos/hyperledger/iroha/issues/comments/395116667,https://github.com/hyperledger/iroha/issues/1423#issuecomment-395116667,l4l,"> we treat these libraries as black boxes, meaning we are only stating the fact that the thread from a specific runtime is used, without going into details of where this thread came from

Actually that is not completely true. There's only one place where's the thread is used explicitly, that's [AsyncGrcpClient](https://github.com/hyperledger/iroha/blob/develop/irohad/network/impl/async_grpc_client.hpp#L62).
Moreover it is required to explicitly set the thread for rxcpp observables (e.g [here](https://github.com/hyperledger/iroha/blob/develop/irohad/main/impl/ordering_init.cpp#L34))

Comments for diagram:
- It may be also noticed that it applicable to irohad, and not for integration tests. The last one use synchronous (rx) OS
- I would consider one-way arrows for timers
- Although _gets block_ works on separate thread, in fact it's blocking. So it might be better not to put it here

Also could you open a PR for RTH page? I think it worth being published",2018-06-06 15:45:22,2018-06-06 15:45:22
https://api.github.com/repos/hyperledger/iroha/issues/1423,https://api.github.com/repos/hyperledger/iroha/issues/comments/395317975,https://github.com/hyperledger/iroha/issues/1423#issuecomment-395317975,nickaleks,"Thank you for the feedback.

> Actually that is not completely true. There's only one place where's the thread is used explicitly, that's AsyncGrcpClient.

Yeah I overlooked that.

>Moreover it is required to explicitly set the thread for rxcpp observables

This is not completely true, we tell observable to execute on separate thread, but which thread will it be is manage by rx runtime.

> It may be also noticed that it applicable to irohad, and not for integration tests. The last one use synchronous (rx) OS

Yes, this is irohad only, tests are not covered by the diagram.

> Although gets block works on separate thread, in fact it's blocking. So it might be better not to put it here

This is diagram which represents threads, not concurrent execution. Since get blocks spawns additional thread for many cases, it is shown on the diagram.
",2018-06-07 07:15:25,2018-06-07 07:15:25
https://api.github.com/repos/hyperledger/iroha/issues/1423,https://api.github.com/repos/hyperledger/iroha/issues/comments/395330163,https://github.com/hyperledger/iroha/issues/1423#issuecomment-395330163,nickaleks,Update: added grpc client,2018-06-07 08:02:57,2018-06-07 08:02:57
https://api.github.com/repos/hyperledger/iroha/issues/1423,https://api.github.com/repos/hyperledger/iroha/issues/comments/395383011,https://github.com/hyperledger/iroha/issues/1423#issuecomment-395383011,nickaleks,Added small description of query pipeline,2018-06-07 11:10:42,2018-06-07 11:10:42
https://api.github.com/repos/hyperledger/iroha/issues/1423,https://api.github.com/repos/hyperledger/iroha/issues/comments/454413544,https://github.com/hyperledger/iroha/issues/1423#issuecomment-454413544,LiraLemur,The reporter said it needs to be updated now. Jira created: https://jira.hyperledger.org/browse/IR-194,2019-01-15 14:36:58,2019-01-15 14:36:58
https://api.github.com/repos/hyperledger/iroha/issues/1421,https://api.github.com/repos/hyperledger/iroha/issues/comments/395086478,https://github.com/hyperledger/iroha/issues/1421#issuecomment-395086478,laSinteZ,"You might try the latest version of our lib from npm - https://www.npmjs.com/package/iroha-lib/v/0.1.4 (update it in the package.json), it is built with Emscripten and doesn't require binaries for every system. Also, you can try to build library on your own using this guide http://iroha.readthedocs.io/en/latest/guides/libraries/nodejs.html (it will generate platform-dependent binary for you)",2018-06-06 14:22:13,2018-06-06 14:25:49
https://api.github.com/repos/hyperledger/iroha/issues/1421,https://api.github.com/repos/hyperledger/iroha/issues/comments/395392074,https://github.com/hyperledger/iroha/issues/1421#issuecomment-395392074,stinger112,"Seems like version of iroha-lib in the example's package.json is outdated. Please do 
`npm install iroha-lib@emscripten`
This is the latest version.",2018-06-07 11:47:52,2018-06-11 10:15:01
https://api.github.com/repos/hyperledger/iroha/issues/1421,https://api.github.com/repos/hyperledger/iroha/issues/comments/395947792,https://github.com/hyperledger/iroha/issues/1421#issuecomment-395947792,l4l,Seems resolved as long as there's no response,2018-06-09 07:31:03,2018-06-09 07:31:03
https://api.github.com/repos/hyperledger/iroha/issues/1420,https://api.github.com/repos/hyperledger/iroha/issues/comments/395081710,https://github.com/hyperledger/iroha/issues/1420#issuecomment-395081710,laSinteZ,"@pradeeppadmarajaiah please install latest CMAKE (3.8 at least, 3.11 idealy). Also, AFAIK you need to have boost 1.65 installed.",2018-06-06 14:08:20,2018-06-06 14:08:20
https://api.github.com/repos/hyperledger/iroha/issues/1420,https://api.github.com/repos/hyperledger/iroha/issues/comments/395453049,https://github.com/hyperledger/iroha/issues/1420#issuecomment-395453049,l4l,Seems resolved,2018-06-07 15:01:22,2018-06-07 15:01:22
https://api.github.com/repos/hyperledger/iroha/issues/1418,https://api.github.com/repos/hyperledger/iroha/issues/comments/395313002,https://github.com/hyperledger/iroha/pull/1418#issuecomment-395313002,bakhtin,I suggest accepting PR #1426 first. I will then adjust this PR based on comments,2018-06-07 06:53:08,2018-06-07 06:53:08
https://api.github.com/repos/hyperledger/iroha/issues/1418,https://api.github.com/repos/hyperledger/iroha/issues/comments/400661529,https://github.com/hyperledger/iroha/pull/1418#issuecomment-400661529,igor-egorov,Contacted @bakhtin: Artyom will check the relevance of the PR and will let me know if my actions will be required.,2018-06-27 12:55:18,2018-06-27 12:55:41
https://api.github.com/repos/hyperledger/iroha/issues/1418,https://api.github.com/repos/hyperledger/iroha/issues/comments/402954813,https://github.com/hyperledger/iroha/pull/1418#issuecomment-402954813,bakhtin,Closing PR as replacing `config.sample` with `config.docker` is sufficient to make current docs work,2018-07-06 07:44:34,2018-07-06 07:44:34
https://api.github.com/repos/hyperledger/iroha/issues/1411,https://api.github.com/repos/hyperledger/iroha/issues/comments/398368486,https://github.com/hyperledger/iroha/pull/1411#issuecomment-398368486,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [yac_gate_impl.hpp#L66](https://github.com/hyperledger/iroha/blob/d0d874c9fb98cf2d9a18dab40650da5fcb6fff35/irohad/consensus/yac/impl/yac_gate_impl.hpp#L66): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-19 11:37:18,2018-06-19 11:37:18
https://api.github.com/repos/hyperledger/iroha/issues/1410,https://api.github.com/repos/hyperledger/iroha/issues/comments/394265384,https://github.com/hyperledger/iroha/pull/1410#issuecomment-394265384,nickaleks,"example/python/tx-example.py causes segfault in irohad

Seems like empty proto objects are sent",2018-06-04 07:52:08,2018-06-04 07:54:02
https://api.github.com/repos/hyperledger/iroha/issues/1410,https://api.github.com/repos/hyperledger/iroha/issues/comments/394599674,https://github.com/hyperledger/iroha/pull/1410#issuecomment-394599674,bakhtin,I rebuilt this PR to include bindings as they're not tested in usual run. Seems that issue is fixed,2018-06-05 06:45:31,2018-06-05 06:45:31
https://api.github.com/repos/hyperledger/iroha/issues/1410,https://api.github.com/repos/hyperledger/iroha/issues/comments/394635730,https://github.com/hyperledger/iroha/pull/1410#issuecomment-394635730,laSinteZ,"Have the same issue as @nickaleks, however not sure if its related to this pr.

https://gist.github.com/laSinteZ/d2f2775580a641c15ce9c970c7123cff",2018-06-05 09:01:35,2018-06-05 09:01:35
https://api.github.com/repos/hyperledger/iroha/issues/1409,https://api.github.com/repos/hyperledger/iroha/issues/comments/394080928,https://github.com/hyperledger/iroha/issues/1409#issuecomment-394080928,l4l,These env variables are only used during irohad launching and only for some of the tests. I do not see any issue here,2018-06-02 11:41:14,2018-06-02 11:41:14
https://api.github.com/repos/hyperledger/iroha/issues/1409,https://api.github.com/repos/hyperledger/iroha/issues/comments/395080594,https://github.com/hyperledger/iroha/issues/1409#issuecomment-395080594,l4l,Since there's no additional comments I'm closing it,2018-06-06 14:05:00,2018-06-06 14:05:07
https://api.github.com/repos/hyperledger/iroha/issues/1406,https://api.github.com/repos/hyperledger/iroha/issues/comments/399448647,https://github.com/hyperledger/iroha/pull/1406#issuecomment-399448647,neewy,@l4l why is this PR pending?,2018-06-22 13:48:49,2018-06-22 13:48:49
https://api.github.com/repos/hyperledger/iroha/issues/1406,https://api.github.com/repos/hyperledger/iroha/issues/comments/399449400,https://github.com/hyperledger/iroha/pull/1406#issuecomment-399449400,lebdron,@neewy it does not work with current structures of connections. Introducing SOCI will probably help to get this done.,2018-06-22 13:51:16,2018-06-22 13:51:16
https://api.github.com/repos/hyperledger/iroha/issues/1406,https://api.github.com/repos/hyperledger/iroha/issues/comments/399661791,https://github.com/hyperledger/iroha/pull/1406#issuecomment-399661791,l4l,"I close pr, but please do not delete the branch. It might be reused upon required fixes are done",2018-06-23 10:15:25,2018-06-23 10:15:25
https://api.github.com/repos/hyperledger/iroha/issues/1403,https://api.github.com/repos/hyperledger/iroha/issues/comments/393863785,https://github.com/hyperledger/iroha/pull/1403#issuecomment-393863785,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L174](https://github.com/hyperledger/iroha/blob/ff0c8915bf4c5ef01a381739a8717fd1338be591/test/module/irohad/execution/command_validate_execute_test.cpp#L174): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-01 12:20:48,2018-06-01 12:20:48
https://api.github.com/repos/hyperledger/iroha/issues/1402,https://api.github.com/repos/hyperledger/iroha/issues/comments/395280183,https://github.com/hyperledger/iroha/pull/1402#issuecomment-395280183,sorabot,"SonarQube analysis reported 5 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L200](https://github.com/hyperledger/iroha/blob/41df164554a095bcccb2310f313cf96dff7b3c9b/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L200): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L160](https://github.com/hyperledger/iroha/blob/41df164554a095bcccb2310f313cf96dff7b3c9b/irohad/model/converters/impl/pb_query_response_factory.cpp#L160): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [query_generator.cpp#L72](https://github.com/hyperledger/iroha/blob/41df164554a095bcccb2310f313cf96dff7b3c9b/irohad/model/generators/impl/query_generator.cpp#L72): Variable 'creator_account_id' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L174](https://github.com/hyperledger/iroha/blob/41df164554a095bcccb2310f313cf96dff7b3c9b/test/module/irohad/execution/command_validate_execute_test.cpp#L174): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [shared_proto_queries_test.cpp#L54](https://github.com/hyperledger/iroha/blob/41df164554a095bcccb2310f313cf96dff7b3c9b/test/module/shared_model/backend_proto/shared_proto_queries_test.cpp#L54): Variable 'asset_id' is assigned a value that is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunreadVariable)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-07 03:21:29,2018-06-07 03:21:29
https://api.github.com/repos/hyperledger/iroha/issues/1400,https://api.github.com/repos/hyperledger/iroha/issues/comments/393531907,https://github.com/hyperledger/iroha/pull/1400#issuecomment-393531907,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L44](https://github.com/hyperledger/iroha/blob/308611138458d8a3cfd5b5b3e355096170e12560/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L44): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/308611138458d8a3cfd5b5b3e355096170e12560/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L36): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/308611138458d8a3cfd5b5b3e355096170e12560/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L174](https://github.com/hyperledger/iroha/blob/308611138458d8a3cfd5b5b3e355096170e12560/test/module/irohad/execution/command_validate_execute_test.cpp#L174): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-31 13:35:27,2018-05-31 13:35:27
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/393476118,https://github.com/hyperledger/iroha/issues/1399#issuecomment-393476118,laSinteZ,"@bohrqiu I guess you are referring to https://hyperledger.github.io/iroha-api/#entity-relationship-model However, this schema is a little bit dated. Currently there is no ""Data"" field in the Asset.",2018-05-31 09:43:37,2018-05-31 09:43:37
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/393488073,https://github.com/hyperledger/iroha/issues/1399#issuecomment-393488073,bohrqiu,"and datebase has the colomn too 😄
![image](https://user-images.githubusercontent.com/1333657/40777423-64fbd78c-6500-11e8-8c92-66a5a888650e.png)

I am confused why no  ""Data"" to description asset?",2018-05-31 10:30:30,2018-05-31 10:30:30
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/393559859,https://github.com/hyperledger/iroha/issues/1399#issuecomment-393559859,laSinteZ,"@bohrqiu I've investigated a little and you are right, there is a column in database.

Unfortunately, currently setter of this field is not implemented in Shared Model, so there is no way to set this column right now. (Unlike data in account field, for which there are ""setAccountDetail""). 

I guess soon we will implement it. However, that this could be a good ""good-first-issue"" since code will be like setAccountDetail.",2018-05-31 15:01:15,2018-05-31 15:01:15
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/393580813,https://github.com/hyperledger/iroha/issues/1399#issuecomment-393580813,bohrqiu,Thank you for your explanation.,2018-05-31 15:58:13,2018-05-31 15:58:13
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/393603543,https://github.com/hyperledger/iroha/issues/1399#issuecomment-393603543,laSinteZ,"@bohrqiu could you tell us more, why do you want this field to be active? Maybe your usecase will motivate to implement it faster :)",2018-05-31 17:06:31,2018-05-31 17:06:31
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/393749848,https://github.com/hyperledger/iroha/issues/1399#issuecomment-393749848,bohrqiu,@laSinteZ We want to write the description of the asset to the blockchain，and any peer can read the detail description information form blockchain without external system,2018-06-01 03:48:10,2018-06-01 03:48:10
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/408924897,https://github.com/hyperledger/iroha/issues/1399#issuecomment-408924897,DblBee,"@laSinteZ I would like to get this feature into Iroha. This would make it so that we would not have to have a separate database to store the description of the asset. For instance, we are building a beverage distribution system that utilizes Iroha. Currently we only use Iroha for the blockchain representation of the items. Our network peers still have to go to our centralized api to get the item description and other details. It would be nice if we could store the entire item description along with the asset. ",2018-07-30 16:26:38,2018-07-30 16:26:38
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/408935425,https://github.com/hyperledger/iroha/issues/1399#issuecomment-408935425,laSinteZ,"@DblBee I will be frank with you: this feature is in backlog, but it is not the top priority for us (compared to, for example, new JS library we are working on, stability of system, performance). However, if you are willing to help us by implementing this feature – we can help you in this task and provide explanations/details.",2018-07-30 16:58:38,2018-07-30 16:58:38
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/419099113,https://github.com/hyperledger/iroha/issues/1399#issuecomment-419099113,psaingtong,"+1.In Hospital management,Hospital has a daily activity (OPD=visit no,..etc).It should be use asset keep it for search patient (account).",2018-09-06 13:45:50,2018-09-06 13:45:50
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/436752273,https://github.com/hyperledger/iroha/issues/1399#issuecomment-436752273,pulmark,"+1. Flea markets. Market has goods (assets) where registered customer (account) can sell or buy. It would be necessary to have a description of asset (manufacturer, model, size, color etc...). Complex asset, asset with properties or such.   ",2018-11-07 19:42:22,2018-11-07 19:42:22
https://api.github.com/repos/hyperledger/iroha/issues/1399,https://api.github.com/repos/hyperledger/iroha/issues/comments/456097168,https://github.com/hyperledger/iroha/issues/1399#issuecomment-456097168,neewy,"We have this in our roadmap for Q2, right after the final 1.0 release",2019-01-21 14:44:36,2019-01-21 14:44:36
https://api.github.com/repos/hyperledger/iroha/issues/1398,https://api.github.com/repos/hyperledger/iroha/issues/comments/393544058,https://github.com/hyperledger/iroha/pull/1398#issuecomment-393544058,lebdron,Also please separate definitions and declarations (target `shared_model_interfaces`),2018-05-31 14:13:50,2018-05-31 14:13:50
https://api.github.com/repos/hyperledger/iroha/issues/1398,https://api.github.com/repos/hyperledger/iroha/issues/comments/394762344,https://github.com/hyperledger/iroha/pull/1398#issuecomment-394762344,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transport_builder_test.cpp#L156](https://github.com/hyperledger/iroha/blob/713397a9b456c2a4404f8054aaf0528c9b2ac0d6/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L156): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-05 15:52:28,2018-06-05 15:52:28
https://api.github.com/repos/hyperledger/iroha/issues/1397,https://api.github.com/repos/hyperledger/iroha/issues/comments/393418490,https://github.com/hyperledger/iroha/pull/1397#issuecomment-393418490,sorabot,"SonarQube analysis reported 2 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L222](https://github.com/hyperledger/iroha/blob/a852d21850ed5bebf4840f792e82bfa58b6029d9/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L222): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [command_executor.cpp#L33](https://github.com/hyperledger/iroha/blob/a852d21850ed5bebf4840f792e82bfa58b6029d9/irohad/execution/impl/command_executor.cpp#L33): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-31 06:17:53,2018-05-31 06:17:53
https://api.github.com/repos/hyperledger/iroha/issues/1396,https://api.github.com/repos/hyperledger/iroha/issues/comments/393330344,https://github.com/hyperledger/iroha/pull/1396#issuecomment-393330344,l4l,"Fix codacy issue plz, don't make it feeling useless :(",2018-05-30 21:46:44,2018-05-30 21:46:44
https://api.github.com/repos/hyperledger/iroha/issues/1396,https://api.github.com/repos/hyperledger/iroha/issues/comments/393398256,https://github.com/hyperledger/iroha/pull/1396#issuecomment-393398256,sorabot,"SonarQube analysis reported 7 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L79](https://github.com/hyperledger/iroha/blob/d01b051e7210e7496fd4e237550f8fb2dc8e9817/irohad/ametsuchi/impl/postgres_block_query.hpp#L79): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L87](https://github.com/hyperledger/iroha/blob/d01b051e7210e7496fd4e237550f8fb2dc8e9817/irohad/ametsuchi/impl/postgres_block_query.hpp#L87): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L97](https://github.com/hyperledger/iroha/blob/d01b051e7210e7496fd4e237550f8fb2dc8e9817/irohad/ametsuchi/impl/postgres_block_query.hpp#L97): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [storage_init_test.cpp#L21](https://github.com/hyperledger/iroha/blob/d01b051e7210e7496fd4e237550f8fb2dc8e9817/test/module/irohad/ametsuchi/storage_init_test.cpp#L21): Clarify calculation precedence for '<<' and '?'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AclarifyCalculation)
1. ![MINOR][MINOR] [storage_init_test.cpp#L22](https://github.com/hyperledger/iroha/blob/d01b051e7210e7496fd4e237550f8fb2dc8e9817/test/module/irohad/ametsuchi/storage_init_test.cpp#L22): Clarify calculation precedence for '<<' and '?'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AclarifyCalculation)
1. ![MINOR][MINOR] [storage_init_test.cpp#L23](https://github.com/hyperledger/iroha/blob/d01b051e7210e7496fd4e237550f8fb2dc8e9817/test/module/irohad/ametsuchi/storage_init_test.cpp#L23): Clarify calculation precedence for '<<' and '?'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AclarifyCalculation)
1. ![MINOR][MINOR] [storage_init_test.cpp#L24](https://github.com/hyperledger/iroha/blob/d01b051e7210e7496fd4e237550f8fb2dc8e9817/test/module/irohad/ametsuchi/storage_init_test.cpp#L24): Clarify calculation precedence for '<<' and '?'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AclarifyCalculation)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-31 04:27:31,2018-05-31 04:27:31
https://api.github.com/repos/hyperledger/iroha/issues/1395,https://api.github.com/repos/hyperledger/iroha/issues/comments/393165080,https://github.com/hyperledger/iroha/pull/1395#issuecomment-393165080,laSinteZ,"Maybe better to add links to glossary (instead of ""role"", ""quorum"") and replace all ""a minimum number of signatures"" with ""quorum"", etc.",2018-05-30 13:38:37,2018-05-30 13:38:37
https://api.github.com/repos/hyperledger/iroha/issues/1394,https://api.github.com/repos/hyperledger/iroha/issues/comments/393002936,https://github.com/hyperledger/iroha/issues/1394#issuecomment-393002936,onsjkm,"blockstore content on node0
```sh
sh-4.2# cat 0000000000000001
{""payload"":{""transactions"":[{""payload"":{""commands"":[{""addPeer"":{""peer"":{""address"":""10.134.14.52:10001"",""peerKey"":""5KAmcy3pezlEqris+FxHNhdKnADezDJfEB4RYlJtthQ=""}}},{""createRole"":{""roleName"":""admin"",""permissions"":[""can_add_peer"",""can_add_signatory"",""can_create_account"",""can_create_domain"",""can_get_all_acc_ast"",""can_get_all_acc_ast_txs"",""can_get_all_acc_detail"",""can_get_all_acc_txs"",""can_get_all_accounts"",""can_get_all_signatories"",""can_get_all_txs"",""can_get_roles"",""can_read_assets"",""can_remove_signatory"",""can_set_quorum"",""can_get_blocks""]}},{""createRole"":{""roleName"":""user"",""permissions"":[""can_add_signatory"",""can_get_my_acc_ast"",""can_get_my_acc_ast_txs"",""can_get_my_acc_detail"",""can_get_my_acc_txs"",""can_get_my_account"",""can_get_my_signatories"",""can_get_my_txs"",""can_grant_can_add_my_signatory"",""can_grant_can_remove_my_signatory"",""can_grant_can_set_my_account_detail"",""can_grant_can_set_my_quorum"",""can_grant_can_transfer_my_assets"",""can_receive"",""can_remove_signatory"",""can_set_quorum"",""can_transfer""]}},{""createRole"":{""roleName"":""money_creator"",""permissions"":[""can_add_asset_qty"",""can_create_asset"",""can_receive"",""can_transfer""]}},{""createDomain"":{""domainId"":""testdomain"",""defaultRole"":""user""}},{""createAsset"":{""assetName"":""koin"",""domainId"":""testdomain"",""precision"":2}},{""createAccount"":{""accountName"":""admin"",""domainId"":""testdomain"",""mainPubkey"":""pnigiVMC9qDnUuYhtrpYWakvnAhxYbHhXbhtRnGpNJA=""}},{""appendRole"":{""accountId"":""admin@testdomain"",""roleName"":""admin""}},{""appendRole"":{""accountId"":""admin@testdomain"",""roleName"":""money_creator""}}]}}],""txNumber"":1,""height"":""1"",""prevBlockHash"":""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=""}}sh-4.2#
sh-4.2#
sh-4.2# cat 0000000000000002
{""payload"":{""transactions"":[{""payload"":{""commands"":[{""addPeer"":{""peer"":{""address"":""10.134.34.34:10001"",""peerKey"":""OIwkImYjs3T06bbZzap0nTi845UmBkIEIGiEVowcf70=""}}}],""creatorAccountId"":""admin@testdomain"",""createdTime"":""1527643442724""},""signatures"":[{""pubkey"":""pnigiVMC9qDnUuYhtrpYWakvnAhxYbHhXbhtRnGpNJA="",""signature"":""dbaEfcoN67ZqMMUbt61oCDZRJ6BFDeFhThKZkyBWzwdHnNUukCIFNvrcy34ok1mVvSPDLiw+1EsILGjcsjSFBg==""}]}],""txNumber"":1,""height"":""2"",""prevBlockHash"":""uhUnFVO1fYIOv723B0XYoMujvtLW90knYEWxUs8MYe8="",""createdTime"":""1527643446624""},""signatures"":[{""pubkey"":""5KAmcy3pezlEqris+FxHNhdKnADezDJfEB4RYlJtthQ="",""signature"":""D/DVV3Pz3VMdHYBlVyx8hRiOIuepyX3aCp+9pwJQoXW/jL4/E2HlgtStnG3haQbQcdfrzA8jTqlprJjM5RDyCQ==""}]}sh-4.2#
sh-4.2#
sh-4.2#


blockstore content on node1

sh-4.2# cat 0000000000000001
{""payload"":{""transactions"":[{""payload"":{""commands"":[{""addPeer"":{""peer"":{""address"":""10.134.14.52:10001"",""peerKey"":""5KAmcy3pezlEqris+FxHNhdKnADezDJfEB4RYlJtthQ=""}}},{""createRole"":{""roleName"":""admin"",""permissions"":[""can_add_peer"",""can_add_signatory"",""can_create_account"",""can_create_domain"",""can_get_all_acc_ast"",""can_get_all_acc_ast_txs"",""can_get_all_acc_detail"",""can_get_all_acc_txs"",""can_get_all_accounts"",""can_get_all_signatories"",""can_get_all_txs"",""can_get_roles"",""can_read_assets"",""can_remove_signatory"",""can_set_quorum"",""can_get_blocks""]}},{""createRole"":{""roleName"":""user"",""permissions"":[""can_add_signatory"",""can_get_my_acc_ast"",""can_get_my_acc_ast_txs"",""can_get_my_acc_detail"",""can_get_my_acc_txs"",""can_get_my_account"",""can_get_my_signatories"",""can_get_my_txs"",""can_grant_can_add_my_signatory"",""can_grant_can_remove_my_signatory"",""can_grant_can_set_my_account_detail"",""can_grant_can_set_my_quorum"",""can_grant_can_transfer_my_assets"",""can_receive"",""can_remove_signatory"",""can_set_quorum"",""can_transfer""]}},{""createRole"":{""roleName"":""money_creator"",""permissions"":[""can_add_asset_qty"",""can_create_asset"",""can_receive"",""can_transfer""]}},{""createDomain"":{""domainId"":""testdomain"",""defaultRole"":""user""}},{""createAsset"":{""assetName"":""koin"",""domainId"":""testdomain"",""precision"":2}},{""createAccount"":{""accountName"":""admin"",""domainId"":""testdomain"",""mainPubkey"":""pnigiVMC9qDnUuYhtrpYWakvnAhxYbHhXbhtRnGpNJA=""}},{""appendRole"":{""accountId"":""admin@testdomain"",""roleName"":""admin""}},{""appendRole"":{""accountId"":""admin@testdomain"",""roleName"":""money_creator""}}]}}],""txNumber"":1,""height"":""1"",""prevBlockHash"":""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=""}}sh-4.2#
sh-4.2#
```",2018-05-30 01:41:52,2018-05-30 21:52:43
https://api.github.com/repos/hyperledger/iroha/issues/1394,https://api.github.com/repos/hyperledger/iroha/issues/comments/395947912,https://github.com/hyperledger/iroha/issues/1394#issuecomment-395947912,l4l,"Heh, the problem is pretty dumb actually. BFT consensus with max 2 nodes requires 2 confirmations. So basically extension of network with 2 nodes is impossible by-design",2018-06-09 07:33:43,2018-06-09 07:33:43
https://api.github.com/repos/hyperledger/iroha/issues/1393,https://api.github.com/repos/hyperledger/iroha/issues/comments/393112621,https://github.com/hyperledger/iroha/pull/1393#issuecomment-393112621,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L174](https://github.com/hyperledger/iroha/blob/02bcffcd325a03fde4d03b2cfa94e62a8618b68d/test/module/irohad/execution/command_validate_execute_test.cpp#L174): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L151](https://github.com/hyperledger/iroha/blob/02bcffcd325a03fde4d03b2cfa94e62a8618b68d/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L151): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-30 10:31:40,2018-05-30 10:31:40
https://api.github.com/repos/hyperledger/iroha/issues/1391,https://api.github.com/repos/hyperledger/iroha/issues/comments/392817616,https://github.com/hyperledger/iroha/pull/1391#issuecomment-392817616,x3medima17,Not properly formatted :( ,2018-05-29 15:22:19,2018-05-29 15:22:19
https://api.github.com/repos/hyperledger/iroha/issues/1389,https://api.github.com/repos/hyperledger/iroha/issues/comments/393499727,https://github.com/hyperledger/iroha/pull/1389#issuecomment-393499727,sorabot,"SonarQube analysis reported 10 issues

1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L47](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/integration/transport/ordering_gate_service_test.cpp#L47): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L155](https://github.com/hyperledger/iroha/blob/56519c3fe957bc2fd30d424cb26537973b23e7cf/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L155): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-31 11:24:34,2018-05-31 11:24:34
https://api.github.com/repos/hyperledger/iroha/issues/1387,https://api.github.com/repos/hyperledger/iroha/issues/comments/392534541,https://github.com/hyperledger/iroha/pull/1387#issuecomment-392534541,sorabot, commit 20c001bfc18cd6c3461fd1bbc42b5536faa253f7 build status: SUCCESS,2018-05-28 13:58:41,2018-05-28 13:58:41
https://api.github.com/repos/hyperledger/iroha/issues/1387,https://api.github.com/repos/hyperledger/iroha/issues/comments/392536518,https://github.com/hyperledger/iroha/pull/1387#issuecomment-392536518,sorabot,@bakhtin  commit 20746bc218024f305f2fae298e043fb688c8d1d4 build status: SUCCESS,2018-05-28 14:06:38,2018-05-28 14:06:38
https://api.github.com/repos/hyperledger/iroha/issues/1387,https://api.github.com/repos/hyperledger/iroha/issues/comments/392538954,https://github.com/hyperledger/iroha/pull/1387#issuecomment-392538954,sorabot,@bakhtin @igor-egorov  commit 435bbd5d8027d639b1bda09e79255f7920e27f13 build status: SUCCESS,2018-05-28 14:16:47,2018-05-28 14:16:47
https://api.github.com/repos/hyperledger/iroha/issues/1386,https://api.github.com/repos/hyperledger/iroha/issues/comments/393335184,https://github.com/hyperledger/iroha/pull/1386#issuecomment-393335184,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transport_builder_test.cpp#L152](https://github.com/hyperledger/iroha/blob/5cd7c0ce1561017b9983db3e2800a172c1bea6f6/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L152): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-30 22:06:01,2018-05-30 22:06:01
https://api.github.com/repos/hyperledger/iroha/issues/1385,https://api.github.com/repos/hyperledger/iroha/issues/comments/392513958,https://github.com/hyperledger/iroha/pull/1385#issuecomment-392513958,sorabot, commit 87bcc3dedb249d10257dfe9689a81308a415b353 build status: SUCCESS,2018-05-28 12:27:38,2018-05-28 12:27:38
https://api.github.com/repos/hyperledger/iroha/issues/1385,https://api.github.com/repos/hyperledger/iroha/issues/comments/392525348,https://github.com/hyperledger/iroha/pull/1385#issuecomment-392525348,sorabot, commit 82710deadf9fbcf78952687f10a5c56e9f1878f1 build status: SUCCESS,2018-05-28 13:20:30,2018-05-28 13:20:30
https://api.github.com/repos/hyperledger/iroha/issues/1385,https://api.github.com/repos/hyperledger/iroha/issues/comments/392526346,https://github.com/hyperledger/iroha/pull/1385#issuecomment-392526346,sorabot, commit 1998c68439578dea91e4e1c5b60202d97835b4e6 build status: SUCCESS,2018-05-28 13:24:55,2018-05-28 13:24:55
https://api.github.com/repos/hyperledger/iroha/issues/1385,https://api.github.com/repos/hyperledger/iroha/issues/comments/392526859,https://github.com/hyperledger/iroha/pull/1385#issuecomment-392526859,sorabot, commit 10a237dc24dba68b3f6686180fc0502edafa0569 build status: SUCCESS,2018-05-28 13:27:14,2018-05-28 13:27:14
https://api.github.com/repos/hyperledger/iroha/issues/1385,https://api.github.com/repos/hyperledger/iroha/issues/comments/392529158,https://github.com/hyperledger/iroha/pull/1385#issuecomment-392529158,sorabot, commit dd5448a10076e17c88d7b80cc4550f76200bee6e build status: FAILURE,2018-05-28 13:37:34,2018-05-28 13:37:34
https://api.github.com/repos/hyperledger/iroha/issues/1384,https://api.github.com/repos/hyperledger/iroha/issues/comments/393928238,https://github.com/hyperledger/iroha/pull/1384#issuecomment-393928238,l4l,"Few comments about last commit: static_cast is not allowed for private base classes, so `operator==`/`operator!=` cannot be called, here's the examples:
https://ideone.com/ZgTWmd
https://ideone.com/qotIAr",2018-06-01 16:08:00,2018-06-01 16:08:00
https://api.github.com/repos/hyperledger/iroha/issues/1383,https://api.github.com/repos/hyperledger/iroha/issues/comments/392458202,https://github.com/hyperledger/iroha/pull/1383#issuecomment-392458202,muratovv,"Also, pls, fix DCO and pass CI. ",2018-05-28 08:29:03,2018-05-28 08:29:03
https://api.github.com/repos/hyperledger/iroha/issues/1383,https://api.github.com/repos/hyperledger/iroha/issues/comments/394765358,https://github.com/hyperledger/iroha/pull/1383#issuecomment-394765358,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [storage_init_test.cpp#L19](https://github.com/hyperledger/iroha/blob/688f153c82d802849be45f2c31f52ee78c96d76a/test/module/irohad/ametsuchi/storage_init_test.cpp#L19): Variable 'pg_opt_without_dbname_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-05 16:00:49,2018-06-05 16:00:49
https://api.github.com/repos/hyperledger/iroha/issues/1382,https://api.github.com/repos/hyperledger/iroha/issues/comments/392360659,https://github.com/hyperledger/iroha/pull/1382#issuecomment-392360659,l4l,"Building irohad (`cmake .. -DSWIG_JAVA=ON`) causes:
```
CMake Error at shared_model/bindings/CMakeLists.txt:38 (string):
  string sub-command REPLACE requires at least four arguments.
```

That issue can be solved just by setting default package, nevertheless leave fixes in _example/java/prepare.sh_ as is

Btw, building java package in examples folder works fine for me",2018-05-27 19:36:35,2018-05-27 19:38:47
https://api.github.com/repos/hyperledger/iroha/issues/1382,https://api.github.com/repos/hyperledger/iroha/issues/comments/392559148,https://github.com/hyperledger/iroha/pull/1382#issuecomment-392559148,onsjkm,@l4l can you try irohad build again? Now pkg name is set only if it's defined and should not have unintended side effects from other builds. ,2018-05-28 15:48:26,2018-05-28 15:48:26
https://api.github.com/repos/hyperledger/iroha/issues/1382,https://api.github.com/repos/hyperledger/iroha/issues/comments/393518298,https://github.com/hyperledger/iroha/pull/1382#issuecomment-393518298,luckychess,"Looks good, thank you @onsjkm for contribution.
I was afraid about possible break of android build script but fortunately this pr doesn't affect it.",2018-05-31 12:45:57,2018-05-31 12:45:57
https://api.github.com/repos/hyperledger/iroha/issues/1382,https://api.github.com/repos/hyperledger/iroha/issues/comments/393537115,https://github.com/hyperledger/iroha/pull/1382#issuecomment-393537115,bakhtin,@onsjkm we require all commits to be signed-off (with `git --signoff` option). Seems that your commits do not have this signature. Could you please verify that? `git` should be configured with author and email that matches the one in your GitHub profile,2018-05-31 13:52:22,2018-05-31 13:52:42
https://api.github.com/repos/hyperledger/iroha/issues/1382,https://api.github.com/repos/hyperledger/iroha/issues/comments/393648686,https://github.com/hyperledger/iroha/pull/1382#issuecomment-393648686,onsjkm,@bakhtin signed the commits.,2018-05-31 19:24:50,2018-05-31 19:24:50
https://api.github.com/repos/hyperledger/iroha/issues/1382,https://api.github.com/repos/hyperledger/iroha/issues/comments/393697309,https://github.com/hyperledger/iroha/pull/1382#issuecomment-393697309,l4l,"@onsjkm Actually there's [no need](https://github.com/probot/dco#how-it-works) in ""real"" signing, the only requirement is in ""Signed-off-by: <name> <email>"" message, that can be appended by `git commit -s`
Also you may try [shell script](https://gist.github.com/l4l/694ca936ef538a881cdc3604cc12b2e0), though I haven't used it for some time

You will see the a green tick near the DCO pr status instead of this:
![screenshot_20180601_011024](https://user-images.githubusercontent.com/5658339/40811109-a8bed388-6538-11e8-81b6-da51e6f4c36c.png)
",2018-05-31 22:11:21,2018-05-31 22:11:21
https://api.github.com/repos/hyperledger/iroha/issues/1382,https://api.github.com/repos/hyperledger/iroha/issues/comments/393711461,https://github.com/hyperledger/iroha/pull/1382#issuecomment-393711461,onsjkm,"@l4l FYI, the signer script adds message only to the first commit in the list. ",2018-05-31 23:14:22,2018-05-31 23:14:22
https://api.github.com/repos/hyperledger/iroha/issues/1381,https://api.github.com/repos/hyperledger/iroha/issues/comments/392286498,https://github.com/hyperledger/iroha/pull/1381#issuecomment-392286498,lebdron,"@l4l I think that unsafe methods can be used in tests, because errors result in test failures -- the expected behavior. I would more likely remove the optional from specified visitor to minimize the number of dereferences in tests => simpler code.",2018-05-26 20:33:48,2018-05-26 20:33:48
https://api.github.com/repos/hyperledger/iroha/issues/1380,https://api.github.com/repos/hyperledger/iroha/issues/comments/392092672,https://github.com/hyperledger/iroha/issues/1380#issuecomment-392092672,muratovv,"Hello, Rohan.

Generally, the problem occurs when C++ compiler doesn't have enough of RAM. If you use Docker for building Iroha, please, increase RAM capacity for Docker container. If this trick wouldn't help, decrease the number of threads in Cmake building process. For example:
```
cmake -H. -Bbuild && cmake --build build -- -j2
``` 
where `2` is a number of threads.",2018-05-25 15:23:10,2018-05-25 15:23:26
https://api.github.com/repos/hyperledger/iroha/issues/1380,https://api.github.com/repos/hyperledger/iroha/issues/comments/392235893,https://github.com/hyperledger/iroha/issues/1380#issuecomment-392235893,takemiyamakoto,What memory amount is recommended?,2018-05-26 04:34:26,2018-05-26 04:34:26
https://api.github.com/repos/hyperledger/iroha/issues/1380,https://api.github.com/repos/hyperledger/iroha/issues/comments/392260016,https://github.com/hyperledger/iroha/issues/1380#issuecomment-392260016,l4l,It takes around 10GB with 8 threads for me. It will probably will take up to 2GB for one thread,2018-05-26 13:02:25,2018-05-26 13:02:25
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392082136,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392082136,sorabot,@bakhtin commit a680d494441fc7c35527d48b72ee8cb3b1aad121 build status: SUCCESS,2018-05-25 14:49:22,2018-05-27 19:26:39
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392083549,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392083549,sorabot,@bakhtin @laSinteZ  commit eef61e753cf81f9deeb5eaa7f54277989f069369 build status: SUCCESS,2018-05-25 14:53:53,2018-05-25 14:53:53
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392085089,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392085089,sorabot,@bakhtin @laSinteZ  commit 0ff5322e93177abb4335d13c16bfddb50a527d72 build status: SUCCESS,2018-05-25 14:58:58,2018-05-25 14:58:58
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392090391,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392090391,sorabot,@bakhtin @laSinteZ  commit 89447e04f33f924c5f5c70cb3d1376dbe6c27680 build status: SUCCESS,2018-05-25 15:15:47,2018-05-25 15:15:47
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392093339,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392093339,sorabot,@bakhtin @laSinteZ  commit 91bb0029a69facf74b91dd78d03638cf6fc2a4de build status: SUCCESS,2018-05-25 15:25:23,2018-05-25 15:25:23
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392093687,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392093687,sorabot,@bakhtin @laSinteZ  commit c797710b639a6052dad5539e106855c6acb8f257 build status: SUCCESS,2018-05-25 15:26:30,2018-05-25 15:26:30
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392274748,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392274748,sorabot,@bakhtin @laSinteZ  commit 8d2d50fc23fb2fc972eb846a73a7e055cffee142 build status: SUCCESS,2018-05-26 17:07:25,2018-05-26 17:07:25
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392275241,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392275241,sorabot,@bakhtin @laSinteZ  commit bfa6b6f39cdf36a6834a88bf34ea938f170762a3 build status: SUCCESS,2018-05-26 17:15:57,2018-05-26 17:15:57
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392275582,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392275582,sorabot,@bakhtin @laSinteZ  commit 2ef4d94cd9169f2914927a4b55e0436b1964d420 build status: SUCCESS,2018-05-26 17:22:36,2018-05-26 17:22:36
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392275933,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392275933,sorabot,@bakhtin @laSinteZ  commit 464108ed0216f8cf025eeab4e0f2261f716c7e2d build status: SUCCESS,2018-05-26 17:28:32,2018-05-26 17:28:32
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392276246,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392276246,sorabot,@bakhtin @laSinteZ  commit 45247d00881b674b8fee4afaba421b652a87b4ce build status: SUCCESS,2018-05-26 17:32:48,2018-05-26 17:32:48
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392360622,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392360622,sorabot,@bakhtin @laSinteZ  commit e9c5a19e2dcbed1e8eb8022aa297f9ac748cef4c build status: SUCCESS,2018-05-27 19:36:00,2018-05-27 19:36:00
https://api.github.com/repos/hyperledger/iroha/issues/1379,https://api.github.com/repos/hyperledger/iroha/issues/comments/392361189,https://github.com/hyperledger/iroha/pull/1379#issuecomment-392361189,sorabot,@bakhtin @laSinteZ  commit 87bcc3dedb249d10257dfe9689a81308a415b353 build status: SUCCESS,2018-05-27 19:45:41,2018-05-27 19:45:41
https://api.github.com/repos/hyperledger/iroha/issues/1376,https://api.github.com/repos/hyperledger/iroha/issues/comments/393149458,https://github.com/hyperledger/iroha/pull/1376#issuecomment-393149458,igor-egorov,"Drop database will be implemented in a subsequent PR. (@lebdron, @l4l)",2018-05-30 12:51:28,2018-05-30 12:51:28
https://api.github.com/repos/hyperledger/iroha/issues/1375,https://api.github.com/repos/hyperledger/iroha/issues/comments/398427873,https://github.com/hyperledger/iroha/pull/1375#issuecomment-398427873,l4l,"Maybe consider leaving the existing node library as is (e.g moving to _node_ folder_) and just adding a new one?
Also stuff like `-DCMAKE_PREFIX_PATH=$EMSCRIPTEN/system` shouldn't be used for building",2018-06-19 14:51:39,2018-06-19 14:53:30
https://api.github.com/repos/hyperledger/iroha/issues/1375,https://api.github.com/repos/hyperledger/iroha/issues/comments/398605892,https://github.com/hyperledger/iroha/pull/1375#issuecomment-398605892,stinger112,"@l4l 

> Maybe consider leaving the existing node library as is (e.g moving to node folder_) and just adding a new one?

Impossible. Presence of **bindings.gyp** inside package brokes pipeline and enable SWIG compilation on `npm install`. So I had to remove it.

 > Also stuff like -DCMAKE_PREFIX_PATH=$EMSCRIPTEN/system shouldn't be used for building

It has to point to Emscripten's alternative search path because this is cross-compilation. Please take a look to the Emscripten guides for more details.

---

#### EDIT:
I returned **binding.gyp**, but renamed it to **binding.gyp.disabled** to prevent the automatic GYP compilation.
To return an ability to build SWIG version of the library you can rename it back to **binding.gyp**",2018-06-20 02:38:13,2018-06-20 10:30:41
https://api.github.com/repos/hyperledger/iroha/issues/1375,https://api.github.com/repos/hyperledger/iroha/issues/comments/399642160,https://github.com/hyperledger/iroha/pull/1375#issuecomment-399642160,laSinteZ,"@l4l @luckychess I suggest merging this PR with TODO's for now and consider Emscripten as an experimental feature of JS library with not all functionality. Especialy knowhing that our client libraries might be _slightly changed_ in future.

For ""all functionality"" we have a fallback SWIG version still available: you just need to rename `bindings.gyp.disabled` to `bindings.gyp` (maybe we will have a script for it later)",2018-06-23 06:49:50,2018-06-23 06:49:50
https://api.github.com/repos/hyperledger/iroha/issues/1375,https://api.github.com/repos/hyperledger/iroha/issues/comments/399926918,https://github.com/hyperledger/iroha/pull/1375#issuecomment-399926918,neewy,@luckychess was removed from the review list due to his involvement with research-based tasks at the moment,2018-06-25 12:00:04,2018-06-25 12:00:04
https://api.github.com/repos/hyperledger/iroha/issues/1375,https://api.github.com/repos/hyperledger/iroha/issues/comments/403810393,https://github.com/hyperledger/iroha/pull/1375#issuecomment-403810393,stinger112,"As I see nobody wants to review this PR.

So I'll actualize it according to the incoming bindings' changes.",2018-07-10 12:50:43,2018-07-10 13:27:31
https://api.github.com/repos/hyperledger/iroha/issues/1375,https://api.github.com/repos/hyperledger/iroha/issues/comments/405274464,https://github.com/hyperledger/iroha/pull/1375#issuecomment-405274464,neewy,"@stinger112 @laSinteZ this is not a matter of wish, but I think that people lack skills related to this code. What if we do something like:
1) live code demo? and short explanation of the problem (a presentation)
2) walkthrough reviewers through the code

Usually this helps.",2018-07-16 14:53:11,2018-07-16 14:53:33
https://api.github.com/repos/hyperledger/iroha/issues/1373,https://api.github.com/repos/hyperledger/iroha/issues/comments/392267125,https://github.com/hyperledger/iroha/pull/1373#issuecomment-392267125,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L47](https://github.com/hyperledger/iroha/blob/0f5bb1cb299db5315e62bd9cdc13771766d99d43/test/integration/transport/ordering_gate_service_test.cpp#L47): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-26 15:03:45,2018-05-26 15:03:45
https://api.github.com/repos/hyperledger/iroha/issues/1365,https://api.github.com/repos/hyperledger/iroha/issues/comments/390649579,https://github.com/hyperledger/iroha/pull/1365#issuecomment-390649579,l4l,"That looks like a split of #1312, am I correct?
If its consider review issues plz",2018-05-21 13:11:50,2018-05-21 13:11:50
https://api.github.com/repos/hyperledger/iroha/issues/1365,https://api.github.com/repos/hyperledger/iroha/issues/comments/392473206,https://github.com/hyperledger/iroha/pull/1365#issuecomment-392473206,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [transport_builder_test.cpp#L151](https://github.com/hyperledger/iroha/blob/c8865c00b74fcc219c57fe09b8b0f52f5fc2c005/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L151): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-28 09:27:23,2018-05-28 09:27:23
https://api.github.com/repos/hyperledger/iroha/issues/1363,https://api.github.com/repos/hyperledger/iroha/issues/comments/390631399,https://github.com/hyperledger/iroha/pull/1363#issuecomment-390631399,muratovv,What about tests? What is the way to prevent those type of issues in the future?,2018-05-21 11:44:44,2018-05-21 11:44:44
https://api.github.com/repos/hyperledger/iroha/issues/1363,https://api.github.com/repos/hyperledger/iroha/issues/comments/390633072,https://github.com/hyperledger/iroha/pull/1363#issuecomment-390633072,igor-egorov,The possible way to detect such issues on CI is to remove google.protobuf headers from system paths. @lebdron can elaborate more on this.,2018-05-21 11:53:26,2018-05-21 11:54:02
https://api.github.com/repos/hyperledger/iroha/issues/1363,https://api.github.com/repos/hyperledger/iroha/issues/comments/390635499,https://github.com/hyperledger/iroha/pull/1363#issuecomment-390635499,lebdron,"@muratovv If libraries are not installed in system path, then they will not be included by default, and it will be possible to track down such issues.",2018-05-21 12:06:22,2018-05-21 12:06:22
https://api.github.com/repos/hyperledger/iroha/issues/1362,https://api.github.com/repos/hyperledger/iroha/issues/comments/390630436,https://github.com/hyperledger/iroha/issues/1362#issuecomment-390630436,5HARK,"it same in my host system.
ubuntu 16.04 LTS
ansible version 2.5.3
python version 2.7.12

![screenshot_20180521_203733](https://user-images.githubusercontent.com/12772303/40305797-0a534606-5d37-11e8-8edf-3b3db90d3d02.png)
",2018-05-21 11:39:41,2018-05-21 11:43:46
https://api.github.com/repos/hyperledger/iroha/issues/1362,https://api.github.com/repos/hyperledger/iroha/issues/comments/395339958,https://github.com/hyperledger/iroha/issues/1362#issuecomment-395339958,efemai,"I am experiencing the same error detailed here above. I tried on both Ubuntu 16.04 and Ubuntu 18.04.
```
$ ./iroha-cli -genesis_block -peers_address peer.list 
terminate called after throwing an instance of 'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >'
  what():  bimap<>: invalid key
Aborted (core dumped)
```

",2018-06-07 08:37:10,2018-06-07 08:37:10
https://api.github.com/repos/hyperledger/iroha/issues/1362,https://api.github.com/repos/hyperledger/iroha/issues/comments/397348423,https://github.com/hyperledger/iroha/issues/1362#issuecomment-397348423,lebdron,"Fixed in https://github.com/hyperledger/iroha/pull/1351 , please report if any new issues appear.",2018-06-14 16:03:07,2018-06-14 16:03:07
https://api.github.com/repos/hyperledger/iroha/issues/1360,https://api.github.com/repos/hyperledger/iroha/issues/comments/395127302,https://github.com/hyperledger/iroha/pull/1360#issuecomment-395127302,l4l,any updates on that?,2018-06-06 16:16:20,2018-06-06 16:17:10
https://api.github.com/repos/hyperledger/iroha/issues/1356,https://api.github.com/repos/hyperledger/iroha/issues/comments/390264212,https://github.com/hyperledger/iroha/pull/1356#issuecomment-390264212,muratovv,"Also, please, remove DISABLE_COMPATIBILITY from shared_model ::cmake and ::bindings.",2018-05-18 16:40:20,2018-05-18 16:40:20
https://api.github.com/repos/hyperledger/iroha/issues/1354,https://api.github.com/repos/hyperledger/iroha/issues/comments/390149259,https://github.com/hyperledger/iroha/pull/1354#issuecomment-390149259,x3medima17,Please remove unused topics ,2018-05-18 09:22:47,2018-05-18 09:22:47
https://api.github.com/repos/hyperledger/iroha/issues/1350,https://api.github.com/repos/hyperledger/iroha/issues/comments/390082276,https://github.com/hyperledger/iroha/pull/1350#issuecomment-390082276,neewy,"As usual, DCO expects some other users. We need to address this issue to @hyperledger-ci I think, this is at least second time when we are going to mess up with commit signing ",2018-05-18 03:18:01,2018-05-18 03:18:01
https://api.github.com/repos/hyperledger/iroha/issues/1350,https://api.github.com/repos/hyperledger/iroha/issues/comments/390217531,https://github.com/hyperledger/iroha/pull/1350#issuecomment-390217531,neewy,"@laSinteZ corrected ""from with"" part",2018-05-18 14:03:45,2018-05-18 14:03:45
https://api.github.com/repos/hyperledger/iroha/issues/1350,https://api.github.com/repos/hyperledger/iroha/issues/comments/390261381,https://github.com/hyperledger/iroha/pull/1350#issuecomment-390261381,sorabot,"SonarQube analysis reported 21 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 20 minor

#### Top 10 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L225](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L225): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L145](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/iroha-cli/interactive/interactive_transaction_cli.hpp#L145): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L44](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L44): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L73](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/irohad/ametsuchi/impl/postgres_block_query.hpp#L73): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L81](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/irohad/ametsuchi/impl/postgres_block_query.hpp#L81): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L91](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/irohad/ametsuchi/impl/postgres_block_query.hpp#L91): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L112](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L112): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L65](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/irohad/consensus/yac/impl/yac_gate_impl.hpp#L65): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L33](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/irohad/execution/impl/command_executor.cpp#L33): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L160](https://github.com/hyperledger/iroha/blob/21b0c8da20afccd66fc8a479706e61878457759b/irohad/model/converters/impl/pb_query_response_factory.cpp#L160): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-18 16:29:36,2018-05-18 16:29:36
https://api.github.com/repos/hyperledger/iroha/issues/1347,https://api.github.com/repos/hyperledger/iroha/issues/comments/390132400,https://github.com/hyperledger/iroha/issues/1347#issuecomment-390132400,laSinteZ,@walkero thank you for your report! We are investigating this issue and will fix it soon :),2018-05-18 08:18:51,2018-05-18 08:18:51
https://api.github.com/repos/hyperledger/iroha/issues/1347,https://api.github.com/repos/hyperledger/iroha/issues/comments/390381688,https://github.com/hyperledger/iroha/issues/1347#issuecomment-390381688,laSinteZ,"@walkero since #1355 is merged, everything works fine now (I've checked it as well). I am closing this, but if you still have – please, reopen it. Don't forget to `docker pull hyperledger/iroha:develop` to have the newest image.",2018-05-19 05:48:03,2018-05-19 05:48:03
https://api.github.com/repos/hyperledger/iroha/issues/1346,https://api.github.com/repos/hyperledger/iroha/issues/comments/389907431,https://github.com/hyperledger/iroha/pull/1346#issuecomment-389907431,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L44](https://github.com/hyperledger/iroha/blob/2b8ed6c66bbb0d81f9cbb9f94e0cf2df6bdd4151/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L44): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-17 15:28:02,2018-05-17 15:28:02
https://api.github.com/repos/hyperledger/iroha/issues/1345,https://api.github.com/repos/hyperledger/iroha/issues/comments/395127758,https://github.com/hyperledger/iroha/pull/1345#issuecomment-395127758,l4l,Any updates on that?,2018-06-06 16:17:44,2018-06-06 16:17:44
https://api.github.com/repos/hyperledger/iroha/issues/1345,https://api.github.com/repos/hyperledger/iroha/issues/comments/395340996,https://github.com/hyperledger/iroha/pull/1345#issuecomment-395340996,nickaleks,"Waited for streaming fixes. Need to resolve some bugs in the tests, then will merge",2018-06-07 08:40:27,2018-06-07 08:40:27
https://api.github.com/repos/hyperledger/iroha/issues/1342,https://api.github.com/repos/hyperledger/iroha/issues/comments/395947959,https://github.com/hyperledger/iroha/issues/1342#issuecomment-395947959,l4l,Does the issue still persist?,2018-06-09 07:34:44,2018-06-09 07:34:44
https://api.github.com/repos/hyperledger/iroha/issues/1342,https://api.github.com/repos/hyperledger/iroha/issues/comments/401311352,https://github.com/hyperledger/iroha/issues/1342#issuecomment-401311352,l4l,Plz reopen if the issue is still there,2018-06-29 10:07:39,2018-06-29 10:07:39
https://api.github.com/repos/hyperledger/iroha/issues/1341,https://api.github.com/repos/hyperledger/iroha/issues/comments/389445765,https://github.com/hyperledger/iroha/issues/1341#issuecomment-389445765,l4l,"No, these docs are missing. I think it will be fixed soon
You may take a look at the permission list in the [sources](https://github.com/hyperledger/iroha/blob/develop/shared_model/validators/permissions.hpp)",2018-05-16 08:54:06,2018-05-16 08:54:06
https://api.github.com/repos/hyperledger/iroha/issues/1341,https://api.github.com/repos/hyperledger/iroha/issues/comments/393333908,https://github.com/hyperledger/iroha/issues/1341#issuecomment-393333908,l4l,"That work proposed in #1395, so I'm closing that issue",2018-05-30 22:00:29,2018-05-30 22:00:29
https://api.github.com/repos/hyperledger/iroha/issues/1341,https://api.github.com/repos/hyperledger/iroha/issues/comments/393451381,https://github.com/hyperledger/iroha/issues/1341#issuecomment-393451381,igor-egorov,"@big-fish0, permissions description is now available here - https://iroha.readthedocs.io/en/latest/maintenance/permissions.html",2018-05-31 08:19:00,2018-05-31 08:19:00
https://api.github.com/repos/hyperledger/iroha/issues/1340,https://api.github.com/repos/hyperledger/iroha/issues/comments/392268353,https://github.com/hyperledger/iroha/pull/1340#issuecomment-392268353,l4l,Is there any updates on that?,2018-05-26 15:26:04,2018-05-26 15:26:04
https://api.github.com/repos/hyperledger/iroha/issues/1340,https://api.github.com/repos/hyperledger/iroha/issues/comments/394190694,https://github.com/hyperledger/iroha/pull/1340#issuecomment-394190694,neewy,Fixed in https://github.com/hyperledger/iroha/pull/1382,2018-06-03 20:56:33,2018-06-03 20:56:33
https://api.github.com/repos/hyperledger/iroha/issues/1338,https://api.github.com/repos/hyperledger/iroha/issues/comments/389757631,https://github.com/hyperledger/iroha/pull/1338#issuecomment-389757631,bakhtin,"Why is there such a big dispersion of build and test times on Darwin and x86_64? Build time on Darwin lasts noticeably longer than on x86_64. While, on contrary, tests pass significantly faster on Darwin
- x86_64
  - Build time: 5.27
  - Test time: 8.31
- Darwin
  - Build time: 13.43
  - Test time: 1.16

[Jenkins build link](https://jenkins.soramitsu.co.jp/blue/organizations/jenkins/iroha%2Firoha-hyperledger/detail/PR-1338/6/pipeline)",2018-05-17 06:20:44,2018-05-17 06:23:57
https://api.github.com/repos/hyperledger/iroha/issues/1336,https://api.github.com/repos/hyperledger/iroha/issues/comments/389859077,https://github.com/hyperledger/iroha/pull/1336#issuecomment-389859077,nickaleks,Build fails on Linux :(,2018-05-17 13:05:00,2018-05-17 13:05:00
https://api.github.com/repos/hyperledger/iroha/issues/1336,https://api.github.com/repos/hyperledger/iroha/issues/comments/390434154,https://github.com/hyperledger/iroha/pull/1336#issuecomment-390434154,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L176](https://github.com/hyperledger/iroha/blob/c1059c0fd9941dd27e73f4454f212e170200bb5a/test/module/irohad/execution/command_validate_execute_test.cpp#L176): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-19 21:34:37,2018-05-19 21:34:37
https://api.github.com/repos/hyperledger/iroha/issues/1335,https://api.github.com/repos/hyperledger/iroha/issues/comments/389755238,https://github.com/hyperledger/iroha/pull/1335#issuecomment-389755238,bakhtin,Does not work on Windows Server 2016. I filed an issue for that (#1342),2018-05-17 06:07:07,2018-05-17 06:07:07
https://api.github.com/repos/hyperledger/iroha/issues/1335,https://api.github.com/repos/hyperledger/iroha/issues/comments/390241751,https://github.com/hyperledger/iroha/pull/1335#issuecomment-390241751,lebdron,"Tests hang on Windows after building and passing, so it is possible that it is a Gradle or Java issue. Tests in this branch pass on Mac os without any issues.",2018-05-18 15:21:09,2018-05-18 15:21:09
https://api.github.com/repos/hyperledger/iroha/issues/1334,https://api.github.com/repos/hyperledger/iroha/issues/comments/389428964,https://github.com/hyperledger/iroha/pull/1334#issuecomment-389428964,bakhtin,"Works on Win Server 2016, protobuf 3.5.1, python 3.6, swig 3.0.12
```
+ ctest -R python --output-on-failure
Test project C:/J/workspace/msvc106da0dd/build
    Start 12: python_transaction_test
1/2 Test #12: python_transaction_test ..........   Passed    0.89 sec
    Start 13: python_query_test
2/2 Test #13: python_query_test ................   Passed    0.30 sec

100% tests passed, 0 tests failed out of 2
```
[Link to respective Jenkins build](https://jenkins.soramitsu.co.jp/job/iroha/job/iroha-hyperledger/job/msvc/90/console)",2018-05-16 07:54:46,2018-05-16 08:06:49
https://api.github.com/repos/hyperledger/iroha/issues/1333,https://api.github.com/repos/hyperledger/iroha/issues/comments/388566661,https://github.com/hyperledger/iroha/pull/1333#issuecomment-388566661,l4l,"It's not really true for all platforms, afaik",2018-05-12 16:30:00,2018-05-12 16:30:00
https://api.github.com/repos/hyperledger/iroha/issues/1333,https://api.github.com/repos/hyperledger/iroha/issues/comments/396080999,https://github.com/hyperledger/iroha/pull/1333#issuecomment-396080999,neewy,@l4l do we need this?,2018-06-10 20:51:36,2018-06-10 20:51:36
https://api.github.com/repos/hyperledger/iroha/issues/1333,https://api.github.com/repos/hyperledger/iroha/issues/comments/423827100,https://github.com/hyperledger/iroha/pull/1333#issuecomment-423827100,l4l,Seems outdated,2018-09-23 16:05:45,2018-09-23 16:05:45
https://api.github.com/repos/hyperledger/iroha/issues/1330,https://api.github.com/repos/hyperledger/iroha/issues/comments/388775235,https://github.com/hyperledger/iroha/pull/1330#issuecomment-388775235,neewy,"Please expand features section with ""how to use"" section and ""known issues"" if there are any 🙏 ",2018-05-14 10:46:47,2018-05-14 10:46:47
https://api.github.com/repos/hyperledger/iroha/issues/1330,https://api.github.com/repos/hyperledger/iroha/issues/comments/389103464,https://github.com/hyperledger/iroha/pull/1330#issuecomment-389103464,sorabot,"SonarQube analysis reported 21 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 20 minor

#### Top 10 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L225](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L225): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L145](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/iroha-cli/interactive/interactive_transaction_cli.hpp#L145): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L73](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/irohad/ametsuchi/impl/postgres_block_query.hpp#L73): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L81](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/irohad/ametsuchi/impl/postgres_block_query.hpp#L81): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L91](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/irohad/ametsuchi/impl/postgres_block_query.hpp#L91): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L112](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L112): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L65](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/irohad/consensus/yac/impl/yac_gate_impl.hpp#L65): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L160](https://github.com/hyperledger/iroha/blob/d756bafab39e29c91e7087c9f6d5b3df57fa19c2/irohad/model/converters/impl/pb_query_response_factory.cpp#L160): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-15 09:27:43,2018-05-15 09:27:43
https://api.github.com/repos/hyperledger/iroha/issues/1327,https://api.github.com/repos/hyperledger/iroha/issues/comments/388229522,https://github.com/hyperledger/iroha/issues/1327#issuecomment-388229522,sjashwin,"You need to run iroha in docker first, set up a node. Please follow the steps in the following documentation http://iroha.readthedocs.io/en/latest/getting_started/index.html#starting-iroha-node",2018-05-11 01:06:08,2018-05-11 01:06:47
https://api.github.com/repos/hyperledger/iroha/issues/1327,https://api.github.com/repos/hyperledger/iroha/issues/comments/388276792,https://github.com/hyperledger/iroha/issues/1327#issuecomment-388276792,laSinteZ,"@Akash76 our run-iroha-dev in `develop` branch is currently under fixes. However, it works for stable `master` branch.",2018-05-11 06:48:55,2018-05-11 06:48:55
https://api.github.com/repos/hyperledger/iroha/issues/1327,https://api.github.com/repos/hyperledger/iroha/issues/comments/388427095,https://github.com/hyperledger/iroha/issues/1327#issuecomment-388427095,Akash76,@laSinteZ do you deal with hyperledger caliper??,2018-05-11 17:13:53,2018-05-11 17:13:53
https://api.github.com/repos/hyperledger/iroha/issues/1327,https://api.github.com/repos/hyperledger/iroha/issues/comments/388429249,https://github.com/hyperledger/iroha/issues/1327#issuecomment-388429249,laSinteZ,"@Akash76 could you please specify the question? No, I am not the one who is integrating Iroha with Caliper.",2018-05-11 17:21:55,2018-05-11 17:21:55
https://api.github.com/repos/hyperledger/iroha/issues/1327,https://api.github.com/repos/hyperledger/iroha/issues/comments/388431506,https://github.com/hyperledger/iroha/issues/1327#issuecomment-388431506,Akash76,I got that error while running run-iroha-dev.sh. But i have downloaded the docker images manually iroha-docker-develop and postgres...,2018-05-11 17:30:11,2018-05-11 17:30:11
https://api.github.com/repos/hyperledger/iroha/issues/1327,https://api.github.com/repos/hyperledger/iroha/issues/comments/388435810,https://github.com/hyperledger/iroha/issues/1327#issuecomment-388435810,laSinteZ,@Akash76 since https://github.com/hyperledger/iroha/pull/1331 is merged run-iroha-dev must work now.,2018-05-11 17:45:44,2018-05-11 17:45:44
https://api.github.com/repos/hyperledger/iroha/issues/1327,https://api.github.com/repos/hyperledger/iroha/issues/comments/388437061,https://github.com/hyperledger/iroha/issues/1327#issuecomment-388437061,Akash76,Yeah...i will test it again,2018-05-11 17:50:20,2018-05-11 17:50:20
https://api.github.com/repos/hyperledger/iroha/issues/1327,https://api.github.com/repos/hyperledger/iroha/issues/comments/388452924,https://github.com/hyperledger/iroha/issues/1327#issuecomment-388452924,l4l,"Feel free to write some notes, if it's not working",2018-05-11 18:47:40,2018-05-11 18:47:54
https://api.github.com/repos/hyperledger/iroha/issues/1326,https://api.github.com/repos/hyperledger/iroha/issues/comments/387837528,https://github.com/hyperledger/iroha/pull/1326#issuecomment-387837528,sjashwin,@lebdron please review this. Sorry for the silly mistakes.,2018-05-09 18:44:57,2018-05-09 18:44:57
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387794848,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387794848,laSinteZ,"@Akash76 could you send us previous commands you entered. Also, please, try to go through http://iroha.readthedocs.io/en/latest/getting_started/ once again (Don't forget to remove created containers with `docker rm`), maybe you mistyped some command :(",2018-05-09 16:20:14,2018-05-09 16:20:14
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387797455,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387797455,Akash76,i have removed all the old containers...and the commands are as stated in the getting started page...network name is iroha-network...user=postgres...password=mysecretpassword...just started that and trying to see iroha daemon.,2018-05-09 16:29:16,2018-05-09 16:29:16
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387797783,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387797783,laSinteZ,@Akash76 please provide screenshoots/logs of commands if possible so we can find the source of a problem :),2018-05-09 16:30:33,2018-05-09 16:30:33
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387799230,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387799230,laSinteZ,"@Akash76 I've found a source of a problem, we are investigating now and will fix it. Stay tuned!",2018-05-09 16:35:19,2018-05-09 16:35:19
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387799329,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387799329,Akash76,"![screenshot from 2018-05-09 22-04-34](https://user-images.githubusercontent.com/29705984/39827243-04eef482-53d5-11e8-9aff-24a7baa8363a.png)
This is what i have done...same commands given in getting started",2018-05-09 16:35:39,2018-05-09 16:35:39
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387800981,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387800981,laSinteZ,"@Akash76 we've made some changes to `develop` branch (adding new permission), but I think that our docker image hasn't updated yet. As a temporary workaround, please remove the 34 line in `iroha/example/genesis.block`
<img width=""500"" alt=""screen shot 2018-05-09 at 19 40 23"" src=""https://user-images.githubusercontent.com/10958990/39827545-e5feea00-53c0-11e8-831d-3c6efcfb89f6.png"">
like this :)

and try running irohad again.",2018-05-09 16:41:13,2018-05-09 16:43:12
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387801993,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387801993,Akash76,it worked...but why is that having issue?? ,2018-05-09 16:44:52,2018-05-09 16:44:52
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387802063,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387802063,Akash76,Thank you @laSinteZ ,2018-05-09 16:45:07,2018-05-09 16:45:07
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387803135,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387803135,laSinteZ,"As I said, we have updated our `develop` branch (added new possible permission `can_get_blocks`), but not all of our docker images have updated right now. This why in docker image you have a bit older version of iroha, which knows nothing about new permission in genesis block and doesn't want to run. We will fix it soon (by updating docker images).

If you have time, please try running Iroha docker-container with `hyperledger/iroha:x86_64-develop` image, it contains the newest version of `develop` branch and it will work w/o editing files.",2018-05-09 16:48:51,2018-05-09 16:50:00
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387803648,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387803648,Akash76,Yeah sure...ill try that. Once again Thank you @laSinteZ ,2018-05-09 16:50:36,2018-05-09 16:50:36
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/387803821,https://github.com/hyperledger/iroha/issues/1324#issuecomment-387803821,laSinteZ,I am closing this issue since problem is resolved and we will update our iroha:docker very soon.,2018-05-09 16:51:17,2018-05-09 16:51:17
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/451066236,https://github.com/hyperledger/iroha/issues/1324#issuecomment-451066236,GaurManish,"[2019-01-03 06:44:17.632213751][th:10][info] IROHAD [Init] => storage
[2019-01-03 06:44:17.632780942][th:10][error] MAIN Failed to parse genesis block.

The same error any solution ??",2019-01-03 06:45:33,2019-01-03 06:45:33
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/451066287,https://github.com/hyperledger/iroha/issues/1324#issuecomment-451066287,GaurManish,"![image](https://user-images.githubusercontent.com/39953298/50625945-52f3fc80-0f51-11e9-9292-df62fc2bf34a.png)
",2019-01-03 06:46:03,2019-01-03 06:46:03
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/451066335,https://github.com/hyperledger/iroha/issues/1324#issuecomment-451066335,GaurManish,"Please help me resolve this issue 
",2019-01-03 06:46:27,2019-01-03 06:46:27
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/451242031,https://github.com/hyperledger/iroha/issues/1324#issuecomment-451242031,richhildyard,"Same problem. The image has been corrected to remove can_get_blocks from admin's permissions, but I am getting the same error as GaurManish. Any thoughts?",2019-01-03 18:57:35,2019-01-03 18:57:35
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/451250440,https://github.com/hyperledger/iroha/issues/1324#issuecomment-451250440,laSinteZ,"@GaurManish @richhildyard try using genesis block from [dev](https://github.com/hyperledger/iroha/tree/dev) branch, not develop.",2019-01-03 19:27:16,2019-01-03 19:27:16
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/455075787,https://github.com/hyperledger/iroha/issues/1324#issuecomment-455075787,darwinharianto,"tried to use the genesis block from dev branch at example>genesis.block, still have the same problem.",2019-01-17 07:55:01,2019-01-17 07:55:01
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/455099561,https://github.com/hyperledger/iroha/issues/1324#issuecomment-455099561,Mingela,@darwinharianto try `docker system prune -f` if it is convenient for you since it helped me once when an old block store format was conflicting with a new one or previously running containers was not shut down correctly,2019-01-17 09:19:33,2019-01-17 09:19:33
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/455429242,https://github.com/hyperledger/iroha/issues/1324#issuecomment-455429242,darwinharianto,"> @darwinharianto try `docker system prune -f` if it is convenient for you since it helped me once when an old block store format was conflicting with a new one or previously running containers was not shut down correctly

tried `docker system prune -f` still have the same error report",2019-01-18 05:08:00,2019-01-18 05:08:00
https://api.github.com/repos/hyperledger/iroha/issues/1324,https://api.github.com/repos/hyperledger/iroha/issues/comments/455804636,https://github.com/hyperledger/iroha/issues/1324#issuecomment-455804636,l4l,"@darwinharianto There was a release week ago, it's located on master branch. May I ask you for trying it out (with its genesis block)? That should be an outdated issue, since for now some useful logs (if the block is incorrect) should be printed as well.",2019-01-19 18:38:56,2019-01-19 18:38:56
https://api.github.com/repos/hyperledger/iroha/issues/1323,https://api.github.com/repos/hyperledger/iroha/issues/comments/387761000,https://github.com/hyperledger/iroha/pull/1323#issuecomment-387761000,uditha-atukorala,"Sample output:
```
$ ../build/bin/iroha-cli -account_name admin@test
Welcome to Iroha-Cli. 
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 2
Choose query: 
1. Get all permissions related to role (get_role_perm)
2. Get Transactions by transactions' hashes (get_tx)
3. Get information about asset (get_ast_info)
4. Get Account's Transactions (get_acc_tx)
5. Get Account's Asset Transactions (get_acc_ast_tx)
6. Get all current roles in the system (get_roles)
7. Get Account's Signatories (get_acc_sign)
8. Get Account's Assets (get_acc_ast)
9. Get Account Information (get_acc)
0. Back (b)
> : 5
Requested account Id: admin@test
Requested asset Id: coolcoin#test
Query is formed. Choose what to do:
1. Send to Iroha peer (send)
2. Save as json file (save)
0. Back (b)
> : 1
Peer address (0.0.0.0): localhost
Peer port (50051): 50051
[2018-05-09 15:35:22.465236407][th:17466][info] QueryResponseHandler [Transaction]
[2018-05-09 15:35:22.465450317][th:17466][info] QueryResponseHandler -Hash- dc75e5d47f9bccb1cbbf9a0c7e78b38fedf53e9c9c24428f5a18c47ae6bcc74e
[2018-05-09 15:35:22.465480116][th:17466][info] QueryResponseHandler -Creator Id- admin@test
[2018-05-09 15:35:22.465499438][th:17466][info] QueryResponseHandler -Created Time- 1525097539209
[2018-05-09 15:35:22.465542337][th:17466][info] QueryResponseHandler -Commands- 3
[2018-05-09 15:35:22.466995258][th:17466][info] QueryResponseHandler  CreateAsset: [asset_name=coolcoin, domain_id=test, precision=2, ] 
[2018-05-09 15:35:22.467048218][th:17466][info] QueryResponseHandler  AddAssetQuantity: [account_id=admin@test, asset_id=coolcoin#test, amount=Amount: [intValue=20050, precision=2, ], ] 
[2018-05-09 15:35:22.467086720][th:17466][info] QueryResponseHandler  TransferAsset: [src_account_id=admin@test, dest_account_id=test@test, asset_id=coolcoin#test, description=, amount=Amount: [intValue=10050, precision=2, ], ] 
[2018-05-09 15:35:22.467131766][th:17466][info] QueryResponseHandler [Transaction]
[2018-05-09 15:35:22.467177169][th:17466][info] QueryResponseHandler -Hash- 51c168b1f0bb4d04f4e60f195f2ae16097b65db9827e1bad1dcc9dab2586fce8
[2018-05-09 15:35:22.467188208][th:17466][info] QueryResponseHandler -Creator Id- admin@test
[2018-05-09 15:35:22.467197348][th:17466][info] QueryResponseHandler -Created Time- 1525187863468
[2018-05-09 15:35:22.467215217][th:17466][info] QueryResponseHandler -Commands- 1
[2018-05-09 15:35:22.467242455][th:17466][info] QueryResponseHandler  TransferAsset: [src_account_id=admin@test, dest_account_id=test@test, asset_id=coolcoin#test, description=, amount=Amount: [intValue=1000, precision=2, ], ] 
[2018-05-09 15:35:22.467267111][th:17466][info] QueryResponseHandler [Transaction]
[2018-05-09 15:35:22.467345824][th:17466][info] QueryResponseHandler -Hash- 216f4e4213871c56ab5087c4d1b16392b0759f8fd6ecd82af9ec445530430934
[2018-05-09 15:35:22.467359017][th:17466][info] QueryResponseHandler -Creator Id- test@test
[2018-05-09 15:35:22.467368891][th:17466][info] QueryResponseHandler -Created Time- 1525265807770
[2018-05-09 15:35:22.467388258][th:17466][info] QueryResponseHandler -Commands- 1
[2018-05-09 15:35:22.467431518][th:17466][info] QueryResponseHandler  TransferAsset: [src_account_id=test@test, dest_account_id=admin@test, asset_id=coolcoin#test, description=, amount=Amount: [intValue=500, precision=2, ], ] 
--------------------
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 
```",2018-05-09 14:37:40,2018-05-09 14:37:40
https://api.github.com/repos/hyperledger/iroha/issues/1323,https://api.github.com/repos/hyperledger/iroha/issues/comments/393409303,https://github.com/hyperledger/iroha/pull/1323#issuecomment-393409303,lebdron,Tests failed on CI are unrelated to changes in the pull request.,2018-05-31 05:33:06,2018-05-31 05:33:06
https://api.github.com/repos/hyperledger/iroha/issues/1319,https://api.github.com/repos/hyperledger/iroha/issues/comments/387620972,https://github.com/hyperledger/iroha/issues/1319#issuecomment-387620972,lebdron,Hi @walkero . Could you put the whole log when you run `cmake -H. ...` please? Also could you specify the branch you are using? It might be the case that you did not switch to `feature/msvc-shared-model-build` branch.,2018-05-09 05:04:30,2018-05-09 05:04:30
https://api.github.com/repos/hyperledger/iroha/issues/1319,https://api.github.com/repos/hyperledger/iroha/issues/comments/387635294,https://github.com/hyperledger/iroha/issues/1319#issuecomment-387635294,walkero,"@lebdron thank you
I cloned `develop` branch, now I retry to clone `feature/msvc-shared-model-build` branch,
and new error occurred.

```
d:\irohaMS>git clone -b feature/msvc-shared-model-build --depth=1 https://github.com/hyperledger/iroha
d:\irohaMS>cd iroha

d:\irohaMS\iroha>cmake -H.\shared_model -B.\build -DCMAKE_TOOLCHAIN_FILE=D:/irohaMS/vcpkg/scripts/buildsystems/vcpkg.cmake
-- Building for: Visual Studio 15 2017
CMake Warning at D:/irohaMS/vcpkg/scripts/buildsystems/vcpkg.cmake:89 (message):
  There are no libraries installed for the Vcpkg triplet x86-windows.
Call Stack (most recent call first):
  C:/Program Files/CMake/share/cmake-3.11/Modules/CMakeDetermineSystem.cmake:94 (include)
  CMakeLists.txt:17 (project)

-- The C compiler identification is MSVC 19.12.25831.0
-- The CXX compiler identification is MSVC 19.12.25831.0
-- Check for working C compiler: d:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/bin/Hostx86/x86/cl.exe
-- Check for working C compiler: d:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/bin/Hostx86/x86/cl.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: d:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/bin/Hostx86/x86/cl.exe
-- Check for working CXX compiler: d:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/bin/Hostx86/x86/cl.exe -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - not found
-- Found Threads: TRUE
-- Found Protobuf: C:/ProgramData/Anaconda3/Library/lib/libprotobuf.lib (found version ""3.5.0"")
CMake Error at C:/Program Files/CMake/share/cmake-3.11/Modules/FindBoost.cmake:2044 (message):
  Unable to find the requested Boost libraries.

  Unable to find the Boost header files.  Please set BOOST_ROOT to the root
  directory containing Boost or BOOST_INCLUDEDIR to the directory containing
  Boost's headers.
Call Stack (most recent call first):
  D:/irohaMS/vcpkg/scripts/buildsystems/vcpkg.cmake:247 (_find_package)
  cmake/dependencies.cmake:35 (find_package)
  CMakeLists.txt:49 (include)


-- Could NOT find ed25519 (missing: ed25519_INCLUDE_DIR ed25519_LIBRARY)
CMake Error at C:/Program Files/CMake/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:137 (message):
  Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR
  GTEST_MAIN_LIBRARY)
Call Stack (most recent call first):
  C:/Program Files/CMake/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE)
  C:/Program Files/CMake/share/cmake-3.11/Modules/FindGTest.cmake:196 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)
  D:/irohaMS/vcpkg/scripts/buildsystems/vcpkg.cmake:247 (_find_package)
  cmake/dependencies.cmake:53 (find_package)
  CMakeLists.txt:49 (include)


-- Configuring incomplete, errors occurred!
See also ""D:/irohaMS/iroha/build/CMakeFiles/CMakeOutput.log"".
See also ""D:/irohaMS/iroha/build/CMakeFiles/CMakeError.log"".
```

thanks
",2018-05-09 06:35:39,2018-05-09 06:45:44
https://api.github.com/repos/hyperledger/iroha/issues/1319,https://api.github.com/repos/hyperledger/iroha/issues/comments/387638018,https://github.com/hyperledger/iroha/issues/1319#issuecomment-387638018,walkero,"iroha\build\CMakeFiles\CMakeError.log :

```
Determining if the include file pthread.h exists failed with the following output:
Change Dir: D:/irohaMS/iroha/build/CMakeFiles/CMakeTmp

Run Build Command:""d:/Program Files (x86)/Microsoft Visual Studio/2017/Community/MSBuild/15.0/Bin/MSBuild.exe"" ""cmTC_d8712.vcxproj"" ""/p:Configuration=Debug"" ""/p:VisualStudioVersion=15.0""
Microsoft (R) Build Engine version 15.5.180.51428 for .NET Framework

Copyright (C) Microsoft Corporation. All rights reserved.



Build started 2018/5/9 14:47:37.

Project ""D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\cmTC_d8712.vcxproj"" on node 1 (default targets).

PrepareForBuild:

  Creating directory ""cmTC_d8712.dir\Debug\"".

  Creating directory ""D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\Debug\"".

  Creating directory ""cmTC_d8712.dir\Debug\cmTC_d8712.tlog\"".

InitializeBuildStatus:

  Creating ""cmTC_d8712.dir\Debug\cmTC_d8712.tlog\unsuccessfulbuild"" because ""AlwaysCreate"" was specified.

VcpkgTripletSelection:

  Not using Vcpkg because VcpkgEnabled is ""false""

ClCompile:

  d:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.12.25827\bin\HostX86\x86\CL.exe /c /Zi /W3 /WX- /diagnostics:classic /Od /Ob0 /Oy- /D WIN32 /D _WINDOWS /D ""CMAKE_INTDIR=\""Debug\"""" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo""cmTC_d8712.dir\Debug\\"" /Fd""cmTC_d8712.dir\Debug\vc141.pdb"" /Gd /TC /analyze- /errorReport:queue D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\CheckIncludeFile.c

  ?? x86 ? Microsoft (R) C/C++ ????? 19.12.25831 ?

  ????(C) Microsoft Corporation????????

  

  cl /c /Zi /W3 /WX- /diagnostics:classic /Od /Ob0 /Oy- /D WIN32 /D _WINDOWS /D ""CMAKE_INTDIR=\""Debug\"""" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo""cmTC_d8712.dir\Debug\\"" /Fd""cmTC_d8712.dir\Debug\vc141.pdb"" /Gd /TC /analyze- /errorReport:queue D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\CheckIncludeFile.c

  CheckIncludeFile.c

  

D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\CheckIncludeFile.c(1): fatal error C1083: ????????: ""pthread.h"": No such file or directory [D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\cmTC_d8712.vcxproj]

Done Building Project ""D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\cmTC_d8712.vcxproj"" (default targets) -- FAILED.



Build FAILED.



""D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\cmTC_d8712.vcxproj"" (default target) (1) ->

(ClCompile target) -> 

  D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\CheckIncludeFile.c(1): fatal error C1083: ????????: ""pthread.h"": No such file or directory [D:\irohaMS\iroha\build\CMakeFiles\CMakeTmp\cmTC_d8712.vcxproj]



    0 Warning(s)

    1 Error(s)



Time Elapsed 00:00:00.56

```
",2018-05-09 06:49:18,2018-05-09 06:49:18
https://api.github.com/repos/hyperledger/iroha/issues/1319,https://api.github.com/repos/hyperledger/iroha/issues/comments/387647560,https://github.com/hyperledger/iroha/issues/1319#issuecomment-387647560,lebdron,"@walkero From the errors in config, such as 
```
Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR
  GTEST_MAIN_LIBRARY)
```
it seems that either packages are not installed in vcpkg, or CMake fails to detect them.
Also this message tells us that packages are not installed: `There are no libraries installed for the Vcpkg triplet x86-windows.`

Please do the following:
- post output of `vcpkg list` here
- make sure that all packages listed in pull request are installed in vcpkg. You can copy-paste installation command from the pull request description.
- clean contents of build directory and rerun `cmake -H. ...`",2018-05-09 07:29:59,2018-05-09 07:29:59
https://api.github.com/repos/hyperledger/iroha/issues/1319,https://api.github.com/repos/hyperledger/iroha/issues/comments/388541165,https://github.com/hyperledger/iroha/issues/1319#issuecomment-388541165,walkero,"@lebdron 

I solved the build problem, thank you.
I haven't installed visualstudio2017 with the English language pack,
vcpkg need the English language pack to be installed,
I reinstll visualstudio2017 with  the English language pack.

thanks",2018-05-12 08:59:08,2018-05-12 08:59:08
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/388359433,https://github.com/hyperledger/iroha/pull/1318#issuecomment-388359433,l4l,Please use clang-format,2018-05-11 13:12:57,2018-05-11 13:12:57
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/396739522,https://github.com/hyperledger/iroha/pull/1318#issuecomment-396739522,l4l,Any updates on that?,2018-06-12 21:25:48,2018-06-12 21:25:48
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/397135893,https://github.com/hyperledger/iroha/pull/1318#issuecomment-397135893,sjashwin,"Will be updated this weekend

Thank you
Ashwin Balasubramanian




> On Jun 12, 2018, at 4:25 PM, Kitsu <notifications@github.com> wrote:
> 
> Any updates on that?
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub <https://github.com/hyperledger/iroha/pull/1318#issuecomment-396739522>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AHArdBf9JWNODo0Ki3AGeu1MdDvUc8jlks5t8DHhgaJpZM4T3pX1>.
> 

",2018-06-14 01:13:17,2018-06-14 01:13:17
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/399461645,https://github.com/hyperledger/iroha/pull/1318#issuecomment-399461645,Alexey-N-Chernyshov,"Almost done, great job! Please, rebase and resolve conflicts.",2018-06-22 14:28:33,2018-06-22 14:28:33
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/399484618,https://github.com/hyperledger/iroha/pull/1318#issuecomment-399484618,Alexey-N-Chernyshov,"Please, rebase and resolve conflicts.",2018-06-22 15:39:12,2018-06-22 15:39:12
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/401759672,https://github.com/hyperledger/iroha/pull/1318#issuecomment-401759672,l4l,It seems there's no action for 10 days already. Are you planning to continue?,2018-07-02 10:38:33,2018-07-02 10:38:33
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/402600023,https://github.com/hyperledger/iroha/pull/1318#issuecomment-402600023,sjashwin,"Hey,

I’m sorry for the delay. I was busy with my course work in my college. 
I need to admit that I don’t know how to rebase and resolve the conflicts.
I would be happy if you send me the steps or resources to read about it. It will be of a great help to me.

Sorry for the delay.

Thank you

Sent from my iPhone

> On Jul 2, 2018, at 5:38 AM, Kitsu <notifications@github.com> wrote:
> 
> It seems there's no action for 10 days already. Are you planning to continue?
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub, or mute the thread.
",2018-07-05 03:56:19,2018-07-05 03:56:19
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/402601006,https://github.com/hyperledger/iroha/pull/1318#issuecomment-402601006,sjashwin,"This is my first project I’am  contributing to. I don’t know git in depth but would like to learn while contributing to the project.

Thank you 
Sent from my iPhone

> On Jul 2, 2018, at 5:38 AM, Kitsu <notifications@github.com> wrote:
> 
> It seems there's no action for 10 days already. Are you planning to continue?
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub, or mute the thread.
",2018-07-05 04:06:16,2018-07-05 04:06:16
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/402689409,https://github.com/hyperledger/iroha/pull/1318#issuecomment-402689409,l4l,"You basically need to update you branch know. It's possible either to use ""Resolve conflicts"" on the github, or merge actual develop branch (`git fetch; git merge origin/develop --signoff`) and resolve exactly same conflicts",2018-07-05 11:14:15,2018-07-05 11:14:15
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/407758417,https://github.com/hyperledger/iroha/pull/1318#issuecomment-407758417,lebdron,Hi @sjashwin ! Any updates on the pull request?,2018-07-25 13:42:49,2018-07-25 13:42:49
https://api.github.com/repos/hyperledger/iroha/issues/1318,https://api.github.com/repos/hyperledger/iroha/issues/comments/422175844,https://github.com/hyperledger/iroha/pull/1318#issuecomment-422175844,l4l,Close since outdated,2018-09-17 21:20:57,2018-09-17 21:20:57
https://api.github.com/repos/hyperledger/iroha/issues/1316,https://api.github.com/repos/hyperledger/iroha/issues/comments/387979058,https://github.com/hyperledger/iroha/pull/1316#issuecomment-387979058,nickaleks,Hi! First of all thank you for taking your time to contribute. We will take a look at your PR shortly.,2018-05-10 07:45:38,2018-05-10 07:45:47
https://api.github.com/repos/hyperledger/iroha/issues/1316,https://api.github.com/repos/hyperledger/iroha/issues/comments/401759130,https://github.com/hyperledger/iroha/pull/1316#issuecomment-401759130,l4l,Any updates on that?,2018-07-02 10:37:18,2018-07-02 10:37:18
https://api.github.com/repos/hyperledger/iroha/issues/1316,https://api.github.com/repos/hyperledger/iroha/issues/comments/422175185,https://github.com/hyperledger/iroha/pull/1316#issuecomment-422175185,l4l,Since there's no update for a long time I'm closing that pr. Feel free to rebase onto dev branch and propose these fixes again ,2018-09-17 21:18:45,2018-09-17 21:18:45
https://api.github.com/repos/hyperledger/iroha/issues/1314,https://api.github.com/repos/hyperledger/iroha/issues/comments/387525090,https://github.com/hyperledger/iroha/pull/1314#issuecomment-387525090,sorabot,"SonarQube analysis reported 21 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 20 minor

#### Top 10 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L225](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L225): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L145](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/iroha-cli/interactive/interactive_transaction_cli.hpp#L145): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L73](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/irohad/ametsuchi/impl/postgres_block_query.hpp#L73): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L81](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/irohad/ametsuchi/impl/postgres_block_query.hpp#L81): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L91](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/irohad/ametsuchi/impl/postgres_block_query.hpp#L91): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L112](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L112): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L65](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/irohad/consensus/yac/impl/yac_gate_impl.hpp#L65): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L160](https://github.com/hyperledger/iroha/blob/af6deb63ac1005d912714a8df173c7924225c523/irohad/model/converters/impl/pb_query_response_factory.cpp#L160): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-08 20:03:11,2018-05-08 20:03:11
https://api.github.com/repos/hyperledger/iroha/issues/1313,https://api.github.com/repos/hyperledger/iroha/issues/comments/388369639,https://github.com/hyperledger/iroha/pull/1313#issuecomment-388369639,bakhtin,Consider rebasing commits that were not signed-off. You'd better squash most of your commits either as they have the same name.,2018-05-11 13:51:00,2018-05-11 13:51:00
https://api.github.com/repos/hyperledger/iroha/issues/1312,https://api.github.com/repos/hyperledger/iroha/issues/comments/390507687,https://github.com/hyperledger/iroha/pull/1312#issuecomment-390507687,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [stateful_validator_impl.hpp#L55](https://github.com/hyperledger/iroha/blob/b413d3391241bf8e4ccb070c629638172462743c/irohad/validation/impl/stateful_validator_impl.hpp#L55): Unused private function: 'StatefulValidatorImpl::signaturesSubset' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L150](https://github.com/hyperledger/iroha/blob/b413d3391241bf8e4ccb070c629638172462743c/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L150): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-20 20:05:29,2018-05-20 20:05:29
https://api.github.com/repos/hyperledger/iroha/issues/1311,https://api.github.com/repos/hyperledger/iroha/issues/comments/388464213,https://github.com/hyperledger/iroha/pull/1311#issuecomment-388464213,lebdron,"```
Failures (2):
73:   JUnit Jupiter:BuilderTest:grantPermissionWithInvalidName()
73:     MethodSource [className = 'BuilderTest', methodName = 'grantPermissionWithInvalidName', methodParameterTypes = '']
73:     => org.opentest4j.AssertionFailedError: Expected java.lang.IllegalArgumentException to be thrown, but nothing was thrown.
73:   JUnit Jupiter:BuilderTest:revokePermissionWithInvalidName()
73:     MethodSource [className = 'BuilderTest', methodName = 'revokePermissionWithInvalidName', methodParameterTypes = '']
73:     => org.opentest4j.AssertionFailedError: Expected java.lang.IllegalArgumentException to be thrown, but nothing was thrown.
73: 
```
MacOS, clang 6",2018-05-11 19:33:01,2018-05-11 19:33:01
https://api.github.com/repos/hyperledger/iroha/issues/1310,https://api.github.com/repos/hyperledger/iroha/issues/comments/387370231,https://github.com/hyperledger/iroha/pull/1310#issuecomment-387370231,x3medima17,"When I run it 10000 times using `./build/test_bin/consensus_sunny_day --gtest_repeat=1000 --gtest_throw_on_failure` it fails due to big amount of opened files.
https://gist.github.com/x3medima17/75e3b520766124183ccea0286554a67a",2018-05-08 11:19:24,2018-05-08 11:19:24
https://api.github.com/repos/hyperledger/iroha/issues/1309,https://api.github.com/repos/hyperledger/iroha/issues/comments/387158731,https://github.com/hyperledger/iroha/pull/1309#issuecomment-387158731,sorabot,"SonarQube analysis reported 21 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 20 minor

#### Top 10 issues

1. ![MAJOR][MAJOR] [query_response_template.hpp#L225](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L225): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)
1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L145](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/iroha-cli/interactive/interactive_transaction_cli.hpp#L145): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L73](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/irohad/ametsuchi/impl/postgres_block_query.hpp#L73): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L81](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/irohad/ametsuchi/impl/postgres_block_query.hpp#L81): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L91](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/irohad/ametsuchi/impl/postgres_block_query.hpp#L91): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L112](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L112): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L65](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/irohad/consensus/yac/impl/yac_gate_impl.hpp#L65): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L160](https://github.com/hyperledger/iroha/blob/eb01e827b6406ae6a1d955e9c2e38046b41ee872/irohad/model/converters/impl/pb_query_response_factory.cpp#L160): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-07 18:29:00,2018-05-07 18:29:00
https://api.github.com/repos/hyperledger/iroha/issues/1308,https://api.github.com/repos/hyperledger/iroha/issues/comments/387140466,https://github.com/hyperledger/iroha/pull/1308#issuecomment-387140466,laSinteZ,"@sjashwin thank you for you work!
However, we have some requirements:
1. Please make a little bit more detailed PR description (like here: https://github.com/hyperledger/iroha/pull/1297)
2. Please, sign-off your commit with DCO (https://github.com/apps/dco). It's Hyperledger's requirement. You can `git reset --soft HEAD~` to ammend previous commit and after it recommit again with `-s` option. After it, you need to force push a commit, so we can see it here.",2018-05-07 17:29:12,2018-05-07 17:29:12
https://api.github.com/repos/hyperledger/iroha/issues/1308,https://api.github.com/repos/hyperledger/iroha/issues/comments/387247809,https://github.com/hyperledger/iroha/pull/1308#issuecomment-387247809,sjashwin,@laSinteZ I've made the required changes.,2018-05-08 00:35:14,2018-05-08 00:35:14
https://api.github.com/repos/hyperledger/iroha/issues/1308,https://api.github.com/repos/hyperledger/iroha/issues/comments/387507959,https://github.com/hyperledger/iroha/pull/1308#issuecomment-387507959,laSinteZ,"Oh @sjashwin I see that you've accidentally pushed code related to Segmentation fault on negative precision into this PR. Could you please remove unrelated to this PR commits, since we can't merge it otherwise? 😔",2018-05-08 19:01:53,2018-05-08 19:01:53
https://api.github.com/repos/hyperledger/iroha/issues/1306,https://api.github.com/repos/hyperledger/iroha/issues/comments/454366597,https://github.com/hyperledger/iroha/issues/1306#issuecomment-454366597,LiraLemur,PR closed by the reporter. Builders are not needed mostly at this point. ,2019-01-15 11:52:30,2019-01-15 11:52:30
https://api.github.com/repos/hyperledger/iroha/issues/1305,https://api.github.com/repos/hyperledger/iroha/issues/comments/390539865,https://github.com/hyperledger/iroha/pull/1305#issuecomment-390539865,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L75](https://github.com/hyperledger/iroha/blob/23c2513a84148ed669e0e683fdeec5d121199226/irohad/ametsuchi/impl/postgres_block_query.hpp#L75): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L83](https://github.com/hyperledger/iroha/blob/23c2513a84148ed669e0e683fdeec5d121199226/irohad/ametsuchi/impl/postgres_block_query.hpp#L83): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L93](https://github.com/hyperledger/iroha/blob/23c2513a84148ed669e0e683fdeec5d121199226/irohad/ametsuchi/impl/postgres_block_query.hpp#L93): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-21 02:54:25,2018-05-21 02:54:25
https://api.github.com/repos/hyperledger/iroha/issues/1304,https://api.github.com/repos/hyperledger/iroha/issues/comments/386863522,https://github.com/hyperledger/iroha/issues/1304#issuecomment-386863522,laSinteZ,"@sjashwin could you please explain your situation more? If you are planning to build Iroha, you need to install boost library (for example with homebrew) as stated in docs:
http://iroha.readthedocs.io/en/latest/guides/build.html#macos",2018-05-06 08:39:30,2018-05-06 08:39:54
https://api.github.com/repos/hyperledger/iroha/issues/1304,https://api.github.com/repos/hyperledger/iroha/issues/comments/386886103,https://github.com/hyperledger/iroha/issues/1304#issuecomment-386886103,sjashwin,"Im looking to contribute to the project. Iroha runs fine. When I make changes to the code and compile it again I get a Fatal error 'boost/filesystem.hpp' file not found.

<img width=""626"" alt=""screen shot 2018-05-06 at 10 03 21 am"" src=""https://user-images.githubusercontent.com/7351156/39674681-0ef981ee-5115-11e8-8a02-a756e2bce9da.png"">


I've searched for work arounds. But couldn't find any.
",2018-05-06 15:07:31,2018-05-06 15:07:31
https://api.github.com/repos/hyperledger/iroha/issues/1304,https://api.github.com/repos/hyperledger/iroha/issues/comments/386886717,https://github.com/hyperledger/iroha/issues/1304#issuecomment-386886717,laSinteZ,"Please make sure that you have all the required dependencies. Please specify your version of Cmake and Boost libraries, if you have them installed.",2018-05-06 15:16:29,2018-05-06 17:02:49
https://api.github.com/repos/hyperledger/iroha/issues/1304,https://api.github.com/repos/hyperledger/iroha/issues/comments/386924237,https://github.com/hyperledger/iroha/issues/1304#issuecomment-386924237,sjashwin,Boost version is 1.67.0 and cmake version is 3.11.1,2018-05-06 23:15:43,2018-05-07 00:40:41
https://api.github.com/repos/hyperledger/iroha/issues/1304,https://api.github.com/repos/hyperledger/iroha/issues/comments/386964357,https://github.com/hyperledger/iroha/issues/1304#issuecomment-386964357,laSinteZ,@sjashwin could you also specify which version of Iroha you are building (master/develop branch) and send us all output of the build phase?,2018-05-07 05:54:16,2018-05-07 05:54:16
https://api.github.com/repos/hyperledger/iroha/issues/1304,https://api.github.com/repos/hyperledger/iroha/issues/comments/386968079,https://github.com/hyperledger/iroha/issues/1304#issuecomment-386968079,sjashwin,"```
-- The C compiler identification is AppleClang 9.1.0.9020039
-- The CXX compiler identification is AppleClang 9.1.0.9020039
-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc
-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++
-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- -DCMAKE_BUILD_TYPE=Debug
-- -DTESTING=ON
-- -DBENCHMARKING=OFF
-- -DFUZZING=OFF
-- -DCOVERAGE=OFF
-- -DPACKAGE_ZIP=OFF
-- -DPACKAGE_TGZ=OFF
-- -DPACKAGE_RPM=OFF
-- -DPACKAGE_DEB=OFF
-- -DENABLE_LIBS_PACKAGING=ON
-- -DSWIG_PYTHON=OFF
-- -DSWIG_JAVA=OFF
-- -DSUPPORT_PYTHON2=OFF
-- -DSWIG_CSHARP=OFF
-- -DSWIG_NODE=OFF
-- -DSHARED_MODEL_DISABLE_COMPATIBILITY=OFF
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - found
-- Found Threads: TRUE  
-- Could NOT find gtest (missing: gtest_INCLUDE_DIR gtest_LIBRARY gtest_MAIN_LIBRARY gmock_INCLUDE_DIR gmock_LIBRARY gmock_MAIN_LIBRARY) 
-- Could NOT find spdlog (missing: spdlog_INCLUDE_DIR) 
-- Found protobuf: /usr/local/include  
-- Found grpc: /usr/local/lib/libgrpc.dylib  
-- Could NOT find rapidjson (missing: rapidjson_INCLUDE_DIR) 
-- Found pq: /usr/local/include  
-- Found pqxx: /usr/local/include  
-- Found gflags: /usr/local/include  
-- Could NOT find rxcpp (missing: rxcpp_INCLUDE_DIR) 
-- Could NOT find tbb (missing: tbb_INCLUDE_DIR tbb_LIBRARY) 
-- Boost version: 1.67.0
-- Found the following Boost libraries:
--   filesystem
--   system
-- Could NOT find ed25519 (missing: ed25519_INCLUDE_DIR ed25519_LIBRARY) 
-- Configuring done
-- Generating done
-- Build files have been written to: /Users/ashwin/CLionProjects/iroha/build
-MacBook-Pro:build $ make -j4
Scanning dependencies of target gabime_spdlog
Scanning dependencies of target 01org_tbb
Scanning dependencies of target miloyip_rapidjson
Scanning dependencies of target hyperledger_ed25519
[  0%] Creating directories for 'hyperledger_ed25519'
[  0%] Creating directories for '01org_tbb'
[  0%] Creating directories for 'miloyip_rapidjson'
[  0%] Creating directories for 'gabime_spdlog'
[  0%] Performing download step (git clone) for '01org_tbb'
[  0%] Performing download step (git clone) for 'miloyip_rapidjson'
[  0%] Performing download step (git clone) for 'gabime_spdlog'
[  0%] Performing download step (git clone) for 'hyperledger_ed25519'
Cloning into '01org_tbb'...
Cloning into 'miloyip_rapidjson'...
Cloning into 'gabime_spdlog'...
Cloning into 'hyperledger_ed25519'...
Note: checking out 'e7188b8393dbe5ac54378610d53630bd4a180038'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at e7188b8... Merge pull request #3 from laSinteZ/patch-1
[  0%] No patch step for 'hyperledger_ed25519'
[  0%] No update step for 'hyperledger_ed25519'
[  1%] Performing configure step for 'hyperledger_ed25519'
-- The C compiler identification is AppleClang 9.1.0.9020039
-- The CXX compiler identification is AppleClang 9.1.0.9020039
-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc
-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
Note: checking out 'ccd675a286f457068ee8c823f8207f13c2325b26'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at ccd675a... version 0.16.3
-- Detecting C compile features - done
-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++
[  1%] No patch step for 'gabime_spdlog'
-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
[  2%] No update step for 'gabime_spdlog'
[  2%] No configure step for 'gabime_spdlog'
[  2%] No build step for 'gabime_spdlog'
[  2%] No install step for 'gabime_spdlog'
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
[  3%] No test step for 'gabime_spdlog'
[  3%] Completed 'gabime_spdlog'
[  3%] Built target gabime_spdlog
Scanning dependencies of target reactive_extensions_rxcpp
[  3%] Creating directories for 'reactive_extensions_rxcpp'
[  3%] Performing download step (git clone) for 'reactive_extensions_rxcpp'
Cloning into 'reactive_extensions_rxcpp'...
-- Detecting CXX compile features - done
-- EDIMPL=ref10 is selected (Ed25519 implementation)
-- HASH=sha3_brainhub is selected (SHA implementation)
-- RANDOM=dev_urandom is selected (RNG implementation)
-- BUILD=STATIC is selected (library build type)
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- Configuring done
-- Generating done
-- Build files have been written to: /Users/ashwin/CLionProjects/iroha/external/src/hyperledger_ed25519-build
[  3%] Performing build step for 'hyperledger_ed25519'
Scanning dependencies of target dev_urandom
[  2%] Building C object lib/randombytes/urandom/CMakeFiles/dev_urandom.dir/urandom.c.o
[  2%] Built target dev_urandom
Scanning dependencies of target sha3_brainhub
[  4%] Building C object lib/hash/sha3_brainhub/CMakeFiles/sha3_brainhub.dir/sha3.c.o
[  6%] Building C object lib/hash/sha3_brainhub/CMakeFiles/sha3_brainhub.dir/sha3_256.c.o
[  9%] Building C object lib/hash/sha3_brainhub/CMakeFiles/sha3_brainhub.dir/sha3_512.c.o
[  9%] Built target sha3_brainhub
Scanning dependencies of target ref10
[ 11%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ed25519.c.o
[ 13%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_0.c.o
[ 16%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_1.c.o
[ 18%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_add.c.o
[ 20%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_cmov.c.o
[ 23%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_copy.c.o
[ 25%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_frombytes.c.o
[ 27%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_invert.c.o
[ 30%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_isnegative.c.o
[ 32%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_isnonzero.c.o
[ 34%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_mul.c.o
[ 37%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_neg.c.o
[ 39%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_pow22523.c.o
[ 41%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_sq.c.o
[ 44%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_sq2.c.o
[ 46%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_sub.c.o
[ 48%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/fe_tobytes.c.o
[ 51%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_add.c.o
[ 53%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_double_scalarmult.c.o
[ 55%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_frombytes.c.o
[ 58%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_madd.c.o
[ 60%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_msub.c.o
[ 62%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_p1p1_to_p2.c.o
[ 65%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_p1p1_to_p3.c.o
[ 67%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_p2_0.c.o
[ 69%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_p2_dbl.c.o
[ 72%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_p3_0.c.o
[ 74%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_p3_dbl.c.o
[ 76%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_p3_to_cached.c.o
Note: checking out 'eb6336ad29450f2a64af5123ca1b9429ff6bc11d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at eb6336a... Committing Intel(R) TBB 2017 Update 7 source code
[ 79%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_p3_to_p2.c.o
[ 81%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_p3_tobytes.c.o
[ 83%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_precomp_0.c.o
[ 86%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_scalarmult_base.c.o
[ 88%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_sub.c.o
[ 90%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/ge_tobytes.c.o
[  3%] No patch step for '01org_tbb'
[ 93%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/sc_muladd.c.o
[  4%] No update step for '01org_tbb'
[ 95%] Building C object lib/ed25519/ref10/CMakeFiles/ref10.dir/sc_reduce.c.o
[  4%] No configure step for '01org_tbb'
[ 95%] Built target ref10
[  4%] Performing build step for '01org_tbb'
Scanning dependencies of target ed25519
[ 97%] Building C object CMakeFiles/ed25519.dir/src/ed25519.c.o
[100%] Linking C static library libed25519.a
Created ./build/build_release and ..._debug directories
[100%] Built target ed25519
../../build/Makefile.tbb:32: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc9.1.0_os10.13.4
[  5%] No install step for 'hyperledger_ed25519'
[  5%] No test step for 'hyperledger_ed25519'
[  5%] Completed 'hyperledger_ed25519'
[  5%] Built target hyperledger_ed25519
Scanning dependencies of target google_test
[  5%] Creating directories for 'google_test'
[  5%] Performing download step (git clone) for 'google_test'
Cloning into 'google_test'...
Note: checking out 'f54b0e47a08782a6131cc3d60f94d038fa6e0a51'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at f54b0e47... Merge pull request #714 from miloyip/version1.1.0
Submodule 'thirdparty/gtest' (https://github.com/google/googletest.git) registered for path 'thirdparty/gtest'
Cloning into '/Users/ashwin/CLionProjects/iroha/external/src/miloyip_rapidjson/thirdparty/gtest'...
Note: checking out 'ec44c6c1675c25b9827aacd08c02433cccde7780'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at ec44c6c... Merge pull request #821 from mazong1123/master
[  6%] No patch step for 'google_test'
[  6%] No update step for 'google_test'
Submodule path 'thirdparty/gtest': checked out '0a439623f75c029912728d80cb7f1b8b48739ca4'
[  6%] Performing configure step for 'google_test'
[  7%] No patch step for 'miloyip_rapidjson'
[  7%] No update step for 'miloyip_rapidjson'
[  7%] No configure step for 'miloyip_rapidjson'
-- The C compiler identification is AppleClang 9.1.0.9020039
[  7%] No build step for 'miloyip_rapidjson'
-- The CXX compiler identification is AppleClang 9.1.0.9020039
-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc
[  8%] No install step for 'miloyip_rapidjson'
[  8%] No test step for 'miloyip_rapidjson'
[  8%] Completed 'miloyip_rapidjson'
[  8%] Built target miloyip_rapidjson
-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
[  9%] Generating ../../schema/proposal.pb.h, ../../schema/proposal.pb.cc
[  9%] Generating ../../schema/block.pb.h, ../../schema/block.pb.cc
[ 10%] Generating ../../schema/commands.pb.h, ../../schema/commands.pb.cc
[ 10%] Generating ../../schema/primitive.pb.h, ../../schema/primitive.pb.cc
[ 10%] Generating ../../schema/queries.pb.h, ../../schema/queries.pb.cc
[ 10%] Generating ../../schema/responses.pb.h, ../../schema/responses.pb.cc
[ 10%] Generating ../../schema/endpoint.pb.h, ../../schema/endpoint.pb.cc
-- Detecting C compile features - done
-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++
Scanning dependencies of target schema
[ 10%] Building CXX object schema/CMakeFiles/schema.dir/block.pb.o
-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
Note: checking out '1b2e0589f19cb34d8cd58803677701dcf2161876'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at 1b2e058... Fix rxcpp::observable<>::range<T>() when T is unsigned type
Submodule 'ext/catch' (https://github.com/philsquared/Catch.git) registered for path 'ext/catch'
Cloning into '/Users/ashwin/CLionProjects/iroha/external/src/reactive_extensions_rxcpp/ext/catch'...
-- Detecting CXX compile features - done
-- Found PythonInterp: /usr/bin/python (found version ""2.7.10"") 
-- Looking for pthread.h
[ 10%] Building CXX object schema/CMakeFiles/schema.dir/commands.pb.o
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - found
-- Found Threads: TRUE  
-- Configuring done
-- Generating done
-- Build files have been written to: /Users/ashwin/CLionProjects/iroha/external/src/google_test-build
[ 10%] Performing build step for 'google_test'
Scanning dependencies of target gmock
[  9%] Building CXX object googlemock/CMakeFiles/gmock.dir/__/googletest/src/gtest-all.cc.o
Submodule path 'ext/catch': checked out 'ad942885ceab72d421fc6b07aedf0c012ef90e41'
[ 10%] No patch step for 'reactive_extensions_rxcpp'
[ 10%] Building CXX object schema/CMakeFiles/schema.dir/primitive.pb.o
[ 11%] No update step for 'reactive_extensions_rxcpp'
[ 11%] No configure step for 'reactive_extensions_rxcpp'
[ 11%] No build step for 'reactive_extensions_rxcpp'
[ 11%] No install step for 'reactive_extensions_rxcpp'
[ 11%] No test step for 'reactive_extensions_rxcpp'
[ 11%] Completed 'reactive_extensions_rxcpp'
[ 11%] Built target reactive_extensions_rxcpp
Scanning dependencies of target gmock_main
[ 18%] Building CXX object googlemock/CMakeFiles/gmock_main.dir/__/googletest/src/gtest-all.cc.o
[ 27%] Building CXX object googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o
[ 12%] Building CXX object schema/CMakeFiles/schema.dir/queries.pb.o
[ 12%] Building CXX object schema/CMakeFiles/schema.dir/responses.pb.o
[ 36%] Linking CXX static library libgmock.a
[ 36%] Built target gmock
[ 12%] Generating ../../schema/yac.grpc.pb.h, ../../schema/yac.grpc.pb.cc
[ 12%] Generating ../../schema/yac.pb.h, ../../schema/yac.pb.cc
Scanning dependencies of target yac_grpc
[ 13%] Building CXX object schema/CMakeFiles/yac_grpc.dir/yac.pb.o
[ 45%] Building CXX object googlemock/CMakeFiles/gmock_main.dir/src/gmock-all.cc.o
[ 13%] Building CXX object schema/CMakeFiles/yac_grpc.dir/yac.grpc.pb.o
[ 13%] Building CXX object schema/CMakeFiles/schema.dir/endpoint.pb.o
[ 54%] Building CXX object googlemock/CMakeFiles/gmock_main.dir/src/gmock_main.cc.o
[ 63%] Linking CXX static library libgmock_main.a
[ 13%] Building CXX object schema/CMakeFiles/schema.dir/proposal.pb.o
[ 63%] Built target gmock_main
Scanning dependencies of target gtest
[ 72%] Building CXX object googlemock/gtest/CMakeFiles/gtest.dir/src/gtest-all.cc.o
[ 13%] Linking CXX static library libyac_grpc.a
[ 13%] Built target yac_grpc
Scanning dependencies of target iroha_amount
[ 13%] Linking CXX static library libschema.a
[ 13%] Built target schema
[ 14%] Building CXX object libs/amount/CMakeFiles/iroha_amount.dir/amount.o
Scanning dependencies of target logger
[ 15%] Building CXX object libs/logger/CMakeFiles/logger.dir/logger.o
[ 81%] Linking CXX static library libgtest.a
[ 81%] Built target gtest
Scanning dependencies of target gtest_main
[ 90%] Building CXX object googlemock/gtest/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o
[100%] Linking CXX static library libgtest_main.a
[100%] Built target gtest_main
[ 15%] No install step for 'google_test'
[ 15%] No test step for 'google_test'
[ 16%] Completed 'google_test'
[ 16%] Built target google_test
Scanning dependencies of target hash
[ 16%] Building CXX object shared_model/cryptography/ed25519_sha3_impl/internal/CMakeFiles/hash.dir/sha3_hash.o
[ 17%] Linking CXX static library libhash.a
[ 17%] Built target hash
Scanning dependencies of target shared_model_cryptography_model
[ 17%] Linking CXX static library liblogger.a
[ 17%] Building CXX object shared_model/cryptography/model_impl/CMakeFiles/shared_model_cryptography_model.dir/blob.o
[ 17%] Built target logger
Scanning dependencies of target ed25519_crypto
[ 17%] Building CXX object shared_model/cryptography/ed25519_sha3_impl/internal/CMakeFiles/ed25519_crypto.dir/ed25519_impl.o
../../build/Makefile.tbb:32: CONFIG: cfg=release arch=intel64 compiler=clang target=macos runtime=cc9.1.0_os10.13.4
[ 18%] Linking CXX static library libed25519_crypto.a
[ 18%] Building CXX object shared_model/cryptography/model_impl/CMakeFiles/shared_model_cryptography_model.dir/hash.o
[ 18%] Built target ed25519_crypto
[ 18%] Linking CXX static library libiroha_amount.a
[ 18%] Built target iroha_amount
Scanning dependencies of target generator
[ 18%] Building CXX object shared_model/cryptography/model_impl/CMakeFiles/shared_model_cryptography_model.dir/keypair.o
Scanning dependencies of target parser
[ 18%] Building CXX object libs/generator/CMakeFiles/generator.dir/generator.o
[ 19%] Building CXX object libs/parser/CMakeFiles/parser.dir/parser.o
In file included from /Users/ashwin/CLionProjects/iroha/libs/parser/parser.cpp:18:
/Users/ashwin/CLionProjects/iroha/libs/parser/parser.hpp:20:10: fatal error: 'boost/optional.hpp' file not found
#include <boost/optional.hpp>
         ^~~~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [libs/parser/CMakeFiles/parser.dir/parser.o] Error 1
make[1]: *** [libs/parser/CMakeFiles/parser.dir/all] Error 2
make[1]: *** Waiting for unfinished jobs....
[ 19%] Building CXX object shared_model/cryptography/model_impl/CMakeFiles/shared_model_cryptography_model.dir/private_key.o
[ 19%] Linking CXX static library libgenerator.a
[ 19%] Built target generator
[ 20%] Building CXX object shared_model/cryptography/model_impl/CMakeFiles/shared_model_cryptography_model.dir/public_key.o
[ 20%] Building CXX object shared_model/cryptography/model_impl/CMakeFiles/shared_model_cryptography_model.dir/seed.o
[ 20%] Building CXX object shared_model/cryptography/model_impl/CMakeFiles/shared_model_cryptography_model.dir/signed.o
[ 20%] Linking CXX static library libshared_model_cryptography_model.a
[ 20%] Built target shared_model_cryptography_model
[ 20%] No install step for '01org_tbb'
[ 20%] No test step for '01org_tbb'
[ 20%] Completed '01org_tbb'
[ 20%] Built target 01org_tbb
make: *** [all] Error 2
```
This is the output. I have been trying to build from develop branch.
`cmake` has found two boost libraries filesystem and system. But while `make` the boost include file hasn't been found. ",2018-05-07 06:17:53,2018-05-07 06:23:00
https://api.github.com/repos/hyperledger/iroha/issues/1304,https://api.github.com/repos/hyperledger/iroha/issues/comments/386991837,https://github.com/hyperledger/iroha/issues/1304#issuecomment-386991837,lebdron,"@sjashwin Could you specify how did you install boost in the system, and how you run configure step before build?
You have found bugs in our build scripts, and it would be great if you fix them. We had the idea for such kind of bugs, but did not introduce a CI test for it yet.
The idea is that compiler should know about include paths for `.cpp` files.
Problem with `parser.cpp`:
https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/libs/parser/parser.hpp#L20
But it is not linked to boost in build script:
https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/libs/parser/CMakeLists.txt#L1
To fix such error, the target has to be linked with boost:
```CMake
target_link_libraries(parser
  boost
  )
```
Similar step has to be done with `libs_common`, which has `files.cpp`, and `common_execution`, which has `common_executor.cpp`. Since `target_link_libraries` for these two targets is already done for other libraries, please append `boost` to their lists.",2018-05-07 08:10:55,2018-05-07 08:14:55
https://api.github.com/repos/hyperledger/iroha/issues/1304,https://api.github.com/repos/hyperledger/iroha/issues/comments/387138127,https://github.com/hyperledger/iroha/issues/1304#issuecomment-387138127,sjashwin,@laSinteZ I've made a pull request fixing all the bugs associated with the boost header files. The build is successful locally. Pull request number #1308 . Please review the pull request.,2018-05-07 17:21:10,2018-05-07 17:21:47
https://api.github.com/repos/hyperledger/iroha/issues/1301,https://api.github.com/repos/hyperledger/iroha/issues/comments/386580963,https://github.com/hyperledger/iroha/issues/1301#issuecomment-386580963,luckychess,"That's possible but unfortunately that will be not enough. Actually all class names, method names etc should contain package prefix inside shared library (libirohajava,so or libirohajava.jni). That means that shared library should also be recompiled for every package name.
Any non-empty package name will be fine for you, right? Please correct me if I'm wrong.",2018-05-04 12:06:05,2018-05-04 12:06:05
https://api.github.com/repos/hyperledger/iroha/issues/1301,https://api.github.com/repos/hyperledger/iroha/issues/comments/386779316,https://github.com/hyperledger/iroha/issues/1301#issuecomment-386779316,walkero,"hi, @luckychess thank you.
Yes，that is what i want, 
you are right, i added package name to those none package name classes
in iroha-bindings-example.jar, but that does not work.
How to add package name and recompile the libirohajava.so ?
Do you have any instructive document for my reference?

thanks
",2018-05-05 04:54:18,2018-05-05 04:54:18
https://api.github.com/repos/hyperledger/iroha/issues/1301,https://api.github.com/repos/hyperledger/iroha/issues/comments/387312937,https://github.com/hyperledger/iroha/issues/1301#issuecomment-387312937,walkero,"I found a file for reference:
`iroha/shared_model/packages/android/android-build.sh`
and modified the CMakeLists.txt file
```
	diff CMakeLists.txt CMakeLists.txt.bak 
		68c68
		<     SET(CMAKE_SWIG_FLAGS ${CMAKE_SWIG_FLAGS} -package sun)
		---
		>     find_package(JNI REQUIRED)
```

thanks
",2018-05-08 07:36:13,2018-05-08 07:36:13
https://api.github.com/repos/hyperledger/iroha/issues/1301,https://api.github.com/repos/hyperledger/iroha/issues/comments/387318696,https://github.com/hyperledger/iroha/issues/1301#issuecomment-387318696,laSinteZ,"@walkero thank you for your great job! Could you please open a PR with those changes, maybe it makes sense to add them directly to Iroha? (Don't forget to sign your commits with DCO though [github.com/apps/dco](github.com/apps/dco) and describe changes)",2018-05-08 07:59:54,2018-05-08 09:12:42
https://api.github.com/repos/hyperledger/iroha/issues/1301,https://api.github.com/repos/hyperledger/iroha/issues/comments/387615499,https://github.com/hyperledger/iroha/issues/1301#issuecomment-387615499,walkero,"@laSinteZ thank you
I will try to do it. It will be my first time to open a PR, I'll learn how to do it first.

",2018-05-09 04:19:43,2018-05-09 04:19:43
https://api.github.com/repos/hyperledger/iroha/issues/1301,https://api.github.com/repos/hyperledger/iroha/issues/comments/387647029,https://github.com/hyperledger/iroha/issues/1301#issuecomment-387647029,laSinteZ,"@walkero if you have any problems with it – we are glad to help. To make things faster, you can use https://gitter.im/hyperledger-iroha/Lobby or in https://chat.hyperledger.org/channel/iroha :)",2018-05-09 07:28:08,2018-05-09 07:28:08
https://api.github.com/repos/hyperledger/iroha/issues/1301,https://api.github.com/repos/hyperledger/iroha/issues/comments/389254181,https://github.com/hyperledger/iroha/issues/1301#issuecomment-389254181,walkero,"hi, @laSinteZ 
I opened a PR.
thanks",2018-05-15 17:46:53,2018-05-15 17:46:53
https://api.github.com/repos/hyperledger/iroha/issues/1300,https://api.github.com/repos/hyperledger/iroha/issues/comments/386796533,https://github.com/hyperledger/iroha/pull/1300#issuecomment-386796533,ZeekHuge,@lebdron : I have made the required changes (addition of `--overwrite_genesis` flag) in my local repo. Should I also add this flag in the docker entrypoint scripts like [here](https://github.com/hyperledger/iroha/blob/master/docker/release/x86_64/entrypoint.sh#L5) ? ,2018-05-05 10:44:10,2018-05-05 10:44:45
https://api.github.com/repos/hyperledger/iroha/issues/1300,https://api.github.com/repos/hyperledger/iroha/issues/comments/386832725,https://github.com/hyperledger/iroha/pull/1300#issuecomment-386832725,lebdron,"@ZeekHuge I don't think that default command should overwrite existing ledger, so no need to change the scripts. You can also modify this branch, so that changes will appear in this pull request.",2018-05-05 20:30:05,2018-05-05 20:30:05
https://api.github.com/repos/hyperledger/iroha/issues/1300,https://api.github.com/repos/hyperledger/iroha/issues/comments/386860814,https://github.com/hyperledger/iroha/pull/1300#issuecomment-386860814,ZeekHuge,"The docker image will always run in non-interactive mode (using docker run). right ? In that case, shouldnt the `--overwrite_genesis` flag added in the docker image (i.e. in the entrypoint.sh scripts) ? It probably wont let the daemon start otherwise (as it will be stuck at the confirmation). Am I missing something ?

Also, I have added more commits to the pull-request. Please review them.",2018-05-06 07:45:04,2018-05-06 09:32:15
https://api.github.com/repos/hyperledger/iroha/issues/1300,https://api.github.com/repos/hyperledger/iroha/issues/comments/390914704,https://github.com/hyperledger/iroha/pull/1300#issuecomment-390914704,lebdron,@ZeekHuge any updates on the pull request?,2018-05-22 08:55:25,2018-05-22 08:55:25
https://api.github.com/repos/hyperledger/iroha/issues/1300,https://api.github.com/repos/hyperledger/iroha/issues/comments/390950314,https://github.com/hyperledger/iroha/pull/1300#issuecomment-390950314,ZeekHuge,Hi ! Got busy at work. Will update it tonight.,2018-05-22 11:01:24,2018-05-22 11:01:24
https://api.github.com/repos/hyperledger/iroha/issues/1300,https://api.github.com/repos/hyperledger/iroha/issues/comments/392669188,https://github.com/hyperledger/iroha/pull/1300#issuecomment-392669188,ZeekHuge,Sorry for the delay. Had updated the pull request last night. Please review it.,2018-05-29 06:43:22,2018-05-29 06:43:22
https://api.github.com/repos/hyperledger/iroha/issues/1300,https://api.github.com/repos/hyperledger/iroha/issues/comments/397652274,https://github.com/hyperledger/iroha/pull/1300#issuecomment-397652274,ZeekHuge,"I am not sure if this is the right way to do it ..
But as discussed [here](https://github.com/hyperledger/iroha/pull/1300#discussion_r194001144), I rebased this fix branch over `develop` and then force pushed it.

Please review.",2018-06-15 15:10:13,2018-06-15 15:10:13
https://api.github.com/repos/hyperledger/iroha/issues/1300,https://api.github.com/repos/hyperledger/iroha/issues/comments/397815686,https://github.com/hyperledger/iroha/pull/1300#issuecomment-397815686,l4l,"Thanks, merged!",2018-06-16 14:24:10,2018-06-16 14:24:10
https://api.github.com/repos/hyperledger/iroha/issues/1296,https://api.github.com/repos/hyperledger/iroha/issues/comments/392678150,https://github.com/hyperledger/iroha/pull/1296#issuecomment-392678150,nickaleks, Fix comment above please,2018-05-29 07:23:19,2018-05-29 07:23:19
https://api.github.com/repos/hyperledger/iroha/issues/1296,https://api.github.com/repos/hyperledger/iroha/issues/comments/394322472,https://github.com/hyperledger/iroha/pull/1296#issuecomment-394322472,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [shared_proto_queries_test.cpp#L96](https://github.com/hyperledger/iroha/blob/0af0905d03d7eb83514e26519e972ad8dff9e368/test/module/shared_model/backend_proto/shared_proto_queries_test.cpp#L96): Variable 'asset_id' is assigned a value that is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunreadVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-06-04 11:29:33,2018-06-04 11:29:33
https://api.github.com/repos/hyperledger/iroha/issues/1295,https://api.github.com/repos/hyperledger/iroha/issues/comments/386350486,https://github.com/hyperledger/iroha/issues/1295#issuecomment-386350486,l4l,"What do you mean by ""other dependent dynamic link library""?
If you mean *.class files generated by swig, you may just copy them as is you copied **libirohajava.so**
If you mean other *.so libraries (like protobuf&boost), then they either should be installed in your system or placed in _external_ folder. Take a look at the list of such libs by `ldd path/to/libirohajava.so`",2018-05-03 16:13:38,2018-05-03 16:13:38
https://api.github.com/repos/hyperledger/iroha/issues/1295,https://api.github.com/repos/hyperledger/iroha/issues/comments/386366472,https://github.com/hyperledger/iroha/issues/1295#issuecomment-386366472,walkero,"@l4l thank you
i will try 
`ldd path/to/libirohajava.so`
then solve my problem.
",2018-05-03 17:06:14,2018-05-03 17:06:14
https://api.github.com/repos/hyperledger/iroha/issues/1295,https://api.github.com/repos/hyperledger/iroha/issues/comments/386465933,https://github.com/hyperledger/iroha/issues/1295#issuecomment-386465933,l4l,closing then,2018-05-03 23:23:56,2018-05-03 23:23:56
https://api.github.com/repos/hyperledger/iroha/issues/1295,https://api.github.com/repos/hyperledger/iroha/issues/comments/386501376,https://github.com/hyperledger/iroha/issues/1295#issuecomment-386501376,walkero,"hi, @l4l 

How to install libed25519.so.1.2.2 ？
Can i download libed25519 from internet, 
or use apt-get install some library(libed25519)?

```
ldd libirohajava.so 
	linux-vdso.so.1 =>  (0x00007ffd09d63000)
	libprotobuf.so => /usr/local/lib/libprotobuf.so (0x00007ff3af54c000)
	libed25519.so.1.2.2 => /usr/local/lib/libed25519.so.1.2.2 (0x00007ff3af339000)
	libstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007ff3aefb7000)
	libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007ff3aecae000)
	libgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007ff3aea98000)
	libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007ff3ae6ce000)
	libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007ff3ae4b1000)
	libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007ff3ae297000)
	/lib64/ld-linux-x86-64.so.2 (0x00007ff3b0246000)
```

thanks
",2018-05-04 04:09:50,2018-05-04 04:09:50
https://api.github.com/repos/hyperledger/iroha/issues/1295,https://api.github.com/repos/hyperledger/iroha/issues/comments/386566640,https://github.com/hyperledger/iroha/issues/1295#issuecomment-386566640,walkero,"hi
I find libed25519.so.1.2.2 file in iroha docker container,
and copy this file together with  libirohajava.so.

thanks",2018-05-04 10:53:29,2018-05-04 10:53:29
https://api.github.com/repos/hyperledger/iroha/issues/1295,https://api.github.com/repos/hyperledger/iroha/issues/comments/386575633,https://github.com/hyperledger/iroha/issues/1295#issuecomment-386575633,l4l,"libed25519 goes from this repo: https://github.com/hyperledger/iroha-ed25519
And it is built with the iroha (or might be compiled&installed at the system as standalone library)",2018-05-04 11:40:30,2018-05-04 11:40:30
https://api.github.com/repos/hyperledger/iroha/issues/1295,https://api.github.com/repos/hyperledger/iroha/issues/comments/387607363,https://github.com/hyperledger/iroha/issues/1295#issuecomment-387607363,walkero,@l4l  thank you very much.,2018-05-09 03:13:54,2018-05-09 03:13:54
https://api.github.com/repos/hyperledger/iroha/issues/1291,https://api.github.com/repos/hyperledger/iroha/issues/comments/386199057,https://github.com/hyperledger/iroha/pull/1291#issuecomment-386199057,sorabot,"SonarQube analysis reported 8 issues

1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/ee0b0da474ff979bffe147452337b936f0c20a21/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/ee0b0da474ff979bffe147452337b936f0c20a21/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/ee0b0da474ff979bffe147452337b936f0c20a21/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/ee0b0da474ff979bffe147452337b936f0c20a21/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/ee0b0da474ff979bffe147452337b936f0c20a21/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/ee0b0da474ff979bffe147452337b936f0c20a21/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/ee0b0da474ff979bffe147452337b936f0c20a21/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/ee0b0da474ff979bffe147452337b936f0c20a21/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-03 06:06:27,2018-05-03 06:06:27
https://api.github.com/repos/hyperledger/iroha/issues/1289,https://api.github.com/repos/hyperledger/iroha/issues/comments/385982126,https://github.com/hyperledger/iroha/pull/1289#issuecomment-385982126,igor-egorov,Please set u+x rights for build_library.sh,2018-05-02 13:43:52,2018-05-02 13:43:52
https://api.github.com/repos/hyperledger/iroha/issues/1288,https://api.github.com/repos/hyperledger/iroha/issues/comments/385941057,https://github.com/hyperledger/iroha/pull/1288#issuecomment-385941057,l4l,Maybe create full pr that entirely introduces the feature? Not only the permission name in the list,2018-05-02 11:03:38,2018-05-02 11:03:38
https://api.github.com/repos/hyperledger/iroha/issues/1288,https://api.github.com/repos/hyperledger/iroha/issues/comments/386191884,https://github.com/hyperledger/iroha/pull/1288#issuecomment-386191884,Solonets,@l4l that was the task,2018-05-03 04:59:17,2018-05-03 04:59:54
https://api.github.com/repos/hyperledger/iroha/issues/1284,https://api.github.com/repos/hyperledger/iroha/issues/comments/385192674,https://github.com/hyperledger/iroha/issues/1284#issuecomment-385192674,Pascal1H,"I used Puttygen to generade a key which was the wrong way.
I created a peers.list with the address 192.168.2.111 in it and then generated a genesis.block.
Out of which I took the key. And this one worked.",2018-04-28 17:31:31,2018-04-28 17:31:31
https://api.github.com/repos/hyperledger/iroha/issues/1283,https://api.github.com/repos/hyperledger/iroha/issues/comments/385185110,https://github.com/hyperledger/iroha/issues/1283#issuecomment-385185110,Pascal1H,"In the Iroha Container was already a generated genesis.block, the keys etc.. which didn't work (see my problem).

I then generated new once myself with first creating the peers.list:

`echo 'localhost:10001' > peers.list`
and then run:
`iroha-cli --genesis_block --peers_address peers.list`

Afterwards it worked! :-)",2018-04-28 15:41:22,2018-04-28 17:26:36
https://api.github.com/repos/hyperledger/iroha/issues/1280,https://api.github.com/repos/hyperledger/iroha/issues/comments/385175399,https://github.com/hyperledger/iroha/pull/1280#issuecomment-385175399,l4l,May someone explain why use separate for the Timer? Maybe it's better just remove an entity and use just rxcpp observable/timer instead? ,2018-04-28 13:18:45,2018-04-28 13:18:57
https://api.github.com/repos/hyperledger/iroha/issues/1280,https://api.github.com/repos/hyperledger/iroha/issues/comments/386105867,https://github.com/hyperledger/iroha/pull/1280#issuecomment-386105867,lebdron,"@l4l The idea is that this timer interface can have different implementations, and rx is one of them. Other consensus components don't have to know about rx.",2018-05-02 20:13:00,2018-05-02 20:13:00
https://api.github.com/repos/hyperledger/iroha/issues/1276,https://api.github.com/repos/hyperledger/iroha/issues/comments/384942111,https://github.com/hyperledger/iroha/issues/1276#issuecomment-384942111,l4l,"Before using any library functions, it is necessary link it. Take a look in tests for an example:
https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/test/module/shared_model/bindings/BuilderTest.java#L18-L25",2018-04-27 11:21:51,2018-04-27 11:21:51
https://api.github.com/repos/hyperledger/iroha/issues/1276,https://api.github.com/repos/hyperledger/iroha/issues/comments/385143229,https://github.com/hyperledger/iroha/issues/1276#issuecomment-385143229,big-fish0,@l4l Thanks,2018-04-28 05:51:44,2018-04-28 05:51:44
https://api.github.com/repos/hyperledger/iroha/issues/1274,https://api.github.com/repos/hyperledger/iroha/issues/comments/384546011,https://github.com/hyperledger/iroha/issues/1274#issuecomment-384546011,laSinteZ,"@big-fish0 
Please note that the permission `can_get_my_account` is not grantable. You should add it to the role and add role to an account.
http://iroha.readthedocs.io/en/latest/core_concepts/glossary.html#permission

Here is the list of all grantable permissions:
```
can_add_my_signatory
can_remove_my_signatory
can_set_my_quorum
can_set_my_account_detail
can_transfer_my_assets
```

Soon we will update our documentation and reflect it, so it is clear what you can grant directly and what you must add to a role.",2018-04-26 07:46:32,2018-04-26 07:46:45
https://api.github.com/repos/hyperledger/iroha/issues/1274,https://api.github.com/repos/hyperledger/iroha/issues/comments/384583846,https://github.com/hyperledger/iroha/issues/1274#issuecomment-384583846,big-fish0,"@laSinteZ  But i change the permission to `can_add_my_signatory`,It returns the same error response
```
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 1
Forming a new transactions, choose command to add:
1. Detach role from account (detach)
2. Add new role to account (apnd_role)
3. Create new role (crt_role)
4. Set account key/value detail (set_acc_kv)
5. Transfer Assets (tran_ast)
6. Grant permission over your account (grant_perm)
7. Subtract Assets Quantity from Account (sub_ast_qty)
8. Set Account Quorum (set_qrm)
9. Remove Signatory (rem_sign)
10. Create Domain (crt_dmn)
11. Revoke permission from account (revoke_perm)
12. Create Account (crt_acc)
13. Add Signatory to Account (add_sign)
14. Create Asset (crt_ast)
15. Add Peer to Iroha Network (add_peer)
16. Add Asset Quantity (add_ast_qty)
0. Back (b)
> : 6
Account Id: test@test
Permission name: can_add_my_signatory
Command is formed. Choose what to do:
1. Add one more command to the transaction (add)
2. Send to Iroha peer (send)
3. Go back and start a new transaction (b)
4. Save as json file (save)
> : 2
Peer address (0.0.0.0): localhost
Peer port (50051): 50051
terminate called after throwing an instance of 'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<std::out_of_range> >'
  what():  bimap<>: invalid key
Aborted (core dumped)
```
",2018-04-26 09:59:07,2018-04-26 09:59:07
https://api.github.com/repos/hyperledger/iroha/issues/1273,https://api.github.com/repos/hyperledger/iroha/issues/comments/384637511,https://github.com/hyperledger/iroha/pull/1273#issuecomment-384637511,x3medima17,Is it ok that `ordering_gate_service_test` fails?,2018-04-26 13:17:47,2018-04-26 13:17:47
https://api.github.com/repos/hyperledger/iroha/issues/1273,https://api.github.com/repos/hyperledger/iroha/issues/comments/384665526,https://github.com/hyperledger/iroha/pull/1273#issuecomment-384665526,l4l,"> Is it ok that ordering_gate_service_test fails?

nope",2018-04-26 14:40:50,2018-04-26 14:40:50
https://api.github.com/repos/hyperledger/iroha/issues/1272,https://api.github.com/repos/hyperledger/iroha/issues/comments/384204665,https://github.com/hyperledger/iroha/issues/1272#issuecomment-384204665,grimadas,"Sorry for inconvenience and not user-friendly design. 
Put 1 for yes and 0 for no ",2018-04-25 08:29:28,2018-04-25 08:29:28
https://api.github.com/repos/hyperledger/iroha/issues/1272,https://api.github.com/repos/hyperledger/iroha/issues/comments/384205144,https://github.com/hyperledger/iroha/issues/1272#issuecomment-384205144,big-fish0,@grimadas Thank you.,2018-04-25 08:31:00,2018-04-25 08:31:00
https://api.github.com/repos/hyperledger/iroha/issues/1272,https://api.github.com/repos/hyperledger/iroha/issues/comments/384208178,https://github.com/hyperledger/iroha/issues/1272#issuecomment-384208178,l4l,Did it help?,2018-04-25 08:40:19,2018-04-25 08:40:32
https://api.github.com/repos/hyperledger/iroha/issues/1272,https://api.github.com/repos/hyperledger/iroha/issues/comments/384226486,https://github.com/hyperledger/iroha/issues/1272#issuecomment-384226486,big-fish0,"```
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 1
Forming a new transactions, choose command to add:
1. Detach role from account (detach)
2. Add new role to account (apnd_role)
3. Create new role (crt_role)
4. Set account key/value detail (set_acc_kv)
5. Transfer Assets (tran_ast)
6. Grant permission over your account (grant_perm)
7. Subtract Assets Quantity from Account (sub_ast_qty)
8. Set Account Quorum (set_qrm)
9. Remove Signatory (rem_sign)
10. Create Domain (crt_dmn)
11. Revoke permission from account (revoke_perm)
12. Create Account (crt_acc)
13. Add Signatory to Account (add_sign)
14. Create Asset (crt_ast)
15. Add Peer to Iroha Network (add_peer)
16. Add Asset Quantity (add_ast_qty)
0. Back (b)
> : 3
Role name: customer
Can read all information about their account: 0
Can change their quorum/signatory: 0
Can read all other accounts: 0
Can receive/transfer assets: 0
Can create/add new assets: 0
can_create_domain: 0
Can create/append roles: 0
can_create_account: 0
Command is formed. Choose what to do:
1. Add one more command to the transaction (add)
2. Send to Iroha peer (send)
3. Go back and start a new transaction (b)
4. Save as json file (save)
> : 2
Peer address (0.0.0.0): localhost
Peer port (50051): 50051
[2018-04-25 09:37:36.387639391][th:16174][info] TransactionResponseHandler Transaction successfully sent
Congratulation, your transaction was accepted for processing.
Its hash is a35306afa7e6657e8ef8acd484fd000aef9e66b8e688d8e9d6b760ab1d3522f8
--------------------
```
```
postgres=# select * from role;
    role_id
---------------
 admin
 user
 money_creator
(3 rows)
```
@grimadas  It doesn't worked

",2018-04-25 09:39:44,2018-04-25 09:39:44
https://api.github.com/repos/hyperledger/iroha/issues/1272,https://api.github.com/repos/hyperledger/iroha/issues/comments/384228174,https://github.com/hyperledger/iroha/issues/1272#issuecomment-384228174,big-fish0,"I try to use the` hash` to get the status,It shows that `Transaction has not passed stateless validation.`
```
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 3
Choose action:
1. Get status of transaction (get_tx_info)
0. Back (b)
> : 1
Requested tx hash: a35306afa7e6657e8ef8acd484fd000aef9e66b8e688d8e9d6b760ab1d3522f8
Tx hash is saved. Choose what to do:
1. Send to Iroha peer (send)
2. Save as json file (save)
0. Back (b)
> : 1
Peer address (0.0.0.0): localhost
Peer port (50051): 50051
Transaction has not passed stateless validation.
--------------------

```",2018-04-25 09:44:56,2018-04-25 09:44:56
https://api.github.com/repos/hyperledger/iroha/issues/1272,https://api.github.com/repos/hyperledger/iroha/issues/comments/384247927,https://github.com/hyperledger/iroha/issues/1272#issuecomment-384247927,grimadas,"Your role does not have any permissions, there should be at least one ""1"" ",2018-04-25 11:00:28,2018-04-25 11:00:28
https://api.github.com/repos/hyperledger/iroha/issues/1272,https://api.github.com/repos/hyperledger/iroha/issues/comments/384490509,https://github.com/hyperledger/iroha/issues/1272#issuecomment-384490509,big-fish0,"@grimadas I try it again,and it doesn't work .
```
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 1
Forming a new transactions, choose command to add:
1. Detach role from account (detach)
2. Add new role to account (apnd_role)
3. Create new role (crt_role)
4. Set account key/value detail (set_acc_kv)
5. Transfer Assets (tran_ast)
6. Grant permission over your account (grant_perm)
7. Subtract Assets Quantity from Account (sub_ast_qty)
8. Set Account Quorum (set_qrm)
9. Remove Signatory (rem_sign)
10. Create Domain (crt_dmn)
11. Revoke permission from account (revoke_perm)
12. Create Account (crt_acc)
13. Add Signatory to Account (add_sign)
14. Create Asset (crt_ast)
15. Add Peer to Iroha Network (add_peer)
16. Add Asset Quantity (add_ast_qty)
0. Back (b)
> : 3
Role name: customer
Can read all information about their account: 1
Can change their quorum/signatory: 1
Can read all other accounts: 1
Can receive/transfer assets: 1
Can create/add new assets: 1
can_create_domain: 1
Can create/append roles: 1
can_create_account: 1
Command is formed. Choose what to do:
1. Add one more command to the transaction (add)
2. Send to Iroha peer (send)
3. Go back and start a new transaction (b)
4. Save as json file (save)
> : 2
Peer address (0.0.0.0): localhost
Peer port (50051): 50051
[2018-04-26 02:09:28.923778074][th:18115][info] TransactionResponseHandler Transaction successfully sent
Congratulation, your transaction was accepted for processing.
Its hash is 9bb6cf63398e4a810e37b7562d74a7f4c2988fba8686f47243a5ac651dde25af
--------------------
```

```
postgres=# select * from role;
    role_id
---------------
 admin
 user
 money_creator
(3 rows)

```
",2018-04-26 02:12:46,2018-04-26 02:12:46
https://api.github.com/repos/hyperledger/iroha/issues/1272,https://api.github.com/repos/hyperledger/iroha/issues/comments/384491125,https://github.com/hyperledger/iroha/issues/1272#issuecomment-384491125,big-fish0,"I had added` can_create_role` to `admin `role
```
postgres=# select * from role_has_permissions;
    role_id    |         permission_id
---------------+--------------------------------
 admin         | can_add_peer
 admin         | can_add_signatory
 admin         | can_create_account
 admin         | can_create_domain
 admin         | can_get_all_acc_ast
 admin         | can_get_all_acc_ast_txs
 admin         | can_get_all_acc_detail
 admin         | can_get_all_acc_txs
 admin         | can_get_all_accounts
 admin         | can_get_all_signatories
 admin         | can_get_all_txs
 admin         | can_get_roles
 admin         | can_read_assets
 admin         | can_remove_signatory
 admin         | can_set_quorum
 user          | can_add_signatory
 user          | can_get_my_acc_ast
 user          | can_get_my_acc_ast_txs
 user          | can_get_my_acc_detail
 user          | can_get_my_acc_txs
 user          | can_get_my_account
 user          | can_get_my_signatories
 user          | can_get_my_txs
 user          | can_grant_can_add_signatory
 user          | can_grant_can_remove_signatory
 user          | can_grant_can_set_detail
 user          | can_grant_can_set_quorum
 user          | can_grant_can_transfer
 user          | can_receive
 user          | can_remove_signatory
 user          | can_set_quorum
 user          | can_transfer
 money_creator | can_add_asset_qty
 money_creator | can_create_asset
 money_creator | can_receive
 money_creator | can_transfer
 admin         | can_subtract_asset_qty
 user          | can_subtract_asset_qty
 admin         | can_create_role
 admin         | can_append_role
 admin         | can_detach_role
```
",2018-04-26 02:16:42,2018-04-26 02:16:42
https://api.github.com/repos/hyperledger/iroha/issues/1270,https://api.github.com/repos/hyperledger/iroha/issues/comments/384180523,https://github.com/hyperledger/iroha/issues/1270#issuecomment-384180523,grimadas,"The command is implemented, but not add added to iroha-cli  ",2018-04-25 06:58:18,2018-04-25 06:58:18
https://api.github.com/repos/hyperledger/iroha/issues/1270,https://api.github.com/repos/hyperledger/iroha/issues/comments/384181374,https://github.com/hyperledger/iroha/issues/1270#issuecomment-384181374,big-fish0,"@grimadas Thanks.But my latest iroha image was two weeks ago,I dont't know is it include the function
```
REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE
hyperledger/iroha-docker-develop   v1-0402             504c074b8aa6        2 weeks ago         2.05GB
hyperledger/iroha-docker-develop   v1-0329             3793c232ee14        3 weeks ago         1.9GB
hyperledger/iroha-docker           develop             dd973ee30210        5 weeks ago         267MB
hyperledger/iroha-docker-develop   v1                  472eb33814af        6 weeks ago         1.5GB
postgres                           9.5                 c7d7a3d97374        7 weeks ago         264MB
```
",2018-04-25 07:02:02,2018-04-25 07:04:21
https://api.github.com/repos/hyperledger/iroha/issues/1266,https://api.github.com/repos/hyperledger/iroha/issues/comments/383842588,https://github.com/hyperledger/iroha/issues/1266#issuecomment-383842588,grimadas,"Right now we don't have the full list on the readthedocs. 
You can find all permissions here https://github.com/hyperledger/iroha/blob/develop/schema/primitive.proto
In your case the permission name is `can_subtract_asset_qty`",2018-04-24 08:09:14,2018-04-24 08:09:14
https://api.github.com/repos/hyperledger/iroha/issues/1266,https://api.github.com/repos/hyperledger/iroha/issues/comments/383843891,https://github.com/hyperledger/iroha/issues/1266#issuecomment-383843891,big-fish0,"@grimadas  Thanks,If i want to create a new role,  I use `can_append_role` or `0`
```
 can_append_role = 0;
  can_create_role = 1;
  can_detach_role = 2;
  can_add_asset_qty = 3;
  can_subtract_asset_qty = 4;
  can_add_peer = 5;
  can_add_signatory = 6;
  can_remove_signatory = 7;
  can_set_quorum = 8;
  can_create_account = 9;
  can_set_detail = 10;
  can_create_asset = 11
```;


",2018-04-24 08:13:37,2018-04-24 08:13:37
https://api.github.com/repos/hyperledger/iroha/issues/1266,https://api.github.com/repos/hyperledger/iroha/issues/comments/383845904,https://github.com/hyperledger/iroha/issues/1266#issuecomment-383845904,grimadas,"No you should use only string naming `can_append_role `, the number in that file are only for internal protobuf processing, do not use them in your app. ",2018-04-24 08:19:36,2018-04-24 08:19:36
https://api.github.com/repos/hyperledger/iroha/issues/1266,https://api.github.com/repos/hyperledger/iroha/issues/comments/384036871,https://github.com/hyperledger/iroha/issues/1266#issuecomment-384036871,l4l,Seems resolved,2018-04-24 18:38:22,2018-04-24 18:38:22
https://api.github.com/repos/hyperledger/iroha/issues/1266,https://api.github.com/repos/hyperledger/iroha/issues/comments/384131401,https://github.com/hyperledger/iroha/issues/1266#issuecomment-384131401,big-fish0,@grimadas thanks very much!,2018-04-25 01:26:08,2018-04-25 01:26:08
https://api.github.com/repos/hyperledger/iroha/issues/1265,https://api.github.com/repos/hyperledger/iroha/issues/comments/383686917,https://github.com/hyperledger/iroha/pull/1265#issuecomment-383686917,laSinteZ,"LGTM, thank you!",2018-04-23 19:04:00,2018-04-23 19:04:00
https://api.github.com/repos/hyperledger/iroha/issues/1263,https://api.github.com/repos/hyperledger/iroha/issues/comments/383837743,https://github.com/hyperledger/iroha/pull/1263#issuecomment-383837743,nickaleks,"val_or and err_or are quite useful.

I would suggest moving has_val and has_err and val and err to result_fixture, so they are not used in main code",2018-04-24 07:51:50,2018-04-24 08:16:55
https://api.github.com/repos/hyperledger/iroha/issues/1263,https://api.github.com/repos/hyperledger/iroha/issues/comments/384721523,https://github.com/hyperledger/iroha/pull/1263#issuecomment-384721523,sorabot,"SonarQube analysis reported 9 issues

1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/cb19c0327c39ccd514177489afecdf7a462f56cd/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/cb19c0327c39ccd514177489afecdf7a462f56cd/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/cb19c0327c39ccd514177489afecdf7a462f56cd/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/cb19c0327c39ccd514177489afecdf7a462f56cd/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/cb19c0327c39ccd514177489afecdf7a462f56cd/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/cb19c0327c39ccd514177489afecdf7a462f56cd/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/cb19c0327c39ccd514177489afecdf7a462f56cd/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/cb19c0327c39ccd514177489afecdf7a462f56cd/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L176](https://github.com/hyperledger/iroha/blob/cb19c0327c39ccd514177489afecdf7a462f56cd/test/module/irohad/execution/command_validate_execute_test.cpp#L176): The function 'checkErrorCase' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-26 17:22:16,2018-04-26 17:22:16
https://api.github.com/repos/hyperledger/iroha/issues/1261,https://api.github.com/repos/hyperledger/iroha/issues/comments/383501303,https://github.com/hyperledger/iroha/issues/1261#issuecomment-383501303,laSinteZ,"@srcmake thank you for this report!
Maybe you want to open a pull-request (against `develop` branch) for this issue, and we will accept it? :) This way you don't need to write a file name/branch/etc. We can offer help, if you need some with opening PR.",2018-04-23 08:48:12,2018-04-23 08:48:12
https://api.github.com/repos/hyperledger/iroha/issues/1261,https://api.github.com/repos/hyperledger/iroha/issues/comments/383642364,https://github.com/hyperledger/iroha/issues/1261#issuecomment-383642364,srcmake,"Oh, that'd be great @laSinteZ . Thanks.",2018-04-23 16:42:25,2018-04-23 16:42:25
https://api.github.com/repos/hyperledger/iroha/issues/1261,https://api.github.com/repos/hyperledger/iroha/issues/comments/383689604,https://github.com/hyperledger/iroha/issues/1261#issuecomment-383689604,laSinteZ,"https://github.com/hyperledger/iroha/pull/1265 merged, so I am closing this issue",2018-04-23 19:12:44,2018-04-23 19:12:44
https://api.github.com/repos/hyperledger/iroha/issues/1260,https://api.github.com/repos/hyperledger/iroha/issues/comments/389497245,https://github.com/hyperledger/iroha/pull/1260#issuecomment-389497245,muratovv,"In fact, we have to wait until https://github.com/hyperledger/iroha/pull/1338 will be merged. After pull the develop and fix all tests.",2018-05-16 12:15:06,2018-05-16 12:15:06
https://api.github.com/repos/hyperledger/iroha/issues/1260,https://api.github.com/repos/hyperledger/iroha/issues/comments/389857470,https://github.com/hyperledger/iroha/pull/1260#issuecomment-389857470,neewy,"@l4l @muratovv @lebdron we have merged #1338 
^^",2018-05-17 12:59:06,2018-05-17 12:59:06
https://api.github.com/repos/hyperledger/iroha/issues/1260,https://api.github.com/repos/hyperledger/iroha/issues/comments/390551523,https://github.com/hyperledger/iroha/pull/1260#issuecomment-390551523,muratovv,"Please, add missing tasks for bindings and the rest of the current limitations of MST implementation.",2018-05-21 04:41:14,2018-05-21 04:41:14
https://api.github.com/repos/hyperledger/iroha/issues/1260,https://api.github.com/repos/hyperledger/iroha/issues/comments/390621413,https://github.com/hyperledger/iroha/pull/1260#issuecomment-390621413,sorabot,"SonarQube analysis reported 11 issues
* ![MINOR][MINOR] 11 minor

#### Top 10 issues

1. ![MINOR][MINOR] [mst_storage_impl.cpp#L24](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/irohad/multi_sig_transactions/storage/impl/mst_storage_impl.cpp#L24): Function parameter 'target_peer' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [mst_storage_impl.hpp#L35](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L35): Unused private function: 'MstStorageStateImpl::getState' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [mst_storage_impl.hpp#L36](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L36): Function parameter 'target_peer' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/45c8ca834711b67e3939a6f6b4088896dcb9b892/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-21 10:53:17,2018-05-21 10:53:17
https://api.github.com/repos/hyperledger/iroha/issues/1259,https://api.github.com/repos/hyperledger/iroha/issues/comments/383416927,https://github.com/hyperledger/iroha/issues/1259#issuecomment-383416927,srcmake,"By the way, my name's srcmake and I'm new to Iroha (and open source development). I want to contribute to the code/maintenance of the project. Please bare with me if I seem noob. I look forward to working with you guys. ",2018-04-22 22:20:49,2018-04-22 22:20:49
https://api.github.com/repos/hyperledger/iroha/issues/1259,https://api.github.com/repos/hyperledger/iroha/issues/comments/383417989,https://github.com/hyperledger/iroha/issues/1259#issuecomment-383417989,l4l,"Indeed the cli error handling is very poor now, @srcmake 
You are very welcome to contribute to source code, I guess here is the line to be changed:
https://github.com/hyperledger/iroha/blob/61969d20d1e8d71c60f4417fe271c30cf2d6dce4/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L334
Take a look at [that page](https://guides.github.com/activities/forking/), that may help you with the pull request creation, consider forking from develop
Feel free to fix other issues as well and don't hesitate to ask for a help, if you need some",2018-04-22 22:39:03,2018-04-22 22:39:03
https://api.github.com/repos/hyperledger/iroha/issues/1259,https://api.github.com/repos/hyperledger/iroha/issues/comments/454365232,https://github.com/hyperledger/iroha/issues/1259#issuecomment-454365232,luckychess,CLI doesn't ask for precision anymore.,2019-01-15 11:47:06,2019-01-15 11:47:06
https://api.github.com/repos/hyperledger/iroha/issues/1257,https://api.github.com/repos/hyperledger/iroha/issues/comments/383273848,https://github.com/hyperledger/iroha/issues/1257#issuecomment-383273848,neewy,Resolved in development version at #1230 ,2018-04-21 07:12:10,2018-04-21 07:12:10
https://api.github.com/repos/hyperledger/iroha/issues/1256,https://api.github.com/repos/hyperledger/iroha/issues/comments/383099539,https://github.com/hyperledger/iroha/pull/1256#issuecomment-383099539,nickaleks,LGTMQ,2018-04-20 13:41:22,2018-04-20 13:41:22
https://api.github.com/repos/hyperledger/iroha/issues/1256,https://api.github.com/repos/hyperledger/iroha/issues/comments/383998690,https://github.com/hyperledger/iroha/pull/1256#issuecomment-383998690,laSinteZ,"@luckychess please check again, fixed issue with ctest.",2018-04-24 16:36:45,2018-04-24 16:36:45
https://api.github.com/repos/hyperledger/iroha/issues/1255,https://api.github.com/repos/hyperledger/iroha/issues/comments/383853985,https://github.com/hyperledger/iroha/pull/1255#issuecomment-383853985,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L73](https://github.com/hyperledger/iroha/blob/40510f76fbe64c2c1240c104cd5595354c9f1539/irohad/ametsuchi/impl/postgres_block_query.hpp#L73): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L81](https://github.com/hyperledger/iroha/blob/40510f76fbe64c2c1240c104cd5595354c9f1539/irohad/ametsuchi/impl/postgres_block_query.hpp#L81): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L91](https://github.com/hyperledger/iroha/blob/40510f76fbe64c2c1240c104cd5595354c9f1539/irohad/ametsuchi/impl/postgres_block_query.hpp#L91): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-24 08:47:35,2018-04-24 08:47:35
https://api.github.com/repos/hyperledger/iroha/issues/1254,https://api.github.com/repos/hyperledger/iroha/issues/comments/382901907,https://github.com/hyperledger/iroha/pull/1254#issuecomment-382901907,l4l,"I think it should be done for native model, not for particular bindings",2018-04-19 22:37:28,2018-04-19 22:37:28
https://api.github.com/repos/hyperledger/iroha/issues/1254,https://api.github.com/repos/hyperledger/iroha/issues/comments/382973345,https://github.com/hyperledger/iroha/pull/1254#issuecomment-382973345,stinger112,"> I think it should be done for native model, not for particular bindings

@l4l, `iroha::hexstringToBytestring` can take strings with random length (it needs to be just even number), but `ModelCrypto::fromPrivateKey` can take only 32 length (as @luckychess said).",2018-04-20 04:38:12,2018-04-20 04:38:12
https://api.github.com/repos/hyperledger/iroha/issues/1254,https://api.github.com/repos/hyperledger/iroha/issues/comments/383190635,https://github.com/hyperledger/iroha/pull/1254#issuecomment-383190635,l4l,"I mean the wrapper over model should contain as least logic as possible. Indeed the problem exists, but I think crypto will be refactored soon and will verify all of the sizes on its own",2018-04-20 18:56:50,2018-04-20 18:57:50
https://api.github.com/repos/hyperledger/iroha/issues/1254,https://api.github.com/repos/hyperledger/iroha/issues/comments/395712142,https://github.com/hyperledger/iroha/pull/1254#issuecomment-395712142,lebdron,Fixed in #1429,2018-06-08 09:54:01,2018-06-08 09:54:01
https://api.github.com/repos/hyperledger/iroha/issues/1253,https://api.github.com/repos/hyperledger/iroha/issues/comments/383594264,https://github.com/hyperledger/iroha/pull/1253#issuecomment-383594264,l4l,Plz fix sorabot issues as well,2018-04-23 14:25:43,2018-04-23 14:25:43
https://api.github.com/repos/hyperledger/iroha/issues/1252,https://api.github.com/repos/hyperledger/iroha/issues/comments/382650796,https://github.com/hyperledger/iroha/pull/1252#issuecomment-382650796,l4l,"May it led to some problems, like bandwidth increasing or dos vector? Would be nice to double check all drawbacks that can appear",2018-04-19 08:17:48,2018-04-19 08:17:48
https://api.github.com/repos/hyperledger/iroha/issues/1252,https://api.github.com/repos/hyperledger/iroha/issues/comments/382654299,https://github.com/hyperledger/iroha/pull/1252#issuecomment-382654299,neewy,"@l4l biggest drawback is that right now limit is not reasonable. We might consider limiting size of message later, but so far keeping only 4MB is really not so much",2018-04-19 08:30:30,2018-04-19 08:30:30
https://api.github.com/repos/hyperledger/iroha/issues/1252,https://api.github.com/repos/hyperledger/iroha/issues/comments/382747081,https://github.com/hyperledger/iroha/pull/1252#issuecomment-382747081,luckychess,"@neewy Nice pull request! It's completely my fault that I missed this approach before.
Two notes:
1) FieldValidator::value_size still equals to 4MB. I think it should be bumped, what do you think? And if you agree please also bump value passed to generateData() in OneLargeTx (or it will fail).
2) There are still 2 tests fail (you left them disabled). We should create a task to fix them.",2018-04-19 14:00:16,2018-04-19 15:53:18
https://api.github.com/repos/hyperledger/iroha/issues/1250,https://api.github.com/repos/hyperledger/iroha/issues/comments/382650496,https://github.com/hyperledger/iroha/issues/1250#issuecomment-382650496,grimadas,"Check your genesis block on admin having permissions to append_roles:  `""can_append_role""`.
In example genesis block `admin` role cannot create new roles or append roles to accounts.
You can edit genesis block and start irohad with new genesis block.

One way is to add `""can_append_roles""` permission to `""admin""` role  in `example/genesis.block`. 

 
",2018-04-19 08:16:48,2018-04-19 08:16:48
https://api.github.com/repos/hyperledger/iroha/issues/1250,https://api.github.com/repos/hyperledger/iroha/issues/comments/382950633,https://github.com/hyperledger/iroha/issues/1250#issuecomment-382950633,big-fish0,"@grimadas thanks.But there is no way to add permission to role
```
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 1
Forming a new transactions, choose command to add:
1. Detach role from account (detach)
2. Add new role to account (apnd_role)
3. Create new role (crt_role)
4. Set account key/value detail (set_acc_kv)
5. Transfer Assets (tran_ast)
6. Grant permission over your account (grant_perm)
7. Subtract Assets Quantity from Account (sub_ast_qty)
8. Set Account Quorum (set_qrm)
9. Remove Signatory (rem_sign)
10. Create Domain (crt_dmn)
11. Revoke permission from account (revoke_perm)
12. Create Account (crt_acc)
13. Add Signatory to Account (add_sign)
14. Create Asset (crt_ast)
15. Add Peer to Iroha Network (add_peer)
16. Add Asset Quantity (add_ast_qty)
0. Back (b)
```
",2018-04-20 02:38:22,2018-04-20 02:38:22
https://api.github.com/repos/hyperledger/iroha/issues/1250,https://api.github.com/repos/hyperledger/iroha/issues/comments/382969596,https://github.com/hyperledger/iroha/issues/1250#issuecomment-382969596,grimadas,"Yes, you should add permissions into `example/genesis.block` file. 
Add permissions in your local genesis block, right after `can_set_quorum` in `create_role` `admin`  https://github.com/hyperledger/iroha/blob/develop/example/genesis.block#L33",2018-04-20 04:13:23,2018-04-20 04:13:23
https://api.github.com/repos/hyperledger/iroha/issues/1248,https://api.github.com/repos/hyperledger/iroha/issues/comments/385940116,https://github.com/hyperledger/iroha/pull/1248#issuecomment-385940116,l4l,"Please update branch from develop, there maybe incompatible fixes",2018-05-02 10:59:06,2018-05-02 10:59:06
https://api.github.com/repos/hyperledger/iroha/issues/1248,https://api.github.com/repos/hyperledger/iroha/issues/comments/386606551,https://github.com/hyperledger/iroha/pull/1248#issuecomment-386606551,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [stateful_validator_impl.hpp#L55](https://github.com/hyperledger/iroha/blob/c69a7d36fcc4aac45242374409dd41ea29c78224/irohad/validation/impl/stateful_validator_impl.hpp#L55): Unused private function: 'StatefulValidatorImpl::signaturesSubset' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-05-04 13:47:13,2018-05-04 13:47:13
https://api.github.com/repos/hyperledger/iroha/issues/1247,https://api.github.com/repos/hyperledger/iroha/issues/comments/382286485,https://github.com/hyperledger/iroha/pull/1247#issuecomment-382286485,lebdron,"Please write a test which will cover new behaviour, and a method description which states the assumption that the block will be eventually received from the network.",2018-04-18 07:11:01,2018-04-18 07:11:01
https://api.github.com/repos/hyperledger/iroha/issues/1247,https://api.github.com/repos/hyperledger/iroha/issues/comments/383005388,https://github.com/hyperledger/iroha/pull/1247#issuecomment-383005388,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [yac_gate_impl.hpp#L65](https://github.com/hyperledger/iroha/blob/cf8e30d62f35393d516756bd685e6ee0f4cedf80/irohad/consensus/yac/impl/yac_gate_impl.hpp#L65): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-20 07:19:31,2018-04-20 07:19:31
https://api.github.com/repos/hyperledger/iroha/issues/1246,https://api.github.com/repos/hyperledger/iroha/issues/comments/382648105,https://github.com/hyperledger/iroha/pull/1246#issuecomment-382648105,Alexey-N-Chernyshov,Please fix CMakeLists in `torii/processor/CMakeLists.txt` as well. There is old model.,2018-04-19 08:07:43,2018-04-19 08:07:43
https://api.github.com/repos/hyperledger/iroha/issues/1245,https://api.github.com/repos/hyperledger/iroha/issues/comments/382174872,https://github.com/hyperledger/iroha/pull/1245#issuecomment-382174872,steephengeorge,Issue #628 ,2018-04-17 22:23:13,2018-04-17 22:23:13
https://api.github.com/repos/hyperledger/iroha/issues/1245,https://api.github.com/repos/hyperledger/iroha/issues/comments/382397244,https://github.com/hyperledger/iroha/pull/1245#issuecomment-382397244,l4l,"Hmm, it seems that we doesn't have a test case. Do you mind to write some?",2018-04-18 14:02:28,2018-04-18 14:02:28
https://api.github.com/repos/hyperledger/iroha/issues/1245,https://api.github.com/repos/hyperledger/iroha/issues/comments/387717107,https://github.com/hyperledger/iroha/pull/1245#issuecomment-387717107,lebdron,@steephengeorge any updates on this?,2018-05-09 12:06:14,2018-05-09 12:06:14
https://api.github.com/repos/hyperledger/iroha/issues/1245,https://api.github.com/repos/hyperledger/iroha/issues/comments/390907374,https://github.com/hyperledger/iroha/pull/1245#issuecomment-390907374,lebdron,"Closing due to lack of activity in a month, please reopen when ready.",2018-05-22 08:31:05,2018-05-22 08:31:05
https://api.github.com/repos/hyperledger/iroha/issues/1243,https://api.github.com/repos/hyperledger/iroha/issues/comments/383223893,https://github.com/hyperledger/iroha/pull/1243#issuecomment-383223893,l4l,`ordering_gate_service_test (SEGFAULT)` :(,2018-04-20 21:12:38,2018-04-20 21:12:38
https://api.github.com/repos/hyperledger/iroha/issues/1243,https://api.github.com/repos/hyperledger/iroha/issues/comments/384715996,https://github.com/hyperledger/iroha/pull/1243#issuecomment-384715996,lebdron,"@l4l lock you have mentioned is required because network -- grpc server, is used in the test",2018-04-26 17:03:47,2018-04-26 17:03:47
https://api.github.com/repos/hyperledger/iroha/issues/1243,https://api.github.com/repos/hyperledger/iroha/issues/comments/384741769,https://github.com/hyperledger/iroha/pull/1243#issuecomment-384741769,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L93](https://github.com/hyperledger/iroha/blob/16883a1ec16e8ac27b42962c535b8d6949f29ea0/irohad/ordering/impl/ordering_gate_impl.hpp#L93): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-26 18:23:10,2018-04-26 18:23:10
https://api.github.com/repos/hyperledger/iroha/issues/1242,https://api.github.com/repos/hyperledger/iroha/issues/comments/382069768,https://github.com/hyperledger/iroha/pull/1242#issuecomment-382069768,l4l,"I am not really sure that you've done that you really want.
Make sure you are opening a pull request from your own repo, and double check the branch as well",2018-04-17 17:07:44,2018-04-17 17:07:44
https://api.github.com/repos/hyperledger/iroha/issues/1242,https://api.github.com/repos/hyperledger/iroha/issues/comments/382076453,https://github.com/hyperledger/iroha/pull/1242#issuecomment-382076453,sorabot,"SonarQube analysis reported 18 issues
* ![MINOR][MINOR] 18 minor

#### Top 10 issues

1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L145](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/iroha-cli/interactive/interactive_transaction_cli.hpp#L145): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L71](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/irohad/ametsuchi/impl/postgres_block_query.hpp#L71): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L79](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/irohad/ametsuchi/impl/postgres_block_query.hpp#L79): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L89](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/irohad/ametsuchi/impl/postgres_block_query.hpp#L89): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L112](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L112): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L79](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/irohad/ordering/impl/ordering_gate_impl.hpp#L79): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/d0f1894bbf0b5145be4c3ba1deb3c0961eb4662d/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-17 17:29:32,2018-04-17 17:29:32
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/381912780,https://github.com/hyperledger/iroha/issues/1239#issuecomment-381912780,l4l,"Take a look there:
https://github.com/hyperledger/iroha/blob/ed665deb84aba285e2dfc217188bba8a9cc5ce2e/test/module/shared_model/bindings/QueryTest.java#L149-L155",2018-04-17 09:09:51,2018-04-17 09:09:51
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/381926530,https://github.com/hyperledger/iroha/issues/1239#issuecomment-381926530,big-fish0,"@l4l thanks,but how can i put my hash data into the hash",2018-04-17 09:49:03,2018-04-17 10:09:58
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/382035614,https://github.com/hyperledger/iroha/issues/1239#issuecomment-382035614,walkero,"hi @big-fish0 
when you use ""2. Get Transactions by transactions' hashes (get_tx)"" query,
please use hash code, return by ""1. New transaction (tx)"" ......
I think you couldn't get transactions by any wrong hash (non-existent transaction).",2018-04-17 15:30:04,2018-04-17 15:30:04
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/382063455,https://github.com/hyperledger/iroha/issues/1239#issuecomment-382063455,l4l,"Ah, I noticed the problem, hash should be a binary string, not a hex, e.g:
instead `""1995c13f6f9d7ea97cb7e3f4e3362eced5cdb2e3d3b72186ebfd2b4291b88714""`
should be `""\x19\x95\xc1\x3f\x6f\x9d\x7e\xa9\x7c\xb7\xe3\xf4\xe3\x36\x2e\xce\xd5\xcd\xb2\xe3\xd3\xb7\x21\x86\xeb\xfd\x2b\x42\x91\xb8\x87\x14""`",2018-04-17 16:47:29,2018-04-17 16:47:29
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/382210408,https://github.com/hyperledger/iroha/issues/1239#issuecomment-382210408,big-fish0,"@walkero the hash code was returned by the iroha-cli,and use the same hash code ,iroha-cli can response the transaction",2018-04-18 01:09:57,2018-04-18 01:09:57
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/382240020,https://github.com/hyperledger/iroha/issues/1239#issuecomment-382240020,big-fish0,"@l4l Thanks,but I still don't know how to put the String type hash  data into the HashVector,could you give me a demo to get the transaction by the hashes,",2018-04-18 03:12:30,2018-04-18 03:13:27
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/382298213,https://github.com/hyperledger/iroha/issues/1239#issuecomment-382298213,big-fish0,"whatever I do ,the rioha always give me this response
```
transactions_response {
}
query_hash: ""=[k&\356\025j\346\254S\036\277@\361s|\002S\350d\247\030\274\362Z\252\214\255^\370#\234""
```
is there anything wrong with my code that to build the HashVetcor
```
HashVector hv = new HashVector();
Hash hh = new Hash( new String(Blob.fromHexString(""1995c13f6f9d7ea97cb7e3f4e3362eced5cdb2e3d3b72186ebfd2b4291b88714"").hex()));
hv.add(hh);
```",2018-04-18 07:54:42,2018-04-18 07:54:42
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/382405339,https://github.com/hyperledger/iroha/issues/1239#issuecomment-382405339,luckychess,"@big-fish0 Actually binary strings are not supposed to be exposed outside. It's an issue and it will be fixed soon (probably this week).
About your last code snippet: it doesn't compile or it just doesn't return expected result?",2018-04-18 14:25:23,2018-04-18 14:25:23
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/382583228,https://github.com/hyperledger/iroha/issues/1239#issuecomment-382583228,big-fish0,"@luckychess It doen't return an expected result.when i use iroha-cli,and use the hexString 
`1995c13f6f9d7ea97cb7e3f4e3362eced5cdb2e3d3b72186ebfd2b4291b88714`
it gives me the Transaction Object.
```
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 2
Choose query:
1. Get all permissions related to role (get_role_perm)
2. Get Transactions by transactions' hashes (get_tx)
3. Get information about asset (get_ast_info)
4. Get Account's Transactions (get_acc_tx)
5. Get all current roles in the system (get_roles)
6. Get Account's Signatories (get_acc_sign)
7. Get Account's Assets (get_acc_ast)
8. Get Account Information (get_acc)
0. Back (b)
> : 2
Requested tx hashes: 1995c13f6f9d7ea97cb7e3f4e3362eced5cdb2e3d3b72186ebfd2b4291b88714
Query is formed. Choose what to do:
1. Send to Iroha peer (send)
2. Save as json file (save)
0. Back (b)
> : 1
Peer address (0.0.0.0): localhost
Peer port (50051): 50051
[2018-04-18 02:27:24.099178336][th:7020][info] QueryResponseHandler [Transaction]
[2018-04-18 02:27:24.099293935][th:7020][info] QueryResponseHandler -Creator Id- admin@test
--------------------
```

But in my code.
```
HashVector hv = new HashVector();
Hash hh = new Hash( new String(Blob.fromHexString(""1995c13f6f9d7ea97cb7e3f4e3362eced5cdb2e3d3b72186ebfd2b4291b88714"").hex()));
hv.add(hh);
```
It retuens this
```
transactions_response {
}
query_hash: ""=[k&\356\025j\346\254S\036\277@\361s|\002S\350d\247\030\274\362Z\252\214\255^\370#\234""
```",2018-04-19 01:49:20,2018-04-20 02:40:06
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/383038587,https://github.com/hyperledger/iroha/issues/1239#issuecomment-383038587,luckychess,"@big-fish0 Thank you for your description, we will check it.",2018-04-20 09:20:56,2018-04-20 09:20:56
https://api.github.com/repos/hyperledger/iroha/issues/1239,https://api.github.com/repos/hyperledger/iroha/issues/comments/454353538,https://github.com/hyperledger/iroha/issues/1239#issuecomment-454353538,luckychess,"Well, better late than never - everything should be fine now.",2019-01-15 11:03:07,2019-01-15 11:03:07
https://api.github.com/repos/hyperledger/iroha/issues/1238,https://api.github.com/repos/hyperledger/iroha/issues/comments/381900428,https://github.com/hyperledger/iroha/issues/1238#issuecomment-381900428,l4l,"Give a hint, what went wrong please",2018-04-17 08:36:05,2018-04-17 08:36:05
https://api.github.com/repos/hyperledger/iroha/issues/1237,https://api.github.com/repos/hyperledger/iroha/issues/comments/381622132,https://github.com/hyperledger/iroha/pull/1237#issuecomment-381622132,neewy,Conflicts with old PR of @laSinteZ ,2018-04-16 14:38:44,2018-04-16 14:38:44
https://api.github.com/repos/hyperledger/iroha/issues/1236,https://api.github.com/repos/hyperledger/iroha/issues/comments/381638660,https://github.com/hyperledger/iroha/pull/1236#issuecomment-381638660,laSinteZ,"https://html-zhqsmlwdqs.now.sh/guides/libraries/swift_ios.html

Link to simplify review process. 
Note that images are broken, but it is not a problem of PR, it is a problem of current image asset management and it will be ok when we merge this pr.",2018-04-16 15:09:07,2018-04-16 15:13:19
https://api.github.com/repos/hyperledger/iroha/issues/1236,https://api.github.com/repos/hyperledger/iroha/issues/comments/381918659,https://github.com/hyperledger/iroha/pull/1236#issuecomment-381918659,DenDoronin,"Hi @l4l, I've submitted b3549bc459b898a0673c17a560e7d943065d29ed with all findings, please review. thanks.",2018-04-17 09:26:14,2018-04-17 09:26:14
https://api.github.com/repos/hyperledger/iroha/issues/1233,https://api.github.com/repos/hyperledger/iroha/issues/comments/382734380,https://github.com/hyperledger/iroha/pull/1233#issuecomment-382734380,bakhtin,`currentBuild.result` could potentially be `null`. Consider using `currentBuild.currentResult` instead,2018-04-19 13:26:22,2018-04-19 13:26:22
https://api.github.com/repos/hyperledger/iroha/issues/1231,https://api.github.com/repos/hyperledger/iroha/issues/comments/383841094,https://github.com/hyperledger/iroha/issues/1231#issuecomment-383841094,ZeekHuge,"Hi, I would like to work to resolve this issue.

I have done some playing using docker containers and network, using the `develop` branch.
Also, after about 4 successfully commited transactions, I compared the provided genesis block (in my case the [example genesis block](https://github.com/hyperledger/iroha/blob/master/example/genesis.block)) with the one stored at the `/tmp/block_store/0000000000000001` and it looks to be exactly same (and not being overwritten)

Can you help me to understand what the problem is ?",2018-04-24 08:03:58,2018-04-24 08:03:58
https://api.github.com/repos/hyperledger/iroha/issues/1231,https://api.github.com/repos/hyperledger/iroha/issues/comments/383867952,https://github.com/hyperledger/iroha/issues/1231#issuecomment-383867952,grimadas,"Hi @ZeekHuge. We would love to see your pr. This issue can happen if you already have some blocks in your blockstore and you try to  run `irohad` with a new genesis block that is different than `/tmp/block_store/0000000000000001`. This will overwrite it. 
One possible solution is to give a warning that genesis block is being overwritten and ask user for confirmation ",2018-04-24 09:34:11,2018-04-24 09:34:11
https://api.github.com/repos/hyperledger/iroha/issues/1231,https://api.github.com/repos/hyperledger/iroha/issues/comments/383898276,https://github.com/hyperledger/iroha/issues/1231#issuecomment-383898276,ZeekHuge,"Hi @grimadas  ! 
I tried to replicate this behaviour, but what I found was that _everything_ is removed when `irohad` is restarted. The block_store is just emptied. And this looks like the right behaviour - according to [this line here](https://github.com/hyperledger/iroha/blob/master/irohad/main/irohad.cpp#L146). 

Is it that we want a warning and a confirmation before everything is deleted or something like that ? 
Note that I am using `develop` branch, can that be a possible reason why I am getting a different behaviour ?",2018-04-24 11:32:17,2018-04-24 11:40:03
https://api.github.com/repos/hyperledger/iroha/issues/1231,https://api.github.com/repos/hyperledger/iroha/issues/comments/383904694,https://github.com/hyperledger/iroha/issues/1231#issuecomment-383904694,grimadas,"Yes, this is an expected behaviour. What we want to give a warning that everything will be removed ",2018-04-24 11:59:16,2018-04-24 11:59:16
https://api.github.com/repos/hyperledger/iroha/issues/1231,https://api.github.com/repos/hyperledger/iroha/issues/comments/384038240,https://github.com/hyperledger/iroha/issues/1231#issuecomment-384038240,l4l,"Even better ask for an explicit confirmation from a user, should look like:
```bash
$ irohad ...
/tmp/block_store already contains ledger data, are you sure that you'd like to remove it? y/N:
```
",2018-04-24 18:42:41,2018-04-24 18:42:41
https://api.github.com/repos/hyperledger/iroha/issues/1229,https://api.github.com/repos/hyperledger/iroha/issues/comments/383315728,https://github.com/hyperledger/iroha/pull/1229#issuecomment-383315728,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/f449b265616015a763cc3d2f02f3ad8d359df77d/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-21 17:43:12,2018-04-21 17:43:12
https://api.github.com/repos/hyperledger/iroha/issues/1228,https://api.github.com/repos/hyperledger/iroha/issues/comments/381544481,https://github.com/hyperledger/iroha/issues/1228#issuecomment-381544481,laSinteZ,"@big-fish0 could you please give us more details? Which version of Iroha do you use, how do you create a new role, how do you check for new roles please?",2018-04-16 09:52:16,2018-04-16 09:52:16
https://api.github.com/repos/hyperledger/iroha/issues/1228,https://api.github.com/repos/hyperledger/iroha/issues/comments/381546612,https://github.com/hyperledger/iroha/issues/1228#issuecomment-381546612,big-fish0,"@laSinteZ the lastest version
```
 String roleName = ""customer"";
 StringVector permissions = new StringVector();
permissions.add(""CanAddAssetQuantity"");
```
i passed those params,then, i got the response 
```
user1Key:PublicKey: [c47be1e0f78f6a86dd86d2ed556490f378d0ce42d25a3eabbf31e4e46e9627df ]
Hash of the transaction: 62ea8281e4142a7bef26243b0349b255dc1e10e858bf66bd4f3f95506b722575
Status of the transaction is: COMMITTED
```

and i use the cmd to check for new roles
```
 public UnsignedQuery queAllRoles(String creator, long startQueryCounter){
    	return m_queryBuilder.creatorAccountId(creator)
                .queryCounter(BigInteger.valueOf(startQueryCounter))
                .createdTime(BigInteger.valueOf( System.currentTimeMillis() ))
                .getRoles()
                .build();
    }
```",2018-04-16 09:59:58,2018-04-16 10:04:25
https://api.github.com/repos/hyperledger/iroha/issues/1228,https://api.github.com/repos/hyperledger/iroha/issues/comments/381555870,https://github.com/hyperledger/iroha/issues/1228#issuecomment-381555870,l4l,"@big-fish0 It is not really clear by your code examples where's the issue.
Could you provide more code (particularly concrete values that you pass). Also irohad logs may give a hint.

Also you may check the contents of the wsv in postgres:
```
psql --host <your_host> --username <your_username> -W
Password: 
postgres=# \dt
                       List of relations
 Schema |               Name                | Type  |  Owner   
--------+-----------------------------------+-------+----------
 public | account                           | table | postgres
 public | account_has_asset                 | table | postgres
 public | account_has_grantable_permissions | table | postgres
 public | account_has_roles                 | table | postgres
 public | account_has_signatory             | table | postgres
 public | asset                             | table | postgres
 public | domain                            | table | postgres
 public | height_by_account_set             | table | postgres
 public | height_by_hash                    | table | postgres
 public | index_by_creator_height           | table | postgres
 public | index_by_id_height_asset          | table | postgres
 public | ordering_service_state            | table | postgres
 public | peer                              | table | postgres
 public | role                              | table | postgres
 public | role_has_permissions              | table | postgres
 public | signatory                         | table | postgres
(16 rows)

postgres=# select * from role;
 role_id 
---------
 user
(1 row)

postgres=# select * from account_has_roles;
 account_id | role_id 
------------+---------
 admin@test | user
(1 row)
```",2018-04-16 10:35:49,2018-04-16 10:35:49
https://api.github.com/repos/hyperledger/iroha/issues/1227,https://api.github.com/repos/hyperledger/iroha/issues/comments/381556876,https://github.com/hyperledger/iroha/issues/1227#issuecomment-381556876,l4l,Give a hint for future users what was the problem please,2018-04-16 10:40:12,2018-04-16 10:40:12
https://api.github.com/repos/hyperledger/iroha/issues/1224,https://api.github.com/repos/hyperledger/iroha/issues/comments/381409245,https://github.com/hyperledger/iroha/pull/1224#issuecomment-381409245,x3medima17,PR description does not follow the template :(,2018-04-15 14:05:49,2018-04-15 14:05:49
https://api.github.com/repos/hyperledger/iroha/issues/1223,https://api.github.com/repos/hyperledger/iroha/issues/comments/381392713,https://github.com/hyperledger/iroha/issues/1223#issuecomment-381392713,Warchant,"out directory for generated sources should be ${CMAKE_CURRENT_BINARY_DIR}, also compile methods in cmake should have OUT variable, which is set inside `compile` to a list of paths to sources.

this will resolve this issue",2018-04-15 09:29:53,2018-04-15 09:30:02
https://api.github.com/repos/hyperledger/iroha/issues/1223,https://api.github.com/repos/hyperledger/iroha/issues/comments/406448810,https://github.com/hyperledger/iroha/issues/1223#issuecomment-406448810,l4l,Done in #1550,2018-07-19 23:58:49,2018-07-19 23:58:49
https://api.github.com/repos/hyperledger/iroha/issues/1218,https://api.github.com/repos/hyperledger/iroha/issues/comments/381153363,https://github.com/hyperledger/iroha/pull/1218#issuecomment-381153363,x3medima17,You can remove unused sections in PR description ,2018-04-13 14:29:33,2018-04-13 14:29:33
https://api.github.com/repos/hyperledger/iroha/issues/1217,https://api.github.com/repos/hyperledger/iroha/issues/comments/381260051,https://github.com/hyperledger/iroha/pull/1217#issuecomment-381260051,l4l,"There was pretty long discussion about the tags checkout, though I'm up for your way.
Minus of tag: can be changed (-> code might be broken, although it usually doesn't break changes)
Minus of hash: non informative (comments may help)
ping @lebdron @muratovv ",2018-04-13 21:03:48,2018-04-13 21:03:48
https://api.github.com/repos/hyperledger/iroha/issues/1217,https://api.github.com/repos/hyperledger/iroha/issues/comments/385381062,https://github.com/hyperledger/iroha/pull/1217#issuecomment-385381062,l4l,Please also add comments with the version. It might not that easy to determine it by the hash,2018-04-30 12:13:40,2018-04-30 12:13:40
https://api.github.com/repos/hyperledger/iroha/issues/1216,https://api.github.com/repos/hyperledger/iroha/issues/comments/381125849,https://github.com/hyperledger/iroha/pull/1216#issuecomment-381125849,sorabot,"SonarQube analysis reported 11 issues
* ![MINOR][MINOR] 11 minor

#### Top 10 issues

1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L79](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/irohad/ordering/impl/ordering_gate_impl.hpp#L79): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [keys_manager_impl.cpp#L93](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/libs/crypto/keys_manager_impl.cpp#L93): Boolean result is used in bitwise operation. Clarify expression with parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AclarifyCondition)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8738be9066021e38a42113310c316bea15feef41/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-13 12:53:09,2018-04-13 12:53:09
https://api.github.com/repos/hyperledger/iroha/issues/1214,https://api.github.com/repos/hyperledger/iroha/issues/comments/381024736,https://github.com/hyperledger/iroha/issues/1214#issuecomment-381024736,walkero,"hi
here is some my test result on iroha-cli command:

NG  3. Create new role (crt_role)
NG  4. Set account key/value detail (set_acc_kv)
OK  5. Transfer Assets (tran_ast)
OK  7. Subtract Assets Quantity from Account (sub_ast_qty)
OK  10. Create Domain (crt_dmn)
NG  12. Create Account (crt_acc)
OK  14. Create Asset (crt_ast)
OK  16. Add Asset Quantity (add_ast_qty)

thanks



",2018-04-13 05:04:30,2018-04-13 05:04:30
https://api.github.com/repos/hyperledger/iroha/issues/1214,https://api.github.com/repos/hyperledger/iroha/issues/comments/381037589,https://github.com/hyperledger/iroha/issues/1214#issuecomment-381037589,l4l,"Stateful validation error means (particulary for SetAccountDetail) that there's
- no related grantable permission (`can_set_detail`)
- or creator_id mismatch with the commands' target (w/o permission can be only self)
- some common stuff like creator/command object/domain/etc exist

Please confirm that all of the points listed here are valid",2018-04-13 06:31:20,2018-04-13 06:31:20
https://api.github.com/repos/hyperledger/iroha/issues/1214,https://api.github.com/repos/hyperledger/iroha/issues/comments/381309067,https://github.com/hyperledger/iroha/issues/1214#issuecomment-381309067,walkero,"hi, @l4l thank you

You are right, I have a mistake, when I test SetAccountDetail command,
creator_id is admin@test, and target is test@test.

thanks
",2018-04-14 07:03:53,2018-04-14 07:03:53
https://api.github.com/repos/hyperledger/iroha/issues/1212,https://api.github.com/repos/hyperledger/iroha/issues/comments/380887496,https://github.com/hyperledger/iroha/issues/1212#issuecomment-380887496,l4l,"> 2. store the timestamp from the last query from an account and require that any new query have a newer timestamp than that

There is quite bad case for multiple devices for the same account. Only half of simultaneous queries will be returned. If the clients are considered as machines, not humans that case can be quite common. Also as long as clocks are not synchronized, it can be quite a bad case for the human as well:
1. User sends transaction
2. Query the tx via device_1
3. Querying the tx via device_2 cannot be done, until the clock of the device_2 reach the first query counter (e.g may need to wait up to 10 minutes in worse case)


I think necessary security should be provided just by the transport encryption.
Also I did get the gossip protocol, what do you mean here? The query can be performed without consensus right now, how mst module can help here?",2018-04-12 17:41:21,2018-04-12 17:41:21
https://api.github.com/repos/hyperledger/iroha/issues/1212,https://api.github.com/repos/hyperledger/iroha/issues/comments/381045314,https://github.com/hyperledger/iroha/issues/1212#issuecomment-381045314,lebdron,">The query can be performed without consensus right now, how mst module can help here?

The idea was that first two methods don't share the timestamp information between peers, so the query can be replayed on different nodes. Gossip protocol can be used to exchange this timestamp information between peers without consensus.",2018-04-13 07:10:45,2018-04-13 07:10:45
https://api.github.com/repos/hyperledger/iroha/issues/1212,https://api.github.com/repos/hyperledger/iroha/issues/comments/382383831,https://github.com/hyperledger/iroha/issues/1212#issuecomment-382383831,neewy,"Solution:
1. Get nonce from peer
2. Send query with signed nonce. Nonce is valid only for a single query. Nonce is valid only for a peer that issued it.",2018-04-18 13:20:44,2018-04-18 13:20:44
https://api.github.com/repos/hyperledger/iroha/issues/1212,https://api.github.com/repos/hyperledger/iroha/issues/comments/382383948,https://github.com/hyperledger/iroha/issues/1212#issuecomment-382383948,neewy,"We need to hide this abstraction in client libraries, if this is the solution",2018-04-18 13:21:12,2018-04-18 13:21:12
https://api.github.com/repos/hyperledger/iroha/issues/1212,https://api.github.com/repos/hyperledger/iroha/issues/comments/454342055,https://github.com/hyperledger/iroha/issues/1212#issuecomment-454342055,LiraLemur,Issue is moved to Jira: https://jira.hyperledger.org/browse/IR-190,2019-01-15 10:26:09,2019-01-15 10:26:09
https://api.github.com/repos/hyperledger/iroha/issues/1211,https://api.github.com/repos/hyperledger/iroha/issues/comments/381079844,https://github.com/hyperledger/iroha/pull/1211#issuecomment-381079844,DenDoronin,Could someone retrigger job execution? I'm just curious how such small thing like changing download url may fail the job,2018-04-13 09:28:56,2018-04-13 09:28:56
https://api.github.com/repos/hyperledger/iroha/issues/1211,https://api.github.com/repos/hyperledger/iroha/issues/comments/381095485,https://github.com/hyperledger/iroha/pull/1211#issuecomment-381095485,luckychess,"@DenDoronin Thank you for your contribution! It's just an issue of our CI so don't worry about it.
I also have an idea of improvement for this pull request: could you please do the similar change for Android build script? It's ```shared_model/packages/android/android-build.sh``` It has absolutely the same issue.",2018-04-13 10:32:30,2018-04-13 10:32:30
https://api.github.com/repos/hyperledger/iroha/issues/1211,https://api.github.com/repos/hyperledger/iroha/issues/comments/381105172,https://github.com/hyperledger/iroha/pull/1211#issuecomment-381105172,DenDoronin,"@luckychess, sure I'll do, it's pretty simple",2018-04-13 11:18:54,2018-04-13 11:18:54
https://api.github.com/repos/hyperledger/iroha/issues/1211,https://api.github.com/repos/hyperledger/iroha/issues/comments/381106223,https://github.com/hyperledger/iroha/pull/1211#issuecomment-381106223,DenDoronin,@luckychess done :) ,2018-04-13 11:24:02,2018-04-13 11:24:02
https://api.github.com/repos/hyperledger/iroha/issues/1211,https://api.github.com/repos/hyperledger/iroha/issues/comments/381112836,https://github.com/hyperledger/iroha/pull/1211#issuecomment-381112836,luckychess,@DenDoronin Thank you! Looks good for me now. Let's wait the second approve (@lebdron).,2018-04-13 11:55:50,2018-04-13 11:55:50
https://api.github.com/repos/hyperledger/iroha/issues/1210,https://api.github.com/repos/hyperledger/iroha/issues/comments/380768299,https://github.com/hyperledger/iroha/pull/1210#issuecomment-380768299,x3medima17,"You can remove optional section from the PR description.
Also DCO is missing",2018-04-12 11:11:26,2018-04-12 11:11:26
https://api.github.com/repos/hyperledger/iroha/issues/1210,https://api.github.com/repos/hyperledger/iroha/issues/comments/381102973,https://github.com/hyperledger/iroha/pull/1210#issuecomment-381102973,sorabot,"SonarQube analysis reported 12 issues
* ![MINOR][MINOR] 12 minor

#### Top 10 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L71](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/irohad/ametsuchi/impl/postgres_block_query.hpp#L71): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L79](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/irohad/ametsuchi/impl/postgres_block_query.hpp#L79): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L89](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/irohad/ametsuchi/impl/postgres_block_query.hpp#L89): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/1fe9941ccbffcf7df5e8d8864358ebbc65615a8e/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-13 11:07:53,2018-04-13 11:07:53
https://api.github.com/repos/hyperledger/iroha/issues/1208,https://api.github.com/repos/hyperledger/iroha/issues/comments/381018137,https://github.com/hyperledger/iroha/issues/1208#issuecomment-381018137,walkero,"hi,

I also receive error message from java library calling
createAccount() method.

```
Hash of the transaction: fefa56a714e008f209115f98ae1591fff679ff7a3deb1af0a95633a352883291
Status of the transaction is: STATEFUL_VALIDATION_FAILED
Your transaction wasn't committed
```

thanks
",2018-04-13 04:19:30,2018-04-13 04:19:30
https://api.github.com/repos/hyperledger/iroha/issues/1208,https://api.github.com/repos/hyperledger/iroha/issues/comments/381036381,https://github.com/hyperledger/iroha/issues/1208#issuecomment-381036381,l4l,"There is different error in java's log and it seems that the bug is in the cli itself
Are you sure, that you pass exactly the same data with the same ledger state?",2018-04-13 06:24:25,2018-04-13 06:24:25
https://api.github.com/repos/hyperledger/iroha/issues/1208,https://api.github.com/repos/hyperledger/iroha/issues/comments/381308297,https://github.com/hyperledger/iroha/issues/1208#issuecomment-381308297,walkero,"hi, @l4l  
yes, I pass the same data.

I found this is a bug for ""Account name"" at CreateAccount command/method,
I tried:
""Account name""  = guest2 is NG
""Account name""  = guestz is OK
""Account name""  = guest_z is NG
""Account name""  = guest_2 is NG

I read ""6. Iroha API reference""
    http://iroha.readthedocs.io/en/latest/api/commands/#id14
""Account name"" field, Constraint is [a-z_0-9]{1,32}
but it seems digit and ""-"" are not allowed.

thanks


",2018-04-14 06:46:20,2018-04-14 06:46:20
https://api.github.com/repos/hyperledger/iroha/issues/1208,https://api.github.com/repos/hyperledger/iroha/issues/comments/381315302,https://github.com/hyperledger/iroha/issues/1208#issuecomment-381315302,l4l,"I see, it looks like a quite outdated Iroha behavior, @walkero 
There was a pr (#1148) recently that fix the constraints. May you update Iroha and check out whether the issue is still there",2018-04-14 09:07:59,2018-04-14 09:07:59
https://api.github.com/repos/hyperledger/iroha/issues/1208,https://api.github.com/repos/hyperledger/iroha/issues/comments/381341590,https://github.com/hyperledger/iroha/issues/1208#issuecomment-381341590,walkero,"thank you for your information.
I used a old iroha version, 
after update Iroha, it is OK.",2018-04-14 16:32:35,2018-04-14 16:32:35
https://api.github.com/repos/hyperledger/iroha/issues/1206,https://api.github.com/repos/hyperledger/iroha/issues/comments/380603757,https://github.com/hyperledger/iroha/pull/1206#issuecomment-380603757,l4l,doesn't seem to be a goal of the pr,2018-04-11 21:37:30,2018-04-11 21:37:42
https://api.github.com/repos/hyperledger/iroha/issues/1206,https://api.github.com/repos/hyperledger/iroha/issues/comments/380716978,https://github.com/hyperledger/iroha/pull/1206#issuecomment-380716978,luckychess,"@x3medima17 Good point! It works without problems on my machine. I will disable it too.
@l4l What do you mean?",2018-04-12 08:11:48,2018-04-12 08:11:48
https://api.github.com/repos/hyperledger/iroha/issues/1205,https://api.github.com/repos/hyperledger/iroha/issues/comments/381526459,https://github.com/hyperledger/iroha/pull/1205#issuecomment-381526459,neewy,#1201 is fixed,2018-04-16 08:49:46,2018-04-16 08:49:46
https://api.github.com/repos/hyperledger/iroha/issues/1204,https://api.github.com/repos/hyperledger/iroha/issues/comments/380560146,https://github.com/hyperledger/iroha/pull/1204#issuecomment-380560146,l4l,"That may lead to uint256 overflow, but not sure
May you add integration test as well? (similar to `Uint256DestOverflow`)",2018-04-11 18:58:23,2018-04-11 18:58:23
https://api.github.com/repos/hyperledger/iroha/issues/1204,https://api.github.com/repos/hyperledger/iroha/issues/comments/380826111,https://github.com/hyperledger/iroha/pull/1204#issuecomment-380826111,victordrobny,Amount overflowing is checked in wsv_command_validate_execute_test. Why is it necessary to make integration test?,2018-04-12 14:31:10,2018-04-12 14:31:10
https://api.github.com/repos/hyperledger/iroha/issues/1204,https://api.github.com/repos/hyperledger/iroha/issues/comments/380872883,https://github.com/hyperledger/iroha/pull/1204#issuecomment-380872883,l4l,"They are similar cases, but not the same. Case with different precision has additional multiplication, thus much easier to get overflow",2018-04-12 16:51:22,2018-04-12 16:51:22
https://api.github.com/repos/hyperledger/iroha/issues/1204,https://api.github.com/repos/hyperledger/iroha/issues/comments/381154400,https://github.com/hyperledger/iroha/pull/1204#issuecomment-381154400,victordrobny,The test is added.,2018-04-13 14:32:38,2018-04-13 14:32:38
https://api.github.com/repos/hyperledger/iroha/issues/1204,https://api.github.com/repos/hyperledger/iroha/issues/comments/386641564,https://github.com/hyperledger/iroha/pull/1204#issuecomment-386641564,nickaleks,Please split amount_utils to header and cpp files. ,2018-05-04 15:42:51,2018-05-04 15:43:09
https://api.github.com/repos/hyperledger/iroha/issues/1201,https://api.github.com/repos/hyperledger/iroha/issues/comments/381526901,https://github.com/hyperledger/iroha/issues/1201#issuecomment-381526901,neewy,Fixed in #1205 ,2018-04-16 08:51:09,2018-04-16 08:51:09
https://api.github.com/repos/hyperledger/iroha/issues/1200,https://api.github.com/repos/hyperledger/iroha/issues/comments/380768730,https://github.com/hyperledger/iroha/pull/1200#issuecomment-380768730,neewy,Next time do not forget to put full description for PR,2018-04-12 11:12:54,2018-04-12 11:13:07
https://api.github.com/repos/hyperledger/iroha/issues/1200,https://api.github.com/repos/hyperledger/iroha/issues/comments/380769018,https://github.com/hyperledger/iroha/pull/1200#issuecomment-380769018,neewy,"@victordrobny @lebdron 

> docs directory should also be updated, but probably in a separate pull request.

If you can do it here I see no problem updating information related to txCounter",2018-04-12 11:13:52,2018-04-12 11:13:52
https://api.github.com/repos/hyperledger/iroha/issues/1200,https://api.github.com/repos/hyperledger/iroha/issues/comments/380797385,https://github.com/hyperledger/iroha/pull/1200#issuecomment-380797385,lebdron,"@neewy the idea was to separate changes to code and documentation, but it should be OK since the changes to documentation are not large. 
https://github.com/hyperledger/iroha-ios also needs to be updated",2018-04-12 13:03:25,2018-04-12 13:03:25
https://api.github.com/repos/hyperledger/iroha/issues/1200,https://api.github.com/repos/hyperledger/iroha/issues/comments/381152725,https://github.com/hyperledger/iroha/pull/1200#issuecomment-381152725,sorabot,"SonarQube analysis reported 12 issues
* ![MINOR][MINOR] 12 minor

#### Top 10 issues

1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L145](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/iroha-cli/interactive/interactive_transaction_cli.hpp#L145): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L112](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L112): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/9dfe6099315d670dde46848871462be2cdfb1f74/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-13 14:27:34,2018-04-13 14:27:34
https://api.github.com/repos/hyperledger/iroha/issues/1199,https://api.github.com/repos/hyperledger/iroha/issues/comments/381558947,https://github.com/hyperledger/iroha/pull/1199#issuecomment-381558947,victordrobny,Docs are fixed. Python bindings works.,2018-04-16 10:49:13,2018-04-16 10:49:13
https://api.github.com/repos/hyperledger/iroha/issues/1199,https://api.github.com/repos/hyperledger/iroha/issues/comments/381569190,https://github.com/hyperledger/iroha/pull/1199#issuecomment-381569190,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L309](https://github.com/hyperledger/iroha/blob/d8afda35ea9af05c95b2fee277e9cc86a6cc9cc6/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L309): Variable 'permittee_account' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L369](https://github.com/hyperledger/iroha/blob/d8afda35ea9af05c95b2fee277e9cc86a6cc9cc6/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L369): Variable 'peer' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-16 11:34:49,2018-04-16 11:34:49
https://api.github.com/repos/hyperledger/iroha/issues/1196,https://api.github.com/repos/hyperledger/iroha/issues/comments/380605043,https://github.com/hyperledger/iroha/pull/1196#issuecomment-380605043,l4l,Does that behavior work before? Seems that there's a mutex deadlock in OS' dtor introduced previously,2018-04-11 21:42:42,2018-04-11 21:42:42
https://api.github.com/repos/hyperledger/iroha/issues/1196,https://api.github.com/repos/hyperledger/iroha/issues/comments/380609436,https://github.com/hyperledger/iroha/pull/1196#issuecomment-380609436,x3medima17,@l4l On develop branch I could not reproduce this behaviour ,2018-04-11 22:00:06,2018-04-11 22:00:06
https://api.github.com/repos/hyperledger/iroha/issues/1196,https://api.github.com/repos/hyperledger/iroha/issues/comments/381323528,https://github.com/hyperledger/iroha/pull/1196#issuecomment-381323528,l4l,"@x3medima17 Seems that there was another issue, that the unsubscribe was called in observable dtor and thus the lock happened, fixed",2018-04-14 11:46:31,2018-04-14 18:57:54
https://api.github.com/repos/hyperledger/iroha/issues/1196,https://api.github.com/repos/hyperledger/iroha/issues/comments/384189474,https://github.com/hyperledger/iroha/pull/1196#issuecomment-384189474,neewy,"Since you have added ""candidate for closing tag"" it is not clear why. Is there any impediment? Does this change still make sense to add?",2018-04-25 07:37:21,2018-04-25 07:37:21
https://api.github.com/repos/hyperledger/iroha/issues/1196,https://api.github.com/repos/hyperledger/iroha/issues/comments/384207418,https://github.com/hyperledger/iroha/pull/1196#issuecomment-384207418,l4l,Decided to rework that fixes and add them after #1268,2018-04-25 08:37:53,2018-04-25 08:37:53
https://api.github.com/repos/hyperledger/iroha/issues/1195,https://api.github.com/repos/hyperledger/iroha/issues/comments/379941779,https://github.com/hyperledger/iroha/pull/1195#issuecomment-379941779,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [keys_manager_impl.cpp#L93](https://github.com/hyperledger/iroha/blob/7d67f68f0e527a878515bfe1734db5e6821e80b8/libs/crypto/keys_manager_impl.cpp#L93): Boolean result is used in bitwise operation. Clarify expression with parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AclarifyCondition)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-10 01:10:42,2018-04-10 01:10:42
https://api.github.com/repos/hyperledger/iroha/issues/1194,https://api.github.com/repos/hyperledger/iroha/issues/comments/380037984,https://github.com/hyperledger/iroha/pull/1194#issuecomment-380037984,sorabot,"SonarQube analysis reported 9 issues

1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/0ba020c837c8b47313eeb5e44bfe945af7570cd0/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/0ba020c837c8b47313eeb5e44bfe945af7570cd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/0ba020c837c8b47313eeb5e44bfe945af7570cd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/0ba020c837c8b47313eeb5e44bfe945af7570cd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/0ba020c837c8b47313eeb5e44bfe945af7570cd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/0ba020c837c8b47313eeb5e44bfe945af7570cd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/0ba020c837c8b47313eeb5e44bfe945af7570cd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/0ba020c837c8b47313eeb5e44bfe945af7570cd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/0ba020c837c8b47313eeb5e44bfe945af7570cd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-10 09:38:12,2018-04-10 09:38:12
https://api.github.com/repos/hyperledger/iroha/issues/1193,https://api.github.com/repos/hyperledger/iroha/issues/comments/380867455,https://github.com/hyperledger/iroha/pull/1193#issuecomment-380867455,neewy,This fix should contain test with text data based on modified version of ed25519,2018-04-12 16:34:19,2018-04-12 16:34:19
https://api.github.com/repos/hyperledger/iroha/issues/1193,https://api.github.com/repos/hyperledger/iroha/issues/comments/381244502,https://github.com/hyperledger/iroha/pull/1193#issuecomment-381244502,l4l,"It is not really trivial to write the test for that case, as long as:
1. requires modification of iroha-ed25519
2. or there's a need somehow skip timeout check (that is not trivial at all)",2018-04-13 19:53:58,2018-04-13 19:53:58
https://api.github.com/repos/hyperledger/iroha/issues/1193,https://api.github.com/repos/hyperledger/iroha/issues/comments/381518284,https://github.com/hyperledger/iroha/pull/1193#issuecomment-381518284,lebdron,"@l4l What kind of timeout check do you mean? It should be possible to create a transaction with `TestTransactionBuilder`, call `addSignature` with modified ed25519 signature, and pass this transaction as an input for some unit or integration test.",2018-04-16 08:19:35,2018-04-16 08:19:35
https://api.github.com/repos/hyperledger/iroha/issues/1193,https://api.github.com/repos/hyperledger/iroha/issues/comments/381577021,https://github.com/hyperledger/iroha/pull/1193#issuecomment-381577021,l4l,Good idea,2018-04-16 12:08:25,2018-04-16 21:47:58
https://api.github.com/repos/hyperledger/iroha/issues/1193,https://api.github.com/repos/hyperledger/iroha/issues/comments/384187371,https://github.com/hyperledger/iroha/pull/1193#issuecomment-384187371,neewy,"Any progress? I've noticed you have added test in commit above, is it sufficient to review this fix?",2018-04-25 07:28:51,2018-04-25 07:28:51
https://api.github.com/repos/hyperledger/iroha/issues/1193,https://api.github.com/repos/hyperledger/iroha/issues/comments/384206694,https://github.com/hyperledger/iroha/pull/1193#issuecomment-384206694,l4l,"Yes, for now only that test can be done without significant projects changes and I think better review&merge it asap, then think about other components (though, they will work as well, as they have code duplication actually)",2018-04-25 08:35:49,2018-04-25 08:35:49
https://api.github.com/repos/hyperledger/iroha/issues/1191,https://api.github.com/repos/hyperledger/iroha/issues/comments/379509879,https://github.com/hyperledger/iroha/issues/1191#issuecomment-379509879,grimadas,"Hi! 
AddAssetQuantity for only for adding to the creator account.
If your creator is `admin@test` - addAssetQuantity must first be added to `admin@test` and then transferred to ```test@test```. ",2018-04-08 00:47:34,2018-04-08 00:47:34
https://api.github.com/repos/hyperledger/iroha/issues/1191,https://api.github.com/repos/hyperledger/iroha/issues/comments/379527153,https://github.com/hyperledger/iroha/issues/1191#issuecomment-379527153,walkero,"@grimadas thank you
You are right, I tried your advise with iroha-cli, 
first addAssetQuantity to admin@test, and then transferred to test@test,
It is OK.

When I tried to use my java program, 
first addAssetQuantity to admin@test,  I received error message:
`[2018-04-08 06:24:31.937541513][th:32265][error] TemporaryWSV AddAssetQuantity: **precision mismatch: expected , but got** `

and I found ModelTransactionBuilder::addAssetQuantity() method
has no precision parameter in ModelTransactionBuilder.java file：
```
  public ModelTransactionBuilder addAssetQuantity(String account_id, String asset_id, String amount) {
    return new ModelTransactionBuilder(irohaJNI.ModelTransactionBuilder_addAssetQuantity(swigCPtr, this, account_id, asset_id, amount), true);
  }
```

also ModelTransactionBuilder::transferAsset() method has no  precision parameter 
in ModelTransactionBuilder.java file：
```
  public ModelTransactionBuilder transferAsset(String src_account_id, String dest_account_id, String asset_id, String description, String amount) {
    return new ModelTransactionBuilder(irohaJNI.ModelTransactionBuilder_transferAsset(swigCPtr, this, src_account_id, dest_account_id, asset_id, description, amount), true);
  }
```

It is a bugger?

thanks
",2018-04-08 07:19:00,2018-04-08 07:19:00
https://api.github.com/repos/hyperledger/iroha/issues/1191,https://api.github.com/repos/hyperledger/iroha/issues/comments/379528967,https://github.com/hyperledger/iroha/issues/1191#issuecomment-379528967,walkero,"hi,
I solved this problem,
I has a mistake, I should pass
`amount = ""300.70"";`
but not
`amount = ""30070"";`
in my java program.

thank you.
",2018-04-08 07:50:03,2018-04-08 07:50:27
https://api.github.com/repos/hyperledger/iroha/issues/1188,https://api.github.com/repos/hyperledger/iroha/issues/comments/379239295,https://github.com/hyperledger/iroha/pull/1188#issuecomment-379239295,sorabot,"SonarQube analysis reported 8 issues

1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/5ac8745b081150af6152f9c67fb6a6f1f958dbd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/5ac8745b081150af6152f9c67fb6a6f1f958dbd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/5ac8745b081150af6152f9c67fb6a6f1f958dbd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L196](https://github.com/hyperledger/iroha/blob/5ac8745b081150af6152f9c67fb6a6f1f958dbd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L196): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/5ac8745b081150af6152f9c67fb6a6f1f958dbd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/5ac8745b081150af6152f9c67fb6a6f1f958dbd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/5ac8745b081150af6152f9c67fb6a6f1f958dbd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L298](https://github.com/hyperledger/iroha/blob/5ac8745b081150af6152f9c67fb6a6f1f958dbd0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L298): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-06 12:33:40,2018-04-06 12:33:40
https://api.github.com/repos/hyperledger/iroha/issues/1187,https://api.github.com/repos/hyperledger/iroha/issues/comments/379995689,https://github.com/hyperledger/iroha/pull/1187#issuecomment-379995689,Solonets,doesn't really work,2018-04-10 07:02:21,2018-04-10 07:02:21
https://api.github.com/repos/hyperledger/iroha/issues/1186,https://api.github.com/repos/hyperledger/iroha/issues/comments/379183319,https://github.com/hyperledger/iroha/pull/1186#issuecomment-379183319,sorabot,"SonarQube analysis reported 9 issues

1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L79](https://github.com/hyperledger/iroha/blob/8ff0c6e26c460180f21bb873fceb1eecf3bdcf88/irohad/ordering/impl/ordering_gate_impl.hpp#L79): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8ff0c6e26c460180f21bb873fceb1eecf3bdcf88/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8ff0c6e26c460180f21bb873fceb1eecf3bdcf88/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8ff0c6e26c460180f21bb873fceb1eecf3bdcf88/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8ff0c6e26c460180f21bb873fceb1eecf3bdcf88/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8ff0c6e26c460180f21bb873fceb1eecf3bdcf88/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8ff0c6e26c460180f21bb873fceb1eecf3bdcf88/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8ff0c6e26c460180f21bb873fceb1eecf3bdcf88/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8ff0c6e26c460180f21bb873fceb1eecf3bdcf88/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-06 08:20:51,2018-04-06 08:20:51
https://api.github.com/repos/hyperledger/iroha/issues/1183,https://api.github.com/repos/hyperledger/iroha/issues/comments/378910848,https://github.com/hyperledger/iroha/issues/1183#issuecomment-378910848,laSinteZ,"@tkuhrt 
Thank you for your time!
Considering listed issues:

1, 3: iroha/docs/source/conf.py will be fixed, as well as note about CC-BY-4.0, for docs in Readme after https://github.com/hyperledger/iroha/pull/1184 is merged

2: about sha3.c: it is stated that those files are in Public Domain and are based on other work. I have looked through Keccak repositories, and turns out that those files are based at https://github.com/gvanas/KeccakCodePackage which are also licensed as Public Domain, so I guess there is no issue. Please tell me if there is any.

4: We will ask for exceptions for all those files. (there are not that much of them)

We also will work on licensing all missed files soon and ask you to rerun the check again. 

Also, we will open issues and add all necessary info about licenses to other repos soon.


",2018-04-05 11:54:40,2018-04-05 11:54:40
https://api.github.com/repos/hyperledger/iroha/issues/1183,https://api.github.com/repos/hyperledger/iroha/issues/comments/379020542,https://github.com/hyperledger/iroha/issues/1183#issuecomment-379020542,tkuhrt,"@laSinteZ : Regarding the sha3.c license, we will need to include this in the list of files that will require an exception. Thanks for working through this.",2018-04-05 17:48:47,2018-04-05 17:48:47
https://api.github.com/repos/hyperledger/iroha/issues/1183,https://api.github.com/repos/hyperledger/iroha/issues/comments/379718613,https://github.com/hyperledger/iroha/issues/1183#issuecomment-379718613,laSinteZ,"@tkuhrt could you help us please?
If we are planning to change our README file with https://github.com/hyperledger/iroha/pull/1184 like this: 
<img width=""1223"" alt=""screen shot 2018-04-09 at 14 13 11"" src=""https://user-images.githubusercontent.com/10958990/38494915-58dd2862-3c00-11e8-9a06-acd78bd3fc58.png"">
Should we also change this text (Licensed under... => Iroha codebase is licensed under...) in every single file? (For example here https://github.com/hyperledger/iroha/blob/master/irohad/validation/chain_validator.hpp )

Also, should we include all this text into all files like [here](https://github.com/hyperledger/iroha/blob/master/irohad/validation/chain_validator.hpp) (`Copyright Soramitsu Co., Ltd. 2017 All Rights Reserved. ... limitations under the License. `) or something similar to Fabric (https://github.com/hyperledger/fabric/blob/release-1.1/core/aclmgmt/aclmgmt.go) is enough? e.g.  
```
/*
Copyright IBM Corp. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0
*/
```",2018-04-09 11:19:58,2018-04-09 11:21:39
https://api.github.com/repos/hyperledger/iroha/issues/1183,https://api.github.com/repos/hyperledger/iroha/issues/comments/380881406,https://github.com/hyperledger/iroha/issues/1183#issuecomment-380881406,tkuhrt,"You do not need to modify files that already have the license text. 

We do not have a mandated header but let projects decide what and how they want to establish a practice for this.  

We generally find copyright notices in headers fall out of date quickly. The contributor data is stored in git and determining ""copyright"" requires an analysis that becomes quite complex after the initial commit. 

We DO NOT remove copyright notices that are already in a file unless they're removed by the copyright owner. 

Most of our projects say something like, ""Copyright Hyperledger Project and its contributors."" and then include a SPDX short identifier for the license. How to use SPDX short identifier is explained in the presentation below, but for Apache 2, it would be a simple comment at the top of the file:  

```
Copyright Hyperledger Project and its contributors
SPDX-License-Identifier: Apache-2.0
```

  ",2018-04-12 17:20:33,2018-04-12 17:20:33
https://api.github.com/repos/hyperledger/iroha/issues/1183,https://api.github.com/repos/hyperledger/iroha/issues/comments/454694566,https://github.com/hyperledger/iroha/issues/1183#issuecomment-454694566,neewy,"@tkuhrt Tracy, could you please tell if this issue is stale or not? Do we need to open a ticket in HL Helpdesk for a rescan?",2019-01-16 08:33:31,2019-01-16 08:33:31
https://api.github.com/repos/hyperledger/iroha/issues/1183,https://api.github.com/repos/hyperledger/iroha/issues/comments/454755571,https://github.com/hyperledger/iroha/issues/1183#issuecomment-454755571,l4l,#1944 related,2019-01-16 12:04:46,2019-01-16 12:04:46
https://api.github.com/repos/hyperledger/iroha/issues/1183,https://api.github.com/repos/hyperledger/iroha/issues/comments/454802249,https://github.com/hyperledger/iroha/issues/1183#issuecomment-454802249,tkuhrt,@dhuseby will be running a new scan this week against the master branch. Results most likely next week.,2019-01-16 14:39:02,2019-01-16 14:39:02
https://api.github.com/repos/hyperledger/iroha/issues/1183,https://api.github.com/repos/hyperledger/iroha/issues/comments/455158058,https://github.com/hyperledger/iroha/issues/1183#issuecomment-455158058,neewy,Thanks!,2019-01-17 12:40:08,2019-01-17 12:40:08
https://api.github.com/repos/hyperledger/iroha/issues/1183,https://api.github.com/repos/hyperledger/iroha/issues/comments/459457365,https://github.com/hyperledger/iroha/issues/1183#issuecomment-459457365,dhuseby,I've got the results and will be filing new bugs in the Iroha JIRA.,2019-01-31 18:40:46,2019-01-31 18:40:46
https://api.github.com/repos/hyperledger/iroha/issues/1182,https://api.github.com/repos/hyperledger/iroha/issues/comments/384275311,https://github.com/hyperledger/iroha/pull/1182#issuecomment-384275311,lebdron,@muratovv @luckychess please check the latest ~~commit~~ commits,2018-04-25 12:51:52,2018-04-26 06:18:03
https://api.github.com/repos/hyperledger/iroha/issues/1182,https://api.github.com/repos/hyperledger/iroha/issues/comments/384726778,https://github.com/hyperledger/iroha/pull/1182#issuecomment-384726778,lebdron,"Simulator lock fix is applied in https://github.com/hyperledger/iroha/pull/1243 , other changes should be moved to a separate pull request.",2018-04-26 17:39:53,2018-04-26 17:39:53
https://api.github.com/repos/hyperledger/iroha/issues/1181,https://api.github.com/repos/hyperledger/iroha/issues/comments/378905129,https://github.com/hyperledger/iroha/pull/1181#issuecomment-378905129,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L79](https://github.com/hyperledger/iroha/blob/b4a45d8bf78a5f2fb34361a307051d80c048821d/irohad/ordering/impl/ordering_gate_impl.hpp#L79): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-05 11:30:25,2018-04-05 11:30:25
https://api.github.com/repos/hyperledger/iroha/issues/1179,https://api.github.com/repos/hyperledger/iroha/issues/comments/379539488,https://github.com/hyperledger/iroha/pull/1179#issuecomment-379539488,l4l,"Consider plz the following issues:
- [ed25519 packaging](https://github.com/hyperledger/iroha/pull/1170#issuecomment-378347814)
- [forced dependencies resolving](https://github.com/hyperledger/iroha/pull/1170#issuecomment-378348753)
- explicitly saying, that there's only python**3** bindings here (or maybe it's better just add python2 package?)",2018-04-08 10:31:54,2018-04-08 10:32:32
https://api.github.com/repos/hyperledger/iroha/issues/1179,https://api.github.com/repos/hyperledger/iroha/issues/comments/381591175,https://github.com/hyperledger/iroha/pull/1179#issuecomment-381591175,neewy,Let's stay with Java and Python in this PR. Is it safe to merge & review? @bakhtin please update reviewers list and answer @l4l thanks,2018-04-16 13:01:48,2018-04-16 13:01:48
https://api.github.com/repos/hyperledger/iroha/issues/1179,https://api.github.com/repos/hyperledger/iroha/issues/comments/382306610,https://github.com/hyperledger/iroha/pull/1179#issuecomment-382306610,bakhtin,I'm currently in the process of testing of Android bindings. Some parts related to Java and Python bindings have also been rewritten. I'll update this PR as soon as I finish with Android bindings. This PR is NOT safe to merge right now,2018-04-18 08:25:18,2018-04-18 08:25:18
https://api.github.com/repos/hyperledger/iroha/issues/1178,https://api.github.com/repos/hyperledger/iroha/issues/comments/378309545,https://github.com/hyperledger/iroha/pull/1178#issuecomment-378309545,sorabot,"SonarQube analysis reported 8 issues

1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/99beda0be3a984372db0ce5c0f306c3ec1df8149/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/99beda0be3a984372db0ce5c0f306c3ec1df8149/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/99beda0be3a984372db0ce5c0f306c3ec1df8149/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/99beda0be3a984372db0ce5c0f306c3ec1df8149/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/99beda0be3a984372db0ce5c0f306c3ec1df8149/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/99beda0be3a984372db0ce5c0f306c3ec1df8149/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/99beda0be3a984372db0ce5c0f306c3ec1df8149/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/99beda0be3a984372db0ce5c0f306c3ec1df8149/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-03 16:22:30,2018-04-03 16:22:30
https://api.github.com/repos/hyperledger/iroha/issues/1178,https://api.github.com/repos/hyperledger/iroha/issues/comments/378640082,https://github.com/hyperledger/iroha/pull/1178#issuecomment-378640082,luckychess,Just wow!,2018-04-04 15:22:58,2018-04-04 15:22:58
https://api.github.com/repos/hyperledger/iroha/issues/1177,https://api.github.com/repos/hyperledger/iroha/issues/comments/378199409,https://github.com/hyperledger/iroha/pull/1177#issuecomment-378199409,sorabot,"SonarQube analysis reported 10 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/9e0e19035308c6ebaf706f709c5b7b3ac46e708b/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-03 10:11:15,2018-04-03 10:11:15
https://api.github.com/repos/hyperledger/iroha/issues/1176,https://api.github.com/repos/hyperledger/iroha/issues/comments/377906888,https://github.com/hyperledger/iroha/pull/1176#issuecomment-377906888,neewy,"> +1,361 −855

please include only relevant changes",2018-04-02 10:57:32,2018-04-02 10:57:32
https://api.github.com/repos/hyperledger/iroha/issues/1176,https://api.github.com/repos/hyperledger/iroha/issues/comments/377907187,https://github.com/hyperledger/iroha/pull/1176#issuecomment-377907187,neewy,"I am sorry, this code cannot compile. So far we cannot merge this change, please change your code accordingly, and explain your intention to improve this code and why it is efficient now.",2018-04-02 10:59:35,2018-04-02 10:59:35
https://api.github.com/repos/hyperledger/iroha/issues/1175,https://api.github.com/repos/hyperledger/iroha/issues/comments/377900312,https://github.com/hyperledger/iroha/pull/1175#issuecomment-377900312,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/e491597451ce07174c04028cefef7377c37567b2/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-02 10:10:26,2018-04-02 10:10:26
https://api.github.com/repos/hyperledger/iroha/issues/1175,https://api.github.com/repos/hyperledger/iroha/issues/comments/378003418,https://github.com/hyperledger/iroha/pull/1175#issuecomment-378003418,Warchant,"Build error https://pastebin.com/VcKjAqMT

```
bogdan@xps:~$ clang -v
clang version 7.0.0 (https://git.llvm.org/git/clang.git 6eb4766e65557933c30152738c47e6ff34a1d216) (https://git.llvm.org/git/llvm.git 930bcc9bdfb9542a292c3de874d7e6ba1464cfe0)
Target: x86_64-unknown-linux-gnu
```

Ninja, Linux Ubuntu 16.04",2018-04-02 18:30:49,2018-04-02 18:30:49
https://api.github.com/repos/hyperledger/iroha/issues/1175,https://api.github.com/repos/hyperledger/iroha/issues/comments/378014408,https://github.com/hyperledger/iroha/pull/1175#issuecomment-378014408,lebdron,"@Warchant That error is not related to code in Iroha, and clang 7 is not released yet.",2018-04-02 19:11:15,2018-04-02 19:11:15
https://api.github.com/repos/hyperledger/iroha/issues/1175,https://api.github.com/repos/hyperledger/iroha/issues/comments/378015664,https://github.com/hyperledger/iroha/pull/1175#issuecomment-378015664,lebdron,"Also the code referenced in paste seems outdated, because that issue is already fixed in revision used in master branch - https://github.com/Reactive-Extensions/RxCpp/commit/1b2e0589f19cb34d8cd58803677701dcf2161876 .",2018-04-02 19:16:26,2018-04-02 19:16:26
https://api.github.com/repos/hyperledger/iroha/issues/1174,https://api.github.com/repos/hyperledger/iroha/issues/comments/381421526,https://github.com/hyperledger/iroha/pull/1174#issuecomment-381421526,x3medima17,@l4l @muratovv @Alexey-N-Chernyshov sorry for the rebase,2018-04-15 17:02:33,2018-04-15 17:02:33
https://api.github.com/repos/hyperledger/iroha/issues/1173,https://api.github.com/repos/hyperledger/iroha/issues/comments/377786677,https://github.com/hyperledger/iroha/issues/1173#issuecomment-377786677,muratovv,"Thank you for the issue.

Nice catch. I think missed link is the following: [link](http://iroha.readthedocs.io/en/latest/guides/deployment/#running-multiple-instances-peer-network).

We will fix it soon.",2018-04-01 13:24:33,2018-04-01 13:24:33
https://api.github.com/repos/hyperledger/iroha/issues/1173,https://api.github.com/repos/hyperledger/iroha/issues/comments/377881784,https://github.com/hyperledger/iroha/issues/1173#issuecomment-377881784,neewy,@RadW2020 please use this guide https://github.com/hyperledger/iroha/tree/master/deploy/ansible 🙏 ,2018-04-02 08:15:01,2018-04-02 08:15:01
https://api.github.com/repos/hyperledger/iroha/issues/1173,https://api.github.com/repos/hyperledger/iroha/issues/comments/411966522,https://github.com/hyperledger/iroha/issues/1173#issuecomment-411966522,truongnmt,"@muratovv the link you provide is invalid
",2018-08-10 03:42:41,2018-08-10 03:42:41
https://api.github.com/repos/hyperledger/iroha/issues/1173,https://api.github.com/repos/hyperledger/iroha/issues/comments/427064734,https://github.com/hyperledger/iroha/issues/1173#issuecomment-427064734,laSinteZ,Resolved in https://github.com/hyperledger/iroha/pull/1759,2018-10-04 15:33:44,2018-10-04 15:33:44
https://api.github.com/repos/hyperledger/iroha/issues/1172,https://api.github.com/repos/hyperledger/iroha/issues/comments/377725242,https://github.com/hyperledger/iroha/issues/1172#issuecomment-377725242,l4l,"Haven't noticed, postgres have error messages, it is fine",2018-03-31 21:37:12,2018-03-31 21:37:12
https://api.github.com/repos/hyperledger/iroha/issues/1171,https://api.github.com/repos/hyperledger/iroha/issues/comments/378021809,https://github.com/hyperledger/iroha/pull/1171#issuecomment-378021809,sorabot,"SonarQube analysis reported 9 issues

1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/51dc57f8657e9d9e04237e778003b537fa14c7ed/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/51dc57f8657e9d9e04237e778003b537fa14c7ed/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/51dc57f8657e9d9e04237e778003b537fa14c7ed/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/51dc57f8657e9d9e04237e778003b537fa14c7ed/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/51dc57f8657e9d9e04237e778003b537fa14c7ed/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/51dc57f8657e9d9e04237e778003b537fa14c7ed/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/51dc57f8657e9d9e04237e778003b537fa14c7ed/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/51dc57f8657e9d9e04237e778003b537fa14c7ed/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/51dc57f8657e9d9e04237e778003b537fa14c7ed/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-02 19:40:12,2018-04-02 19:40:12
https://api.github.com/repos/hyperledger/iroha/issues/1170,https://api.github.com/repos/hyperledger/iroha/issues/comments/378347814,https://github.com/hyperledger/iroha/pull/1170#issuecomment-378347814,l4l,"![screenshot_20180403_211916](https://user-images.githubusercontent.com/5658339/38267675-dac6cb60-3784-11e8-93aa-8f93a7966611.png)
:(",2018-04-03 18:20:46,2018-04-03 18:20:46
https://api.github.com/repos/hyperledger/iroha/issues/1170,https://api.github.com/repos/hyperledger/iroha/issues/comments/378348753,https://github.com/hyperledger/iroha/pull/1170#issuecomment-378348753,l4l,"![screenshot_20180403_212216](https://user-images.githubusercontent.com/5658339/38267821-3d442ba2-3785-11e8-86ab-f352d4bfc0b1.png)
protobuf + grpc is also seem necessary to provide",2018-04-03 18:23:50,2018-04-03 18:23:50
https://api.github.com/repos/hyperledger/iroha/issues/1170,https://api.github.com/repos/hyperledger/iroha/issues/comments/378573268,https://github.com/hyperledger/iroha/pull/1170#issuecomment-378573268,luckychess,I think libed25519 should be linked statically (as far as I remember) so first case could be OK. About second - you have to use same protobuf version as we use in Findprotobuf.cmake - 3.4.0.,2018-04-04 11:51:12,2018-04-04 11:51:12
https://api.github.com/repos/hyperledger/iroha/issues/1170,https://api.github.com/repos/hyperledger/iroha/issues/comments/378995766,https://github.com/hyperledger/iroha/pull/1170#issuecomment-378995766,bakhtin,"Please, continue the discussion about bindings in respective PR #1179. I think this PR should be merged regardless the bindings build status",2018-04-05 16:27:45,2018-04-05 16:27:45
https://api.github.com/repos/hyperledger/iroha/issues/1166,https://api.github.com/repos/hyperledger/iroha/issues/comments/377621686,https://github.com/hyperledger/iroha/pull/1166#issuecomment-377621686,l4l,Consider opening a new issue,2018-03-30 20:57:48,2018-03-30 20:57:48
https://api.github.com/repos/hyperledger/iroha/issues/1165,https://api.github.com/repos/hyperledger/iroha/issues/comments/377612594,https://github.com/hyperledger/iroha/pull/1165#issuecomment-377612594,rishavpiku,"@bramwelt  Sir
Why am I not being able to commit properly? I am not being able to get passed  through the DCO checks.",2018-03-30 20:15:28,2018-03-30 20:15:28
https://api.github.com/repos/hyperledger/iroha/issues/1165,https://api.github.com/repos/hyperledger/iroha/issues/comments/377621718,https://github.com/hyperledger/iroha/pull/1165#issuecomment-377621718,l4l,Consider opening a new issue,2018-03-30 20:57:56,2018-03-30 20:57:56
https://api.github.com/repos/hyperledger/iroha/issues/1164,https://api.github.com/repos/hyperledger/iroha/issues/comments/377621252,https://github.com/hyperledger/iroha/pull/1164#issuecomment-377621252,l4l,Is the pr up-to-date?,2018-03-30 20:55:52,2018-03-30 20:55:52
https://api.github.com/repos/hyperledger/iroha/issues/1161,https://api.github.com/repos/hyperledger/iroha/issues/comments/377505676,https://github.com/hyperledger/iroha/pull/1161#issuecomment-377505676,laSinteZ,[Here's built doc to smplify review](https://html-jjwoojciiu.now.sh/guides/libraries.html),2018-03-30 11:27:00,2018-03-30 11:27:00
https://api.github.com/repos/hyperledger/iroha/issues/1157,https://api.github.com/repos/hyperledger/iroha/issues/comments/377474275,https://github.com/hyperledger/iroha/pull/1157#issuecomment-377474275,luckychess,"Tests are separated from the rest of tests for now. To run them go to `shared_model/packages/javascript` and then run `npm install` and `npm run test`. Also 8 tests are fail at the moment.
Everything will be fixed after completing https://soramitsu.atlassian.net/browse/IR-1170, https://soramitsu.atlassian.net/browse/IR-1171 and https://soramitsu.atlassian.net/browse/IR-1188.",2018-03-30 08:13:05,2018-03-30 08:13:05
https://api.github.com/repos/hyperledger/iroha/issues/1155,https://api.github.com/repos/hyperledger/iroha/issues/comments/377474081,https://github.com/hyperledger/iroha/pull/1155#issuecomment-377474081,neewy,"Since Igor is not available, I am correcting his code according to review changes",2018-03-30 08:12:11,2018-03-30 08:12:11
https://api.github.com/repos/hyperledger/iroha/issues/1150,https://api.github.com/repos/hyperledger/iroha/issues/comments/377206709,https://github.com/hyperledger/iroha/pull/1150#issuecomment-377206709,victordrobny,"The purpose of this pr is to fix command_execution target, not chain_validator",2018-03-29 11:31:17,2018-03-29 11:31:17
https://api.github.com/repos/hyperledger/iroha/issues/1148,https://api.github.com/repos/hyperledger/iroha/issues/comments/377284263,https://github.com/hyperledger/iroha/pull/1148#issuecomment-377284263,neewy,"there is one thing we should also limit -- this is a message in transfer asset. there should be a decent limit for it, like 4096 is enough.",2018-03-29 16:01:41,2018-03-29 16:01:41
https://api.github.com/repos/hyperledger/iroha/issues/1148,https://api.github.com/repos/hyperledger/iroha/issues/comments/377375588,https://github.com/hyperledger/iroha/pull/1148#issuecomment-377375588,l4l,"disclaimer: I haven't look at the patch, only the pr-post, so I'm considering its up-to-date

address: domain name might be useful
detail: why is that small? e.g consider storing additional keys, like rsa; it might be more than 4K
created_time: number that can be represented in 32 bits, there is quite a difference
amount: why can be equal to 0",2018-03-29 21:18:43,2018-03-29 21:18:43
https://api.github.com/repos/hyperledger/iroha/issues/1148,https://api.github.com/repos/hyperledger/iroha/issues/comments/377576891,https://github.com/hyperledger/iroha/pull/1148#issuecomment-377576891,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/99b4868bce8b2f838a90a6a4863ebb2cf65a7889/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L70](https://github.com/hyperledger/iroha/blob/99b4868bce8b2f838a90a6a4863ebb2cf65a7889/irohad/ordering/impl/ordering_gate_impl.hpp#L70): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-30 17:29:51,2018-03-30 17:29:51
https://api.github.com/repos/hyperledger/iroha/issues/1147,https://api.github.com/repos/hyperledger/iroha/issues/comments/377176309,https://github.com/hyperledger/iroha/pull/1147#issuecomment-377176309,luckychess,Done.,2018-03-29 09:21:30,2018-03-29 09:21:30
https://api.github.com/repos/hyperledger/iroha/issues/1147,https://api.github.com/repos/hyperledger/iroha/issues/comments/377184198,https://github.com/hyperledger/iroha/pull/1147#issuecomment-377184198,l4l,"Move the rest packages as well plz, no need to add more similar prs",2018-03-29 09:51:28,2018-03-29 09:51:28
https://api.github.com/repos/hyperledger/iroha/issues/1147,https://api.github.com/repos/hyperledger/iroha/issues/comments/377186829,https://github.com/hyperledger/iroha/pull/1147#issuecomment-377186829,luckychess,Rest are actually not packages but examples.,2018-03-29 10:01:44,2018-03-29 10:01:44
https://api.github.com/repos/hyperledger/iroha/issues/1147,https://api.github.com/repos/hyperledger/iroha/issues/comments/377198046,https://github.com/hyperledger/iroha/pull/1147#issuecomment-377198046,neewy,спасибо,2018-03-29 10:50:34,2018-03-29 10:50:34
https://api.github.com/repos/hyperledger/iroha/issues/1146,https://api.github.com/repos/hyperledger/iroha/issues/comments/377189771,https://github.com/hyperledger/iroha/pull/1146#issuecomment-377189771,sorabot,"SonarQube analysis reported 5 issues

1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L114](https://github.com/hyperledger/iroha/blob/3e459bd9e3b1aac480d373427e202c90f60ad7d7/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L114): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/3e459bd9e3b1aac480d373427e202c90f60ad7d7/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L36): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/3e459bd9e3b1aac480d373427e202c90f60ad7d7/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L60](https://github.com/hyperledger/iroha/blob/3e459bd9e3b1aac480d373427e202c90f60ad7d7/irohad/consensus/yac/impl/yac_gate_impl.hpp#L60): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L32](https://github.com/hyperledger/iroha/blob/3e459bd9e3b1aac480d373427e202c90f60ad7d7/irohad/execution/impl/command_executor.cpp#L32): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-29 10:13:16,2018-03-29 10:13:16
https://api.github.com/repos/hyperledger/iroha/issues/1145,https://api.github.com/repos/hyperledger/iroha/issues/comments/377158793,https://github.com/hyperledger/iroha/pull/1145#issuecomment-377158793,lebdron,Now present in https://github.com/hyperledger/iroha/pull/1059,2018-03-29 08:14:34,2018-03-29 08:14:34
https://api.github.com/repos/hyperledger/iroha/issues/1144,https://api.github.com/repos/hyperledger/iroha/issues/comments/377163990,https://github.com/hyperledger/iroha/pull/1144#issuecomment-377163990,Warchant,">Shared model name is going to change to `irohalib` for a better consistency with UNIX naming style

Maybe `libiroha`? 

CMake target in this case will be named `iroha`. In this case, when you write `make install`, it will install this library as `libiroha.so.1.0.0` for Linux (with version, if it is configured like in iroha-ed25519 [[1]](https://github.com/hyperledger/iroha-ed25519/blob/master/CMakeLists.txt#L6) [[2]](https://github.com/hyperledger/iroha-ed25519/blob/master/CMakeLists.txt#L86-L91)) and `libiroha.1.0.0.dylib` for MacOS.

Also, it is good practice to [use export headers](https://cmake.org/cmake/help/v3.0/module/GenerateExportHeader.html) for such libraries.",2018-03-29 08:35:13,2018-03-29 08:47:13
https://api.github.com/repos/hyperledger/iroha/issues/1144,https://api.github.com/repos/hyperledger/iroha/issues/comments/377588032,https://github.com/hyperledger/iroha/pull/1144#issuecomment-377588032,sorabot,"SonarQube analysis reported 12 issues
* ![MINOR][MINOR] 12 minor

#### Top 10 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_index.hpp#L55](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/ametsuchi/impl/postgres_block_index.hpp#L55): Unused private function: 'PostgresBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/ametsuchi/impl/postgres_block_query.hpp#L72): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L80](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/ametsuchi/impl/postgres_block_query.hpp#L80): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L90](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/ametsuchi/impl/postgres_block_query.hpp#L90): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L114](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L114): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L36): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L60](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/consensus/yac/impl/yac_gate_impl.hpp#L60): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L31](https://github.com/hyperledger/iroha/blob/e13a37e3bece72e543d8e027e78ce413ae7ad358/irohad/execution/impl/command_executor.cpp#L31): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-30 18:18:20,2018-03-30 18:18:20
https://api.github.com/repos/hyperledger/iroha/issues/1141,https://api.github.com/repos/hyperledger/iroha/issues/comments/376880486,https://github.com/hyperledger/iroha/pull/1141#issuecomment-376880486,luckychess,Doesn't solve a problem since we http url redirects to another http which redirects to https.,2018-03-28 13:09:30,2018-03-28 13:09:30
https://api.github.com/repos/hyperledger/iroha/issues/1139,https://api.github.com/repos/hyperledger/iroha/issues/comments/376646231,https://github.com/hyperledger/iroha/pull/1139#issuecomment-376646231,l4l,Rebase plz,2018-03-27 19:29:15,2018-03-27 19:29:15
https://api.github.com/repos/hyperledger/iroha/issues/1139,https://api.github.com/repos/hyperledger/iroha/issues/comments/376792543,https://github.com/hyperledger/iroha/pull/1139#issuecomment-376792543,neewy,There is one thing missing:  in `example/java/TransactionExample.java` we don't have code which explains how to get status of a transaction using gRPC streaming. @muratovv should this example be added in a separate PR?,2018-03-28 07:43:30,2018-03-28 07:43:30
https://api.github.com/repos/hyperledger/iroha/issues/1138,https://api.github.com/repos/hyperledger/iroha/issues/comments/377188993,https://github.com/hyperledger/iroha/pull/1138#issuecomment-377188993,lebdron,Added +x and `CORES` parameter.,2018-03-29 10:10:00,2018-03-29 10:10:00
https://api.github.com/repos/hyperledger/iroha/issues/1135,https://api.github.com/repos/hyperledger/iroha/issues/comments/376478776,https://github.com/hyperledger/iroha/pull/1135#issuecomment-376478776,l4l,Description doesn't conform fixes :(,2018-03-27 10:39:25,2018-03-27 10:39:25
https://api.github.com/repos/hyperledger/iroha/issues/1134,https://api.github.com/repos/hyperledger/iroha/issues/comments/376323365,https://github.com/hyperledger/iroha/issues/1134#issuecomment-376323365,rishavpiku,"Hello, 

You can clone the repository primarily and then follow the steps as given (install with either npm/bower)
https://github.com/hyperledger/iroha-javascript
I hope that it works",2018-03-26 21:49:16,2018-03-26 21:49:16
https://api.github.com/repos/hyperledger/iroha/issues/1134,https://api.github.com/repos/hyperledger/iroha/issues/comments/376324297,https://github.com/hyperledger/iroha/issues/1134#issuecomment-376324297,l4l,"#1098 is going to be merged, here is the node.js bindings. For now there no standalone (afaik) library, but not sure
ping @stinger112 @laSinteZ ",2018-03-26 21:52:59,2018-03-26 21:52:59
https://api.github.com/repos/hyperledger/iroha/issues/1134,https://api.github.com/repos/hyperledger/iroha/issues/comments/376477129,https://github.com/hyperledger/iroha/issues/1134#issuecomment-376477129,laSinteZ,"The standalone library for Node.js is being under heavy tests right now and is almost ready. We will release it publicaly when we merge #1098 
Also, we are preparing documentation for this standalone library, so you will know, how to use it, but you can already try it if you follow Readme from #1098 

[https://github.com/hyperledger/iroha-javascript](https://github.com/hyperledger/iroha-javascript) is relevant only for Iroha 0.75 and it won't work with the most recent releases, we will put a warning in a readme soon.
",2018-03-27 10:32:38,2018-03-27 10:32:38
https://api.github.com/repos/hyperledger/iroha/issues/1134,https://api.github.com/repos/hyperledger/iroha/issues/comments/376654382,https://github.com/hyperledger/iroha/issues/1134#issuecomment-376654382,l4l,I close that issue as long as the pr was merged,2018-03-27 19:57:13,2018-03-27 19:57:13
https://api.github.com/repos/hyperledger/iroha/issues/1134,https://api.github.com/repos/hyperledger/iroha/issues/comments/377143331,https://github.com/hyperledger/iroha/issues/1134#issuecomment-377143331,stinger112,"@rishavpiku @walkero 
We released standalone **iroha-lib** NPM package.
https://www.npmjs.com/package/iroha-lib

Library is only for Mac and Linux. The code can be found [here](https://github.com/hyperledger/iroha/tree/develop/shared_model/packages/javascript).

It's in alfa stage, and we are open to your feedback. Thanks!",2018-03-29 07:08:29,2018-03-29 08:23:01
https://api.github.com/repos/hyperledger/iroha/issues/1132,https://api.github.com/repos/hyperledger/iroha/issues/comments/376190865,https://github.com/hyperledger/iroha/issues/1132#issuecomment-376190865,luckychess,Could you try to install latest stable swig (3.0.12)? Swig from master branch is a bit unstable sometimes.,2018-03-26 14:43:52,2018-03-26 14:43:52
https://api.github.com/repos/hyperledger/iroha/issues/1132,https://api.github.com/repos/hyperledger/iroha/issues/comments/376242783,https://github.com/hyperledger/iroha/issues/1132#issuecomment-376242783,walkero,"hi luckychess,  thank you.

I tried to install swig (3.0.12), but I got same errors.

---- unintall swig 4.0.0
cd /opt/iroha/swig
make uninstall

cd /opt/iroha
wget https://github.com/swig/swig/archive/rel-3.0.12.tar.gz
tar zxvf rel-3.0.12.tar.gz
cd swig-rel-3.0.12
./autogen.sh
./configure
make
make install

cd /opt/iroha/example/java
./prepare.sh
......
......
......
same errors

Thanks

",2018-03-26 17:16:33,2018-03-26 17:17:16
https://api.github.com/repos/hyperledger/iroha/issues/1132,https://api.github.com/repos/hyperledger/iroha/issues/comments/376325551,https://github.com/hyperledger/iroha/issues/1132#issuecomment-376325551,l4l,"swig should be installed on its own, try to remove every version of swig you installed before, clean the cache (all new files produced by prepare.sh) and run it once again",2018-03-26 21:58:25,2018-03-26 21:58:25
https://api.github.com/repos/hyperledger/iroha/issues/1132,https://api.github.com/repos/hyperledger/iroha/issues/comments/377526345,https://github.com/hyperledger/iroha/issues/1132#issuecomment-377526345,walkero,"hi l4l, thank you.

I updated cmake version from 3.5.1 to 3.9.4 
in container ( hyperledger/iroha-docker-develop:v1 ).
now run:
`cd /opt/iroha/example/java`
`./prepare.sh` 
is OK.

then I run:
`gradle run`
receive errors:
`> Task :compileJava `
`/opt/iroha/example/java/TransactionExample.java:41: error: cannot find symbol`
`private static ModelCrypto crypto = new ModelCrypto();`
`                       ^`
`symbol:   class ModelCrypto`
`location: class TransactionExample`

`/opt/iroha/example/java/TransactionExample.java:42: error: cannot find symbol`
`private static ModelTransactionBuilder txBuilder = new ModelTransactionBuilder();`
`	                   ^`
`	  symbol:   class ModelTransactionBuilder`
`	  location: class TransactionExample`

How to solve this problem?

Thanks
",2018-03-30 13:40:44,2018-03-30 13:41:26
https://api.github.com/repos/hyperledger/iroha/issues/1132,https://api.github.com/repos/hyperledger/iroha/issues/comments/377627017,https://github.com/hyperledger/iroha/issues/1132#issuecomment-377627017,l4l,"@walkero As far as I know gradle allow extend the output via `--info`/`--debug` flags or similar. That logs might be very useful (and post it please at the gist or pastebin).
Also make sure you have fresh versions of java/gradle, that also may be the cause.
And try to run just `gradle build` before, anyway you need to launch an iroha instance before sending transactions",2018-03-30 21:26:28,2018-03-30 21:26:28
https://api.github.com/repos/hyperledger/iroha/issues/1132,https://api.github.com/repos/hyperledger/iroha/issues/comments/377670434,https://github.com/hyperledger/iroha/issues/1132#issuecomment-377670434,walkero,"I have post debug message ( gradle --debug build > debug.txt 2>&1 )  at 
https://gist.github.com/walkero/f036f51cb376228e26351a2683bc2578

openjdk version ""1.8.0_151""
Gradle 4.6

Thanks",2018-03-31 06:31:19,2018-03-31 06:31:19
https://api.github.com/repos/hyperledger/iroha/issues/1132,https://api.github.com/repos/hyperledger/iroha/issues/comments/377680585,https://github.com/hyperledger/iroha/issues/1132#issuecomment-377680585,luckychess,"Could you please check example/java/build/shared_model/bindings folder? It should contain a bunch of .java files. If it does not could you remove example/java/build directory, then run ./prepare.sh again and put its log here?",2018-03-31 09:42:49,2018-03-31 09:42:49
https://api.github.com/repos/hyperledger/iroha/issues/1132,https://api.github.com/repos/hyperledger/iroha/issues/comments/377687207,https://github.com/hyperledger/iroha/issues/1132#issuecomment-377687207,walkero,"@l4l thank you.

I checked example/java/build/shared_model/bindings folder，
there is no .java files:
![image](https://user-images.githubusercontent.com/5620886/38162803-858d2fde-351a-11e8-8d4c-48c01d942f5e.png)

I removed example/java/build directory, then run
`./prepare.sh`
again, now a bunch of .java files was created:
![image](https://user-images.githubusercontent.com/5620886/38162845-3ea7bdb8-351b-11e8-9825-2bf4d513620d.png)

then I run:
`gradle build`
BUILD SUCCESSFUL in 20s !",2018-03-31 11:44:12,2018-03-31 11:44:12
https://api.github.com/repos/hyperledger/iroha/issues/1132,https://api.github.com/repos/hyperledger/iroha/issues/comments/377688186,https://github.com/hyperledger/iroha/issues/1132#issuecomment-377688186,walkero,"@l4l thank you very much

`gradle run` is successfully.",2018-03-31 12:01:41,2018-03-31 12:01:41
https://api.github.com/repos/hyperledger/iroha/issues/1130,https://api.github.com/repos/hyperledger/iroha/issues/comments/377484561,https://github.com/hyperledger/iroha/pull/1130#issuecomment-377484561,sorabot,"SonarQube analysis reported 1 issue

1. ![MAJOR][MAJOR] [query_response_template.hpp#L225](https://github.com/hyperledger/iroha/blob/bd1f9fa4f13b026530911f6341becd57362391bf/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L225): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2018-03-30 09:11:31,2018-03-30 09:11:31
https://api.github.com/repos/hyperledger/iroha/issues/1129,https://api.github.com/repos/hyperledger/iroha/issues/comments/376008488,https://github.com/hyperledger/iroha/issues/1129#issuecomment-376008488,Hatchi-San,try sudo ,2018-03-25 22:22:13,2018-03-25 22:22:13
https://api.github.com/repos/hyperledger/iroha/issues/1129,https://api.github.com/repos/hyperledger/iroha/issues/comments/376013772,https://github.com/hyperledger/iroha/issues/1129#issuecomment-376013772,jjacquet,"once I'm in the iroha instance and I try to run: `sudo irohad --config example/config.sample --genesis_block example/genesis.block --keypair_name example/node0` 

I get ` sudo: command not found`
",2018-03-25 23:51:17,2018-03-25 23:51:48
https://api.github.com/repos/hyperledger/iroha/issues/1129,https://api.github.com/repos/hyperledger/iroha/issues/comments/376101272,https://github.com/hyperledger/iroha/issues/1129#issuecomment-376101272,l4l,"Don't ever use sudo with irohad

May you specify the steps that you've done, like iroha's branch, container name pulled from dockerhub, building steps, etc. Anything that might be useful for reproduction",2018-03-26 09:20:29,2018-03-26 09:20:29
https://api.github.com/repos/hyperledger/iroha/issues/1129,https://api.github.com/repos/hyperledger/iroha/issues/comments/377347944,https://github.com/hyperledger/iroha/issues/1129#issuecomment-377347944,ghost,"@l4l I did use sudo at some point in the install, but now I have a new problem where the install stops at around 20%.

 Here's what I did on a new Ubuntu instance in AWS without using sudo

- git clone -b develop --depth=1 \
https://github.com/hyperledger/iroha
- run-iroha-dev.sh,

**Add docker user to group for socket communication:**
sudo usermod -a -G docker $USER (could this be a problem?)

cmake -H. -Bbuild;
cmake --build build -- -j$(nproc)

**Install stops at 20% **
Created 8 gig swap file

**sudo swapon --show** shows the 1.5gb of the swap is being used however still stuck at 20%


",2018-03-29 19:35:31,2018-03-29 19:36:13
https://api.github.com/repos/hyperledger/iroha/issues/1129,https://api.github.com/repos/hyperledger/iroha/issues/comments/377372121,https://github.com/hyperledger/iroha/issues/1129#issuecomment-377372121,l4l,"@jacquetring not sure that the adding a group may cause a problem at the build (though [it might be](https://github.com/moby/moby/issues/9976) a security issue)
I may guess that you don't have enough disk space, the only build may require nearly 10gb or even more. I am not able to say a lot based on your description, consider attaching building log (or some other related info)",2018-03-29 21:05:09,2018-03-29 21:05:09
https://api.github.com/repos/hyperledger/iroha/issues/1129,https://api.github.com/repos/hyperledger/iroha/issues/comments/377412373,https://github.com/hyperledger/iroha/issues/1129#issuecomment-377412373,ghost,"@l4l Ok, I terminated the instance and started Ubuntu with 4CPUs, 16gb ram and 100gb  drive to avoid space and cpu limitations. As I was reinstalling all the dependancies I think I may have found where `sudo` was keeping me from launching properly. When I go to run **`run-iroha-dev.sh`** I get the following:

**`Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.37/containers/json?filters=%7B%22name%22%3A%7B%22iroha1000_node_1%22%3Atrue%7D%7D: dial unix /var/run/docker.sock: connect: permission denied
ERROR: Couldn't connect to Docker daemon at http+docker://localunixsocket - is it running?`**

**`If its at a non-standard location, specify the URL with the DOCKER_HOST environment variable.`**

**`Iroha is mapped to host port 50051
Debugger is mapped to host port 20000`**

**`ERROR: Couldn't connect to Docker daemon at http+docker://localunixsocket - is it running?`**

**`If its at a non-standard location, specify the URL with the DOCKER_HOST environment variable.`**

If I list out **`groups $USER`** I don't see docker as a user in the group. If I try to add docker to the group with out sudo using **` usermod -aG docker ${USER}`** I get  `usermod: Permission denied.`",2018-03-30 00:33:35,2018-03-30 00:48:15
https://api.github.com/repos/hyperledger/iroha/issues/1129,https://api.github.com/repos/hyperledger/iroha/issues/comments/377493802,https://github.com/hyperledger/iroha/issues/1129#issuecomment-377493802,l4l,"@jacquetring well, I was saying that sudo shouldn't be used for iroha launching blindly, docker obviously should use root privileges (or docker group). So either docker daemon should be started with root, or even simplier use sudo for your last usermod command",2018-03-30 10:04:58,2018-03-30 10:04:58
https://api.github.com/repos/hyperledger/iroha/issues/1129,https://api.github.com/repos/hyperledger/iroha/issues/comments/393336952,https://github.com/hyperledger/iroha/issues/1129#issuecomment-393336952,l4l,"Topic issue was outdated as long as there is no redis usage now, moreover the docker images available at docker hub. Feel free opening a **new** issue if you still have problems with docker image building",2018-05-30 22:13:50,2018-05-30 22:13:50
https://api.github.com/repos/hyperledger/iroha/issues/1128,https://api.github.com/repos/hyperledger/iroha/issues/comments/376757692,https://github.com/hyperledger/iroha/pull/1128#issuecomment-376757692,l4l,"Maybe **nightly** -> **night-time**
I have an association of unstable packages for nightly builds (e.g firefox)",2018-03-28 04:28:43,2018-03-28 04:28:43
https://api.github.com/repos/hyperledger/iroha/issues/1127,https://api.github.com/repos/hyperledger/iroha/issues/comments/375954435,https://github.com/hyperledger/iroha/issues/1127#issuecomment-375954435,jjacquet,adding a larger volume to the instance was the key,2018-03-25 08:39:02,2018-03-25 08:39:02
https://api.github.com/repos/hyperledger/iroha/issues/1126,https://api.github.com/repos/hyperledger/iroha/issues/comments/375942681,https://github.com/hyperledger/iroha/issues/1126#issuecomment-375942681,jjacquet,I didn't run cmake problem resolved ,2018-03-25 03:30:29,2018-03-25 03:30:29
https://api.github.com/repos/hyperledger/iroha/issues/1121,https://api.github.com/repos/hyperledger/iroha/issues/comments/375869573,https://github.com/hyperledger/iroha/pull/1121#issuecomment-375869573,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1121?src=pr&el=h1) Report
> Merging [#1121](https://codecov.io/gh/hyperledger/iroha/pull/1121?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/9e250e4d16fd630c61de55f872a6d2b39fe14194?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1121/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1121?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1121   +/-   ##
========================================
  Coverage    31.93%   31.93%           
========================================
  Files          564      564           
  Lines        17494    17494           
  Branches     11415    11415           
========================================
  Hits          5586     5586           
  Misses        1391     1391           
  Partials     10517    10517
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1121?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1121?src=pr&el=footer). Last update [9e250e4...9245fc9](https://codecov.io/gh/hyperledger/iroha/pull/1121?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-24 10:42:36,2018-03-25 15:00:15
https://api.github.com/repos/hyperledger/iroha/issues/1120,https://api.github.com/repos/hyperledger/iroha/issues/comments/375806535,https://github.com/hyperledger/iroha/pull/1120#issuecomment-375806535,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1120?src=pr&el=h1) Report
> Merging [#1120](https://codecov.io/gh/hyperledger/iroha/pull/1120?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6d4e8a7c8e6536074babf87e0f43dd2ba533379b?src=pr&el=desc) will **decrease** coverage by `0.13%`.
> The diff coverage is `5.49%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1120/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1120?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1120      +/-   ##
===========================================
- Coverage    31.93%   31.79%   -0.14%     
===========================================
  Files          564      565       +1     
  Lines        17494    17585      +91     
  Branches     11415    11501      +86     
===========================================
+ Hits          5586     5591       +5     
  Misses        1391     1391              
- Partials     10517    10603      +86
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1120?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/integration/acceptance/add\_asset\_qty\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1120/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2FkZF9hc3NldF9xdHlfdGVzdC5jcHA=) | `5.49% <5.49%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1120?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1120?src=pr&el=footer). Last update [6d4e8a7...8b1f75f](https://codecov.io/gh/hyperledger/iroha/pull/1120?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-23 21:43:59,2018-03-27 10:30:35
https://api.github.com/repos/hyperledger/iroha/issues/1119,https://api.github.com/repos/hyperledger/iroha/issues/comments/375788179,https://github.com/hyperledger/iroha/pull/1119#issuecomment-375788179,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1119?src=pr&el=h1) Report
> Merging [#1119](https://codecov.io/gh/hyperledger/iroha/pull/1119?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6d4e8a7c8e6536074babf87e0f43dd2ba533379b?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `13.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1119/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1119?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1119      +/-   ##
===========================================
- Coverage    31.93%   31.91%   -0.02%     
===========================================
  Files          564      564              
  Lines        17494    17508      +14     
  Branches     11415    11428      +13     
===========================================
+ Hits          5586     5587       +1     
  Misses        1391     1391              
- Partials     10517    10530      +13
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1119?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...est/integration/acceptance/transfer\_asset\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1119/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL3RyYW5zZmVyX2Fzc2V0X3Rlc3QuY3Bw) | `4.86% <0%> (-0.28%)` | :arrow_down: |
| [shared\_model/validators/transaction\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1119/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yLmhwcA==) | `48.03% <0%> (-0.77%)` | :arrow_down: |
| [...ule/shared\_model/validators/validators\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1119/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9yc19maXh0dXJlLmhwcA==) | `56.96% <66.66%> (-0.19%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1119?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1119?src=pr&el=footer). Last update [6d4e8a7...80efcd7](https://codecov.io/gh/hyperledger/iroha/pull/1119?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-23 20:25:04,2018-03-24 08:23:15
https://api.github.com/repos/hyperledger/iroha/issues/1118,https://api.github.com/repos/hyperledger/iroha/issues/comments/376431461,https://github.com/hyperledger/iroha/pull/1118#issuecomment-376431461,l4l,Why is this closed?,2018-03-27 07:55:31,2018-03-27 07:55:31
https://api.github.com/repos/hyperledger/iroha/issues/1116,https://api.github.com/repos/hyperledger/iroha/issues/comments/376300109,https://github.com/hyperledger/iroha/pull/1116#issuecomment-376300109,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1116?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@21b40af`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `24.35%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1116/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1116?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1116   +/-   ##
==========================================
  Coverage           ?   32.43%           
==========================================
  Files              ?      559           
  Lines              ?    17139           
  Branches           ?    11079           
==========================================
  Hits               ?     5559           
  Misses             ?     1389           
  Partials           ?    10191
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1116?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ohad/consensus/yac/transport/impl/network\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/network/impl/block\_loader\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5ocHA=) | `0% <ø> (ø)` | |
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `50% <ø> (ø)` | |
| [irohad/consensus/yac/yac.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMveWFjLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/consensus/yac/cluster\_order.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlci5ocHA=) | `50% <ø> (ø)` | |
| [irohad/consensus/yac/impl/yac\_gate\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [...ohad/consensus/yac/impl/yac\_hash\_provider\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfaGFzaF9wcm92aWRlcl9pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [.../consensus/yac/transport/yac\_network\_interface.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L3lhY19uZXR3b3JrX2ludGVyZmFjZS5ocHA=) | `50% <ø> (ø)` | |
| [...ule/irohad/consensus/yac/yac\_unknown\_peer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3Vua25vd25fcGVlcl90ZXN0LmNwcA==) | `9.3% <ø> (ø)` | |
| [irohad/consensus/yac/yac\_hash\_provider.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2hhc2hfcHJvdmlkZXIuaHBw) | `83.33% <ø> (ø)` | |
| ... and [25 more](https://codecov.io/gh/hyperledger/iroha/pull/1116/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1116?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1116?src=pr&el=footer). Last update [21b40af...4b95944](https://codecov.io/gh/hyperledger/iroha/pull/1116?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-26 20:25:52,2018-03-27 08:37:11
https://api.github.com/repos/hyperledger/iroha/issues/1115,https://api.github.com/repos/hyperledger/iroha/issues/comments/375430906,https://github.com/hyperledger/iroha/pull/1115#issuecomment-375430906,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1115?src=pr&el=h1) Report
> Merging [#1115](https://codecov.io/gh/hyperledger/iroha/pull/1115?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6c60b6d0df6b95ed888eef9e22fe02d3a60ac078?src=pr&el=desc) will **increase** coverage by `0.2%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1115/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1115?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #1115     +/-   ##
==========================================
+ Coverage    32.31%   32.51%   +0.2%     
==========================================
  Files          561      559      -2     
  Lines        17267    17101    -166     
  Branches     11194    11037    -157     
==========================================
- Hits          5580     5561     -19     
- Misses        1389     1392      +3     
+ Partials     10298    10148    -150
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1115?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/execution\_error.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1115/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9leGVjdXRpb25fZXJyb3IuaHBw) | `0% <0%> (-33.34%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1115/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `36.84% <0%> (-7.9%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1115/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `46.42% <0%> (-5.96%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1115/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `32.54% <0%> (-0.6%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1115/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `43.26% <0%> (ø)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1115/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `35.29% <0%> (ø)` | :arrow_up: |
| [test/integration/acceptance/create\_role\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1115/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9yb2xlX3Rlc3QuY3Bw) | | |
| [...est/integration/acceptance/create\_account\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1115/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9hY2NvdW50X3Rlc3QuY3Bw) | | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1115?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1115?src=pr&el=footer). Last update [6c60b6d...676faf9](https://codecov.io/gh/hyperledger/iroha/pull/1115?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-22 19:34:03,2018-03-23 09:15:21
https://api.github.com/repos/hyperledger/iroha/issues/1114,https://api.github.com/repos/hyperledger/iroha/issues/comments/375416013,https://github.com/hyperledger/iroha/pull/1114#issuecomment-375416013,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1114?src=pr&el=h1) Report
> Merging [#1114](https://codecov.io/gh/hyperledger/iroha/pull/1114?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/9e250e4d16fd630c61de55f872a6d2b39fe14194?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1114/graphs/tree.svg?token=VEvywEmaef&height=150&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1114?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1114   +/-   ##
========================================
  Coverage    31.93%   31.93%           
========================================
  Files          564      564           
  Lines        17494    17494           
  Branches     11415    11415           
========================================
  Hits          5586     5586           
  Misses        1391     1391           
  Partials     10517    10517
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1114?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1114?src=pr&el=footer). Last update [9e250e4...e65aadf](https://codecov.io/gh/hyperledger/iroha/pull/1114?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-22 18:42:29,2018-03-24 14:27:54
https://api.github.com/repos/hyperledger/iroha/issues/1113,https://api.github.com/repos/hyperledger/iroha/issues/comments/375337675,https://github.com/hyperledger/iroha/pull/1113#issuecomment-375337675,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1113?src=pr&el=h1) Report
> Merging [#1113](https://codecov.io/gh/hyperledger/iroha/pull/1113?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6c60b6d0df6b95ed888eef9e22fe02d3a60ac078?src=pr&el=desc) will **increase** coverage by `0.2%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1113/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1113?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #1113     +/-   ##
==========================================
+ Coverage    32.31%   32.51%   +0.2%     
==========================================
  Files          561      559      -2     
  Lines        17267    17101    -166     
  Branches     11194    11037    -157     
==========================================
- Hits          5580     5561     -19     
- Misses        1389     1392      +3     
+ Partials     10298    10148    -150
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1113?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/execution\_error.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1113/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9leGVjdXRpb25fZXJyb3IuaHBw) | `0% <0%> (-33.34%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1113/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `36.84% <0%> (-7.9%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1113/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `46.42% <0%> (-5.96%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1113/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `32.54% <0%> (-0.6%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1113/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `43.26% <0%> (ø)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1113/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `35.29% <0%> (ø)` | :arrow_up: |
| [...est/integration/acceptance/create\_account\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1113/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9hY2NvdW50X3Rlc3QuY3Bw) | | |
| [test/integration/acceptance/create\_role\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1113/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9yb2xlX3Rlc3QuY3Bw) | | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1113?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1113?src=pr&el=footer). Last update [6c60b6d...68ed8a6](https://codecov.io/gh/hyperledger/iroha/pull/1113?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-22 15:00:49,2018-03-23 09:13:43
https://api.github.com/repos/hyperledger/iroha/issues/1111,https://api.github.com/repos/hyperledger/iroha/issues/comments/375729080,https://github.com/hyperledger/iroha/pull/1111#issuecomment-375729080,l4l,`irohad_test` should pass,2018-03-23 16:47:32,2018-03-23 16:47:32
https://api.github.com/repos/hyperledger/iroha/issues/1110,https://api.github.com/repos/hyperledger/iroha/issues/comments/375304723,https://github.com/hyperledger/iroha/pull/1110#issuecomment-375304723,x3medima17,You can remove unused optional paragraphs from the PR description,2018-03-22 13:26:26,2018-03-22 13:26:26
https://api.github.com/repos/hyperledger/iroha/issues/1110,https://api.github.com/repos/hyperledger/iroha/issues/comments/375551393,https://github.com/hyperledger/iroha/pull/1110#issuecomment-375551393,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1110?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@acc8d8c`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `35.84%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1110/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1110?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1110   +/-   ##
==========================================
  Coverage           ?   32.25%           
==========================================
  Files              ?      563           
  Lines              ?    17317           
  Branches           ?    11242           
==========================================
  Hits               ?     5585           
  Misses             ?     1397           
  Partials           ?    10335
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1110?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1110/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `11.62% <ø> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1110/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1110/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `100% <ø> (ø)` | |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1110/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `14.62% <0%> (ø)` | |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1110/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `13.53% <0%> (ø)` | |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1110/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `36.84% <0%> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1110/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `49.1% <40.62%> (ø)` | |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1110/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `16.9% <60%> (ø)` | |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1110/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `44.23% <60%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1110?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1110?src=pr&el=footer). Last update [acc8d8c...6c2e4c8](https://codecov.io/gh/hyperledger/iroha/pull/1110?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-23 05:43:12,2018-03-23 18:50:25
https://api.github.com/repos/hyperledger/iroha/issues/1110,https://api.github.com/repos/hyperledger/iroha/issues/comments/375679202,https://github.com/hyperledger/iroha/pull/1110#issuecomment-375679202,sorabot,"SonarQube analysis reported 11 issues
* ![MINOR][MINOR] 11 minor

#### Top 10 issues

1. ![MINOR][MINOR] [postgres_block_query.hpp#L71](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/irohad/ametsuchi/impl/postgres_block_query.hpp#L71): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L79](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/irohad/ametsuchi/impl/postgres_block_query.hpp#L79): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L89](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/irohad/ametsuchi/impl/postgres_block_query.hpp#L89): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L285](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L285): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L285](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L285): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L285](https://github.com/hyperledger/iroha/blob/6c2e4c83948512dca4d507500f6f63cd938cd877/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L285): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-23 14:16:50,2018-03-23 14:16:50
https://api.github.com/repos/hyperledger/iroha/issues/1109,https://api.github.com/repos/hyperledger/iroha/issues/comments/375575297,https://github.com/hyperledger/iroha/pull/1109#issuecomment-375575297,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1109?src=pr&el=h1) Report
> Merging [#1109](https://codecov.io/gh/hyperledger/iroha/pull/1109?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6c60b6d0df6b95ed888eef9e22fe02d3a60ac078?src=pr&el=desc) will **increase** coverage by `0.2%`.
> The diff coverage is `12.5%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1109/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1109?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #1109     +/-   ##
==========================================
+ Coverage    32.31%   32.51%   +0.2%     
==========================================
  Files          561      559      -2     
  Lines        17267    17101    -166     
  Branches     11194    11037    -157     
==========================================
- Hits          5580     5561     -19     
- Misses        1389     1392      +3     
+ Partials     10298    10148    -150
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1109?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...module/shared\_model/bindings/model\_crypto\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX2NyeXB0b190ZXN0LmNwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [shared\_model/bindings/model\_crypto.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX2NyeXB0by5jcHA=) | `12.5% <50%> (ø)` | :arrow_up: |
| [irohad/model/execution/execution\_error.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9leGVjdXRpb25fZXJyb3IuaHBw) | `0% <0%> (-33.34%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `36.84% <0%> (-7.9%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `46.42% <0%> (-5.96%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `32.54% <0%> (-0.6%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `35.29% <0%> (ø)` | :arrow_up: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `43.26% <0%> (ø)` | :arrow_up: |
| [test/integration/acceptance/create\_role\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9yb2xlX3Rlc3QuY3Bw) | | |
| [...est/integration/acceptance/create\_account\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1109/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9hY2NvdW50X3Rlc3QuY3Bw) | | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1109?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1109?src=pr&el=footer). Last update [6c60b6d...3326af5](https://codecov.io/gh/hyperledger/iroha/pull/1109?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-23 08:12:16,2018-03-23 08:12:16
https://api.github.com/repos/hyperledger/iroha/issues/1109,https://api.github.com/repos/hyperledger/iroha/issues/comments/375592158,https://github.com/hyperledger/iroha/pull/1109#issuecomment-375592158,luckychess,Merged.,2018-03-23 09:26:21,2018-03-23 09:26:21
https://api.github.com/repos/hyperledger/iroha/issues/1108,https://api.github.com/repos/hyperledger/iroha/issues/comments/375285549,https://github.com/hyperledger/iroha/pull/1108#issuecomment-375285549,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1108?src=pr&el=h1) Report
> Merging [#1108](https://codecov.io/gh/hyperledger/iroha/pull/1108?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6c60b6d0df6b95ed888eef9e22fe02d3a60ac078?src=pr&el=desc) will **increase** coverage by `0.2%`.
> The diff coverage is `50%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1108/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1108?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #1108     +/-   ##
==========================================
+ Coverage    32.31%   32.51%   +0.2%     
==========================================
  Files          561      559      -2     
  Lines        17267    17101    -166     
  Branches     11194    11037    -157     
==========================================
- Hits          5580     5561     -19     
- Misses        1389     1392      +3     
+ Partials     10298    10148    -150
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1108?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1108/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `54.54% <50%> (ø)` | :arrow_up: |
| [irohad/model/execution/execution\_error.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1108/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9leGVjdXRpb25fZXJyb3IuaHBw) | `0% <0%> (-33.34%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1108/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `36.84% <0%> (-7.9%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1108/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `46.42% <0%> (-5.96%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1108/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `32.54% <0%> (-0.6%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1108/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `43.26% <0%> (ø)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1108/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `35.29% <0%> (ø)` | :arrow_up: |
| [...est/integration/acceptance/create\_account\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1108/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9hY2NvdW50X3Rlc3QuY3Bw) | | |
| [test/integration/acceptance/create\_role\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1108/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9yb2xlX3Rlc3QuY3Bw) | | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1108?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1108?src=pr&el=footer). Last update [6c60b6d...4ab4f3b](https://codecov.io/gh/hyperledger/iroha/pull/1108?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-22 12:24:03,2018-03-24 08:41:41
https://api.github.com/repos/hyperledger/iroha/issues/1108,https://api.github.com/repos/hyperledger/iroha/issues/comments/375291181,https://github.com/hyperledger/iroha/pull/1108#issuecomment-375291181,neewy,"@darsh7807 
> It might slow down the runtime of the function

Can you please tell more?
",2018-03-22 12:45:16,2018-03-22 12:45:16
https://api.github.com/repos/hyperledger/iroha/issues/1108,https://api.github.com/repos/hyperledger/iroha/issues/comments/375294810,https://github.com/hyperledger/iroha/pull/1108#issuecomment-375294810,darsh7807,"@neewy Previous implementation was using set to store keys which is O(nlogn) operation. all_of()  function uses O(n) 
So,thats O(nlogn) complexity.
My implementation is O(n*m) so it can slow down for larger data.",2018-03-22 12:55:32,2018-03-22 12:55:32
https://api.github.com/repos/hyperledger/iroha/issues/1108,https://api.github.com/repos/hyperledger/iroha/issues/comments/375563779,https://github.com/hyperledger/iroha/pull/1108#issuecomment-375563779,lebdron,"@darsh7807 According to https://github.com/hyperledger/iroha/issues/628 , the idea was to improve the efficiency in terms of algorithmic runtime complexity. Since current approach has greater runtime complexity, it does not satisfy the requirements described in the issue.",2018-03-23 07:08:22,2018-03-23 07:08:22
https://api.github.com/repos/hyperledger/iroha/issues/1108,https://api.github.com/repos/hyperledger/iroha/issues/comments/375583237,https://github.com/hyperledger/iroha/pull/1108#issuecomment-375583237,darsh7807,"@lebdron  We discussed this on Iroha channel on the telegram and what I was informed was the code should be more easy to read and the complexity was not a big issue. So I increased the complexity. 
You can see my attempt to improve complexity in the issue comments but on a channel, they gave feedback that it was not more readable and they wanted a good readable solution.",2018-03-23 08:49:56,2018-03-23 08:49:56
https://api.github.com/repos/hyperledger/iroha/issues/1108,https://api.github.com/repos/hyperledger/iroha/issues/comments/375621551,https://github.com/hyperledger/iroha/pull/1108#issuecomment-375621551,lebdron,"@darsh7807 Unfortunately there was a miscommunication in developer chat, and no comments were provided on the proposed solution. After revision of issue solutions requirements, we came to conclusion that `O(n^2)` might be unacceptable if we increase the maximum number of signatures allowed for transactions and accounts.",2018-03-23 10:51:48,2018-03-23 10:51:48
https://api.github.com/repos/hyperledger/iroha/issues/1108,https://api.github.com/repos/hyperledger/iroha/issues/comments/375632393,https://github.com/hyperledger/iroha/pull/1108#issuecomment-375632393,darsh7807,"@lebdron , okay it's fine then.  I will propose another solution using unordered  map which I was discussing on channel. I am out for 9 days. I will submit the solution once I am back. ",2018-03-23 11:38:03,2018-03-23 11:38:03
https://api.github.com/repos/hyperledger/iroha/issues/1108,https://api.github.com/repos/hyperledger/iroha/issues/comments/377940645,https://github.com/hyperledger/iroha/pull/1108#issuecomment-377940645,lebdron,Please reopen the pull request when it will be completed.,2018-04-02 14:25:39,2018-04-02 14:25:39
https://api.github.com/repos/hyperledger/iroha/issues/1106,https://api.github.com/repos/hyperledger/iroha/issues/comments/375225815,https://github.com/hyperledger/iroha/pull/1106#issuecomment-375225815,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1106?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@4c6f94e`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1106/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1106?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1106   +/-   ##
==========================================
  Coverage           ?   32.51%           
==========================================
  Files              ?      559           
  Lines              ?    17101           
  Branches           ?    11037           
==========================================
  Hits               ?     5561           
  Misses             ?     1392           
  Partials           ?    10148
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1106?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1106?src=pr&el=footer). Last update [4c6f94e...1b3a190](https://codecov.io/gh/hyperledger/iroha/pull/1106?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-22 09:06:14,2018-03-27 10:25:36
https://api.github.com/repos/hyperledger/iroha/issues/1106,https://api.github.com/repos/hyperledger/iroha/issues/comments/375656808,https://github.com/hyperledger/iroha/pull/1106#issuecomment-375656808,laSinteZ,[https://html-oryuyghprg.now.sh/guides/build.html](https://html-oryuyghprg.now.sh/guides/build.html),2018-03-23 12:57:57,2018-03-23 12:57:57
https://api.github.com/repos/hyperledger/iroha/issues/1106,https://api.github.com/repos/hyperledger/iroha/issues/comments/375657796,https://github.com/hyperledger/iroha/pull/1106#issuecomment-375657796,l4l,"So vivid, maybe reduce the number of hints?",2018-03-23 13:01:49,2018-03-23 13:01:49
https://api.github.com/repos/hyperledger/iroha/issues/1106,https://api.github.com/repos/hyperledger/iroha/issues/comments/376477835,https://github.com/hyperledger/iroha/pull/1106#issuecomment-376477835,laSinteZ,[https://html-bbsmvlpmry.now.sh/guides/build.html](https://html-bbsmvlpmry.now.sh/guides/build.html),2018-03-27 10:35:34,2018-03-27 10:35:34
https://api.github.com/repos/hyperledger/iroha/issues/1105,https://api.github.com/repos/hyperledger/iroha/issues/comments/375207328,https://github.com/hyperledger/iroha/pull/1105#issuecomment-375207328,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1105?src=pr&el=h1) Report
> Merging [#1105](https://codecov.io/gh/hyperledger/iroha/pull/1105?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d343e80ed9d0a038393b3c58fc261f970b79dbe3?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1105/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1105?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1105   +/-   ##
========================================
  Coverage    32.51%   32.51%           
========================================
  Files          559      559           
  Lines        17101    17101           
  Branches     11037    11037           
========================================
  Hits          5561     5561           
  Misses        1392     1392           
  Partials     10148    10148
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1105?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1105?src=pr&el=footer). Last update [d343e80...d896d64](https://codecov.io/gh/hyperledger/iroha/pull/1105?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-22 07:46:54,2018-03-22 08:34:23
https://api.github.com/repos/hyperledger/iroha/issues/1104,https://api.github.com/repos/hyperledger/iroha/issues/comments/374916192,https://github.com/hyperledger/iroha/pull/1104#issuecomment-374916192,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1104?src=pr&el=h1) Report
> Merging [#1104](https://codecov.io/gh/hyperledger/iroha/pull/1104?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/bad383fe713745414ab5729c8c422ddb7bd46ccb?src=pr&el=desc) will **increase** coverage by `0.22%`.
> The diff coverage is `7.03%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1104/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1104?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1104      +/-   ##
===========================================
+ Coverage    32.32%   32.55%   +0.22%     
===========================================
  Files          561      560       -1     
  Lines        17272    17058     -214     
  Branches     11196    11002     -194     
===========================================
- Hits          5583     5553      -30     
- Misses        1389     1392       +3     
+ Partials     10300    10113     -187
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1104?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/cryptography/keypair.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9rZXlwYWlyLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/cryptography/public\_key.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9wdWJsaWNfa2V5LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [...module/irohad/validation/chain\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdGlvbl90ZXN0LmNwcA==) | `15.55% <ø> (ø)` | :arrow_up: |
| [...ansaction\_responses/transaction\_status\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3RyYW5zYWN0aW9uX3Jlc3BvbnNlcy90cmFuc2FjdGlvbl9zdGF0dXNfYnVpbGRlci5ocHA=) | `74.19% <0%> (ø)` | :arrow_up: |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `11.8% <0%> (-0.49%)` | :arrow_down: |
| [...hared\_model/cryptography/model\_impl/public\_key.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9tb2RlbF9pbXBsL3B1YmxpY19rZXkuY3Bw) | `25% <0%> (ø)` | :arrow_up: |
| [shared\_model/builders/common\_objects/common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL2NvbW1vbi5ocHA=) | `18.18% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGVfdGVzdC5jcHA=) | `15.94% <0%> (+0.22%)` | :arrow_up: |
| [test/module/irohad/validation/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `12.94% <0%> (-0.41%)` | :arrow_down: |
| ... and [29 more](https://codecov.io/gh/hyperledger/iroha/pull/1104/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1104?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1104?src=pr&el=footer). Last update [bad383f...fe8d218](https://codecov.io/gh/hyperledger/iroha/pull/1104?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-21 12:11:05,2018-03-23 11:25:20
https://api.github.com/repos/hyperledger/iroha/issues/1104,https://api.github.com/repos/hyperledger/iroha/issues/comments/375636335,https://github.com/hyperledger/iroha/pull/1104#issuecomment-375636335,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [torii_queries_test.cpp#L80](https://github.com/hyperledger/iroha/blob/fe8d218542f8a5b35d711eb2ceef79b2fdb33527/test/module/irohad/torii/torii_queries_test.cpp#L80): Class 'ToriiQueriesTest' is unsafe, 'ToriiQueriesTest::runner' can leak by wrong usage. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunsafeClassCanLeak)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-23 11:56:42,2018-03-23 11:56:42
https://api.github.com/repos/hyperledger/iroha/issues/1103,https://api.github.com/repos/hyperledger/iroha/issues/comments/374711361,https://github.com/hyperledger/iroha/pull/1103#issuecomment-374711361,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1103?src=pr&el=h1) Report
> Merging [#1103](https://codecov.io/gh/hyperledger/iroha/pull/1103?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1303671ecec01153872b901ff894f7d2f5e0d7c7?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1103/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1103?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop   #1103      +/-   ##
==========================================
- Coverage    32.51%   32.5%   -0.02%     
==========================================
  Files          559     553       -6     
  Lines        17101   16800     -301     
  Branches     11037   10828     -209     
==========================================
- Hits          5561    5460     -101     
+ Misses        1392    1384       -8     
+ Partials     10148    9956     -192
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1103?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ces/transaction\_responses/abstract\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL2Fic3RyYWN0X3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-22.23%)` | :arrow_down: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-18.19%)` | :arrow_down: |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `20% <0%> (-13.34%)` | :arrow_down: |
| [...had/torii/processor/transaction\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfdGVzdC5jcHA=) | `8% <0%> (-11.86%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `36.04% <0%> (-10.39%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `48.88% <0%> (-5.66%)` | :arrow_down: |
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `7.5% <0%> (-4.13%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `23.28% <0%> (-3.99%)` | :arrow_down: |
| [...framework/integration\_framework/iroha\_instance.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmNwcA==) | `72.41% <0%> (-2.59%)` | :arrow_down: |
| [...rotobuf/common\_objects/proto\_signature\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX3NpZ25hdHVyZV9idWlsZGVyLmhwcA==) | `72.72% <0%> (-2.28%)` | :arrow_down: |
| ... and [64 more](https://codecov.io/gh/hyperledger/iroha/pull/1103/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1103?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1103?src=pr&el=footer). Last update [1303671...0a7a8ec](https://codecov.io/gh/hyperledger/iroha/pull/1103?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-20 18:39:43,2018-03-22 16:33:06
https://api.github.com/repos/hyperledger/iroha/issues/1102,https://api.github.com/repos/hyperledger/iroha/issues/comments/374941892,https://github.com/hyperledger/iroha/pull/1102#issuecomment-374941892,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1102?src=pr&el=h1) Report
> Merging [#1102](https://codecov.io/gh/hyperledger/iroha/pull/1102?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6c60b6d0df6b95ed888eef9e22fe02d3a60ac078?src=pr&el=desc) will **increase** coverage by `0.2%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1102/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1102?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #1102     +/-   ##
==========================================
+ Coverage    32.31%   32.51%   +0.2%     
==========================================
  Files          561      559      -2     
  Lines        17267    17101    -166     
  Branches     11194    11037    -157     
==========================================
- Hits          5580     5561     -19     
- Misses        1389     1392      +3     
+ Partials     10298    10148    -150
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1102?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/execution\_error.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1102/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9leGVjdXRpb25fZXJyb3IuaHBw) | `0% <0%> (-33.34%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1102/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `36.84% <0%> (-7.9%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1102/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `46.42% <0%> (-5.96%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1102/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `32.54% <0%> (-0.6%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1102/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `43.26% <0%> (ø)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1102/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `35.29% <0%> (ø)` | :arrow_up: |
| [test/integration/acceptance/create\_role\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1102/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9yb2xlX3Rlc3QuY3Bw) | | |
| [...est/integration/acceptance/create\_account\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1102/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9hY2NvdW50X3Rlc3QuY3Bw) | | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1102?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1102?src=pr&el=footer). Last update [6c60b6d...ad8f174](https://codecov.io/gh/hyperledger/iroha/pull/1102?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-21 13:46:45,2018-03-23 12:54:34
https://api.github.com/repos/hyperledger/iroha/issues/1102,https://api.github.com/repos/hyperledger/iroha/issues/comments/375588175,https://github.com/hyperledger/iroha/pull/1102#issuecomment-375588175,laSinteZ,"Fixed everything according to review + added linebreaks + added videos 

demo at [https://html-jfhbsnwvzd.now.sh/getting_started/index.html](https://html-jfhbsnwvzd.now.sh/getting_started/index.html)",2018-03-23 09:10:16,2018-03-23 09:10:16
https://api.github.com/repos/hyperledger/iroha/issues/1102,https://api.github.com/repos/hyperledger/iroha/issues/comments/375632912,https://github.com/hyperledger/iroha/pull/1102#issuecomment-375632912,laSinteZ,[https://html-karuzazfmu.now.sh/getting_started/index.html](https://html-karuzazfmu.now.sh/getting_started/index.html),2018-03-23 11:40:28,2018-03-23 11:40:28
https://api.github.com/repos/hyperledger/iroha/issues/1101,https://api.github.com/repos/hyperledger/iroha/issues/comments/375282208,https://github.com/hyperledger/iroha/pull/1101#issuecomment-375282208,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1101?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@4ca0fa3`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1101/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1101?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1101   +/-   ##
==========================================
  Coverage           ?   32.51%           
==========================================
  Files              ?      559           
  Lines              ?    17101           
  Branches           ?    11037           
==========================================
  Hits               ?     5561           
  Misses             ?     1392           
  Partials           ?    10148
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1101?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1101?src=pr&el=footer). Last update [4ca0fa3...45a5730](https://codecov.io/gh/hyperledger/iroha/pull/1101?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-22 12:09:48,2018-03-28 14:53:34
https://api.github.com/repos/hyperledger/iroha/issues/1100,https://api.github.com/repos/hyperledger/iroha/issues/comments/375630385,https://github.com/hyperledger/iroha/pull/1100#issuecomment-375630385,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1100?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@084282d`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1100/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1100?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1100   +/-   ##
==========================================
  Coverage           ?   32.51%           
==========================================
  Files              ?      559           
  Lines              ?    17101           
  Branches           ?    11037           
==========================================
  Hits               ?     5561           
  Misses             ?     1392           
  Partials           ?    10148
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1100?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/transaction\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1100/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3RyYW5zYWN0aW9uX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [...el/backend\_proto/shared\_proto\_tx\_response\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1100/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3R4X3Jlc3BvbnNlX3Rlc3QuY3Bw) | `6.25% <0%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1100?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1100?src=pr&el=footer). Last update [084282d...8320e8c](https://codecov.io/gh/hyperledger/iroha/pull/1100?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-23 11:31:40,2018-03-23 11:31:40
https://api.github.com/repos/hyperledger/iroha/issues/1099,https://api.github.com/repos/hyperledger/iroha/issues/comments/374546053,https://github.com/hyperledger/iroha/issues/1099#issuecomment-374546053,nickaleks,"Please check https://github.com/hyperledger/iroha/issues/1045
",2018-03-20 10:22:33,2018-03-20 10:22:33
https://api.github.com/repos/hyperledger/iroha/issues/1099,https://api.github.com/repos/hyperledger/iroha/issues/comments/374546512,https://github.com/hyperledger/iroha/issues/1099#issuecomment-374546512,l4l,"Moved, thx",2018-03-20 10:24:08,2018-03-20 13:47:00
https://api.github.com/repos/hyperledger/iroha/issues/1098,https://api.github.com/repos/hyperledger/iroha/issues/comments/374542012,https://github.com/hyperledger/iroha/pull/1098#issuecomment-374542012,stinger112,Related to #939 ,2018-03-20 10:08:44,2018-03-20 10:08:44
https://api.github.com/repos/hyperledger/iroha/issues/1098,https://api.github.com/repos/hyperledger/iroha/issues/comments/374557598,https://github.com/hyperledger/iroha/pull/1098#issuecomment-374557598,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1098?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@da3bb36`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1098/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1098?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1098   +/-   ##
==========================================
  Coverage           ?   32.47%           
==========================================
  Files              ?      527           
  Lines              ?    16091           
  Branches           ?    10350           
==========================================
  Hits               ?     5226           
  Misses             ?     1356           
  Partials           ?     9509
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1098?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/builders/protobuf/unsigned\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1098/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Vuc2lnbmVkX3Byb3RvLmhwcA==) | `27.27% <ø> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1098?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1098?src=pr&el=footer). Last update [da3bb36...0e83a93](https://codecov.io/gh/hyperledger/iroha/pull/1098?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-20 11:03:44,2018-03-27 19:47:32
https://api.github.com/repos/hyperledger/iroha/issues/1098,https://api.github.com/repos/hyperledger/iroha/issues/comments/376098721,https://github.com/hyperledger/iroha/pull/1098#issuecomment-376098721,neewy,"There are non-related commits, I guess reviewers should take this into consideration OR you should ping them as soon as you resolve the problem",2018-03-26 09:11:37,2018-03-26 09:11:37
https://api.github.com/repos/hyperledger/iroha/issues/1098,https://api.github.com/repos/hyperledger/iroha/issues/comments/376111246,https://github.com/hyperledger/iroha/pull/1098#issuecomment-376111246,luckychess,This pr should be rebased onto actual develop.,2018-03-26 09:53:49,2018-03-26 09:53:49
https://api.github.com/repos/hyperledger/iroha/issues/1097,https://api.github.com/repos/hyperledger/iroha/issues/comments/374845211,https://github.com/hyperledger/iroha/pull/1097#issuecomment-374845211,neewy,"I have recently discussed with @grimadas his new use case proposal, and what I've seen looks really nice, can't wait to see it updated here",2018-03-21 06:37:52,2018-03-21 06:37:52
https://api.github.com/repos/hyperledger/iroha/issues/1097,https://api.github.com/repos/hyperledger/iroha/issues/comments/374850486,https://github.com/hyperledger/iroha/pull/1097#issuecomment-374850486,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1097?src=pr&el=h1) Report
> Merging [#1097](https://codecov.io/gh/hyperledger/iroha/pull/1097?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b19573c1ab357d950f1a47d7fc5d3d696bf666b7?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1097/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1097?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1097      +/-   ##
===========================================
- Coverage    32.51%   32.48%   -0.04%     
===========================================
  Files          559      559              
  Lines        17101    17083      -18     
  Branches     11037    11036       -1     
===========================================
- Hits          5561     5549      -12     
+ Misses        1392     1389       -3     
+ Partials     10148    10145       -3
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1097?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `20% <0%> (-13.34%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `36.04% <0%> (-10.39%)` | :arrow_down: |
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `7.5% <0%> (-4.13%)` | :arrow_down: |
| [...framework/integration\_framework/iroha\_instance.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmNwcA==) | `72.41% <0%> (-2.59%)` | :arrow_down: |
| [shared\_model/backend/protobuf/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvYmxvY2suaHBw) | `65.95% <0%> (-2.05%)` | :arrow_down: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `22.09% <0%> (-0.64%)` | :arrow_down: |
| [irohad/synchronizer/impl/synchronizer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-aXJvaGFkL3N5bmNocm9uaXplci9pbXBsL3N5bmNocm9uaXplcl9pbXBsLmNwcA==) | `31.25% <0%> (-0.13%)` | :arrow_down: |
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `100% <0%> (ø)` | :arrow_up: |
| [irohad/network/consensus\_gate.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvY29uc2Vuc3VzX2dhdGUuaHBw) | `50% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/base/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9zaWduYWJsZS5ocHA=) | `20% <0%> (ø)` | :arrow_up: |
| ... and [7 more](https://codecov.io/gh/hyperledger/iroha/pull/1097/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1097?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1097?src=pr&el=footer). Last update [b19573c...6b0a060](https://codecov.io/gh/hyperledger/iroha/pull/1097?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-21 07:18:05,2018-03-22 02:12:24
https://api.github.com/repos/hyperledger/iroha/issues/1097,https://api.github.com/repos/hyperledger/iroha/issues/comments/374977893,https://github.com/hyperledger/iroha/pull/1097#issuecomment-374977893,igor-egorov,"Please reformat headings using the single style ""Title Case"". Please use this [tool](https://capitalizemytitle.com/) for checking hard cases.

Example:
Use case scenarios ->  Use Case Scenarios
Note that ""in"" in ""Certificates in Education, Healthcare"" will remain lowercased.",2018-03-21 15:25:05,2018-03-21 15:31:44
https://api.github.com/repos/hyperledger/iroha/issues/1096,https://api.github.com/repos/hyperledger/iroha/issues/comments/374522381,https://github.com/hyperledger/iroha/pull/1096#issuecomment-374522381,l4l,"Quite misleading names (pr/commit), it changes itf instance iface, not itf itself",2018-03-20 09:01:20,2018-03-20 09:01:58
https://api.github.com/repos/hyperledger/iroha/issues/1096,https://api.github.com/repos/hyperledger/iroha/issues/comments/374549780,https://github.com/hyperledger/iroha/pull/1096#issuecomment-374549780,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1096?src=pr&el=h1) Report
> Merging [#1096](https://codecov.io/gh/hyperledger/iroha/pull/1096?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c3b1a743e977de8a517b754eb727d7b9b997545d?src=pr&el=desc) will **increase** coverage by `0.03%`.
> The diff coverage is `50%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1096/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1096?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1096      +/-   ##
===========================================
+ Coverage    32.48%   32.52%   +0.03%     
===========================================
  Files          559      559              
  Lines        17086    17084       -2     
  Branches     11037    11030       -7     
===========================================
+ Hits          5551     5556       +5     
  Misses        1389     1389              
+ Partials     10146    10139       -7
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1096?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/backend/protobuf/from\_old\_model.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1096/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvZnJvbV9vbGRfbW9kZWwuaHBw) | `22.22% <ø> (-4.1%)` | :arrow_down: |
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1096/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [...tion/pipeline/transfer\_asset\_inter\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1096/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90cmFuc2Zlcl9hc3NldF9pbnRlcl9kb21haW5fdGVzdC5jcHA=) | `38.46% <0%> (-2.36%)` | :arrow_down: |
| [test/integration/pipeline/test\_irohad.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1096/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90ZXN0X2lyb2hhZC5ocHA=) | `50% <0%> (-4.17%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1096/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `46.42% <100%> (+10.38%)` | :arrow_up: |
| [...framework/integration\_framework/iroha\_instance.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1096/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmNwcA==) | `75% <100%> (+2.58%)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1096/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `22.72% <33.33%> (+0.63%)` | :arrow_up: |
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1096/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `7.5% <0%> (-4.13%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1096?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1096?src=pr&el=footer). Last update [c3b1a74...24efaa3](https://codecov.io/gh/hyperledger/iroha/pull/1096?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-20 10:35:58,2018-03-20 10:42:09
https://api.github.com/repos/hyperledger/iroha/issues/1096,https://api.github.com/repos/hyperledger/iroha/issues/comments/374559608,https://github.com/hyperledger/iroha/pull/1096#issuecomment-374559608,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [integration_test_framework.cpp#L166](https://github.com/hyperledger/iroha/blob/24efaa37bdb6979dd789351762c4a587bd20db30/test/framework/integration_framework/integration_test_framework.cpp#L166): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L171](https://github.com/hyperledger/iroha/blob/24efaa37bdb6979dd789351762c4a587bd20db30/test/framework/integration_framework/integration_test_framework.cpp#L171): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-20 11:10:36,2018-03-20 11:10:36
https://api.github.com/repos/hyperledger/iroha/issues/1094,https://api.github.com/repos/hyperledger/iroha/issues/comments/374524230,https://github.com/hyperledger/iroha/issues/1094#issuecomment-374524230,l4l,"I think it is better (at least for now) to handle it by ourselves. It is not that many issues opened
Moreover it is possible ask the issuer to retest behavior with current commit and not just blindly close it after some time. Even if the bot may do it I am pretty sure there is a huge number of such a cases",2018-03-20 09:07:56,2018-03-20 09:07:56
https://api.github.com/repos/hyperledger/iroha/issues/1093,https://api.github.com/repos/hyperledger/iroha/issues/comments/374206710,https://github.com/hyperledger/iroha/pull/1093#issuecomment-374206710,x3medima17,Why 50541? :)),2018-03-19 13:13:09,2018-03-19 13:13:09
https://api.github.com/repos/hyperledger/iroha/issues/1093,https://api.github.com/repos/hyperledger/iroha/issues/comments/374213057,https://github.com/hyperledger/iroha/pull/1093#issuecomment-374213057,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1093?src=pr&el=h1) Report
> Merging [#1093](https://codecov.io/gh/hyperledger/iroha/pull/1093?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/2a0c94f4d2d43c5c5cf0ed8a136d20142ffc1814?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1093/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1093?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop   #1093   +/-   ##
=======================================
  Coverage     32.5%   32.5%           
=======================================
  Files          553     553           
  Lines        16800   16800           
  Branches     10828   10828           
=======================================
  Hits          5460    5460           
  Misses        1384    1384           
  Partials      9956    9956
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1093?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...framework/integration\_framework/iroha\_instance.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmNwcA==) | `72.41% <ø> (ø)` | :arrow_up: |
| [test/integration/consensus/consensus\_sunny\_day.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jb25zZW5zdXMvY29uc2Vuc3VzX3N1bm55X2RheS5jcHA=) | `34.66% <ø> (ø)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `36.04% <0%> (ø)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `22.09% <0%> (ø)` | :arrow_up: |
| [...tion/pipeline/transfer\_asset\_inter\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90cmFuc2Zlcl9hc3NldF9pbnRlcl9kb21haW5fdGVzdC5jcHA=) | `40.81% <0%> (ø)` | :arrow_up: |
| [...buf/query\_responses/proto\_transaction\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3RyYW5zYWN0aW9uX3Jlc3BvbnNlLmhwcA==) | `58.33% <0%> (ø)` | :arrow_up: |
| [shared\_model/backend/protobuf/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvYmxvY2suaHBw) | `65.95% <0%> (ø)` | :arrow_up: |
| [...terfaces/query\_responses/transactions\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3RyYW5zYWN0aW9uc19yZXNwb25zZS5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/iroha\_internal/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvaXJvaGFfaW50ZXJuYWwvYmxvY2suaHBw) | `12.5% <0%> (ø)` | :arrow_up: |
| [...\_model/interfaces/common\_objects/signable\_hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1093/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmFibGVfaGFzaC5ocHA=) | `66.66% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1093?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1093?src=pr&el=footer). Last update [2a0c94f...544c7cd](https://codecov.io/gh/hyperledger/iroha/pull/1093?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-19 13:34:31,2018-03-19 14:08:14
https://api.github.com/repos/hyperledger/iroha/issues/1093,https://api.github.com/repos/hyperledger/iroha/issues/comments/374213831,https://github.com/hyperledger/iroha/pull/1093#issuecomment-374213831,lebdron,"@x3medima17 probably because 50541 falls into 49152–65535 range of ports, which are not registered. https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Dynamic,_private_or_ephemeral_ports",2018-03-19 13:37:13,2018-03-19 13:37:13
https://api.github.com/repos/hyperledger/iroha/issues/1093,https://api.github.com/repos/hyperledger/iroha/issues/comments/374233932,https://github.com/hyperledger/iroha/pull/1093#issuecomment-374233932,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [integration_test_framework.cpp#L168](https://github.com/hyperledger/iroha/blob/544c7cd4664467af7194dd55367befb471a742a5/test/framework/integration_framework/integration_test_framework.cpp#L168): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L173](https://github.com/hyperledger/iroha/blob/544c7cd4664467af7194dd55367befb471a742a5/test/framework/integration_framework/integration_test_framework.cpp#L173): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-19 14:36:02,2018-03-19 14:36:02
https://api.github.com/repos/hyperledger/iroha/issues/1092,https://api.github.com/repos/hyperledger/iroha/issues/comments/374294439,https://github.com/hyperledger/iroha/pull/1092#issuecomment-374294439,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1092?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@9976d9c`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `31.03%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1092/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1092?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1092   +/-   ##
==========================================
  Coverage           ?   32.47%           
==========================================
  Files              ?      559           
  Lines              ?    17105           
  Branches           ?    11044           
==========================================
  Hits               ?     5555           
  Misses             ?     1392           
  Partials           ?    10158
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1092?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `50% <ø> (ø)` | |
| [...t/module/irohad/ordering/ordering\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX3NlcnZpY2VfdGVzdC5jcHA=) | `29.54% <ø> (ø)` | |
| [irohad/network/ordering\_gate.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfZ2F0ZS5ocHA=) | `50% <ø> (ø)` | |
| [.../ordering/impl/ordering\_service\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `50% <ø> (ø)` | |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5ocHA=) | `0% <ø> (ø)` | |
| [.../ordering/impl/ordering\_service\_transport\_grpc.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnRfZ3JwYy5ocHA=) | `0% <ø> (ø)` | |
| [irohad/network/ordering\_gate\_transport.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnQuaHBw) | `50% <ø> (ø)` | |
| [test/module/irohad/ordering/ordering\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfdGVzdC5jcHA=) | `19.44% <0%> (ø)` | |
| [test/module/irohad/simulator/simulator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfdGVzdC5jcHA=) | `15.9% <0%> (ø)` | |
| [irohad/simulator/impl/simulator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9pbXBsL3NpbXVsYXRvci5jcHA=) | `41.93% <100%> (ø)` | |
| ... and [5 more](https://codecov.io/gh/hyperledger/iroha/pull/1092/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1092?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1092?src=pr&el=footer). Last update [9976d9c...2e6a261](https://codecov.io/gh/hyperledger/iroha/pull/1092?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-19 17:19:48,2018-03-23 12:21:43
https://api.github.com/repos/hyperledger/iroha/issues/1092,https://api.github.com/repos/hyperledger/iroha/issues/comments/375665801,https://github.com/hyperledger/iroha/pull/1092#issuecomment-375665801,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L70](https://github.com/hyperledger/iroha/blob/2e6a2618214ce5f7473d202a64362206c8d80755/irohad/ordering/impl/ordering_gate_impl.hpp#L70): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-23 13:32:41,2018-03-23 13:32:41
https://api.github.com/repos/hyperledger/iroha/issues/1091,https://api.github.com/repos/hyperledger/iroha/issues/comments/376323303,https://github.com/hyperledger/iroha/pull/1091#issuecomment-376323303,l4l,"I rewrite the last commit without rxcpp, it seems much simplier: a91544d
plz check that out @lebdron @x3medima17 @Alexey-N-Chernyshov 

**upd:** decided to make it in the following task",2018-03-26 21:49:03,2018-03-27 08:20:03
https://api.github.com/repos/hyperledger/iroha/issues/1090,https://api.github.com/repos/hyperledger/iroha/issues/comments/374151524,https://github.com/hyperledger/iroha/issues/1090#issuecomment-374151524,l4l,"These consensus have a lot of thing in common, so the terms may intersect.
Could you point out where is the inconsistency placed?",2018-03-19 09:34:25,2018-03-19 09:34:25
https://api.github.com/repos/hyperledger/iroha/issues/1090,https://api.github.com/repos/hyperledger/iroha/issues/comments/374160362,https://github.com/hyperledger/iroha/issues/1090#issuecomment-374160362,rpjday,"I'm currently working through the LF online Hyperledger course and while a couple of the videos claim that Iroha uses Sumeragi, the latest information is that that has been replaced by YAC. However, if you look at the Iroha Glossary here:

https://github.com/hyperledger/iroha/wiki/Glossary

it still refers to Sumeragi. Should that not be updated to refer to YAC?",2018-03-19 10:06:13,2018-03-19 10:06:13
https://api.github.com/repos/hyperledger/iroha/issues/1090,https://api.github.com/repos/hyperledger/iroha/issues/comments/374174612,https://github.com/hyperledger/iroha/issues/1090#issuecomment-374174612,l4l,"Good point, wiki isn't really maintained for now, so there may be a plenty of such outdated info ",2018-03-19 11:00:52,2018-03-19 11:00:52
https://api.github.com/repos/hyperledger/iroha/issues/1090,https://api.github.com/repos/hyperledger/iroha/issues/comments/374867250,https://github.com/hyperledger/iroha/issues/1090#issuecomment-374867250,neewy,"Hi @rpjday,
we are sorry to keep irrelevant things in our wiki and to confuse you by this discrepancy. 
For now we are migrating to ReadTheDocs and we will rewrite glossary from scratch:
http://iroha.readthedocs.io/en/latest/core_concepts/",2018-03-21 08:46:04,2018-03-21 08:46:04
https://api.github.com/repos/hyperledger/iroha/issues/1090,https://api.github.com/repos/hyperledger/iroha/issues/comments/374867560,https://github.com/hyperledger/iroha/issues/1090#issuecomment-374867560,neewy,"We will delete all other public docs as we will publish read the docs with new release, stay tuned",2018-03-21 08:47:16,2018-03-21 08:47:16
https://api.github.com/repos/hyperledger/iroha/issues/1090,https://api.github.com/repos/hyperledger/iroha/issues/comments/374874034,https://github.com/hyperledger/iroha/issues/1090#issuecomment-374874034,rpjday,"Excellent, thanks very much.",2018-03-21 09:15:35,2018-03-21 09:15:35
https://api.github.com/repos/hyperledger/iroha/issues/1088,https://api.github.com/repos/hyperledger/iroha/issues/comments/374152163,https://github.com/hyperledger/iroha/pull/1088#issuecomment-374152163,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1088?src=pr&el=h1) Report
> Merging [#1088](https://codecov.io/gh/hyperledger/iroha/pull/1088?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6c60b6d0df6b95ed888eef9e22fe02d3a60ac078?src=pr&el=desc) will **increase** coverage by `0.1%`.
> The diff coverage is `4.7%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1088/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1088?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #1088     +/-   ##
==========================================
+ Coverage    32.31%   32.41%   +0.1%     
==========================================
  Files          561      554      -7     
  Lines        17267    16885    -382     
  Branches     11194    10909    -285     
==========================================
- Hits          5580     5474    -106     
+ Misses        1389     1376     -13     
+ Partials     10298    10035    -263
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1088?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/integration/acceptance/create\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9kb21haW5fdGVzdC5jcHA=) | `4.7% <4.7%> (ø)` | |
| [...ces/transaction\_responses/abstract\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL2Fic3RyYWN0X3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-22.23%)` | :arrow_down: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-18.19%)` | :arrow_down: |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `20% <0%> (-13.34%)` | :arrow_down: |
| [...had/torii/processor/transaction\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfdGVzdC5jcHA=) | `8% <0%> (-11.86%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `41.86% <0%> (-10.53%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `48.88% <0%> (-5.66%)` | :arrow_down: |
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `7.5% <0%> (-4.13%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `23.28% <0%> (-3.99%)` | :arrow_down: |
| [...framework/integration\_framework/iroha\_instance.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmNwcA==) | `72.41% <0%> (-2.59%)` | :arrow_down: |
| ... and [70 more](https://codecov.io/gh/hyperledger/iroha/pull/1088/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1088?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1088?src=pr&el=footer). Last update [6c60b6d...b87f838](https://codecov.io/gh/hyperledger/iroha/pull/1088?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-19 09:36:53,2018-03-23 10:45:27
https://api.github.com/repos/hyperledger/iroha/issues/1088,https://api.github.com/repos/hyperledger/iroha/issues/comments/375005721,https://github.com/hyperledger/iroha/pull/1088#issuecomment-375005721,nickaleks,Can you explain why tests take such a long time? And what can be done to solve that issue,2018-03-21 16:27:39,2018-03-21 16:27:39
https://api.github.com/repos/hyperledger/iroha/issues/1088,https://api.github.com/repos/hyperledger/iroha/issues/comments/375410334,https://github.com/hyperledger/iroha/pull/1088#issuecomment-375410334,l4l,"@nickaleks here's the hero of the occasion
https://github.com/hyperledger/iroha/blob/e8d765f9f20dc06be6c7175d27433c3539cabd49/test/framework/integration_framework/integration_test_framework.hpp#L121-L126

So basically all of the missing proposal/block checks are required to wait such a time",2018-03-22 18:24:10,2018-03-22 18:25:47
https://api.github.com/repos/hyperledger/iroha/issues/1087,https://api.github.com/repos/hyperledger/iroha/issues/comments/375428141,https://github.com/hyperledger/iroha/pull/1087#issuecomment-375428141,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1087?src=pr&el=h1) Report
> Merging [#1087](https://codecov.io/gh/hyperledger/iroha/pull/1087?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c19f197b91affac3df3159829dce8d913f8a2eb1?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `4.7%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1087/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1087?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1087      +/-   ##
===========================================
- Coverage    32.42%   32.41%   -0.01%     
===========================================
  Files          560      554       -6     
  Lines        17184    16885     -299     
  Branches     11115    10909     -206     
===========================================
- Hits          5572     5474      -98     
+ Misses        1398     1367      -31     
+ Partials     10214    10044     -170
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1087?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...est/integration/acceptance/create\_account\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9hY2NvdW50X3Rlc3QuY3Bw) | `4.7% <4.7%> (ø)` | |
| [...ces/transaction\_responses/abstract\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL2Fic3RyYWN0X3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-22.23%)` | :arrow_down: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-18.19%)` | :arrow_down: |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `20% <0%> (-13.34%)` | :arrow_down: |
| [...had/torii/processor/transaction\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfdGVzdC5jcHA=) | `8% <0%> (-11.86%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `41.86% <0%> (-10.53%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `48.88% <0%> (-5.66%)` | :arrow_down: |
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `7.5% <0%> (-4.13%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `23.28% <0%> (-3.99%)` | :arrow_down: |
| [...framework/integration\_framework/iroha\_instance.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmNwcA==) | `72.41% <0%> (-2.59%)` | :arrow_down: |
| ... and [71 more](https://codecov.io/gh/hyperledger/iroha/pull/1087/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1087?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1087?src=pr&el=footer). Last update [c19f197...88719eb](https://codecov.io/gh/hyperledger/iroha/pull/1087?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-22 19:24:02,2018-03-22 19:24:44
https://api.github.com/repos/hyperledger/iroha/issues/1086,https://api.github.com/repos/hyperledger/iroha/issues/comments/374129807,https://github.com/hyperledger/iroha/pull/1086#issuecomment-374129807,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1086?src=pr&el=h1) Report
> Merging [#1086](https://codecov.io/gh/hyperledger/iroha/pull/1086?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6c60b6d0df6b95ed888eef9e22fe02d3a60ac078?src=pr&el=desc) will **increase** coverage by `0.18%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1086/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1086?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop   #1086      +/-   ##
==========================================
+ Coverage    32.31%   32.5%   +0.18%     
==========================================
  Files          561     553       -8     
  Lines        17267   16800     -467     
  Branches     11194   10828     -366     
==========================================
- Hits          5580    5460     -120     
+ Misses        1389    1384       -5     
+ Partials     10298    9956     -342
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1086?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/execution\_error.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9leGVjdXRpb25fZXJyb3IuaHBw) | `0% <0%> (-33.34%)` | :arrow_down: |
| [...ces/transaction\_responses/abstract\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL2Fic3RyYWN0X3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-22.23%)` | :arrow_down: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-18.19%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `36.04% <0%> (-16.34%)` | :arrow_down: |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `20% <0%> (-13.34%)` | :arrow_down: |
| [...had/torii/processor/transaction\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfdGVzdC5jcHA=) | `8% <0%> (-11.86%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `36.84% <0%> (-7.9%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `48.88% <0%> (-5.66%)` | :arrow_down: |
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `7.5% <0%> (-4.13%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `23.28% <0%> (-3.99%)` | :arrow_down: |
| ... and [71 more](https://codecov.io/gh/hyperledger/iroha/pull/1086/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1086?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1086?src=pr&el=footer). Last update [6c60b6d...a2624cf](https://codecov.io/gh/hyperledger/iroha/pull/1086?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-19 08:05:43,2018-03-24 08:50:54
https://api.github.com/repos/hyperledger/iroha/issues/1086,https://api.github.com/repos/hyperledger/iroha/issues/comments/374184742,https://github.com/hyperledger/iroha/pull/1086#issuecomment-374184742,neewy,"https://github.com/hyperledger/iroha/blob/33c5e1ad42e575a06edcea98f8dc344586007dd8/deploy/ansible/ansible.cfg#L70:

`#gathering = smart,network,hardware,virtual,ohai,facter`
and other comments, why do we need them?",2018-03-19 11:43:27,2018-03-19 11:43:27
https://api.github.com/repos/hyperledger/iroha/issues/1086,https://api.github.com/repos/hyperledger/iroha/issues/comments/374184869,https://github.com/hyperledger/iroha/pull/1086#issuecomment-374184869,neewy,Please reassign me when review of changes is required.,2018-03-19 11:44:01,2018-03-19 11:44:01
https://api.github.com/repos/hyperledger/iroha/issues/1086,https://api.github.com/repos/hyperledger/iroha/issues/comments/374185620,https://github.com/hyperledger/iroha/pull/1086#issuecomment-374185620,neewy,We also need a README.md file in deploy/ansible folder,2018-03-19 11:47:25,2018-03-19 11:47:25
https://api.github.com/repos/hyperledger/iroha/issues/1086,https://api.github.com/repos/hyperledger/iroha/issues/comments/375667139,https://github.com/hyperledger/iroha/pull/1086#issuecomment-375667139,neewy,Tested `iroha-docker-cluster` on a brand new configuration of virtual servers — everything works as expected,2018-03-23 13:37:33,2018-03-23 13:37:33
https://api.github.com/repos/hyperledger/iroha/issues/1085,https://api.github.com/repos/hyperledger/iroha/issues/comments/375439869,https://github.com/hyperledger/iroha/pull/1085#issuecomment-375439869,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1085?src=pr&el=h1) Report
> Merging [#1085](https://codecov.io/gh/hyperledger/iroha/pull/1085?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/41aabe20083ee52d8ff3aacbf594cd0d610021e9?src=pr&el=desc) will **increase** coverage by `0.11%`.
> The diff coverage is `4.76%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1085/graphs/tree.svg?token=VEvywEmaef&height=150&width=650&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1085?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1085      +/-   ##
===========================================
+ Coverage    32.18%   32.29%   +0.11%     
===========================================
  Files          563      554       -9     
  Lines        17319    16968     -351     
  Branches     11249    10988     -261     
===========================================
- Hits          5574     5480      -94     
+ Misses        1395     1367      -28     
+ Partials     10350    10121     -229
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1085?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...est/integration/acceptance/transfer\_asset\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL3RyYW5zZmVyX2Fzc2V0X3Rlc3QuY3Bw) | `4.76% <4.76%> (ø)` | |
| [...ces/transaction\_responses/abstract\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL2Fic3RyYWN0X3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-22.23%)` | :arrow_down: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-18.19%)` | :arrow_down: |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `20% <0%> (-13.34%)` | :arrow_down: |
| [...had/torii/processor/transaction\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfdGVzdC5jcHA=) | `8% <0%> (-11.86%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `41.86% <0%> (-10.53%)` | :arrow_down: |
| [...d/network/impl/peer\_communication\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9wZWVyX2NvbW11bmljYXRpb25fc2VydmljZV9pbXBsLmNwcA==) | `52.63% <0%> (-7.37%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `48.88% <0%> (-5.66%)` | :arrow_down: |
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `7.5% <0%> (-4.13%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `23.28% <0%> (-3.99%)` | :arrow_down: |
| ... and [96 more](https://codecov.io/gh/hyperledger/iroha/pull/1085/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1085?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1085?src=pr&el=footer). Last update [41aabe2...74da6e1](https://codecov.io/gh/hyperledger/iroha/pull/1085?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-22 20:05:38,2018-03-23 15:37:15
https://api.github.com/repos/hyperledger/iroha/issues/1084,https://api.github.com/repos/hyperledger/iroha/issues/comments/374007926,https://github.com/hyperledger/iroha/pull/1084#issuecomment-374007926,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1084?src=pr&el=h1) Report
> Merging [#1084](https://codecov.io/gh/hyperledger/iroha/pull/1084?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7c822e776291a9af65bf9c93308b2f04099f30dd?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1084/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1084?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop   #1084   +/-   ##
=======================================
  Coverage     32.5%   32.5%           
=======================================
  Files          553     553           
  Lines        16800   16800           
  Branches     10828   10828           
=======================================
  Hits          5460    5460           
  Misses        1384    1384           
  Partials      9956    9956
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1084?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1084?src=pr&el=footer). Last update [7c822e7...e50dccf](https://codecov.io/gh/hyperledger/iroha/pull/1084?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-18 15:25:04,2018-03-20 15:50:15
https://api.github.com/repos/hyperledger/iroha/issues/1084,https://api.github.com/repos/hyperledger/iroha/issues/comments/374127982,https://github.com/hyperledger/iroha/pull/1084#issuecomment-374127982,l4l,I would prefer merging #1055 before,2018-03-19 07:56:31,2018-03-19 07:56:31
https://api.github.com/repos/hyperledger/iroha/issues/1084,https://api.github.com/repos/hyperledger/iroha/issues/comments/375402665,https://github.com/hyperledger/iroha/pull/1084#issuecomment-375402665,bakhtin,Split into two separate PRs: #1114 and #1103 ,2018-03-22 18:00:53,2018-03-22 18:00:53
https://api.github.com/repos/hyperledger/iroha/issues/1083,https://api.github.com/repos/hyperledger/iroha/issues/comments/374013582,https://github.com/hyperledger/iroha/pull/1083#issuecomment-374013582,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1083?src=pr&el=h1) Report
> Merging [#1083](https://codecov.io/gh/hyperledger/iroha/pull/1083?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7c822e776291a9af65bf9c93308b2f04099f30dd?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1083/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1083?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop   #1083   +/-   ##
=======================================
  Coverage     32.5%   32.5%           
=======================================
  Files          553     553           
  Lines        16800   16800           
  Branches     10828   10828           
=======================================
  Hits          5460    5460           
  Misses        1384    1384           
  Partials      9956    9956
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1083?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1083?src=pr&el=footer). Last update [7c822e7...979cedd](https://codecov.io/gh/hyperledger/iroha/pull/1083?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-18 16:32:00,2018-03-18 17:36:34
https://api.github.com/repos/hyperledger/iroha/issues/1082,https://api.github.com/repos/hyperledger/iroha/issues/comments/373991139,https://github.com/hyperledger/iroha/pull/1082#issuecomment-373991139,Warchant,Add test for this case,2018-03-18 11:34:49,2018-03-18 11:34:49
https://api.github.com/repos/hyperledger/iroha/issues/1082,https://api.github.com/repos/hyperledger/iroha/issues/comments/373997535,https://github.com/hyperledger/iroha/pull/1082#issuecomment-373997535,l4l,"> Add test for this case

Actually that should be handled by the only one current system test, no idea why it is passing. It may be system-dependent behavior",2018-03-18 13:09:05,2018-03-18 13:09:05
https://api.github.com/repos/hyperledger/iroha/issues/1081,https://api.github.com/repos/hyperledger/iroha/issues/comments/373989468,https://github.com/hyperledger/iroha/issues/1081#issuecomment-373989468,l4l,"Hmm, that is really strange, can be a rapidjson bug. I also have that behavior nevertheless the tests are green.
Try to add an empty new line at the example/config.sample, that solves the issue for me.",2018-03-18 11:06:52,2018-03-18 11:06:52
https://api.github.com/repos/hyperledger/iroha/issues/1081,https://api.github.com/repos/hyperledger/iroha/issues/comments/374120100,https://github.com/hyperledger/iroha/issues/1081#issuecomment-374120100,luckychess,@walkero please check your current directory (```pwd```) when you run irohad. If it's the directory where irohad binary is you should run it as ```./irohad --config ../../example/config.sample --genesis_block ../../example/genesis.block --keypair_name ../../example/node0``` ,2018-03-19 07:13:15,2018-03-19 07:13:15
https://api.github.com/repos/hyperledger/iroha/issues/1081,https://api.github.com/repos/hyperledger/iroha/issues/comments/374158521,https://github.com/hyperledger/iroha/issues/1081#issuecomment-374158521,walkero,"@l4l @luckychess thank you very much.
The problem had been solved by running irohad with right directory path
(I had a mistake using  wrong directory path before).

`pwd`
`/opt/iroha/bin`

`./irohad --config ../example/config.sample --genesis_block ../example/genesis.block --keypair_name ../example/node0`

server is up!

",2018-03-19 09:59:35,2018-03-19 09:59:55
https://api.github.com/repos/hyperledger/iroha/issues/1081,https://api.github.com/repos/hyperledger/iroha/issues/comments/374174077,https://github.com/hyperledger/iroha/issues/1081#issuecomment-374174077,l4l,"Good, I close the issue then",2018-03-19 10:58:46,2018-03-19 10:58:46
https://api.github.com/repos/hyperledger/iroha/issues/1080,https://api.github.com/repos/hyperledger/iroha/issues/comments/373995739,https://github.com/hyperledger/iroha/pull/1080#issuecomment-373995739,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [create_role_test.cpp#L56](https://github.com/hyperledger/iroha/blob/92294a9e6219058a05e474041acb5b5bf13d35bd/test/integration/acceptance/create_role_test.cpp#L56): Function parameter 'role_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-18 12:45:24,2018-03-18 12:45:24
https://api.github.com/repos/hyperledger/iroha/issues/1080,https://api.github.com/repos/hyperledger/iroha/issues/comments/373995754,https://github.com/hyperledger/iroha/pull/1080#issuecomment-373995754,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1080?src=pr&el=h1) Report
> Merging [#1080](https://codecov.io/gh/hyperledger/iroha/pull/1080?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7c822e776291a9af65bf9c93308b2f04099f30dd?src=pr&el=desc) will **decrease** coverage by `0.08%`.
> The diff coverage is `4.39%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1080/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1080?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1080      +/-   ##
===========================================
- Coverage     32.5%   32.41%   -0.09%     
===========================================
  Files          553      554       +1     
  Lines        16800    16914     +114     
  Branches     10828    10927      +99     
===========================================
+ Hits          5460     5482      +22     
- Misses        1384     1392       +8     
- Partials      9956    10040      +84
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1080?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `43.26% <100%> (ø)` | :arrow_up: |
| [test/integration/acceptance/create\_role\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2NyZWF0ZV9yb2xlX3Rlc3QuY3Bw) | `3.33% <3.33%> (ø)` | |
| [irohad/model/converters/json\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tb24uaHBw) | `63.63% <0%> (-1.82%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `14.23% <0%> (-0.43%)` | :arrow_down: |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `14.66% <0%> (-0.41%)` | :arrow_down: |
| [...module/irohad/validation/chain\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdGlvbl90ZXN0LmNwcA==) | `15.21% <0%> (-0.34%)` | :arrow_down: |
| [...model/builders/protobuf/transport\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zcG9ydF9idWlsZGVyX3Rlc3QuY3Bw) | `20% <0%> (-0.23%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `13.23% <0%> (-0.2%)` | :arrow_down: |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `16.48% <0%> (-0.18%)` | :arrow_down: |
| ... and [23 more](https://codecov.io/gh/hyperledger/iroha/pull/1080/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1080?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1080?src=pr&el=footer). Last update [7c822e7...eb3d5a5](https://codecov.io/gh/hyperledger/iroha/pull/1080?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-18 12:45:36,2018-03-22 18:45:44
https://api.github.com/repos/hyperledger/iroha/issues/1079,https://api.github.com/repos/hyperledger/iroha/issues/comments/373824798,https://github.com/hyperledger/iroha/pull/1079#issuecomment-373824798,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1079?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@4ca0fa3`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `34%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1079/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1079?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             develop   #1079   +/-   ##
=========================================
  Coverage           ?   32.6%           
=========================================
  Files              ?     552           
  Lines              ?   16840           
  Branches           ?   10837           
=========================================
  Hits               ?    5491           
  Misses             ?    1375           
  Partials           ?    9974
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1079?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/torii/processor/query\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9xdWVyeV9wcm9jZXNzb3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | |
| [...\_model/backend\_proto/shared\_proto\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3F1ZXJpZXNfdGVzdC5jcHA=) | `17.14% <ø> (ø)` | |
| [...had/torii/processor/transaction\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | |
| [irohad/main/application.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uaHBw) | `0% <ø> (ø)` | |
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `19.56% <ø> (ø)` | |
| [...orii/processor/impl/transaction\_processor\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9pbXBsL3RyYW5zYWN0aW9uX3Byb2Nlc3Nvcl9pbXBsLmNwcA==) | `40.74% <ø> (ø)` | |
| [irohad/model/model\_crypto\_provider\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL21vZGVsX2NyeXB0b19wcm92aWRlcl9pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/model/model\_crypto\_provider.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL21vZGVsX2NyeXB0b19wcm92aWRlci5ocHA=) | `50% <ø> (ø)` | |
| [irohad/network/impl/block\_loader\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5ocHA=) | `0% <ø> (ø)` | |
| [irohad/main/impl/block\_loader\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9ibG9ja19sb2FkZXJfaW5pdC5ocHA=) | `100% <ø> (ø)` | |
| ... and [21 more](https://codecov.io/gh/hyperledger/iroha/pull/1079/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1079?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1079?src=pr&el=footer). Last update [4ca0fa3...894e455](https://codecov.io/gh/hyperledger/iroha/pull/1079?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-16 19:44:29,2018-03-28 13:11:21
https://api.github.com/repos/hyperledger/iroha/issues/1079,https://api.github.com/repos/hyperledger/iroha/issues/comments/376210982,https://github.com/hyperledger/iroha/pull/1079#issuecomment-376210982,muratovv,"Before merging the pull request we have to wait until https://github.com/hyperledger/iroha/pull/1041 PR  will be merged. Also, need to use block validator that checks the set of signatures.",2018-03-26 15:39:06,2018-03-26 15:39:06
https://api.github.com/repos/hyperledger/iroha/issues/1077,https://api.github.com/repos/hyperledger/iroha/issues/comments/373340912,https://github.com/hyperledger/iroha/pull/1077#issuecomment-373340912,Warchant,"Remove commits c7d4d0d, bbd8f89, 52013f7 from your branch:

1) by rebasing onto develop
```
git fetch
git rebase -i origin/develop
# and remove according lines
```

or

2) just remove them without rebase
```
git rebase -i HEAD~4
# and remove according lines
```",2018-03-15 11:11:05,2018-03-15 11:11:05
https://api.github.com/repos/hyperledger/iroha/issues/1076,https://api.github.com/repos/hyperledger/iroha/issues/comments/373341382,https://github.com/hyperledger/iroha/pull/1076#issuecomment-373341382,Warchant,"Remove commits c7d4d0d, bbd8f89, 5dd5d4b from your branch:

1) by rebasing onto develop
```
git fetch
git rebase -i origin/develop
# and remove according lines
```

or

2) just remove them without rebase
```
git rebase -i HEAD~4
# and remove according lines
```",2018-03-15 11:12:59,2018-03-15 11:12:59
https://api.github.com/repos/hyperledger/iroha/issues/1076,https://api.github.com/repos/hyperledger/iroha/issues/comments/373461908,https://github.com/hyperledger/iroha/pull/1076#issuecomment-373461908,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1076?src=pr&el=h1) Report
> Merging [#1076](https://codecov.io/gh/hyperledger/iroha/pull/1076?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/5d2c89ef29ba1e007dfb496bcd439d82ef577a15?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `33.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1076/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1076?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1076      +/-   ##
===========================================
- Coverage     32.5%   32.46%   -0.04%     
===========================================
  Files          553      553              
  Lines        16802    16831      +29     
  Branches     10829    10855      +26     
===========================================
+ Hits          5461     5464       +3     
  Misses        1384     1384              
- Partials      9957     9983      +26
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1076?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/network/impl/block\_loader\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5jcHA=) | `21.83% <33.33%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `14.23% <0%> (-0.43%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `35.63% <0%> (-0.42%)` | :arrow_down: |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `14.66% <0%> (-0.41%)` | :arrow_down: |
| [...module/irohad/validation/chain\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdGlvbl90ZXN0LmNwcA==) | `15.21% <0%> (-0.34%)` | :arrow_down: |
| [...model/builders/protobuf/transport\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zcG9ydF9idWlsZGVyX3Rlc3QuY3Bw) | `20% <0%> (-0.23%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `13.23% <0%> (-0.2%)` | :arrow_down: |
| [test/module/irohad/simulator/simulator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfdGVzdC5jcHA=) | `16.47% <0%> (-0.2%)` | :arrow_down: |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `16.48% <0%> (-0.18%)` | :arrow_down: |
| [...red\_model/converters/json\_proto\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NvbnZlcnRlcnMvanNvbl9wcm90b19jb252ZXJ0ZXJfdGVzdC5jcHA=) | `3.44% <0%> (-0.13%)` | :arrow_down: |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/1076/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1076?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1076?src=pr&el=footer). Last update [5d2c89e...da1fcbc](https://codecov.io/gh/hyperledger/iroha/pull/1076?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-15 17:38:00,2018-03-15 18:13:16
https://api.github.com/repos/hyperledger/iroha/issues/1075,https://api.github.com/repos/hyperledger/iroha/issues/comments/374565074,https://github.com/hyperledger/iroha/pull/1075#issuecomment-374565074,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1075?src=pr&el=h1) Report
> Merging [#1075](https://codecov.io/gh/hyperledger/iroha/pull/1075?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c3b1a743e977de8a517b754eb727d7b9b997545d?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1075/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1075?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop   #1075      +/-   ##
==========================================
+ Coverage    32.48%   32.5%   +0.01%     
==========================================
  Files          559     553       -6     
  Lines        17086   16800     -286     
  Branches     11037   10828     -209     
==========================================
- Hits          5551    5460      -91     
+ Misses        1389    1384       -5     
+ Partials     10146    9956     -190
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1075?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ces/transaction\_responses/abstract\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL2Fic3RyYWN0X3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-22.23%)` | :arrow_down: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-18.19%)` | :arrow_down: |
| [...had/torii/processor/transaction\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfdGVzdC5jcHA=) | `8% <0%> (-11.86%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `48.88% <0%> (-5.66%)` | :arrow_down: |
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `7.5% <0%> (-4.13%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `23.28% <0%> (-3.99%)` | :arrow_down: |
| [...rotobuf/common\_objects/proto\_signature\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX3NpZ25hdHVyZV9idWlsZGVyLmhwcA==) | `72.72% <0%> (-2.28%)` | :arrow_down: |
| [...d\_model/builders/common\_objects/amount\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL2Ftb3VudF9idWlsZGVyLmhwcA==) | `53.33% <0%> (-1.51%)` | :arrow_down: |
| [test/module/irohad/network/block\_loader\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyX3Rlc3QuY3Bw) | `9.6% <0%> (-0.08%)` | :arrow_down: |
| [...terfaces/query\_responses/transactions\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3RyYW5zYWN0aW9uc19yZXNwb25zZS5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| ... and [49 more](https://codecov.io/gh/hyperledger/iroha/pull/1075/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1075?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1075?src=pr&el=footer). Last update [c3b1a74...f0f3e55](https://codecov.io/gh/hyperledger/iroha/pull/1075?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-20 11:32:11,2018-03-20 15:40:46
https://api.github.com/repos/hyperledger/iroha/issues/1074,https://api.github.com/repos/hyperledger/iroha/issues/comments/373108082,https://github.com/hyperledger/iroha/pull/1074#issuecomment-373108082,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1074?src=pr&el=h1) Report
> Merging [#1074](https://codecov.io/gh/hyperledger/iroha/pull/1074?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/61d60c9b64fe9b01898fede352221002c93fec3f?src=pr&el=desc) will **increase** coverage by `0.03%`.
> The diff coverage is `66.66%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1074/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1074?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop   #1074      +/-   ##
==========================================
+ Coverage    32.46%   32.5%   +0.03%     
==========================================
  Files          553     553              
  Lines        16831   16802      -29     
  Branches     10855   10829      -26     
==========================================
- Hits          5464    5461       -3     
  Misses        1384    1384              
+ Partials      9983    9957      -26
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1074?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `36.04% <ø> (+0.41%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `14.65% <ø> (+0.42%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `13.43% <ø> (+0.19%)` | :arrow_up: |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `16.66% <ø> (+0.17%)` | :arrow_up: |
| [test/module/irohad/simulator/simulator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfdGVzdC5jcHA=) | `16.66% <ø> (+0.19%)` | :arrow_up: |
| [...module/irohad/validation/chain\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdGlvbl90ZXN0LmNwcA==) | `15.55% <ø> (+0.33%)` | :arrow_up: |
| [...red\_model/converters/json\_proto\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NvbnZlcnRlcnMvanNvbl9wcm90b19jb252ZXJ0ZXJfdGVzdC5jcHA=) | `3.57% <ø> (+0.12%)` | :arrow_up: |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `15.06% <ø> (+0.4%)` | :arrow_up: |
| [...model/builders/protobuf/transport\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zcG9ydF9idWlsZGVyX3Rlc3QuY3Bw) | `20.22% <ø> (+0.22%)` | :arrow_up: |
| [test/module/irohad/network/block\_loader\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyX3Rlc3QuY3Bw) | `9.6% <100%> (+0.07%)` | :arrow_up: |
| ... and [1 more](https://codecov.io/gh/hyperledger/iroha/pull/1074/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1074?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1074?src=pr&el=footer). Last update [61d60c9...593084c](https://codecov.io/gh/hyperledger/iroha/pull/1074?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-14 17:30:21,2018-03-15 02:06:56
https://api.github.com/repos/hyperledger/iroha/issues/1074,https://api.github.com/repos/hyperledger/iroha/issues/comments/373240933,https://github.com/hyperledger/iroha/pull/1074#issuecomment-373240933,sorabot,"SonarQube analysis reported 12 issues
* ![MINOR][MINOR] 12 minor

#### Top 10 issues

1. ![MINOR][MINOR] [integration_test_framework.cpp#L168](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/framework/integration_framework/integration_test_framework.cpp#L168): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L173](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/framework/integration_framework/integration_test_framework.cpp#L173): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L189](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L189): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L189](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L189): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L189](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L189): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L189](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L189): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L289](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L289): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L289](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L289): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L289](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L289): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L289](https://github.com/hyperledger/iroha/blob/593084cd27b7c2aafca947b9ef5e345d3458d790/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L289): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-15 02:35:56,2018-03-15 02:35:56
https://api.github.com/repos/hyperledger/iroha/issues/1073,https://api.github.com/repos/hyperledger/iroha/issues/comments/373340302,https://github.com/hyperledger/iroha/pull/1073#issuecomment-373340302,Warchant,"Remove commit c7d4d0d from your branch:

1) by rebasing onto develop
```
git fetch
git rebase -i origin/develop
# and remove line with c7d4d0d
```

or

2) just remove it
```
git rebase -i HEAD~2
# and remove line with c7d4d0d
```",2018-03-15 11:08:31,2018-03-15 11:08:50
https://api.github.com/repos/hyperledger/iroha/issues/1073,https://api.github.com/repos/hyperledger/iroha/issues/comments/374124610,https://github.com/hyperledger/iroha/pull/1073#issuecomment-374124610,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1073?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@8f5487d`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1073/graphs/tree.svg?height=150&token=VEvywEmaef&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1073?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             develop   #1073   +/-   ##
=========================================
  Coverage           ?   32.5%           
=========================================
  Files              ?     553           
  Lines              ?   16800           
  Branches           ?   10828           
=========================================
  Hits               ?    5460           
  Misses             ?    1384           
  Partials           ?    9956
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1073?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1073?src=pr&el=footer). Last update [8f5487d...e70649f](https://codecov.io/gh/hyperledger/iroha/pull/1073?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-19 07:39:25,2018-03-28 14:36:56
https://api.github.com/repos/hyperledger/iroha/issues/1072,https://api.github.com/repos/hyperledger/iroha/issues/comments/373066864,https://github.com/hyperledger/iroha/pull/1072#issuecomment-373066864,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1072?src=pr&el=h1) Report
> Merging [#1072](https://codecov.io/gh/hyperledger/iroha/pull/1072?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6c60b6d0df6b95ed888eef9e22fe02d3a60ac078?src=pr&el=desc) will **increase** coverage by `0.54%`.
> The diff coverage is `34.32%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1072/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1072?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1072      +/-   ##
===========================================
+ Coverage    32.31%   32.86%   +0.54%     
===========================================
  Files          561      545      -16     
  Lines        17267    16977     -290     
  Branches     11194    10934     -260     
===========================================
- Hits          5580     5579       -1     
+ Misses        1389     1334      -55     
+ Partials     10298    10064     -234
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1072?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ers/common\_objects/query\_response\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL3F1ZXJ5X3Jlc3BvbnNlX2J1aWxkZXJfdGVzdC5jcHA=) | `4.06% <4.06%> (ø)` | |
| [...obuf/builder\_templates/query\_response\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3F1ZXJ5X3Jlc3BvbnNlX3RlbXBsYXRlLmhwcA==) | `88.54% <88.54%> (ø)` | |
| [shared\_model/interfaces/commands/detach\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvZGV0YWNoX3JvbGUuaHBw) | `0% <0%> (-38.47%)` | :arrow_down: |
| [irohad/model/execution/execution\_error.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9leGVjdXRpb25fZXJyb3IuaHBw) | `0% <0%> (-33.34%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `29.33% <0%> (-23.05%)` | :arrow_down: |
| [...ces/transaction\_responses/abstract\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL2Fic3RyYWN0X3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-22.23%)` | :arrow_down: |
| [shared\_model/backend/protobuf/util.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdXRpbC5ocHA=) | `40% <0%> (-20%)` | :arrow_down: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-18.19%)` | :arrow_down: |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `20% <0%> (-13.34%)` | :arrow_down: |
| [irohad/ametsuchi/impl/wsv\_restorer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3dzdl9yZXN0b3Jlcl9pbXBsLmNwcA==) | `27.27% <0%> (-12.73%)` | :arrow_down: |
| ... and [150 more](https://codecov.io/gh/hyperledger/iroha/pull/1072/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1072?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1072?src=pr&el=footer). Last update [6c60b6d...c54c0d3](https://codecov.io/gh/hyperledger/iroha/pull/1072?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-14 15:39:18,2018-03-24 14:13:42
https://api.github.com/repos/hyperledger/iroha/issues/1072,https://api.github.com/repos/hyperledger/iroha/issues/comments/375893241,https://github.com/hyperledger/iroha/pull/1072#issuecomment-375893241,sorabot,"SonarQube analysis reported 1 issue

1. ![MAJOR][MAJOR] [query_response_template.hpp#L214](https://github.com/hyperledger/iroha/blob/c54c0d3658595a31c908aa338178b69439b6ceba/shared_model/builders/protobuf/builder_templates/query_response_template.hpp#L214): syntax error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AsyntaxError)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2018-03-24 14:27:00,2018-03-24 14:27:00
https://api.github.com/repos/hyperledger/iroha/issues/1071,https://api.github.com/repos/hyperledger/iroha/issues/comments/373816645,https://github.com/hyperledger/iroha/pull/1071#issuecomment-373816645,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1071?src=pr&el=h1) Report
> Merging [#1071](https://codecov.io/gh/hyperledger/iroha/pull/1071?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/2a0c94f4d2d43c5c5cf0ed8a136d20142ffc1814?src=pr&el=desc) will **increase** coverage by `0.03%`.
> The diff coverage is `39.34%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1071/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1071?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1071      +/-   ##
===========================================
+ Coverage     32.5%   32.53%   +0.03%     
===========================================
  Files          553      553              
  Lines        16800    16802       +2     
  Branches     10828    10824       -4     
===========================================
+ Hits          5460     5466       +6     
  Misses        1384     1384              
+ Partials      9956     9952       -4
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1071?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...module/irohad/validation/chain\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdGlvbl90ZXN0LmNwcA==) | `15.55% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/supermajority\_checker.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3VwZXJtYWpvcml0eV9jaGVja2VyLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/wsv\_restorer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3dzdl9yZXN0b3Jlcl9pbXBsLmNwcA==) | `40% <ø> (ø)` | :arrow_up: |
| [irohad/torii/processor/query\_processor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9xdWVyeV9wcm9jZXNzb3IuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `51.37% <ø> (ø)` | :arrow_up: |
| [irohad/main/application.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [.../ordering/impl/ordering\_service\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `45% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `75.92% <ø> (ø)` | :arrow_up: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `54.54% <ø> (+5.65%)` | :arrow_up: |
| ... and [23 more](https://codecov.io/gh/hyperledger/iroha/pull/1071/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1071?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1071?src=pr&el=footer). Last update [2a0c94f...68413e7](https://codecov.io/gh/hyperledger/iroha/pull/1071?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-16 19:12:27,2018-03-19 11:46:30
https://api.github.com/repos/hyperledger/iroha/issues/1071,https://api.github.com/repos/hyperledger/iroha/issues/comments/374192711,https://github.com/hyperledger/iroha/pull/1071#issuecomment-374192711,sorabot,"SonarQube analysis reported 9 issues

1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/68413e7fca7ced5f61800a98b738e89c4c318a29/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/68413e7fca7ced5f61800a98b738e89c4c318a29/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/68413e7fca7ced5f61800a98b738e89c4c318a29/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/68413e7fca7ced5f61800a98b738e89c4c318a29/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L285](https://github.com/hyperledger/iroha/blob/68413e7fca7ced5f61800a98b738e89c4c318a29/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L285): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L285](https://github.com/hyperledger/iroha/blob/68413e7fca7ced5f61800a98b738e89c4c318a29/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L285): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L285](https://github.com/hyperledger/iroha/blob/68413e7fca7ced5f61800a98b738e89c4c318a29/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L285): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L285](https://github.com/hyperledger/iroha/blob/68413e7fca7ced5f61800a98b738e89c4c318a29/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L285): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [torii_queries_test.cpp#L80](https://github.com/hyperledger/iroha/blob/68413e7fca7ced5f61800a98b738e89c4c318a29/test/module/irohad/torii/torii_queries_test.cpp#L80): Class 'ToriiQueriesTest' is unsafe, 'ToriiQueriesTest::runner' can leak by wrong usage. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunsafeClassCanLeak)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-19 12:18:16,2018-03-19 12:18:16
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/372741176,https://github.com/hyperledger/iroha/pull/1070#issuecomment-372741176,stinger112,"Guys, how can I correctly test this PR in CI using a special container without Boost and with modern CMake (>3.5.1)?",2018-03-13 17:02:43,2018-03-13 17:02:43
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/372753650,https://github.com/hyperledger/iroha/pull/1070#issuecomment-372753650,Warchant,"To correctly test this, you would need to re-build `hyperledger/iroha-docker-develop:v1` without boost, and then run `./scripts/run-iroha-dev.sh`, then try to build.

Go to docker/develop/Dockerfile, remove boost and build:
```
docker build -t hyperledger/iroha-docker-develop:v1 --compress --build-arg PARALLELISM=8 .
```

I hope you have powerful computer, because this will take a while :-)
",2018-03-13 17:38:30,2018-03-13 17:42:22
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/372767514,https://github.com/hyperledger/iroha/pull/1070#issuecomment-372767514,Warchant,Hunter is BSD3 licensed. Is it compatible with our license?,2018-03-13 18:18:58,2018-03-13 18:18:58
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/372772203,https://github.com/hyperledger/iroha/pull/1070#issuecomment-372772203,l4l,"> I hope you have powerful computer, because this will take a while :-)

I'd suggest to remove parallelism here

> Hunter is BSD3 licensed. Is it compatible with our license?

Yes",2018-03-13 18:32:48,2018-03-13 18:45:36
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/372773194,https://github.com/hyperledger/iroha/pull/1070#issuecomment-372773194,Warchant,">I'd suggest to remove parallelism here

Why? This is a number of threads used for building process.",2018-03-13 18:35:51,2018-03-13 18:35:51
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/373116878,https://github.com/hyperledger/iroha/pull/1070#issuecomment-373116878,Warchant,"I tested this PR, build succeeds without boost in the OS.

UPD: since we compile CMake manually in `hyperledger/iroha-docker-develop:v1`, it links to cmake's libcurl without SSL support, however libcurl in the system has SSL support. This is why `build` fails with `log: Protocol ""https"" not supported or disabled in libcurl`. Workaround is to install libcurl with SSL support before cmake compilation and compile cmake with support of system curl.

UPD2: when you install 
```
zlib1g-dev
libcurl4-openssl-dev
```
and build cmake with `--system-curl`, then error disappears

```
# cmake
./bootstrap --system-curl --parallel=8 --enable-ccache
make -j8
make install
```",2018-03-14 17:55:26,2018-03-14 20:16:24
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/373302395,https://github.com/hyperledger/iroha/pull/1070#issuecomment-373302395,Warchant,"As soon as I compile new dockerfile from https://github.com/hyperledger/iroha/pull/1078 and push it to dockerhub, `build` step on ci will stop failing.",2018-03-15 08:46:56,2018-03-15 08:46:56
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/373334941,https://github.com/hyperledger/iroha/pull/1070#issuecomment-373334941,Warchant,"As you can see, [`build-clean`](https://github.com/stinger112/iroha/blob/f19d6fdcce9a3559efc43ab50775869c9ad3b718/.circleci/config.yml#L370-L433) works. No boost installed in a system. After merge of this PR, to build iroha it will be enough to have a `CMake, g++-5, golang` (for grpc, but when it will be hunterized, it will disappear).",2018-03-15 10:47:24,2018-03-15 11:25:48
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/375651960,https://github.com/hyperledger/iroha/pull/1070#issuecomment-375651960,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1070?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@acc8d8c`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1070/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1070?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1070   +/-   ##
==========================================
  Coverage           ?   32.46%           
==========================================
  Files              ?      553           
  Lines              ?    16831           
  Branches           ?    10855           
==========================================
  Hits               ?     5464           
  Misses             ?     1384           
  Partials           ?     9983
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1070?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1070?src=pr&el=footer). Last update [acc8d8c...cf4a0d6](https://codecov.io/gh/hyperledger/iroha/pull/1070?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-23 12:37:24,2018-03-27 14:56:55
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/376558313,https://github.com/hyperledger/iroha/pull/1070#issuecomment-376558313,stinger112,I make Hunter fully optional and it enables by `-DHUNTER_ENABLED=ON` option for further investigation.,2018-03-27 15:01:39,2018-03-27 15:01:39
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/376612053,https://github.com/hyperledger/iroha/pull/1070#issuecomment-376612053,Warchant,">Hunter modifies target names, for example libametsuchi.a becomes libametsuchid.a in Debug build. It could be a problem if Hunter introduces such side effect to the project.

It is not a problem. All libs are linked correctly. But can be fixed with https://cmake.org/cmake/help/v3.0/variable/CMAKE_DEBUG_POSTFIX.html",2018-03-27 17:40:15,2018-03-27 17:40:15
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/376868496,https://github.com/hyperledger/iroha/pull/1070#issuecomment-376868496,lebdron,"@Warchant This particular problem with suffix can be fixed, but it is not clear if there are other changes introduced by Hunter script.",2018-03-28 12:27:35,2018-03-28 12:27:35
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/376976964,https://github.com/hyperledger/iroha/pull/1070#issuecomment-376976964,muratovv,Wow. 2 approves but changes don't work. We have to investigate more in boost targets with the disabled flag.,2018-03-28 17:53:06,2018-03-29 07:44:20
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/377486315,https://github.com/hyperledger/iroha/pull/1070#issuecomment-377486315,stinger112,"Oh, pretty hard PR.
I have some problems with builds, we need further investigation.",2018-03-30 09:21:26,2018-03-30 09:21:26
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/379539282,https://github.com/hyperledger/iroha/pull/1070#issuecomment-379539282,l4l,Any updates on that?,2018-04-08 10:28:35,2018-04-08 10:28:35
https://api.github.com/repos/hyperledger/iroha/issues/1070,https://api.github.com/repos/hyperledger/iroha/issues/comments/379721203,https://github.com/hyperledger/iroha/pull/1070#issuecomment-379721203,stinger112,This PR contains some problems with Boost targets and has been postponed until Jenkins CI will be fixed.,2018-04-09 11:32:08,2018-04-09 11:32:08
https://api.github.com/repos/hyperledger/iroha/issues/1069,https://api.github.com/repos/hyperledger/iroha/issues/comments/372717301,https://github.com/hyperledger/iroha/pull/1069#issuecomment-372717301,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1069?src=pr&el=h1) Report
> Merging [#1069](https://codecov.io/gh/hyperledger/iroha/pull/1069?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/dee8b5fe392189e6ce2269b2a6aecf2a5bf13108?src=pr&el=desc) will **increase** coverage by `0.06%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1069/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1069?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1069      +/-   ##
===========================================
+ Coverage    32.46%   32.53%   +0.06%     
===========================================
  Files          553      553              
  Lines        16831    16824       -7     
  Branches     10855    10840      -15     
===========================================
+ Hits          5464     5473       +9     
  Misses        1384     1384              
+ Partials      9983     9967      -16
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1069?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/simulator/verified\_proposal\_creator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1069/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci92ZXJpZmllZF9wcm9wb3NhbF9jcmVhdG9yLmhwcA==) | `50% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/simulator/simulator\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1069/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfbW9ja3MuaHBw) | `33.33% <0%> (ø)` | :arrow_up: |
| [irohad/simulator/block\_creator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1069/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9ibG9ja19jcmVhdG9yLmhwcA==) | `50% <0%> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1069/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmNwcA==) | `42.37% <0%> (+0.7%)` | :arrow_up: |
| [test/module/irohad/simulator/simulator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1069/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfdGVzdC5jcHA=) | `17.97% <0%> (+1.5%)` | :arrow_up: |
| [irohad/simulator/impl/simulator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1069/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9pbXBsL3NpbXVsYXRvci5jcHA=) | `47.45% <0%> (+7.13%)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1069/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGVfdGVzdC5jcHA=) | `30% <0%> (+7.92%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1069?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1069?src=pr&el=footer). Last update [dee8b5f...19d4984](https://codecov.io/gh/hyperledger/iroha/pull/1069?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-13 15:58:05,2018-03-14 00:08:45
https://api.github.com/repos/hyperledger/iroha/issues/1068,https://api.github.com/repos/hyperledger/iroha/issues/comments/372128503,https://github.com/hyperledger/iroha/pull/1068#issuecomment-372128503,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1068?src=pr&el=h1) Report
> Merging [#1068](https://codecov.io/gh/hyperledger/iroha/pull/1068?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/5d2c89ef29ba1e007dfb496bcd439d82ef577a15?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1068/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1068?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop   #1068   +/-   ##
=======================================
  Coverage     32.5%   32.5%           
=======================================
  Files          553     553           
  Lines        16802   16802           
  Branches     10829   10829           
=======================================
  Hits          5461    5461           
  Misses        1384    1384           
  Partials      9957    9957
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1068?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1068?src=pr&el=footer). Last update [5d2c89e...b12d590](https://codecov.io/gh/hyperledger/iroha/pull/1068?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-11 16:31:20,2018-03-15 17:59:44
https://api.github.com/repos/hyperledger/iroha/issues/1068,https://api.github.com/repos/hyperledger/iroha/issues/comments/372135601,https://github.com/hyperledger/iroha/pull/1068#issuecomment-372135601,l4l,"lcov on the linux build takes nearly 13 minutes, can it be optimized?
Also entire build has taken nearly 2 hours, it is a bit painful",2018-03-11 18:06:27,2018-03-11 18:09:57
https://api.github.com/repos/hyperledger/iroha/issues/1068,https://api.github.com/repos/hyperledger/iroha/issues/comments/372777399,https://github.com/hyperledger/iroha/pull/1068#issuecomment-372777399,bakhtin,Shall we exclude builds for ARM platform for a regular commit (PR or non-develop/non-master branch push) and enable them for develop and master branches only?,2018-03-13 18:48:44,2018-03-13 18:48:44
https://api.github.com/repos/hyperledger/iroha/issues/1068,https://api.github.com/repos/hyperledger/iroha/issues/comments/372903885,https://github.com/hyperledger/iroha/pull/1068#issuecomment-372903885,neewy,"> Shall we exclude builds for ARM platform for a regular commit (PR or non-develop/non-master branch push) and enable them for develop and master branches only?

Yes",2018-03-14 04:50:51,2018-03-14 04:50:51
https://api.github.com/repos/hyperledger/iroha/issues/1067,https://api.github.com/repos/hyperledger/iroha/issues/comments/372048082,https://github.com/hyperledger/iroha/pull/1067#issuecomment-372048082,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1067?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@cd755a0`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1067/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1067?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1067   +/-   ##
==========================================
  Coverage           ?   32.57%           
==========================================
  Files              ?      553           
  Lines              ?    16822           
  Branches           ?    10834           
==========================================
  Hits               ?     5479           
  Misses             ?     1382           
  Partials           ?     9961
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1067?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...le/shared\_model/cryptography/crypto\_usage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1067/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9jcnlwdG9fdXNhZ2VfdGVzdC5jcHA=) | `33.33% <ø> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1067?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1067?src=pr&el=footer). Last update [cd755a0...e5b9752](https://codecov.io/gh/hyperledger/iroha/pull/1067?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-10 17:38:09,2018-03-10 17:43:06
https://api.github.com/repos/hyperledger/iroha/issues/1066,https://api.github.com/repos/hyperledger/iroha/issues/comments/373710510,https://github.com/hyperledger/iroha/pull/1066#issuecomment-373710510,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1066?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/mst_experimental@0963d87`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `31.82%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1066/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1066?src=pr&el=tree)

```diff
@@                    Coverage Diff                    @@
##             trunk/mst_experimental    #1066   +/-   ##
=========================================================
  Coverage                          ?   32.71%           
=========================================================
  Files                             ?      565           
  Lines                             ?    17427           
  Branches                          ?    11216           
=========================================================
  Hits                              ?     5702           
  Misses                            ?     1381           
  Partials                          ?    10344
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1066?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...had/torii/processor/transaction\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/peer\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9wZWVyX3F1ZXJ5LmhwcA==) | `50% <ø> (ø)` | |
| [irohad/validation/impl/stateful\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | |
| [...del/builders/common\_objects/asset\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL2Fzc2V0X2J1aWxkZXJfdGVzdC5jcHA=) | `29.41% <ø> (ø)` | |
| [irohad/network/block\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyLmhwcA==) | `50% <ø> (ø)` | |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `100% <ø> (ø)` | |
| [...red\_model/cryptography/hash\_providers/sha3\_256.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoX3Byb3ZpZGVycy9zaGEzXzI1Ni5ocHA=) | `50% <ø> (ø)` | |
| [irohad/validation/chain\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdG9yLmhwcA==) | `50% <ø> (ø)` | |
| [...had/consensus/yac/storage/yac\_proposal\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfcHJvcG9zYWxfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | |
| [...had/multi\_sig\_transactions/storage/mst\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9tc3Rfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | |
| ... and [232 more](https://codecov.io/gh/hyperledger/iroha/pull/1066/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1066?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1066?src=pr&el=footer). Last update [0963d87...9259aa6](https://codecov.io/gh/hyperledger/iroha/pull/1066?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-16 13:18:51,2018-04-22 22:10:06
https://api.github.com/repos/hyperledger/iroha/issues/1066,https://api.github.com/repos/hyperledger/iroha/issues/comments/383420289,https://github.com/hyperledger/iroha/pull/1066#issuecomment-383420289,sorabot,"SonarQube analysis reported 16 issues
* ![MINOR][MINOR] 16 minor

#### Top 10 issues

1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L145](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/iroha-cli/interactive/interactive_transaction_cli.hpp#L145): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_index.hpp#L55](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/irohad/ametsuchi/impl/postgres_block_index.hpp#L55): Unused private function: 'PostgresBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L71](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/irohad/ametsuchi/impl/postgres_block_query.hpp#L71): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L79](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/irohad/ametsuchi/impl/postgres_block_query.hpp#L79): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L89](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/irohad/ametsuchi/impl/postgres_block_query.hpp#L89): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L112](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L112): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L36): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L65](https://github.com/hyperledger/iroha/blob/9259aa6626ad52ef19e594114ba5926012e13080/irohad/consensus/yac/impl/yac_gate_impl.hpp#L65): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-04-22 23:21:14,2018-04-22 23:21:14
https://api.github.com/repos/hyperledger/iroha/issues/1065,https://api.github.com/repos/hyperledger/iroha/issues/comments/372041366,https://github.com/hyperledger/iroha/pull/1065#issuecomment-372041366,l4l,mistaken here,2018-03-10 16:10:13,2018-03-10 16:10:13
https://api.github.com/repos/hyperledger/iroha/issues/1064,https://api.github.com/repos/hyperledger/iroha/issues/comments/372042845,https://github.com/hyperledger/iroha/pull/1064#issuecomment-372042845,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1064?src=pr&el=h1) Report
> Merging [#1064](https://codecov.io/gh/hyperledger/iroha/pull/1064?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b215d8763ae015c3ae736d8f7806bde890951fc6?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1064/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1064?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1064   +/-   ##
========================================
  Coverage    32.57%   32.57%           
========================================
  Files          553      553           
  Lines        16822    16822           
  Branches     10834    10834           
========================================
  Hits          5479     5479           
  Misses        1382     1382           
  Partials      9961     9961
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1064?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...le/shared\_model/cryptography/crypto\_usage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1064/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9jcnlwdG9fdXNhZ2VfdGVzdC5jcHA=) | `33.33% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1064?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1064?src=pr&el=footer). Last update [b215d87...83dc910](https://codecov.io/gh/hyperledger/iroha/pull/1064?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-10 16:31:29,2018-03-10 17:59:43
https://api.github.com/repos/hyperledger/iroha/issues/1063,https://api.github.com/repos/hyperledger/iroha/issues/comments/372015728,https://github.com/hyperledger/iroha/pull/1063#issuecomment-372015728,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1063?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@4a645dd`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1063/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1063?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1063   +/-   ##
==========================================
  Coverage           ?   32.57%           
==========================================
  Files              ?      553           
  Lines              ?    16822           
  Branches           ?    10834           
==========================================
  Hits               ?     5479           
  Misses             ?     1382           
  Partials           ?     9961
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1063?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1063?src=pr&el=footer). Last update [4a645dd...393d306](https://codecov.io/gh/hyperledger/iroha/pull/1063?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-10 09:13:43,2018-03-10 09:18:10
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/372025960,https://github.com/hyperledger/iroha/issues/1062#issuecomment-372025960,l4l,"Agree, that there is only one applicable way of solving the issue is nonces. But I don't really sure that we need to consider it in design schema. My opinion it's better delegate to transport (e.g TLS [has such protection](https://tools.ietf.org/html/rfc4346#appendix-F.2)), and non-secure transport implies that there is no protection against replay attacks.",2018-03-10 12:25:50,2018-03-10 12:25:50
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/372035969,https://github.com/hyperledger/iroha/issues/1062#issuecomment-372035969,Warchant,">Reply attack

Replay attack...",2018-03-10 14:56:39,2018-03-10 14:56:39
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/372036360,https://github.com/hyperledger/iroha/issues/1062#issuecomment-372036360,Warchant,"As I mentioned before (https://soramitsu.atlassian.net/browse/IR-802) it is not a question, if it is TLS or not, TLS protects from listening the channel between client and peer, but peer can replay this transaction by himself, as many times as needed. System will process all of them. As I mentioned before, **every account MUST have a number, which is unique for every transaction it sends**. The simplest way to implement it is a counter. Ethereum implements this approach.

*How to retrieve counter?*
As full node (peer) you already have it, it is stored in current WSV.
As light node (client) you don't have neigher blocks nor current state. You **must** query this number. You **will not be able to send transactions** without knowledge of this number. System should not process transactions with the same counters from the same accounts, it must consider such transaction as one replayed transaction, even if transactions are different.

##

>The simplest way to generate nonce is to take a random number(string, whatever) every time. This approach is used in hyperledger sawtooth and fabric(for anonymous transactions). The disadvantage of this method is that already used nonces should be stored in order to verify the uniqueness of the new ones.

This is exactly a reason why this approach is **not the simplest way**. The simplest way is counter. During validation you just check  `ctr_stored_in_wsv + 1 == ctr_current_tx`. If false, then transaction is replayed.  The only reason I see why they select this method is for anonymity -- it is easy to select a subset of users with given counter, since you know it in advance and with random nonce it is not possible.",2018-03-10 15:01:53,2018-03-10 15:56:34
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/372040218,https://github.com/hyperledger/iroha/issues/1062#issuecomment-372040218,Warchant,"The consequence of not using counter is the ability of anyone who intercepts valid transaction, within a stateless validation time frame, re-send this transaction many times, until (if it is asset transfer) source account will run out of assets.",2018-03-10 15:55:33,2018-03-10 16:48:29
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/372101882,https://github.com/hyperledger/iroha/issues/1062#issuecomment-372101882,takemiyamakoto,"It can also be possible to prevent replay attacks by using timestamps. We can just require that all transactions from the same account must have a unique timestamp. If users need to send many transactions at once, we can introduce the concept of a transaction batch.",2018-03-11 09:37:04,2018-03-11 09:37:04
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/372128601,https://github.com/hyperledger/iroha/issues/1062#issuecomment-372128601,Warchant,">must have a unique timestamp

Then you should store timestamp of last processed transaction in the account state. Then, timestamp of currently processed transaction should be strictly greater than timestamp from account state.

If you think, it becomes obvious that timestamp solution works in the same way as counter, but in this case clients should not know counter in advance to be able to send valid transactions.


> If users need to send many transactions at once, we can introduce the concept of a transaction batch.

Commands from different transactions can be combined in a single transaction, so we already have it.
",2018-03-11 16:32:39,2018-03-11 16:58:05
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/372916331,https://github.com/hyperledger/iroha/issues/1062#issuecomment-372916331,neewy,"Not exactly. 

As a user, I can create a batch of transactions where they all will be validated and committed together, or not at all; all or nothing **(order matters).** Banks doing batching, exchange of assets can use this schema. So, the validation of batch differs from individual transactions. Unfortunately, this requirement is not elaborated now, and we need to plan it, maybe for exchange functionality.",2018-03-14 06:16:47,2018-03-14 06:16:47
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/374618949,https://github.com/hyperledger/iroha/issues/1062#issuecomment-374618949,neewy,"So, just the timestamp is enough, right? 

If people want to send the same amount to the same address at the same time, this is a spam attack, so preventing that is a great way to do spam protection + replay attack protection at the same time (this is what @takemiyamakoto says).

@muratovv are there any implications for MST, can we just use tx counter and change validation?",2018-03-20 14:31:28,2018-03-20 14:31:28
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/374619343,https://github.com/hyperledger/iroha/issues/1062#issuecomment-374619343,neewy,"Or overall, are there any problems to use just a timestamp?",2018-03-20 14:32:31,2018-03-20 14:32:31
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/374620494,https://github.com/hyperledger/iroha/issues/1062#issuecomment-374620494,victordrobny,The problem with MST is that you never know when transaction is sent to ordering gate and in what order. That is why this approach with nonce sequences(or timestamps) doesn't work with mst. ,2018-03-20 14:35:39,2018-03-20 14:42:37
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/374862949,https://github.com/hyperledger/iroha/issues/1062#issuecomment-374862949,victordrobny,"In order to MST transaction to go to ordering gate it needs to get some amount of signatures(quorum). Each user that signs mst transaction only by his public key. Then he sends it to some node. Each node has a pool of mst transactions and once in awhile node shares mst transactions that it has with two random neighbors. When some node gets all of the signed copies of transaction it sends it to the ordering gate.
Due to the mechanism of mst propogation and the fact that users can sign it asynchronously system can not know in what order user have signed his transactions. 
The benefit behind the idea of tx_counter and timestamp is simplisity of nonce uniquness check procedure. If nonce is bigger than previous one you sure that it is unique, but in case of multisig transactions can appear in different order. That is why nether tx counter nor timestamp is aplicable solution for mst.",2018-03-21 08:25:36,2018-03-21 08:25:36
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/374866047,https://github.com/hyperledger/iroha/issues/1062#issuecomment-374866047,l4l,"@victordrobny actually both cases are applicable to mst
It consider new signature on the tx iff hashes are equals. That implies that the second signatory must now in advance stuff like time/nonce and sign exactly same tx.
MST component actually send **only 1** tx with necessary signatures (and to the tx processor, not ordering service)

@neewy It might be issues with timestamp synchronization. So it basically become similar to the nonces: you need to ask it, to make sure that tx doesn't go to nowhere. And as long as clock as physically different you need to do it regularly ",2018-03-21 08:40:47,2018-03-21 08:40:47
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/374918948,https://github.com/hyperledger/iroha/issues/1062#issuecomment-374918948,neewy,What if we will just use random nonce?,2018-03-21 12:23:09,2018-03-21 12:23:09
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/375012062,https://github.com/hyperledger/iroha/issues/1062#issuecomment-375012062,Warchant,"Time [can be different](https://en.wikipedia.org/wiki/Clock_synchronization) on a different computers in a distributed system, moreover **it *will* be different**.
This is the only downside of using timestamps.

@neewy if you use random nonce, then:
1. you need to store all processed nonces in account state -- just ask yourself, how to check that tx is replayed when it contains random number in ""Nonce"" field?
2. how does client/peer determine next nonce?

As I mentioned before, every transaction for every account needs to have a unique number to prevent a replay. Linearly growing number is good solution (timestamp or counter).",2018-03-21 16:44:36,2018-03-21 16:46:36
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/375168335,https://github.com/hyperledger/iroha/issues/1062#issuecomment-375168335,takemiyamakoto,Time is fine. The tx contents and time stamp have to be unique and this is a feature. No one should be sending the same tx at the same time to the same person for the same amount. There’s just no use case for that besides attacking the network.,2018-03-22 03:31:10,2018-03-22 03:31:10
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/375224087,https://github.com/hyperledger/iroha/issues/1062#issuecomment-375224087,Warchant,">The tx contents and time stamp have to be unique and this is a feature.

What if user has 2 devices, device A has time 12:01, device B has time 11:59. User sends a transaction from the device A and in 1 minute sends a different transaction from the device B, so that

- tx1 has signing time 12:01
- tx2 has signing time 12:00, but sent after tx1

Tx1 gets processed and time 12:01 is stored in account's state. 

To prevent replay attacks peers need to process only transactions, which have timestamp greater than stored in account's state. Otherwise, you would need to store all timestamps (how do you check that timestamp is unique?), or query all user transactions to get all timestamps (which is much slower, than integer comparison).

With this scheme next transaction with time 12:00 will not be processed -- it will be marked as ""replayed"". 

To prevent this, there should be some universal time for the distributed system, which is synchronized across all peers/clients. But, if you think, from the client prospective of view, this mechanism is not different at all from the fetching number (counter) from the blockchain.
",2018-03-22 08:59:48,2018-03-22 09:00:34
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/376656010,https://github.com/hyperledger/iroha/issues/1062#issuecomment-376656010,l4l,So what's the final decision? Leave nonce&timer as it was before?,2018-03-27 20:02:24,2018-03-27 20:02:24
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/376763155,https://github.com/hyperledger/iroha/issues/1062#issuecomment-376763155,takemiyamakoto,"@Warchant Ordering in a distributed ledger is not determined by time or some counter. Instead it is determined by the orderer and consensus mechanism. Replay protection should not even try to prevent different transactions from being sent at the same time or try to make guarantees about the order of transactions being accepted by the network.

To prevent transactions that are rejected from being arbitrarily sent back to the network later on, every transaction should have an expiration time, after which it is no longer valid. For replay protection, it is enough to guarantee that the contents of the tx (sender, receiver, amount, and time) are unique.",2018-03-28 05:09:12,2018-03-28 05:09:12
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/377179468,https://github.com/hyperledger/iroha/issues/1062#issuecomment-377179468,Warchant,">For replay protection, it is enough to guarantee that the contents of the tx (sender, receiver, amount, and time) are unique.

How would you check that timestamp of tx that is being processed is unique? 

Naive algorithm is to search for all txs of current sender and then get all timestamps, then compare current timestamp with queried from blockchain. My concern is about performance of such approach - it is very very slow -- O(n) , n - number of transactions in blockchain.

",2018-03-29 09:33:05,2018-03-29 11:13:05
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/377423408,https://github.com/hyperledger/iroha/issues/1062#issuecomment-377423408,takemiyamakoto,"Why do you care if the tx's timestamp is unique? All you care about is that all txs are unique (unique sender, receiver, amount, and time). This is just an O(1) lookup in a global map to see if there is another tx with the same bytes in the blockchain.",2018-03-30 01:55:17,2018-03-30 01:55:17
https://api.github.com/repos/hyperledger/iroha/issues/1062,https://api.github.com/repos/hyperledger/iroha/issues/comments/378939588,https://github.com/hyperledger/iroha/issues/1062#issuecomment-378939588,lebdron,"@takemiyamakoto The solution with lookup in global map is suitable at the moment, because we already store all transaction hashes of each user in PostgreSQL, so the lookup is trivial.",2018-04-05 13:40:23,2018-04-05 13:40:23
https://api.github.com/repos/hyperledger/iroha/issues/1061,https://api.github.com/repos/hyperledger/iroha/issues/comments/371919947,https://github.com/hyperledger/iroha/pull/1061#issuecomment-371919947,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1061?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@4a645dd`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1061/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1061?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1061   +/-   ##
==========================================
  Coverage           ?   32.57%           
==========================================
  Files              ?      546           
  Lines              ?    16821           
  Branches           ?    10833           
==========================================
  Hits               ?     5479           
  Misses             ?     1382           
  Partials           ?     9960
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1061?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1061?src=pr&el=footer). Last update [4a645dd...1e8019f](https://codecov.io/gh/hyperledger/iroha/pull/1061?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-09 19:25:05,2018-03-09 19:41:22
https://api.github.com/repos/hyperledger/iroha/issues/1061,https://api.github.com/repos/hyperledger/iroha/issues/comments/372018063,https://github.com/hyperledger/iroha/pull/1061#issuecomment-372018063,x3medima17,"What if `gcc` uses more that 3GB? 
It will fail with `internal compiler error`",2018-03-10 09:58:08,2018-03-10 09:58:29
https://api.github.com/repos/hyperledger/iroha/issues/1061,https://api.github.com/repos/hyperledger/iroha/issues/comments/372020134,https://github.com/hyperledger/iroha/pull/1061#issuecomment-372020134,Warchant,"@x3medima17 Wow. Really. My branch failed with internal compiler error and after these changes CI succeeded and I thought it will work.

I will search for another solution.
",2018-03-10 10:37:00,2018-03-10 10:37:00
https://api.github.com/repos/hyperledger/iroha/issues/1061,https://api.github.com/repos/hyperledger/iroha/issues/comments/372240852,https://github.com/hyperledger/iroha/pull/1061#issuecomment-372240852,neewy,forever indeed :),2018-03-12 09:17:26,2018-03-12 09:17:26
https://api.github.com/repos/hyperledger/iroha/issues/1060,https://api.github.com/repos/hyperledger/iroha/issues/comments/371809992,https://github.com/hyperledger/iroha/pull/1060#issuecomment-371809992,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1060?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@fdca275`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `37.8%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1060/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1060?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1060   +/-   ##
==========================================
  Coverage           ?   32.55%           
==========================================
  Files              ?      553           
  Lines              ?    16827           
  Branches           ?    10840           
==========================================
  Hits               ?     5478           
  Misses             ?     1380           
  Partials           ?     9969
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1060?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...le/shared\_model/cryptography/crypto\_usage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9jcnlwdG9fdXNhZ2VfdGVzdC5jcHA=) | `33.33% <ø> (ø)` | |
| [shared\_model/cryptography/public\_key.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9wdWJsaWNfa2V5LmhwcA==) | `0% <ø> (ø)` | |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `50% <ø> (ø)` | |
| [shared\_model/cryptography/seed.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9zZWVkLmhwcA==) | `0% <ø> (ø)` | |
| [shared\_model/cryptography/private\_key.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9wcml2YXRlX2tleS5ocHA=) | `0% <ø> (ø)` | |
| [shared\_model/cryptography/signed.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9zaWduZWQuaHBw) | `0% <ø> (ø)` | |
| [shared\_model/cryptography/keypair.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9rZXlwYWlyLmhwcA==) | `0% <0%> (ø)` | |
| [shared\_model/bindings/model\_crypto.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX2NyeXB0by5jcHA=) | `12.5% <100%> (ø)` | |
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `50% <100%> (ø)` | |
| [shared\_model/cryptography/model\_impl/seed.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9tb2RlbF9pbXBsL3NlZWQuY3Bw) | `20% <20%> (ø)` | |
| ... and [6 more](https://codecov.io/gh/hyperledger/iroha/pull/1060/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1060?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1060?src=pr&el=footer). Last update [fdca275...e11779a](https://codecov.io/gh/hyperledger/iroha/pull/1060?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-09 13:19:58,2018-03-09 18:17:40
https://api.github.com/repos/hyperledger/iroha/issues/1059,https://api.github.com/repos/hyperledger/iroha/issues/comments/372574572,https://github.com/hyperledger/iroha/pull/1059#issuecomment-372574572,luckychess,One comment about const refs: almost all pass by value cases will be changed when other components (like consensus gate) move to a shared model. I do not want to touch them now because all these cases will gone very soon after other components to shared model migration.,2018-03-13 07:42:33,2018-03-13 07:42:33
https://api.github.com/repos/hyperledger/iroha/issues/1059,https://api.github.com/repos/hyperledger/iroha/issues/comments/372963498,https://github.com/hyperledger/iroha/pull/1059#issuecomment-372963498,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1059?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@0f8b0ff`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `24.13%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1059/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1059?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1059   +/-   ##
==========================================
  Coverage           ?   32.52%           
==========================================
  Files              ?      543           
  Lines              ?    16697           
  Branches           ?    10744           
==========================================
  Hits               ?     5431           
  Misses             ?     1394           
  Partials           ?     9872
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1059?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/synchronizer/synchronizer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1059/diff?src=pr&el=tree#diff-aXJvaGFkL3N5bmNocm9uaXplci9zeW5jaHJvbml6ZXIuaHBw) | `50% <ø> (ø)` | |
| [...d/network/impl/peer\_communication\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1059/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9wZWVyX2NvbW11bmljYXRpb25fc2VydmljZV9pbXBsLmNwcA==) | `66.66% <100%> (ø)` | |
| [test/module/shared\_model/validators/validators.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1059/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9ycy5ocHA=) | `100% <100%> (ø)` | |
| [...t/module/irohad/synchronizer/synchronizer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1059/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3N5bmNocm9uaXplci9zeW5jaHJvbml6ZXJfdGVzdC5jcHA=) | `16.66% <13.33%> (ø)` | |
| [irohad/synchronizer/impl/synchronizer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1059/diff?src=pr&el=tree#diff-aXJvaGFkL3N5bmNocm9uaXplci9pbXBsL3N5bmNocm9uaXplcl9pbXBsLmNwcA==) | `34.04% <18.18%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1059?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1059?src=pr&el=footer). Last update [0f8b0ff...6e1008f](https://codecov.io/gh/hyperledger/iroha/pull/1059?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-14 09:51:26,2018-03-29 11:44:02
https://api.github.com/repos/hyperledger/iroha/issues/1059,https://api.github.com/repos/hyperledger/iroha/issues/comments/377196258,https://github.com/hyperledger/iroha/pull/1059#issuecomment-377196258,Alexey-N-Chernyshov,please pay attention to codacy review https://app.codacy.com/app/stinger112/iroha/pullRequest?prid=1453166,2018-03-29 10:42:02,2018-03-29 10:42:02
https://api.github.com/repos/hyperledger/iroha/issues/1058,https://api.github.com/repos/hyperledger/iroha/issues/comments/371629654,https://github.com/hyperledger/iroha/pull/1058#issuecomment-371629654,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-08 21:25:37,2018-03-08 21:25:37
https://api.github.com/repos/hyperledger/iroha/issues/1057,https://api.github.com/repos/hyperledger/iroha/issues/comments/371605877,https://github.com/hyperledger/iroha/pull/1057#issuecomment-371605877,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1057?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@c47f6ae`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `20.68%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1057/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1057?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1057   +/-   ##
==========================================
  Coverage           ?   32.47%           
==========================================
  Files              ?      543           
  Lines              ?    16709           
  Branches           ?    10758           
==========================================
  Hits               ?     5427           
  Misses             ?     1396           
  Partials           ?     9886
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1057?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1057/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9zdG9yYWdlLmhwcA==) | `50% <ø> (ø)` | |
| [shared\_model/validators/answer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1057/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvYW5zd2VyLmhwcA==) | `81.25% <ø> (ø)` | |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1057/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `44% <0%> (ø)` | |
| [test/module/irohad/ametsuchi/ametsuchi\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1057/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfZml4dHVyZS5ocHA=) | `41.46% <0%> (ø)` | |
| [libs/common/files.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1057/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vZmlsZXMuY3Bw) | `14.28% <100%> (ø)` | |
| [test/system/irohad\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1057/diff?src=pr&el=tree#diff-dGVzdC9zeXN0ZW0vaXJvaGFkX3Rlc3QuY3Bw) | `28.57% <100%> (ø)` | |
| [test/module/irohad/ametsuchi/flat\_file\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1057/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9mbGF0X2ZpbGVfdGVzdC5jcHA=) | `12.84% <5.88%> (ø)` | |
| [test/module/libs/crypto/keys\_manager\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1057/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX3Rlc3QuY3Bw) | `29.5% <50%> (ø)` | |
| [...framework/integration\_framework/iroha\_instance.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1057/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmNwcA==) | `72.41% <50%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1057?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1057?src=pr&el=footer). Last update [c47f6ae...3361d08](https://codecov.io/gh/hyperledger/iroha/pull/1057?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-08 19:59:15,2018-03-12 10:06:04
https://api.github.com/repos/hyperledger/iroha/issues/1057,https://api.github.com/repos/hyperledger/iroha/issues/comments/372264741,https://github.com/hyperledger/iroha/pull/1057#issuecomment-372264741,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [integration_test_framework.cpp#L169](https://github.com/hyperledger/iroha/blob/3361d08b864a26a2153b3dd87eb88abae1a4f809/test/framework/integration_framework/integration_test_framework.cpp#L169): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L174](https://github.com/hyperledger/iroha/blob/3361d08b864a26a2153b3dd87eb88abae1a4f809/test/framework/integration_framework/integration_test_framework.cpp#L174): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-12 10:39:51,2018-03-12 10:39:51
https://api.github.com/repos/hyperledger/iroha/issues/1056,https://api.github.com/repos/hyperledger/iroha/issues/comments/372385482,https://github.com/hyperledger/iroha/pull/1056#issuecomment-372385482,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1056?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@ec6ee16`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `31.9%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1056/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1056?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1056   +/-   ##
==========================================
  Coverage           ?   32.55%           
==========================================
  Files              ?      544           
  Lines              ?    16752           
  Branches           ?    10782           
==========================================
  Hits               ?     5453           
  Misses             ?     1388           
  Partials           ?     9911
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1056?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/network/block\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyLmhwcA==) | `50% <ø> (ø)` | |
| [irohad/main/application.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uaHBw) | `0% <ø> (ø)` | |
| [irohad/network/peer\_communication\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvcGVlcl9jb21tdW5pY2F0aW9uX3NlcnZpY2UuaHBw) | `50% <ø> (ø)` | |
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `100% <ø> (ø)` | |
| [irohad/network/ordering\_gate.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfZ2F0ZS5ocHA=) | `50% <ø> (ø)` | |
| [...d\_model/interfaces/commands/set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `37.5% <ø> (ø)` | |
| [...ers/protobuf/common\_objects/proto\_peer\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX3BlZXJfYnVpbGRlci5ocHA=) | `72.72% <ø> (ø)` | |
| [shared\_model/validators/signable\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvc2lnbmFibGVfdmFsaWRhdG9yLmhwcA==) | `22.22% <ø> (ø)` | |
| [...had/consensus/yac/storage/yac\_proposal\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfcHJvcG9zYWxfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/mutable\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9tdXRhYmxlX3N0b3JhZ2UuaHBw) | `50% <ø> (ø)` | |
| ... and [108 more](https://codecov.io/gh/hyperledger/iroha/pull/1056/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1056?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1056?src=pr&el=footer). Last update [ec6ee16...0f43f35](https://codecov.io/gh/hyperledger/iroha/pull/1056?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-12 17:03:16,2018-04-30 11:07:39
https://api.github.com/repos/hyperledger/iroha/issues/1056,https://api.github.com/repos/hyperledger/iroha/issues/comments/375605708,https://github.com/hyperledger/iroha/pull/1056#issuecomment-375605708,l4l,Also update your branch please,2018-03-23 10:13:00,2018-03-23 10:13:13
https://api.github.com/repos/hyperledger/iroha/issues/1056,https://api.github.com/repos/hyperledger/iroha/issues/comments/381426602,https://github.com/hyperledger/iroha/pull/1056#issuecomment-381426602,l4l,Any news on that pr? Also update the branch please,2018-04-15 18:18:20,2018-04-15 18:18:20
https://api.github.com/repos/hyperledger/iroha/issues/1055,https://api.github.com/repos/hyperledger/iroha/issues/comments/371761227,https://github.com/hyperledger/iroha/pull/1055#issuecomment-371761227,Warchant,"@lebdron why you don't like addition of new build type? It is intuitive that build type is kind of configuration in cmake, since we have at least multiple configurations (Debug,Release + Coverage), it is wise to add new config.
Read this
https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html
https://cmake.org/cmake/help/latest/variable/CMAKE_CONFIGURATION_TYPES.html#variable:CMAKE_CONFIGURATION_TYPES
>This has reasonable defaults on most platforms, but can be extended to provide other build types

It is hard to use 2 build types + options (flags ON/OFF), because typically you need more precise flag management:
Debug + COVERAGE = redundant -g -O0 flags. We need -O1 to collect better coverage, and we do not need -g, it is redundant for coverage (it just consumes memory and increases build time).
Release + COVERAGE = -NDEBUG is a redundant flag (it disables asserts, but it is preferable to enable them, since asserts may contain execution paths which influence program state and coverage), plus `build` step in CI should be compiled in Release in this case, as well as tests. Also -O3 inlines code too much (-O1 is more preferable): https://gcc.gnu.org/onlinedocs/gnat_ugn/Optimization-Levels.html 
>-O3: Full optimization as in -O2; also uses more aggressive automatic inlining of subprograms within a unit (Inlining of Subprograms) and attempts to vectorize loops.

Coverage type is mostly for CI, you will not use it manually. You will typically build iroha in Debug or Release.",2018-03-09 09:32:44,2018-03-13 08:38:28
https://api.github.com/repos/hyperledger/iroha/issues/1055,https://api.github.com/repos/hyperledger/iroha/issues/comments/372029424,https://github.com/hyperledger/iroha/pull/1055#issuecomment-372029424,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1055?src=pr&el=h1) Report
> Merging [#1055](https://codecov.io/gh/hyperledger/iroha/pull/1055?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/61d60c9b64fe9b01898fede352221002c93fec3f?src=pr&el=desc) will **increase** coverage by `11.21%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1055/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1055?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##           develop    #1055       +/-   ##
============================================
+ Coverage    32.46%   43.67%   +11.21%     
============================================
  Files          553      550        -3     
  Lines        16831    14622     -2209     
  Branches     10855     7854     -3001     
============================================
+ Hits          5464     6386      +922     
+ Misses        1384     1213      -171     
+ Partials      9983     7023     -2960
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1055?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/proposal.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Byb3Bvc2FsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [...l/cryptography/crypto\_provider/crypto\_verifier.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9jcnlwdG9fcHJvdmlkZXIvY3J5cHRvX3ZlcmlmaWVyLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [...ohad/model/converters/json\_transaction\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl90cmFuc2FjdGlvbl9mYWN0b3J5LmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [...del/cryptography/crypto\_provider/crypto\_signer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9jcnlwdG9fcHJvdmlkZXIvY3J5cHRvX3NpZ25lci5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/consensus/yac/messages.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvbWVzc2FnZXMuaHBw) | `16.66% <0%> (-65.16%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `20.37% <0%> (-55.56%)` | :arrow_down: |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `0% <0%> (-50%)` | :arrow_down: |
| [shared\_model/bindings/model\_query\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuaHBw) | `50% <0%> (-50%)` | :arrow_down: |
| [libs/cache/abstract\_cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-bGlicy9jYWNoZS9hYnN0cmFjdF9jYWNoZS5ocHA=) | `50% <0%> (-37.5%)` | :arrow_down: |
| [...s/protobuf/common\_objects/proto\_amount\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX2Ftb3VudF9idWlsZGVyLmhwcA==) | `50% <0%> (-31.82%)` | :arrow_down: |
| ... and [489 more](https://codecov.io/gh/hyperledger/iroha/pull/1055/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1055?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1055?src=pr&el=footer). Last update [61d60c9...5b5eb42](https://codecov.io/gh/hyperledger/iroha/pull/1055?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-10 13:20:08,2018-03-20 15:58:35
https://api.github.com/repos/hyperledger/iroha/issues/1055,https://api.github.com/repos/hyperledger/iroha/issues/comments/375589226,https://github.com/hyperledger/iroha/pull/1055#issuecomment-375589226,muratovv,The PR contains a lot of independent changes. Need to separate it into logically independent PRs for continue. The task about it is here https://soramitsu.atlassian.net/browse/IR-957.,2018-03-23 09:14:20,2018-03-23 09:14:20
https://api.github.com/repos/hyperledger/iroha/issues/1054,https://api.github.com/repos/hyperledger/iroha/issues/comments/372579782,https://github.com/hyperledger/iroha/pull/1054#issuecomment-372579782,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1054?src=pr&el=h1) Report
> Merging [#1054](https://codecov.io/gh/hyperledger/iroha/pull/1054?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/ec99dd5e8fd5dce417cc50ed102e6f8f59fc8c99?src=pr&el=desc) will **decrease** coverage by `0.06%`.
> The diff coverage is `16.66%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1054/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1054?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1054      +/-   ##
===========================================
- Coverage    32.53%   32.46%   -0.07%     
===========================================
  Files          553      553              
  Lines        16824    16831       +7     
  Branches     10840    10855      +15     
===========================================
- Hits          5473     5464       -9     
  Misses        1384     1384              
- Partials      9967     9983      +16
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1054?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/simulator/verified\_proposal\_creator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1054/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci92ZXJpZmllZF9wcm9wb3NhbF9jcmVhdG9yLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/simulator/block\_creator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1054/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9ibG9ja19jcmVhdG9yLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1054/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmNwcA==) | `41.66% <0%> (-0.71%)` | :arrow_down: |
| [test/module/irohad/consensus/yac/yac\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1054/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGVfdGVzdC5jcHA=) | `22.07% <0%> (-7.93%)` | :arrow_down: |
| [irohad/simulator/impl/simulator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1054/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9pbXBsL3NpbXVsYXRvci5jcHA=) | `40.32% <26.66%> (-7.14%)` | :arrow_down: |
| [test/module/irohad/simulator/simulator\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1054/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfbW9ja3MuaHBw) | `33.33% <50%> (ø)` | :arrow_up: |
| [test/module/irohad/simulator/simulator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1054/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfdGVzdC5jcHA=) | `16.47% <6.66%> (-1.51%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1054?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1054?src=pr&el=footer). Last update [ec99dd5...25d5e02](https://codecov.io/gh/hyperledger/iroha/pull/1054?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-13 08:07:09,2018-03-13 11:30:22
https://api.github.com/repos/hyperledger/iroha/issues/1053,https://api.github.com/repos/hyperledger/iroha/issues/comments/372134016,https://github.com/hyperledger/iroha/pull/1053#issuecomment-372134016,l4l,"There is an [acceptance](https://github.com/hyperledger/iroha/tree/develop/test/integration/acceptance) folder. Could you move your fixes to the create_role_test.cpp?

Also the permissions of the user might change, so you may need this:
https://github.com/hyperledger/iroha/blob/b215d8763ae015c3ae736d8f7806bde890951fc6/test/framework/base_tx.hpp#L44-L52",2018-03-11 17:44:53,2018-03-11 17:44:53
https://api.github.com/repos/hyperledger/iroha/issues/1053,https://api.github.com/repos/hyperledger/iroha/issues/comments/376440098,https://github.com/hyperledger/iroha/pull/1053#issuecomment-376440098,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1053?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@21b40af`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `9.09%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1053/graphs/tree.svg?src=pr&token=VEvywEmaef&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1053?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             develop   #1053   +/-   ##
=========================================
  Coverage           ?   32.5%           
=========================================
  Files              ?     543           
  Lines              ?   16718           
  Branches           ?   10762           
=========================================
  Hits               ?    5434           
  Misses             ?    1394           
  Partials           ?    9890
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1053?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1053/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `20.61% <9.09%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1053?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1053?src=pr&el=footer). Last update [21b40af...c379739](https://codecov.io/gh/hyperledger/iroha/pull/1053?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-27 08:27:19,2018-03-27 08:27:19
https://api.github.com/repos/hyperledger/iroha/issues/1053,https://api.github.com/repos/hyperledger/iroha/issues/comments/376470167,https://github.com/hyperledger/iroha/pull/1053#issuecomment-376470167,x3medima17,"Test already exists
https://github.com/hyperledger/iroha/blob/develop/test/integration/acceptance/create_role_test.cpp#L128",2018-03-27 10:07:17,2018-03-27 10:07:33
https://api.github.com/repos/hyperledger/iroha/issues/1052,https://api.github.com/repos/hyperledger/iroha/issues/comments/373900588,https://github.com/hyperledger/iroha/pull/1052#issuecomment-373900588,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1052?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@92500bc`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `30.4%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1052/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1052?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1052   +/-   ##
==========================================
  Coverage           ?   32.46%           
==========================================
  Files              ?      559           
  Lines              ?    17115           
  Branches           ?    11054           
==========================================
  Hits               ?     5556           
  Misses             ?     1393           
  Partials           ?    10166
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1052?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/consensus/yac/impl/yac\_gate\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [...ule/irohad/consensus/yac/yac\_unknown\_peer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3Vua25vd25fcGVlcl90ZXN0LmNwcA==) | `9.3% <ø> (ø)` | |
| [.../consensus/yac/transport/yac\_network\_interface.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L3lhY19uZXR3b3JrX2ludGVyZmFjZS5ocHA=) | `50% <ø> (ø)` | |
| [...ohad/consensus/yac/transport/impl/network\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/consensus/yac/yac.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMveWFjLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/consensus/yac/cluster\_order.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlci5ocHA=) | `50% <ø> (ø)` | |
| [irohad/network/impl/block\_loader\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5ocHA=) | `0% <ø> (ø)` | |
| [...module/irohad/consensus/yac/yac\_sunny\_day\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3N1bm55X2RheV90ZXN0LmNwcA==) | `12.3% <0%> (ø)` | |
| [...module/irohad/consensus/yac/cluster\_order\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlcl90ZXN0LmNwcA==) | `5.88% <0%> (ø)` | |
| [test/module/irohad/consensus/yac/network\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvbmV0d29ya190ZXN0LmNwcA==) | `16.66% <0%> (ø)` | |
| ... and [16 more](https://codecov.io/gh/hyperledger/iroha/pull/1052/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1052?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1052?src=pr&el=footer). Last update [92500bc...8867ca3](https://codecov.io/gh/hyperledger/iroha/pull/1052?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-17 07:24:04,2018-03-26 19:39:04
https://api.github.com/repos/hyperledger/iroha/issues/1052,https://api.github.com/repos/hyperledger/iroha/issues/comments/376295919,https://github.com/hyperledger/iroha/pull/1052#issuecomment-376295919,sorabot,"SonarQube analysis reported 9 issues

1. ![MINOR][MINOR] [yac_gate_impl.hpp#L61](https://github.com/hyperledger/iroha/blob/8867ca3ae5fc484b58b5595abc6541d681c23e30/irohad/consensus/yac/impl/yac_gate_impl.hpp#L61): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8867ca3ae5fc484b58b5595abc6541d681c23e30/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8867ca3ae5fc484b58b5595abc6541d681c23e30/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8867ca3ae5fc484b58b5595abc6541d681c23e30/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/8867ca3ae5fc484b58b5595abc6541d681c23e30/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8867ca3ae5fc484b58b5595abc6541d681c23e30/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8867ca3ae5fc484b58b5595abc6541d681c23e30/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8867ca3ae5fc484b58b5595abc6541d681c23e30/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L288](https://github.com/hyperledger/iroha/blob/8867ca3ae5fc484b58b5595abc6541d681c23e30/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L288): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-26 20:11:40,2018-03-26 20:11:40
https://api.github.com/repos/hyperledger/iroha/issues/1051,https://api.github.com/repos/hyperledger/iroha/issues/comments/371544239,https://github.com/hyperledger/iroha/pull/1051#issuecomment-371544239,l4l,Also looks like a duplicate of #1032 (IR-928),2018-03-08 16:38:22,2018-03-08 16:38:22
https://api.github.com/repos/hyperledger/iroha/issues/1051,https://api.github.com/repos/hyperledger/iroha/issues/comments/371710141,https://github.com/hyperledger/iroha/pull/1051#issuecomment-371710141,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1051?src=pr&el=h1) Report
> Merging [#1051](https://codecov.io/gh/hyperledger/iroha/pull/1051?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/4e8ad9a1dbc1d18d908a12ab84f13c8feefd7373?src=pr&el=desc) will **increase** coverage by `0.11%`.
> The diff coverage is `4.16%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1051/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1051?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1051      +/-   ##
===========================================
+ Coverage    32.52%   32.64%   +0.11%     
===========================================
  Files          543      541       -2     
  Lines        16705    16617      -88     
  Branches     10751    10691      -60     
===========================================
- Hits          5433     5424       -9     
+ Misses        1392     1358      -34     
+ Partials      9880     9835      -45
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1051?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `37.33% <ø> (+7.99%)` | :arrow_up: |
| [test/integration/query/query\_acceptance\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9xdWVyeS9xdWVyeV9hY2NlcHRhbmNlX3Rlc3QuY3Bw) | `4.16% <4.16%> (ø)` | |
| [...d\_model/interfaces/commands/set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `0% <0%> (-37.5%)` | :arrow_down: |
| [...end/protobuf/commands/proto\_set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `60% <0%> (-20%)` | :arrow_down: |
| [.../consensus/yac/impl/supermajority\_checker\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9zdXBlcm1ham9yaXR5X2NoZWNrZXJfaW1wbC5jcHA=) | `80% <0%> (-10%)` | :arrow_down: |
| [.../backend/protobuf/common\_objects/trivial\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvdHJpdmlhbF9wcm90by5ocHA=) | `41.66% <0%> (-8.34%)` | :arrow_down: |
| [libs/common/byteutils.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vYnl0ZXV0aWxzLmhwcA==) | `30.76% <0%> (-7.7%)` | :arrow_down: |
| [irohad/validation/impl/chain\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9jaGFpbl92YWxpZGF0b3JfaW1wbC5jcHA=) | `45.45% <0%> (-2.55%)` | :arrow_down: |
| [...module/irohad/validation/chain\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdGlvbl90ZXN0LmNwcA==) | `14.28% <0%> (-0.94%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `42.39% <0%> (-0.88%)` | :arrow_down: |
| ... and [38 more](https://codecov.io/gh/hyperledger/iroha/pull/1051/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1051?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1051?src=pr&el=footer). Last update [4e8ad9a...e760175](https://codecov.io/gh/hyperledger/iroha/pull/1051?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-09 04:27:39,2018-03-09 04:27:39
https://api.github.com/repos/hyperledger/iroha/issues/1051,https://api.github.com/repos/hyperledger/iroha/issues/comments/371712795,https://github.com/hyperledger/iroha/pull/1051#issuecomment-371712795,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-09 04:50:44,2018-03-09 04:50:44
https://api.github.com/repos/hyperledger/iroha/issues/1050,https://api.github.com/repos/hyperledger/iroha/issues/comments/371400641,https://github.com/hyperledger/iroha/pull/1050#issuecomment-371400641,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1050?src=pr&el=h1) Report
> Merging [#1050](https://codecov.io/gh/hyperledger/iroha/pull/1050?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c3b1a743e977de8a517b754eb727d7b9b997545d?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `22.03%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1050/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1050?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1050      +/-   ##
===========================================
- Coverage    32.48%   32.47%   -0.01%     
===========================================
  Files          559      559              
  Lines        17086    17100      +14     
  Branches     11037    11043       +6     
===========================================
+ Hits          5551     5554       +3     
- Misses        1389     1392       +3     
- Partials     10146    10154       +8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1050?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/network/consensus\_gate.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvY29uc2Vuc3VzX2dhdGUuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac\_gate\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/base/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9zaWduYWJsZS5ocHA=) | `20% <ø> (ø)` | :arrow_up: |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `62% <0%> (-3.96%)` | :arrow_down: |
| [shared\_model/backend/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb24uaHBw) | `62.5% <0%> (-4.17%)` | :arrow_down: |
| [...t/module/irohad/synchronizer/synchronizer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3N5bmNocm9uaXplci9zeW5jaHJvbml6ZXJfdGVzdC5jcHA=) | `21.51% <0%> (ø)` | :arrow_up: |
| [shared\_model/backend/protobuf/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvYmxvY2suaHBw) | `68% <100%> (+2.04%)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGVfdGVzdC5jcHA=) | `15.71% <11.11%> (-6.37%)` | :arrow_down: |
| [irohad/synchronizer/impl/synchronizer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-aXJvaGFkL3N5bmNocm9uaXplci9pbXBsL3N5bmNocm9uaXplcl9pbXBsLmNwcA==) | `31.37% <25%> (+0.12%)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmNwcA==) | `40.57% <27.27%> (-1.09%)` | :arrow_down: |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/1050/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1050?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1050?src=pr&el=footer). Last update [c3b1a74...0186842](https://codecov.io/gh/hyperledger/iroha/pull/1050?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-08 07:12:40,2018-03-20 11:41:35
https://api.github.com/repos/hyperledger/iroha/issues/1050,https://api.github.com/repos/hyperledger/iroha/issues/comments/371697854,https://github.com/hyperledger/iroha/pull/1050#issuecomment-371697854,neewy,"I am sorry, but how is it different from https://github.com/hyperledger/iroha/pull/1052? I think you are confusing reviewers, please tell how it happened",2018-03-09 02:57:29,2018-03-09 02:57:29
https://api.github.com/repos/hyperledger/iroha/issues/1050,https://api.github.com/repos/hyperledger/iroha/issues/comments/371727336,https://github.com/hyperledger/iroha/pull/1050#issuecomment-371727336,x3medima17,"@neewy this branch was rebased onto `consensus-gate` instead of `develop`. That was an accident.
Now it is fixed",2018-03-09 06:39:54,2018-03-09 06:39:54
https://api.github.com/repos/hyperledger/iroha/issues/1050,https://api.github.com/repos/hyperledger/iroha/issues/comments/374538765,https://github.com/hyperledger/iroha/pull/1050#issuecomment-374538765,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [yac_gate_impl.hpp#L61](https://github.com/hyperledger/iroha/blob/0186842461a85841c3b3fda4cfaf432e4260e8ad/irohad/consensus/yac/impl/yac_gate_impl.hpp#L61): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-20 09:57:42,2018-03-20 09:57:42
https://api.github.com/repos/hyperledger/iroha/issues/1049,https://api.github.com/repos/hyperledger/iroha/issues/comments/371140054,https://github.com/hyperledger/iroha/pull/1049#issuecomment-371140054,luckychess,"Actually we can't. We can fetch account details only if query creator has at least one of can_get_my_acc_detail, can_get_all_acc_detail or can_get_domain_acc_detail permissions. We do not have any special permissions for fetching details has been set by a some specific user (like you can load details which author is user@domain but can't for author admin@domain) but I don't think we actually need such detailed permission scheme now.",2018-03-07 13:36:27,2018-03-07 13:36:27
https://api.github.com/repos/hyperledger/iroha/issues/1049,https://api.github.com/repos/hyperledger/iroha/issues/comments/371140433,https://github.com/hyperledger/iroha/pull/1049#issuecomment-371140433,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1049?src=pr&el=h1) Report
> Merging [#1049](https://codecov.io/gh/hyperledger/iroha/pull/1049?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/24e59d3e471403e4f31a5ba1e79f51ae7ec64737?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `10.52%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1049/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1049?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1049      +/-   ##
===========================================
- Coverage    32.51%   32.48%   -0.04%     
===========================================
  Files          543      543              
  Lines        16707    16698       -9     
  Branches     10752    10748       -4     
===========================================
- Hits          5433     5425       -8     
+ Misses        1394     1392       -2     
- Partials      9880     9881       +1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1049?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/query\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9xdWVyeV9nZW5lcmF0b3IuY3Bw) | `60.81% <ø> (+0.81%)` | :arrow_up: |
| [shared\_model/bindings/model\_query\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [...kend/protobuf/queries/proto\_get\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfYWNjb3VudF9kZXRhaWwuaHBw) | `66.66% <ø> (-8.34%)` | :arrow_down: |
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `42.13% <ø> (+0.46%)` | :arrow_up: |
| [...rohad/model/converters/json\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5X3Rlc3QuY3Bw) | `8.46% <ø> (+0.06%)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/queries/get\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/validators/query\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yLmhwcA==) | `58.57% <ø> (+0.82%)` | :arrow_up: |
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `9.09% <0%> (ø)` | :arrow_up: |
| ... and [11 more](https://codecov.io/gh/hyperledger/iroha/pull/1049/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1049?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1049?src=pr&el=footer). Last update [24e59d3...1adfd05](https://codecov.io/gh/hyperledger/iroha/pull/1049?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-07 13:37:54,2018-03-09 08:02:09
https://api.github.com/repos/hyperledger/iroha/issues/1049,https://api.github.com/repos/hyperledger/iroha/issues/comments/371740510,https://github.com/hyperledger/iroha/pull/1049#issuecomment-371740510,sorabot,"SonarQube analysis reported 7 issues

1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)
1. ![MINOR][MINOR] [json_query_factory.cpp#L35](https://github.com/hyperledger/iroha/blob/ec562b1822e96c94c9ab2d116b9c5ccc48473d7d/irohad/model/converters/impl/json_query_factory.cpp#L35): Variable 'deserializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_query_factory.cpp#L53](https://github.com/hyperledger/iroha/blob/ec562b1822e96c94c9ab2d116b9c5ccc48473d7d/irohad/model/converters/impl/json_query_factory.cpp#L53): Variable 'serializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [query_generator.cpp#L73](https://github.com/hyperledger/iroha/blob/ec562b1822e96c94c9ab2d116b9c5ccc48473d7d/irohad/model/generators/impl/query_generator.cpp#L73): Variable 'creator_account_id' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [query_generator.cpp#L104](https://github.com/hyperledger/iroha/blob/ec562b1822e96c94c9ab2d116b9c5ccc48473d7d/irohad/model/generators/impl/query_generator.cpp#L104): The function 'generateGetAccountAssetTransactions' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L300](https://github.com/hyperledger/iroha/blob/ec562b1822e96c94c9ab2d116b9c5ccc48473d7d/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L300): Variable 'permittee_account' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L358](https://github.com/hyperledger/iroha/blob/ec562b1822e96c94c9ab2d116b9c5ccc48473d7d/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L358): Variable 'peer' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-09 07:59:01,2018-03-09 07:59:01
https://api.github.com/repos/hyperledger/iroha/issues/1048,https://api.github.com/repos/hyperledger/iroha/issues/comments/370987837,https://github.com/hyperledger/iroha/pull/1048#issuecomment-370987837,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1048?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@164ec3e`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1048/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1048?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1048   +/-   ##
==========================================
  Coverage           ?   32.57%           
==========================================
  Files              ?      539           
  Lines              ?    16615           
  Branches           ?    10690           
==========================================
  Hits               ?     5412           
  Misses             ?     1379           
  Partials           ?     9824
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1048?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/amount/amount.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1048/diff?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmNwcA==) | `77.88% <ø> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1048?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1048?src=pr&el=footer). Last update [164ec3e...dcb7c4a](https://codecov.io/gh/hyperledger/iroha/pull/1048?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-07 01:15:49,2018-03-07 07:50:49
https://api.github.com/repos/hyperledger/iroha/issues/1047,https://api.github.com/repos/hyperledger/iroha/issues/comments/371443017,https://github.com/hyperledger/iroha/pull/1047#issuecomment-371443017,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1047?src=pr&el=h1) Report
> Merging [#1047](https://codecov.io/gh/hyperledger/iroha/pull/1047?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/164ec3e4e2281801cb89219b312ba4f2d2bb218b?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1047/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1047?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1047      +/-   ##
===========================================
+ Coverage    32.55%   32.55%   +<.01%     
===========================================
  Files          541      539       -2     
  Lines        16663    16602      -61     
  Branches     10724    10676      -48     
===========================================
- Hits          5424     5405      -19     
- Misses        1378     1387       +9     
+ Partials      9861     9810      -51
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1047?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...d\_model/interfaces/commands/set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `0% <0%> (-37.5%)` | :arrow_down: |
| [...end/protobuf/commands/proto\_set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `60% <0%> (-20%)` | :arrow_down: |
| [.../backend/protobuf/common\_objects/trivial\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvdHJpdmlhbF9wcm90by5ocHA=) | `41.66% <0%> (-8.34%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `42.39% <0%> (-0.88%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `25.75% <0%> (-0.72%)` | :arrow_down: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `45.37% <0%> (-0.46%)` | :arrow_down: |
| [shared\_model/validators/signable\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvc2lnbmFibGVfdmFsaWRhdG9yLmhwcA==) | `22.22% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `14.17% <0%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/mutable\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9tdXRhYmxlX3N0b3JhZ2UuaHBw) | `50% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `75.92% <0%> (ø)` | :arrow_up: |
| ... and [6 more](https://codecov.io/gh/hyperledger/iroha/pull/1047/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1047?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1047?src=pr&el=footer). Last update [164ec3e...ca43275](https://codecov.io/gh/hyperledger/iroha/pull/1047?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-08 10:13:20,2018-03-08 10:13:20
https://api.github.com/repos/hyperledger/iroha/issues/1046,https://api.github.com/repos/hyperledger/iroha/issues/comments/371500097,https://github.com/hyperledger/iroha/pull/1046#issuecomment-371500097,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1046?src=pr&el=h1) Report
> Merging [#1046](https://codecov.io/gh/hyperledger/iroha/pull/1046?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/e3870811a2e881e170394fd1c8c4fe2899e65952?src=pr&el=desc) will **increase** coverage by `0.03%`.
> The diff coverage is `41.66%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1046/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1046?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1046      +/-   ##
===========================================
+ Coverage    32.55%   32.58%   +0.03%     
===========================================
  Files          546      539       -7     
  Lines        16826    16610     -216     
  Branches     10839    10684     -155     
===========================================
- Hits          5478     5413      -65     
- Misses        1380     1381       +1     
+ Partials      9968     9816     -152
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1046?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/mutable\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9tdXRhYmxlX3N0b3JhZ2UuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9zdG9yYWdlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `75.92% <ø> (ø)` | :arrow_up: |
| [...tion/pipeline/transfer\_asset\_inter\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90cmFuc2Zlcl9hc3NldF9pbnRlcl9kb21haW5fdGVzdC5jcHA=) | `40.81% <0%> (ø)` | :arrow_up: |
| [...framework/integration\_framework/iroha\_instance.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmNwcA==) | `74.07% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `14.23% <0%> (+0.05%)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `22.09% <0%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/wsv\_restorer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3dzdl9yZXN0b3Jlcl9pbXBsLmNwcA==) | `40% <100%> (+12.72%)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `43.22% <60%> (+0.55%)` | :arrow_up: |
| ... and [57 more](https://codecov.io/gh/hyperledger/iroha/pull/1046/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1046?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1046?src=pr&el=footer). Last update [e387081...982e73c](https://codecov.io/gh/hyperledger/iroha/pull/1046?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-08 14:20:45,2018-03-09 17:30:25
https://api.github.com/repos/hyperledger/iroha/issues/1046,https://api.github.com/repos/hyperledger/iroha/issues/comments/371895162,https://github.com/hyperledger/iroha/pull/1046#issuecomment-371895162,sorabot,"SonarQube analysis reported 8 issues

1. ![MINOR][MINOR] [ametsuchi_test.cpp#L189](https://github.com/hyperledger/iroha/blob/982e73c995e9be7cc5f15a89b130da9983e9ee49/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L189): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L189](https://github.com/hyperledger/iroha/blob/982e73c995e9be7cc5f15a89b130da9983e9ee49/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L189): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L189](https://github.com/hyperledger/iroha/blob/982e73c995e9be7cc5f15a89b130da9983e9ee49/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L189): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L189](https://github.com/hyperledger/iroha/blob/982e73c995e9be7cc5f15a89b130da9983e9ee49/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L189): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L292](https://github.com/hyperledger/iroha/blob/982e73c995e9be7cc5f15a89b130da9983e9ee49/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L292): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L292](https://github.com/hyperledger/iroha/blob/982e73c995e9be7cc5f15a89b130da9983e9ee49/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L292): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L292](https://github.com/hyperledger/iroha/blob/982e73c995e9be7cc5f15a89b130da9983e9ee49/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L292): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L292](https://github.com/hyperledger/iroha/blob/982e73c995e9be7cc5f15a89b130da9983e9ee49/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L292): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-09 18:04:11,2018-03-09 18:04:11
https://api.github.com/repos/hyperledger/iroha/issues/1045,https://api.github.com/repos/hyperledger/iroha/issues/comments/371796836,https://github.com/hyperledger/iroha/issues/1045#issuecomment-371796836,Warchant,">It provides type-safety 

no. Unless, you use scoped enum.

I like defining some kind of singleton or static array `const char* map[] = {""permA"", ""permB""};`
And cast to string like 

```
enum class Perm: uint32_t {A, B}; 
Perm a = Perm::A;
std::string repr = map[a]; // I am not sure actually, if it has implicit cast to int or not, but idea is like this
```
It is a unix-way of handling error messages. But they define macros like `#define SOME_ERROR 1` and then have a method `const char* strerror(int)` to cast these numbers to strings (which are stored somewhere internally) 
",2018-03-09 12:14:05,2018-03-09 12:16:58
https://api.github.com/repos/hyperledger/iroha/issues/1045,https://api.github.com/repos/hyperledger/iroha/issues/comments/371896356,https://github.com/hyperledger/iroha/issues/1045#issuecomment-371896356,nickaleks,"> no. Unless, you use scoped enum.

Of course we would use scoped enum. I did not mention that since it seems obvious",2018-03-09 18:07:48,2018-03-09 18:09:21
https://api.github.com/repos/hyperledger/iroha/issues/1045,https://api.github.com/repos/hyperledger/iroha/issues/comments/374546549,https://github.com/hyperledger/iroha/issues/1045#issuecomment-374546549,l4l,"So far I have 3 ideas for solving it issue (feel free to propose new one). The first two use additional strings as it is, the last one is prefer depend on the protobuf (thus less transport-agnostic, but more stable).
All the ways describe how define `enum Permission`, and related `toString` & `fromString` (useless?) functions. Imo that should be enough for replacing (am I missing smth?).

p.s code may cause compile-errors, consider as pseudo-code

1. Macros. Yes, they are considered evilish but the solution is the most compact and has no code duplication at all.
**New permission** -> 1 LOC

```cpp
#define __PERM_SWITCH_TOSTR(r, _, elem) case Permission::elem: return ##elem;
#define __PERM_SWITCH_FROMSTR(r, _, elem) {##elem, Permission::elem}
#define PERM_DEF(perm_list)                                         \
  enum class Permission {                                          \
    perm_list                                                      \
    , NONE                                                         \
  };                                                               \
  inline const std::string toString(Permission p) {                \
    switch (p) {                                                   \
      BOOST_PP_SEQ_FOR_EACH(__PERM_SWITCH_TOSTR, _, perm_list)     \
    }                                                              \
    return ""undefined"";                                             \
  }                                                                \
  inline Permission fromString(const std::string s) {              \
    static std::map<std::string, Permission> m {                   \
      BOOST_PP_SEQ_FOR_EACH(__PERM_SWITCH_FROMSTR, _, perm_list)   \
    };                                                             \
    auto f = m.find(s);                                            \
    return f == m.end() ? Permission::NONE : *f;                   \
  }

PERM_DEF((can_receive)
         (can_transfer)
         (can_create_domain)
         ...)
```

2. Constexpr maps, a lot of code duplication but compile-time (-> prob less error-prone), need to write function str -> enum (idk how to do it via templates). It is roughly same to the case enum+pair of methods, I don't show  this case, because constexpr-maps is a bit better (for toString)
**New permission** -> 4 LOC (enum + PermMap::s (x2) + fromString's map)

```cpp
enum class Permission {
  can_receive,
  can_transfer,
  can_create_domain,
};

template<Permission>
class PermMap {
  static const std::string s;
};

template<>
const std::string PermMap<Permission::can_receive>::s = ""can_receive"";

inline const std::string toString(Permission p) {
  return PermMap<p>::s;
}

inline Permission fromString(const std::string s) {
  static const std::map<std::string, Permission> m {
    {""can_receive"", Permission::can_receive},
    {""can_transfer"", Permission::can_transfer},
    {""can_create_domain"", Permission::can_create_domain},
    ...
  };
  return m[s];
}
```

3. Depend on the protobuf, the most elegant way. The only problem that it highly depend on the transport so imo it is a bad thing to use. Also protobuf uses `enum` (NOT `enum class`, so weak typing  might be a huge problem in future)
**New permission** -> 0 LOC
Though protobuf updates may need some fixes

```cpp
using Permission = iroha::protocol::RolePermission;

inline const std::string toString(Permission p) {
  return iroha::protocol::RolePermission_Name(p);
}

inline Permission fromString(const std::string &s) {
  Permission p;
  iroha::protocol::RolePermission_Parse(s, &p);
  return p;
}
```",2018-03-20 10:24:15,2018-03-20 10:34:30
https://api.github.com/repos/hyperledger/iroha/issues/1045,https://api.github.com/repos/hyperledger/iroha/issues/comments/374619614,https://github.com/hyperledger/iroha/issues/1045#issuecomment-374619614,neewy,"> In order to execute a command, account needs to have certain permission. 

Well, it has to have a _role_",2018-03-20 14:33:14,2018-03-20 14:33:14
https://api.github.com/repos/hyperledger/iroha/issues/1045,https://api.github.com/repos/hyperledger/iroha/issues/comments/374621345,https://github.com/hyperledger/iroha/issues/1045#issuecomment-374621345,neewy,"Are there any updates on this issue? 
I can say that macros are looking good and there is no evilish side of it for me, but I am not affiliated with the technical decisions :) Are there any problems?",2018-03-20 14:38:00,2018-03-20 14:38:00
https://api.github.com/repos/hyperledger/iroha/issues/1045,https://api.github.com/repos/hyperledger/iroha/issues/comments/374690895,https://github.com/hyperledger/iroha/issues/1045#issuecomment-374690895,nickaleks,"It would be simpler to have switch case for toString, and do not implement fromString at all, since it is not needed much.",2018-03-20 17:41:45,2018-03-20 17:41:45
https://api.github.com/repos/hyperledger/iroha/issues/1045,https://api.github.com/repos/hyperledger/iroha/issues/comments/374717442,https://github.com/hyperledger/iroha/issues/1045#issuecomment-374717442,neewy,"I thought that you need fromString operation for deserialization, e.g. in genesis block a role can be created",2018-03-20 18:58:46,2018-03-20 18:58:46
https://api.github.com/repos/hyperledger/iroha/issues/1045,https://api.github.com/repos/hyperledger/iroha/issues/comments/374900301,https://github.com/hyperledger/iroha/issues/1045#issuecomment-374900301,nickaleks,We use protobuf for deserialization,2018-03-21 10:59:59,2018-03-21 12:12:58
https://api.github.com/repos/hyperledger/iroha/issues/1045,https://api.github.com/repos/hyperledger/iroha/issues/comments/374900557,https://github.com/hyperledger/iroha/issues/1045#issuecomment-374900557,neewy,Good,2018-03-21 11:01:01,2018-03-21 11:01:01
https://api.github.com/repos/hyperledger/iroha/issues/1044,https://api.github.com/repos/hyperledger/iroha/issues/comments/370802702,https://github.com/hyperledger/iroha/pull/1044#issuecomment-370802702,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1044?src=pr&el=h1) Report
> Merging [#1044](https://codecov.io/gh/hyperledger/iroha/pull/1044?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/cb6abfa8bdd98c286e5f48b5e387a8a6cd5e7e0f?src=pr&el=desc) will **increase** coverage by `0.03%`.
> The diff coverage is `25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1044/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1044?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1044      +/-   ##
===========================================
+ Coverage    32.55%   32.59%   +0.03%     
===========================================
  Files          539      540       +1     
  Lines        16602    16605       +3     
  Branches     10676    10682       +6     
===========================================
+ Hits          5405     5412       +7     
+ Misses        1387     1374      -13     
- Partials      9810     9819       +9
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1044?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/mutable\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9tdXRhYmxlX3N0b3JhZ2UuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `35% <0%> (-5.55%)` | :arrow_down: |
| [irohad/validation/impl/chain\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9jaGFpbl92YWxpZGF0b3JfaW1wbC5jcHA=) | `41.66% <16.66%> (-3.79%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `42.67% <22.22%> (-0.92%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `26.47% <25%> (+0.71%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `14.17% <55.55%> (ø)` | :arrow_up: |
| [...module/irohad/validation/chain\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdGlvbl90ZXN0LmNwcA==) | `12.5% <6.25%> (-1.79%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `75.92% <80%> (ø)` | :arrow_up: |
| [irohad/network/impl/block\_loader\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGVfdGVzdC5jcHA=) | `30% <0%> (ø)` | :arrow_up: |
| ... and [8 more](https://codecov.io/gh/hyperledger/iroha/pull/1044/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1044?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1044?src=pr&el=footer). Last update [cb6abfa...3e7f31b](https://codecov.io/gh/hyperledger/iroha/pull/1044?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-06 14:41:32,2018-03-06 14:41:32
https://api.github.com/repos/hyperledger/iroha/issues/1043,https://api.github.com/repos/hyperledger/iroha/issues/comments/371028479,https://github.com/hyperledger/iroha/pull/1043#issuecomment-371028479,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1043?src=pr&el=h1) Report
> Merging [#1043](https://codecov.io/gh/hyperledger/iroha/pull/1043?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/164ec3e4e2281801cb89219b312ba4f2d2bb218b?src=pr&el=desc) will **decrease** coverage by `0.05%`.
> The diff coverage is `8.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1043/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1043?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1043      +/-   ##
===========================================
- Coverage    32.55%   32.49%   -0.06%     
===========================================
  Files          541      539       -2     
  Lines        16663    16610      -53     
  Branches     10724    10689      -35     
===========================================
- Hits          5424     5398      -26     
- Misses        1378     1393      +15     
+ Partials      9861     9819      -42
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1043?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...module/shared\_model/bindings/model\_crypto\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX2NyeXB0b190ZXN0LmNwcA==) | `0% <0%> (ø)` | |
| [shared\_model/bindings/model\_crypto.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX2NyeXB0by5jcHA=) | `12.5% <25%> (ø)` | |
| [...d\_model/interfaces/commands/set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `0% <0%> (-37.5%)` | :arrow_down: |
| [...end/protobuf/commands/proto\_set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `60% <0%> (-20%)` | :arrow_down: |
| [.../backend/protobuf/common\_objects/trivial\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvdHJpdmlhbF9wcm90by5ocHA=) | `41.66% <0%> (-8.34%)` | :arrow_down: |
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `37.93% <0%> (-6.07%)` | :arrow_down: |
| [irohad/validation/impl/chain\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9jaGFpbl92YWxpZGF0b3JfaW1wbC5jcHA=) | `38.09% <0%> (-3.58%)` | :arrow_down: |
| [...module/irohad/validation/chain\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdGlvbl90ZXN0LmNwcA==) | `9.3% <0%> (-3.2%)` | :arrow_down: |
| [shared\_model/cryptography/public\_key.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9wdWJsaWNfa2V5LmhwcA==) | `22.22% <0%> (-2.78%)` | :arrow_down: |
| [shared\_model/cryptography/private\_key.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9wcml2YXRlX2tleS5ocHA=) | `14.28% <0%> (-2.39%)` | :arrow_down: |
| ... and [38 more](https://codecov.io/gh/hyperledger/iroha/pull/1043/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1043?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1043?src=pr&el=footer). Last update [164ec3e...e683361](https://codecov.io/gh/hyperledger/iroha/pull/1043?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-07 05:35:51,2018-03-08 04:37:30
https://api.github.com/repos/hyperledger/iroha/issues/1043,https://api.github.com/repos/hyperledger/iroha/issues/comments/371331324,https://github.com/hyperledger/iroha/pull/1043#issuecomment-371331324,lebdron,Please reflect the changes in `generateKeypair(seed)` documentation in `shared_model/bindings/model_crypto.hpp`,2018-03-08 00:10:38,2018-03-08 00:10:38
https://api.github.com/repos/hyperledger/iroha/issues/1042,https://api.github.com/repos/hyperledger/iroha/issues/comments/370675050,https://github.com/hyperledger/iroha/pull/1042#issuecomment-370675050,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1042?src=pr&el=h1) Report
> Merging [#1042](https://codecov.io/gh/hyperledger/iroha/pull/1042?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/92ac386a4493c0c5e1c81b9fac27001ab49b83d2?src=pr&el=desc) will **decrease** coverage by `0.07%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1042/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1042?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1042      +/-   ##
===========================================
- Coverage    32.55%   32.47%   -0.08%     
===========================================
  Files          541      527      -14     
  Lines        16675    16091     -584     
  Branches     10731    10350     -381     
===========================================
- Hits          5429     5226     -203     
+ Misses        1378     1356      -22     
+ Partials      9868     9509     -359
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1042?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-46.16%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (-37.5%)` | :arrow_down: |
| [...d\_model/interfaces/commands/set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `0% <0%> (-37.5%)` | :arrow_down: |
| [shared\_model/interfaces/base/primitive.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9wcmltaXRpdmUuaHBw) | `0% <0%> (-28.58%)` | :arrow_down: |
| [...end/protobuf/commands/proto\_set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `60% <0%> (-20%)` | :arrow_down: |
| [shared\_model/interfaces/queries/get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudC5ocHA=) | `36.36% <0%> (-18.19%)` | :arrow_down: |
| [irohad/validation/impl/chain\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9jaGFpbl92YWxpZGF0b3JfaW1wbC5jcHA=) | `35% <0%> (-13%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `37.5% <0%> (-12.96%)` | :arrow_down: |
| [...\_model/interfaces/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `0% <0%> (-11.77%)` | :arrow_down: |
| ... and [97 more](https://codecov.io/gh/hyperledger/iroha/pull/1042/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1042?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1042?src=pr&el=footer). Last update [92ac386...15df75d](https://codecov.io/gh/hyperledger/iroha/pull/1042?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-06 06:11:32,2018-03-08 03:49:24
https://api.github.com/repos/hyperledger/iroha/issues/1042,https://api.github.com/repos/hyperledger/iroha/issues/comments/370684881,https://github.com/hyperledger/iroha/pull/1042#issuecomment-370684881,takemiyamakoto,Can someone setup a custom URL for rtd to redirect to docs.iroha.tech?,2018-03-06 07:08:24,2018-03-06 07:08:24
https://api.github.com/repos/hyperledger/iroha/issues/1042,https://api.github.com/repos/hyperledger/iroha/issues/comments/371007533,https://github.com/hyperledger/iroha/pull/1042#issuecomment-371007533,neewy,"I have added an initial step for i18n setting, but left all the exact changes for a separate PR. Please do not get confused",2018-03-07 03:08:25,2018-03-07 03:08:25
https://api.github.com/repos/hyperledger/iroha/issues/1042,https://api.github.com/repos/hyperledger/iroha/issues/comments/371032168,https://github.com/hyperledger/iroha/pull/1042#issuecomment-371032168,neewy,@muratovv can you tell me if you are okay with proposed structure and review?,2018-03-07 05:59:49,2018-03-07 05:59:49
https://api.github.com/repos/hyperledger/iroha/issues/1041,https://api.github.com/repos/hyperledger/iroha/issues/comments/371035586,https://github.com/hyperledger/iroha/pull/1041#issuecomment-371035586,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1041?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@f532809`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `21.51%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1041/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1041?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             develop   #1041   +/-   ##
=========================================
  Coverage           ?   32.5%           
=========================================
  Files              ?     554           
  Lines              ?   16857           
  Branches           ?   10870           
=========================================
  Hits               ?    5479           
  Misses             ?    1388           
  Partials           ?    9990
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1041?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/block\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvYmxvY2tfdmFsaWRhdG9yLmhwcA==) | `33.33% <0%> (ø)` | |
| [...hared\_model/interfaces/iroha\_internal/proposal.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvaXJvaGFfaW50ZXJuYWwvcHJvcG9zYWwuaHBw) | `15.78% <0%> (ø)` | |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `16.48% <0%> (ø)` | |
| [shared\_model/validators/proposal\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcHJvcG9zYWxfdmFsaWRhdG9yLmhwcA==) | `33.33% <0%> (ø)` | |
| [irohad/network/impl/block\_loader\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5jcHA=) | `20.68% <0%> (ø)` | |
| [test/module/irohad/simulator/simulator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfdGVzdC5jcHA=) | `15.15% <0%> (ø)` | |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `48.88% <0%> (ø)` | |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuY3Bw) | `36.06% <0%> (ø)` | |
| [shared\_model/backend/protobuf/proposal.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcHJvcG9zYWwuaHBw) | `75% <100%> (ø)` | |
| [test/module/shared\_model/validators/validators.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9ycy5ocHA=) | `100% <100%> (ø)` | |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/1041/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1041?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1041?src=pr&el=footer). Last update [f532809...d696ac4](https://codecov.io/gh/hyperledger/iroha/pull/1041?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-07 06:19:29,2018-03-27 05:31:22
https://api.github.com/repos/hyperledger/iroha/issues/1040,https://api.github.com/repos/hyperledger/iroha/issues/comments/370751580,https://github.com/hyperledger/iroha/pull/1040#issuecomment-370751580,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1040?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@cb6abfa`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1040/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1040?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1040   +/-   ##
==========================================
  Coverage           ?   32.47%           
==========================================
  Files              ?      527           
  Lines              ?    16091           
  Branches           ?    10350           
==========================================
  Hits               ?     5226           
  Misses             ?     1356           
  Partials           ?     9509
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1040?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1040?src=pr&el=footer). Last update [cb6abfa...5e22c30](https://codecov.io/gh/hyperledger/iroha/pull/1040?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-06 11:28:25,2018-03-06 11:28:25
https://api.github.com/repos/hyperledger/iroha/issues/1039,https://api.github.com/repos/hyperledger/iroha/issues/comments/370428011,https://github.com/hyperledger/iroha/pull/1039#issuecomment-370428011,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1039?src=pr&el=h1) Report
> Merging [#1039](https://codecov.io/gh/hyperledger/iroha/pull/1039?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/110377cfc90546cb1648ba1f98c1885b46b2d805?src=pr&el=desc) will **decrease** coverage by `0.07%`.
> The diff coverage is `21.05%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1039/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1039?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1039      +/-   ##
===========================================
- Coverage    32.53%   32.45%   -0.08%     
===========================================
  Files          537      526      -11     
  Lines        16580    16101     -479     
  Branches     10669    10358     -311     
===========================================
- Hits          5394     5226     -168     
+ Misses        1379     1361      -18     
+ Partials      9807     9514     -293
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1039?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/network/impl/block\_loader\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/network/network\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvbmV0d29ya19tb2Nrcy5ocHA=) | `46.15% <ø> (+3.29%)` | :arrow_up: |
| [irohad/network/block\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/block\_loader\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9ibG9ja19sb2FkZXJfaW5pdC5jcHA=) | `62.5% <0%> (-12.5%)` | :arrow_down: |
| [test/module/irohad/network/block\_loader\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyX3Rlc3QuY3Bw) | `7.14% <0%> (-2.46%)` | :arrow_down: |
| [test/module/irohad/consensus/yac/yac\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGVfdGVzdC5jcHA=) | `30% <0%> (ø)` | :arrow_up: |
| [shared\_model/validators/block\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvYmxvY2tfdmFsaWRhdG9yLmhwcA==) | `100% <100%> (ø)` | :arrow_up: |
| [irohad/network/impl/block\_loader\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5jcHA=) | `21.83% <19.56%> (-1.24%)` | :arrow_down: |
| [...t/module/irohad/synchronizer/synchronizer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3N5bmNocm9uaXplci9zeW5jaHJvbml6ZXJfdGVzdC5jcHA=) | `22.97% <33.33%> (ø)` | :arrow_up: |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| ... and [70 more](https://codecov.io/gh/hyperledger/iroha/pull/1039/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1039?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1039?src=pr&el=footer). Last update [110377c...0d45325](https://codecov.io/gh/hyperledger/iroha/pull/1039?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-05 14:01:51,2018-03-06 07:54:01
https://api.github.com/repos/hyperledger/iroha/issues/1038,https://api.github.com/repos/hyperledger/iroha/issues/comments/371366011,https://github.com/hyperledger/iroha/pull/1038#issuecomment-371366011,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1038?src=pr&el=h1) Report
> Merging [#1038](https://codecov.io/gh/hyperledger/iroha/pull/1038?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/4e8ad9a1dbc1d18d908a12ab84f13c8feefd7373?src=pr&el=desc) will **decrease** coverage by `0.04%`.
> The diff coverage is `40%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1038/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1038?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1038      +/-   ##
===========================================
- Coverage    32.52%   32.47%   -0.05%     
===========================================
  Files          543      527      -16     
  Lines        16705    16093     -612     
  Branches     10751    10351     -400     
===========================================
- Hits          5433     5226     -207     
+ Misses        1392     1358      -34     
+ Partials      9880     9509     -371
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1038?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `42.39% <ø> (-0.88%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [...d\_model/interfaces/commands/set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `0% <ø> (-37.5%)` | :arrow_down: |
| [shared\_model/bindings/model\_query\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [shared\_model/builders/protobuf/unsigned\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Vuc2lnbmVkX3Byb3RvLmhwcA==) | `27.27% <ø> (ø)` | :arrow_up: |
| [shared\_model/bindings/model\_query\_builder.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuY3Bw) | `16.66% <0%> (-1.2%)` | :arrow_down: |
| [...rotobuf/builder\_templates/transaction\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3RyYW5zYWN0aW9uX3RlbXBsYXRlLmhwcA==) | `85% <100%> (-0.15%)` | :arrow_down: |
| [...end/protobuf/commands/proto\_set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `60% <50%> (-20%)` | :arrow_down: |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-46.16%)` | :arrow_down: |
| ... and [111 more](https://codecov.io/gh/hyperledger/iroha/pull/1038/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1038?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1038?src=pr&el=footer). Last update [4e8ad9a...77dc1ff](https://codecov.io/gh/hyperledger/iroha/pull/1038?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-08 03:22:10,2018-03-08 05:22:23
https://api.github.com/repos/hyperledger/iroha/issues/1037,https://api.github.com/repos/hyperledger/iroha/issues/comments/370650272,https://github.com/hyperledger/iroha/pull/1037#issuecomment-370650272,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1037?src=pr&el=h1) Report
> Merging [#1037](https://codecov.io/gh/hyperledger/iroha/pull/1037?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/753a4382afeac4544f27f92a743d6874c76c5859?src=pr&el=desc) will **decrease** coverage by `0.08%`.
> The diff coverage is `30%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1037/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1037?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1037      +/-   ##
===========================================
- Coverage    32.57%   32.48%   -0.09%     
===========================================
  Files          533      527       -6     
  Lines        16460    16093     -367     
  Branches     10584    10350     -234     
===========================================
- Hits          5362     5228     -134     
+ Misses        1370     1356      -14     
+ Partials      9728     9509     -219
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1037?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `37.14% <ø> (ø)` | :arrow_up: |
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `50% <30%> (+2.63%)` | :arrow_up: |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-46.16%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (-37.5%)` | :arrow_down: |
| [shared\_model/interfaces/base/primitive.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9wcmltaXRpdmUuaHBw) | `0% <0%> (-28.58%)` | :arrow_down: |
| [shared\_model/interfaces/queries/get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudC5ocHA=) | `36.36% <0%> (-18.19%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `37.5% <0%> (-12.96%)` | :arrow_down: |
| [...\_model/interfaces/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `0% <0%> (-11.77%)` | :arrow_down: |
| [shared\_model/utils/polymorphic\_wrapper.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3BvbHltb3JwaGljX3dyYXBwZXIuaHBw) | `90% <0%> (-10%)` | :arrow_down: |
| ... and [45 more](https://codecov.io/gh/hyperledger/iroha/pull/1037/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1037?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1037?src=pr&el=footer). Last update [753a438...b5de0cb](https://codecov.io/gh/hyperledger/iroha/pull/1037?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-06 03:28:08,2018-03-06 03:28:08
https://api.github.com/repos/hyperledger/iroha/issues/1036,https://api.github.com/repos/hyperledger/iroha/issues/comments/370248746,https://github.com/hyperledger/iroha/pull/1036#issuecomment-370248746,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1036?src=pr&el=h1) Report
> Merging [#1036](https://codecov.io/gh/hyperledger/iroha/pull/1036?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/ae12b8199223253c1f8d6e5d82061fb344c51522?src=pr&el=desc) will **decrease** coverage by `0.18%`.
> The diff coverage is `13.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1036/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1036?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1036      +/-   ##
===========================================
- Coverage    32.63%   32.44%   -0.19%     
===========================================
  Files          534      527       -7     
  Lines        16389    16115     -274     
  Branches     10518    10380     -138     
===========================================
- Hits          5348     5228     -120     
+ Misses        1373     1350      -23     
+ Partials      9668     9537     -131
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1036?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/torii/query\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3F1ZXJ5X3NlcnZpY2UuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/torii/impl/query\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvcXVlcnlfc2VydmljZS5jcHA=) | `54.05% <33.33%> (+9.31%)` | :arrow_up: |
| [test/module/irohad/torii/query\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3F1ZXJ5X3NlcnZpY2VfdGVzdC5jcHA=) | `8.92% <4.76%> (-29.79%)` | :arrow_down: |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-46.16%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (-37.5%)` | :arrow_down: |
| [shared\_model/interfaces/base/primitive.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9wcmltaXRpdmUuaHBw) | `0% <0%> (-28.58%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `37.5% <0%> (-12.96%)` | :arrow_down: |
| [...\_model/interfaces/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `0% <0%> (-11.77%)` | :arrow_down: |
| [irohad/ametsuchi/impl/peer\_query\_wsv.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3BlZXJfcXVlcnlfd3N2LmNwcA==) | `36.36% <0%> (-6.5%)` | :arrow_down: |
| ... and [38 more](https://codecov.io/gh/hyperledger/iroha/pull/1036/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1036?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1036?src=pr&el=footer). Last update [ae12b81...e81a3a8](https://codecov.io/gh/hyperledger/iroha/pull/1036?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-04 17:50:52,2018-03-05 16:05:16
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370307664,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370307664,muratovv,Add documentation for the method,2018-03-05 04:36:58,2018-03-05 04:36:58
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370307903,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370307903,muratovv,Add extent documentation for arguments. Also reflect the limitation for signatures and peers.,2018-03-05 04:39:20,2018-03-05 04:39:20
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370310904,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370310904,muratovv,"@{07fe7a37-a139-4532-aecf-e201522a92f4,Alexey} Redundant documentation.

Rule of thumb for a documentation in the implementation: write about limitations of the concrete implementation, description and complexity of algorithms.",2018-03-05 05:05:24,2018-03-05 05:05:24
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370310942,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370310942,muratovv,"@{07fe7a37-a139-4532-aecf-e201522a92f4,Alexey} The documentation looks redundant.",2018-03-05 05:05:44,2018-03-05 05:05:44
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370311069,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370311069,muratovv,What is the reason to remove method from here?,2018-03-05 05:06:54,2018-03-05 05:06:54
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370311610,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370311610,muratovv,"@{07fe7a37-a139-4532-aecf-e201522a92f4,Alexey} Rework explicit dependency with ctor parameter with default value. ",2018-03-05 05:11:46,2018-03-05 05:11:46
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370314420,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370314420,muratovv,"@{07fe7a37-a139-4532-aecf-e201522a92f4,Alexey} Rework with explicit parameter in ctor with default value.",2018-03-05 05:33:51,2018-03-05 05:33:51
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370314816,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370314816,muratovv,Rework function with explicit passing supermajority checking.,2018-03-05 05:36:58,2018-03-05 05:36:58
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370315381,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370315381,muratovv,Dependency looks unexpected here. Maybe move supermajory functions to separated target?,2018-03-05 05:40:46,2018-03-05 05:40:46
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370317967,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370317967,Alexey-N-Chernyshov,As function related to supermajority checking.,2018-03-05 05:59:01,2018-03-05 05:59:01
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370322232,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370322232,Alexey-N-Chernyshov,Don't get it. The function doesn't check supermajority.,2018-03-05 06:28:40,2018-03-05 06:28:40
https://api.github.com/repos/hyperledger/iroha/issues/1035,https://api.github.com/repos/hyperledger/iroha/issues/comments/370322485,https://github.com/hyperledger/iroha/pull/1035#issuecomment-370322485,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1035?src=pr&el=h1) Report
> Merging [#1035](https://codecov.io/gh/hyperledger/iroha/pull/1035?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/110377cfc90546cb1648ba1f98c1885b46b2d805?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `49.45%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1035/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1035?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1035      +/-   ##
===========================================
- Coverage    32.53%   32.51%   -0.02%     
===========================================
  Files          537      530       -7     
  Lines        16580    16103     -477     
  Branches     10669    10354     -315     
===========================================
- Hits          5394     5236     -158     
+ Misses        1379     1355      -24     
+ Partials      9807     9512     -295
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1035?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/validation/impl/chain\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9jaGFpbl92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...st/module/irohad/consensus/yac/yac\_common\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2NvbW1vbl90ZXN0LmNwcA==) | `0% <ø> (-14.64%)` | :arrow_down: |
| [irohad/consensus/yac/storage/impl/yac\_common.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY19jb21tb24uY3Bw) | `70.58% <ø> (-4.42%)` | :arrow_down: |
| [irohad/consensus/yac/storage/yac\_block\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfYmxvY2tfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...had/consensus/yac/storage/yac\_proposal\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfcHJvcG9zYWxfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...d/consensus/yac/storage/impl/yac\_block\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY19ibG9ja19zdG9yYWdlLmNwcA==) | `82.85% <100%> (+0.5%)` | :arrow_up: |
| [...module/irohad/validation/chain\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdGlvbl90ZXN0LmNwcA==) | `14.28% <14.28%> (+4.98%)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX21vY2tzLmhwcA==) | `41.77% <20%> (-1.48%)` | :arrow_down: |
| [...rohad/consensus/yac/supermajority\_checker\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvc3VwZXJtYWpvcml0eV9jaGVja2VyX3Rlc3QuY3Bw) | `24.13% <24.13%> (ø)` | |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `49.03% <25%> (-1.4%)` | :arrow_down: |
| ... and [81 more](https://codecov.io/gh/hyperledger/iroha/pull/1035/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1035?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1035?src=pr&el=footer). Last update [110377c...6bb3bae](https://codecov.io/gh/hyperledger/iroha/pull/1035?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-05 06:30:22,2018-03-06 06:51:20
https://api.github.com/repos/hyperledger/iroha/issues/1034,https://api.github.com/repos/hyperledger/iroha/issues/comments/370400813,https://github.com/hyperledger/iroha/pull/1034#issuecomment-370400813,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1034?src=pr&el=h1) Report
> Merging [#1034](https://codecov.io/gh/hyperledger/iroha/pull/1034?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/def7bc4f7efdf0c2d1c3caecccd2cf3efe0c889e?src=pr&el=desc) will **decrease** coverage by `0.04%`.
> The diff coverage is `14.58%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1034/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1034?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1034      +/-   ##
===========================================
- Coverage    32.47%   32.43%   -0.05%     
===========================================
  Files          527      528       +1     
  Lines        16091    16114      +23     
  Branches     10350    10370      +20     
===========================================
+ Hits          5226     5227       +1     
  Misses        1356     1356              
- Partials      9509     9531      +22
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1034?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `40.59% <18.18%> (-1.8%)` | :arrow_down: |
| [...hared\_model/interfaces/utils/specified\_visitor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdXRpbHMvc3BlY2lmaWVkX3Zpc2l0b3IuaHBw) | `50% <50%> (ø)` | |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `45.83% <50%> (+0.45%)` | :arrow_up: |
| [...est/integration/acceptance/invalid\_fields\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2ludmFsaWRfZmllbGRzX3Rlc3QuY3Bw) | `6.45% <6.45%> (ø)` | |
| [...d\_model/backend/protobuf/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `76.19% <0%> (-8.43%)` | :arrow_down: |
| [...buf/common\_objects/proto\_account\_asset\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX2FjY291bnRfYXNzZXRfYnVpbGRlci5ocHA=) | `63.15% <0%> (-1.55%)` | :arrow_down: |
| [shared\_model/validators/signable\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvc2lnbmFibGVfdmFsaWRhdG9yLmhwcA==) | `30% <0%> (ø)` | :arrow_up: |
| [...s/protobuf/common\_objects/proto\_amount\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX2Ftb3VudF9idWlsZGVyLmhwcA==) | `81.81% <0%> (ø)` | :arrow_up: |
| [...\_proto/common\_objects/shared\_proto\_amount\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vY29tbW9uX29iamVjdHMvc2hhcmVkX3Byb3RvX2Ftb3VudF90ZXN0LmNwcA==) | | |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/1034/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1034?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1034?src=pr&el=footer). Last update [def7bc4...8ce31f9](https://codecov.io/gh/hyperledger/iroha/pull/1034?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-05 12:12:51,2018-03-05 13:48:55
https://api.github.com/repos/hyperledger/iroha/issues/1033,https://api.github.com/repos/hyperledger/iroha/issues/comments/372623881,https://github.com/hyperledger/iroha/pull/1033#issuecomment-372623881,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1033?src=pr&el=h1) Report
> Merging [#1033](https://codecov.io/gh/hyperledger/iroha/pull/1033?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6c60b6d0df6b95ed888eef9e22fe02d3a60ac078?src=pr&el=desc) will **increase** coverage by `0.21%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1033/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1033?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1033      +/-   ##
===========================================
+ Coverage    32.31%   32.53%   +0.21%     
===========================================
  Files          561      553       -8     
  Lines        17267    16824     -443     
  Branches     11194    10840     -354     
===========================================
- Hits          5580     5473     -107     
+ Misses        1389     1384       -5     
+ Partials     10298     9967     -331
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1033?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/execution\_error.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9leGVjdXRpb25fZXJyb3IuaHBw) | `0% <0%> (-33.34%)` | :arrow_down: |
| [...ces/transaction\_responses/abstract\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL2Fic3RyYWN0X3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-22.23%)` | :arrow_down: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-18.19%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `35.63% <0%> (-16.75%)` | :arrow_down: |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `20% <0%> (-13.34%)` | :arrow_down: |
| [...had/torii/processor/transaction\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfdGVzdC5jcHA=) | `8% <0%> (-11.86%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `36.84% <0%> (-7.9%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `48.88% <0%> (-5.66%)` | :arrow_down: |
| [irohad/main/iroha\_conf\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaXJvaGFfY29uZl9sb2FkZXIuaHBw) | `7.5% <0%> (-4.13%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `23.28% <0%> (-3.99%)` | :arrow_down: |
| ... and [88 more](https://codecov.io/gh/hyperledger/iroha/pull/1033/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1033?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1033?src=pr&el=footer). Last update [6c60b6d...7c96ae1](https://codecov.io/gh/hyperledger/iroha/pull/1033?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-13 10:48:37,2018-03-26 21:48:01
https://api.github.com/repos/hyperledger/iroha/issues/1033,https://api.github.com/repos/hyperledger/iroha/issues/comments/376849400,https://github.com/hyperledger/iroha/pull/1033#issuecomment-376849400,neewy,Since these changes were brought to Jenkinsfile and CircleCI is not going to be used we close this PR ,2018-03-28 11:10:26,2018-03-28 11:10:26
https://api.github.com/repos/hyperledger/iroha/issues/1032,https://api.github.com/repos/hyperledger/iroha/issues/comments/370035474,https://github.com/hyperledger/iroha/pull/1032#issuecomment-370035474,Warchant,Please write meaningful names for PR ,2018-03-02 19:57:16,2018-03-02 19:57:23
https://api.github.com/repos/hyperledger/iroha/issues/1032,https://api.github.com/repos/hyperledger/iroha/issues/comments/370135621,https://github.com/hyperledger/iroha/pull/1032#issuecomment-370135621,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1032?src=pr&el=h1) Report
> Merging [#1032](https://codecov.io/gh/hyperledger/iroha/pull/1032?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/77dc1ffdba11c9a88a12204a4e686f410f92eb5f?src=pr&el=desc) will **increase** coverage by `0.04%`.
> The diff coverage is `19.2%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1032/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1032?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1032      +/-   ##
===========================================
+ Coverage    32.51%   32.56%   +0.04%     
===========================================
  Files          543      530      -13     
  Lines        16707    16200     -507     
  Branches     10752    10424     -328     
===========================================
- Hits          5433     5275     -158     
+ Misses        1394     1345      -49     
+ Partials      9880     9580     -300
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1032?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `35.29% <ø> (-1.85%)` | :arrow_down: |
| [...t/integration/acceptance/get\_transactions\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL2dldF90cmFuc2FjdGlvbnNfdGVzdC5jcHA=) | `11.76% <11.76%> (ø)` | |
| [test/framework/base\_tx.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvYmFzZV90eC5ocHA=) | `16.66% <16.66%> (ø)` | |
| [...hared\_model/utils/query\_error\_response\_visitor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3F1ZXJ5X2Vycm9yX3Jlc3BvbnNlX3Zpc2l0b3IuaHBw) | `28.57% <28.57%> (ø)` | |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `35.63% <47.05%> (+6.29%)` | :arrow_up: |
| [...hared\_model/interfaces/utils/specified\_visitor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdXRpbHMvc3BlY2lmaWVkX3Zpc2l0b3IuaHBw) | `50% <50%> (ø)` | :arrow_up: |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-46.16%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (-37.5%)` | :arrow_down: |
| [...d\_model/interfaces/commands/set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `0% <0%> (-37.5%)` | :arrow_down: |
| ... and [121 more](https://codecov.io/gh/hyperledger/iroha/pull/1032/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1032?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1032?src=pr&el=footer). Last update [77dc1ff...1fee713](https://codecov.io/gh/hyperledger/iroha/pull/1032?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-03 10:01:05,2018-03-08 10:07:58
https://api.github.com/repos/hyperledger/iroha/issues/1032,https://api.github.com/repos/hyperledger/iroha/issues/comments/370682080,https://github.com/hyperledger/iroha/pull/1032#issuecomment-370682080,luckychess,Missed param.,2018-03-06 06:52:14,2018-03-06 06:52:14
https://api.github.com/repos/hyperledger/iroha/issues/1032,https://api.github.com/repos/hyperledger/iroha/issues/comments/370683360,https://github.com/hyperledger/iroha/pull/1032#issuecomment-370683360,luckychess,Looks painful.,2018-03-06 06:59:41,2018-03-06 06:59:41
https://api.github.com/repos/hyperledger/iroha/issues/1032,https://api.github.com/repos/hyperledger/iroha/issues/comments/371439869,https://github.com/hyperledger/iroha/pull/1032#issuecomment-371439869,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)
1. ![MINOR][MINOR] [base_tx.hpp#L55](https://github.com/hyperledger/iroha/blob/9e03ea3ba33353fd317aa7b02070abba5a88c2df/test/framework/base_tx.hpp#L55): Function parameter 'role_id' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L169](https://github.com/hyperledger/iroha/blob/9e03ea3ba33353fd317aa7b02070abba5a88c2df/test/framework/integration_framework/integration_test_framework.cpp#L169): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L174](https://github.com/hyperledger/iroha/blob/9e03ea3ba33353fd317aa7b02070abba5a88c2df/test/framework/integration_framework/integration_test_framework.cpp#L174): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-08 10:01:48,2018-03-08 10:01:48
https://api.github.com/repos/hyperledger/iroha/issues/1031,https://api.github.com/repos/hyperledger/iroha/issues/comments/370052323,https://github.com/hyperledger/iroha/issues/1031#issuecomment-370052323,Warchant,">However, when we introduce the ability to replace field validator, we allow the creation of invalid objects.

It is a requirement. You should sometimes (in tests) be able to create invalid objects. ",2018-03-02 21:06:12,2018-03-02 21:51:40
https://api.github.com/repos/hyperledger/iroha/issues/1031,https://api.github.com/repos/hyperledger/iroha/issues/comments/370064525,https://github.com/hyperledger/iroha/issues/1031#issuecomment-370064525,nickaleks,Can you provide an example of such test?,2018-03-02 21:57:42,2018-03-02 21:57:42
https://api.github.com/repos/hyperledger/iroha/issues/1031,https://api.github.com/repos/hyperledger/iroha/issues/comments/370160778,https://github.com/hyperledger/iroha/issues/1031#issuecomment-370160778,muratovv,"About free functions for stateless validation.

I'm not sure that this approach suitable for stateless validation cause it leads to redundant complexity. For example, we want to build up stateless validation for the transaction. On the client side we need to check the schema of the transaction - boundary values for commands, a schema of the accounts an so on. But on the Iroha side, we need to validate schema and signatures. 
With free function approach, we will write combine by our self. But in fact, it is just a combination of validators.

About template arguments.

In terms of the design shared model objects are same dependency as others. Thus, we require mocks shared model object for testing purposes. And in this case, it very convenient way to use an explicit template parameter for testing purposes.
But maybe we need to come up with the improvement that able to handle calls unregistered in the builder and throw the exception.

Also, I can not understand from the report why composable way is not applied in the stateless validation. And what about auto checking via getters?",2018-03-03 16:32:55,2018-03-03 16:32:55
https://api.github.com/repos/hyperledger/iroha/issues/1031,https://api.github.com/repos/hyperledger/iroha/issues/comments/370346431,https://github.com/hyperledger/iroha/issues/1031#issuecomment-370346431,nickaleks,"> I'm not sure that this approach suitable for stateless validation cause it leads to redundant complexity. For example, we want to build up stateless validation for the transaction. On the client side we need to check the schema of the transaction - boundary values for commands, a schema of the accounts an so on. But on the Iroha side, we need to validate schema and signatures.
With free function approach, we will write combine by our self. But in fact, it is just a combination of validators.

I do not understand what do you mean by redundant complexity? We cannot trust the client to send correct data, so we every time we accept a new transaction, we need to validate **everything**. With free functions, this will be as easy as calling validate(transaction)

> In terms of the design shared model objects are the same dependency as others. Thus, we require mocks shared model object for testing purposes. And in this case, it very convenient way to use an explicit template parameter for testing purposes.

Can you please provide an example where we need to mock object with _invalid_ data? I assume that we expect all components of Iroha to work only with correct values (that's why we do not perform stateless validation on each step of the pipeline)",2018-03-05 08:39:19,2018-03-05 08:39:19
https://api.github.com/repos/hyperledger/iroha/issues/1031,https://api.github.com/repos/hyperledger/iroha/issues/comments/370382234,https://github.com/hyperledger/iroha/issues/1031#issuecomment-370382234,muratovv,">redundant complexity

I mean there is need to write different functions of the combine by yourself.

>we need to validate everything

Sure u are totally correct. But this issue unrelated to my ideas.

>Can you please provide an example where we need to mock object with invalid data?

Just shallow search:
* https://github.com/hyperledger/iroha/blob/def7bc4f7efdf0c2d1c3caecccd2cf3efe0c889e/test/module/irohad/ordering/ordering_service_test.cpp#L121
* https://github.com/hyperledger/iroha/blob/def7bc4f7efdf0c2d1c3caecccd2cf3efe0c889e/test/module/irohad/consensus/yac/peer_orderer_test.cpp#L58
* https://github.com/hyperledger/iroha/blob/def7bc4f7efdf0c2d1c3caecccd2cf3efe0c889e/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185

But in fact, there are a lot of usages of mock objects in tests. And this is the convenient and correct approach.
",2018-03-05 10:52:37,2018-03-05 11:49:47
https://api.github.com/repos/hyperledger/iroha/issues/1031,https://api.github.com/repos/hyperledger/iroha/issues/comments/370396088,https://github.com/hyperledger/iroha/issues/1031#issuecomment-370396088,l4l,"> Just shallow search

That solved via `Test*Builder` as in your examples, there's no usage of FieldValidator here",2018-03-05 11:52:08,2018-03-05 11:52:32
https://api.github.com/repos/hyperledger/iroha/issues/1031,https://api.github.com/repos/hyperledger/iroha/issues/comments/372631931,https://github.com/hyperledger/iroha/issues/1031#issuecomment-372631931,nickaleks,Updated proposal to include features for builders. Features for validators are WIP and will be added later,2018-03-13 11:20:29,2018-03-13 11:20:29
https://api.github.com/repos/hyperledger/iroha/issues/1031,https://api.github.com/repos/hyperledger/iroha/issues/comments/372664548,https://github.com/hyperledger/iroha/issues/1031#issuecomment-372664548,Warchant,You can make builder return reference to itself always. When you need to copy partially instantiated builder call `copy()` on builder. This will make a deepcopy of builder state. It is simpler and more efficient than current approach.,2018-03-13 13:28:02,2018-03-13 13:29:23
https://api.github.com/repos/hyperledger/iroha/issues/1031,https://api.github.com/repos/hyperledger/iroha/issues/comments/387072835,https://github.com/hyperledger/iroha/issues/1031#issuecomment-387072835,nickaleks,Builder prototype is at #1306 ,2018-05-07 13:56:47,2018-05-07 13:56:47
https://api.github.com/repos/hyperledger/iroha/issues/1030,https://api.github.com/repos/hyperledger/iroha/issues/comments/370014334,https://github.com/hyperledger/iroha/pull/1030#issuecomment-370014334,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1030?src=pr&el=h1) Report
> Merging [#1030](https://codecov.io/gh/hyperledger/iroha/pull/1030?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/dabf621f8ed05a51caeac975f9d63be3871615b1?src=pr&el=desc) will **increase** coverage by `0.08%`.
> The diff coverage is `31.43%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1030/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1030?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1030      +/-   ##
===========================================
+ Coverage    32.53%   32.61%   +0.08%     
===========================================
  Files          553      540      -13     
  Lines        16802    16674     -128     
  Branches     10824    10733      -91     
===========================================
- Hits          5466     5438      -28     
+ Misses        1384     1364      -20     
+ Partials      9952     9872      -80
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1030?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tb24uaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `18.18% <ø> (+18.18%)` | :arrow_up: |
| [...ers/protobuf/common\_objects/proto\_peer\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX3BlZXJfYnVpbGRlci5ocHA=) | `72.72% <ø> (ø)` | :arrow_up: |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `12.28% <ø> (ø)` | :arrow_up: |
| [...had/torii/processor/transaction\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/torii/processor/transaction\_processor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3IuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [...otobuf/transaction\_responses/proto\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3Byb3RvX3R4X3Jlc3BvbnNlLmhwcA==) | `71.42% <0%> (-1.91%)` | :arrow_down: |
| [shared\_model/builders/common\_objects/common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL2NvbW1vbi5ocHA=) | `18.18% <0%> (ø)` | :arrow_up: |
| [...transaction\_responses/not\_received\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL25vdF9yZWNlaXZlZF90eF9yZXNwb25zZS5ocHA=) | `0% <0%> (ø)` | |
| [...buf/common\_objects/proto\_account\_asset\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX2FjY291bnRfYXNzZXRfYnVpbGRlci5ocHA=) | `64.7% <0%> (ø)` | :arrow_up: |
| ... and [188 more](https://codecov.io/gh/hyperledger/iroha/pull/1030/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1030?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1030?src=pr&el=footer). Last update [dabf621...6614391](https://codecov.io/gh/hyperledger/iroha/pull/1030?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-02 18:42:20,2018-03-19 15:19:33
https://api.github.com/repos/hyperledger/iroha/issues/1030,https://api.github.com/repos/hyperledger/iroha/issues/comments/370279320,https://github.com/hyperledger/iroha/pull/1030#issuecomment-370279320,lebdron,"|`irohad/torii/impl/command_service.cpp:75-76`|
|---|
Non-const argument can be used, so that value is moved below.",2018-03-05 00:32:40,2018-03-05 00:32:40
https://api.github.com/repos/hyperledger/iroha/issues/1028,https://api.github.com/repos/hyperledger/iroha/issues/comments/369820081,https://github.com/hyperledger/iroha/pull/1028#issuecomment-369820081,sorabot,"SonarQube analysis reported 7 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L264](https://github.com/hyperledger/iroha/blob/b0e74823e34a052119915a66a1662b8530990713/irohad/main/application.cpp#L264): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [application.cpp#L37](https://github.com/hyperledger/iroha/blob/b0e74823e34a052119915a66a1662b8530990713/irohad/main/application.cpp#L37): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [ordering_gate_impl.cpp#L44](https://github.com/hyperledger/iroha/blob/b0e74823e34a052119915a66a1662b8530990713/irohad/ordering/impl/ordering_gate_impl.cpp#L44): Missing curly brace. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingCurlyBraces)
1. ![MINOR][MINOR] [ordering_gate_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/b0e74823e34a052119915a66a1662b8530990713/irohad/ordering/impl/ordering_gate_impl.cpp#L45): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [ordering_gate_impl.hpp#L62](https://github.com/hyperledger/iroha/blob/b0e74823e34a052119915a66a1662b8530990713/irohad/ordering/impl/ordering_gate_impl.hpp#L62): Unused private function: 'OrderingGateImpl::tryNextRound' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L47](https://github.com/hyperledger/iroha/blob/b0e74823e34a052119915a66a1662b8530990713/test/module/irohad/ordering/ordering_gate_service_test.cpp#L47): Variable 'pcs_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![INFO][INFO] [ordering_gate_impl.hpp#L43](https://github.com/hyperledger/iroha/blob/b0e74823e34a052119915a66a1662b8530990713/irohad/ordering/impl/ordering_gate_impl.hpp#L43): Undocumented API: OrderingGateImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-02 04:52:52,2018-03-02 04:52:52
https://api.github.com/repos/hyperledger/iroha/issues/1028,https://api.github.com/repos/hyperledger/iroha/issues/comments/370296013,https://github.com/hyperledger/iroha/pull/1028#issuecomment-370296013,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1028?src=pr&el=h1) Report
> Merging [#1028](https://codecov.io/gh/hyperledger/iroha/pull/1028?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b98321491b24e985e565fe1652c0466b897e284e?src=pr&el=desc) will **increase** coverage by `0.35%`.
> The diff coverage is `23.07%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1028/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1028?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1028      +/-   ##
===========================================
+ Coverage    32.59%   32.94%   +0.35%     
===========================================
  Files          534      523      -11     
  Lines        16413    16110     -303     
  Branches     10548    10289     -259     
===========================================
- Hits          5350     5308      -42     
+ Misses        1367     1366       -1     
+ Partials      9696     9436     -260
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1028?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/network/ordering\_gate.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfZ2F0ZS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/network/network\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvbmV0d29ya19tb2Nrcy5ocHA=) | `42.85% <0%> (-3.3%)` | :arrow_down: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `47.82% <0%> (-2.18%)` | :arrow_down: |
| [test/module/irohad/ordering/ordering\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfdGVzdC5jcHA=) | `20.28% <0%> (-8.88%)` | :arrow_down: |
| [...ule/irohad/ordering/ordering\_gate\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfc2VydmljZV90ZXN0LmNwcA==) | `26.15% <25%> (+0.75%)` | :arrow_up: |
| [irohad/ordering/impl/ordering\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV9pbXBsLmNwcA==) | `58.62% <52.63%> (+0.28%)` | :arrow_up: |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `50% <0%> (-50%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-46.16%)` | :arrow_down: |
| [shared\_model/interfaces/commands/append\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvYXBwZW5kX3JvbGUuaHBw) | `0% <0%> (-38.47%)` | :arrow_down: |
| ... and [143 more](https://codecov.io/gh/hyperledger/iroha/pull/1028/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1028?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1028?src=pr&el=footer). Last update [b983214...753a438](https://codecov.io/gh/hyperledger/iroha/pull/1028?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-05 02:55:25,2018-03-06 02:49:22
https://api.github.com/repos/hyperledger/iroha/issues/1027,https://api.github.com/repos/hyperledger/iroha/issues/comments/369837769,https://github.com/hyperledger/iroha/pull/1027#issuecomment-369837769,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1027?src=pr&el=h1) Report
> Merging [#1027](https://codecov.io/gh/hyperledger/iroha/pull/1027?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b5de0cb9755ba4a4e53fcb54d8ff73e478adb159?src=pr&el=desc) will **decrease** coverage by `0.09%`.
> The diff coverage is `33.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1027/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1027?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #1027     +/-   ##
==========================================
- Coverage    32.58%   32.48%   -0.1%     
==========================================
  Files          533      527      -6     
  Lines        16462    16100    -362     
  Branches     10584    10355    -229     
==========================================
- Hits          5364     5230    -134     
+ Misses        1370     1356     -14     
+ Partials      9728     9514    -214
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1027?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/signable\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvc2lnbmFibGVfdmFsaWRhdG9yLmhwcA==) | `22.22% <ø> (-7.78%)` | :arrow_down: |
| [...e/shared\_model/validators/query\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `37.5% <0%> (-5%)` | :arrow_down: |
| [...ared\_model/builders/protobuf/transport\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zcG9ydF9idWlsZGVyLmhwcA==) | `44.44% <0%> (-5.56%)` | :arrow_down: |
| [...ed\_model/validators/transaction\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yX3Rlc3QuY3Bw) | `37.73% <0%> (-2.27%)` | :arrow_down: |
| [shared\_model/validators/block\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvYmxvY2tfdmFsaWRhdG9yLmhwcA==) | `100% <100%> (ø)` | :arrow_up: |
| [test/module/shared\_model/validators/validators.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9ycy5ocHA=) | `100% <100%> (ø)` | :arrow_up: |
| [shared\_model/utils/polymorphic\_wrapper.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3BvbHltb3JwaGljX3dyYXBwZXIuaHBw) | `90.9% <100%> (-9.1%)` | :arrow_down: |
| [shared\_model/validators/transaction\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yLmhwcA==) | `48.8% <16.66%> (ø)` | :arrow_up: |
| [shared\_model/validators/query\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yLmhwcA==) | `57.74% <20%> (ø)` | :arrow_up: |
| [...s/protobuf/builder\_templates/proposal\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3Byb3Bvc2FsX3RlbXBsYXRlLmhwcA==) | `58.33% <33.33%> (+1.81%)` | :arrow_up: |
| ... and [58 more](https://codecov.io/gh/hyperledger/iroha/pull/1027/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1027?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1027?src=pr&el=footer). Last update [b5de0cb...bcf68a6](https://codecov.io/gh/hyperledger/iroha/pull/1027?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-02 06:50:05,2018-03-06 05:04:17
https://api.github.com/repos/hyperledger/iroha/issues/1027,https://api.github.com/repos/hyperledger/iroha/issues/comments/369842220,https://github.com/hyperledger/iroha/pull/1027#issuecomment-369842220,sorabot,"SonarQube analysis reported 146 issues
* ![MINOR][MINOR] 1 minor
* ![INFO][INFO] 145 info

#### Top 10 issues

1. ![MINOR][MINOR] [signable_validator.hpp#L29](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/validators/signable_validator.hpp#L29): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [block_template.hpp#L87](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/builders/protobuf/builder_templates/block_template.hpp#L87): Undocumented API: TemplateBlockBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L87](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/builders/protobuf/builder_templates/block_template.hpp#L87): Class 'TemplateBlockBuilder' has a constructor with 1 argument that is not explicit. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoExplicitConstructor)
1. ![INFO][INFO] [block_template.hpp#L100](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/builders/protobuf/builder_templates/block_template.hpp#L100): Undocumented API: txNumber [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L106](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/builders/protobuf/builder_templates/block_template.hpp#L106): Undocumented API: height [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L111](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/builders/protobuf/builder_templates/block_template.hpp#L111): Undocumented API: prevHash [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L118](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/builders/protobuf/builder_templates/block_template.hpp#L118): Undocumented API: createdTime [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L124](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/builders/protobuf/builder_templates/block_template.hpp#L124): Undocumented API: build [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L134](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/builders/protobuf/builder_templates/block_template.hpp#L134): Undocumented API: total [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal_template.hpp#L69](https://github.com/hyperledger/iroha/blob/8152d2f1d02e3a74471e757ded89ef4df1a2ba7b/shared_model/builders/protobuf/builder_templates/proposal_template.hpp#L69): Undocumented API: TemplateProposalBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-02 07:15:50,2018-03-02 07:15:50
https://api.github.com/repos/hyperledger/iroha/issues/1027,https://api.github.com/repos/hyperledger/iroha/issues/comments/370753794,https://github.com/hyperledger/iroha/pull/1027#issuecomment-370753794,l4l,Merged in 110377c,2018-03-06 11:37:07,2018-03-06 11:37:07
https://api.github.com/repos/hyperledger/iroha/issues/1025,https://api.github.com/repos/hyperledger/iroha/issues/comments/369555345,https://github.com/hyperledger/iroha/pull/1025#issuecomment-369555345,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1025?src=pr&el=h1) Report
> Merging [#1025](https://codecov.io/gh/hyperledger/iroha/pull/1025?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/432276bc8fc814807951ec804e030d811d665e2c?src=pr&el=desc) will **decrease** coverage by `0.14%`.
> The diff coverage is `42.73%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1025/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1025?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop   #1025      +/-   ##
==========================================
- Coverage    32.95%   32.8%   -0.15%     
==========================================
  Files          523     523              
  Lines        16036   16023      -13     
  Branches     10244   10250       +6     
==========================================
- Hits          5285    5257      -28     
- Misses        1353    1366      +13     
- Partials      9398    9400       +2
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1025?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `53.84% <0%> (-7.7%)` | :arrow_down: |
| [...buf/query\_responses/proto\_signatories\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3NpZ25hdG9yaWVzX3Jlc3BvbnNlLmhwcA==) | `8.33% <0%> (-8.34%)` | :arrow_down: |
| [.../protobuf/query\_responses/proto\_roles\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3JvbGVzX3Jlc3BvbnNlLmhwcA==) | `8.33% <0%> (-8.34%)` | :arrow_down: |
| [...f/query\_responses/proto\_account\_asset\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2FjY291bnRfYXNzZXRfcmVzcG9uc2UuaHBw) | `11.11% <0%> (-11.12%)` | :arrow_down: |
| [...uery\_responses/proto\_role\_permissions\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3JvbGVfcGVybWlzc2lvbnNfcmVzcG9uc2UuaHBw) | `8.33% <0%> (-8.34%)` | :arrow_down: |
| [.../protobuf/query\_responses/proto\_asset\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2Fzc2V0X3Jlc3BvbnNlLmhwcA==) | `14.28% <0%> (-14.29%)` | :arrow_down: |
| [...buf/query\_responses/proto\_transaction\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3RyYW5zYWN0aW9uX3Jlc3BvbnNlLmhwcA==) | `8.33% <0%> (-8.34%)` | :arrow_down: |
| [...rotobuf/query\_responses/proto\_account\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2FjY291bnRfcmVzcG9uc2UuaHBw) | `6.66% <0%> (-6.67%)` | :arrow_down: |
| [...\_model/backend/protobuf/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `60% <0%> (-6.67%)` | :arrow_down: |
| [.../backend/protobuf/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `53.33% <33.33%> (-6.67%)` | :arrow_down: |
| ... and [37 more](https://codecov.io/gh/hyperledger/iroha/pull/1025/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1025?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1025?src=pr&el=footer). Last update [432276b...f80355c](https://codecov.io/gh/hyperledger/iroha/pull/1025?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-01 10:56:05,2018-03-01 10:56:05
https://api.github.com/repos/hyperledger/iroha/issues/1025,https://api.github.com/repos/hyperledger/iroha/issues/comments/369560579,https://github.com/hyperledger/iroha/pull/1025#issuecomment-369560579,sorabot,"SonarQube analysis reported 196 issues
* ![INFO][INFO] 196 info

#### Top 10 issues

1. ![INFO][INFO] [block.hpp#L35](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/block.hpp#L35): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L43](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/block.hpp#L43): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L46](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/block.hpp#L46): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L48](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/block.hpp#L48): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L31](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L31): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L37](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L37): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L40](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L40): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L43](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L43): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_peer.hpp#L28](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/commands/proto_add_peer.hpp#L28): Undocumented API: AddPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_peer.hpp#L33](https://github.com/hyperledger/iroha/blob/f80355cb4dddea1959e4705892ea03cf4b733559/shared_model/backend/protobuf/commands/proto_add_peer.hpp#L33): Undocumented API: AddPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-03-01 11:17:12,2018-03-01 11:17:12
https://api.github.com/repos/hyperledger/iroha/issues/1024,https://api.github.com/repos/hyperledger/iroha/issues/comments/369512058,https://github.com/hyperledger/iroha/pull/1024#issuecomment-369512058,igor-egorov,Previous PR #1014 was closed due to improper branch naming.,2018-03-01 08:21:02,2018-03-01 08:21:02
https://api.github.com/repos/hyperledger/iroha/issues/1024,https://api.github.com/repos/hyperledger/iroha/issues/comments/369515416,https://github.com/hyperledger/iroha/pull/1024#issuecomment-369515416,sorabot,"SonarQube analysis reported 5 issues

1. ![MINOR][MINOR] [postgres_block_query.cpp#L144](https://github.com/hyperledger/iroha/blob/1239d24708c49edefc3e302e7540cd03b1a5d706/irohad/ametsuchi/impl/postgres_block_query.cpp#L144): Define a constant instead of duplicating this literal "" AND height = "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/1239d24708c49edefc3e302e7540cd03b1a5d706/irohad/ametsuchi/impl/postgres_block_query.hpp#L72): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L80](https://github.com/hyperledger/iroha/blob/1239d24708c49edefc3e302e7540cd03b1a5d706/irohad/ametsuchi/impl/postgres_block_query.hpp#L80): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L90](https://github.com/hyperledger/iroha/blob/1239d24708c49edefc3e302e7540cd03b1a5d706/irohad/ametsuchi/impl/postgres_block_query.hpp#L90): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![INFO][INFO] [postgres_block_query.hpp#L44](https://github.com/hyperledger/iroha/blob/1239d24708c49edefc3e302e7540cd03b1a5d706/irohad/ametsuchi/impl/postgres_block_query.hpp#L44): Undocumented API: PostgresBlockQuery [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-01 08:35:55,2018-03-01 08:35:55
https://api.github.com/repos/hyperledger/iroha/issues/1023,https://api.github.com/repos/hyperledger/iroha/issues/comments/369456891,https://github.com/hyperledger/iroha/pull/1023#issuecomment-369456891,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [peer_communication_service_impl.cpp#L4](https://github.com/hyperledger/iroha/blob/3fc380cdb268ac8516a88d22108f5fd138c6770a/irohad/network/impl/peer_communication_service_impl.cpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [ordering_gate_impl.hpp#L40](https://github.com/hyperledger/iroha/blob/3fc380cdb268ac8516a88d22108f5fd138c6770a/irohad/ordering/impl/ordering_gate_impl.hpp#L40): Undocumented API: OrderingGateImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_gate_transport_grpc.hpp#L30](https://github.com/hyperledger/iroha/blob/3fc380cdb268ac8516a88d22108f5fd138c6770a/irohad/ordering/impl/ordering_gate_transport_grpc.hpp#L30): Undocumented API: OrderingGateTransportGrpc [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_gate_transport_grpc.hpp#L35](https://github.com/hyperledger/iroha/blob/3fc380cdb268ac8516a88d22108f5fd138c6770a/irohad/ordering/impl/ordering_gate_transport_grpc.hpp#L35): Undocumented API: OrderingGateTransportGrpc [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-01 02:48:30,2018-03-01 02:48:30
https://api.github.com/repos/hyperledger/iroha/issues/1022,https://api.github.com/repos/hyperledger/iroha/issues/comments/369372437,https://github.com/hyperledger/iroha/pull/1022#issuecomment-369372437,Alexey-N-Chernyshov,👍 🛏 ,2018-02-28 20:30:16,2018-02-28 20:30:16
https://api.github.com/repos/hyperledger/iroha/issues/1022,https://api.github.com/repos/hyperledger/iroha/issues/comments/369377983,https://github.com/hyperledger/iroha/pull/1022#issuecomment-369377983,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1022?src=pr&el=h1) Report
> Merging [#1022](https://codecov.io/gh/hyperledger/iroha/pull/1022?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7b0a322805e0eba49e689ce16c19701bc7832e0d?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `61.9%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1022/graphs/tree.svg?height=150&token=VEvywEmaef&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1022?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1022   +/-   ##
========================================
  Coverage    32.95%   32.95%           
========================================
  Files          524      524           
  Lines        16068    16068           
  Branches     10256    10256           
========================================
  Hits          5296     5296           
  Misses        1366     1366           
  Partials      9406     9406
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1022?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...odel/interfaces/query\_responses/query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...ared\_model/interfaces/queries/get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfdHJhbnNhY3Rpb25zLmhwcA==) | `14.28% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/base/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9zaWduYWJsZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/network/block\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/network/impl/block\_loader\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5jcHA=) | `21.33% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/network/network\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvbmV0d29ya19tb2Nrcy5ocHA=) | `46.15% <ø> (ø)` | :arrow_up: |
| [...ders/protobuf/builder\_templates/query\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3F1ZXJ5X3RlbXBsYXRlLmhwcA==) | `58.53% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/iroha\_internal/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvaXJvaGFfaW50ZXJuYWwvYmxvY2suaHBw) | `12.5% <ø> (ø)` | :arrow_up: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...red\_model/cryptography/hash\_providers/sha3\_256.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoX3Byb3ZpZGVycy9zaGEzXzI1Ni5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| ... and [13 more](https://codecov.io/gh/hyperledger/iroha/pull/1022/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1022?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1022?src=pr&el=footer). Last update [7b0a322...baafd7a](https://codecov.io/gh/hyperledger/iroha/pull/1022?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-28 20:49:56,2018-03-01 09:08:29
https://api.github.com/repos/hyperledger/iroha/issues/1022,https://api.github.com/repos/hyperledger/iroha/issues/comments/369385730,https://github.com/hyperledger/iroha/pull/1022#issuecomment-369385730,sorabot,"SonarQube analysis reported 76 issues
* ![INFO][INFO] 76 info

#### Top 10 issues

1. ![INFO][INFO] [block_loader.hpp#L48](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/irohad/network/block_loader.hpp#L48): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [block_loader_impl.hpp#L33](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/irohad/network/impl/block_loader_impl.hpp#L33): Undocumented API: BlockLoaderImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_loader_impl.hpp#L35](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/irohad/network/impl/block_loader_impl.hpp#L35): Undocumented API: BlockLoaderImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_loader_impl.hpp#L52](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/irohad/network/impl/block_loader_impl.hpp#L52): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [block.hpp#L35](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/shared_model/backend/protobuf/block.hpp#L35): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L43](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/shared_model/backend/protobuf/block.hpp#L43): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L70](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/shared_model/backend/protobuf/block.hpp#L70): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L72](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/shared_model/backend/protobuf/block.hpp#L72): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_command.hpp#L57](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/shared_model/backend/protobuf/commands/proto_command.hpp#L57): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_command.hpp#L94](https://github.com/hyperledger/iroha/blob/40a71854497fb4cd7d26f3e15bb84291002b42b9/shared_model/backend/protobuf/commands/proto_command.hpp#L94): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-28 21:16:54,2018-02-28 21:16:54
https://api.github.com/repos/hyperledger/iroha/issues/1021,https://api.github.com/repos/hyperledger/iroha/issues/comments/369363047,https://github.com/hyperledger/iroha/pull/1021#issuecomment-369363047,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1021?src=pr&el=h1) Report
> Merging [#1021](https://codecov.io/gh/hyperledger/iroha/pull/1021?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d8cba74839d5e5072958d64042c766d40a088853?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1021/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1021?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1021   +/-   ##
========================================
  Coverage    32.95%   32.95%           
========================================
  Files          524      524           
  Lines        16068    16068           
  Branches     10256    10256           
========================================
  Hits          5296     5296           
  Misses        1366     1366           
  Partials      9406     9406
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1021?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1021?src=pr&el=footer). Last update [d8cba74...f5ed9db](https://codecov.io/gh/hyperledger/iroha/pull/1021?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-28 19:56:29,2018-02-28 19:56:29
https://api.github.com/repos/hyperledger/iroha/issues/1020,https://api.github.com/repos/hyperledger/iroha/issues/comments/369346282,https://github.com/hyperledger/iroha/pull/1020#issuecomment-369346282,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1020?src=pr&el=h1) Report
> Merging [#1020](https://codecov.io/gh/hyperledger/iroha/pull/1020?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/893005f4848188df56012543c34af1f0631dd5fd?src=pr&el=desc) will **increase** coverage by `0.45%`.
> The diff coverage is `25.26%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1020/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1020?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1020      +/-   ##
===========================================
+ Coverage    32.47%   32.93%   +0.45%     
===========================================
  Files          526      523       -3     
  Lines        16042    16067      +25     
  Branches     10309    10269      -40     
===========================================
+ Hits          5210     5292      +82     
+ Misses        1366     1353      -13     
+ Partials      9466     9422      -44
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1020?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/synchronizer/synchronizer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-aXJvaGFkL3N5bmNocm9uaXplci9zeW5jaHJvbml6ZXIuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/network/peer\_communication\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvcGVlcl9jb21tdW5pY2F0aW9uX3NlcnZpY2UuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `37.14% <ø> (ø)` | :arrow_up: |
| [irohad/validation/chain\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdG9yLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/validation/impl/chain\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9jaGFpbl92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...d/network/impl/peer\_communication\_service\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9wZWVyX2NvbW11bmljYXRpb25fc2VydmljZV9pbXBsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...had/torii/processor/transaction\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfdGVzdC5jcHA=) | `8% <0%> (ø)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `22.09% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/validation/validation\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vdmFsaWRhdGlvbl9tb2Nrcy5ocHA=) | `40% <0%> (ø)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `2.91% <0%> (ø)` | :arrow_up: |
| ... and [109 more](https://codecov.io/gh/hyperledger/iroha/pull/1020/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1020?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1020?src=pr&el=footer). Last update [893005f...45e88de](https://codecov.io/gh/hyperledger/iroha/pull/1020?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-28 19:02:10,2018-03-02 13:44:42
https://api.github.com/repos/hyperledger/iroha/issues/1020,https://api.github.com/repos/hyperledger/iroha/issues/comments/369509652,https://github.com/hyperledger/iroha/pull/1020#issuecomment-369509652,sorabot,"SonarQube analysis reported 14 issues
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 11 info

#### Top 10 issues

1. ![MINOR][MINOR] [peer_communication_service_impl.cpp#L4](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/irohad/network/impl/peer_communication_service_impl.cpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L137](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/test/framework/integration_framework/integration_test_framework.cpp#L137): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L142](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/test/framework/integration_framework/integration_test_framework.cpp#L142): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![INFO][INFO] [commit.hpp#L25](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/irohad/model/commit.hpp#L25): Undocumented API: OldCommit [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [peer_communication_service_impl.hpp#L29](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/irohad/network/impl/peer_communication_service_impl.hpp#L29): Undocumented API: PeerCommunicationServiceImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [peer_communication_service_impl.hpp#L31](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/irohad/network/impl/peer_communication_service_impl.hpp#L31): Undocumented API: PeerCommunicationServiceImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [peer_communication_service.hpp#L33](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/irohad/network/peer_communication_service.hpp#L33): Undocumented API: Commit [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [synchronizer_impl.hpp#L30](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/irohad/synchronizer/impl/synchronizer_impl.hpp#L30): Undocumented API: SynchronizerImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [synchronizer_impl.hpp#L32](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/irohad/synchronizer/impl/synchronizer_impl.hpp#L32): Undocumented API: SynchronizerImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [synchronizer_impl.hpp#L38](https://github.com/hyperledger/iroha/blob/b58d34b8cd7e43d3bdad26b16d6f60d6fddfde86/irohad/synchronizer/impl/synchronizer_impl.hpp#L38): Undocumented API: ~ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-01 08:09:48,2018-03-01 08:09:48
https://api.github.com/repos/hyperledger/iroha/issues/1019,https://api.github.com/repos/hyperledger/iroha/issues/comments/369273594,https://github.com/hyperledger/iroha/pull/1019#issuecomment-369273594,neewy,"For now, if you add such permissions directly to the genesis block the daemon will not launch. This PR seems to fix it",2018-02-28 15:23:38,2018-02-28 15:27:34
https://api.github.com/repos/hyperledger/iroha/issues/1019,https://api.github.com/repos/hyperledger/iroha/issues/comments/369541079,https://github.com/hyperledger/iroha/pull/1019#issuecomment-369541079,sorabot,"SonarQube analysis reported 48 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 1 major
* ![INFO][INFO] 46 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L600](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/converters/impl/pb_command_factory.cpp#L600): The Cyclomatic Complexity of this function is 17 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MAJOR][MAJOR] [pb_command_factory.cpp#L144](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/converters/impl/pb_command_factory.cpp#L144): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![INFO][INFO] [pb_command_factory.cpp#L472](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/converters/impl/pb_command_factory.cpp#L472): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [permissions.hpp#L34](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/permissions.hpp#L34): Undocumented API: can_append_role [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L35](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/permissions.hpp#L35): Undocumented API: can_create_role [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L36](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/permissions.hpp#L36): Undocumented API: can_detach_role [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L39](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/permissions.hpp#L39): Undocumented API: can_add_asset_qty [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L40](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/permissions.hpp#L40): Undocumented API: can_subtract_asset_qty [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L43](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/permissions.hpp#L43): Undocumented API: can_add_peer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L46](https://github.com/hyperledger/iroha/blob/3f4633df2d2ffb27207d54537d41c4740ed19c39/irohad/model/permissions.hpp#L46): Undocumented API: can_add_signatory [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2018-03-01 10:02:13,2018-03-01 10:02:13
https://api.github.com/repos/hyperledger/iroha/issues/1018,https://api.github.com/repos/hyperledger/iroha/issues/comments/369585079,https://github.com/hyperledger/iroha/pull/1018#issuecomment-369585079,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1018?src=pr&el=h1) Report
> Merging [#1018](https://codecov.io/gh/hyperledger/iroha/pull/1018?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/2a0c94f4d2d43c5c5cf0ed8a136d20142ffc1814?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1018/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1018?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop   #1018   +/-   ##
=======================================
  Coverage     32.5%   32.5%           
=======================================
  Files          553     553           
  Lines        16800   16800           
  Branches     10828   10828           
=======================================
  Hits          5460    5460           
  Misses        1384    1384           
  Partials      9956    9956
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1018?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...rfaces/query\_responses/account\_detail\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1018/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2FjY291bnRfZGV0YWlsX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/backend/protobuf/proposal.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1018/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcHJvcG9zYWwuaHBw) | `75% <ø> (ø)` | :arrow_up: |
| [shared\_model/backend/protobuf/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1018/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvYmxvY2suaHBw) | `65.95% <ø> (ø)` | :arrow_up: |
| [...buf/query\_responses/proto\_transaction\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1018/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3RyYW5zYWN0aW9uX3Jlc3BvbnNlLmhwcA==) | `58.33% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/iroha\_internal/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1018/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvaXJvaGFfaW50ZXJuYWwvYmxvY2suaHBw) | `12.5% <0%> (ø)` | :arrow_up: |
| [...terfaces/query\_responses/transactions\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1018/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3RyYW5zYWN0aW9uc19yZXNwb25zZS5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [...\_model/interfaces/common\_objects/signable\_hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1018/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmFibGVfaGFzaC5ocHA=) | `66.66% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1018?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1018?src=pr&el=footer). Last update [2a0c94f...ff05a10](https://codecov.io/gh/hyperledger/iroha/pull/1018?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-01 13:03:57,2018-03-19 13:20:44
https://api.github.com/repos/hyperledger/iroha/issues/1017,https://api.github.com/repos/hyperledger/iroha/issues/comments/369215184,https://github.com/hyperledger/iroha/pull/1017#issuecomment-369215184,Warchant,Something bad happened with branch...,2018-02-28 11:46:51,2018-02-28 11:46:51
https://api.github.com/repos/hyperledger/iroha/issues/1016,https://api.github.com/repos/hyperledger/iroha/issues/comments/369367852,https://github.com/hyperledger/iroha/pull/1016#issuecomment-369367852,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1016?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@7b0a322`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1016/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1016?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1016   +/-   ##
==========================================
  Coverage           ?   32.95%           
==========================================
  Files              ?      524           
  Lines              ?    16068           
  Branches           ?    10256           
==========================================
  Hits               ?     5296           
  Misses             ?     1366           
  Partials           ?     9406
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1016?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1016?src=pr&el=footer). Last update [7b0a322...628d1f5](https://codecov.io/gh/hyperledger/iroha/pull/1016?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-28 20:13:15,2018-02-28 20:13:15
https://api.github.com/repos/hyperledger/iroha/issues/1015,https://api.github.com/repos/hyperledger/iroha/issues/comments/368890157,https://github.com/hyperledger/iroha/pull/1015#issuecomment-368890157,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1015?src=pr&el=h1) Report
> Merging [#1015](https://codecov.io/gh/hyperledger/iroha/pull/1015?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/9ec40bccfdea56ebb8a3f1f48e7246a6c0dbe36c?src=pr&el=desc) will **increase** coverage by `0.57%`.
> The diff coverage is `47.36%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1015/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1015?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1015      +/-   ##
===========================================
+ Coverage    32.47%   33.05%   +0.57%     
===========================================
  Files          526      525       -1     
  Lines        16069    16012      -57     
  Branches     10334    10198     -136     
===========================================
+ Hits          5219     5293      +74     
- Misses        1357     1371      +14     
+ Partials      9493     9348     -145
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1015?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...buf/common\_objects/proto\_account\_asset\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX2FjY291bnRfYXNzZXRfYnVpbGRlci5ocHA=) | `64.7% <0%> (+1.54%)` | :arrow_up: |
| [...s/protobuf/common\_objects/proto\_amount\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX2Ftb3VudF9idWlsZGVyLmhwcA==) | `81.81% <0%> (ø)` | :arrow_up: |
| [...tobuf/common\_objects/proto\_amount\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX2Ftb3VudF9idWlsZGVyX3Rlc3QuY3Bw) | `16.66% <0%> (-5.56%)` | :arrow_down: |
| [...d\_model/backend/protobuf/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `84.61% <100%> (+8.42%)` | :arrow_up: |
| [...\_proto/common\_objects/shared\_proto\_amount\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vY29tbW9uX29iamVjdHMvc2hhcmVkX3Byb3RvX2Ftb3VudF90ZXN0LmNwcA==) | `15.78% <15.78%> (ø)` | |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `50% <0%> (-50%)` | :arrow_down: |
| [shared\_model/interfaces/commands/append\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvYXBwZW5kX3JvbGUuaHBw) | `0% <0%> (-38.47%)` | :arrow_down: |
| [shared\_model/interfaces/commands/add\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvYWRkX3NpZ25hdG9yeS5ocHA=) | `0% <0%> (-30.77%)` | :arrow_down: |
| [...red\_model/interfaces/commands/remove\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvcmVtb3ZlX3NpZ25hdG9yeS5ocHA=) | `0% <0%> (-30.77%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvcGVlci5ocHA=) | `0% <0%> (-30.77%)` | :arrow_down: |
| ... and [112 more](https://codecov.io/gh/hyperledger/iroha/pull/1015/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1015?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1015?src=pr&el=footer). Last update [9ec40bc...c1a5c0f](https://codecov.io/gh/hyperledger/iroha/pull/1015?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-27 14:11:17,2018-03-02 22:27:24
https://api.github.com/repos/hyperledger/iroha/issues/1015,https://api.github.com/repos/hyperledger/iroha/issues/comments/369592485,https://github.com/hyperledger/iroha/pull/1015#issuecomment-369592485,sorabot,"SonarQube analysis reported 11 issues
* ![INFO][INFO] 11 info

#### Top 10 issues

1. ![INFO][INFO] [amount.hpp#L66](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/backend/protobuf/common_objects/amount.hpp#L66): Undocumented API: Amount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L71](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/backend/protobuf/common_objects/amount.hpp#L71): Undocumented API: Amount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L77](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/backend/protobuf/common_objects/amount.hpp#L77): Undocumented API: Amount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L79](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/backend/protobuf/common_objects/amount.hpp#L79): Undocumented API: Amount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_account_asset_builder.hpp#L32](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/builders/protobuf/common_objects/proto_account_asset_builder.hpp#L32): Undocumented API: build [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_account_asset_builder.hpp#L36](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/builders/protobuf/common_objects/proto_account_asset_builder.hpp#L36): Undocumented API: accountId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_account_asset_builder.hpp#L43](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/builders/protobuf/common_objects/proto_account_asset_builder.hpp#L43): Undocumented API: assetId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_account_asset_builder.hpp#L50](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/builders/protobuf/common_objects/proto_account_asset_builder.hpp#L50): Undocumented API: balance [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_amount_builder.hpp#L33](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/builders/protobuf/common_objects/proto_amount_builder.hpp#L33): Undocumented API: build [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_amount_builder.hpp#L37](https://github.com/hyperledger/iroha/blob/7a227ad2d5bd4b80adcd8adb1575fbf57ae5d7f8/shared_model/builders/protobuf/common_objects/proto_amount_builder.hpp#L37): Undocumented API: intValue [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-03-01 13:33:43,2018-03-01 13:33:43
https://api.github.com/repos/hyperledger/iroha/issues/1014,https://api.github.com/repos/hyperledger/iroha/issues/comments/368908707,https://github.com/hyperledger/iroha/pull/1014#issuecomment-368908707,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1014?src=pr&el=h1) Report
> Merging [#1014](https://codecov.io/gh/hyperledger/iroha/pull/1014?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/9f5a13ebc5b2f77f25db2246e6d9eeb145e21954?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1014/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1014?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1014   +/-   ##
========================================
  Coverage    33.06%   33.06%           
========================================
  Files          524      524           
  Lines        15990    15990           
  Branches     10182    10182           
========================================
  Hits          5287     5287           
  Misses        1371     1371           
  Partials      9332     9332
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1014?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1014?src=pr&el=footer). Last update [9f5a13e...60b192b](https://codecov.io/gh/hyperledger/iroha/pull/1014?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-27 15:07:14,2018-02-28 07:12:23
https://api.github.com/repos/hyperledger/iroha/issues/1014,https://api.github.com/repos/hyperledger/iroha/issues/comments/369141294,https://github.com/hyperledger/iroha/pull/1014#issuecomment-369141294,neewy,For the sake of complete corrections maybe iroha-api modification is required.,2018-02-28 07:02:16,2018-02-28 07:02:16
https://api.github.com/repos/hyperledger/iroha/issues/1014,https://api.github.com/repos/hyperledger/iroha/issues/comments/369143652,https://github.com/hyperledger/iroha/pull/1014#issuecomment-369143652,igor-egorov,Corrections suggested by @lebdron have been applied in 60b192b,2018-02-28 07:15:40,2018-02-28 07:15:40
https://api.github.com/repos/hyperledger/iroha/issues/1014,https://api.github.com/repos/hyperledger/iroha/issues/comments/369145843,https://github.com/hyperledger/iroha/pull/1014#issuecomment-369145843,sorabot,"SonarQube analysis reported 5 issues

1. ![MINOR][MINOR] [postgres_block_query.cpp#L144](https://github.com/hyperledger/iroha/blob/60b192b08b6ca70809b0dc9f852e263f275fd417/irohad/ametsuchi/impl/postgres_block_query.cpp#L144): Define a constant instead of duplicating this literal "" AND height = "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/60b192b08b6ca70809b0dc9f852e263f275fd417/irohad/ametsuchi/impl/postgres_block_query.hpp#L72): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L80](https://github.com/hyperledger/iroha/blob/60b192b08b6ca70809b0dc9f852e263f275fd417/irohad/ametsuchi/impl/postgres_block_query.hpp#L80): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L90](https://github.com/hyperledger/iroha/blob/60b192b08b6ca70809b0dc9f852e263f275fd417/irohad/ametsuchi/impl/postgres_block_query.hpp#L90): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![INFO][INFO] [postgres_block_query.hpp#L44](https://github.com/hyperledger/iroha/blob/60b192b08b6ca70809b0dc9f852e263f275fd417/irohad/ametsuchi/impl/postgres_block_query.hpp#L44): Undocumented API: PostgresBlockQuery [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-28 07:27:15,2018-02-28 07:27:15
https://api.github.com/repos/hyperledger/iroha/issues/1014,https://api.github.com/repos/hyperledger/iroha/issues/comments/369282658,https://github.com/hyperledger/iroha/pull/1014#issuecomment-369282658,neewy,"please use feature prefix for new changes as stated here https://github.com/hyperledger/iroha/wiki/Iroha-working-agreement#243-feature
",2018-02-28 15:49:41,2018-02-28 15:49:41
https://api.github.com/repos/hyperledger/iroha/issues/1014,https://api.github.com/repos/hyperledger/iroha/issues/comments/369505171,https://github.com/hyperledger/iroha/pull/1014#issuecomment-369505171,igor-egorov,"@neewy, thanks for the link! I have taken this into account. Since I have to rename the branch, this PR will be automatically closed and another will be issued instead.

I have prepared complementary PR for iroha-api repository - https://github.com/hyperledger/iroha-api/pull/58",2018-03-01 07:48:09,2018-03-01 07:56:41
https://api.github.com/repos/hyperledger/iroha/issues/1013,https://api.github.com/repos/hyperledger/iroha/issues/comments/368904438,https://github.com/hyperledger/iroha/pull/1013#issuecomment-368904438,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1013?src=pr&el=h1) Report
> Merging [#1013](https://codecov.io/gh/hyperledger/iroha/pull/1013?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b455918d586492840a38571ea4ca7667d288991b?src=pr&el=desc) will **increase** coverage by `0.09%`.
> The diff coverage is `46.23%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1013/graphs/tree.svg?height=150&src=pr&width=650&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1013?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1013      +/-   ##
===========================================
+ Coverage    32.95%   33.04%   +0.09%     
===========================================
  Files          523      526       +3     
  Lines        16036    15995      -41     
  Branches     10244    10186      -58     
===========================================
+ Hits          5285     5286       +1     
- Misses        1353     1374      +21     
+ Partials      9398     9335      -63
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1013?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...tion/pipeline/transfer\_asset\_inter\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90cmFuc2Zlcl9hc3NldF9pbnRlcl9kb21haW5fdGVzdC5jcHA=) | `41.66% <ø> (ø)` | :arrow_up: |
| [libs/amount/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmhwcA==) | `38.46% <ø> (ø)` | :arrow_up: |
| [libs/amount/amount.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmNwcA==) | `77.88% <ø> (ø)` | :arrow_up: |
| [...red\_model/converters/json\_proto\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NvbnZlcnRlcnMvanNvbl9wcm90b19jb252ZXJ0ZXJfdGVzdC5jcHA=) | `3.44% <ø> (ø)` | :arrow_up: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `0% <ø> (-37.71%)` | :arrow_down: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `22.09% <ø> (ø)` | :arrow_up: |
| [...had/model/converters/impl/json\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2NvbW1hbmRfZmFjdG9yeS5jcHA=) | `41.63% <ø> (ø)` | :arrow_up: |
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `100% <ø> (+26.92%)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `8.18% <0%> (+5.29%)` | :arrow_up: |
| [...model/builders/protobuf/transport\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zcG9ydF9idWlsZGVyX3Rlc3QuY3Bw) | `20% <0%> (-0.69%)` | :arrow_down: |
| ... and [31 more](https://codecov.io/gh/hyperledger/iroha/pull/1013/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1013?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1013?src=pr&el=footer). Last update [b455918...a97834e](https://codecov.io/gh/hyperledger/iroha/pull/1013?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-27 14:54:43,2018-03-01 09:25:29
https://api.github.com/repos/hyperledger/iroha/issues/1013,https://api.github.com/repos/hyperledger/iroha/issues/comments/369538793,https://github.com/hyperledger/iroha/pull/1013#issuecomment-369538793,sorabot,"SonarQube analysis reported 62 issues
* ![MINOR][MINOR] 40 minor
* ![INFO][INFO] 22 info

#### Top 10 issues

1. ![MINOR][MINOR] [json_command_factory.cpp#L50](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L50): Define a constant instead of duplicating this literal ""value"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L65](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L65): Define a constant instead of duplicating this literal ""precision"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L77](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L77): Define a constant instead of duplicating this literal ""address"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L78](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L78): Define a constant instead of duplicating this literal ""peer_key"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L92](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L92): Variable 'serializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_command_factory.cpp#L119](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L119): Define a constant instead of duplicating this literal ""AddAssetQuantity"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L121](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L121): Define a constant instead of duplicating this literal ""SubtractAssetQuantity"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L123](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L123): Define a constant instead of duplicating this literal ""AddPeer"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L124](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L124): Define a constant instead of duplicating this literal ""AddSignatory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L125](https://github.com/hyperledger/iroha/blob/a97834e21a51baf675a030806158646fd5277988/irohad/model/converters/impl/json_command_factory.cpp#L125): Define a constant instead of duplicating this literal ""CreateAccount"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-01 09:53:38,2018-03-01 09:53:38
https://api.github.com/repos/hyperledger/iroha/issues/1012,https://api.github.com/repos/hyperledger/iroha/issues/comments/368486126,https://github.com/hyperledger/iroha/pull/1012#issuecomment-368486126,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1012?src=pr&el=h1) Report
> Merging [#1012](https://codecov.io/gh/hyperledger/iroha/pull/1012?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/93e04350a2f375a38ae4d8fe25811251cbcc6bfc?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1012/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1012?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1012   +/-   ##
========================================
  Coverage    33.06%   33.06%           
========================================
  Files          524      524           
  Lines        15990    15990           
  Branches     10182    10182           
========================================
  Hits          5287     5287           
  Misses        1371     1371           
  Partials      9332     9332
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1012?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1012?src=pr&el=footer). Last update [93e0435...f9d0c14](https://codecov.io/gh/hyperledger/iroha/pull/1012?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-26 12:34:32,2018-02-26 12:34:32
https://api.github.com/repos/hyperledger/iroha/issues/1012,https://api.github.com/repos/hyperledger/iroha/issues/comments/368522884,https://github.com/hyperledger/iroha/pull/1012#issuecomment-368522884,Warchant,"Just add libiroha to packaging 

```
if(ENABLE_LIBS_PACKAGING)
  add_install_step_for_lib(${ed25519_LIBRARY})
endif()
```

do not revert whole branch.

Because ed25519 is installed in hyperledger/iroha-docker-develop, `find_library` finds it and links shared lib instead of static. Also you should change STATIC keyword to SHARED in Finded25519.cmake",2018-02-26 14:36:31,2018-02-26 14:49:35
https://api.github.com/repos/hyperledger/iroha/issues/1010,https://api.github.com/repos/hyperledger/iroha/issues/comments/368424566,https://github.com/hyperledger/iroha/pull/1010#issuecomment-368424566,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1010?src=pr&el=h1) Report
> Merging [#1010](https://codecov.io/gh/hyperledger/iroha/pull/1010?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/826b016e6e34e9c068dca007e97b1826bf46e9b5?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1010/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1010?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1010      +/-   ##
===========================================
- Coverage    33.05%   33.04%   -0.01%     
===========================================
  Files          524      524              
  Lines        15978    15981       +3     
  Branches     10176    10179       +3     
===========================================
  Hits          5281     5281              
  Misses        1371     1371              
- Partials      9326     9329       +3
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1010?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/server\_runner.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1010/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5jcHA=) | `61.11% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1010/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `40.45% <ø> (ø)` | :arrow_up: |
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1010/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `47.36% <0%> (-4.07%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1010?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1010?src=pr&el=footer). Last update [826b016...b9529bc](https://codecov.io/gh/hyperledger/iroha/pull/1010?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-26 08:28:58,2018-02-26 08:28:58
https://api.github.com/repos/hyperledger/iroha/issues/1010,https://api.github.com/repos/hyperledger/iroha/issues/comments/368427772,https://github.com/hyperledger/iroha/pull/1010#issuecomment-368427772,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [postgres_ordering_service_persistent_state.cpp#L72](https://github.com/hyperledger/iroha/blob/b9529bcfc90b680dc6661dd7dd6f4826ceafa0bd/irohad/ametsuchi/impl/postgres_ordering_service_persistent_state.cpp#L72): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [ordering_service_impl.hpp#L54](https://github.com/hyperledger/iroha/blob/b9529bcfc90b680dc6661dd7dd6f4826ceafa0bd/irohad/ordering/impl/ordering_service_impl.hpp#L54): Undocumented API: OrderingServiceImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-26 08:42:34,2018-02-26 08:42:34
https://api.github.com/repos/hyperledger/iroha/issues/1009,https://api.github.com/repos/hyperledger/iroha/issues/comments/368037975,https://github.com/hyperledger/iroha/pull/1009#issuecomment-368037975,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1009?src=pr&el=h1) Report
> Merging [#1009](https://codecov.io/gh/hyperledger/iroha/pull/1009?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/5c6a1759da5f9f567ad5bed546ea839cfad45bf5?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1009/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1009?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1009   +/-   ##
========================================
  Coverage    33.12%   33.12%           
========================================
  Files          520      520           
  Lines        15793    15793           
  Branches     10062    10062           
========================================
  Hits          5231     5231           
  Misses        1338     1338           
  Partials      9224     9224
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1009?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1009?src=pr&el=footer). Last update [5c6a175...ec69b8f](https://codecov.io/gh/hyperledger/iroha/pull/1009?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-23 15:18:40,2018-02-23 15:18:40
https://api.github.com/repos/hyperledger/iroha/issues/1007,https://api.github.com/repos/hyperledger/iroha/issues/comments/368472507,https://github.com/hyperledger/iroha/pull/1007#issuecomment-368472507,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1007?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@4ca0fa3`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `37.39%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1007/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/1007?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1007   +/-   ##
==========================================
  Coverage           ?   32.36%           
==========================================
  Files              ?      558           
  Lines              ?    17168           
  Branches           ?    11097           
==========================================
  Hits               ?     5557           
  Misses             ?     1436           
  Partials           ?    10175
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1007?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/torii/processor/query\_processor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9xdWVyeV9wcm9jZXNzb3IuaHBw) | `50% <ø> (ø)` | |
| [irohad/torii/processor/query\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9xdWVyeV9wcm9jZXNzb3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_wsv\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tb24uaHBw) | `50% <ø> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `71.42% <ø> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | |
| [...hared\_model/interfaces/commands/transfer\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvdHJhbnNmZXJfYXNzZXQuaHBw) | `8.69% <ø> (ø)` | |
| [...t/module/irohad/synchronizer/synchronizer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3N5bmNocm9uaXplci9zeW5jaHJvbml6ZXJfdGVzdC5jcHA=) | `21.51% <ø> (ø)` | |
| [irohad/ametsuchi/wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfY29tbWFuZC5ocHA=) | `50% <ø> (ø)` | |
| [...ad/ametsuchi/ordering\_service\_persistent\_state.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9vcmRlcmluZ19zZXJ2aWNlX3BlcnNpc3RlbnRfc3RhdGUuaHBw) | `100% <ø> (ø)` | |
| [...ohad/torii/processor/impl/query\_processor\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9pbXBsL3F1ZXJ5X3Byb2Nlc3Nvcl9pbXBsLmNwcA==) | `36.36% <ø> (ø)` | |
| ... and [29 more](https://codecov.io/gh/hyperledger/iroha/pull/1007/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1007?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1007?src=pr&el=footer). Last update [4ca0fa3...b99da15](https://codecov.io/gh/hyperledger/iroha/pull/1007?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-26 11:34:40,2018-03-28 08:37:14
https://api.github.com/repos/hyperledger/iroha/issues/1007,https://api.github.com/repos/hyperledger/iroha/issues/comments/369245376,https://github.com/hyperledger/iroha/pull/1007#issuecomment-369245376,x3medima17,You can squash last two commits,2018-02-28 13:52:51,2018-02-28 13:52:51
https://api.github.com/repos/hyperledger/iroha/issues/1007,https://api.github.com/repos/hyperledger/iroha/issues/comments/372774030,https://github.com/hyperledger/iroha/pull/1007#issuecomment-372774030,Alexey-N-Chernyshov,"please, rebase",2018-03-13 18:38:37,2018-03-13 18:38:37
https://api.github.com/repos/hyperledger/iroha/issues/1007,https://api.github.com/repos/hyperledger/iroha/issues/comments/376124173,https://github.com/hyperledger/iroha/pull/1007#issuecomment-376124173,l4l,maybe just rebase on current develop?,2018-03-26 10:45:51,2018-03-26 10:45:51
https://api.github.com/repos/hyperledger/iroha/issues/1007,https://api.github.com/repos/hyperledger/iroha/issues/comments/376820923,https://github.com/hyperledger/iroha/pull/1007#issuecomment-376820923,sorabot,"SonarQube analysis reported 20 issues
* ![MINOR][MINOR] 20 minor

#### Top 10 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [postgres_block_index.hpp#L55](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/ametsuchi/impl/postgres_block_index.hpp#L55): Unused private function: 'PostgresBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/ametsuchi/impl/postgres_block_query.hpp#L72): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L80](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/ametsuchi/impl/postgres_block_query.hpp#L80): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L90](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/ametsuchi/impl/postgres_block_query.hpp#L90): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L123](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L123): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L37): Variable 'command_executor_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [temporary_wsv_impl.cpp#L38](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/ametsuchi/impl/temporary_wsv_impl.cpp#L38): Variable 'command_validator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [command_executor.cpp#L33](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/execution/impl/command_executor.cpp#L33): Function parameter 'command_name' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [stateful_validator_impl.hpp#L55](https://github.com/hyperledger/iroha/blob/b99da1597fb2f5ba94867b78e990f240da356437/irohad/validation/impl/stateful_validator_impl.hpp#L55): Unused private function: 'StatefulValidatorImpl::signaturesSubset' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-28 09:25:03,2018-03-28 09:25:03
https://api.github.com/repos/hyperledger/iroha/issues/1004,https://api.github.com/repos/hyperledger/iroha/issues/comments/367702150,https://github.com/hyperledger/iroha/pull/1004#issuecomment-367702150,x3medima17,"![image](https://user-images.githubusercontent.com/750115/36544596-e6cff97e-17f7-11e8-9caa-e97c4ea6e9d7.png)
Please remove unused paragraphs",2018-02-22 14:43:46,2018-02-22 14:43:46
https://api.github.com/repos/hyperledger/iroha/issues/1004,https://api.github.com/repos/hyperledger/iroha/issues/comments/367907377,https://github.com/hyperledger/iroha/pull/1004#issuecomment-367907377,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1004?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@ec23102`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `4.04%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1004/graphs/tree.svg?src=pr&token=VEvywEmaef&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/1004?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop    #1004   +/-   ##
==========================================
  Coverage           ?   31.86%           
==========================================
  Files              ?      495           
  Lines              ?    15457           
  Branches           ?     9954           
==========================================
  Hits               ?     4925           
  Misses             ?     1561           
  Partials           ?     8971
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1004?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/integration/acceptance/tx\_acceptance\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1004/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9hY2NlcHRhbmNlL3R4X2FjY2VwdGFuY2VfdGVzdC5jcHA=) | `4.04% <4.04%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1004?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1004?src=pr&el=footer). Last update [ec23102...0aed4ec](https://codecov.io/gh/hyperledger/iroha/pull/1004?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-23 04:36:41,2018-03-27 02:52:21
https://api.github.com/repos/hyperledger/iroha/issues/1004,https://api.github.com/repos/hyperledger/iroha/issues/comments/371050875,https://github.com/hyperledger/iroha/pull/1004#issuecomment-371050875,neewy,"> Description of the Change
> Adds integration acceptance test.

Please write more explanatory description for pull requests. By telling this much it is not evident for a reviewer what you did in your code",2018-03-07 07:39:27,2018-03-07 07:39:27
https://api.github.com/repos/hyperledger/iroha/issues/1003,https://api.github.com/repos/hyperledger/iroha/issues/comments/367276267,https://github.com/hyperledger/iroha/pull/1003#issuecomment-367276267,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1003?src=pr&el=h1) Report
> Merging [#1003](https://codecov.io/gh/hyperledger/iroha/pull/1003?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b3559a3ce3a2fccf6c7b8a0e8f3054d30e40f565?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1003/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/1003?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop    #1003   +/-   ##
========================================
  Coverage    32.21%   32.21%           
========================================
  Files          494      494           
  Lines        15259    15259           
  Branches      9767     9767           
========================================
  Hits          4915     4915           
  Misses        1447     1447           
  Partials      8897     8897
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1003?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1003/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tb24uaHBw) | `88.88% <ø> (ø)` | :arrow_up: |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1003/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `29.33% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1003/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `19.42% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1003?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1003?src=pr&el=footer). Last update [b3559a3...e278001](https://codecov.io/gh/hyperledger/iroha/pull/1003?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-21 10:12:41,2018-02-21 10:12:41
https://api.github.com/repos/hyperledger/iroha/issues/1003,https://api.github.com/repos/hyperledger/iroha/issues/comments/367280136,https://github.com/hyperledger/iroha/pull/1003#issuecomment-367280136,Warchant,"To clarify:
Because of destruction order, when connection is destroyed first, transaction becomes dangling pointer. When shared_ptr executes destroy(), test will fail with SIGSEGV.

In https://github.com/hyperledger/iroha/pull/999 I **explicitly** close connections in correct order in TearDown().
In this PR @lebdron changes member order to destroy connection and transaction in correct order, thus **implicitly** solving this problem.

IMO close order should be explicit, because other programmers, when write new tests may reuse code from these tests or write new code based on these tests and *may make the same mistake again*. In case of explicit connection destruction, it is obvious for the reader that connection should be destroyed and he/she will not make this mistake again.

IMO we need to merge both PRs and only then merge into develop.",2018-02-21 10:27:15,2018-02-21 10:27:15
https://api.github.com/repos/hyperledger/iroha/issues/1003,https://api.github.com/repos/hyperledger/iroha/issues/comments/367645369,https://github.com/hyperledger/iroha/pull/1003#issuecomment-367645369,muratovv,"@Warchant 
We discuss a lot about solutions with @lebdron about this issue.
In my opinion better to fix this problem in Andrei's way because both of solutions may be broken but this him approach more clean and consistent with code environment.
Also, by the way, if similar problems appear this notes that there are architectural problems with encapsulation. And class required to be reworked.",2018-02-22 10:57:16,2018-02-22 10:57:16
https://api.github.com/repos/hyperledger/iroha/issues/1002,https://api.github.com/repos/hyperledger/iroha/issues/comments/367653703,https://github.com/hyperledger/iroha/pull/1002#issuecomment-367653703,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1002?src=pr&el=h1) Report
> Merging [#1002](https://codecov.io/gh/hyperledger/iroha/pull/1002?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b3f760033e1983aecd5273fdb4dcb2f6fff07799?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `33.99%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1002/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1002?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop   #1002      +/-   ##
==========================================
- Coverage     32.5%   32.5%   -0.01%     
==========================================
  Files          553     553              
  Lines        16802   16800       -2     
  Branches     10829   10828       -1     
==========================================
- Hits          5461    5460       -1     
  Misses        1384    1384              
+ Partials      9957    9956       -1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1002?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/network/network\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvbmV0d29ya19tb2Nrcy5ocHA=) | `42.85% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/storage/yac\_vote\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfdm90ZV9zdG9yYWdlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1vbi5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...had/consensus/yac/storage/yac\_proposal\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfcHJvcG9zYWxfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...ohad/model/converters/json\_transaction\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl90cmFuc2FjdGlvbl9mYWN0b3J5LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/peer\_orderer\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9wZWVyX29yZGVyZXJfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| ... and [80 more](https://codecov.io/gh/hyperledger/iroha/pull/1002/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1002?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1002?src=pr&el=footer). Last update [b3f7600...f1814d0](https://codecov.io/gh/hyperledger/iroha/pull/1002?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-22 11:34:03,2018-03-16 07:53:28
https://api.github.com/repos/hyperledger/iroha/issues/1002,https://api.github.com/repos/hyperledger/iroha/issues/comments/373344865,https://github.com/hyperledger/iroha/pull/1002#issuecomment-373344865,Warchant,It is easier to do changes from scratch :hushed: ,2018-03-15 11:27:33,2018-03-15 11:27:33
https://api.github.com/repos/hyperledger/iroha/issues/1002,https://api.github.com/repos/hyperledger/iroha/issues/comments/373519678,https://github.com/hyperledger/iroha/pull/1002#issuecomment-373519678,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L160](https://github.com/hyperledger/iroha/blob/f1814d00fa7bc01e8df59a7b174715c3c37adfd6/irohad/model/converters/impl/pb_query_response_factory.cpp#L160): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [pb_query_response_factory.hpp#L54](https://github.com/hyperledger/iroha/blob/f1814d00fa7bc01e8df59a7b174715c3c37adfd6/irohad/model/converters/pb_query_response_factory.hpp#L54): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [keys_manager_impl.cpp#L91](https://github.com/hyperledger/iroha/blob/f1814d00fa7bc01e8df59a7b174715c3c37adfd6/libs/crypto/keys_manager_impl.cpp#L91): Boolean result is used in bitwise operation. Clarify expression with parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AclarifyCondition)
1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L300](https://github.com/hyperledger/iroha/blob/f1814d00fa7bc01e8df59a7b174715c3c37adfd6/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L300): Variable 'permittee_account' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L358](https://github.com/hyperledger/iroha/blob/f1814d00fa7bc01e8df59a7b174715c3c37adfd6/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L358): Variable 'peer' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [torii_queries_test.cpp#L81](https://github.com/hyperledger/iroha/blob/f1814d00fa7bc01e8df59a7b174715c3c37adfd6/test/module/irohad/torii/torii_queries_test.cpp#L81): Class 'ToriiQueriesTest' is unsafe, 'ToriiQueriesTest::runner' can leak by wrong usage. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunsafeClassCanLeak)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-15 20:54:40,2018-03-15 20:54:40
https://api.github.com/repos/hyperledger/iroha/issues/1001,https://api.github.com/repos/hyperledger/iroha/issues/comments/367100547,https://github.com/hyperledger/iroha/pull/1001#issuecomment-367100547,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1001?src=pr&el=h1) Report
> Merging [#1001](https://codecov.io/gh/hyperledger/iroha/pull/1001?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/93e04350a2f375a38ae4d8fe25811251cbcc6bfc?src=pr&el=desc) will **increase** coverage by `0.09%`.
> The diff coverage is `42.03%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/1001/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/1001?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #1001      +/-   ##
===========================================
+ Coverage    33.06%   33.16%   +0.09%     
===========================================
  Files          524      524              
  Lines        15990    15968      -22     
  Branches     10182    10135      -47     
===========================================
+ Hits          5287     5295       +8     
- Misses        1371     1397      +26     
+ Partials      9332     9276      -56
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/1001?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1001/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `21% <ø> (+1.58%)` | :arrow_up: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.hpp](https://codecov.io/gh/hyperledger/iroha/pull/1001/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuaHBw) | `100% <100%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/flat\_file\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1001/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9mbGF0X2ZpbGVfdGVzdC5jcHA=) | `16.92% <23.52%> (+0.7%)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1001/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `48.14% <33.33%> (-3.71%)` | :arrow_down: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1001/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `47.05% <47.05%> (+3.05%)` | :arrow_up: |
| [libs/common/files.cpp](https://codecov.io/gh/hyperledger/iroha/pull/1001/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vZmlsZXMuY3Bw) | `14.28% <0%> (-9.53%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1001?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/1001?src=pr&el=footer). Last update [93e0435...8f07e44](https://codecov.io/gh/hyperledger/iroha/pull/1001?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-20 19:59:11,2018-02-28 10:30:35
https://api.github.com/repos/hyperledger/iroha/issues/1001,https://api.github.com/repos/hyperledger/iroha/issues/comments/369199395,https://github.com/hyperledger/iroha/pull/1001#issuecomment-369199395,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [flat_file.cpp#L54](https://github.com/hyperledger/iroha/blob/8f07e4483bfcd33eb5bf5ce159128bcf1179d8b6/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L54): Define a constant instead of duplicating this literal ""FlatFile"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flat_file.cpp#L131](https://github.com/hyperledger/iroha/blob/8f07e4483bfcd33eb5bf5ce159128bcf1179d8b6/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L131): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_query.cpp#L144](https://github.com/hyperledger/iroha/blob/8f07e4483bfcd33eb5bf5ce159128bcf1179d8b6/irohad/ametsuchi/impl/postgres_block_query.cpp#L144): Define a constant instead of duplicating this literal "" AND height = "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [flat_file.cpp#L105](https://github.com/hyperledger/iroha/blob/8f07e4483bfcd33eb5bf5ce159128bcf1179d8b6/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L105): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [flat_file.hpp#L80](https://github.com/hyperledger/iroha/blob/8f07e4483bfcd33eb5bf5ce159128bcf1179d8b6/irohad/ametsuchi/impl/flat_file/flat_file.hpp#L80): Undocumented API: dropAll [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [flat_file.hpp#L92](https://github.com/hyperledger/iroha/blob/8f07e4483bfcd33eb5bf5ce159128bcf1179d8b6/irohad/ametsuchi/impl/flat_file/flat_file.hpp#L92): Undocumented API: kFirstBlockAt [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-28 10:40:33,2018-02-28 10:40:33
https://api.github.com/repos/hyperledger/iroha/issues/1001,https://api.github.com/repos/hyperledger/iroha/issues/comments/369922344,https://github.com/hyperledger/iroha/pull/1001#issuecomment-369922344,l4l,Why is this closed?,2018-03-02 13:36:25,2018-03-02 13:36:25
https://api.github.com/repos/hyperledger/iroha/issues/1001,https://api.github.com/repos/hyperledger/iroha/issues/comments/369929078,https://github.com/hyperledger/iroha/pull/1001#issuecomment-369929078,Warchant,Team decided to not merge NuDB yet.,2018-03-02 14:05:08,2018-03-02 14:05:08
https://api.github.com/repos/hyperledger/iroha/issues/1000,https://api.github.com/repos/hyperledger/iroha/issues/comments/367245307,https://github.com/hyperledger/iroha/pull/1000#issuecomment-367245307,bakhtin,LGTM,2018-02-21 08:12:48,2018-02-21 08:12:48
https://api.github.com/repos/hyperledger/iroha/issues/999,https://api.github.com/repos/hyperledger/iroha/issues/comments/367091251,https://github.com/hyperledger/iroha/pull/999#issuecomment-367091251,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/999?src=pr&el=h1) Report
> Merging [#999](https://codecov.io/gh/hyperledger/iroha/pull/999?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d54e9a87e6b4c769be93f29bafeb2f09c76b2a04?src=pr&el=desc) will **increase** coverage by `0.07%`.
> The diff coverage is `81.48%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/999/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/999?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #999      +/-   ##
===========================================
+ Coverage    32.21%   32.28%   +0.07%     
===========================================
  Files          494      494              
  Lines        15259    15276      +17     
  Branches      9767     9767              
===========================================
+ Hits          4915     4932      +17     
  Misses        1447     1447              
  Partials      8897     8897
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/999?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/999/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `33.75% <100%> (+4.41%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/999/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfZml4dHVyZS5ocHA=) | `51.42% <73.33%> (+12.14%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/999/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `22.22% <83.33%> (+2.79%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/999?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/999?src=pr&el=footer). Last update [d54e9a8...1d152f7](https://codecov.io/gh/hyperledger/iroha/pull/999?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-20 19:29:01,2018-02-20 21:28:06
https://api.github.com/repos/hyperledger/iroha/issues/998,https://api.github.com/repos/hyperledger/iroha/issues/comments/367010183,https://github.com/hyperledger/iroha/pull/998#issuecomment-367010183,Warchant,"Closing, because I faced some issues with tests on Linux. Will be opened after I fix them.",2018-02-20 15:17:49,2018-02-20 15:17:49
https://api.github.com/repos/hyperledger/iroha/issues/997,https://api.github.com/repos/hyperledger/iroha/issues/comments/367961454,https://github.com/hyperledger/iroha/pull/997#issuecomment-367961454,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/997?src=pr&el=h1) Report
> Merging [#997](https://codecov.io/gh/hyperledger/iroha/pull/997?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0b899a0b055233dfd5889398b4090ed533156314?src=pr&el=desc) will **decrease** coverage by `0.05%`.
> The diff coverage is `34.78%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/997/graphs/tree.svg?src=pr&width=650&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/997?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #997      +/-   ##
===========================================
- Coverage    33.07%   33.01%   -0.06%     
===========================================
  Files          524      524              
  Lines        15984    15955      -29     
  Branches     10176    10166      -10     
===========================================
- Hits          5287     5268      -19     
+ Misses        1371     1370       -1     
+ Partials      9326     9317       -9
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/997?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ders/protobuf/builder\_templates/query\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3F1ZXJ5X3RlbXBsYXRlLmhwcA==) | `60.49% <0%> (+1.95%)` | :arrow_up: |
| [...ared\_model/builders/protobuf/transport\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zcG9ydF9idWlsZGVyLmhwcA==) | `28.57% <0%> (-21.43%)` | :arrow_down: |
| [shared\_model/validators/signable\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvc2lnbmFibGVfdmFsaWRhdG9yLmhwcA==) | `22.22% <0%> (-7.78%)` | :arrow_down: |
| [shared\_model/validators/block\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvYmxvY2tfdmFsaWRhdG9yLmhwcA==) | `100% <100%> (ø)` | :arrow_up: |
| [test/module/shared\_model/validators/validators.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9ycy5ocHA=) | `100% <100%> (ø)` | :arrow_up: |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `66.66% <100%> (ø)` | :arrow_up: |
| [...ders/protobuf/builder\_templates/block\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL2Jsb2NrX3RlbXBsYXRlLmhwcA==) | `78.78% <100%> (+8.19%)` | :arrow_up: |
| [shared\_model/validators/proposal\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcHJvcG9zYWxfdmFsaWRhdG9yLmhwcA==) | `100% <100%> (+38.46%)` | :arrow_up: |
| [shared\_model/utils/polymorphic\_wrapper.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3BvbHltb3JwaGljX3dyYXBwZXIuaHBw) | `90.9% <100%> (+0.9%)` | :arrow_up: |
| [...s/protobuf/builder\_templates/proposal\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3Byb3Bvc2FsX3RlbXBsYXRlLmhwcA==) | `68.18% <100%> (+11.66%)` | :arrow_up: |
| ... and [9 more](https://codecov.io/gh/hyperledger/iroha/pull/997/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/997?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/997?src=pr&el=footer). Last update [0b899a0...ec03d6a](https://codecov.io/gh/hyperledger/iroha/pull/997?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-23 09:49:24,2018-02-24 18:33:08
https://api.github.com/repos/hyperledger/iroha/issues/997,https://api.github.com/repos/hyperledger/iroha/issues/comments/368250255,https://github.com/hyperledger/iroha/pull/997#issuecomment-368250255,sorabot,"SonarQube analysis reported 125 issues
* ![INFO][INFO] 125 info

#### Top 10 issues

1. ![INFO][INFO] [proto_query.hpp#L45](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/backend/protobuf/queries/proto_query.hpp#L45): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L49](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/backend/protobuf/queries/proto_query.hpp#L49): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L51](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/backend/protobuf/queries/proto_query.hpp#L51): Undocumented API: which [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L55](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/backend/protobuf/queries/proto_query.hpp#L55): Undocumented API: shared_model [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L62](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/backend/protobuf/queries/proto_query.hpp#L62): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L93](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/backend/protobuf/queries/proto_query.hpp#L93): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [proto_query.hpp#L98](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/backend/protobuf/queries/proto_query.hpp#L98): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L111](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/backend/protobuf/queries/proto_query.hpp#L111): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L113](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/backend/protobuf/queries/proto_query.hpp#L113): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L99](https://github.com/hyperledger/iroha/blob/ec03d6abcfad1457c18e759aa2d38b9493de35ff/shared_model/builders/protobuf/builder_templates/block_template.hpp#L99): Undocumented API: txNumber [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-24 18:47:20,2018-02-24 18:47:20
https://api.github.com/repos/hyperledger/iroha/issues/996,https://api.github.com/repos/hyperledger/iroha/issues/comments/366839433,https://github.com/hyperledger/iroha/pull/996#issuecomment-366839433,Solonets,don't integration tests solve it?,2018-02-20 01:11:12,2018-02-20 01:11:12
https://api.github.com/repos/hyperledger/iroha/issues/996,https://api.github.com/repos/hyperledger/iroha/issues/comments/366859714,https://github.com/hyperledger/iroha/pull/996#issuecomment-366859714,luckychess,"Actually no, this is a test for a whole system and it should guarantee that we can run Iroha daemon itself without any problems.",2018-02-20 03:49:36,2018-02-20 03:49:36
https://api.github.com/repos/hyperledger/iroha/issues/996,https://api.github.com/repos/hyperledger/iroha/issues/comments/366914337,https://github.com/hyperledger/iroha/pull/996#issuecomment-366914337,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/996?src=pr&el=h1) Report
> Merging [#996](https://codecov.io/gh/hyperledger/iroha/pull/996?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b5de0cb9755ba4a4e53fcb54d8ff73e478adb159?src=pr&el=desc) will **decrease** coverage by `1.01%`.
> The diff coverage is `33.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/996/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/996?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #996      +/-   ##
===========================================
- Coverage    32.58%   31.57%   -1.02%     
===========================================
  Files          533      492      -41     
  Lines        16462    15020    -1442     
  Branches     10584     9699     -885     
===========================================
- Hits          5364     4742     -622     
- Misses        1370     1437      +67     
+ Partials      9728     8841     -887
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/996?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `86.66% <ø> (-13.34%)` | :arrow_down: |
| [test/system/irohad\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-dGVzdC9zeXN0ZW0vaXJvaGFkX3Rlc3QuY3Bw) | `28.57% <28.57%> (ø)` | |
| [test/framework/config\_helper.cpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvY29uZmlnX2hlbHBlci5jcHA=) | `54.54% <54.54%> (ø)` | |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [...\_model/backend/protobuf/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-60%)` | :arrow_down: |
| [...buf/query\_responses/proto\_error\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2Vycm9yX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `18.18% <0%> (-56.82%)` | :arrow_down: |
| [shared\_model/interfaces/queries/get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudC5ocHA=) | `0% <0%> (-54.55%)` | :arrow_down: |
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (-53.85%)` | :arrow_down: |
| [.../backend/protobuf/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `0% <0%> (-53.34%)` | :arrow_down: |
| [...ackend/protobuf/queries/proto\_get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfdHJhbnNhY3Rpb25zLmhwcA==) | `16.66% <0%> (-50%)` | :arrow_down: |
| ... and [245 more](https://codecov.io/gh/hyperledger/iroha/pull/996/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/996?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/996?src=pr&el=footer). Last update [b5de0cb...2eaccb5](https://codecov.io/gh/hyperledger/iroha/pull/996?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-20 09:11:59,2018-03-06 04:38:34
https://api.github.com/repos/hyperledger/iroha/issues/996,https://api.github.com/repos/hyperledger/iroha/issues/comments/369099173,https://github.com/hyperledger/iroha/pull/996#issuecomment-369099173,luckychess,"@Warchant I fixed an issue you mentioned, could you check it please?",2018-02-28 02:25:08,2018-02-28 02:25:08
https://api.github.com/repos/hyperledger/iroha/issues/996,https://api.github.com/repos/hyperledger/iroha/issues/comments/370667375,https://github.com/hyperledger/iroha/pull/996#issuecomment-370667375,luckychess,Commit message was renamed after rebase so github hasn't released about merge happened.,2018-03-06 05:24:44,2018-03-06 05:24:44
https://api.github.com/repos/hyperledger/iroha/issues/994,https://api.github.com/repos/hyperledger/iroha/issues/comments/371124101,https://github.com/hyperledger/iroha/pull/994#issuecomment-371124101,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/994?src=pr&el=h1) Report
> Merging [#994](https://codecov.io/gh/hyperledger/iroha/pull/994?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/164ec3e4e2281801cb89219b312ba4f2d2bb218b?src=pr&el=desc) will **decrease** coverage by `0.29%`.
> The diff coverage is `28.25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/994/graphs/tree.svg?token=VEvywEmaef&height=150&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/994?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop     #994     +/-   ##
==========================================
- Coverage    32.55%   32.25%   -0.3%     
==========================================
  Files          541      518     -23     
  Lines        16663    15670    -993     
  Branches     10724    10065    -659     
==========================================
- Hits          5424     5054    -370     
- Misses        1378     1432     +54     
+ Partials      9861     9184    -677
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/994?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/validation/impl/chain\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9jaGFpbl92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/validation/validation\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vdmFsaWRhdGlvbl9tb2Nrcy5ocHA=) | `37.5% <ø> (-2.5%)` | :arrow_down: |
| [irohad/validation/chain\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdG9yLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `61.53% <ø> (+7.69%)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...rohad/model/converters/impl/pb\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9jb21tYW5kX2ZhY3RvcnkuY3Bw) | `37.63% <ø> (+0.79%)` | :arrow_up: |
| [irohad/ametsuchi/mutable\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9tdXRhYmxlX3N0b3JhZ2UuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/network/impl/block\_loader\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5jcHA=) | `21.05% <0%> (-0.79%)` | :arrow_down: |
| [...t/module/irohad/synchronizer/synchronizer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3N5bmNocm9uaXplci9zeW5jaHJvbml6ZXJfdGVzdC5jcHA=) | `22.97% <0%> (ø)` | :arrow_up: |
| ... and [258 more](https://codecov.io/gh/hyperledger/iroha/pull/994/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/994?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/994?src=pr&el=footer). Last update [164ec3e...d89f309](https://codecov.io/gh/hyperledger/iroha/pull/994?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-07 12:32:00,2018-03-07 12:32:00
https://api.github.com/repos/hyperledger/iroha/issues/994,https://api.github.com/repos/hyperledger/iroha/issues/comments/371124151,https://github.com/hyperledger/iroha/pull/994#issuecomment-371124151,x3medima17,Closed #1044,2018-03-07 12:32:12,2018-03-07 12:32:12
https://api.github.com/repos/hyperledger/iroha/issues/993,https://api.github.com/repos/hyperledger/iroha/issues/comments/366951408,https://github.com/hyperledger/iroha/pull/993#issuecomment-366951408,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/993?src=pr&el=h1) Report
> Merging [#993](https://codecov.io/gh/hyperledger/iroha/pull/993?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d8cba74839d5e5072958d64042c766d40a088853?src=pr&el=desc) will **decrease** coverage by `1.32%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/993/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/993?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #993      +/-   ##
===========================================
- Coverage    32.95%   31.63%   -1.33%     
===========================================
  Files          524      488      -36     
  Lines        16068    14790    -1278     
  Branches     10256     9542     -714     
===========================================
- Hits          5296     4679     -617     
- Misses        1366     1425      +59     
+ Partials      9406     8686     -720
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/993?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...\_model/backend/protobuf/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-66.67%)` | :arrow_down: |
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (-61.54%)` | :arrow_down: |
| [.../backend/protobuf/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `0% <0%> (-60%)` | :arrow_down: |
| [...ackend/protobuf/queries/proto\_get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfdHJhbnNhY3Rpb25zLmhwcA==) | `16.66% <0%> (-58.34%)` | :arrow_down: |
| [...buf/query\_responses/proto\_error\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2Vycm9yX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `18.18% <0%> (-56.82%)` | :arrow_down: |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `16.66% <0%> (-41.67%)` | :arrow_down: |
| [...ed\_model/interfaces/queries/get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldHMuaHBw) | `0% <0%> (-38.47%)` | :arrow_down: |
| [...ed\_model/interfaces/queries/get\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9kZXRhaWwuaHBw) | `0% <0%> (-38.47%)` | :arrow_down: |
| [shared\_model/interfaces/queries/get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudC5ocHA=) | `0% <0%> (-36.37%)` | :arrow_down: |
| [...el/interfaces/queries/get\_account\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF90cmFuc2FjdGlvbnMuaHBw) | `0% <0%> (-36.37%)` | :arrow_down: |
| ... and [160 more](https://codecov.io/gh/hyperledger/iroha/pull/993/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/993?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/993?src=pr&el=footer). Last update [d8cba74...a1a6e3d](https://codecov.io/gh/hyperledger/iroha/pull/993?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-20 11:40:03,2018-02-28 12:29:37
https://api.github.com/repos/hyperledger/iroha/issues/993,https://api.github.com/repos/hyperledger/iroha/issues/comments/369628099,https://github.com/hyperledger/iroha/pull/993#issuecomment-369628099,lebdron,https://github.com/hyperledger/iroha/commit/4945b4e52a2d5dd7274c64cbf1eeb151f2f3cd42,2018-03-01 15:28:39,2018-03-01 15:28:39
https://api.github.com/repos/hyperledger/iroha/issues/992,https://api.github.com/repos/hyperledger/iroha/issues/comments/366547333,https://github.com/hyperledger/iroha/pull/992#issuecomment-366547333,sorabot,"SonarQube analysis reported 4 issues

1. ![INFO][INFO] [unsigned_proto.hpp#L36](https://github.com/hyperledger/iroha/blob/ac97a77d73d1c7ef2ee2f53d37933d981163b5b2/shared_model/builders/protobuf/unsigned_proto.hpp#L36): Undocumented API: ModelType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [unsigned_proto.hpp#L44](https://github.com/hyperledger/iroha/blob/ac97a77d73d1c7ef2ee2f53d37933d981163b5b2/shared_model/builders/protobuf/unsigned_proto.hpp#L44): Undocumented API: UnsignedWrapper [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [unsigned_proto.hpp#L59](https://github.com/hyperledger/iroha/blob/ac97a77d73d1c7ef2ee2f53d37933d981163b5b2/shared_model/builders/protobuf/unsigned_proto.hpp#L59): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [unsigned_proto.hpp#L63](https://github.com/hyperledger/iroha/blob/ac97a77d73d1c7ef2ee2f53d37933d981163b5b2/shared_model/builders/protobuf/unsigned_proto.hpp#L63): Undocumented API: hash [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-18 21:01:42,2018-02-18 21:01:42
https://api.github.com/repos/hyperledger/iroha/issues/992,https://api.github.com/repos/hyperledger/iroha/issues/comments/366547342,https://github.com/hyperledger/iroha/pull/992#issuecomment-366547342,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/992?src=pr&el=h1) Report
> Merging [#992](https://codecov.io/gh/hyperledger/iroha/pull/992?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/f20a19e4d15be22582ba70a46a4d75d114449281?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/992/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/992?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #992   +/-   ##
========================================
  Coverage    31.92%   31.92%           
========================================
  Files          493      493           
  Lines        15189    15189           
  Branches      9764     9764           
========================================
  Hits          4849     4849           
  Misses        1430     1430           
  Partials      8910     8910
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/992?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/builders/protobuf/unsigned\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/992/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Vuc2lnbmVkX3Byb3RvLmhwcA==) | `27.27% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/992?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/992?src=pr&el=footer). Last update [f20a19e...ac97a77](https://codecov.io/gh/hyperledger/iroha/pull/992?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-18 21:01:52,2018-02-18 21:05:32
https://api.github.com/repos/hyperledger/iroha/issues/991,https://api.github.com/repos/hyperledger/iroha/issues/comments/368760269,https://github.com/hyperledger/iroha/pull/991#issuecomment-368760269,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/991?src=pr&el=h1) Report
> Merging [#991](https://codecov.io/gh/hyperledger/iroha/pull/991?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/def7bc4f7efdf0c2d1c3caecccd2cf3efe0c889e?src=pr&el=desc) will **decrease** coverage by `0.1%`.
> The diff coverage is `30%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/991/graphs/tree.svg?width=650&src=pr&height=150&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/991?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #991      +/-   ##
===========================================
- Coverage    32.47%   32.37%   -0.11%     
===========================================
  Files          527      530       +3     
  Lines        16091    16110      +19     
  Branches     10350    10380      +30     
===========================================
- Hits          5226     5215      -11     
+ Misses        1356     1353       -3     
- Partials      9509     9542      +33
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/991?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9zdG9yYWdlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `75.92% <ø> (ø)` | :arrow_up: |
| [irohad/main/application.hpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [...tion/pipeline/transfer\_asset\_inter\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90cmFuc2Zlcl9hc3NldF9pbnRlcl9kb21haW5fdGVzdC5jcHA=) | `40.81% <0%> (-0.86%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `14.17% <11.42%> (-4.76%)` | :arrow_down: |
| [irohad/ametsuchi/impl/wsv\_restorer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3dzdl9yZXN0b3Jlcl9pbXBsLmNwcA==) | `27.27% <27.27%> (ø)` | |
| [test/module/irohad/ametsuchi/ametsuchi\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfZml4dHVyZS5ocHA=) | `45% <28.57%> (-5%)` | :arrow_down: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `50% <46.15%> (+2.33%)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_restorer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcmVzdG9yZXIuaHBw) | `50% <50%> (ø)` | |
| ... and [6 more](https://codecov.io/gh/hyperledger/iroha/pull/991/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/991?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/991?src=pr&el=footer). Last update [def7bc4...b99d230](https://codecov.io/gh/hyperledger/iroha/pull/991?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-27 06:19:53,2018-03-05 13:57:35
https://api.github.com/repos/hyperledger/iroha/issues/991,https://api.github.com/repos/hyperledger/iroha/issues/comments/369141078,https://github.com/hyperledger/iroha/pull/991#issuecomment-369141078,sorabot,"SonarQube analysis reported 72 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 12 minor
* ![INFO][INFO] 59 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L279](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/irohad/main/application.cpp#L279): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [storage_impl.cpp#L124](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/irohad/ametsuchi/impl/storage_impl.cpp#L124): Define a constant instead of duplicating this literal ""create mutable storage"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L126](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/irohad/ametsuchi/impl/storage_impl.cpp#L126): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [application.cpp#L40](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/irohad/main/application.cpp#L40): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.hpp#L73](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/irohad/main/application.hpp#L73): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L194](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L194): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L194](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L194): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L194](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L194): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L194](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L194): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L306](https://github.com/hyperledger/iroha/blob/775cbaa64fc11a3d64ad62f9666d11ced4d43cf0/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L306): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-28 07:01:03,2018-02-28 07:01:03
https://api.github.com/repos/hyperledger/iroha/issues/991,https://api.github.com/repos/hyperledger/iroha/issues/comments/370293588,https://github.com/hyperledger/iroha/pull/991#issuecomment-370293588,lebdron,"|`test/integration/pipeline/transfer_asset_inter_domain_test.cpp:84-85`|
|---|
`init` already contains `restoreWsv` call, so this should not be required.",2018-03-05 02:36:21,2018-03-05 02:36:21
https://api.github.com/repos/hyperledger/iroha/issues/990,https://api.github.com/repos/hyperledger/iroha/issues/comments/366448576,https://github.com/hyperledger/iroha/pull/990#issuecomment-366448576,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/990?src=pr&el=h1) Report
> Merging [#990](https://codecov.io/gh/hyperledger/iroha/pull/990?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/926f54d2948759f6858c12143675adad616d2a30?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/990/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/990?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #990   +/-   ##
========================================
  Coverage    31.92%   31.92%           
========================================
  Files          493      493           
  Lines        15189    15189           
  Branches      9764     9764           
========================================
  Hits          4849     4849           
  Misses        1430     1430           
  Partials      8910     8910
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/990?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/interfaces/base/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/990/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9zaWduYWJsZS5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/990/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `100% <0%> (ø)` | :arrow_up: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/990/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `42.39% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/990?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/990?src=pr&el=footer). Last update [926f54d...abbe231](https://codecov.io/gh/hyperledger/iroha/pull/990?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-17 15:29:21,2018-02-17 17:04:04
https://api.github.com/repos/hyperledger/iroha/issues/989,https://api.github.com/repos/hyperledger/iroha/issues/comments/366467971,https://github.com/hyperledger/iroha/pull/989#issuecomment-366467971,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/989?src=pr&el=h1) Report
> Merging [#989](https://codecov.io/gh/hyperledger/iroha/pull/989?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d31387ceb46df6efa99834f61efae75f2fbf9317?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/989/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/989?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #989   +/-   ##
========================================
  Coverage    31.92%   31.92%           
========================================
  Files          493      493           
  Lines        15189    15189           
  Branches      9764     9764           
========================================
  Hits          4849     4849           
  Misses        1430     1430           
  Partials      8910     8910
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/989?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/utils/variant\_deserializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/989/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3ZhcmlhbnRfZGVzZXJpYWxpemVyLmhwcA==) | `50% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/989?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/989?src=pr&el=footer). Last update [d31387c...6fb468c](https://codecov.io/gh/hyperledger/iroha/pull/989?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-17 20:09:05,2018-02-17 20:12:57
https://api.github.com/repos/hyperledger/iroha/issues/988,https://api.github.com/repos/hyperledger/iroha/issues/comments/368856109,https://github.com/hyperledger/iroha/pull/988#issuecomment-368856109,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/988?src=pr&el=h1) Report
> Merging [#988](https://codecov.io/gh/hyperledger/iroha/pull/988?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/4760e940e91c2efc87b31208960ba88bf92aa35f?src=pr&el=desc) will **increase** coverage by `0.94%`.
> The diff coverage is `35.22%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/988/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/988?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #988      +/-   ##
===========================================
+ Coverage    32.37%   33.32%   +0.94%     
===========================================
  Files          530      528       -2     
  Lines        16109    16311     +202     
  Branches     10379    10352      -27     
===========================================
+ Hits          5215     5435     +220     
- Misses        1353     1384      +31     
+ Partials      9541     9492      -49
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/988?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/peer\_query\_wsv.hpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3BlZXJfcXVlcnlfd3N2LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/peer\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9wZWVyX3F1ZXJ5LmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [iroha-cli/client.hpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [...rs/protobuf/common\_objects/proto\_asset\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX2Fzc2V0X2J1aWxkZXIuaHBw) | `80% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...ers/protobuf/common\_objects/proto\_peer\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX3BlZXJfYnVpbGRlci5ocHA=) | `72.72% <ø> (ø)` | :arrow_up: |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | `83.33% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `47.82% <0%> (ø)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `8.25% <0%> (+5.34%)` | :arrow_up: |
| ... and [166 more](https://codecov.io/gh/hyperledger/iroha/pull/988/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/988?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/988?src=pr&el=footer). Last update [4760e94...d86e826](https://codecov.io/gh/hyperledger/iroha/pull/988?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-27 12:20:59,2018-03-05 14:55:33
https://api.github.com/repos/hyperledger/iroha/issues/988,https://api.github.com/repos/hyperledger/iroha/issues/comments/369658601,https://github.com/hyperledger/iroha/pull/988#issuecomment-369658601,sorabot,"SonarQube analysis reported 114 issues
* ![MINOR][MINOR] 17 minor
* ![INFO][INFO] 97 info

#### Top 10 issues

1. ![MINOR][MINOR] [postgres_wsv_common.hpp#L113](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/irohad/ametsuchi/impl/postgres_wsv_common.hpp#L113): Define a constant instead of duplicating this literal ""account_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_common.hpp#L114](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/irohad/ametsuchi/impl/postgres_wsv_common.hpp#L114): Define a constant instead of duplicating this literal ""domain_id"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_common.hpp#L128](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/irohad/ametsuchi/impl/postgres_wsv_common.hpp#L128): Define a constant instead of duplicating this literal ""asset_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L272](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/irohad/model/execution/impl/command_executor.cpp#L272): Define a constant instead of duplicating this literal ""asset %s is absent"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L279](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/irohad/model/execution/impl/command_executor.cpp#L279): Define a constant instead of duplicating this literal ""precision mismatch: expected %d, but got %d"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L801](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/irohad/model/execution/impl/command_executor.cpp#L801): Define a constant instead of duplicating this literal ""asset %s is absent of %s"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [result.hpp#L40](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/libs/common/result.hpp#L40): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L213](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L213): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L213](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L213): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L213](https://github.com/hyperledger/iroha/blob/a6f882a57ab05ca5575bad8e1119886954d37b27/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L213): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-01 16:59:41,2018-03-01 16:59:41
https://api.github.com/repos/hyperledger/iroha/issues/987,https://api.github.com/repos/hyperledger/iroha/issues/comments/366319292,https://github.com/hyperledger/iroha/pull/987#issuecomment-366319292,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/987?src=pr&el=h1) Report
> Merging [#987](https://codecov.io/gh/hyperledger/iroha/pull/987?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/2978300513d9cbdd01293cf51b9f454ced20ee6e?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `22.07%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/987/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/987?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #987      +/-   ##
===========================================
+ Coverage    32.95%   32.96%   +<.01%     
===========================================
  Files          524      523       -1     
  Lines        16068    16038      -30     
  Branches     10256    10244      -12     
===========================================
- Hits          5296     5287       -9     
+ Misses        1366     1353      -13     
+ Partials      9406     9398       -8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/987?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/server\_runner.hpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [test/integration/pipeline/test\_irohad.hpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90ZXN0X2lyb2hhZC5ocHA=) | `50% <ø> (+2%)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `100% <ø> (+50%)` | :arrow_up: |
| [irohad/main/server\_runner.cpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5jcHA=) | `50% <ø> (-11.12%)` | :arrow_down: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `48.57% <0%> (+1.96%)` | :arrow_up: |
| [irohad/main/application.hpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uaHBw) | `0% <0%> (ø)` | |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `42.85% <0%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `42.22% <100%> (+1.76%)` | :arrow_up: |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `17.71% <13.33%> (-1.63%)` | :arrow_down: |
| ... and [9 more](https://codecov.io/gh/hyperledger/iroha/pull/987/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/987?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/987?src=pr&el=footer). Last update [2978300...739a00b](https://codecov.io/gh/hyperledger/iroha/pull/987?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-16 18:29:02,2018-03-01 04:29:47
https://api.github.com/repos/hyperledger/iroha/issues/987,https://api.github.com/repos/hyperledger/iroha/issues/comments/369473524,https://github.com/hyperledger/iroha/pull/987#issuecomment-369473524,sorabot,"SonarQube analysis reported 64 issues
* ![CRITICAL][CRITICAL] 2 critical
* ![MINOR][MINOR] 2 minor
* ![INFO][INFO] 60 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L246](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/main/application.cpp#L246): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [command_service.cpp#L228](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/torii/impl/command_service.cpp#L228): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [application.cpp#L37](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/main/application.cpp#L37): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.hpp#L68](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/main/application.hpp#L68): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![INFO][INFO] [storage_impl.hpp#L35](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/ametsuchi/impl/storage_impl.hpp#L35): Undocumented API: ConnectionContext [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L36](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/ametsuchi/impl/storage_impl.hpp#L36): Undocumented API: ConnectionContext [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L40](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/ametsuchi/impl/storage_impl.hpp#L40): Undocumented API: block_store [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L41](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/ametsuchi/impl/storage_impl.hpp#L41): Undocumented API: pg_lazy [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L42](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/ametsuchi/impl/storage_impl.hpp#L42): Undocumented API: pg_nontx [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L45](https://github.com/hyperledger/iroha/blob/739a00b9264876ab95a8d1e174617c0938ecf12a/irohad/ametsuchi/impl/storage_impl.hpp#L45): Undocumented API: StorageImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-01 04:52:48,2018-03-01 04:52:48
https://api.github.com/repos/hyperledger/iroha/issues/986,https://api.github.com/repos/hyperledger/iroha/issues/comments/367644334,https://github.com/hyperledger/iroha/pull/986#issuecomment-367644334,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/986?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@079b33f`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `35.71%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/986/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/986?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #986   +/-   ##
==========================================
  Coverage           ?   32.23%           
==========================================
  Files              ?      498           
  Lines              ?    15391           
  Branches           ?     9844           
==========================================
  Hits               ?     4962           
  Misses             ?     1460           
  Partials           ?     8969
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/986?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tb24uaHBw) | `88.88% <ø> (ø)` | |
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `40.54% <ø> (ø)` | |
| [irohad/main/impl/ordering\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmhwcA==) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `50% <ø> (ø)` | |
| [...tion/pipeline/transfer\_asset\_inter\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90cmFuc2Zlcl9hc3NldF9pbnRlcl9kb21haW5fdGVzdC5jcHA=) | `41.66% <0%> (ø)` | |
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `51.42% <0%> (ø)` | |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `22.09% <0%> (ø)` | |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `30.66% <0%> (ø)` | |
| [...mpl/postgres\_ordering\_service\_persistent\_state.hpp](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX29yZGVyaW5nX3NlcnZpY2VfcGVyc2lzdGVudF9zdGF0ZS5ocHA=) | `100% <100%> (ø)` | |
| ... and [9 more](https://codecov.io/gh/hyperledger/iroha/pull/986/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/986?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/986?src=pr&el=footer). Last update [079b33f...6258863](https://codecov.io/gh/hyperledger/iroha/pull/986?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-22 10:53:20,2018-02-23 14:47:12
https://api.github.com/repos/hyperledger/iroha/issues/986,https://api.github.com/repos/hyperledger/iroha/issues/comments/367646651,https://github.com/hyperledger/iroha/pull/986#issuecomment-367646651,sorabot,"SonarQube analysis reported 80 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 13 minor
* ![INFO][INFO] 66 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L283](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/irohad/main/application.cpp#L283): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L38](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L38): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [application.cpp#L37](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/irohad/main/application.cpp#L37): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.hpp#L68](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/irohad/main/application.hpp#L68): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L139](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/test/framework/integration_framework/integration_test_framework.cpp#L139): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L144](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/test/framework/integration_framework/integration_test_framework.cpp#L144): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L207](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L207): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L207](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L207): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L207](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L207): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L207](https://github.com/hyperledger/iroha/blob/2e8e17acf1ec94f743a7bb13e6478bc4ba1728f9/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L207): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-22 11:02:33,2018-02-22 11:02:33
https://api.github.com/repos/hyperledger/iroha/issues/985,https://api.github.com/repos/hyperledger/iroha/issues/comments/366870043,https://github.com/hyperledger/iroha/pull/985#issuecomment-366870043,muratovv,"Pls, pull from develop branch for passing CI. After it, I will conduct my review.",2018-02-20 05:21:43,2018-02-20 05:21:43
https://api.github.com/repos/hyperledger/iroha/issues/983,https://api.github.com/repos/hyperledger/iroha/issues/comments/366428276,https://github.com/hyperledger/iroha/pull/983#issuecomment-366428276,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/983?src=pr&el=h1) Report
> Merging [#983](https://codecov.io/gh/hyperledger/iroha/pull/983?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/77dc1ffdba11c9a88a12204a4e686f410f92eb5f?src=pr&el=desc) will **increase** coverage by `11.03%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/983/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/983?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##           develop     #983       +/-   ##
============================================
+ Coverage    32.51%   43.55%   +11.03%     
============================================
  Files          543      492       -51     
  Lines        16707    13223     -3484     
  Branches     10752     6962     -3790     
============================================
+ Hits          5433     5759      +326     
+ Misses        1394     1292      -102     
+ Partials      9880     6172     -3708
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/983?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/proposal.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Byb3Bvc2FsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [...del/cryptography/crypto\_provider/crypto\_signer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9jcnlwdG9fcHJvdmlkZXIvY3J5cHRvX3NpZ25lci5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [...ohad/model/converters/json\_transaction\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl90cmFuc2FjdGlvbl9mYWN0b3J5LmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [...l/cryptography/crypto\_provider/crypto\_verifier.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9jcnlwdG9fcHJvdmlkZXIvY3J5cHRvX3ZlcmlmaWVyLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/consensus/yac/messages.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvbWVzc2FnZXMuaHBw) | `16.66% <0%> (-65.16%)` | :arrow_down: |
| [...\_model/backend/protobuf/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-60%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `18.75% <0%> (-57.18%)` | :arrow_down: |
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (-53.85%)` | :arrow_down: |
| [.../backend/protobuf/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `0% <0%> (-53.34%)` | :arrow_down: |
| [shared\_model/bindings/model\_query\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuaHBw) | `50% <0%> (-50%)` | :arrow_down: |
| ... and [503 more](https://codecov.io/gh/hyperledger/iroha/pull/983/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/983?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/983?src=pr&el=footer). Last update [77dc1ff...e018977](https://codecov.io/gh/hyperledger/iroha/pull/983?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-17 09:11:28,2018-03-08 17:09:12
https://api.github.com/repos/hyperledger/iroha/issues/983,https://api.github.com/repos/hyperledger/iroha/issues/comments/368313300,https://github.com/hyperledger/iroha/pull/983#issuecomment-368313300,Warchant,"Build fails because of https://soramitsu.atlassian.net/browse/IR-1022. As soon as it is fixed, this PR can be merged.",2018-02-25 14:23:34,2018-02-25 14:23:34
https://api.github.com/repos/hyperledger/iroha/issues/983,https://api.github.com/repos/hyperledger/iroha/issues/comments/371554795,https://github.com/hyperledger/iroha/pull/983#issuecomment-371554795,Warchant,This PR will be split onto multiple parts.,2018-03-08 17:09:58,2018-03-08 17:09:58
https://api.github.com/repos/hyperledger/iroha/issues/983,https://api.github.com/repos/hyperledger/iroha/issues/comments/371555910,https://github.com/hyperledger/iroha/pull/983#issuecomment-371555910,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-08 17:13:21,2018-03-08 17:13:21
https://api.github.com/repos/hyperledger/iroha/issues/982,https://api.github.com/repos/hyperledger/iroha/issues/comments/366235030,https://github.com/hyperledger/iroha/pull/982#issuecomment-366235030,luckychess,At the moment shutdown() itself does not unblock waiting because signal handler works in the same thread as wait(). Your approach will work after https://github.com/hyperledger/iroha/pull/981 will be merged.,2018-02-16 13:29:00,2018-02-16 13:29:00
https://api.github.com/repos/hyperledger/iroha/issues/982,https://api.github.com/repos/hyperledger/iroha/issues/comments/366249202,https://github.com/hyperledger/iroha/pull/982#issuecomment-366249202,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/982?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@6df02be`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `37.25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/982/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/982?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #982   +/-   ##
==========================================
  Coverage           ?   31.91%           
==========================================
  Files              ?      487           
  Lines              ?    15091           
  Branches           ?     9676           
==========================================
  Hits               ?     4817           
  Misses             ?     1462           
  Partials           ?     8812
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/982?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/peer\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9wZWVyX3F1ZXJ5LmhwcA==) | `50% <ø> (ø)` | |
| [irohad/ametsuchi/impl/peer\_query\_wsv.hpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3BlZXJfcXVlcnlfd3N2LmhwcA==) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `100% <ø> (ø)` | |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `9.9% <0%> (ø)` | |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.29% <0%> (ø)` | |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `42.45% <0%> (ø)` | |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `19.67% <0%> (ø)` | |
| [irohad/ametsuchi/impl/peer\_query\_wsv.cpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3BlZXJfcXVlcnlfd3N2LmNwcA==) | `100% <100%> (ø)` | |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `74.07% <50%> (ø)` | |
| ... and [4 more](https://codecov.io/gh/hyperledger/iroha/pull/982/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/982?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/982?src=pr&el=footer). Last update [6df02be...8f0040c](https://codecov.io/gh/hyperledger/iroha/pull/982?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-16 14:25:51,2018-02-16 18:19:49
https://api.github.com/repos/hyperledger/iroha/issues/982,https://api.github.com/repos/hyperledger/iroha/issues/comments/366252509,https://github.com/hyperledger/iroha/pull/982#issuecomment-366252509,sorabot,"SonarQube analysis reported 72 issues
* ![CRITICAL][CRITICAL] 2 critical
* ![MINOR][MINOR] 2 minor
* ![INFO][INFO] 68 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L271](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/main/application.cpp#L271): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [command_service.cpp#L196](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/torii/impl/command_service.cpp#L196): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [application.cpp#L39](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/main/application.cpp#L39): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.hpp#L67](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/main/application.hpp#L67): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![INFO][INFO] [peer_query_wsv.hpp#L42](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/ametsuchi/impl/peer_query_wsv.hpp#L42): Undocumented API: PeerQueryWsv [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L36](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/ametsuchi/impl/storage_impl.hpp#L36): Undocumented API: ConnectionContext [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L37](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/ametsuchi/impl/storage_impl.hpp#L37): Undocumented API: ConnectionContext [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L41](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/ametsuchi/impl/storage_impl.hpp#L41): Undocumented API: block_store [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L42](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/ametsuchi/impl/storage_impl.hpp#L42): Undocumented API: pg_lazy [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L43](https://github.com/hyperledger/iroha/blob/8f0040ce142a08a66523cd5b32000b9ec29e5a61/irohad/ametsuchi/impl/storage_impl.hpp#L43): Undocumented API: pg_nontx [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-16 14:38:15,2018-02-16 14:38:15
https://api.github.com/repos/hyperledger/iroha/issues/982,https://api.github.com/repos/hyperledger/iroha/issues/comments/366261467,https://github.com/hyperledger/iroha/pull/982#issuecomment-366261467,luckychess,"Sorry for wrong merge, this pr is still open.
Edit: reopened at https://github.com/hyperledger/iroha/pull/987",2018-02-16 15:10:25,2018-02-16 15:38:38
https://api.github.com/repos/hyperledger/iroha/issues/981,https://api.github.com/repos/hyperledger/iroha/issues/comments/368208848,https://github.com/hyperledger/iroha/pull/981#issuecomment-368208848,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/981?src=pr&el=h1) Report
> Merging [#981](https://codecov.io/gh/hyperledger/iroha/pull/981?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/826b016e6e34e9c068dca007e97b1826bf46e9b5?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `19.17%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/981/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/981?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #981      +/-   ##
===========================================
- Coverage    33.05%   33.03%   -0.02%     
===========================================
  Files          524      525       +1     
  Lines        15978    16012      +34     
  Branches     10176    10194      +18     
===========================================
+ Hits          5281     5290       +9     
- Misses        1371     1373       +2     
- Partials      9326     9349      +23
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/981?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/server\_runner.hpp](https://codecov.io/gh/hyperledger/iroha/pull/981/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/981/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `9.96% <ø> (ø)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/981/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `8.25% <ø> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/981/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `46.61% <4.76%> (ø)` | :arrow_up: |
| [irohad/main/server\_runner.cpp](https://codecov.io/gh/hyperledger/iroha/pull/981/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5jcHA=) | `62.96% <66.66%> (+1.85%)` | :arrow_up: |
| [test/module/irohad/main/server\_runner\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/981/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21haW4vc2VydmVyX3J1bm5lcl90ZXN0LmNwcA==) | `8% <8%> (ø)` | |
| [test/integration/pipeline/test\_irohad.hpp](https://codecov.io/gh/hyperledger/iroha/pull/981/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90ZXN0X2lyb2hhZC5ocHA=) | `52% <8.33%> (+4%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/981?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/981?src=pr&el=footer). Last update [826b016...9d54a41](https://codecov.io/gh/hyperledger/iroha/pull/981?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-24 07:49:51,2018-02-24 09:39:54
https://api.github.com/repos/hyperledger/iroha/issues/981,https://api.github.com/repos/hyperledger/iroha/issues/comments/368216259,https://github.com/hyperledger/iroha/pull/981#issuecomment-368216259,sorabot,"SonarQube analysis reported 48 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 44 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L267](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/irohad/main/application.cpp#L267): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [application.cpp#L37](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/irohad/main/application.cpp#L37): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.hpp#L68](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/irohad/main/application.hpp#L68): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [torii_queries_test.cpp#L75](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/test/module/irohad/torii/torii_queries_test.cpp#L75): Class 'ToriiQueriesTest' is unsafe, 'ToriiQueriesTest::runner' can leak by wrong usage. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunsafeClassCanLeak)
1. ![INFO][INFO] [application.hpp#L98](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/irohad/main/application.hpp#L98): Undocumented API: ~ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [application.hpp#L103](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/irohad/main/application.hpp#L103): Undocumented API: initStorage [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [application.hpp#L105](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/irohad/main/application.hpp#L105): Undocumented API: initPeerQuery [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [application.hpp#L107](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/irohad/main/application.hpp#L107): Undocumented API: initCryptoProvider [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [application.hpp#L109](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/irohad/main/application.hpp#L109): Undocumented API: initValidators [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [application.hpp#L111](https://github.com/hyperledger/iroha/blob/9d54a41cddcd8cc0c3e60574e7f4e4244495a993/irohad/main/application.hpp#L111): Undocumented API: initOrderingGate [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-24 09:50:44,2018-02-24 09:50:44
https://api.github.com/repos/hyperledger/iroha/issues/981,https://api.github.com/repos/hyperledger/iroha/issues/comments/369812881,https://github.com/hyperledger/iroha/pull/981#issuecomment-369812881,lebdron,https://github.com/hyperledger/iroha/commit/0e4128a5407f7c1c565d4a42410254f6ef90ad55,2018-03-02 03:55:47,2018-03-02 03:55:47
https://api.github.com/repos/hyperledger/iroha/issues/980,https://api.github.com/repos/hyperledger/iroha/issues/comments/366158448,https://github.com/hyperledger/iroha/pull/980#issuecomment-366158448,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/980?src=pr&el=h1) Report
> Merging [#980](https://codecov.io/gh/hyperledger/iroha/pull/980?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/926f54d2948759f6858c12143675adad616d2a30?src=pr&el=desc) will **increase** coverage by `0.02%`.
> The diff coverage is `48%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/980/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/980?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #980      +/-   ##
===========================================
+ Coverage    31.92%   31.94%   +0.02%     
===========================================
  Files          493      491       -2     
  Lines        15189    15149      -40     
  Branches      9764     9730      -34     
===========================================
- Hits          4849     4840       -9     
- Misses        1430     1439       +9     
+ Partials      8910     8870      -40
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/980?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `73.07% <100%> (ø)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `37.14% <16.66%> (+24.64%)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `22.35% <37.5%> (+0.83%)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `31.08% <70%> (+10.49%)` | :arrow_up: |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `16.66% <0%> (-41.67%)` | :arrow_down: |
| [shared\_model/interfaces/commands/set\_quorum.hpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X3F1b3J1bS5ocHA=) | `0% <0%> (-35.72%)` | :arrow_down: |
| [...backend/protobuf/commands/proto\_transfer\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fdHJhbnNmZXJfYXNzZXQuaHBw) | `66.66% <0%> (-13.34%)` | :arrow_down: |
| [...d\_model/interfaces/commands/add\_asset\_quantity.hpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvYWRkX2Fzc2V0X3F1YW50aXR5LmhwcA==) | `0% <0%> (-11.77%)` | :arrow_down: |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `58.13% <0%> (-11.63%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `0% <0%> (-10%)` | :arrow_down: |
| ... and [25 more](https://codecov.io/gh/hyperledger/iroha/pull/980/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/980?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/980?src=pr&el=footer). Last update [926f54d...c65fd05](https://codecov.io/gh/hyperledger/iroha/pull/980?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-16 06:58:01,2018-02-20 01:27:38
https://api.github.com/repos/hyperledger/iroha/issues/980,https://api.github.com/repos/hyperledger/iroha/issues/comments/366843655,https://github.com/hyperledger/iroha/pull/980#issuecomment-366843655,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [integration_test_framework.cpp#L138](https://github.com/hyperledger/iroha/blob/c65fd05f7d4330956ff34a800f54f5c162bf271f/test/framework/integration_framework/integration_test_framework.cpp#L138): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L143](https://github.com/hyperledger/iroha/blob/c65fd05f7d4330956ff34a800f54f5c162bf271f/test/framework/integration_framework/integration_test_framework.cpp#L143): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![INFO][INFO] [integration_test_framework.hpp#L53](https://github.com/hyperledger/iroha/blob/c65fd05f7d4330956ff34a800f54f5c162bf271f/test/framework/integration_framework/integration_test_framework.hpp#L53): Class 'IntegrationTestFramework' has a constructor with 1 argument that is not explicit. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoExplicitConstructor)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-20 01:42:11,2018-02-20 01:42:11
https://api.github.com/repos/hyperledger/iroha/issues/979,https://api.github.com/repos/hyperledger/iroha/issues/comments/365941430,https://github.com/hyperledger/iroha/pull/979#issuecomment-365941430,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/979?src=pr&el=h1) Report
> Merging [#979](https://codecov.io/gh/hyperledger/iroha/pull/979?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0b899a0b055233dfd5889398b4090ed533156314?src=pr&el=desc) will **decrease** coverage by `1.21%`.
> The diff coverage is `31.57%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/979/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/979?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #979      +/-   ##
===========================================
- Coverage    33.07%   31.86%   -1.22%     
===========================================
  Files          524      491      -33     
  Lines        15984    15144     -840     
  Branches     10176     9735     -441     
===========================================
- Hits          5287     4825     -462     
- Misses        1371     1439      +68     
+ Partials      9326     8880     -446
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/979?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/temporary\_wsv.hpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS90ZW1wb3Jhcnlfd3N2LmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `64.06% <0%> (-1.57%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `34.21% <18.18%> (-9.54%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `58.97% <57.14%> (+13.14%)` | :arrow_up: |
| [...\_model/backend/protobuf/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-66.67%)` | :arrow_down: |
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (-61.54%)` | :arrow_down: |
| [.../backend/protobuf/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `0% <0%> (-60%)` | :arrow_down: |
| [...ackend/protobuf/queries/proto\_get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfdHJhbnNhY3Rpb25zLmhwcA==) | `16.66% <0%> (-58.34%)` | :arrow_down: |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `16.66% <0%> (-41.67%)` | :arrow_down: |
| [...ed\_model/interfaces/queries/get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldHMuaHBw) | `0% <0%> (-38.47%)` | :arrow_down: |
| ... and [117 more](https://codecov.io/gh/hyperledger/iroha/pull/979/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/979?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/979?src=pr&el=footer). Last update [0b899a0...af95300](https://codecov.io/gh/hyperledger/iroha/pull/979?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-15 14:23:09,2018-02-24 19:25:03
https://api.github.com/repos/hyperledger/iroha/issues/979,https://api.github.com/repos/hyperledger/iroha/issues/comments/367640039,https://github.com/hyperledger/iroha/pull/979#issuecomment-367640039,sorabot,"SonarQube analysis reported 3 issues

1. ![INFO][INFO] [temporary_wsv_impl.hpp#L34](https://github.com/hyperledger/iroha/blob/f97ad92379b55d93f9497e75b1a3aaec29c61323/irohad/ametsuchi/impl/temporary_wsv_impl.hpp#L34): Undocumented API: TemporaryWsvImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [temporary_wsv_impl.hpp#L36](https://github.com/hyperledger/iroha/blob/f97ad92379b55d93f9497e75b1a3aaec29c61323/irohad/ametsuchi/impl/temporary_wsv_impl.hpp#L36): Undocumented API: TemporaryWsvImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [stateful_validator_impl.cpp#L82](https://github.com/hyperledger/iroha/blob/f97ad92379b55d93f9497e75b1a3aaec29c61323/irohad/validation/impl/stateful_validator_impl.cpp#L82): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-22 10:37:08,2018-02-22 10:37:08
https://api.github.com/repos/hyperledger/iroha/issues/978,https://api.github.com/repos/hyperledger/iroha/issues/comments/366190611,https://github.com/hyperledger/iroha/pull/978#issuecomment-366190611,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/978?src=pr&el=h1) Report
> Merging [#978](https://codecov.io/gh/hyperledger/iroha/pull/978?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/9f5a13ebc5b2f77f25db2246e6d9eeb145e21954?src=pr&el=desc) will **decrease** coverage by `0.1%`.
> The diff coverage is `9.61%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/978/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/978?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #978      +/-   ##
===========================================
- Coverage    33.06%   32.96%   -0.11%     
===========================================
  Files          524      524              
  Lines        15990    16067      +77     
  Branches     10182    10255      +73     
===========================================
+ Hits          5287     5296       +9     
+ Misses        1371     1366       -5     
- Partials      9332     9405      +73
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/978?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/peer\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9wZWVyX3F1ZXJ5LmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/peer\_query\_wsv.hpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3BlZXJfcXVlcnlfd3N2LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/network/block\_loader\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyX3Rlc3QuY3Bw) | `7.14% <0%> (-2.75%)` | :arrow_down: |
| [...ule/irohad/ordering/ordering\_gate\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfc2VydmljZV90ZXN0LmNwcA==) | `26.01% <0%> (-1.81%)` | :arrow_down: |
| [...t/module/irohad/ordering/ordering\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX3NlcnZpY2VfdGVzdC5jcHA=) | `29.76% <0%> (-3.14%)` | :arrow_down: |
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `51.42% <0%> (ø)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `47.82% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `65.62% <100%> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/peer\_orderer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9wZWVyX29yZGVyZXJfaW1wbC5jcHA=) | `33.33% <15.38%> (-8.34%)` | :arrow_down: |
| [irohad/ametsuchi/impl/peer\_query\_wsv.cpp](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3BlZXJfcXVlcnlfd3N2LmNwcA==) | `33.33% <20%> (-66.67%)` | :arrow_down: |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/978/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/978?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/978?src=pr&el=footer). Last update [9f5a13e...300e7db](https://codecov.io/gh/hyperledger/iroha/pull/978?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-16 09:54:02,2018-02-27 13:24:53
https://api.github.com/repos/hyperledger/iroha/issues/978,https://api.github.com/repos/hyperledger/iroha/issues/comments/368877933,https://github.com/hyperledger/iroha/pull/978#issuecomment-368877933,sorabot,"SonarQube analysis reported 2 issues

1. ![INFO][INFO] [peer_query_wsv.hpp#L36](https://github.com/hyperledger/iroha/blob/300e7db982c1cc8efed196e4adde105222158e75/irohad/ametsuchi/impl/peer_query_wsv.hpp#L36): Undocumented API: PeerQueryWsv [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [peer_query.hpp#L39](https://github.com/hyperledger/iroha/blob/300e7db982c1cc8efed196e4adde105222158e75/irohad/ametsuchi/peer_query.hpp#L39): Undocumented API: wPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-27 13:40:19,2018-02-27 13:40:19
https://api.github.com/repos/hyperledger/iroha/issues/977,https://api.github.com/repos/hyperledger/iroha/issues/comments/375577468,https://github.com/hyperledger/iroha/pull/977#issuecomment-375577468,lebdron,"As package should be set as parameter as it is done in https://github.com/hyperledger/iroha/pull/1073 , and as @l4l noted that it is only done in Java, this change will be done in a separate task.",2018-03-23 08:23:34,2018-03-23 08:23:34
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/365516018,https://github.com/hyperledger/iroha/issues/976#issuecomment-365516018,muratovv,"I think we need focus on roles of documentation consumers. Such as if u are a newcomer and want to look at the basic functionality - one documentation, you are interested to deploy the system in the production - another documentation.

In this case, need to clarify the consumers and make the focus on it.",2018-02-14 07:11:57,2018-02-14 07:11:57
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/365516357,https://github.com/hyperledger/iroha/issues/976#issuecomment-365516357,muratovv,"Also, keep in mind that this documentation will store in the Iroha's repository and there are possible to make cross-references for code documentation and vice versa.",2018-02-14 07:13:50,2018-02-14 07:13:50
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/365520216,https://github.com/hyperledger/iroha/issues/976#issuecomment-365520216,lebdron,"As it was said above, it would be great if a person can have a section based on his intentions. Please also consider the following structure:
```
* API documentation
 - C++ API
 - Java API
 - Python API
 - Node.JS API
 - C# API
 - Endpoints
 
* Iroha guide
 - Install
 - Single peer
 - Cluster

* Business logic (use cases)
 - Simple example
 - List of use cases...
 - Glossary: Description of commands and validations
 
* Contribution
 - Policy (code style, pr application, working agreement)
 - Architecture documentation
 - DevOps documentation
 
* Contact us
 - github issues
 - telegram
 - mailing list
 - gitter
 - rocket chat
```
References:
https://ripple.com/build/
https://www.stellar.org/developers/",2018-02-14 07:35:33,2018-02-14 07:35:33
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/365520888,https://github.com/hyperledger/iroha/issues/976#issuecomment-365520888,l4l,"Would be nice to add a section for iroha-cli/irohad usage with examples (not as detailed in as in devops section, and not as ""high-level"" as in getting started)",2018-02-14 07:39:32,2018-02-14 07:39:32
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/365568177,https://github.com/hyperledger/iroha/issues/976#issuecomment-365568177,takemiyamakoto,"I recommend a ""quick start"" section at the very top. People often want to test a ledger by setting it up on 1 or 4 machines, register 2 accounts, create an asset, then transfer between the two. Many people want to use that flow to evaluate a system at first, so it makes sense to explain that at the very top so we create interest for many people.",2018-02-14 10:57:42,2018-02-14 10:57:42
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/366847092,https://github.com/hyperledger/iroha/issues/976#issuecomment-366847092,neewy,@grimadas can you please summarise those changes and present a finalised version of docs which we will implement with next release?,2018-02-20 02:07:17,2018-02-20 02:07:17
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/366847519,https://github.com/hyperledger/iroha/issues/976#issuecomment-366847519,neewy,I guess we need to finish this work in 2 days (present the structure),2018-02-20 02:10:52,2018-02-20 02:10:52
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/367532484,https://github.com/hyperledger/iroha/issues/976#issuecomment-367532484,neewy,"> Relationship to Fabric and Sawtooth Lake

why only them?

> Contribution
> …
> Architecture documentation

why architecture is in contribution? @lebdron @muratovv Architectural & design documents are a big part of the project and I am not sure what exactly you want to see there. Can you specify?",2018-02-22 01:04:56,2018-02-22 01:04:56
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/368379815,https://github.com/hyperledger/iroha/issues/976#issuecomment-368379815,neewy,Do we have a glossary section?,2018-02-26 03:25:52,2018-02-26 03:25:52
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/368385039,https://github.com/hyperledger/iroha/issues/976#issuecomment-368385039,grimadas,"We can put glossary in iroha core concepts, they pretty much the same. 
>> Relationship to Fabric and Sawtooth Lake

> why only them?

As they are the in the same Hyperledger initiative, many questions are related to the comparison of Iroha and Fabric. We can discuss more, compare to all other systems in whitepaper. 

>> Contribution
>> …
>> Architecture documentation

>why architecture is in contribution? @lebdron @muratovv Architectural & design documents are a big part of the project and I am not sure what exactly you want to see there. Can you specify?

As I understand, this architecture (more of internal documentation) from developer and contributer point of view.  We can also put  a link  to internal documentations, and project (directory) structure here. ",2018-02-26 04:10:20,2018-02-26 04:10:20
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/368385592,https://github.com/hyperledger/iroha/issues/976#issuecomment-368385592,neewy,Ok!,2018-02-26 04:15:20,2018-02-26 04:15:20
https://api.github.com/repos/hyperledger/iroha/issues/976,https://api.github.com/repos/hyperledger/iroha/issues/comments/368386584,https://github.com/hyperledger/iroha/issues/976#issuecomment-368386584,grimadas,Lets fix for now the documentation structure and start writing them ,2018-02-26 04:23:49,2018-02-26 04:23:49
https://api.github.com/repos/hyperledger/iroha/issues/975,https://api.github.com/repos/hyperledger/iroha/issues/comments/365507770,https://github.com/hyperledger/iroha/issues/975#issuecomment-365507770,l4l,"[Quote should do](http://pqxx.org/devprojects/libpqxx/doc/4.0/html/Reference/a00203.html#ga81fe65fbb9561af7c5f0b33a9fe27e5a) the thing, `""` are actually redundant

Just tested a few cases, both won't accepted by psql and escaped (raw string -> after quote):
`24\""` -> `'""24""""'`
`24\""\'` -> `'""24""''""'`",2018-02-14 06:19:07,2018-02-14 06:20:42
https://api.github.com/repos/hyperledger/iroha/issues/975,https://api.github.com/repos/hyperledger/iroha/issues/comments/365508211,https://github.com/hyperledger/iroha/issues/975#issuecomment-365508211,takemiyamakoto,"What if someone tries to write: ```{'id':'100','name':'Arnold','surname':'Schwarzenegger'}```?",2018-02-14 06:22:20,2018-02-14 06:22:20
https://api.github.com/repos/hyperledger/iroha/issues/975,https://api.github.com/repos/hyperledger/iroha/issues/comments/365509390,https://github.com/hyperledger/iroha/issues/975#issuecomment-365509390,l4l,"> What if someone tries to write: ```{'id':'100','name':'Arnold','surname':'Schwarzenegger'}```?

Not sure how is it quoted, but it insterted in the db as intended:
![screenshot_20180214_092746](https://user-images.githubusercontent.com/5658339/36190473-9ba6c566-1169-11e8-929c-e26fc1bd5a4b.png)
",2018-02-14 06:30:13,2018-02-14 06:30:13
https://api.github.com/repos/hyperledger/iroha/issues/975,https://api.github.com/repos/hyperledger/iroha/issues/comments/365531638,https://github.com/hyperledger/iroha/issues/975#issuecomment-365531638,Octarine-J,"Please note that our JSON string in the example contains double quotes ( "" ) not single quotes ( ' ).
You probably won't be able to successfully execute setAccountDetail(""\\"""").",2018-02-14 08:33:06,2018-02-14 08:33:23
https://api.github.com/repos/hyperledger/iroha/issues/975,https://api.github.com/repos/hyperledger/iroha/issues/comments/371806377,https://github.com/hyperledger/iroha/issues/975#issuecomment-371806377,Warchant,No visible activity. Closing.,2018-03-09 13:02:20,2018-03-09 13:02:20
https://api.github.com/repos/hyperledger/iroha/issues/974,https://api.github.com/repos/hyperledger/iroha/issues/comments/365461215,https://github.com/hyperledger/iroha/pull/974#issuecomment-365461215,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/974?src=pr&el=h1) Report
> Merging [#974](https://codecov.io/gh/hyperledger/iroha/pull/974?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/dfc70a1af1610e3a72c56b69e3d2dff24e19d74d?src=pr&el=desc) will **increase** coverage by `0.29%`.
> The diff coverage is `44.48%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/974/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/974?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #974      +/-   ##
===========================================
+ Coverage    32.17%   32.46%   +0.29%     
===========================================
  Files          494      515      +21     
  Lines        15283    15594     +311     
  Branches      9792     9956     +164     
===========================================
+ Hits          4917     5063     +146     
- Misses        1431     1439       +8     
- Partials      8935     9092     +157
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/974?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `61.53% <ø> (+61.53%)` | :arrow_up: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `44.57% <ø> (+2.18%)` | :arrow_up: |
| [...uf/common\_objects/proto\_signature\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX3NpZ25hdHVyZV9idWlsZGVyX3Rlc3QuY3Bw) | `0% <0%> (ø)` | |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `64.06% <0%> (ø)` | :arrow_up: |
| [...rotobuf/common\_objects/proto\_peer\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX3BlZXJfYnVpbGRlcl90ZXN0LmNwcA==) | `12% <12%> (ø)` | |
| [...ommon\_objects/proto\_account\_asset\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2NvbW1vbl9vYmplY3RzL3Byb3RvX2FjY291bnRfYXNzZXRfYnVpbGRlcl90ZXN0LmNwcA==) | `16% <16%> (ø)` | |
| [...builders/common\_objects/signature\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL3NpZ25hdHVyZV9idWlsZGVyX3Rlc3QuY3Bw) | `16.66% <16.66%> (ø)` | |
| [shared\_model/builders/common\_objects/common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL2NvbW1vbi5ocHA=) | `18.18% <18.18%> (ø)` | |
| [...ders/common\_objects/account\_asset\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL2FjY291bnRfYXNzZXRfYnVpbGRlcl90ZXN0LmNwcA==) | `24.24% <24.24%> (ø)` | |
| [...odel/builders/common\_objects/peer\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL3BlZXJfYnVpbGRlcl90ZXN0LmNwcA==) | `26.08% <26.08%> (ø)` | |
| ... and [116 more](https://codecov.io/gh/hyperledger/iroha/pull/974/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/974?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/974?src=pr&el=footer). Last update [dfc70a1...d634732](https://codecov.io/gh/hyperledger/iroha/pull/974?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-14 01:07:56,2018-02-22 15:05:17
https://api.github.com/repos/hyperledger/iroha/issues/974,https://api.github.com/repos/hyperledger/iroha/issues/comments/367685947,https://github.com/hyperledger/iroha/pull/974#issuecomment-367685947,sorabot,"SonarQube analysis reported 61 issues
* ![INFO][INFO] 61 info

#### Top 10 issues

1. ![INFO][INFO] [asset.hpp#L30](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/backend/protobuf/common_objects/asset.hpp#L30): Undocumented API: Asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [asset.hpp#L35](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/backend/protobuf/common_objects/asset.hpp#L35): Undocumented API: Asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [asset.hpp#L39](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/backend/protobuf/common_objects/asset.hpp#L39): Undocumented API: Asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [asset.hpp#L41](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/backend/protobuf/common_objects/asset.hpp#L41): Undocumented API: Asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_asset_builder.hpp#L24](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/builders/common_objects/account_asset_builder.hpp#L24): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [account_asset_builder.hpp#L43](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/builders/common_objects/account_asset_builder.hpp#L43): Undocumented API: accountId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_asset_builder.hpp#L49](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/builders/common_objects/account_asset_builder.hpp#L49): Undocumented API: assetId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_asset_builder.hpp#L55](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/builders/common_objects/account_asset_builder.hpp#L55): Undocumented API: balance [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_builder.hpp#L24](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/builders/common_objects/account_builder.hpp#L24): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [account_builder.hpp#L42](https://github.com/hyperledger/iroha/blob/3fba5e924dc10896031e0a9454c855999ff66aa3/shared_model/builders/common_objects/account_builder.hpp#L42): Undocumented API: accountId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-22 13:48:46,2018-02-22 13:48:46
https://api.github.com/repos/hyperledger/iroha/issues/973,https://api.github.com/repos/hyperledger/iroha/issues/comments/365393419,https://github.com/hyperledger/iroha/pull/973#issuecomment-365393419,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/973?src=pr&el=h1) Report
> Merging [#973](https://codecov.io/gh/hyperledger/iroha/pull/973?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/821f237e998d6c38b8e02a3cc9ca769deb06cae8?src=pr&el=desc) will **increase** coverage by `0.04%`.
> The diff coverage is `63.15%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/973/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/973?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #973      +/-   ##
===========================================
+ Coverage    31.87%   31.91%   +0.04%     
===========================================
  Files          488      488              
  Lines        15058    15073      +15     
  Branches      9660     9667       +7     
===========================================
+ Hits          4800     4811      +11     
  Misses        1469     1469              
- Partials      8789     8793       +4
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/973?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/proposal.hpp](https://codecov.io/gh/hyperledger/iroha/pull/973/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Byb3Bvc2FsLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/impl/model\_operators.cpp](https://codecov.io/gh/hyperledger/iroha/pull/973/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvbW9kZWxfb3BlcmF0b3JzLmNwcA==) | `34.67% <0%> (-0.29%)` | :arrow_down: |
| [.../ordering/impl/ordering\_service\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/973/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `54.16% <100%> (+1.99%)` | :arrow_up: |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/973/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `46.15% <100%> (+2.15%)` | :arrow_up: |
| [irohad/simulator/impl/simulator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/973/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9pbXBsL3NpbXVsYXRvci5jcHA=) | `43.75% <100%> (ø)` | :arrow_up: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/973/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `70.27% <100%> (+0.82%)` | :arrow_up: |
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/973/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `62.5% <100%> (+1.2%)` | :arrow_up: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/973/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `37.7% <58.33%> (+6.33%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/973?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/973?src=pr&el=footer). Last update [821f237...e2220c0](https://codecov.io/gh/hyperledger/iroha/pull/973?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-13 20:27:16,2018-02-14 23:54:28
https://api.github.com/repos/hyperledger/iroha/issues/973,https://api.github.com/repos/hyperledger/iroha/issues/comments/365786726,https://github.com/hyperledger/iroha/pull/973#issuecomment-365786726,sorabot,"SonarQube analysis reported 9 issues

1. ![INFO][INFO] [proposal.hpp#L34](https://github.com/hyperledger/iroha/blob/e2220c07602c7c9bc11bc2e5878aececcc43150e/irohad/model/proposal.hpp#L34): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L53](https://github.com/hyperledger/iroha/blob/e2220c07602c7c9bc11bc2e5878aececcc43150e/irohad/model/proposal.hpp#L53): Undocumented API: operator== [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L54](https://github.com/hyperledger/iroha/blob/e2220c07602c7c9bc11bc2e5878aececcc43150e/irohad/model/proposal.hpp#L54): Undocumented API: operator!= [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [simulator.cpp#L71](https://github.com/hyperledger/iroha/blob/e2220c07602c7c9bc11bc2e5878aececcc43150e/irohad/simulator/impl/simulator.cpp#L71): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [stateful_validator_impl.cpp#L80](https://github.com/hyperledger/iroha/blob/e2220c07602c7c9bc11bc2e5878aececcc43150e/irohad/validation/impl/stateful_validator_impl.cpp#L80): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [from_old_model.hpp#L36](https://github.com/hyperledger/iroha/blob/e2220c07602c7c9bc11bc2e5878aececcc43150e/shared_model/backend/protobuf/from_old_model.hpp#L36): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [from_old_model.hpp#L42](https://github.com/hyperledger/iroha/blob/e2220c07602c7c9bc11bc2e5878aececcc43150e/shared_model/backend/protobuf/from_old_model.hpp#L42): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [from_old_model.hpp#L48](https://github.com/hyperledger/iroha/blob/e2220c07602c7c9bc11bc2e5878aececcc43150e/shared_model/backend/protobuf/from_old_model.hpp#L48): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [from_old_model.hpp#L55](https://github.com/hyperledger/iroha/blob/e2220c07602c7c9bc11bc2e5878aececcc43150e/shared_model/backend/protobuf/from_old_model.hpp#L55): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-15 00:06:24,2018-02-15 00:06:24
https://api.github.com/repos/hyperledger/iroha/issues/972,https://api.github.com/repos/hyperledger/iroha/issues/comments/365511377,https://github.com/hyperledger/iroha/pull/972#issuecomment-365511377,muratovv,"Also, need to write tests for changing in protobuf.",2018-02-14 06:42:35,2018-02-14 06:42:35
https://api.github.com/repos/hyperledger/iroha/issues/972,https://api.github.com/repos/hyperledger/iroha/issues/comments/365624086,https://github.com/hyperledger/iroha/pull/972#issuecomment-365624086,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/972?src=pr&el=h1) Report
> Merging [#972](https://codecov.io/gh/hyperledger/iroha/pull/972?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/dcb7c4a203cb6d243806ec7f96d856dce3b11c25?src=pr&el=desc) will **increase** coverage by `0.03%`.
> The diff coverage is `25.75%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/972/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/972?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #972      +/-   ##
===========================================
+ Coverage    32.55%   32.58%   +0.03%     
===========================================
  Files          541      539       -2     
  Lines        16663    16623      -40     
  Branches     10724    10693      -31     
===========================================
- Hits          5424     5417       -7     
- Misses        1378     1379       +1     
+ Partials      9861     9827      -34
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/972?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/validation/impl/chain\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9jaGFpbl92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/supermajority\_checker.hpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3VwZXJtYWpvcml0eV9jaGVja2VyLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/validation/chain\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdG9yLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [.../consensus/yac/impl/supermajority\_checker\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9zdXBlcm1ham9yaXR5X2NoZWNrZXJfaW1wbC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX21vY2tzLmhwcA==) | `41.77% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/mutable\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9tdXRhYmxlX3N0b3JhZ2UuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `35% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/validation/validation\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vdmFsaWRhdGlvbl9tb2Nrcy5ocHA=) | `40% <0%> (ø)` | :arrow_up: |
| [shared\_model/builders/common\_objects/common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL2NvbW1vbl9vYmplY3RzL2NvbW1vbi5ocHA=) | `18.18% <0%> (ø)` | :arrow_up: |
| ... and [14 more](https://codecov.io/gh/hyperledger/iroha/pull/972/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/972?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/972?src=pr&el=footer). Last update [dcb7c4a...4c43940](https://codecov.io/gh/hyperledger/iroha/pull/972?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-14 14:30:56,2018-03-07 09:08:25
https://api.github.com/repos/hyperledger/iroha/issues/972,https://api.github.com/repos/hyperledger/iroha/issues/comments/369598609,https://github.com/hyperledger/iroha/pull/972#issuecomment-369598609,sorabot,"SonarQube analysis reported 62 issues
* ![CRITICAL][CRITICAL] 2 critical
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 11 minor
* ![INFO][INFO] 48 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L244](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/irohad/main/application.cpp#L244): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L603](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/irohad/model/converters/impl/pb_command_factory.cpp#L603): The Cyclomatic Complexity of this function is 17 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MAJOR][MAJOR] [pb_command_factory.cpp#L147](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/irohad/model/converters/impl/pb_command_factory.cpp#L147): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L45): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [yac_block_storage.cpp#L66](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/irohad/consensus/yac/storage/impl/yac_block_storage.cpp#L66): Unused variable: supermajority_checker [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [application.cpp#L38](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/irohad/main/application.cpp#L38): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L218](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L218): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L218](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L218): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L218](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L218): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L218](https://github.com/hyperledger/iroha/blob/c0f32a738e3abf0bb1acc9326eedd949898d0d44/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L218): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-01 13:56:09,2018-03-01 13:56:09
https://api.github.com/repos/hyperledger/iroha/issues/970,https://api.github.com/repos/hyperledger/iroha/issues/comments/365263914,https://github.com/hyperledger/iroha/pull/970#issuecomment-365263914,sorabot,"SonarQube analysis reported 5 issues

1. ![CRITICAL][CRITICAL] [command_service.cpp#L223](https://github.com/hyperledger/iroha/blob/599e63a3b478f30102875f205a790023ff5e0e4e/irohad/torii/impl/command_service.cpp#L223): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![INFO][INFO] [command_service.cpp#L96](https://github.com/hyperledger/iroha/blob/599e63a3b478f30102875f205a790023ff5e0e4e/irohad/torii/impl/command_service.cpp#L96): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [hash.hpp#L34](https://github.com/hyperledger/iroha/blob/599e63a3b478f30102875f205a790023ff5e0e4e/shared_model/cryptography/hash.hpp#L34): Undocumented API: Hasher [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L35](https://github.com/hyperledger/iroha/blob/599e63a3b478f30102875f205a790023ff5e0e4e/shared_model/cryptography/hash.hpp#L35): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L46](https://github.com/hyperledger/iroha/blob/599e63a3b478f30102875f205a790023ff5e0e4e/shared_model/cryptography/hash.hpp#L46): Undocumented API: Hash [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-13 13:18:11,2018-02-13 13:18:11
https://api.github.com/repos/hyperledger/iroha/issues/970,https://api.github.com/repos/hyperledger/iroha/issues/comments/365697287,https://github.com/hyperledger/iroha/pull/970#issuecomment-365697287,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/970?src=pr&el=h1) Report
> Merging [#970](https://codecov.io/gh/hyperledger/iroha/pull/970?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c14e0d851a70813e3d7b74705cff7b070f7acc07?src=pr&el=desc) will **decrease** coverage by `0.1%`.
> The diff coverage is `18.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/970/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/970?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #970      +/-   ##
===========================================
- Coverage    31.83%   31.72%   -0.11%     
===========================================
  Files          491      488       -3     
  Lines        15134    14946     -188     
  Branches      9723     9643      -80     
===========================================
- Hits          4818     4742      -76     
+ Misses        1461     1401      -60     
+ Partials      8855     8803      -52
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/970?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `18.42% <0%> (-0.94%)` | :arrow_down: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `9.37% <0%> (-1.83%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `44.57% <0%> (ø)` | :arrow_up: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `41.52% <21.87%> (-0.93%)` | :arrow_down: |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `54.54% <80%> (+37.87%)` | :arrow_up: |
| [...buf/query\_responses/proto\_error\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2Vycm9yX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `18.18% <0%> (-56.82%)` | :arrow_down: |
| [shared\_model/interfaces/base/hashable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9oYXNoYWJsZS5ocHA=) | `28.57% <0%> (-28.58%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `32.17% <0%> (-7.98%)` | :arrow_down: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `31.37% <0%> (-6.34%)` | :arrow_down: |
| ... and [47 more](https://codecov.io/gh/hyperledger/iroha/pull/970/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/970?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/970?src=pr&el=footer). Last update [c14e0d8...9fed30c](https://codecov.io/gh/hyperledger/iroha/pull/970?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-14 18:18:02,2018-02-15 11:20:42
https://api.github.com/repos/hyperledger/iroha/issues/969,https://api.github.com/repos/hyperledger/iroha/issues/comments/365225960,https://github.com/hyperledger/iroha/pull/969#issuecomment-365225960,l4l,And also add cleaning up the database on TearDown,2018-02-13 10:48:35,2018-02-13 10:48:35
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/365167921,https://github.com/hyperledger/iroha/pull/968#issuecomment-365167921,neewy,Can you change the target to be develop?,2018-02-13 06:53:05,2018-02-13 06:53:05
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/365171798,https://github.com/hyperledger/iroha/pull/968#issuecomment-365171798,elopio,@neewy done and done. Thanks for taking a look!,2018-02-13 07:15:04,2018-02-13 07:15:04
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/369888342,https://github.com/hyperledger/iroha/pull/968#issuecomment-369888342,Warchant,"@elopio Thank you for your contribution. 

However, we can not setup snapcraft for Iroha, it prints this error:

![image](https://user-images.githubusercontent.com/1867551/36895423-81d17838-1e17-11e8-93b9-b9dbd56f1dad.png)

Is it possible that someone else owns name `iroha` and therefore it does not want to register this name?",2018-03-02 10:45:58,2018-03-02 10:45:58
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/369970101,https://github.com/hyperledger/iroha/pull/968#issuecomment-369970101,elopio,"Hey @Warchant! The name iroha in the store was registered by an email address that starts with
`warchant`. Was that you? No revision has been pushed on that account, so I can transfer it without problems. You just have to click that link that says ""file a claim"" and fill the form.",2018-03-02 16:19:07,2018-03-02 16:19:16
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/370024584,https://github.com/hyperledger/iroha/pull/968#issuecomment-370024584,Warchant,"@elopio This is interesting! Now I see in my profile `hyperledger/iroha`. Back in time, when I tried to add it, the checkbox was gray (I am not hyperledger admin, so I don't have enough permissions to add repo).

I will ask @ryjones to fill the form for claim.

UPD: also I see ""Remove"" button but can not actually remove it, button just does not work:
![image](https://user-images.githubusercontent.com/1867551/36917522-b6430896-1e5f-11e8-881e-37f1d9ca7216.png)

UPD2: I am getting ""Internal Server Error - 500"" at build.snapcraft.io. Server returns page 1 of 3 times or so.
![image](https://user-images.githubusercontent.com/1867551/36918604-18266168-1e63-11e8-9a93-51fcb3994bf0.png)

",2018-03-02 19:19:16,2018-03-02 19:46:44
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/370029384,https://github.com/hyperledger/iroha/pull/968#issuecomment-370029384,elopio,"That's very weird, it works for me.

If you keep getting errors, can you please report it on https://forum.snapcraft.io/ ?

We are all traveling today and tomorrow for a big company sprint, so it might take some time to reply. But, the good thing is that starting on monday we'll all be together, so any issue you still have will take no time to get it solved. It would be awesome if you start releasing next week, we could even talk to our marketing team there to highlight your project in the store, our website and our social media.",2018-03-02 19:36:11,2018-03-02 19:36:11
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/370042021,https://github.com/hyperledger/iroha/pull/968#issuecomment-370042021,l4l,"DCO seems broken, could you fix that?",2018-03-02 20:23:37,2018-03-02 20:23:52
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/370047712,https://github.com/hyperledger/iroha/pull/968#issuecomment-370047712,Warchant,"@l4l DCO is buggy: 
when you add `Leo Arias <leo.arias@canonical.com>`, it expects `elopio <yo@elopio.net>`, and vice versa.",2018-03-02 20:46:58,2018-03-02 20:49:18
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/370135085,https://github.com/hyperledger/iroha/pull/968#issuecomment-370135085,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/968?src=pr&el=h1) Report
> Merging [#968](https://codecov.io/gh/hyperledger/iroha/pull/968?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/164ec3e4e2281801cb89219b312ba4f2d2bb218b?src=pr&el=desc) will **increase** coverage by `0.24%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/968/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/968?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #968      +/-   ##
==========================================
+ Coverage    32.55%   32.8%   +0.24%     
==========================================
  Files          541     523      -18     
  Lines        16663   16033     -630     
  Branches     10724   10258     -466     
==========================================
- Hits          5424    5259     -165     
+ Misses        1378    1366      -12     
+ Partials      9861    9408     -453
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/968?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (-46.16%)` | :arrow_down: |
| [shared\_model/interfaces/commands/append\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvYXBwZW5kX3JvbGUuaHBw) | `0% <0%> (-38.47%)` | :arrow_down: |
| [...d\_model/interfaces/commands/set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `0% <0%> (-37.5%)` | :arrow_down: |
| [shared\_model/interfaces/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (-37.5%)` | :arrow_down: |
| [shared\_model/interfaces/commands/add\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvYWRkX3NpZ25hdG9yeS5ocHA=) | `0% <0%> (-30.77%)` | :arrow_down: |
| [...red\_model/interfaces/commands/remove\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvcmVtb3ZlX3NpZ25hdG9yeS5ocHA=) | `0% <0%> (-30.77%)` | :arrow_down: |
| [shared\_model/interfaces/base/primitive.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9wcmltaXRpdmUuaHBw) | `0% <0%> (-28.58%)` | :arrow_down: |
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `73.07% <0%> (-26.93%)` | :arrow_down: |
| [shared\_model/interfaces/base/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9zaWduYWJsZS5ocHA=) | `0% <0%> (-20%)` | :arrow_down: |
| ... and [131 more](https://codecov.io/gh/hyperledger/iroha/pull/968/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/968?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/968?src=pr&el=footer). Last update [164ec3e...1d132df](https://codecov.io/gh/hyperledger/iroha/pull/968?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-03-03 09:51:35,2018-03-10 10:58:28
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/370150946,https://github.com/hyperledger/iroha/pull/968#issuecomment-370150946,elopio,@ryjones you should have the name now. Please let me know if you find any other problems.,2018-03-03 14:22:20,2018-03-03 14:22:20
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/370169831,https://github.com/hyperledger/iroha/pull/968#issuecomment-370169831,ryjones,@Warchant @elopio It shows up in my account. It looks like I'm waiting for this change to be merged for the next step?,2018-03-03 18:38:38,2018-03-03 18:38:38
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/370768123,https://github.com/hyperledger/iroha/pull/968#issuecomment-370768123,elopio,"@ryjones yes. Once the snapcraft.yaml is on the branch, build.snapcraft.io will be able to build and push to edge on every change.",2018-03-06 12:37:02,2018-03-06 12:37:02
https://api.github.com/repos/hyperledger/iroha/issues/968,https://api.github.com/repos/hyperledger/iroha/issues/comments/372019505,https://github.com/hyperledger/iroha/pull/968#issuecomment-372019505,Warchant,"Webhooks work, build works, PR is ready to be merged.",2018-03-10 10:25:21,2018-03-10 10:25:21
https://api.github.com/repos/hyperledger/iroha/issues/967,https://api.github.com/repos/hyperledger/iroha/issues/comments/365156659,https://github.com/hyperledger/iroha/issues/967#issuecomment-365156659,grimadas,"What are the implications of moving ordering to consensus, it will be tightly connected to consensus ? The rest LGTM",2018-02-13 05:37:29,2018-02-13 05:37:29
https://api.github.com/repos/hyperledger/iroha/issues/967,https://api.github.com/repos/hyperledger/iroha/issues/comments/365161597,https://github.com/hyperledger/iroha/issues/967#issuecomment-365161597,Alexey-N-Chernyshov,Great idea. I think it will significantly improve the comprehensiveness of documentation.,2018-02-13 06:13:06,2018-02-13 06:13:06
https://api.github.com/repos/hyperledger/iroha/issues/967,https://api.github.com/repos/hyperledger/iroha/issues/comments/365215540,https://github.com/hyperledger/iroha/issues/967#issuecomment-365215540,l4l,"## Project structure

* cmake/README.md

I think it's better to describe an overall picture here as long as we may frequently change dependencies and forgot to update readme file (at least for beginning)

* network
* ordering

That dirs (at least its components) often confuses me, looks like mixed files up here:
![screenshot_20180213_124042](https://user-images.githubusercontent.com/5658339/36143100-30103ce6-10bb-11e8-9b53-2aa902c29fde.png)


* irohad/consensus/YAC

Imo lowercase for `YAC` dir is more consistent

* shared_model/

I don't really like (or maybe understand) that name. What the meaning of `shared` here? Imo it's better name it just as `model` (, or also can be suitable: `objects`, `types`, `entities`)

* shared_model/
    * bindings
    * builders
    * converters
    * interfaces
    * utils
    * validators

These directory names are plurals, and it's quite inconsistent with the `irohad/*` directories. Quick search on the web shows plural (instead of singular) is more preferred by devs.

* test

Not really clear what should be written here. Imo that can be omitted

* scripts

Seems that it's missing here. Imo `README` should be here, based on docs files. Then it possible to move the rest of the files in docs to the `INSTALLING` file at the root

## Docs description

* readme
Would be nice to add *why* that component required, its purposes, etc
Not sure it's needed *how it works* section. Can be problems on updating
Advice to introduction to the component* - not clear for me, may you explain a bit?

* readthedocs

Should be self-sustained, thus include installation, launching, etc. End-users won't read the docs at the code base, it's only for devs/contributors
*presentations* - link to the additional materials maybe?


&nbsp;

The rest looks good",2018-02-13 10:08:44,2018-02-13 10:08:44
https://api.github.com/repos/hyperledger/iroha/issues/967,https://api.github.com/repos/hyperledger/iroha/issues/comments/365231195,https://github.com/hyperledger/iroha/issues/967#issuecomment-365231195,muratovv,"@grimadas In fact, ordering is the part of a consensus algorithm and in this case, it will be more consistent with architecture what we have.",2018-02-13 11:02:13,2018-02-13 11:02:13
https://api.github.com/repos/hyperledger/iroha/issues/967,https://api.github.com/repos/hyperledger/iroha/issues/comments/365235077,https://github.com/hyperledger/iroha/issues/967#issuecomment-365235077,muratovv,"@l4l 
>Imo lowercase for YAC dir is more consistent

Of course, it is a bug.

>Would be nice to add why that component required

Yes, good point.

>readthedocs

Well, the idea is the following we will handle documentation and code in the one repository. Also, we have readthedocs cite, where we deploy current state of the documentation.

>presentations - link to the additional materials maybe?

Some repositories have presentations and pdf inside the project. We may use links, but in this case, we will not guarantee the consistency of presentations/pdf/etc. 

>test 
>Not really clear what should be written here. Imo that can be omitted

Idea is to describe folder structure, playground zones and contribution guide.

>scripts
>Imo README should be here, based on docs files

It is possible to make cross-references for the purpose.
",2018-02-13 11:12:45,2018-02-13 11:13:07
https://api.github.com/repos/hyperledger/iroha/issues/967,https://api.github.com/repos/hyperledger/iroha/issues/comments/367993360,https://github.com/hyperledger/iroha/issues/967#issuecomment-367993360,nickaleks,"It is also important to create auto-generated docs for proto files. There are tools like Doxygen, but for protobuf, and they will allow us to keep documentation up to date.",2018-02-23 12:13:03,2018-02-23 12:13:03
https://api.github.com/repos/hyperledger/iroha/issues/967,https://api.github.com/repos/hyperledger/iroha/issues/comments/374622169,https://github.com/hyperledger/iroha/issues/967#issuecomment-374622169,neewy,Please close this issue if it is resolved,2018-03-20 14:40:14,2018-03-20 14:40:14
https://api.github.com/repos/hyperledger/iroha/issues/966,https://api.github.com/repos/hyperledger/iroha/issues/comments/367412570,https://github.com/hyperledger/iroha/pull/966#issuecomment-367412570,l4l,Plz move out monadic bind one lambda above in `getBlocks` also,2018-02-21 17:53:30,2018-02-21 17:53:42
https://api.github.com/repos/hyperledger/iroha/issues/966,https://api.github.com/repos/hyperledger/iroha/issues/comments/368251445,https://github.com/hyperledger/iroha/pull/966#issuecomment-368251445,Warchant,"Pull changes from develop / or rebase onto develop.
Internal compiler error will disappear.",2018-02-24 19:04:16,2018-02-24 19:04:16
https://api.github.com/repos/hyperledger/iroha/issues/966,https://api.github.com/repos/hyperledger/iroha/issues/comments/369203637,https://github.com/hyperledger/iroha/pull/966#issuecomment-369203637,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/966?src=pr&el=h1) Report
> Merging [#966](https://codecov.io/gh/hyperledger/iroha/pull/966?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/432276bc8fc814807951ec804e030d811d665e2c?src=pr&el=desc) will **decrease** coverage by `0.18%`.
> The diff coverage is `16.96%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/966/graphs/tree.svg?src=pr&width=650&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/966?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #966      +/-   ##
===========================================
- Coverage    32.95%   32.77%   -0.19%     
===========================================
  Files          523      524       +1     
  Lines        16036    15993      -43     
  Branches     10244    10234      -10     
===========================================
- Hits          5285     5242      -43     
- Misses        1353     1364      +11     
+ Partials      9398     9387      -11
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/966?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `65.62% <100%> (-10.31%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `13.23% <11.11%> (-6.19%)` | :arrow_down: |
| [test/module/irohad/simulator/simulator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfdGVzdC5jcHA=) | `19.14% <11.11%> (-1.34%)` | :arrow_down: |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `13.69% <15.38%> (-14.31%)` | :arrow_down: |
| [test/module/irohad/network/block\_loader\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyX3Rlc3QuY3Bw) | `13.18% <18.75%> (+6.04%)` | :arrow_up: |
| [irohad/model/impl/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `47.05% <20%> (-1.14%)` | :arrow_down: |
| [test/module/irohad/validation/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `11.79% <20%> (-0.59%)` | :arrow_down: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `9.16% <20%> (+0.56%)` | :arrow_up: |
| ... and [48 more](https://codecov.io/gh/hyperledger/iroha/pull/966/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/966?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/966?src=pr&el=footer). Last update [432276b...237157d](https://codecov.io/gh/hyperledger/iroha/pull/966?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-28 10:56:40,2018-03-01 11:18:45
https://api.github.com/repos/hyperledger/iroha/issues/966,https://api.github.com/repos/hyperledger/iroha/issues/comments/369565780,https://github.com/hyperledger/iroha/pull/966#issuecomment-369565780,sorabot,"SonarQube analysis reported 32 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 12 minor
* ![INFO][INFO] 19 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [command_service.cpp#L228](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/irohad/torii/impl/command_service.cpp#L228): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [postgres_block_query.cpp#L148](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/irohad/ametsuchi/impl/postgres_block_query.cpp#L148): Define a constant instead of duplicating this literal "" AND height = "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L73](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/irohad/ametsuchi/impl/postgres_block_query.hpp#L73): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L81](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/irohad/ametsuchi/impl/postgres_block_query.hpp#L81): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L91](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/irohad/ametsuchi/impl/postgres_block_query.hpp#L91): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L213](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L213): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L213](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L213): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L213](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L213): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L213](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L213): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L335](https://github.com/hyperledger/iroha/blob/237157daef854ea5caa6b99c22701a6809e69b26/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L335): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-01 11:40:50,2018-03-01 11:40:50
https://api.github.com/repos/hyperledger/iroha/issues/965,https://api.github.com/repos/hyperledger/iroha/issues/comments/364958184,https://github.com/hyperledger/iroha/pull/965#issuecomment-364958184,l4l,"![screenshot_20180212_182756](https://user-images.githubusercontent.com/5658339/36104415-03e63e06-1023-11e8-8474-7baa93da3a85.png)

a bit of incosistency here (`cmake -DSWIG_PYTHON=ON`)",2018-02-12 15:32:11,2018-02-12 15:37:30
https://api.github.com/repos/hyperledger/iroha/issues/965,https://api.github.com/repos/hyperledger/iroha/issues/comments/365173205,https://github.com/hyperledger/iroha/pull/965#issuecomment-365173205,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/965?src=pr&el=h1) Report
> Merging [#965](https://codecov.io/gh/hyperledger/iroha/pull/965?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/493a18330c7c5a1f85b360ac71a10d254349e631?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/965/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/965?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #965      +/-   ##
===========================================
- Coverage    31.64%   31.63%   -0.01%     
===========================================
  Files          488      488              
  Lines        14907    14790     -117     
  Branches      9616     9542      -74     
===========================================
- Hits          4717     4679      -38     
+ Misses        1432     1425       -7     
+ Partials      8758     8686      -72
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/965?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/libs/common/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb21tb24vcmVzdWx0X3Rlc3QuY3Bw) | `10.63% <0%> (-9.06%)` | :arrow_down: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `38.59% <0%> (-3.86%)` | :arrow_down: |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | `87.5% <0%> (-1.39%)` | :arrow_down: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `30.76% <0%> (-0.61%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `15.15% <0%> (-0.48%)` | :arrow_down: |
| [test/module/irohad/torii/query\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3F1ZXJ5X3NlcnZpY2VfdGVzdC5jcHA=) | `42.42% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `9.86% <0%> (ø)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.2% <0%> (ø)` | :arrow_up: |
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `51.78% <0%> (ø)` | :arrow_up: |
| ... and [2 more](https://codecov.io/gh/hyperledger/iroha/pull/965/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/965?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/965?src=pr&el=footer). Last update [493a183...b6884d5](https://codecov.io/gh/hyperledger/iroha/pull/965?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-13 07:23:13,2018-02-14 22:59:09
https://api.github.com/repos/hyperledger/iroha/issues/964,https://api.github.com/repos/hyperledger/iroha/issues/comments/364739200,https://github.com/hyperledger/iroha/pull/964#issuecomment-364739200,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/964?src=pr&el=h1) Report
> Merging [#964](https://codecov.io/gh/hyperledger/iroha/pull/964?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/493a18330c7c5a1f85b360ac71a10d254349e631?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `46.66%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/964/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/964?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #964      +/-   ##
===========================================
- Coverage    31.64%   31.63%   -0.01%     
===========================================
  Files          488      488              
  Lines        14907    14805     -102     
  Branches      9616     9550      -66     
===========================================
- Hits          4717     4684      -33     
+ Misses        1432     1425       -7     
+ Partials      8758     8696      -62
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/964?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/cache/cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree#diff-bGlicy9jYWNoZS9jYWNoZS5ocHA=) | `78.94% <ø> (-10.53%)` | :arrow_down: |
| [test/module/libs/cache/cache\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jYWNoZS9jYWNoZV90ZXN0LmNwcA==) | `33.33% <46.66%> (+3.5%)` | :arrow_up: |
| [test/module/libs/common/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb21tb24vcmVzdWx0X3Rlc3QuY3Bw) | `10.63% <0%> (-9.06%)` | :arrow_down: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `38.59% <0%> (-3.86%)` | :arrow_down: |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | `87.5% <0%> (-1.39%)` | :arrow_down: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `30.76% <0%> (-0.61%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `15.15% <0%> (-0.48%)` | :arrow_down: |
| [test/module/irohad/torii/query\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3F1ZXJ5X3NlcnZpY2VfdGVzdC5jcHA=) | `42.42% <0%> (ø)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.2% <0%> (ø)` | :arrow_up: |
| ... and [5 more](https://codecov.io/gh/hyperledger/iroha/pull/964/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/964?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/964?src=pr&el=footer). Last update [493a183...d81e9b4](https://codecov.io/gh/hyperledger/iroha/pull/964?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-11 10:05:15,2018-02-12 10:40:56
https://api.github.com/repos/hyperledger/iroha/issues/964,https://api.github.com/repos/hyperledger/iroha/issues/comments/364889173,https://github.com/hyperledger/iroha/pull/964#issuecomment-364889173,sorabot,"SonarQube analysis reported 6 issues

1. ![INFO][INFO] [cache.hpp#L38](https://github.com/hyperledger/iroha/blob/d81e9b4ffce5dd2ebb1c26a0772eb6c3773a0acb/libs/cache/cache.hpp#L38): Undocumented API: getIndexSizeHighImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L42](https://github.com/hyperledger/iroha/blob/d81e9b4ffce5dd2ebb1c26a0772eb6c3773a0acb/libs/cache/cache.hpp#L42): Undocumented API: getIndexSizeLowImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L46](https://github.com/hyperledger/iroha/blob/d81e9b4ffce5dd2ebb1c26a0772eb6c3773a0acb/libs/cache/cache.hpp#L46): Undocumented API: getCacheItemCountImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L50](https://github.com/hyperledger/iroha/blob/d81e9b4ffce5dd2ebb1c26a0772eb6c3773a0acb/libs/cache/cache.hpp#L50): Undocumented API: addItemImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L62](https://github.com/hyperledger/iroha/blob/d81e9b4ffce5dd2ebb1c26a0772eb6c3773a0acb/libs/cache/cache.hpp#L62): Undocumented API: findItemImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L77](https://github.com/hyperledger/iroha/blob/d81e9b4ffce5dd2ebb1c26a0772eb6c3773a0acb/libs/cache/cache.hpp#L77): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-12 10:55:27,2018-02-12 10:55:27
https://api.github.com/repos/hyperledger/iroha/issues/963,https://api.github.com/repos/hyperledger/iroha/issues/comments/365224865,https://github.com/hyperledger/iroha/pull/963#issuecomment-365224865,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/963?src=pr&el=h1) Report
> Merging [#963](https://codecov.io/gh/hyperledger/iroha/pull/963?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b3559a3ce3a2fccf6c7b8a0e8f3054d30e40f565?src=pr&el=desc) will **decrease** coverage by `0.26%`.
> The diff coverage is `29.41%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/963/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/963?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #963      +/-   ##
===========================================
- Coverage    32.21%   31.94%   -0.27%     
===========================================
  Files          494      489       -5     
  Lines        15259    15081     -178     
  Branches      9767     9679      -88     
===========================================
- Hits          4915     4817      -98     
+ Misses        1447     1431      -16     
+ Partials      8897     8833      -64
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/963?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/validation/stateful\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVmdWxfdmFsaWRhdG9yLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/validation/validation\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vdmFsaWRhdGlvbl9tb2Nrcy5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/validation/impl/stateful\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/simulator/impl/simulator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9pbXBsL3NpbXVsYXRvci5jcHA=) | `42% <0%> (-1.75%)` | :arrow_down: |
| [test/module/irohad/simulator/simulator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3NpbXVsYXRvci9zaW11bGF0b3JfdGVzdC5jcHA=) | `20.73% <0%> (-0.26%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `64.06% <0%> (ø)` | :arrow_up: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `50% <35.71%> (-22.98%)` | :arrow_down: |
| [...buf/query\_responses/proto\_error\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2Vycm9yX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `18.18% <0%> (-56.82%)` | :arrow_down: |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `16.66% <0%> (-41.67%)` | :arrow_down: |
| [shared\_model/interfaces/commands/set\_quorum.hpp](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X3F1b3J1bS5ocHA=) | `0% <0%> (-35.72%)` | :arrow_down: |
| ... and [68 more](https://codecov.io/gh/hyperledger/iroha/pull/963/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/963?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/963?src=pr&el=footer). Last update [b3559a3...efdcecc](https://codecov.io/gh/hyperledger/iroha/pull/963?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-13 10:44:14,2018-02-22 07:34:52
https://api.github.com/repos/hyperledger/iroha/issues/963,https://api.github.com/repos/hyperledger/iroha/issues/comments/365602897,https://github.com/hyperledger/iroha/pull/963#issuecomment-365602897,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [stateful_validator_impl.hpp#L60](https://github.com/hyperledger/iroha/blob/01f591c81896d63ecf57fb63abfe593c393c0b12/irohad/validation/impl/stateful_validator_impl.hpp#L60): Unused private function: 'StatefulValidatorImpl::signaturesSubset' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [stateful_validator.hpp#L4](https://github.com/hyperledger/iroha/blob/01f591c81896d63ecf57fb63abfe593c393c0b12/irohad/validation/stateful_validator.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [simulator.cpp#L78](https://github.com/hyperledger/iroha/blob/01f591c81896d63ecf57fb63abfe593c393c0b12/irohad/simulator/impl/simulator.cpp#L78): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [simulator.cpp#L91](https://github.com/hyperledger/iroha/blob/01f591c81896d63ecf57fb63abfe593c393c0b12/irohad/simulator/impl/simulator.cpp#L91): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [stateful_validator_impl.cpp#L111](https://github.com/hyperledger/iroha/blob/01f591c81896d63ecf57fb63abfe593c393c0b12/irohad/validation/impl/stateful_validator_impl.cpp#L111): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [stateful_validator_impl.hpp#L35](https://github.com/hyperledger/iroha/blob/01f591c81896d63ecf57fb63abfe593c393c0b12/irohad/validation/impl/stateful_validator_impl.hpp#L35): Undocumented API: StatefulValidatorImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-14 13:12:22,2018-02-14 13:12:22
https://api.github.com/repos/hyperledger/iroha/issues/962,https://api.github.com/repos/hyperledger/iroha/issues/comments/364650962,https://github.com/hyperledger/iroha/pull/962#issuecomment-364650962,sorabot,"SonarQube analysis reported 4 issues

1. ![INFO][INFO] [from_old_model.hpp#L33](https://github.com/hyperledger/iroha/blob/84d9f7093b468ca9ea5002acde388ecb093288b9/shared_model/backend/protobuf/from_old_model.hpp#L33): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [from_old_model.hpp#L39](https://github.com/hyperledger/iroha/blob/84d9f7093b468ca9ea5002acde388ecb093288b9/shared_model/backend/protobuf/from_old_model.hpp#L39): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [from_old_model.hpp#L45](https://github.com/hyperledger/iroha/blob/84d9f7093b468ca9ea5002acde388ecb093288b9/shared_model/backend/protobuf/from_old_model.hpp#L45): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [from_old_model.hpp#L52](https://github.com/hyperledger/iroha/blob/84d9f7093b468ca9ea5002acde388ecb093288b9/shared_model/backend/protobuf/from_old_model.hpp#L52): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-10 13:03:30,2018-02-10 13:03:30
https://api.github.com/repos/hyperledger/iroha/issues/961,https://api.github.com/repos/hyperledger/iroha/issues/comments/366972372,https://github.com/hyperledger/iroha/pull/961#issuecomment-366972372,Warchant,"This PR is going to be splitted onto multiple PRs.

First is https://github.com/hyperledger/iroha/pull/983",2018-02-20 13:10:12,2018-02-20 13:10:12
https://api.github.com/repos/hyperledger/iroha/issues/960,https://api.github.com/repos/hyperledger/iroha/issues/comments/364942182,https://github.com/hyperledger/iroha/pull/960#issuecomment-364942182,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/960?src=pr&el=h1) Report
> Merging [#960](https://codecov.io/gh/hyperledger/iroha/pull/960?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/926f54d2948759f6858c12143675adad616d2a30?src=pr&el=desc) will **decrease** coverage by `0.26%`.
> The diff coverage is `45.45%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/960/graphs/tree.svg?src=pr&width=650&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/960?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #960      +/-   ##
===========================================
- Coverage    31.92%   31.65%   -0.27%     
===========================================
  Files          493      489       -4     
  Lines        15189    14798     -391     
  Branches      9764     9546     -218     
===========================================
- Hits          4849     4685     -164     
+ Misses        1430     1423       -7     
+ Partials      8910     8690     -220
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/960?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/block\_index.hpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2Jsb2NrX2luZGV4LmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [...hared\_model/interfaces/commands/transfer\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvdHJhbnNmZXJfYXNzZXQuaHBw) | `0% <ø> (-8.7%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_block\_index.hpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX2luZGV4LmhwcA==) | `66.66% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `19.28% <0%> (-0.14%)` | :arrow_down: |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `39.47% <0%> (-1.07%)` | :arrow_down: |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `27.63% <33.33%> (-1.71%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_block\_index.cpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX2luZGV4LmNwcA==) | `53.33% <53.84%> (+5.71%)` | :arrow_up: |
| [...buf/query\_responses/proto\_error\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2Vycm9yX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `18.18% <0%> (-56.82%)` | :arrow_down: |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `16.66% <0%> (-41.67%)` | :arrow_down: |
| [shared\_model/interfaces/commands/set\_quorum.hpp](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X3F1b3J1bS5ocHA=) | `0% <0%> (-35.72%)` | :arrow_down: |
| ... and [72 more](https://codecov.io/gh/hyperledger/iroha/pull/960/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/960?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/960?src=pr&el=footer). Last update [926f54d...819612d](https://codecov.io/gh/hyperledger/iroha/pull/960?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-12 14:42:02,2018-02-22 12:13:42
https://api.github.com/repos/hyperledger/iroha/issues/960,https://api.github.com/repos/hyperledger/iroha/issues/comments/367665062,https://github.com/hyperledger/iroha/pull/960#issuecomment-367665062,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L41](https://github.com/hyperledger/iroha/blob/819612d895e62b9398547ad37cd9bf9c826724f1/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L41): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_index.hpp#L55](https://github.com/hyperledger/iroha/blob/819612d895e62b9398547ad37cd9bf9c826724f1/irohad/ametsuchi/impl/postgres_block_index.hpp#L55): Unused private function: 'PostgresBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![INFO][INFO] [postgres_block_index.hpp#L31](https://github.com/hyperledger/iroha/blob/819612d895e62b9398547ad37cd9bf9c826724f1/irohad/ametsuchi/impl/postgres_block_index.hpp#L31): Undocumented API: PostgresBlockIndex [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [postgres_block_index.hpp#L33](https://github.com/hyperledger/iroha/blob/819612d895e62b9398547ad37cd9bf9c826724f1/irohad/ametsuchi/impl/postgres_block_index.hpp#L33): Undocumented API: PostgresBlockIndex [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [postgres_block_index.hpp#L66](https://github.com/hyperledger/iroha/blob/819612d895e62b9398547ad37cd9bf9c826724f1/irohad/ametsuchi/impl/postgres_block_index.hpp#L66): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [transfer_asset.hpp#L91](https://github.com/hyperledger/iroha/blob/819612d895e62b9398547ad37cd9bf9c826724f1/shared_model/interfaces/commands/transfer_asset.hpp#L91): Undocumented API: message [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-22 12:25:49,2018-02-22 12:25:49
https://api.github.com/repos/hyperledger/iroha/issues/959,https://api.github.com/repos/hyperledger/iroha/issues/comments/364379864,https://github.com/hyperledger/iroha/pull/959#issuecomment-364379864,l4l,"Would be nice to:
1. Separate date&thread info, e.g in `[` `]` brackets as it was before
2. Make it configurable, e.g thread info can be useless sometime (moreover it's useful for debuging i tihnk)",2018-02-09 09:22:36,2018-02-09 09:22:36
https://api.github.com/repos/hyperledger/iroha/issues/959,https://api.github.com/repos/hyperledger/iroha/issues/comments/364431168,https://github.com/hyperledger/iroha/pull/959#issuecomment-364431168,luckychess,Could you also please print thread ids in hex format? It would be a way more comfortable to read.,2018-02-09 13:18:05,2018-02-09 13:18:05
https://api.github.com/repos/hyperledger/iroha/issues/959,https://api.github.com/repos/hyperledger/iroha/issues/comments/364665757,https://github.com/hyperledger/iroha/pull/959#issuecomment-364665757,bakhtin,"LGTM from log processing point of view. Please, fix as suggested to make it more readable.",2018-02-10 16:07:12,2018-02-10 16:07:12
https://api.github.com/repos/hyperledger/iroha/issues/959,https://api.github.com/repos/hyperledger/iroha/issues/comments/364672391,https://github.com/hyperledger/iroha/pull/959#issuecomment-364672391,neewy,can we also please add milliseconds to track time more precisely?,2018-02-10 17:06:42,2018-02-10 17:06:42
https://api.github.com/repos/hyperledger/iroha/issues/959,https://api.github.com/repos/hyperledger/iroha/issues/comments/365487427,https://github.com/hyperledger/iroha/pull/959#issuecomment-365487427,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/959?src=pr&el=h1) Report
> Merging [#959](https://codecov.io/gh/hyperledger/iroha/pull/959?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/f55b622a1b4c44f1d628723e9c334746b441804d?src=pr&el=desc) will **decrease** coverage by `0.21%`.
> The diff coverage is `42.85%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/959/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/959?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #959      +/-   ##
===========================================
- Coverage    31.84%   31.62%   -0.22%     
===========================================
  Files          491      488       -3     
  Lines        15130    14794     -336     
  Branches      9721     9544     -177     
===========================================
- Hits          4818     4679     -139     
+ Misses        1458     1428      -30     
+ Partials      8854     8687     -167
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/959?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/logger/logger.cpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-bGlicy9sb2dnZXIvbG9nZ2VyLmNwcA==) | `44.82% <42.85%> (-7.18%)` | :arrow_down: |
| [...buf/query\_responses/proto\_error\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2Vycm9yX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `18.18% <0%> (-56.82%)` | :arrow_down: |
| [shared\_model/interfaces/base/hashable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9oYXNoYWJsZS5ocHA=) | `28.57% <0%> (-28.58%)` | :arrow_down: |
| [test/module/libs/common/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb21tb24vcmVzdWx0X3Rlc3QuY3Bw) | `10.63% <0%> (-9.06%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `32.17% <0%> (-7.98%)` | :arrow_down: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `30.76% <0%> (-6.94%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `20.75% <0%> (-5.01%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `24.16% <0%> (-4.89%)` | :arrow_down: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `38.59% <0%> (-3.86%)` | :arrow_down: |
| [test/module/libs/cache/cache\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jYWNoZS9jYWNoZV90ZXN0LmNwcA==) | `29.82% <0%> (-3.51%)` | :arrow_down: |
| ... and [45 more](https://codecov.io/gh/hyperledger/iroha/pull/959/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/959?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/959?src=pr&el=footer). Last update [f55b622...24ce780](https://codecov.io/gh/hyperledger/iroha/pull/959?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-14 03:46:37,2018-02-15 02:31:14
https://api.github.com/repos/hyperledger/iroha/issues/959,https://api.github.com/repos/hyperledger/iroha/issues/comments/365489014,https://github.com/hyperledger/iroha/pull/959#issuecomment-365489014,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [logger.cpp#L4](https://github.com/hyperledger/iroha/blob/beb8999bea20df96a6b1fa988b0b4bde07c96da2/libs/logger/logger.cpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-14 03:58:03,2018-02-14 03:58:03
https://api.github.com/repos/hyperledger/iroha/issues/955,https://api.github.com/repos/hyperledger/iroha/issues/comments/364181871,https://github.com/hyperledger/iroha/pull/955#issuecomment-364181871,Warchant,It has been decided that @bakhtin will pull these changes to his branch first.,2018-02-08 17:12:25,2018-02-08 17:12:25
https://api.github.com/repos/hyperledger/iroha/issues/954,https://api.github.com/repos/hyperledger/iroha/issues/comments/364447891,https://github.com/hyperledger/iroha/pull/954#issuecomment-364447891,luckychess,Looks good for me.,2018-02-09 14:26:33,2018-02-09 14:26:33
https://api.github.com/repos/hyperledger/iroha/issues/954,https://api.github.com/repos/hyperledger/iroha/issues/comments/364778930,https://github.com/hyperledger/iroha/pull/954#issuecomment-364778930,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/954?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@5b51cc2`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `42.1%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/954/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/954?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #954   +/-   ##
==========================================
  Coverage           ?   31.65%           
==========================================
  Files              ?      488           
  Lines              ?    14811           
  Branches           ?     9551           
==========================================
  Hits               ?     4689           
  Misses             ?     1427           
  Partials           ?     8695
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/954?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/954/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | `88.88% <ø> (ø)` | |
| [test/module/libs/common/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/954/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb21tb24vcmVzdWx0X3Rlc3QuY3Bw) | `19.69% <42.1%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/954?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/954?src=pr&el=footer). Last update [5b51cc2...a302b14](https://codecov.io/gh/hyperledger/iroha/pull/954?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-11 19:16:31,2018-02-11 19:16:31
https://api.github.com/repos/hyperledger/iroha/issues/954,https://api.github.com/repos/hyperledger/iroha/issues/comments/364780486,https://github.com/hyperledger/iroha/pull/954#issuecomment-364780486,sorabot,"SonarQube analysis reported 13 issues
* ![MINOR][MINOR] 1 minor
* ![INFO][INFO] 12 info

#### Top 10 issues

1. ![MINOR][MINOR] [result.hpp#L40](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L40): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [result.hpp#L45](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L45): Undocumented API: Value [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L46](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L46): Undocumented API: value [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L48](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L48): Undocumented API: operator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L54](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L54): Undocumented API: Value [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L57](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L57): Undocumented API: Error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L58](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L58): Undocumented API: error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L60](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L60): Undocumented API: operator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L66](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L66): Undocumented API: Error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L80](https://github.com/hyperledger/iroha/blob/a302b14d2924ea574c2ad3d8ca765cec7537a195/libs/common/result.hpp#L80): Undocumented API: ValueType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-11 19:36:34,2018-02-11 19:36:34
https://api.github.com/repos/hyperledger/iroha/issues/953,https://api.github.com/repos/hyperledger/iroha/issues/comments/364067271,https://github.com/hyperledger/iroha/pull/953#issuecomment-364067271,sorabot,"SonarQube analysis reported 42 issues
* ![MINOR][MINOR] 1 minor
* ![INFO][INFO] 41 info

#### Top 10 issues

1. ![MINOR][MINOR] [field_validator.cpp#L232](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/validators/field_validator.cpp#L232): The function 'validateSignatures' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![INFO][INFO] [block.hpp#L1](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/backend/protobuf/block.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block.hpp#L35](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/backend/protobuf/block.hpp#L35): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L43](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/backend/protobuf/block.hpp#L43): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L70](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/backend/protobuf/block.hpp#L70): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L72](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/backend/protobuf/block.hpp#L72): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L45](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/backend/protobuf/queries/proto_query.hpp#L45): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L49](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/backend/protobuf/queries/proto_query.hpp#L49): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L51](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/backend/protobuf/queries/proto_query.hpp#L51): Undocumented API: which [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L55](https://github.com/hyperledger/iroha/blob/ac66a4a0801a1da551a37140fdcdc9db2243dd9e/shared_model/backend/protobuf/queries/proto_query.hpp#L55): Undocumented API: shared_model [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-08 10:21:30,2018-02-08 10:21:30
https://api.github.com/repos/hyperledger/iroha/issues/953,https://api.github.com/repos/hyperledger/iroha/issues/comments/364067326,https://github.com/hyperledger/iroha/pull/953#issuecomment-364067326,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/953?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@6df02be`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `31.11%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/953/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/953?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #953   +/-   ##
==========================================
  Coverage           ?   31.92%           
==========================================
  Files              ?      493           
  Lines              ?    15189           
  Branches           ?     9764           
==========================================
  Hits               ?     4849           
  Misses             ?     1430           
  Partials           ?     8910
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/953?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/953/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `100% <ø> (ø)` | |
| [shared\_model/interfaces/base/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/953/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9zaWduYWJsZS5ocHA=) | `0% <ø> (ø)` | |
| [...model/builders/protobuf/transport\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/953/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zcG9ydF9idWlsZGVyX3Rlc3QuY3Bw) | `20.68% <0%> (ø)` | |
| [shared\_model/backend/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/953/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb24uaHBw) | `67.39% <100%> (ø)` | |
| [shared\_model/backend/protobuf/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/953/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvYmxvY2suaHBw) | `72.91% <100%> (ø)` | |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/953/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `69.76% <100%> (ø)` | |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/953/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `42.39% <18.18%> (ø)` | |
| [shared\_model/validators/signable\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/953/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvc2lnbmFibGVfdmFsaWRhdG9yLmhwcA==) | `30% <30%> (ø)` | |
| [...\_model/interfaces/common\_objects/signable\_hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/953/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmFibGVfaGFzaC5ocHA=) | `66.66% <66.66%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/953?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/953?src=pr&el=footer). Last update [6df02be...233cf81](https://codecov.io/gh/hyperledger/iroha/pull/953?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-08 10:21:38,2018-02-17 11:46:26
https://api.github.com/repos/hyperledger/iroha/issues/952,https://api.github.com/repos/hyperledger/iroha/issues/comments/364050144,https://github.com/hyperledger/iroha/pull/952#issuecomment-364050144,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/952?src=pr&el=h1) Report
> Merging [#952](https://codecov.io/gh/hyperledger/iroha/pull/952?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/4edb767e3f7eb5c7e8d06efcae9bfd3ea3cb15c7?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/952/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/952?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #952   +/-   ##
========================================
  Coverage    31.63%   31.63%           
========================================
  Files          488      488           
  Lines        14790    14790           
  Branches      9542     9542           
========================================
  Hits          4679     4679           
  Misses        1425     1425           
  Partials      8686     8686
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/952?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/952?src=pr&el=footer). Last update [4edb767...b32961d](https://codecov.io/gh/hyperledger/iroha/pull/952?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-08 09:18:59,2018-02-08 12:04:24
https://api.github.com/repos/hyperledger/iroha/issues/952,https://api.github.com/repos/hyperledger/iroha/issues/comments/364177675,https://github.com/hyperledger/iroha/pull/952#issuecomment-364177675,Warchant,"@satellitex Next time please wait for 2nd reviewer. :)
We require 2 approves before merge.",2018-02-08 16:59:23,2018-02-08 16:59:36
https://api.github.com/repos/hyperledger/iroha/issues/952,https://api.github.com/repos/hyperledger/iroha/issues/comments/364183428,https://github.com/hyperledger/iroha/pull/952#issuecomment-364183428,satellitex,Sorry I will revert,2018-02-08 17:17:31,2018-02-08 17:17:31
https://api.github.com/repos/hyperledger/iroha/issues/952,https://api.github.com/repos/hyperledger/iroha/issues/comments/364187068,https://github.com/hyperledger/iroha/pull/952#issuecomment-364187068,Warchant,"Do not panic, leave it as is now",2018-02-08 17:29:33,2018-02-08 17:29:33
https://api.github.com/repos/hyperledger/iroha/issues/952,https://api.github.com/repos/hyperledger/iroha/issues/comments/364187875,https://github.com/hyperledger/iroha/pull/952#issuecomment-364187875,satellitex,"ok, thanks.",2018-02-08 17:32:08,2018-02-08 17:32:08
https://api.github.com/repos/hyperledger/iroha/issues/951,https://api.github.com/repos/hyperledger/iroha/issues/comments/364039996,https://github.com/hyperledger/iroha/pull/951#issuecomment-364039996,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/951?src=pr&el=h1) Report
> Merging [#951](https://codecov.io/gh/hyperledger/iroha/pull/951?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/4edb767e3f7eb5c7e8d06efcae9bfd3ea3cb15c7?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/951/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/951?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #951   +/-   ##
========================================
  Coverage    31.63%   31.63%           
========================================
  Files          488      488           
  Lines        14790    14790           
  Branches      9542     9542           
========================================
  Hits          4679     4679           
  Misses        1425     1425           
  Partials      8686     8686
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/951?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/951?src=pr&el=footer). Last update [4edb767...ecccc38](https://codecov.io/gh/hyperledger/iroha/pull/951?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-08 08:38:32,2018-02-08 08:59:45
https://api.github.com/repos/hyperledger/iroha/issues/950,https://api.github.com/repos/hyperledger/iroha/issues/comments/365396615,https://github.com/hyperledger/iroha/pull/950#issuecomment-365396615,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/950?src=pr&el=h1) Report
> Merging [#950](https://codecov.io/gh/hyperledger/iroha/pull/950?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c14e0d851a70813e3d7b74705cff7b070f7acc07?src=pr&el=desc) will **decrease** coverage by `0.21%`.
> The diff coverage is `31.25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/950/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/950?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #950      +/-   ##
===========================================
- Coverage    31.83%   31.62%   -0.22%     
===========================================
  Files          491      488       -3     
  Lines        15134    14796     -338     
  Branches      9723     9547     -176     
===========================================
- Hits          4818     4679     -139     
+ Misses        1461     1425      -36     
+ Partials      8855     8692     -163
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/950?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/network/ordering\_service\_transport.hpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnQuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [.../ordering/impl/ordering\_service\_transport\_grpc.hpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnRfZ3JwYy5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/network/ordering\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfc2VydmljZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `44% <ø> (-2.16%)` | :arrow_down: |
| [...t/module/irohad/ordering/ordering\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX3NlcnZpY2VfdGVzdC5jcHA=) | `36.5% <27.77%> (-0.79%)` | :arrow_down: |
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `54.54% <33.33%> (-7.96%)` | :arrow_down: |
| [.../ordering/impl/ordering\_service\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `52.38% <40%> (-1.79%)` | :arrow_down: |
| [...buf/query\_responses/proto\_error\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2Vycm9yX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `18.18% <0%> (-56.82%)` | :arrow_down: |
| [shared\_model/interfaces/base/hashable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9oYXNoYWJsZS5ocHA=) | `28.57% <0%> (-28.58%)` | :arrow_down: |
| [test/module/libs/common/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb21tb24vcmVzdWx0X3Rlc3QuY3Bw) | `10.63% <0%> (-9.06%)` | :arrow_down: |
| ... and [53 more](https://codecov.io/gh/hyperledger/iroha/pull/950/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/950?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/950?src=pr&el=footer). Last update [c14e0d8...3a1b4df](https://codecov.io/gh/hyperledger/iroha/pull/950?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-13 20:39:09,2018-02-15 18:39:03
https://api.github.com/repos/hyperledger/iroha/issues/950,https://api.github.com/repos/hyperledger/iroha/issues/comments/366013465,https://github.com/hyperledger/iroha/pull/950#issuecomment-366013465,sorabot,"SonarQube analysis reported 4 issues

1. ![INFO][INFO] [ordering_service.hpp#L25](https://github.com/hyperledger/iroha/blob/a504d71877accea68395388ac9fde13693c39cd8/irohad/network/ordering_service.hpp#L25): Undocumented API: OrderingService [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_service_impl.hpp#L45](https://github.com/hyperledger/iroha/blob/a504d71877accea68395388ac9fde13693c39cd8/irohad/ordering/impl/ordering_service_impl.hpp#L45): Undocumented API: OrderingServiceImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_service_transport_grpc.hpp#L31](https://github.com/hyperledger/iroha/blob/a504d71877accea68395388ac9fde13693c39cd8/irohad/ordering/impl/ordering_service_transport_grpc.hpp#L31): Undocumented API: OrderingServiceTransportGrpc [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_service_transport_grpc.hpp#L36](https://github.com/hyperledger/iroha/blob/a504d71877accea68395388ac9fde13693c39cd8/irohad/ordering/impl/ordering_service_transport_grpc.hpp#L36): Undocumented API: OrderingServiceTransportGrpc [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-15 18:11:13,2018-02-15 18:11:13
https://api.github.com/repos/hyperledger/iroha/issues/949,https://api.github.com/repos/hyperledger/iroha/issues/comments/363858049,https://github.com/hyperledger/iroha/pull/949#issuecomment-363858049,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/949?src=pr&el=h1) Report
> Merging [#949](https://codecov.io/gh/hyperledger/iroha/pull/949?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d9c6e0ff3e2770b2ce13fd672dfc5987726ba6ee?src=pr&el=desc) will **decrease** coverage by `0.27%`.
> The diff coverage is `18.69%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/949/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/949?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #949      +/-   ##
===========================================
- Coverage    31.85%   31.58%   -0.28%     
===========================================
  Files          489      490       +1     
  Lines        15085    14820     -265     
  Branches      9683     9572     -111     
===========================================
- Hits          4806     4681     -125     
+ Misses        1460     1423      -37     
+ Partials      8819     8716     -103
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/949?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/network/network\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvbmV0d29ya19tb2Nrcy5ocHA=) | `46.15% <ø> (ø)` | :arrow_up: |
| [irohad/network/block\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/network/impl/block\_loader\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmNwcA==) | `42.37% <0%> (+0.26%)` | :arrow_up: |
| [...t/module/irohad/synchronizer/synchronizer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3N5bmNocm9uaXplci9zeW5jaHJvbml6ZXJfdGVzdC5jcHA=) | `22.97% <0%> (-0.64%)` | :arrow_down: |
| [libs/common/wrapper.hpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vd3JhcHBlci5ocHA=) | `100% <100%> (ø)` | |
| [irohad/network/impl/block\_loader\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5jcHA=) | `22.36% <21.42%> (-1.25%)` | :arrow_down: |
| [irohad/synchronizer/impl/synchronizer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-aXJvaGFkL3N5bmNocm9uaXplci9pbXBsL3N5bmNocm9uaXplcl9pbXBsLmNwcA==) | `32.35% <33.33%> (+0.64%)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGVfdGVzdC5jcHA=) | `30% <37.5%> (+1.87%)` | :arrow_up: |
| [test/module/irohad/network/block\_loader\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyX3Rlc3QuY3Bw) | `9.89% <9.3%> (-11.54%)` | :arrow_down: |
| ... and [42 more](https://codecov.io/gh/hyperledger/iroha/pull/949/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/949?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/949?src=pr&el=footer). Last update [d9c6e0f...992d242](https://codecov.io/gh/hyperledger/iroha/pull/949?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-07 18:08:35,2018-02-14 23:15:09
https://api.github.com/repos/hyperledger/iroha/issues/949,https://api.github.com/repos/hyperledger/iroha/issues/comments/365779430,https://github.com/hyperledger/iroha/pull/949#issuecomment-365779430,sorabot,"SonarQube analysis reported 5 issues

1. ![MINOR][MINOR] [yac_gate_impl.cpp#L32](https://github.com/hyperledger/iroha/blob/992d242454d7159c87dd1366484249bef06c2d7f/irohad/consensus/yac/impl/yac_gate_impl.cpp#L32): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![INFO][INFO] [block_loader.hpp#L47](https://github.com/hyperledger/iroha/blob/992d242454d7159c87dd1366484249bef06c2d7f/irohad/network/block_loader.hpp#L47): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [block_loader_impl.hpp#L33](https://github.com/hyperledger/iroha/blob/992d242454d7159c87dd1366484249bef06c2d7f/irohad/network/impl/block_loader_impl.hpp#L33): Undocumented API: BlockLoaderImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_loader_impl.hpp#L35](https://github.com/hyperledger/iroha/blob/992d242454d7159c87dd1366484249bef06c2d7f/irohad/network/impl/block_loader_impl.hpp#L35): Undocumented API: BlockLoaderImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_loader_impl.hpp#L52](https://github.com/hyperledger/iroha/blob/992d242454d7159c87dd1366484249bef06c2d7f/irohad/network/impl/block_loader_impl.hpp#L52): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-14 23:28:03,2018-02-14 23:28:03
https://api.github.com/repos/hyperledger/iroha/issues/948,https://api.github.com/repos/hyperledger/iroha/issues/comments/364047046,https://github.com/hyperledger/iroha/pull/948#issuecomment-364047046,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/948?src=pr&el=h1) Report
> Merging [#948](https://codecov.io/gh/hyperledger/iroha/pull/948?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/493a18330c7c5a1f85b360ac71a10d254349e631?src=pr&el=desc) will **increase** coverage by `0.27%`.
> The diff coverage is `53.76%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/948/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/948?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #948      +/-   ##
===========================================
+ Coverage    31.64%   31.92%   +0.27%     
===========================================
  Files          488      488              
  Lines        14907    14902       -5     
  Branches      9616     9566      -50     
===========================================
+ Hits          4717     4757      +40     
- Misses        1432     1438       +6     
+ Partials      8758     8707      -51
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/948?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/temporary\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS90ZW1wb3JhcnlfZmFjdG9yeS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/mutable\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9tdXRhYmxlX2ZhY3RvcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9zdG9yYWdlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/simulator/impl/simulator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9pbXBsL3NpbXVsYXRvci5jcHA=) | `43.75% <30%> (-0.16%)` | :arrow_down: |
| [irohad/synchronizer/impl/synchronizer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-aXJvaGFkL3N5bmNocm9uaXplci9pbXBsL3N5bmNocm9uaXplcl9pbXBsLmNwcA==) | `31.7% <31.25%> (+0.67%)` | :arrow_up: |
| [...t/module/irohad/synchronizer/synchronizer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3N5bmNocm9uaXplci9zeW5jaHJvbml6ZXJfdGVzdC5jcHA=) | `23.61% <33.33%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `40.15% <48.14%> (+7.97%)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `52.1% <50%> (+0.31%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `64.06% <57.14%> (-1.02%)` | :arrow_down: |
| ... and [15 more](https://codecov.io/gh/hyperledger/iroha/pull/948/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/948?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/948?src=pr&el=footer). Last update [493a183...c5da675](https://codecov.io/gh/hyperledger/iroha/pull/948?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-08 09:07:02,2018-02-13 02:34:04
https://api.github.com/repos/hyperledger/iroha/issues/948,https://api.github.com/repos/hyperledger/iroha/issues/comments/365134082,https://github.com/hyperledger/iroha/pull/948#issuecomment-365134082,sorabot,"SonarQube analysis reported 27 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 9 minor
* ![INFO][INFO] 17 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L265](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/irohad/main/application.cpp#L265): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [application.cpp#L34](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/irohad/main/application.cpp#L34): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L206](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L206): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L206](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L206): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L206](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L206): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L206](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L206): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L337](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L337): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L337](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L337): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L337](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L337): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L337](https://github.com/hyperledger/iroha/blob/c5da675f3f1420e43e4b9d29176d047650001944/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L337): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-13 02:46:54,2018-02-13 02:46:54
https://api.github.com/repos/hyperledger/iroha/issues/947,https://api.github.com/repos/hyperledger/iroha/issues/comments/363471625,https://github.com/hyperledger/iroha/pull/947#issuecomment-363471625,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/947?src=pr&el=h1) Report
> Merging [#947](https://codecov.io/gh/hyperledger/iroha/pull/947?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/533dcf811b046e7a405348d775a006a99bb3b941?src=pr&el=desc) will **decrease** coverage by `0.91%`.
> The diff coverage is `32.03%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/947/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/947?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #947      +/-   ##
===========================================
- Coverage    31.63%   30.71%   -0.92%     
===========================================
  Files          488      478      -10     
  Lines        14790    14486     -304     
  Branches      9542     9400     -142     
===========================================
- Hits          4679     4450     -229     
- Misses        1425     1481      +56     
+ Partials      8686     8555     -131
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/947?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/torii/query\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3F1ZXJ5X3NlcnZpY2VfdGVzdC5jcHA=) | `42.42% <ø> (ø)` | :arrow_up: |
| [irohad/torii/command\_client.hpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfY2xpZW50LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `37.33% <0%> (+6.56%)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.2% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `9.86% <0%> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `52.21% <100%> (+0.42%)` | :arrow_up: |
| [irohad/torii/command\_client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfY2xpZW50LmNwcA==) | `40% <25%> (-5.84%)` | :arrow_down: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `42.45% <47.22%> (+3.85%)` | :arrow_up: |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `19.35% <9.09%> (-3.03%)` | :arrow_down: |
| ... and [66 more](https://codecov.io/gh/hyperledger/iroha/pull/947/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/947?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/947?src=pr&el=footer). Last update [533dcf8...fa77c30](https://codecov.io/gh/hyperledger/iroha/pull/947?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-06 16:08:06,2018-02-11 14:08:36
https://api.github.com/repos/hyperledger/iroha/issues/947,https://api.github.com/repos/hyperledger/iroha/issues/comments/364422503,https://github.com/hyperledger/iroha/pull/947#issuecomment-364422503,sorabot,"SonarQube analysis reported 15 issues
* ![CRITICAL][CRITICAL] 2 critical
* ![MINOR][MINOR] 4 minor
* ![INFO][INFO] 9 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L265](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/main/application.cpp#L265): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [command_service.cpp#L195](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/torii/impl/command_service.cpp#L195): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [application.cpp#L36](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/main/application.cpp#L36): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [command_client.cpp#L3](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/torii/command_client.cpp#L3): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_client.cpp#L33](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/torii/command_client.cpp#L33): Member variable 'CommandSyncClient::port_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [command_client.hpp#L4](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/torii/command_client.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [command_client.cpp#L1](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/torii/command_client.cpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [command_client.hpp#L1](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/torii/command_client.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [command_client.hpp#L32](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/torii/command_client.hpp#L32): Undocumented API: CommandSyncClient [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [command_client.hpp#L34](https://github.com/hyperledger/iroha/blob/fa77c30db43295256f207e8649faa22d7b92c317/irohad/torii/command_client.hpp#L34): Undocumented API: CommandSyncClient [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-09 12:36:52,2018-02-09 12:36:52
https://api.github.com/repos/hyperledger/iroha/issues/946,https://api.github.com/repos/hyperledger/iroha/issues/comments/363414385,https://github.com/hyperledger/iroha/pull/946#issuecomment-363414385,nickaleks,Why are all the functions in global namespace?,2018-02-06 12:58:43,2018-02-06 12:58:43
https://api.github.com/repos/hyperledger/iroha/issues/946,https://api.github.com/repos/hyperledger/iroha/issues/comments/363414599,https://github.com/hyperledger/iroha/pull/946#issuecomment-363414599,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/946?src=pr&el=h1) Report
> Merging [#946](https://codecov.io/gh/hyperledger/iroha/pull/946?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0f1d5b522f1e7ed2485f1cd806c96a9a74806912?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/946/graphs/tree.svg?token=VEvywEmaef&height=150&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/946?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #946   +/-   ##
========================================
  Coverage    30.86%   30.86%           
========================================
  Files          484      484           
  Lines        14569    14569           
  Branches      9438     9438           
========================================
  Hits          4496     4496           
  Misses        1496     1496           
  Partials      8577     8577
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/946?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/946?src=pr&el=footer). Last update [0f1d5b5...dc2ca95](https://codecov.io/gh/hyperledger/iroha/pull/946?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-06 12:59:41,2018-02-06 14:40:50
https://api.github.com/repos/hyperledger/iroha/issues/946,https://api.github.com/repos/hyperledger/iroha/issues/comments/363420585,https://github.com/hyperledger/iroha/pull/946#issuecomment-363420585,sorabot,"SonarQube analysis reported 5 issues

1. ![INFO][INFO] [from_old_model.hpp#L1](https://github.com/hyperledger/iroha/blob/dc2ca950ffabe30e4ab406fa414f20fdc8cd6d65/shared_model/backend/protobuf/from_old_model.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [from_old_model.hpp#L33](https://github.com/hyperledger/iroha/blob/dc2ca950ffabe30e4ab406fa414f20fdc8cd6d65/shared_model/backend/protobuf/from_old_model.hpp#L33): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [from_old_model.hpp#L39](https://github.com/hyperledger/iroha/blob/dc2ca950ffabe30e4ab406fa414f20fdc8cd6d65/shared_model/backend/protobuf/from_old_model.hpp#L39): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [from_old_model.hpp#L45](https://github.com/hyperledger/iroha/blob/dc2ca950ffabe30e4ab406fa414f20fdc8cd6d65/shared_model/backend/protobuf/from_old_model.hpp#L45): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [from_old_model.hpp#L52](https://github.com/hyperledger/iroha/blob/dc2ca950ffabe30e4ab406fa414f20fdc8cd6d65/shared_model/backend/protobuf/from_old_model.hpp#L52): Undocumented API: from_old [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-06 13:23:18,2018-02-06 13:23:18
https://api.github.com/repos/hyperledger/iroha/issues/945,https://api.github.com/repos/hyperledger/iroha/issues/comments/363401686,https://github.com/hyperledger/iroha/pull/945#issuecomment-363401686,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/945?src=pr&el=h1) Report
> Merging [#945](https://codecov.io/gh/hyperledger/iroha/pull/945?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0f1d5b522f1e7ed2485f1cd806c96a9a74806912?src=pr&el=desc) will **increase** coverage by `1.2%`.
> The diff coverage is `25.32%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/945/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/945?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop     #945     +/-   ##
==========================================
+ Coverage    30.86%   32.06%   +1.2%     
==========================================
  Files          484      476      -8     
  Lines        14569    14547     -22     
  Branches      9438     9356     -82     
==========================================
+ Hits          4496     4665    +169     
+ Misses        1496     1370    -126     
+ Partials      8577     8512     -65
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/945?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `30.76% <ø> (-6.08%)` | :arrow_down: |
| [irohad/main/impl/ordering\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmhwcA==) | `0% <ø> (-100%)` | :arrow_down: |
| [shared\_model/interfaces/base/hashable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9oYXNoYWJsZS5ocHA=) | `28.57% <0%> (+28.57%)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `45.45% <0%> (-10.11%)` | :arrow_down: |
| [...odel/converters/impl/pb\_query\_response\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9yZXNwb25zZV9mYWN0b3J5LmNwcA==) | `34.34% <0%> (-7.46%)` | :arrow_down: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `21.05% <11.53%> (-4.95%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `15.15% <15.15%> (ø)` | |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `23.52% <23.52%> (ø)` | |
| [test/integration/pipeline/test\_irohad.hpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90ZXN0X2lyb2hhZC5ocHA=) | `48% <48%> (ø)` | |
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `69.69% <69.69%> (ø)` | |
| ... and [206 more](https://codecov.io/gh/hyperledger/iroha/pull/945/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/945?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/945?src=pr&el=footer). Last update [0f1d5b5...b8520be](https://codecov.io/gh/hyperledger/iroha/pull/945?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-06 12:00:32,2018-02-06 15:22:16
https://api.github.com/repos/hyperledger/iroha/issues/943,https://api.github.com/repos/hyperledger/iroha/issues/comments/363388348,https://github.com/hyperledger/iroha/pull/943#issuecomment-363388348,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/943?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/mst@9686440`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `34.37%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/943/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/943?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##             trunk/mst     #943   +/-   ##
============================================
  Coverage             ?   31.53%           
============================================
  Files                ?      494           
  Lines                ?    14939           
  Branches             ?     9686           
============================================
  Hits                 ?     4711           
  Misses               ?     1359           
  Partials             ?     8869
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/943?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ulti\_sig\_transactions/storage/impl/mst\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/943/diff?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9pbXBsL21zdF9zdG9yYWdlLmNwcA==) | `35.29% <0%> (ø)` | |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/943/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `30.18% <0%> (ø)` | |
| [...integration/pipeline/multisig\_tx\_pipeline\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/943/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS9tdWx0aXNpZ190eF9waXBlbGluZV90ZXN0LmNwcA==) | `35.48% <35.48%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/943?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/943?src=pr&el=footer). Last update [9686440...4ba55d1](https://codecov.io/gh/hyperledger/iroha/pull/943?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-06 11:01:53,2018-02-06 11:01:53
https://api.github.com/repos/hyperledger/iroha/issues/941,https://api.github.com/repos/hyperledger/iroha/issues/comments/362897996,https://github.com/hyperledger/iroha/pull/941#issuecomment-362897996,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/941?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@fb630af`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `14.28%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/941/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/941?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #941   +/-   ##
==========================================
  Coverage           ?   31.63%           
==========================================
  Files              ?      488           
  Lines              ?    14924           
  Branches           ?     9627           
==========================================
  Hits               ?     4721           
  Misses             ?     1432           
  Partials           ?     8771
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/941?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/impl/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/941/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `44.17% <ø> (ø)` | |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/941/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `46.52% <14.28%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/941?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/941?src=pr&el=footer). Last update [fb630af...f7c5825](https://codecov.io/gh/hyperledger/iroha/pull/941?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-04 10:52:32,2018-03-23 10:16:49
https://api.github.com/repos/hyperledger/iroha/issues/941,https://api.github.com/repos/hyperledger/iroha/issues/comments/363775650,https://github.com/hyperledger/iroha/pull/941#issuecomment-363775650,l4l,Something wrong with the test and DCO,2018-02-07 13:54:34,2018-02-07 13:54:48
https://api.github.com/repos/hyperledger/iroha/issues/940,https://api.github.com/repos/hyperledger/iroha/issues/comments/363520464,https://github.com/hyperledger/iroha/pull/940#issuecomment-363520464,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/940?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@d05b637`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `32.03%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/940/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/940?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #940   +/-   ##
==========================================
  Coverage           ?   32.09%           
==========================================
  Files              ?      494           
  Lines              ?    15244           
  Branches           ?     9760           
==========================================
  Hits               ?     4893           
  Misses             ?     1469           
  Partials           ?     8882
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/940?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfY29tbWFuZC5ocHA=) | `50% <ø> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_block\_index.hpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX2luZGV4LmhwcA==) | `66.66% <ø> (ø)` | |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `5.55% <ø> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `15% <0%> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `51.85% <0%> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `37.5% <0%> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_block\_index.cpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX2luZGV4LmNwcA==) | `47.61% <0%> (ø)` | |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `10.63% <1.88%> (ø)` | |
| ... and [7 more](https://codecov.io/gh/hyperledger/iroha/pull/940/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/940?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/940?src=pr&el=footer). Last update [d05b637...927e9b2](https://codecov.io/gh/hyperledger/iroha/pull/940?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-06 18:34:37,2018-02-19 11:03:07
https://api.github.com/repos/hyperledger/iroha/issues/940,https://api.github.com/repos/hyperledger/iroha/issues/comments/363555670,https://github.com/hyperledger/iroha/pull/940#issuecomment-363555670,l4l,Also check out the sorabot's minor,2018-02-06 20:31:40,2018-02-06 20:31:40
https://api.github.com/repos/hyperledger/iroha/issues/940,https://api.github.com/repos/hyperledger/iroha/issues/comments/366656130,https://github.com/hyperledger/iroha/pull/940#issuecomment-366656130,sorabot,"SonarQube analysis reported 54 issues
* ![MINOR][MINOR] 12 minor
* ![INFO][INFO] 42 info

#### Top 10 issues

1. ![MINOR][MINOR] [postgres_block_index.hpp#L56](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/irohad/ametsuchi/impl/postgres_block_index.hpp#L56): Unused private function: 'PostgresBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.cpp#L144](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/irohad/ametsuchi/impl/postgres_block_query.cpp#L144): Define a constant instead of duplicating this literal "" AND height = "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/irohad/ametsuchi/impl/postgres_block_query.hpp#L72): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L80](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/irohad/ametsuchi/impl/postgres_block_query.hpp#L80): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L90](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/irohad/ametsuchi/impl/postgres_block_query.hpp#L90): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L103](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L103): Unused private function: 'PostgresWsvCommand::makeCommandResult' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [command_executor.cpp#L272](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/irohad/model/execution/impl/command_executor.cpp#L272): Define a constant instead of duplicating this literal ""asset %s is absent"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L279](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/irohad/model/execution/impl/command_executor.cpp#L279): Define a constant instead of duplicating this literal ""precision mismatch: expected %d, but got %d"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L785](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/irohad/model/execution/impl/command_executor.cpp#L785): Define a constant instead of duplicating this literal ""asset %s is absent of %s"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [result.hpp#L40](https://github.com/hyperledger/iroha/blob/fdc9d01850c68f735846bae2eb4d8f8f9fb5b618/libs/common/result.hpp#L40): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-19 11:01:16,2018-02-19 11:01:16
https://api.github.com/repos/hyperledger/iroha/issues/939,https://api.github.com/repos/hyperledger/iroha/issues/comments/362615409,https://github.com/hyperledger/iroha/pull/939#issuecomment-362615409,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/939?src=pr&el=h1) Report
> Merging [#939](https://codecov.io/gh/hyperledger/iroha/pull/939?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/48633cb0285196ec6333e30937d2fec10427b898?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/939/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/939?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #939   +/-   ##
========================================
  Coverage    31.05%   31.05%           
========================================
  Files          479      479           
  Lines        14473    14473           
  Branches      9364     9364           
========================================
  Hits          4495     4495           
  Misses        1466     1466           
  Partials      8512     8512
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/939?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/939?src=pr&el=footer). Last update [48633cb...60c7a71](https://codecov.io/gh/hyperledger/iroha/pull/939?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-02 15:21:00,2018-02-02 15:37:53
https://api.github.com/repos/hyperledger/iroha/issues/939,https://api.github.com/repos/hyperledger/iroha/issues/comments/362705082,https://github.com/hyperledger/iroha/pull/939#issuecomment-362705082,Warchant,2750 :hocho: ,2018-02-02 20:57:16,2018-02-02 20:57:16
https://api.github.com/repos/hyperledger/iroha/issues/939,https://api.github.com/repos/hyperledger/iroha/issues/comments/362706310,https://github.com/hyperledger/iroha/pull/939#issuecomment-362706310,laSinteZ,"2,307 - example/node/package-lock.json
[Yes, we should commit it.](https://docs.npmjs.com/files/package-lock.json)",2018-02-02 21:01:56,2018-02-02 21:01:56
https://api.github.com/repos/hyperledger/iroha/issues/939,https://api.github.com/repos/hyperledger/iroha/issues/comments/370642770,https://github.com/hyperledger/iroha/pull/939#issuecomment-370642770,luckychess,Outdated. Nodejs support will be implemented in another pull request.,2018-03-06 02:43:34,2018-03-06 02:43:34
https://api.github.com/repos/hyperledger/iroha/issues/939,https://api.github.com/repos/hyperledger/iroha/issues/comments/372220514,https://github.com/hyperledger/iroha/pull/939#issuecomment-372220514,luckychess,Please do not touch this branch; it could be used in another prs.,2018-03-12 07:54:01,2018-03-12 07:54:01
https://api.github.com/repos/hyperledger/iroha/issues/938,https://api.github.com/repos/hyperledger/iroha/issues/comments/362588585,https://github.com/hyperledger/iroha/pull/938#issuecomment-362588585,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/938?src=pr&el=h1) Report
> Merging [#938](https://codecov.io/gh/hyperledger/iroha/pull/938?src=pr&el=desc) into [feature/swig-node](https://codecov.io/gh/hyperledger/iroha/commit/078d644700b3e22d8597216d644aa9a86cfa3620?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/938/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/938?src=pr&el=tree)

```diff
@@                Coverage Diff                 @@
##           feature/swig-node     #938   +/-   ##
==================================================
  Coverage              31.33%   31.33%           
==================================================
  Files                    469      469           
  Lines                  14191    14191           
  Branches                9188     9188           
==================================================
  Hits                    4447     4447           
  Misses                  1365     1365           
  Partials                8379     8379
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/938?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/938?src=pr&el=footer). Last update [078d644...2eb09c3](https://codecov.io/gh/hyperledger/iroha/pull/938?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-02 13:38:52,2018-02-02 13:38:52
https://api.github.com/repos/hyperledger/iroha/issues/937,https://api.github.com/repos/hyperledger/iroha/issues/comments/363126468,https://github.com/hyperledger/iroha/pull/937#issuecomment-363126468,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/937?src=pr&el=h1) Report
> Merging [#937](https://codecov.io/gh/hyperledger/iroha/pull/937?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/dd48ee23280b976664742656b47896ec9c724502?src=pr&el=desc) will **increase** coverage by `0.47%`.
> The diff coverage is `29.21%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/937/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/937?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #937      +/-   ##
==========================================
+ Coverage    30.73%   31.2%   +0.47%     
==========================================
  Files          478     485       +7     
  Lines        14389   14647     +258     
  Branches      9334    9460     +126     
==========================================
+ Hits          4422    4571     +149     
- Misses        1476    1486      +10     
- Partials      8491    8590      +99
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/937?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/proposal\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcHJvcG9zYWxfdmFsaWRhdG9yLmhwcA==) | `61.53% <0%> (ø)` | |
| [...model/builders/protobuf/transport\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zcG9ydF9idWlsZGVyX3Rlc3QuY3Bw) | `28.57% <28.57%> (ø)` | |
| [...ared\_model/builders/protobuf/transport\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zcG9ydF9idWlsZGVyLmhwcA==) | `37.5% <37.5%> (ø)` | |
| [...s/protobuf/builder\_templates/proposal\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3Byb3Bvc2FsX3RlbXBsYXRlLmhwcA==) | `61.9% <50%> (ø)` | |
| [libs/common/visitor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vdmlzaXRvci5ocHA=) | `60% <0%> (-15%)` | :arrow_down: |
| [irohad/torii/impl/query\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvcXVlcnlfc2VydmljZS5jcHA=) | `15.78% <0%> (-11.49%)` | :arrow_down: |
| [irohad/main/server\_runner.cpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5jcHA=) | `52.38% <0%> (-8.74%)` | :arrow_down: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `31.37% <0%> (-7.23%)` | :arrow_down: |
| [...e/shared\_model/validators/field\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `46.75% <0%> (-3.25%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `27.81% <0%> (-2.62%)` | :arrow_down: |
| ... and [118 more](https://codecov.io/gh/hyperledger/iroha/pull/937/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/937?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/937?src=pr&el=footer). Last update [dd48ee2...b91fb0b](https://codecov.io/gh/hyperledger/iroha/pull/937?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-05 15:52:13,2018-02-05 19:40:58
https://api.github.com/repos/hyperledger/iroha/issues/937,https://api.github.com/repos/hyperledger/iroha/issues/comments/363202053,https://github.com/hyperledger/iroha/pull/937#issuecomment-363202053,sorabot,"SonarQube analysis reported 35 issues
* ![MINOR][MINOR] 2 minor
* ![INFO][INFO] 33 info

#### Top 10 issues

1. ![MINOR][MINOR] [transport_builder_test.cpp#L89](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L89): The function 'createInvalidBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [transport_builder_test.cpp#L107](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/test/module/shared_model/builders/protobuf/transport_builder_test.cpp#L107): The function 'createInvalidProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![INFO][INFO] [ordering_gate_transport_grpc.hpp#L30](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/irohad/ordering/impl/ordering_gate_transport_grpc.hpp#L30): Undocumented API: OrderingGateTransportGrpc [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_gate_transport_grpc.hpp#L35](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/irohad/ordering/impl/ordering_gate_transport_grpc.hpp#L35): Undocumented API: OrderingGateTransportGrpc [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L1](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/shared_model/backend/protobuf/proposal.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [proposal.hpp#L37](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/shared_model/backend/protobuf/proposal.hpp#L37): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L47](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/shared_model/backend/protobuf/proposal.hpp#L47): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L60](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/shared_model/backend/protobuf/proposal.hpp#L60): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L62](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/shared_model/backend/protobuf/proposal.hpp#L62): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal_template.hpp#L1](https://github.com/hyperledger/iroha/blob/b91fb0bcdd1267ef22a75ac012ef4844d67ef319/shared_model/builders/protobuf/builder_templates/proposal_template.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-05 19:54:46,2018-02-05 19:54:46
https://api.github.com/repos/hyperledger/iroha/issues/936,https://api.github.com/repos/hyperledger/iroha/issues/comments/362982486,https://github.com/hyperledger/iroha/pull/936#issuecomment-362982486,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/936?src=pr&el=h1) Report
> Merging [#936](https://codecov.io/gh/hyperledger/iroha/pull/936?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/fcc2f7c8ceaee4f7654c3b216d65b8906a35f633?src=pr&el=desc) will **increase** coverage by `0.04%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/936/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/936?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #936      +/-   ##
===========================================
+ Coverage    31.18%   31.22%   +0.04%     
===========================================
  Files          472      471       -1     
  Lines        14316    14227      -89     
  Branches      9276     9214      -62     
===========================================
- Hits          4464     4443      -21     
+ Misses        1390     1377      -13     
+ Partials      8462     8407      -55
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/936?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/936/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <0%> (-5.56%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/936/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `46.76% <0%> (-0.27%)` | :arrow_down: |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/936/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | `86.66% <0%> (ø)` | :arrow_up: |
| [irohad/model/execution/execution\_error.hpp](https://codecov.io/gh/hyperledger/iroha/pull/936/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9leGVjdXRpb25fZXJyb3IuaHBw) | | |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/936/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `11.09% <0%> (+0.05%)` | :arrow_up: |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/936/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `45.71% <0%> (+5.71%)` | :arrow_up: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/936/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `52% <0%> (+11.37%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/936?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/936?src=pr&el=footer). Last update [fcc2f7c...18b3a2e](https://codecov.io/gh/hyperledger/iroha/pull/936?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-05 05:04:07,2018-02-05 12:14:58
https://api.github.com/repos/hyperledger/iroha/issues/935,https://api.github.com/repos/hyperledger/iroha/issues/comments/362403907,https://github.com/hyperledger/iroha/pull/935#issuecomment-362403907,Warchant,"storage.hpp before:
![image](https://user-images.githubusercontent.com/1867551/35703687-0e416150-07ae-11e8-9b22-bf2e84fe0e37.png)

storage.hpp after:
![image](https://user-images.githubusercontent.com/1867551/35703698-1828d176-07ae-11e8-99eb-2a061fc41376.png)
",2018-02-01 21:15:05,2018-02-01 21:15:05
https://api.github.com/repos/hyperledger/iroha/issues/935,https://api.github.com/repos/hyperledger/iroha/issues/comments/362406039,https://github.com/hyperledger/iroha/pull/935#issuecomment-362406039,Warchant,"storage_result.hpp before:
![image](https://user-images.githubusercontent.com/1867551/35704051-362a947e-07af-11e8-8030-1535dcc83320.png)

storage_result.hpp after:
![image](https://user-images.githubusercontent.com/1867551/35704062-3dacb18c-07af-11e8-85fb-97b99877bfad.png)
",2018-02-01 21:23:09,2018-02-01 21:23:09
https://api.github.com/repos/hyperledger/iroha/issues/935,https://api.github.com/repos/hyperledger/iroha/issues/comments/362670480,https://github.com/hyperledger/iroha/pull/935#issuecomment-362670480,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/935?src=pr&el=h1) Report
> Merging [#935](https://codecov.io/gh/hyperledger/iroha/pull/935?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/432a8c51a944c457cc3fdc2a9329afb4d12747fb?src=pr&el=desc) will **decrease** coverage by `0.11%`.
> The diff coverage is `23.21%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/935/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/935?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #935      +/-   ##
===========================================
- Coverage    31.05%   30.94%   -0.12%     
===========================================
  Files          479      479              
  Lines        14473    14515      +42     
  Branches      9364     9412      +48     
===========================================
- Hits          4495     4491       -4     
  Misses        1466     1466              
- Partials      8512     8558      +46
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/935?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [libs/validator/domain\_name\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-bGlicy92YWxpZGF0b3IvZG9tYWluX25hbWVfdmFsaWRhdG9yLmNwcA==) | `27.27% <ø> (ø)` | :arrow_up: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `47.02% <ø> (ø)` | :arrow_up: |
| [...le/irohad/validation/stateless\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVsZXNzX3ZhbGlkYXRpb25fdGVzdC5jcHA=) | `23.25% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/create\_domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9kb21haW4uaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmQuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [libs/common/visitor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vdmlzaXRvci5ocHA=) | `75% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/model/model\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL21vZGVsX21vY2tzLmhwcA==) | `42.85% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/messages.hpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvbWVzc2FnZXMuaHBw) | `81.81% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/storage/yac\_vote\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfdm90ZV9zdG9yYWdlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| ... and [109 more](https://codecov.io/gh/hyperledger/iroha/pull/935/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/935?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/935?src=pr&el=footer). Last update [432a8c5...23c056a](https://codecov.io/gh/hyperledger/iroha/pull/935?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-02 18:45:18,2018-02-03 09:50:04
https://api.github.com/repos/hyperledger/iroha/issues/935,https://api.github.com/repos/hyperledger/iroha/issues/comments/362795036,https://github.com/hyperledger/iroha/pull/935#issuecomment-362795036,sorabot,"SonarQube analysis reported 306 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 58 minor
* ![INFO][INFO] 247 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L46](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/main.cpp#L46): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L99](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/interactive/impl/interactive_query_cli.cpp#L99): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L133](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/interactive/impl/interactive_query_cli.cpp#L133): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_status_cli.cpp#L78](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/interactive/impl/interactive_status_cli.cpp#L78): Define a constant instead of duplicating this literal ""Choose action: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_status_cli.cpp#L83](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/interactive/impl/interactive_status_cli.cpp#L83): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L204](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L204): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L322](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L322): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_cli.hpp#L40](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/interactive/interactive_cli.hpp#L40): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L147](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/interactive/interactive_transaction_cli.hpp#L147): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [main.cpp#L37](https://github.com/hyperledger/iroha/blob/23c056a745adbefee1925f6120bdccbab35fe347/iroha-cli/main.cpp#L37): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-03 10:01:02,2018-02-03 10:01:02
https://api.github.com/repos/hyperledger/iroha/issues/933,https://api.github.com/repos/hyperledger/iroha/issues/comments/362379327,https://github.com/hyperledger/iroha/pull/933#issuecomment-362379327,Warchant,"Redis also should be removed from CI and scripts.
Use `find in path` to find all appearances of Redis.",2018-02-01 19:42:29,2018-02-01 19:42:29
https://api.github.com/repos/hyperledger/iroha/issues/933,https://api.github.com/repos/hyperledger/iroha/issues/comments/362596831,https://github.com/hyperledger/iroha/pull/933#issuecomment-362596831,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/933?src=pr&el=h1) Report
> Merging [#933](https://codecov.io/gh/hyperledger/iroha/pull/933?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/dd48ee23280b976664742656b47896ec9c724502?src=pr&el=desc) will **increase** coverage by `0.05%`.
> The diff coverage is `44.21%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/933/graphs/tree.svg?height=150&token=VEvywEmaef&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/933?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #933      +/-   ##
===========================================
+ Coverage    30.73%   30.78%   +0.05%     
===========================================
  Files          478      478              
  Lines        14389    14372      -17     
  Branches      9334     9315      -19     
===========================================
+ Hits          4422     4425       +3     
+ Misses        1476     1470       -6     
+ Partials      8491     8477      -14
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/933?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/ametsuchi/ametsuchi\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfZml4dHVyZS5ocHA=) | `39.28% <ø> (+5.07%)` | :arrow_up: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `36.84% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `15% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `24.16% <0%> (-0.06%)` | :arrow_down: |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `40.54% <0%> (+0.54%)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `51.78% <0%> (-0.43%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `32.17% <0%> (+1.73%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `20.75% <0%> (-1.47%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <0%> (ø)` | |
| ... and [10 more](https://codecov.io/gh/hyperledger/iroha/pull/933/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/933?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/933?src=pr&el=footer). Last update [dd48ee2...0103862](https://codecov.io/gh/hyperledger/iroha/pull/933?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-02 14:12:21,2018-02-06 15:05:28
https://api.github.com/repos/hyperledger/iroha/issues/933,https://api.github.com/repos/hyperledger/iroha/issues/comments/363419909,https://github.com/hyperledger/iroha/pull/933#issuecomment-363419909,sorabot,"SonarQube analysis reported 125 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 19 minor
* ![INFO][INFO] 105 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L258](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/main/application.cpp#L258): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L39](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L39): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_index.hpp#L56](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/ametsuchi/impl/postgres_block_index.hpp#L56): Unused private function: 'PostgresBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.cpp#L144](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/ametsuchi/impl/postgres_block_query.cpp#L144): Define a constant instead of duplicating this literal "" AND height = "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/ametsuchi/impl/postgres_block_query.hpp#L72): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L80](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/ametsuchi/impl/postgres_block_query.hpp#L80): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L90](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/ametsuchi/impl/postgres_block_query.hpp#L90): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L92](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L92): Unused private function: 'PostgresWsvCommand::execute' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [application.cpp#L34](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/main/application.cpp#L34): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.hpp#L69](https://github.com/hyperledger/iroha/blob/b005fcac1da13a7a5c75f51178f69863c8cf6137/irohad/main/application.hpp#L69): parameter list has 9 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-06 13:20:34,2018-02-06 13:20:34
https://api.github.com/repos/hyperledger/iroha/issues/932,https://api.github.com/repos/hyperledger/iroha/issues/comments/362230466,https://github.com/hyperledger/iroha/pull/932#issuecomment-362230466,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/932?src=pr&el=h1) Report
> Merging [#932](https://codecov.io/gh/hyperledger/iroha/pull/932?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/caac95ae89531265fc3d33971a5ab44038bdede6?src=pr&el=desc) will **decrease** coverage by `0.23%`.
> The diff coverage is `48.88%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/932/graphs/tree.svg?token=VEvywEmaef&height=150&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/932?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #932      +/-   ##
===========================================
- Coverage     31.4%   31.17%   -0.24%     
===========================================
  Files          471      463       -8     
  Lines        14255    14031     -224     
  Branches      9214     9104     -110     
===========================================
- Hits          4477     4374     -103     
+ Misses        1377     1359      -18     
+ Partials      8401     8298     -103
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/932?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/torii\_utils/query\_client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-bGlicy90b3JpaV91dGlscy9xdWVyeV9jbGllbnQuY3Bw) | `40% <ø> (ø)` | :arrow_up: |
| [irohad/main/server\_runner.hpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5ocHA=) | `100% <ø> (ø)` | |
| [irohad/torii/command\_client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfY2xpZW50LmNwcA==) | `49.2% <ø> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `52.21% <0%> (-0.95%)` | :arrow_down: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `36.84% <0%> (ø)` | :arrow_up: |
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/torii/query\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3F1ZXJ5X3NlcnZpY2UuaHBw) | `0% <0%> (-100%)` | :arrow_down: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `26% <0%> (ø)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.2% <0%> (-0.19%)` | :arrow_down: |
| [irohad/torii/impl/query\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvcXVlcnlfc2VydmljZS5jcHA=) | `27.27% <100%> (+11.48%)` | :arrow_up: |
| ... and [125 more](https://codecov.io/gh/hyperledger/iroha/pull/932/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/932?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/932?src=pr&el=footer). Last update [caac95a...3370f3f](https://codecov.io/gh/hyperledger/iroha/pull/932?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-01 10:54:14,2018-02-03 17:14:41
https://api.github.com/repos/hyperledger/iroha/issues/932,https://api.github.com/repos/hyperledger/iroha/issues/comments/362291972,https://github.com/hyperledger/iroha/pull/932#issuecomment-362291972,sorabot,"SonarQube analysis reported 76 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 9 minor
* ![INFO][INFO] 66 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L263](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/irohad/main/application.cpp#L263): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [application.cpp#L34](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/irohad/main/application.cpp#L34): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.hpp#L69](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/irohad/main/application.hpp#L69): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [command_client.cpp#L3](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/irohad/torii/command_client.cpp#L3): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_client.cpp#L46](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/irohad/torii/command_client.cpp#L46): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_client.hpp#L4](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/irohad/torii/command_client.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_service.hpp#L4](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/irohad/torii/command_service.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [query_service.hpp#L4](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/irohad/torii/query_service.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [query_client.cpp#L3](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/libs/torii_utils/query_client.cpp#L3): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [query_client.hpp#L4](https://github.com/hyperledger/iroha/blob/3370f3fa84e22c0879ac5fd2964763c700c14fcd/libs/torii_utils/query_client.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-01 15:01:18,2018-02-01 15:01:18
https://api.github.com/repos/hyperledger/iroha/issues/932,https://api.github.com/repos/hyperledger/iroha/issues/comments/363033170,https://github.com/hyperledger/iroha/pull/932#issuecomment-363033170,motxx,"> Use sync server implementation instead of async

I'd like to confirm just in case;
Will the code change more readable and shorter asynchronous implementation later?
I mean, is making Torii synchronous a temporary solution?

Or; Does the team decide that, the internal services of iroha-network should use async to keep ""Liveness"" but sync service is enough between client and server?",2018-02-05 09:50:02,2018-02-05 10:36:44
https://api.github.com/repos/hyperledger/iroha/issues/932,https://api.github.com/repos/hyperledger/iroha/issues/comments/364257455,https://github.com/hyperledger/iroha/pull/932#issuecomment-364257455,luckychess,"Sorry for late answer.
We decided to use sync implementation for Torii because 2 main reasons:
1) Sync implementation is much shorter and easier to read.
2) Sync implementation allows grpc to manage threads by itself. We had plans to use our own thread pool for server side but sync implementation allows us to just let grpc do it - it uses its own thread pool for sync server.
For now sync implementation should be good enough. If at some point in future we decide that we need more custom solution we can go back to async approach. I personally do not think we will need to do it soon.
I'm not sure for other services. They use own implementations (mostly sync I believe but better check) and their transports completely independent from Torii transport.",2018-02-08 21:41:08,2018-02-08 21:41:08
https://api.github.com/repos/hyperledger/iroha/issues/932,https://api.github.com/repos/hyperledger/iroha/issues/comments/364308551,https://github.com/hyperledger/iroha/pull/932#issuecomment-364308551,motxx,"I see, thank you.",2018-02-09 01:40:47,2018-02-09 01:40:47
https://api.github.com/repos/hyperledger/iroha/issues/931,https://api.github.com/repos/hyperledger/iroha/issues/comments/362180948,https://github.com/hyperledger/iroha/pull/931#issuecomment-362180948,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/931?src=pr&el=h1) Report
> Merging [#931](https://codecov.io/gh/hyperledger/iroha/pull/931?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/8fba7e310102ec59c716d2542cbc8f743c750105?src=pr&el=desc) will **increase** coverage by `0.13%`.
> The diff coverage is `25.64%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/931/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/931?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #931      +/-   ##
===========================================
+ Coverage    30.98%   31.11%   +0.13%     
===========================================
  Files          479      473       -6     
  Lines        14517    14165     -352     
  Branches      9408     9164     -244     
===========================================
- Hits          4498     4408      -90     
+ Misses        1466     1386      -80     
+ Partials      8553     8371     -182
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/931?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [iroha-cli/client.hpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/torii/command\_client.hpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfY2xpZW50LmhwcA==) | `100% <ø> (ø)` | |
| [irohad/torii/query\_client.hpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3F1ZXJ5X2NsaWVudC5ocHA=) | `100% <ø> (ø)` | |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `22.14% <0%> (-5.43%)` | :arrow_down: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `9.63% <0%> (-0.86%)` | :arrow_down: |
| [irohad/torii/command\_client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfY2xpZW50LmNwcA==) | `45.83% <52.38%> (-3.38%)` | :arrow_down: |
| [irohad/torii/query\_client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3F1ZXJ5X2NsaWVudC5jcHA=) | `50% <52.94%> (ø)` | |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <0%> (-5.56%)` | :arrow_down: |
| [...e/shared\_model/validators/field\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `46.75% <0%> (-3.25%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `27.81% <0%> (-2.62%)` | :arrow_down: |
| ... and [116 more](https://codecov.io/gh/hyperledger/iroha/pull/931/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/931?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/931?src=pr&el=footer). Last update [8fba7e3...8091d4f](https://codecov.io/gh/hyperledger/iroha/pull/931?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-01 07:26:17,2018-02-05 09:39:20
https://api.github.com/repos/hyperledger/iroha/issues/931,https://api.github.com/repos/hyperledger/iroha/issues/comments/362216477,https://github.com/hyperledger/iroha/pull/931#issuecomment-362216477,bakhtin,"SonarQube analysis reported 25 issues
* ![MINOR][MINOR] 6 minor
* ![INFO][INFO] 19 info

#### Top 10 issues

1. ![MINOR][MINOR] [command_client.cpp#L3](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/irohad/torii/command_client.cpp#L3): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_client.cpp#L34](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/irohad/torii/command_client.cpp#L34): Member variable 'CommandSyncClient::port_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [command_client.hpp#L4](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/irohad/torii/command_client.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [query_client.cpp#L3](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/irohad/torii/query_client.cpp#L3): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [query_client.cpp#L32](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/irohad/torii/query_client.cpp#L32): Member variable 'QuerySyncClient::port_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [query_client.hpp#L4](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/irohad/torii/query_client.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [client.hpp#L30](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/iroha-cli/client.hpp#L30): Undocumented API: CliClient [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [client.hpp#L33](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/iroha-cli/client.hpp#L33): Undocumented API: Response [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [client.hpp#L34](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/iroha-cli/client.hpp#L34): Undocumented API: status [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [client.hpp#L35](https://github.com/hyperledger/iroha/blob/68160e360454b34b0ac80482b3b14616e95d054f/iroha-cli/client.hpp#L35): Undocumented API: answer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-01 09:58:44,2018-02-01 09:58:44
https://api.github.com/repos/hyperledger/iroha/issues/931,https://api.github.com/repos/hyperledger/iroha/issues/comments/362526295,https://github.com/hyperledger/iroha/pull/931#issuecomment-362526295,sorabot,"SonarQube analysis reported 29 issues
* ![MINOR][MINOR] 6 minor
* ![INFO][INFO] 23 info

#### Top 10 issues

1. ![MINOR][MINOR] [command_client.cpp#L3](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/irohad/torii/command_client.cpp#L3): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_client.cpp#L34](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/irohad/torii/command_client.cpp#L34): Member variable 'CommandSyncClient::port_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [command_client.hpp#L4](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/irohad/torii/command_client.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [query_client.cpp#L3](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/irohad/torii/query_client.cpp#L3): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [query_client.cpp#L33](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/irohad/torii/query_client.cpp#L33): Member variable 'QuerySyncClient::port_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [query_client.hpp#L4](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/irohad/torii/query_client.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [client.hpp#L30](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/iroha-cli/client.hpp#L30): Undocumented API: CliClient [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [client.hpp#L33](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/iroha-cli/client.hpp#L33): Undocumented API: Response [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [client.hpp#L34](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/iroha-cli/client.hpp#L34): Undocumented API: status [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [client.hpp#L35](https://github.com/hyperledger/iroha/blob/41bef1086269fa6fdd36df0d676f540627c0568c/iroha-cli/client.hpp#L35): Undocumented API: answer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-02 09:00:37,2018-02-02 09:00:37
https://api.github.com/repos/hyperledger/iroha/issues/930,https://api.github.com/repos/hyperledger/iroha/issues/comments/362000278,https://github.com/hyperledger/iroha/pull/930#issuecomment-362000278,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/930?src=pr&el=h1) Report
> Merging [#930](https://codecov.io/gh/hyperledger/iroha/pull/930?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/caac95ae89531265fc3d33971a5ab44038bdede6?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `16.66%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/930/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/930?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #930      +/-   ##
===========================================
- Coverage     31.4%   31.39%   -0.02%     
===========================================
  Files          471      471              
  Lines        14255    14255              
  Branches      9214     9215       +1     
===========================================
- Hits          4477     4475       -2     
- Misses        1377     1379       +2     
  Partials      8401     8401
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/930?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/930/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `37.5% <ø> (-4.17%)` | :arrow_down: |
| [shared\_model/cryptography/keypair.hpp](https://codecov.io/gh/hyperledger/iroha/pull/930/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9rZXlwYWlyLmhwcA==) | `25% <ø> (ø)` | :arrow_up: |
| [...cryptography/ed25519\_sha3\_impl/crypto\_provider.cpp](https://codecov.io/gh/hyperledger/iroha/pull/930/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9jcnlwdG9fcHJvdmlkZXIuY3Bw) | `57.14% <0%> (ø)` | :arrow_up: |
| [...\_model/cryptography/ed25519\_sha3\_impl/verifier.cpp](https://codecov.io/gh/hyperledger/iroha/pull/930/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC92ZXJpZmllci5jcHA=) | `25% <0%> (ø)` | :arrow_up: |
| [...ed\_model/cryptography/ed25519\_sha3\_impl/signer.cpp](https://codecov.io/gh/hyperledger/iroha/pull/930/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9zaWduZXIuY3Bw) | `28.57% <33.33%> (-14.29%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/930?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/930?src=pr&el=footer). Last update [caac95a...6b7ae57](https://codecov.io/gh/hyperledger/iroha/pull/930?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-31 17:05:05,2018-02-02 08:30:40
https://api.github.com/repos/hyperledger/iroha/issues/930,https://api.github.com/repos/hyperledger/iroha/issues/comments/362258208,https://github.com/hyperledger/iroha/pull/930#issuecomment-362258208,bakhtin,"SonarQube analysis reported 9 issues

1. ![INFO][INFO] [blob.hpp#L34](https://github.com/hyperledger/iroha/blob/224b821b959807f69d5b6ce83d7a0dbcb925b5ef/shared_model/cryptography/blob.hpp#L34): Undocumented API: toBinaryString [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [blob.hpp#L41](https://github.com/hyperledger/iroha/blob/224b821b959807f69d5b6ce83d7a0dbcb925b5ef/shared_model/cryptography/blob.hpp#L41): Undocumented API: Bytes [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [blob.hpp#L55](https://github.com/hyperledger/iroha/blob/224b821b959807f69d5b6ce83d7a0dbcb925b5ef/shared_model/cryptography/blob.hpp#L55): Undocumented API: Blob [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [blob.hpp#L125](https://github.com/hyperledger/iroha/blob/224b821b959807f69d5b6ce83d7a0dbcb925b5ef/shared_model/cryptography/blob.hpp#L125): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [blob.hpp#L130](https://github.com/hyperledger/iroha/blob/224b821b959807f69d5b6ce83d7a0dbcb925b5ef/shared_model/cryptography/blob.hpp#L130): Undocumented API: toBinaryString [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keypair.hpp#L45](https://github.com/hyperledger/iroha/blob/224b821b959807f69d5b6ce83d7a0dbcb925b5ef/shared_model/cryptography/keypair.hpp#L45): Undocumented API: Keypair [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keypair.hpp#L65](https://github.com/hyperledger/iroha/blob/224b821b959807f69d5b6ce83d7a0dbcb925b5ef/shared_model/cryptography/keypair.hpp#L65): Undocumented API: privateKey [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keypair.hpp#L91](https://github.com/hyperledger/iroha/blob/224b821b959807f69d5b6ce83d7a0dbcb925b5ef/shared_model/cryptography/keypair.hpp#L91): Undocumented API: public_key_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keypair.hpp#L92](https://github.com/hyperledger/iroha/blob/224b821b959807f69d5b6ce83d7a0dbcb925b5ef/shared_model/cryptography/keypair.hpp#L92): Undocumented API: private_key_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-01 12:58:04,2018-02-01 12:58:04
https://api.github.com/repos/hyperledger/iroha/issues/930,https://api.github.com/repos/hyperledger/iroha/issues/comments/362518330,https://github.com/hyperledger/iroha/pull/930#issuecomment-362518330,sorabot,"SonarQube analysis reported 9 issues

1. ![INFO][INFO] [blob.hpp#L34](https://github.com/hyperledger/iroha/blob/6b7ae5758aaba58f7dc363768a60ce0618a229b6/shared_model/cryptography/blob.hpp#L34): Undocumented API: toBinaryString [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [blob.hpp#L41](https://github.com/hyperledger/iroha/blob/6b7ae5758aaba58f7dc363768a60ce0618a229b6/shared_model/cryptography/blob.hpp#L41): Undocumented API: Bytes [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [blob.hpp#L55](https://github.com/hyperledger/iroha/blob/6b7ae5758aaba58f7dc363768a60ce0618a229b6/shared_model/cryptography/blob.hpp#L55): Undocumented API: Blob [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [blob.hpp#L125](https://github.com/hyperledger/iroha/blob/6b7ae5758aaba58f7dc363768a60ce0618a229b6/shared_model/cryptography/blob.hpp#L125): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [blob.hpp#L130](https://github.com/hyperledger/iroha/blob/6b7ae5758aaba58f7dc363768a60ce0618a229b6/shared_model/cryptography/blob.hpp#L130): Undocumented API: toBinaryString [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keypair.hpp#L45](https://github.com/hyperledger/iroha/blob/6b7ae5758aaba58f7dc363768a60ce0618a229b6/shared_model/cryptography/keypair.hpp#L45): Undocumented API: Keypair [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keypair.hpp#L65](https://github.com/hyperledger/iroha/blob/6b7ae5758aaba58f7dc363768a60ce0618a229b6/shared_model/cryptography/keypair.hpp#L65): Undocumented API: privateKey [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keypair.hpp#L91](https://github.com/hyperledger/iroha/blob/6b7ae5758aaba58f7dc363768a60ce0618a229b6/shared_model/cryptography/keypair.hpp#L91): Undocumented API: public_key_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keypair.hpp#L92](https://github.com/hyperledger/iroha/blob/6b7ae5758aaba58f7dc363768a60ce0618a229b6/shared_model/cryptography/keypair.hpp#L92): Undocumented API: private_key_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-02 08:25:33,2018-02-02 08:25:33
https://api.github.com/repos/hyperledger/iroha/issues/929,https://api.github.com/repos/hyperledger/iroha/issues/comments/361917691,https://github.com/hyperledger/iroha/pull/929#issuecomment-361917691,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/929?src=pr&el=h1) Report
> Merging [#929](https://codecov.io/gh/hyperledger/iroha/pull/929?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/fcc2f7c8ceaee4f7654c3b216d65b8906a35f633?src=pr&el=desc) will **increase** coverage by `0.21%`.
> The diff coverage is `50.81%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/929/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/929?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #929      +/-   ##
===========================================
+ Coverage    31.18%   31.39%   +0.21%     
===========================================
  Files          472      472              
  Lines        14316    14258      -58     
  Branches      9276     9217      -59     
===========================================
+ Hits          4464     4477      +13     
+ Misses        1390     1377      -13     
+ Partials      8462     8404      -58
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/929?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...e/shared\_model/validators/query\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `42.5% <ø> (ø)` | :arrow_up: |
| [test/module/shared\_model/validators/validators.hpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9ycy5ocHA=) | `100% <100%> (ø)` | |
| [...ed\_model/validators/transaction\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yX3Rlc3QuY3Bw) | `40% <14.28%> (-4.9%)` | :arrow_down: |
| [...ders/protobuf/builder\_templates/query\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3F1ZXJ5X3RlbXBsYXRlLmhwcA==) | `35.52% <35.52%> (ø)` | |
| [...rotobuf/builder\_templates/transaction\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3RyYW5zYWN0aW9uX3RlbXBsYXRlLmhwcA==) | `86.48% <86.48%> (ø)` | |
| [shared\_model/utils/lazy\_initializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL2xhenlfaW5pdGlhbGl6ZXIuaHBw) | `78.94% <0%> (-7.72%)` | :arrow_down: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <0%> (-5.56%)` | :arrow_down: |
| [...f/queries/proto\_get\_account\_asset\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfYWNjb3VudF9hc3NldF90cmFuc2FjdGlvbnMuaHBw) | `70% <0%> (-5%)` | :arrow_down: |
| [...kend/protobuf/queries/proto\_get\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfYWNjb3VudF9kZXRhaWwuaHBw) | `70% <0%> (-5%)` | :arrow_down: |
| [...kend/protobuf/queries/proto\_get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfYWNjb3VudF9hc3NldHMuaHBw) | `70% <0%> (-5%)` | :arrow_down: |
| ... and [40 more](https://codecov.io/gh/hyperledger/iroha/pull/929/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/929?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/929?src=pr&el=footer). Last update [fcc2f7c...d7d4917](https://codecov.io/gh/hyperledger/iroha/pull/929?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-31 12:27:31,2018-02-02 08:09:35
https://api.github.com/repos/hyperledger/iroha/issues/929,https://api.github.com/repos/hyperledger/iroha/issues/comments/362199210,https://github.com/hyperledger/iroha/pull/929#issuecomment-362199210,bakhtin,"SonarQube analysis reported 47 issues
* ![INFO][INFO] 47 info

#### Top 10 issues

1. ![INFO][INFO] [model_transaction_builder.hpp#L39](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/bindings/model_transaction_builder.hpp#L39): Undocumented API: ModelTransactionBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [query_template.hpp#L1](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/builders/protobuf/builder_templates/query_template.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [query_template.hpp#L32](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/builders/protobuf/builder_templates/query_template.hpp#L32): Undocumented API: TemplateQueryBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [query_template.hpp#L81](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/builders/protobuf/builder_templates/query_template.hpp#L81): Undocumented API: TemplateQueryBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [query_template.hpp#L81](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/builders/protobuf/builder_templates/query_template.hpp#L81): Class 'TemplateQueryBuilder' has a constructor with 1 argument that is not explicit. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoExplicitConstructor)
1. ![INFO][INFO] [query_template.hpp#L84](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/builders/protobuf/builder_templates/query_template.hpp#L84): Undocumented API: createdTime [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [query_template.hpp#L90](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/builders/protobuf/builder_templates/query_template.hpp#L90): Undocumented API: creatorAccountId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [query_template.hpp#L97](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/builders/protobuf/builder_templates/query_template.hpp#L97): Undocumented API: queryCounter [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [query_template.hpp#L103](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/builders/protobuf/builder_templates/query_template.hpp#L103): Undocumented API: getAccount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [query_template.hpp#L110](https://github.com/hyperledger/iroha/blob/fba6cb00c6eb5fdb6924a3475c99634cbc8d9cb1/shared_model/builders/protobuf/builder_templates/query_template.hpp#L110): Undocumented API: getSignatories [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-01 08:53:04,2018-02-01 08:53:04
https://api.github.com/repos/hyperledger/iroha/issues/929,https://api.github.com/repos/hyperledger/iroha/issues/comments/362510782,https://github.com/hyperledger/iroha/pull/929#issuecomment-362510782,sorabot,"SonarQube analysis reported 76 issues
* ![INFO][INFO] 76 info

#### Top 10 issues

1. ![INFO][INFO] [model_transaction_builder.hpp#L39](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/bindings/model_transaction_builder.hpp#L39): Undocumented API: ModelTransactionBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L1](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/builders/protobuf/block.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block.hpp#L26](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/builders/protobuf/block.hpp#L26): Undocumented API: BlockBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L1](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/builders/protobuf/builder_templates/block_template.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block_template.hpp#L86](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/builders/protobuf/builder_templates/block_template.hpp#L86): Undocumented API: TemplateBlockBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L99](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/builders/protobuf/builder_templates/block_template.hpp#L99): Undocumented API: txNumber [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L105](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/builders/protobuf/builder_templates/block_template.hpp#L105): Undocumented API: height [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L110](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/builders/protobuf/builder_templates/block_template.hpp#L110): Undocumented API: prevHash [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L117](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/builders/protobuf/builder_templates/block_template.hpp#L117): Undocumented API: createdTime [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L123](https://github.com/hyperledger/iroha/blob/f435ea97b2602bbdbeab580ef3dd9b0feb05809f/shared_model/builders/protobuf/builder_templates/block_template.hpp#L123): Undocumented API: build [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-02 07:46:20,2018-02-02 07:46:20
https://api.github.com/repos/hyperledger/iroha/issues/928,https://api.github.com/repos/hyperledger/iroha/issues/comments/361891122,https://github.com/hyperledger/iroha/pull/928#issuecomment-361891122,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/928?src=pr&el=h1) Report
> Merging [#928](https://codecov.io/gh/hyperledger/iroha/pull/928?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/18ae56096e53cfc5ef4f8b2a3fbe8b64eb4a3c46?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/928/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/928?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #928   +/-   ##
========================================
  Coverage    31.32%   31.32%           
========================================
  Files          469      469           
  Lines        14193    14193           
  Branches      9190     9190           
========================================
  Hits          4446     4446           
  Misses        1366     1366           
  Partials      8381     8381
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/928?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/928?src=pr&el=footer). Last update [18ae560...0836b06](https://codecov.io/gh/hyperledger/iroha/pull/928?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-31 10:32:47,2018-01-31 10:32:47
https://api.github.com/repos/hyperledger/iroha/issues/928,https://api.github.com/repos/hyperledger/iroha/issues/comments/361894362,https://github.com/hyperledger/iroha/pull/928#issuecomment-361894362,sorabot,"SonarQube analysis reported 16 issues
* ![INFO][INFO] 16 info

#### Top 10 issues

1. ![INFO][INFO] [proposal.hpp#L1](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [proposal.hpp#L37](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L37): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L47](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L47): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L60](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L60): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L62](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L62): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L1](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [proposal.hpp#L32](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L32): Undocumented API: TemplateProposalBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L68](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L68): Undocumented API: height [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L73](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L73): Undocumented API: transactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L81](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L81): Undocumented API: createdTime [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-31 10:44:55,2018-01-31 10:44:55
https://api.github.com/repos/hyperledger/iroha/issues/928,https://api.github.com/repos/hyperledger/iroha/issues/comments/361898562,https://github.com/hyperledger/iroha/pull/928#issuecomment-361898562,bakhtin,"SonarQube analysis reported 16 issues
* ![INFO][INFO] 16 info

#### Top 10 issues

1. ![INFO][INFO] [proposal.hpp#L1](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [proposal.hpp#L37](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L37): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L47](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L47): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L60](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L60): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L62](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/backend/protobuf/proposal.hpp#L62): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L1](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [proposal.hpp#L32](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L32): Undocumented API: TemplateProposalBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L68](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L68): Undocumented API: height [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L73](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L73): Undocumented API: transactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L81](https://github.com/hyperledger/iroha/blob/0836b06b2fda7c8f0182cae7ceabb05607bcbbee/shared_model/builders/protobuf/proposal.hpp#L81): Undocumented API: createdTime [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-31 11:02:05,2018-01-31 11:02:05
https://api.github.com/repos/hyperledger/iroha/issues/927,https://api.github.com/repos/hyperledger/iroha/issues/comments/362603477,https://github.com/hyperledger/iroha/pull/927#issuecomment-362603477,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/927?src=pr&el=h1) Report
> Merging [#927](https://codecov.io/gh/hyperledger/iroha/pull/927?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/05ca504d716eb3766ea691d680175eab4b25fd1c?src=pr&el=desc) will **increase** coverage by `0.12%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/927/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/927?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #927      +/-   ##
===========================================
+ Coverage    31.05%   31.18%   +0.12%     
===========================================
  Files          479      472       -7     
  Lines        14473    14316     -157     
  Branches      9364     9276      -88     
===========================================
- Hits          4495     4464      -31     
+ Misses        1466     1390      -76     
+ Partials      8512     8462      -50
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/927?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/cryptography/keypair.hpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9rZXlwYWlyLmhwcA==) | `25% <0%> (ø)` | :arrow_up: |
| [...e/shared\_model/validators/query\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `42.5% <0%> (ø)` | :arrow_up: |
| [.../backend/protobuf/common\_objects/trivial\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvdHJpdmlhbF9wcm90by5ocHA=) | `41.66% <0%> (ø)` | :arrow_up: |
| [...red\_model/converters/json\_proto\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NvbnZlcnRlcnMvanNvbl9wcm90b19jb252ZXJ0ZXJfdGVzdC5jcHA=) | | |
| [shared\_model/validators/block\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvYmxvY2tfdmFsaWRhdG9yLmhwcA==) | | |
| [...ders/protobuf/builder\_templates/block\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL2Jsb2NrX3RlbXBsYXRlLmhwcA==) | | |
| [test/module/shared\_model/validators/validators.hpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9ycy5ocHA=) | | |
| [shared\_model/interfaces/iroha\_internal/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvaXJvaGFfaW50ZXJuYWwvYmxvY2suaHBw) | | |
| [...rotobuf/builder\_templates/transaction\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL3RyYW5zYWN0aW9uX3RlbXBsYXRlLmhwcA==) | | |
| [shared\_model/backend/protobuf/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvYmxvY2suaHBw) | | |
| ... and [8 more](https://codecov.io/gh/hyperledger/iroha/pull/927/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/927?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/927?src=pr&el=footer). Last update [05ca504...e23ac16](https://codecov.io/gh/hyperledger/iroha/pull/927?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-02-02 14:38:02,2018-02-02 14:38:02
https://api.github.com/repos/hyperledger/iroha/issues/926,https://api.github.com/repos/hyperledger/iroha/issues/comments/361356427,https://github.com/hyperledger/iroha/issues/926#issuecomment-361356427,motxx,"This happens because protobuf's auto-generated-codes are not equal between master and develop.
So when changing branch, please try `./clean.sh` (or only `rm schema/*.{cc,h}`) at `$IROHA_HOME` directory.",2018-01-29 19:22:39,2018-01-29 19:25:58
https://api.github.com/repos/hyperledger/iroha/issues/926,https://api.github.com/repos/hyperledger/iroha/issues/comments/361481795,https://github.com/hyperledger/iroha/issues/926#issuecomment-361481795,lckhd,It's working. Thank you.,2018-01-30 05:31:14,2018-01-30 05:31:14
https://api.github.com/repos/hyperledger/iroha/issues/925,https://api.github.com/repos/hyperledger/iroha/issues/comments/361271021,https://github.com/hyperledger/iroha/pull/925#issuecomment-361271021,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/925?src=pr&el=h1) Report
> Merging [#925](https://codecov.io/gh/hyperledger/iroha/pull/925?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/caac95ae89531265fc3d33971a5ab44038bdede6?src=pr&el=desc) will **decrease** coverage by `0.14%`.
> The diff coverage is `27.94%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/925/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/925?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #925      +/-   ##
===========================================
- Coverage     31.4%   31.26%   -0.15%     
===========================================
  Files          471      468       -3     
  Lines        14255    14248       -7     
  Branches      9214     9233      +19     
===========================================
- Hits          4477     4454      -23     
+ Misses        1377     1375       -2     
- Partials      8401     8419      +18
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/925?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | `86.66% <ø> (ø)` | :arrow_up: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `4.76% <0%> (+4.76%)` | :arrow_up: |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `40% <12.5%> (-5.72%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `40.62% <20%> (-11.38%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `47.04% <49.65%> (+0.28%)` | :arrow_up: |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `11.15% <5.42%> (+0.05%)` | :arrow_up: |
| [irohad/model/peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3BlZXIuaHBw) | `50% <0%> (-22.73%)` | :arrow_down: |
| [irohad/model/converters/impl/pb\_common.cpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9jb21tb24uY3Bw) | `23.07% <0%> (-20.93%)` | :arrow_down: |
| [libs/common/files.cpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vZmlsZXMuY3Bw) | `14.28% <0%> (-9.53%)` | :arrow_down: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `43.47% <0%> (-5.21%)` | :arrow_down: |
| ... and [108 more](https://codecov.io/gh/hyperledger/iroha/pull/925/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/925?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/925?src=pr&el=footer). Last update [caac95a...6d4450f](https://codecov.io/gh/hyperledger/iroha/pull/925?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-29 14:57:50,2018-02-01 12:52:15
https://api.github.com/repos/hyperledger/iroha/issues/925,https://api.github.com/repos/hyperledger/iroha/issues/comments/361323625,https://github.com/hyperledger/iroha/pull/925#issuecomment-361323625,x3medima17,"![image](https://user-images.githubusercontent.com/750115/35524896-03f69da4-0534-11e8-9e91-6ad2f3864305.png)
Please delete this paragraph if it is empty",2018-01-29 17:36:16,2018-01-29 17:36:16
https://api.github.com/repos/hyperledger/iroha/issues/925,https://api.github.com/repos/hyperledger/iroha/issues/comments/361693231,https://github.com/hyperledger/iroha/pull/925#issuecomment-361693231,bakhtin,"SonarQube analysis reported 54 issues
* ![MINOR][MINOR] 10 minor
* ![INFO][INFO] 44 info

#### Top 10 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L41](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L41): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L85](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/irohad/model/execution/impl/command_executor.cpp#L85): Define a constant instead of duplicating this literal ""failed to insert account role"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L295](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/irohad/model/execution/impl/command_executor.cpp#L295): Define a constant instead of duplicating this literal ""asset %s is absent"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L302](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/irohad/model/execution/impl/command_executor.cpp#L302): Define a constant instead of duplicating this literal ""precision mismatch: expected %d, but got %d"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L330](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/irohad/model/execution/impl/command_executor.cpp#L330): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L400](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/irohad/model/execution/impl/command_executor.cpp#L400): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L469](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/irohad/model/execution/impl/command_executor.cpp#L469): Define a constant instead of duplicating this literal ""failed to insert signatory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L473](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/irohad/model/execution/impl/command_executor.cpp#L473): Define a constant instead of duplicating this literal ""failed to insert account signatory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L823](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/irohad/model/execution/impl/command_executor.cpp#L823): Define a constant instead of duplicating this literal ""asset %s is absent of %s"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [result.hpp#L38](https://github.com/hyperledger/iroha/blob/85f7b4f79a2ac1e6db6f2dffce092fd344f74dcd/libs/common/result.hpp#L38): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-30 18:44:12,2018-01-30 18:44:12
https://api.github.com/repos/hyperledger/iroha/issues/925,https://api.github.com/repos/hyperledger/iroha/issues/comments/362259779,https://github.com/hyperledger/iroha/pull/925#issuecomment-362259779,sorabot,"SonarQube analysis reported 50 issues
* ![MINOR][MINOR] 8 minor
* ![INFO][INFO] 42 info

#### Top 10 issues

1. ![MINOR][MINOR] [mutable_storage_impl.cpp#L41](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/irohad/ametsuchi/impl/mutable_storage_impl.cpp#L41): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L85](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/irohad/model/execution/impl/command_executor.cpp#L85): Define a constant instead of duplicating this literal ""failed to insert account role"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L295](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/irohad/model/execution/impl/command_executor.cpp#L295): Define a constant instead of duplicating this literal ""asset %s is absent"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L302](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/irohad/model/execution/impl/command_executor.cpp#L302): Define a constant instead of duplicating this literal ""precision mismatch: expected %d, but got %d"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L466](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/irohad/model/execution/impl/command_executor.cpp#L466): Define a constant instead of duplicating this literal ""failed to insert signatory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L470](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/irohad/model/execution/impl/command_executor.cpp#L470): Define a constant instead of duplicating this literal ""failed to insert account signatory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L820](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/irohad/model/execution/impl/command_executor.cpp#L820): Define a constant instead of duplicating this literal ""asset %s is absent of %s"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [result.hpp#L38](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/libs/common/result.hpp#L38): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [mutable_storage_impl.hpp#L33](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/irohad/ametsuchi/impl/mutable_storage_impl.hpp#L33): Undocumented API: MutableStorageImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mutable_storage_impl.hpp#L37](https://github.com/hyperledger/iroha/blob/6d4450f0ef29262e782ae8f401ab43c7698c71e5/irohad/ametsuchi/impl/mutable_storage_impl.hpp#L37): Undocumented API: MutableStorageImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-01 13:04:45,2018-02-01 13:04:45
https://api.github.com/repos/hyperledger/iroha/issues/924,https://api.github.com/repos/hyperledger/iroha/issues/comments/362936554,https://github.com/hyperledger/iroha/pull/924#issuecomment-362936554,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [integration_test_framework.cpp#L131](https://github.com/hyperledger/iroha/blob/08edb1794f931bb5c5aafed72029f32b054025b1/test/framework/integration_framework/integration_test_framework.cpp#L131): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L136](https://github.com/hyperledger/iroha/blob/08edb1794f931bb5c5aafed72029f32b054025b1/test/framework/integration_framework/integration_test_framework.cpp#L136): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![INFO][INFO] [hashable.hpp#L44](https://github.com/hyperledger/iroha/blob/08edb1794f931bb5c5aafed72029f32b054025b1/shared_model/interfaces/base/hashable.hpp#L44): Undocumented API: Hashable [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hashable.hpp#L51](https://github.com/hyperledger/iroha/blob/08edb1794f931bb5c5aafed72029f32b054025b1/shared_model/interfaces/base/hashable.hpp#L51): Undocumented API: BlobType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hashable.hpp#L53](https://github.com/hyperledger/iroha/blob/08edb1794f931bb5c5aafed72029f32b054025b1/shared_model/interfaces/base/hashable.hpp#L53): Undocumented API: HashProviderType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hashable.hpp#L81](https://github.com/hyperledger/iroha/blob/08edb1794f931bb5c5aafed72029f32b054025b1/shared_model/interfaces/base/hashable.hpp#L81): Undocumented API: hash_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-04 20:24:39,2018-02-04 20:24:39
https://api.github.com/repos/hyperledger/iroha/issues/923,https://api.github.com/repos/hyperledger/iroha/issues/comments/361232724,https://github.com/hyperledger/iroha/pull/923#issuecomment-361232724,sorabot,"SonarQube analysis reported 3 issues

1. ![INFO][INFO] [proposal.hpp#L1](https://github.com/hyperledger/iroha/blob/27e3c407631fd16bc7845f2bff9c65c571e7bc81/shared_model/interfaces/proposal.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [proposal.hpp#L38](https://github.com/hyperledger/iroha/blob/27e3c407631fd16bc7845f2bff9c65c571e7bc81/shared_model/interfaces/proposal.hpp#L38): Undocumented API: w [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L39](https://github.com/hyperledger/iroha/blob/27e3c407631fd16bc7845f2bff9c65c571e7bc81/shared_model/interfaces/proposal.hpp#L39): Undocumented API: TransactionContainer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-29 12:37:46,2018-01-29 12:37:46
https://api.github.com/repos/hyperledger/iroha/issues/923,https://api.github.com/repos/hyperledger/iroha/issues/comments/361242088,https://github.com/hyperledger/iroha/pull/923#issuecomment-361242088,bakhtin,"SonarQube analysis reported 3 issues

1. ![INFO][INFO] [proposal.hpp#L1](https://github.com/hyperledger/iroha/blob/27e3c407631fd16bc7845f2bff9c65c571e7bc81/shared_model/interfaces/proposal.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [proposal.hpp#L38](https://github.com/hyperledger/iroha/blob/27e3c407631fd16bc7845f2bff9c65c571e7bc81/shared_model/interfaces/proposal.hpp#L38): Undocumented API: w [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L39](https://github.com/hyperledger/iroha/blob/27e3c407631fd16bc7845f2bff9c65c571e7bc81/shared_model/interfaces/proposal.hpp#L39): Undocumented API: TransactionContainer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-29 13:16:41,2018-01-29 13:16:41
https://api.github.com/repos/hyperledger/iroha/issues/922,https://api.github.com/repos/hyperledger/iroha/issues/comments/361180386,https://github.com/hyperledger/iroha/pull/922#issuecomment-361180386,l4l,"![screenshot_20180129_120011](https://user-images.githubusercontent.com/5658339/35501803-086f2f4c-04ec-11e8-9a83-f17d2ab366e9.png)
In /etc/passwd:
`iroha-ci:x:6535:6535:,,,:/home/iroha-ci:/bin/bash`",2018-01-29 09:01:39,2018-01-29 09:01:39
https://api.github.com/repos/hyperledger/iroha/issues/922,https://api.github.com/repos/hyperledger/iroha/issues/comments/361250748,https://github.com/hyperledger/iroha/pull/922#issuecomment-361250748,Warchant,"@l4l it is correct behavior. We do not need to have users with all possible IDs, we only need to have ID=(ID of host user) to prevent permissions issue.",2018-01-29 13:50:31,2018-01-29 13:52:03
https://api.github.com/repos/hyperledger/iroha/issues/922,https://api.github.com/repos/hyperledger/iroha/issues/comments/361252301,https://github.com/hyperledger/iroha/pull/922#issuecomment-361252301,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/922?src=pr&el=h1) Report
> Merging [#922](https://codecov.io/gh/hyperledger/iroha/pull/922?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0bb008007d54da15154dfe12ffdd90525c5a85cb?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/922/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/922?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #922      +/-   ##
===========================================
- Coverage    31.33%   31.31%   -0.02%     
===========================================
  Files          469      468       -1     
  Lines        14191    14152      -39     
  Branches      9188     9166      -22     
===========================================
- Hits          4447     4432      -15     
+ Misses        1365     1362       -3     
+ Partials      8379     8358      -21
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/922?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `43.47% <0%> (-5.21%)` | :arrow_down: |
| [...ror\_responses/no\_account\_assets\_error\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2Vycm9yX3Jlc3BvbnNlcy9ub19hY2NvdW50X2Fzc2V0c19lcnJvcl9yZXNwb25zZS5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [...odel/interfaces/query\_responses/query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [irohad/model/converters/impl/pb\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9ibG9ja19mYWN0b3J5LmNwcA==) | `45.71% <0%> (ø)` | :arrow_up: |
| [...aces/transaction\_responses/unknown\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3Vua25vd25fdHhfcmVzcG9uc2UuaHBw) | `0% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/commands/add\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvYWRkX3NpZ25hdG9yeS5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/commands/create\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY3JlYXRlX3JvbGUuaHBw) | `0% <0%> (ø)` | :arrow_up: |
| [...t/module/irohad/model/converters/pb\_block\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfYmxvY2tfdGVzdC5jcHA=) | `22.85% <0%> (ø)` | :arrow_up: |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.23% <0%> (ø)` | :arrow_up: |
| [iroha-cli/client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5jcHA=) | `40% <0%> (ø)` | :arrow_up: |
| ... and [79 more](https://codecov.io/gh/hyperledger/iroha/pull/922/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/922?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/922?src=pr&el=footer). Last update [0bb0080...7fbef3b](https://codecov.io/gh/hyperledger/iroha/pull/922?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-29 13:56:07,2018-01-29 13:56:07
https://api.github.com/repos/hyperledger/iroha/issues/921,https://api.github.com/repos/hyperledger/iroha/issues/comments/361104256,https://github.com/hyperledger/iroha/pull/921#issuecomment-361104256,sorabot,"SonarQube analysis reported 45 issues
* ![INFO][INFO] 45 info

#### Top 10 issues

1. ![INFO][INFO] [permissions.hpp#L27](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L27): Undocumented API: can_append_role [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L28](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L28): Undocumented API: can_create_role [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L29](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L29): Undocumented API: can_detach_role [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L30](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L30): Undocumented API: can_add_asset_qty [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L31](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L31): Undocumented API: can_subtract_asset_qty [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L32](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L32): Undocumented API: can_add_peer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L33](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L33): Undocumented API: can_add_signatory [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L34](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L34): Undocumented API: can_create_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L35](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L35): Undocumented API: can_create_asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [permissions.hpp#L36](https://github.com/hyperledger/iroha/blob/999a1c710dda7936d3cb78b158c536a6ab714232/irohad/model/permissions.hpp#L36): Undocumented API: can_create_domain [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-28 22:57:34,2018-01-28 22:57:34
https://api.github.com/repos/hyperledger/iroha/issues/921,https://api.github.com/repos/hyperledger/iroha/issues/comments/361122757,https://github.com/hyperledger/iroha/pull/921#issuecomment-361122757,motxx,"Looks nice overall!

About grant permissions, I have something to concern about.
But I'm not sure my following comment is really correct, so it will help if giving me the opinion.

In shared model, protobuf's standard json converter will be used. https://github.com/hyperledger/iroha/pull/906

In old type JSON converter `CreateRole`,
I think we may need to specify `can_grant_can_add_signatory` (previously `""CanGrantCanAddSignatory""`)

On the other hand, in new JSON converter `CreateRole`,
I think we may need to specify `can_grant_add_signatory` (not `can_grant_can_...`),
because the schema of `CreateRole` uses `repeated RolePermissions`

Such things will occur in `GrantPermission`.
Old JSON converter uses simply `can_add_signatory`(previously `""CanAddSignatory""`).
On the other hand, new JSON converter may use `can_add_my_signatory` in `GrantPermission`.",2018-01-29 02:22:27,2018-01-29 08:50:31
https://api.github.com/repos/hyperledger/iroha/issues/920,https://api.github.com/repos/hyperledger/iroha/issues/comments/361103875,https://github.com/hyperledger/iroha/pull/920#issuecomment-361103875,sorabot,"SonarQube analysis reported 17 issues
* ![INFO][INFO] 17 info

#### Top 10 issues

1. ![INFO][INFO] [block.hpp#L1](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/backend/protobuf/block.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block.hpp#L35](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/backend/protobuf/block.hpp#L35): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L43](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/backend/protobuf/block.hpp#L43): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L71](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/backend/protobuf/block.hpp#L71): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L73](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/backend/protobuf/block.hpp#L73): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L1](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/builders/protobuf/block.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block.hpp#L35](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/builders/protobuf/block.hpp#L35): Undocumented API: TemplateBlockBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L78](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/builders/protobuf/block.hpp#L78): Undocumented API: transactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L87](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/builders/protobuf/block.hpp#L87): Undocumented API: txNumber [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L93](https://github.com/hyperledger/iroha/blob/79e0078d21574155e6c72f78f16df0c84f365291/shared_model/builders/protobuf/block.hpp#L93): Undocumented API: height [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-28 22:52:20,2018-01-28 22:52:20
https://api.github.com/repos/hyperledger/iroha/issues/919,https://api.github.com/repos/hyperledger/iroha/issues/comments/361092829,https://github.com/hyperledger/iroha/pull/919#issuecomment-361092829,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/919?src=pr&el=h1) Report
> Merging [#919](https://codecov.io/gh/hyperledger/iroha/pull/919?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/83bc4fe10c66eaa27a2fc6919e630603affcd93e?src=pr&el=desc) will **increase** coverage by `0.15%`.
> The diff coverage is `35.22%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/919/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/919?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #919      +/-   ##
===========================================
+ Coverage    31.63%   31.78%   +0.15%     
===========================================
  Files          488      493       +5     
  Lines        14790    14877      +87     
  Branches      9542     9572      +30     
===========================================
+ Hits          4679     4729      +50     
- Misses        1425     1457      +32     
- Partials      8686     8691       +5
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/919?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `44% <0%> (ø)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `20.77% <0%> (-0.28%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `31.89% <0%> (-0.28%)` | :arrow_down: |
| [...ad/ametsuchi/integration\_block\_query\_nudb\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9pbnRlZ3JhdGlvbl9ibG9ja19xdWVyeV9udWRiX3Rlc3QuY3Bw) | `17.97% <10.52%> (ø)` | |
| [irohad/model/proposal.hpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Byb3Bvc2FsLmhwcA==) | `100% <100%> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/block\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9ibG9ja19nZW5lcmF0b3IuY3Bw) | `55.55% <100%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/block\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19zdG9yYWdlLmhwcA==) | `100% <100%> (ø)` | |
| [irohad/ametsuchi/impl/block\_storage\_nudb.hpp](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2Jsb2NrX3N0b3JhZ2VfbnVkYi5ocHA=) | `100% <100%> (ø)` | |
| ... and [21 more](https://codecov.io/gh/hyperledger/iroha/pull/919/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/919?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/919?src=pr&el=footer). Last update [83bc4fe...523d076](https://codecov.io/gh/hyperledger/iroha/pull/919?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-28 20:24:40,2018-02-09 13:07:51
https://api.github.com/repos/hyperledger/iroha/issues/919,https://api.github.com/repos/hyperledger/iroha/issues/comments/361095338,https://github.com/hyperledger/iroha/pull/919#issuecomment-361095338,bakhtin,"SonarQube analysis reported 48 issues
* ![MINOR][MINOR] 14 minor
* ![INFO][INFO] 34 info

#### Top 10 issues

1. ![MINOR][MINOR] [block_storage_nudb.cpp#L115](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/irohad/ametsuchi/impl/block_storage_nudb.cpp#L115): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [redis_block_query.hpp#L63](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/irohad/ametsuchi/impl/redis_block_query.hpp#L63): Unused private function: 'RedisBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L71](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/irohad/ametsuchi/impl/redis_block_query.hpp#L71): Unused private function: 'RedisBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L81](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/irohad/ametsuchi/impl/redis_block_query.hpp#L81): Unused private function: 'RedisBlockQuery::callbackToLrange' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [storage_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/irohad/ametsuchi/impl/storage_impl.cpp#L36): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [storage_impl.hpp#L82](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/irohad/ametsuchi/impl/storage_impl.hpp#L82): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L187](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L187): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L187](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L187): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L187](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L187): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L187](https://github.com/hyperledger/iroha/blob/502a31fa342937ff1f66694064872ae2742a27c2/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L187): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-28 20:57:53,2018-01-28 20:57:53
https://api.github.com/repos/hyperledger/iroha/issues/919,https://api.github.com/repos/hyperledger/iroha/issues/comments/364431899,https://github.com/hyperledger/iroha/pull/919#issuecomment-364431899,sorabot,"SonarQube analysis reported 43 issues
* ![MINOR][MINOR] 15 minor
* ![INFO][INFO] 28 info

#### Top 10 issues

1. ![MINOR][MINOR] [block_storage_nudb.cpp#L56](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/irohad/ametsuchi/impl/block_storage_nudb.cpp#L56): Define a constant instead of duplicating this literal ""BlockStorageNuDB"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [block_storage_nudb.cpp#L132](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/irohad/ametsuchi/impl/block_storage_nudb.cpp#L132): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_query.cpp#L155](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/irohad/ametsuchi/impl/postgres_block_query.cpp#L155): Define a constant instead of duplicating this literal "" AND height = "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L70](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/irohad/ametsuchi/impl/postgres_block_query.hpp#L70): Unused private function: 'PostgresBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L78](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/irohad/ametsuchi/impl/postgres_block_query.hpp#L78): Unused private function: 'PostgresBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_block_query.hpp#L88](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/irohad/ametsuchi/impl/postgres_block_query.hpp#L88): Unused private function: 'PostgresBlockQuery::callback' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.cpp#L1](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/irohad/ametsuchi/impl/redis_block_query.cpp#L1): Add a new line at the end of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingNewLineAtEndOfFile)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L184](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L184): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L184](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L184): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L184](https://github.com/hyperledger/iroha/blob/523d0765e87d4b8a51d447127c8c3254b693e368/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L184): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-09 13:21:17,2018-02-09 13:21:17
https://api.github.com/repos/hyperledger/iroha/issues/919,https://api.github.com/repos/hyperledger/iroha/issues/comments/366518688,https://github.com/hyperledger/iroha/pull/919#issuecomment-366518688,l4l,What's the status of this?,2018-02-18 14:08:44,2018-02-18 14:08:44
https://api.github.com/repos/hyperledger/iroha/issues/919,https://api.github.com/repos/hyperledger/iroha/issues/comments/366980875,https://github.com/hyperledger/iroha/pull/919#issuecomment-366980875,Warchant,"Will be splitted onto multiple PRs.

First is https://github.com/hyperledger/iroha/pull/998",2018-02-20 13:42:38,2018-02-20 13:42:38
https://api.github.com/repos/hyperledger/iroha/issues/918,https://api.github.com/repos/hyperledger/iroha/issues/comments/361071002,https://github.com/hyperledger/iroha/pull/918#issuecomment-361071002,bakhtin,"SonarQube analysis reported 9 issues

1. ![INFO][INFO] [gossip_propagation_strategy.hpp#L38](https://github.com/hyperledger/iroha/blob/ea69248f7e78a6602233a2659d5a824c0cd0dd21/irohad/multi_sig_transactions/gossip_propagation_strategy.hpp#L38): Undocumented API: PeerProvider [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [gossip_propagation_strategy.hpp#L39](https://github.com/hyperledger/iroha/blob/ea69248f7e78a6602233a2659d5a824c0cd0dd21/irohad/multi_sig_transactions/gossip_propagation_strategy.hpp#L39): Undocumented API: OptPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [gossip_propagation_strategy.hpp#L50](https://github.com/hyperledger/iroha/blob/ea69248f7e78a6602233a2659d5a824c0cd0dd21/irohad/multi_sig_transactions/gossip_propagation_strategy.hpp#L50): Undocumented API: ~ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.cpp#L86](https://github.com/hyperledger/iroha/blob/ea69248f7e78a6602233a2659d5a824c0cd0dd21/irohad/multi_sig_transactions/impl/mst_processor_impl.cpp#L86): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [mst_processor_impl.hpp#L49](https://github.com/hyperledger/iroha/blob/ea69248f7e78a6602233a2659d5a824c0cd0dd21/irohad/multi_sig_transactions/mst_processor_impl.hpp#L49): Undocumented API: ~ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L53](https://github.com/hyperledger/iroha/blob/ea69248f7e78a6602233a2659d5a824c0cd0dd21/irohad/multi_sig_transactions/mst_processor_impl.hpp#L53): Undocumented API: propagateTransactionImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L56](https://github.com/hyperledger/iroha/blob/ea69248f7e78a6602233a2659d5a824c0cd0dd21/irohad/multi_sig_transactions/mst_processor_impl.hpp#L56): Undocumented API: onStateUpdateImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L58](https://github.com/hyperledger/iroha/blob/ea69248f7e78a6602233a2659d5a824c0cd0dd21/irohad/multi_sig_transactions/mst_processor_impl.hpp#L58): Undocumented API: onPreparedTransactionsImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L61](https://github.com/hyperledger/iroha/blob/ea69248f7e78a6602233a2659d5a824c0cd0dd21/irohad/multi_sig_transactions/mst_processor_impl.hpp#L61): Undocumented API: onExpiredTransactionsImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-28 15:26:36,2018-01-28 15:26:36
https://api.github.com/repos/hyperledger/iroha/issues/918,https://api.github.com/repos/hyperledger/iroha/issues/comments/361071074,https://github.com/hyperledger/iroha/pull/918#issuecomment-361071074,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/918?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/mst@1302e6c`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `48.07%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/918/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/918?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##             trunk/mst     #918   +/-   ##
============================================
  Coverage             ?   31.45%           
============================================
  Files                ?      493           
  Lines                ?    14873           
  Branches             ?     9646           
============================================
  Hits                 ?     4678           
  Misses               ?     1369           
  Partials             ?     8826
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/918?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...multi\_sig\_transactions/impl/mst\_processor\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/918/diff?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvaW1wbC9tc3RfcHJvY2Vzc29yX2ltcGwuY3Bw) | `48.78% <36.36%> (ø)` | |
| [...\_transactions/gossip\_propagation\_strategy\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/918/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvZ29zc2lwX3Byb3BhZ2F0aW9uX3N0cmF0ZWd5X3Rlc3QuY3Bw) | `41.42% <44%> (ø)` | |
| [...ulti\_sig\_transactions/storage/impl/mst\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/918/diff?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9pbXBsL21zdF9zdG9yYWdlLmNwcA==) | `35.29% <50%> (ø)` | |
| [...orii/processor/impl/transaction\_processor\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/918/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9pbXBsL3RyYW5zYWN0aW9uX3Byb2Nlc3Nvcl9pbXBsLmNwcA==) | `50% <60%> (ø)` | |
| [...\_transactions/impl/gossip\_propagation\_strategy.cpp](https://codecov.io/gh/hyperledger/iroha/pull/918/diff?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvaW1wbC9nb3NzaXBfcHJvcGFnYXRpb25fc3RyYXRlZ3kuY3Bw) | `61.53% <66.66%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/918?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/918?src=pr&el=footer). Last update [1302e6c...e17cb02](https://codecov.io/gh/hyperledger/iroha/pull/918?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-28 15:27:46,2018-02-04 17:35:05
https://api.github.com/repos/hyperledger/iroha/issues/918,https://api.github.com/repos/hyperledger/iroha/issues/comments/362925243,https://github.com/hyperledger/iroha/pull/918#issuecomment-362925243,sorabot,"SonarQube analysis reported 9 issues

1. ![INFO][INFO] [gossip_propagation_strategy.hpp#L38](https://github.com/hyperledger/iroha/blob/e17cb02d40b4cf421202d5e4ce1a6b390ae2fd33/irohad/multi_sig_transactions/gossip_propagation_strategy.hpp#L38): Undocumented API: PeerProvider [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [gossip_propagation_strategy.hpp#L39](https://github.com/hyperledger/iroha/blob/e17cb02d40b4cf421202d5e4ce1a6b390ae2fd33/irohad/multi_sig_transactions/gossip_propagation_strategy.hpp#L39): Undocumented API: OptPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [gossip_propagation_strategy.hpp#L50](https://github.com/hyperledger/iroha/blob/e17cb02d40b4cf421202d5e4ce1a6b390ae2fd33/irohad/multi_sig_transactions/gossip_propagation_strategy.hpp#L50): Undocumented API: ~ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.cpp#L87](https://github.com/hyperledger/iroha/blob/e17cb02d40b4cf421202d5e4ce1a6b390ae2fd33/irohad/multi_sig_transactions/impl/mst_processor_impl.cpp#L87): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [mst_processor_impl.hpp#L49](https://github.com/hyperledger/iroha/blob/e17cb02d40b4cf421202d5e4ce1a6b390ae2fd33/irohad/multi_sig_transactions/mst_processor_impl.hpp#L49): Undocumented API: ~ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L53](https://github.com/hyperledger/iroha/blob/e17cb02d40b4cf421202d5e4ce1a6b390ae2fd33/irohad/multi_sig_transactions/mst_processor_impl.hpp#L53): Undocumented API: propagateTransactionImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L56](https://github.com/hyperledger/iroha/blob/e17cb02d40b4cf421202d5e4ce1a6b390ae2fd33/irohad/multi_sig_transactions/mst_processor_impl.hpp#L56): Undocumented API: onStateUpdateImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L58](https://github.com/hyperledger/iroha/blob/e17cb02d40b4cf421202d5e4ce1a6b390ae2fd33/irohad/multi_sig_transactions/mst_processor_impl.hpp#L58): Undocumented API: onPreparedTransactionsImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L61](https://github.com/hyperledger/iroha/blob/e17cb02d40b4cf421202d5e4ce1a6b390ae2fd33/irohad/multi_sig_transactions/mst_processor_impl.hpp#L61): Undocumented API: onExpiredTransactionsImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-04 17:48:03,2018-02-04 17:48:03
https://api.github.com/repos/hyperledger/iroha/issues/917,https://api.github.com/repos/hyperledger/iroha/issues/comments/360986172,https://github.com/hyperledger/iroha/pull/917#issuecomment-360986172,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/917?src=pr&el=h1) Report
> Merging [#917](https://codecov.io/gh/hyperledger/iroha/pull/917?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/41688c4f71838f5894dfbf49330f5d22080a8938?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `33.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/917/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/917?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #917      +/-   ##
===========================================
+ Coverage     31.3%   31.31%   +<.01%     
===========================================
  Files          468      468              
  Lines        14159    14152       -7     
  Branches      9171     9166       -5     
===========================================
- Hits          4433     4432       -1     
  Misses        1362     1362              
+ Partials      8364     8358       -6
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/917?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/ametsuchi/flat\_file\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/917/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9mbGF0X2ZpbGVfdGVzdC5jcHA=) | `16.21% <0%> (ø)` | :arrow_up: |
| [test/module/libs/crypto/keys\_manager\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/917/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX3Rlc3QuY3Bw) | `35.29% <50%> (+0.81%)` | :arrow_up: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/917/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `44% <0%> (-1.34%)` | :arrow_down: |
| [libs/common/files.cpp](https://codecov.io/gh/hyperledger/iroha/pull/917/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vZmlsZXMuY3Bw) | `23.8% <0%> (+9.52%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/917?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/917?src=pr&el=footer). Last update [41688c4...50a33b3](https://codecov.io/gh/hyperledger/iroha/pull/917?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-27 13:51:09,2018-01-27 15:12:27
https://api.github.com/repos/hyperledger/iroha/issues/916,https://api.github.com/repos/hyperledger/iroha/issues/comments/360777179,https://github.com/hyperledger/iroha/pull/916#issuecomment-360777179,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/916?src=pr&el=h1) Report
> Merging [#916](https://codecov.io/gh/hyperledger/iroha/pull/916?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3743392e723792799aae717c8e31d68ff0a3a6db?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/916/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/916?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #916   +/-   ##
=======================================
  Coverage     31.3%   31.3%           
=======================================
  Files          468     468           
  Lines        14159   14159           
  Branches      9171    9171           
=======================================
  Hits          4433    4433           
  Misses        1362    1362           
  Partials      8364    8364
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/916?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/916?src=pr&el=footer). Last update [3743392...69105a2](https://codecov.io/gh/hyperledger/iroha/pull/916?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-26 12:54:17,2018-01-27 15:21:13
https://api.github.com/repos/hyperledger/iroha/issues/916,https://api.github.com/repos/hyperledger/iroha/issues/comments/360991641,https://github.com/hyperledger/iroha/pull/916#issuecomment-360991641,Warchant,"I will do this change in my branch feature/replace-flat-file-with-nudb, since there I also update CMake",2018-01-27 15:21:07,2018-01-27 15:21:07
https://api.github.com/repos/hyperledger/iroha/issues/915,https://api.github.com/repos/hyperledger/iroha/issues/comments/360760723,https://github.com/hyperledger/iroha/pull/915#issuecomment-360760723,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/915?src=pr&el=h1) Report
> Merging [#915](https://codecov.io/gh/hyperledger/iroha/pull/915?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/482d8ba406e7f9141ad3cc56324eb141e411067c?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/915/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/915?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #915      +/-   ##
===========================================
+ Coverage     31.3%   31.31%   +0.01%     
===========================================
  Files          468      466       -2     
  Lines        14159    14097      -62     
  Branches      9171     9128      -43     
===========================================
- Hits          4433     4415      -18     
+ Misses        1362     1358       -4     
+ Partials      8364     8324      -40
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/915?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/915/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `100% <0%> (ø)` | :arrow_up: |
| [libs/cache/abstract\_cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/915/diff?src=pr&el=tree#diff-bGlicy9jYWNoZS9hYnN0cmFjdF9jYWNoZS5ocHA=) | | |
| [libs/cache/cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/915/diff?src=pr&el=tree#diff-bGlicy9jYWNoZS9jYWNoZS5ocHA=) | | |
| [test/module/libs/common/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/915/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb21tb24vcmVzdWx0X3Rlc3QuY3Bw) | | |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/915/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | | |
| [test/module/libs/cache/cache\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/915/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jYWNoZS9jYWNoZV90ZXN0LmNwcA==) | | |
| [test/module/irohad/torii/cache/cache\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/915/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL2NhY2hlL2NhY2hlX3Rlc3QuY3Bw) | `29.82% <0%> (ø)` | |
| [irohad/torii/cache/abstract\_cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/915/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NhY2hlL2Fic3RyYWN0X2NhY2hlLmhwcA==) | `87.5% <0%> (ø)` | |
| [irohad/torii/cache/cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/915/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NhY2hlL2NhY2hlLmhwcA==) | `89.47% <0%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/915?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/915?src=pr&el=footer). Last update [482d8ba...ec785e6](https://codecov.io/gh/hyperledger/iroha/pull/915?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-26 11:26:19,2018-01-26 11:58:21
https://api.github.com/repos/hyperledger/iroha/issues/914,https://api.github.com/repos/hyperledger/iroha/issues/comments/360722310,https://github.com/hyperledger/iroha/pull/914#issuecomment-360722310,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/914?src=pr&el=h1) Report
> Merging [#914](https://codecov.io/gh/hyperledger/iroha/pull/914?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/caac95ae89531265fc3d33971a5ab44038bdede6?src=pr&el=desc) will **decrease** coverage by `0.26%`.
> The diff coverage is `47.52%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/914/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/914?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #914      +/-   ##
===========================================
- Coverage     31.4%   31.13%   -0.27%     
===========================================
  Files          471      466       -5     
  Lines        14255    14069     -186     
  Branches      9214     9128      -86     
===========================================
- Hits          4477     4381      -96     
+ Misses        1377     1358      -19     
+ Partials      8401     8330      -71
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/914?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/utils/lazy\_initializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL2xhenlfaW5pdGlhbGl6ZXIuaHBw) | `86.66% <ø> (+7.71%)` | :arrow_up: |
| [...el/interfaces/query\_responses/account\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2FjY291bnRfcmVzcG9uc2UuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [.../query\_responses/proto\_account\_detail\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2FjY291bnRfZGV0YWlsX3Jlc3BvbnNlLmhwcA==) | `33.33% <0%> (-9.53%)` | :arrow_down: |
| [.../protobuf/query\_responses/proto\_roles\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3JvbGVzX3Jlc3BvbnNlLmhwcA==) | `16.66% <0%> (-8.34%)` | :arrow_down: |
| [...buf/query\_responses/proto\_signatories\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3NpZ25hdG9yaWVzX3Jlc3BvbnNlLmhwcA==) | `16.66% <0%> (-8.34%)` | :arrow_down: |
| [...buf/query\_responses/proto\_transaction\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3RyYW5zYWN0aW9uX3Jlc3BvbnNlLmhwcA==) | `16.66% <0%> (-8.34%)` | :arrow_down: |
| [...uery\_responses/proto\_role\_permissions\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3JvbGVfcGVybWlzc2lvbnNfcmVzcG9uc2UuaHBw) | `16.66% <0%> (-8.34%)` | :arrow_down: |
| [...ackend/protobuf/queries/proto\_get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfdHJhbnNhY3Rpb25zLmhwcA==) | `16.66% <0%> (-6.42%)` | :arrow_down: |
| [...rotobuf/query\_responses/proto\_account\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2FjY291bnRfcmVzcG9uc2UuaHBw) | `13.33% <0%> (-6.67%)` | :arrow_down: |
| [...f/query\_responses/proto\_account\_asset\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2FjY291bnRfYXNzZXRfcmVzcG9uc2UuaHBw) | `22.22% <0%> (-11.12%)` | :arrow_down: |
| ... and [147 more](https://codecov.io/gh/hyperledger/iroha/pull/914/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/914?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/914?src=pr&el=footer). Last update [caac95a...1d3e7ce](https://codecov.io/gh/hyperledger/iroha/pull/914?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-26 09:02:17,2018-02-01 11:21:40
https://api.github.com/repos/hyperledger/iroha/issues/914,https://api.github.com/repos/hyperledger/iroha/issues/comments/362239408,https://github.com/hyperledger/iroha/pull/914#issuecomment-362239408,sorabot,"SonarQube analysis reported 146 issues
* ![INFO][INFO] 146 info

#### Top 10 issues

1. ![INFO][INFO] [block.hpp#L1](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block.hpp#L35](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L35): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L43](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L43): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L70](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L70): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L72](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L72): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L31](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L31): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L37](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L37): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L44](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L44): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L47](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L47): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_peer.hpp#L28](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_peer.hpp#L28): Undocumented API: AddPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-01 11:33:53,2018-02-01 11:33:53
https://api.github.com/repos/hyperledger/iroha/issues/914,https://api.github.com/repos/hyperledger/iroha/issues/comments/362242758,https://github.com/hyperledger/iroha/pull/914#issuecomment-362242758,bakhtin,"SonarQube analysis reported 146 issues
* ![INFO][INFO] 146 info

#### Top 10 issues

1. ![INFO][INFO] [block.hpp#L1](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block.hpp#L35](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L35): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L43](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L43): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L70](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L70): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L72](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/block.hpp#L72): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L31](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L31): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L37](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L37): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L44](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L44): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_asset_quantity.hpp#L47](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_asset_quantity.hpp#L47): Undocumented API: AddAssetQuantity [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_add_peer.hpp#L28](https://github.com/hyperledger/iroha/blob/1d3e7ce6254f2f86663c21aafb508e2826b5d7d3/shared_model/backend/protobuf/commands/proto_add_peer.hpp#L28): Undocumented API: AddPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-01 11:50:19,2018-02-01 11:50:19
https://api.github.com/repos/hyperledger/iroha/issues/913,https://api.github.com/repos/hyperledger/iroha/issues/comments/360697354,https://github.com/hyperledger/iroha/pull/913#issuecomment-360697354,sorabot,"SonarQube analysis reported 56 issues
* ![MINOR][MINOR] 10 minor
* ![INFO][INFO] 46 info

#### Top 10 issues

1. ![MINOR][MINOR] [yac_gate_impl.cpp#L27](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/impl/yac_gate_impl.cpp#L27): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L34](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/impl/yac_gate_impl.hpp#L34): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L51](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/impl/yac_gate_impl.hpp#L51): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [yac_proposal_storage.cpp#L116](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/storage/impl/yac_proposal_storage.cpp#L116): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac_pb_converters.hpp#L33](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/transport/yac_pb_converters.hpp#L33): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac_pb_converters.hpp#L34](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/transport/yac_pb_converters.hpp#L34): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac_pb_converters.hpp#L57](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/transport/yac_pb_converters.hpp#L57): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac_pb_converters.hpp#L58](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/transport/yac_pb_converters.hpp#L58): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac.hpp#L47](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/yac.hpp#L47): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.hpp#L54](https://github.com/hyperledger/iroha/blob/58dc1fe257950d7f5fe658fdcab9af17228a7233/irohad/consensus/yac/yac.hpp#L54): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-26 06:42:05,2018-01-26 06:42:05
https://api.github.com/repos/hyperledger/iroha/issues/912,https://api.github.com/repos/hyperledger/iroha/issues/comments/360694836,https://github.com/hyperledger/iroha/pull/912#issuecomment-360694836,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/912?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@e13a37e`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `20%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/912/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/912?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #912   +/-   ##
==========================================
  Coverage           ?   31.32%           
==========================================
  Files              ?      469           
  Lines              ?    14189           
  Branches           ?     9189           
==========================================
  Hits               ?     4444           
  Misses             ?     1365           
  Partials           ?     8380
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/912?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/consensus/yac/impl/timer\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC90aW1lcl9pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/consensus/yac/impl/yac\_gate\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/consensus/yac/storage/impl/yac\_common.cpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY19jb21tb24uY3Bw) | `75% <ø> (ø)` | |
| [irohad/consensus/yac/messages.hpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvbWVzc2FnZXMuaHBw) | `81.81% <ø> (ø)` | |
| [irohad/consensus/yac/impl/yac\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmNwcA==) | `42.1% <ø> (ø)` | |
| [irohad/consensus/yac/timer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdGltZXIuaHBw) | `50% <ø> (ø)` | |
| [...ohad/consensus/yac/transport/impl/network\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/consensus/yac/yac\_peer\_orderer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3BlZXJfb3JkZXJlci5ocHA=) | `50% <ø> (ø)` | |
| [irohad/consensus/yac/yac\_gate.hpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGUuaHBw) | `33.33% <ø> (ø)` | |
| [irohad/consensus/yac/cluster\_order.hpp](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlci5ocHA=) | `83.33% <ø> (ø)` | |
| ... and [8 more](https://codecov.io/gh/hyperledger/iroha/pull/912/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/912?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/912?src=pr&el=footer). Last update [e13a37e...28d38b1](https://codecov.io/gh/hyperledger/iroha/pull/912?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-26 06:22:07,2018-04-23 22:41:38
https://api.github.com/repos/hyperledger/iroha/issues/912,https://api.github.com/repos/hyperledger/iroha/issues/comments/360880661,https://github.com/hyperledger/iroha/pull/912#issuecomment-360880661,Warchant,Why is this closed?,2018-01-26 19:26:30,2018-01-26 19:26:30
https://api.github.com/repos/hyperledger/iroha/issues/912,https://api.github.com/repos/hyperledger/iroha/issues/comments/361875653,https://github.com/hyperledger/iroha/pull/912#issuecomment-361875653,bakhtin,"SonarQube analysis reported 56 issues
* ![MINOR][MINOR] 10 minor
* ![INFO][INFO] 46 info

#### Top 10 issues

1. ![MINOR][MINOR] [yac_gate_impl.cpp#L27](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/impl/yac_gate_impl.cpp#L27): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L34](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/impl/yac_gate_impl.hpp#L34): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac_gate_impl.hpp#L51](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/impl/yac_gate_impl.hpp#L51): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [yac_proposal_storage.cpp#L116](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/storage/impl/yac_proposal_storage.cpp#L116): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac_pb_converters.hpp#L33](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/transport/yac_pb_converters.hpp#L33): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac_pb_converters.hpp#L34](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/transport/yac_pb_converters.hpp#L34): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac_pb_converters.hpp#L57](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/transport/yac_pb_converters.hpp#L57): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac_pb_converters.hpp#L58](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/transport/yac_pb_converters.hpp#L58): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [yac.hpp#L47](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/yac.hpp#L47): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.hpp#L54](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/yac.hpp#L54): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-31 09:35:33,2018-01-31 09:35:33
https://api.github.com/repos/hyperledger/iroha/issues/912,https://api.github.com/repos/hyperledger/iroha/issues/comments/361921166,https://github.com/hyperledger/iroha/pull/912#issuecomment-361921166,l4l,"> rearranged some of the code to fit on one line; until now we keep column widths to 80 characters, but since this isn't 1985, I recommend changing it to within 100 characters

I'm disagree (with width, not year). It's pretty nice to have multiple screens and such that all of the files could fit on the screen. 80 chars is enough for everyone",2018-01-31 12:43:38,2018-01-31 13:16:43
https://api.github.com/repos/hyperledger/iroha/issues/912,https://api.github.com/repos/hyperledger/iroha/issues/comments/362801580,https://github.com/hyperledger/iroha/pull/912#issuecomment-362801580,takemiyamakoto,"I personally still think that 80 width hurts readability. We used to use 120 where I worked before, and that was 10 years ago. We just used multiple monitors if we wanted to increase our productivity.",2018-02-03 12:10:02,2018-02-03 12:10:02
https://api.github.com/repos/hyperledger/iroha/issues/912,https://api.github.com/repos/hyperledger/iroha/issues/comments/372488112,https://github.com/hyperledger/iroha/pull/912#issuecomment-372488112,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [yac_gate_impl.hpp#L51](https://github.com/hyperledger/iroha/blob/28d38b12711f8a644296494f6cbfeb12b68b60b6/irohad/consensus/yac/impl/yac_gate_impl.hpp#L51): Unused private function: 'YacGateImpl::copySignatures' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-03-12 22:47:54,2018-03-12 22:47:54
https://api.github.com/repos/hyperledger/iroha/issues/912,https://api.github.com/repos/hyperledger/iroha/issues/comments/379957625,https://github.com/hyperledger/iroha/pull/912#issuecomment-379957625,takemiyamakoto,ping,2018-04-10 02:54:49,2018-04-10 02:54:49
https://api.github.com/repos/hyperledger/iroha/issues/912,https://api.github.com/repos/hyperledger/iroha/issues/comments/384186420,https://github.com/hyperledger/iroha/pull/912#issuecomment-384186420,neewy,"Since this code is not going to be merged, I would like this to be closed, and if a special walkthrough session is needed — let's schedule it and have a quick conversation together @takemiyamakoto @muratovv @lebdron  ",2018-04-25 07:24:56,2018-04-25 07:24:56
https://api.github.com/repos/hyperledger/iroha/issues/912,https://api.github.com/repos/hyperledger/iroha/issues/comments/384222920,https://github.com/hyperledger/iroha/pull/912#issuecomment-384222920,takemiyamakoto,"Not really time to do this online, which is why I wrote this code review ^^",2018-04-25 09:27:37,2018-04-25 09:27:37
https://api.github.com/repos/hyperledger/iroha/issues/911,https://api.github.com/repos/hyperledger/iroha/issues/comments/360499462,https://github.com/hyperledger/iroha/pull/911#issuecomment-360499462,l4l,"Merge is for maintainers, not for contributors, why it should be here?
Also something wrong with DCO",2018-01-25 15:25:31,2018-01-25 15:25:48
https://api.github.com/repos/hyperledger/iroha/issues/911,https://api.github.com/repos/hyperledger/iroha/issues/comments/360506632,https://github.com/hyperledger/iroha/pull/911#issuecomment-360506632,muratovv,"Who is the consumer of CONTRIBUTING.md file? I mean this information for maintainers or for contributors only. If second, there are no reasons to write about merging to base branch. ",2018-01-25 15:46:46,2018-01-25 15:46:46
https://api.github.com/repos/hyperledger/iroha/issues/911,https://api.github.com/repos/hyperledger/iroha/issues/comments/360879132,https://github.com/hyperledger/iroha/pull/911#issuecomment-360879132,Warchant,"CONTRIBUTORS.md file is for all contributors, especially for the new ones.

IMO this scheme is bad:
1. reviewer will not know that developer failed with merge (wrongly resolved merge conflicts, for instance), therefore develop will be much more often in ""failed"" condition.
2. for developer there is no way to run CI and check all postconditions (builds on mac, builds on linux, tests are executed, etc). Locally you can execute only one step amount many. Working on mac, how can you be sure that your changes will work properly on ARM?
",2018-01-26 19:20:37,2018-01-26 19:20:37
https://api.github.com/repos/hyperledger/iroha/issues/911,https://api.github.com/repos/hyperledger/iroha/issues/comments/362994146,https://github.com/hyperledger/iroha/pull/911#issuecomment-362994146,neewy,"I have closed this PR since the decision about VCS handling schema was not fixed. IMO we have to make it clear in this file, and since we tried merges only and I find (not only me though) comments of @Warchant valid, we need to use old approach with rebases + maybe squash & merge for trunks at least per a sprint. 

I will assign the discussion",2018-02-05 06:35:51,2018-02-05 06:35:51
https://api.github.com/repos/hyperledger/iroha/issues/910,https://api.github.com/repos/hyperledger/iroha/issues/comments/360393650,https://github.com/hyperledger/iroha/pull/910#issuecomment-360393650,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/910?src=pr&el=h1) Report
> Merging [#910](https://codecov.io/gh/hyperledger/iroha/pull/910?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d92a63b6db06bedefaf57b6d0e36d2c5e16a7946?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/910/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/910?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #910   +/-   ##
========================================
  Coverage    31.31%   31.31%           
========================================
  Files          466      466           
  Lines        14097    14097           
  Branches      9128     9128           
========================================
  Hits          4415     4415           
  Misses        1358     1358           
  Partials      8324     8324
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/910?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/libs/cache/cache\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/910/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jYWNoZS9jYWNoZV90ZXN0LmNwcA==) | `29.82% <ø> (ø)` | |
| [libs/cache/cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/910/diff?src=pr&el=tree#diff-bGlicy9jYWNoZS9jYWNoZS5ocHA=) | `89.47% <ø> (ø)` | |
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/910/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [libs/cache/abstract\_cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/910/diff?src=pr&el=tree#diff-bGlicy9jYWNoZS9hYnN0cmFjdF9jYWNoZS5ocHA=) | `87.5% <ø> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/910?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/910?src=pr&el=footer). Last update [d92a63b...c1fe154](https://codecov.io/gh/hyperledger/iroha/pull/910?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-25 08:19:45,2018-01-26 10:41:20
https://api.github.com/repos/hyperledger/iroha/issues/910,https://api.github.com/repos/hyperledger/iroha/issues/comments/360478141,https://github.com/hyperledger/iroha/pull/910#issuecomment-360478141,sorabot,"SonarQube analysis reported 11 issues
* ![MINOR][MINOR] 1 minor
* ![INFO][INFO] 10 info

#### Top 10 issues

1. ![MINOR][MINOR] [command_service.hpp#L4](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/irohad/torii/command_service.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [command_service.hpp#L1](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/irohad/torii/command_service.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [command_service.hpp#L41](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/irohad/torii/command_service.hpp#L41): Undocumented API: CommandService [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [command_service.hpp#L57](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/irohad/torii/command_service.hpp#L57): Undocumented API: StatusAsync [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L28](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/libs/cache/cache.hpp#L28): Undocumented API: Cache [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L31](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/libs/cache/cache.hpp#L31): Undocumented API: getIndexSizeHighImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L35](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/libs/cache/cache.hpp#L35): Undocumented API: getIndexSizeLowImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L39](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/libs/cache/cache.hpp#L39): Undocumented API: getCacheItemCountImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L43](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/libs/cache/cache.hpp#L43): Undocumented API: addItemImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L55](https://github.com/hyperledger/iroha/blob/c1fe154ff19556454a5d1e1b3ade0c58d3cf6efd/libs/cache/cache.hpp#L55): Undocumented API: findItemImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-25 14:14:32,2018-01-25 14:14:32
https://api.github.com/repos/hyperledger/iroha/issues/909,https://api.github.com/repos/hyperledger/iroha/issues/comments/360388593,https://github.com/hyperledger/iroha/pull/909#issuecomment-360388593,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/909?src=pr&el=h1) Report
> Merging [#909](https://codecov.io/gh/hyperledger/iroha/pull/909?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/bbcb2402823c1fb7f49f86eebc15f1b8490f25e5?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/909/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/909?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #909   +/-   ##
========================================
  Coverage    31.31%   31.31%           
========================================
  Files          466      466           
  Lines        14097    14097           
  Branches      9128     9128           
========================================
  Hits          4415     4415           
  Misses        1358     1358           
  Partials      8324     8324
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/909?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/torii/torii\_service\_handler.cpp](https://codecov.io/gh/hyperledger/iroha/pull/909/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfaGFuZGxlci5jcHA=) | `57.77% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/909/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `43.47% <ø> (ø)` | :arrow_up: |
| [irohad/torii/command\_client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/909/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfY2xpZW50LmNwcA==) | `49.2% <ø> (ø)` | :arrow_up: |
| [libs/generator/generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/909/diff?src=pr&el=tree#diff-bGlicy9nZW5lcmF0b3IvZ2VuZXJhdG9yLmNwcA==) | `42.85% <ø> (ø)` | :arrow_up: |
| [libs/validator/domain\_name\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/909/diff?src=pr&el=tree#diff-bGlicy92YWxpZGF0b3IvZG9tYWluX25hbWVfdmFsaWRhdG9yLmNwcA==) | `27.27% <ø> (ø)` | :arrow_up: |
| [irohad/torii/processor/query\_processor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/909/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9xdWVyeV9wcm9jZXNzb3IuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [iroha-cli/client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/909/diff?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5jcHA=) | `40% <ø> (ø)` | :arrow_up: |
| [test/framework/test\_block\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/909/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvdGVzdF9ibG9ja19nZW5lcmF0b3IuY3Bw) | `39.58% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/909?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/909?src=pr&el=footer). Last update [bbcb240...9376e19](https://codecov.io/gh/hyperledger/iroha/pull/909?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-25 07:55:51,2018-01-29 10:45:32
https://api.github.com/repos/hyperledger/iroha/issues/908,https://api.github.com/repos/hyperledger/iroha/issues/comments/360360606,https://github.com/hyperledger/iroha/issues/908#issuecomment-360360606,motxx,"For now, close this issue because granting transfer looks not be permitted. please reopen if you need anything.",2018-01-25 04:53:44,2018-01-25 04:53:44
https://api.github.com/repos/hyperledger/iroha/issues/907,https://api.github.com/repos/hyperledger/iroha/issues/comments/360154419,https://github.com/hyperledger/iroha/pull/907#issuecomment-360154419,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/907?src=pr&el=h1) Report
> Merging [#907](https://codecov.io/gh/hyperledger/iroha/pull/907?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0bb008007d54da15154dfe12ffdd90525c5a85cb?src=pr&el=desc) will **increase** coverage by `0.08%`.
> The diff coverage is `40%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/907/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/907?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #907      +/-   ##
===========================================
+ Coverage    31.33%   31.41%   +0.08%     
===========================================
  Files          469      471       +2     
  Lines        14191    14253      +62     
  Branches      9188     9212      +24     
===========================================
+ Hits          4447     4478      +31     
- Misses        1365     1376      +11     
- Partials      8379     8399      +20
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/907?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbW9uLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/command\_generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvY29tbWFuZF9nZW5lcmF0b3IuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [test/framework/test\_block\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvdGVzdF9ibG9ja19nZW5lcmF0b3IuY3Bw) | `39.58% <0%> (ø)` | :arrow_up: |
| [...odule/irohad/model/converters/pb\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZHNfdGVzdC5jcHA=) | `6.09% <0%> (ø)` | :arrow_up: |
| [...ad/model/generators/impl/transaction\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC90cmFuc2FjdGlvbl9nZW5lcmF0b3IuY3Bw) | `42.22% <0%> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/command\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9jb21tYW5kX2dlbmVyYXRvci5jcHA=) | `26.31% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/commands/add\_peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvYWRkX3BlZXIuaHBw) | `0% <0%> (ø)` | :arrow_up: |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `15% <0%> (ø)` | :arrow_up: |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.23% <0%> (ø)` | :arrow_up: |
| ... and [24 more](https://codecov.io/gh/hyperledger/iroha/pull/907/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/907?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/907?src=pr&el=footer). Last update [0bb0080...a476dc7](https://codecov.io/gh/hyperledger/iroha/pull/907?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-24 14:35:07,2018-01-31 09:56:00
https://api.github.com/repos/hyperledger/iroha/issues/907,https://api.github.com/repos/hyperledger/iroha/issues/comments/361863605,https://github.com/hyperledger/iroha/pull/907#issuecomment-361863605,bakhtin,"SonarQube analysis reported 188 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 60 minor
* ![INFO][INFO] 127 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L578](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/pb_command_factory.cpp#L578): The Cyclomatic Complexity of this function is 17 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L196](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L196): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L312](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L312): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [json_command_factory.cpp#L49](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L49): Define a constant instead of duplicating this literal ""value"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L64](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L64): Define a constant instead of duplicating this literal ""precision"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L76](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L76): Define a constant instead of duplicating this literal ""address"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L77](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L77): Define a constant instead of duplicating this literal ""peer_key"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L91](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L91): Variable 'serializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_command_factory.cpp#L118](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L118): Define a constant instead of duplicating this literal ""AddAssetQuantity"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L120](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L120): Define a constant instead of duplicating this literal ""SubtractAssetQuantity"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-31 08:48:12,2018-01-31 08:48:12
https://api.github.com/repos/hyperledger/iroha/issues/907,https://api.github.com/repos/hyperledger/iroha/issues/comments/361863677,https://github.com/hyperledger/iroha/pull/907#issuecomment-361863677,sorabot,"SonarQube analysis reported 188 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 60 minor
* ![INFO][INFO] 127 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L578](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/pb_command_factory.cpp#L578): The Cyclomatic Complexity of this function is 17 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L196](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L196): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L312](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L312): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [json_command_factory.cpp#L49](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L49): Define a constant instead of duplicating this literal ""value"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L64](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L64): Define a constant instead of duplicating this literal ""precision"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L76](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L76): Define a constant instead of duplicating this literal ""address"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L77](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L77): Define a constant instead of duplicating this literal ""peer_key"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L91](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L91): Variable 'serializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_command_factory.cpp#L118](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L118): Define a constant instead of duplicating this literal ""AddAssetQuantity"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L120](https://github.com/hyperledger/iroha/blob/a476dc71fb2374ab5206a51f7a655a567bedc7ea/irohad/model/converters/impl/json_command_factory.cpp#L120): Define a constant instead of duplicating this literal ""SubtractAssetQuantity"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-31 08:48:31,2018-01-31 08:48:31
https://api.github.com/repos/hyperledger/iroha/issues/906,https://api.github.com/repos/hyperledger/iroha/issues/comments/360038656,https://github.com/hyperledger/iroha/pull/906#issuecomment-360038656,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/906?src=pr&el=h1) Report
> Merging [#906](https://codecov.io/gh/hyperledger/iroha/pull/906?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b68277673bd2c6bdb3ca183ac5b9069b2a20a68c?src=pr&el=desc) will **decrease** coverage by `0.1%`.
> The diff coverage is `18.18%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/906/graphs/tree.svg?height=150&token=VEvywEmaef&width=650&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/906?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #906      +/-   ##
===========================================
- Coverage    31.17%   31.07%   -0.11%     
===========================================
  Files          473      479       +6     
  Lines        14319    14473     +154     
  Branches      9279     9363      +84     
===========================================
+ Hits          4464     4497      +33     
- Misses        1390     1464      +74     
- Partials      8465     8512      +47
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/906?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ders/protobuf/builder\_templates/block\_template.hpp](https://codecov.io/gh/hyperledger/iroha/pull/906/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2J1aWxkZXJfdGVtcGxhdGVzL2Jsb2NrX3RlbXBsYXRlLmhwcA==) | `68% <ø> (ø)` | |
| [.../backend/protobuf/common\_objects/trivial\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/906/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvdHJpdmlhbF9wcm90by5ocHA=) | `41.66% <ø> (ø)` | :arrow_up: |
| [...red\_model/converters/json\_proto\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/906/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NvbnZlcnRlcnMvanNvbl9wcm90b19jb252ZXJ0ZXJfdGVzdC5jcHA=) | `3.44% <3.44%> (ø)` | |
| [...model/converters/protobuf/json\_proto\_converter.hpp](https://codecov.io/gh/hyperledger/iroha/pull/906/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NvbnZlcnRlcnMvcHJvdG9idWYvanNvbl9wcm90b19jb252ZXJ0ZXIuaHBw) | `46.66% <46.66%> (ø)` | |
| [shared\_model/utils/polymorphic\_wrapper.hpp](https://codecov.io/gh/hyperledger/iroha/pull/906/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3BvbHltb3JwaGljX3dyYXBwZXIuaHBw) | `80% <0%> (-8.89%)` | :arrow_down: |
| [shared\_model/interfaces/iroha\_internal/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/906/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvaXJvaGFfaW50ZXJuYWwvYmxvY2suaHBw) | `0% <0%> (ø)` | |
| [shared\_model/backend/protobuf/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/906/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvYmxvY2suaHBw) | `10.41% <0%> (ø)` | |
| ... and [1 more](https://codecov.io/gh/hyperledger/iroha/pull/906/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/906?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/906?src=pr&el=footer). Last update [b682776...e466ede](https://codecov.io/gh/hyperledger/iroha/pull/906?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-24 06:58:19,2018-02-02 08:59:22
https://api.github.com/repos/hyperledger/iroha/issues/906,https://api.github.com/repos/hyperledger/iroha/issues/comments/362523610,https://github.com/hyperledger/iroha/pull/906#issuecomment-362523610,sorabot,"SonarQube analysis reported 13 issues
* ![INFO][INFO] 13 info

#### Top 10 issues

1. ![INFO][INFO] [trivial_proto.hpp#L70](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/backend/protobuf/common_objects/trivial_proto.hpp#L70): Undocumented API: TransportType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [trivial_proto.hpp#L72](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/backend/protobuf/common_objects/trivial_proto.hpp#L72): Undocumented API: getTransport [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [trivial_proto.hpp#L77](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/backend/protobuf/common_objects/trivial_proto.hpp#L77): Undocumented API: proto_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L1](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/builders/protobuf/builder_templates/block_template.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block_template.hpp#L87](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/builders/protobuf/builder_templates/block_template.hpp#L87): Undocumented API: TemplateBlockBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L87](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/builders/protobuf/builder_templates/block_template.hpp#L87): Class 'TemplateBlockBuilder' has a constructor with 1 argument that is not explicit. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoExplicitConstructor)
1. ![INFO][INFO] [block_template.hpp#L100](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/builders/protobuf/builder_templates/block_template.hpp#L100): Undocumented API: txNumber [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L106](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/builders/protobuf/builder_templates/block_template.hpp#L106): Undocumented API: height [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L111](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/builders/protobuf/builder_templates/block_template.hpp#L111): Undocumented API: prevHash [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block_template.hpp#L118](https://github.com/hyperledger/iroha/blob/e466ede38a612d6ad621f79adc1932828b3e9a11/shared_model/builders/protobuf/builder_templates/block_template.hpp#L118): Undocumented API: createdTime [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-02 08:49:16,2018-02-02 08:49:16
https://api.github.com/repos/hyperledger/iroha/issues/905,https://api.github.com/repos/hyperledger/iroha/issues/comments/359901515,https://github.com/hyperledger/iroha/pull/905#issuecomment-359901515,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/905?src=pr&el=h1) Report
> Merging [#905](https://codecov.io/gh/hyperledger/iroha/pull/905?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/cce3d3c880638c8f2763100b37a7dfd0c03b6464?src=pr&el=desc) will **increase** coverage by `0.02%`.
> The diff coverage is `37.28%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/905/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/905?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #905      +/-   ##
===========================================
+ Coverage    31.31%   31.33%   +0.02%     
===========================================
  Files          469      466       -3     
  Lines        14152    14136      -16     
  Branches      9166     9150      -16     
===========================================
- Hits          4432     4430       -2     
+ Misses        1362     1361       -1     
+ Partials      8358     8345      -13
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/905?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/crypto/keys\_manager\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/905/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/905/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [...ad/model/generators/impl/transaction\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/905/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC90cmFuc2FjdGlvbl9nZW5lcmF0b3IuY3Bw) | `42.22% <0%> (ø)` | :arrow_up: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/905/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `36.84% <0%> (ø)` | :arrow_up: |
| [test/module/libs/crypto/keys\_manager\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/905/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX3Rlc3QuY3Bw) | `29.85% <0%> (-5.45%)` | :arrow_down: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/905/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `48.68% <48.88%> (+5.2%)` | :arrow_up: |
| [libs/common/files.cpp](https://codecov.io/gh/hyperledger/iroha/pull/905/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vZmlsZXMuY3Bw) | `14.28% <0%> (-9.53%)` | :arrow_down: |
| [...graphy/ed25519\_sha3\_impl/internal/ed25519\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/905/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9lZDI1NTE5X2ltcGwuY3Bw) | `92.85% <0%> (-7.15%)` | :arrow_down: |
| ... and [97 more](https://codecov.io/gh/hyperledger/iroha/pull/905/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/905?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/905?src=pr&el=footer). Last update [cce3d3c...5894a41](https://codecov.io/gh/hyperledger/iroha/pull/905?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-23 19:24:56,2018-01-29 12:07:29
https://api.github.com/repos/hyperledger/iroha/issues/905,https://api.github.com/repos/hyperledger/iroha/issues/comments/361067948,https://github.com/hyperledger/iroha/pull/905#issuecomment-361067948,sorabot,"SonarQube analysis reported 23 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 15 minor
* ![INFO][INFO] 7 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L52](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/iroha-cli/main.cpp#L52): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [main.cpp#L40](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/iroha-cli/main.cpp#L40): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L42](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/iroha-cli/main.cpp#L42): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L43](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/iroha-cli/main.cpp#L43): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L45](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/iroha-cli/main.cpp#L45): Define a constant instead of duplicating this literal false 5 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L46](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/iroha-cli/main.cpp#L46): Define a constant instead of duplicating this literal ""Name of the account"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L54](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/iroha-cli/main.cpp#L54): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L101](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/iroha-cli/main.cpp#L101): Define a constant instead of duplicating this literal ""Json has wrong format."" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [transaction_generator.cpp#L46](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/irohad/model/generators/impl/transaction_generator.cpp#L46): Define a constant instead of duplicating this literal ""admin"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [transaction_generator.cpp#L48](https://github.com/hyperledger/iroha/blob/98af97383ce9414a11b6c3cb0f345b4fe5325a62/irohad/model/generators/impl/transaction_generator.cpp#L48): Define a constant instead of duplicating this literal ""user"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-28 14:41:35,2018-01-28 14:41:35
https://api.github.com/repos/hyperledger/iroha/issues/905,https://api.github.com/repos/hyperledger/iroha/issues/comments/361231772,https://github.com/hyperledger/iroha/pull/905#issuecomment-361231772,bakhtin,"SonarQube analysis reported 23 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 15 minor
* ![INFO][INFO] 7 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L48](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/iroha-cli/main.cpp#L48): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [main.cpp#L36](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/iroha-cli/main.cpp#L36): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L38](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/iroha-cli/main.cpp#L38): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L39](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/iroha-cli/main.cpp#L39): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L41](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/iroha-cli/main.cpp#L41): Define a constant instead of duplicating this literal false 4 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L42](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/iroha-cli/main.cpp#L42): Define a constant instead of duplicating this literal ""Name of the account"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L50](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/iroha-cli/main.cpp#L50): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L97](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/iroha-cli/main.cpp#L97): Define a constant instead of duplicating this literal ""Json has wrong format."" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [transaction_generator.cpp#L46](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/irohad/model/generators/impl/transaction_generator.cpp#L46): Define a constant instead of duplicating this literal ""admin"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [transaction_generator.cpp#L48](https://github.com/hyperledger/iroha/blob/5894a41510f32176e6f38a3cd7f5c09176bfb9fc/irohad/model/generators/impl/transaction_generator.cpp#L48): Define a constant instead of duplicating this literal ""user"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-29 12:33:19,2018-01-29 12:33:19
https://api.github.com/repos/hyperledger/iroha/issues/904,https://api.github.com/repos/hyperledger/iroha/issues/comments/359900953,https://github.com/hyperledger/iroha/issues/904#issuecomment-359900953,l4l,"Hmm, script works fine for me. May you post all of the logs?",2018-01-23 19:23:03,2018-01-23 19:23:03
https://api.github.com/repos/hyperledger/iroha/issues/904,https://api.github.com/repos/hyperledger/iroha/issues/comments/359919377,https://github.com/hyperledger/iroha/issues/904#issuecomment-359919377,luckychess,"Also branch name, please. And it would be really great if you run ./clean.sh from root iroha's folder and remove everything from example/python/build/.",2018-01-23 20:26:49,2018-01-23 20:26:49
https://api.github.com/repos/hyperledger/iroha/issues/904,https://api.github.com/repos/hyperledger/iroha/issues/comments/365022828,https://github.com/hyperledger/iroha/issues/904#issuecomment-365022828,stinger112,You can close this issue. It seems outdated in the new dev branch.,2018-02-12 18:48:19,2018-02-12 18:48:27
https://api.github.com/repos/hyperledger/iroha/issues/903,https://api.github.com/repos/hyperledger/iroha/issues/comments/359795919,https://github.com/hyperledger/iroha/pull/903#issuecomment-359795919,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/903?src=pr&el=h1) Report
> Merging [#903](https://codecov.io/gh/hyperledger/iroha/pull/903?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3f62cb0976a21969213ab60a8c0cf6699712a837?src=pr&el=desc) will **increase** coverage by `0.1%`.
> The diff coverage is `40.25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/903/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/903?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop     #903     +/-   ##
==========================================
+ Coverage    31.21%   31.31%   +0.1%     
==========================================
  Files          466      466             
  Lines        14062    14097     +35     
  Branches      9139     9128     -11     
==========================================
+ Hits          4389     4415     +26     
- Misses        1338     1358     +20     
+ Partials      8335     8324     -11
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/903?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2FjY291bnQuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [...module/irohad/consensus/yac/yac\_sunny\_day\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3N1bm55X2RheV90ZXN0LmNwcA==) | `12.5% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac\_gate\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfY29tbWFuZC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/queries/get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnRfYXNzZXRzLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/block\_loader\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9ibG9ja19sb2FkZXJfaW5pdC5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [...model/registration/query\_response\_registration.hpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3JlZ2lzdHJhdGlvbi9xdWVyeV9yZXNwb25zZV9yZWdpc3RyYXRpb24uaHBw) | `18.18% <ø> (ø)` | :arrow_up: |
| [...est/module/irohad/common/raw\_block\_loader\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbW1vbi9yYXdfYmxvY2tfbG9hZGVyX3Rlc3QuY3Bw) | `0% <ø> (ø)` | :arrow_up: |
| [libs/datetime/time.hpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-bGlicy9kYXRldGltZS90aW1lLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/queries/get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnQuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| ... and [238 more](https://codecov.io/gh/hyperledger/iroha/pull/903/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/903?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/903?src=pr&el=footer). Last update [3f62cb0...7e6ea13](https://codecov.io/gh/hyperledger/iroha/pull/903?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-23 13:49:14,2018-01-23 18:46:26
https://api.github.com/repos/hyperledger/iroha/issues/903,https://api.github.com/repos/hyperledger/iroha/issues/comments/359796957,https://github.com/hyperledger/iroha/pull/903#issuecomment-359796957,sorabot,"SonarQube analysis reported 802 issues
* ![BLOCKER][BLOCKER] 1 blocker
* ![CRITICAL][CRITICAL] 6 critical
* ![MAJOR][MAJOR] 4 major
* ![MINOR][MINOR] 130 minor
* ![INFO][INFO] 661 info

#### Top 10 issues

1. ![BLOCKER][BLOCKER] [amount.hpp#L28](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/libs/amount/amount.hpp#L28): Using namespace are not allowed in header files. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUsingNamespaceInHeader)
1. ![CRITICAL][CRITICAL] [main.cpp#L52](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/iroha-cli/main.cpp#L52): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L578](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/irohad/model/converters/impl/pb_command_factory.cpp#L578): The Cyclomatic Complexity of this function is 17 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L56](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/irohad/model/converters/impl/pb_query_factory.cpp#L56): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L26](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/irohad/model/converters/impl/pb_query_response_factory.cpp#L26): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L290](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/irohad/model/converters/impl/pb_query_response_factory.cpp#L290): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L293](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/irohad/model/converters/impl/pb_query_response_factory.cpp#L293): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MAJOR][MAJOR] [lazy_initializer.hpp#L97](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/shared_model/utils/lazy_initializer.hpp#L97): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![MAJOR][MAJOR] [reference_holder.hpp#L55](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/shared_model/utils/reference_holder.hpp#L55): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![MAJOR][MAJOR] [reference_holder.hpp#L68](https://github.com/hyperledger/iroha/blob/ea39832928a75aa71684f608fa327715a22a5e45/shared_model/utils/reference_holder.hpp#L68): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-23 13:53:17,2018-01-23 13:53:17
https://api.github.com/repos/hyperledger/iroha/issues/902,https://api.github.com/repos/hyperledger/iroha/issues/comments/359707378,https://github.com/hyperledger/iroha/pull/902#issuecomment-359707378,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/902?src=pr&el=h1) Report
> Merging [#902](https://codecov.io/gh/hyperledger/iroha/pull/902?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/4e58f7780b8c918e56328231ec8f5a9fd67bb429?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `13.55%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/902/graphs/tree.svg?height=150&token=VEvywEmaef&width=650&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/902?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #902   +/-   ##
========================================
  Coverage    31.31%   31.31%           
========================================
  Files          468      469    +1     
  Lines        14152    14152           
  Branches      9166     9166           
========================================
  Hits          4432     4432           
  Misses        1362     1362           
  Partials      8358     8358
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/902?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...orii/processor/impl/transaction\_processor\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9pbXBsL3RyYW5zYWN0aW9uX3Byb2Nlc3Nvcl9pbXBsLmNwcA==) | `43.85% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/query\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9xdWVyeV9nZW5lcmF0b3IuY3Bw) | `60% <ø> (ø)` | :arrow_up: |
| [...rror\_responses/stateless\_failed\_error\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2Vycm9yX3Jlc3BvbnNlcy9zdGF0ZWxlc3NfZmFpbGVkX2Vycm9yX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...le/irohad/validation/stateless\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVsZXNzX3ZhbGlkYXRpb25fdGVzdC5jcHA=) | `23.25% <ø> (ø)` | :arrow_up: |
| [...erfaces/queries/get\_account\_asset\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldF90cmFuc2FjdGlvbnMuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [...ponses/error\_responses/no\_asset\_error\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2Vycm9yX3Jlc3BvbnNlcy9ub19hc3NldF9lcnJvcl9yZXNwb25zZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...model/converters/impl/json\_transaction\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX3RyYW5zYWN0aW9uX2ZhY3RvcnkuY3Bw) | `46.15% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/impl/pb\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9ibG9ja19mYWN0b3J5LmNwcA==) | `45.71% <ø> (ø)` | :arrow_up: |
| [...le/irohad/model/operators/model\_operators\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL29wZXJhdG9ycy9tb2RlbF9vcGVyYXRvcnNfdGVzdC5jcHA=) | `25.82% <ø> (ø)` | :arrow_up: |
| [irohad/model/model\_crypto\_provider\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL21vZGVsX2NyeXB0b19wcm92aWRlcl9pbXBsLmNwcA==) | `46.15% <ø> (ø)` | :arrow_up: |
| ... and [90 more](https://codecov.io/gh/hyperledger/iroha/pull/902/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/902?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/902?src=pr&el=footer). Last update [4e58f77...10fadfa](https://codecov.io/gh/hyperledger/iroha/pull/902?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-23 08:02:29,2018-01-29 09:47:44
https://api.github.com/repos/hyperledger/iroha/issues/902,https://api.github.com/repos/hyperledger/iroha/issues/comments/360065676,https://github.com/hyperledger/iroha/pull/902#issuecomment-360065676,luckychess,Is this pr a good place for removing unnecessary dependencies from shared model?,2018-01-24 09:05:27,2018-01-24 09:05:27
https://api.github.com/repos/hyperledger/iroha/issues/902,https://api.github.com/repos/hyperledger/iroha/issues/comments/361168470,https://github.com/hyperledger/iroha/pull/902#issuecomment-361168470,bakhtin,"SonarQube analysis reported 118 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 44 minor
* ![INFO][INFO] 73 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L55](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/pb_query_factory.cpp#L55): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L98](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/iroha-cli/interactive/impl/interactive_query_cli.cpp#L98): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L128](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/iroha-cli/interactive/impl/interactive_query_cli.cpp#L128): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L196](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L196): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L312](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L312): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [json_query_factory.cpp#L35](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L35): Variable 'deserializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_query_factory.cpp#L36](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L36): Define a constant instead of duplicating this literal ""GetAccount"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L37](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L37): Define a constant instead of duplicating this literal ""GetAccountAssets"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L39](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L39): Define a constant instead of duplicating this literal ""GetAccountDetail"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L41](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L41): Define a constant instead of duplicating this literal ""GetAccountTransactions"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-29 08:09:17,2018-01-29 08:09:17
https://api.github.com/repos/hyperledger/iroha/issues/902,https://api.github.com/repos/hyperledger/iroha/issues/comments/361169200,https://github.com/hyperledger/iroha/pull/902#issuecomment-361169200,sorabot,"SonarQube analysis reported 118 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 44 minor
* ![INFO][INFO] 73 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L55](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/pb_query_factory.cpp#L55): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L98](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/iroha-cli/interactive/impl/interactive_query_cli.cpp#L98): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L128](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/iroha-cli/interactive/impl/interactive_query_cli.cpp#L128): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L196](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L196): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L312](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L312): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [json_query_factory.cpp#L35](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L35): Variable 'deserializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_query_factory.cpp#L36](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L36): Define a constant instead of duplicating this literal ""GetAccount"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L37](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L37): Define a constant instead of duplicating this literal ""GetAccountAssets"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L39](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L39): Define a constant instead of duplicating this literal ""GetAccountDetail"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L41](https://github.com/hyperledger/iroha/blob/10fadfa8d96cd759fdb68516635552c6ac6cc1d6/irohad/model/converters/impl/json_query_factory.cpp#L41): Define a constant instead of duplicating this literal ""GetAccountTransactions"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-29 08:12:53,2018-01-29 08:12:53
https://api.github.com/repos/hyperledger/iroha/issues/901,https://api.github.com/repos/hyperledger/iroha/issues/comments/359675868,https://github.com/hyperledger/iroha/pull/901#issuecomment-359675868,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/901?src=pr&el=h1) Report
> Merging [#901](https://codecov.io/gh/hyperledger/iroha/pull/901?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3f62cb0976a21969213ab60a8c0cf6699712a837?src=pr&el=desc) will **decrease** coverage by `0.05%`.
> The diff coverage is `15.09%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/901/graphs/tree.svg?src=pr&width=650&height=150&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/901?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #901      +/-   ##
===========================================
- Coverage    31.21%   31.16%   -0.06%     
===========================================
  Files          466      468       +2     
  Lines        14062    14143      +81     
  Branches      9139     9209      +70     
===========================================
+ Hits          4389     4407      +18     
+ Misses        1338     1332       -6     
- Partials      8335     8404      +69
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/901?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `6.19% <0%> (-2.9%)` | :arrow_down: |
| [test/module/libs/converter/from\_string\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb252ZXJ0ZXIvZnJvbV9zdHJpbmdfdGVzdC5jcHA=) | `0% <0%> (ø)` | |
| [...rfaces/common\_objects/interface\_signature\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvaW50ZXJmYWNlX3NpZ25hdHVyZV90ZXN0LmNwcA==) | `0% <0%> (ø)` | |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `18.75% <0%> (+18.75%)` | :arrow_up: |
| [...d/model/converters/impl/pb\_transaction\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl90cmFuc2FjdGlvbl9mYWN0b3J5LmNwcA==) | `37.5% <33.33%> (+2.01%)` | :arrow_up: |
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `74.19% <40%> (-0.39%)` | :arrow_down: |
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `40% <40%> (ø)` | :arrow_up: |
| [irohad/model/converters/impl/pb\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9ibG9ja19mYWN0b3J5LmNwcA==) | `47.22% <44.44%> (+1.5%)` | :arrow_up: |
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `42.07% <55.55%> (+0.4%)` | :arrow_up: |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/901/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/901?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/901?src=pr&el=footer). Last update [3f62cb0...9e685ad](https://codecov.io/gh/hyperledger/iroha/pull/901?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-23 04:51:08,2018-01-31 08:28:13
https://api.github.com/repos/hyperledger/iroha/issues/901,https://api.github.com/repos/hyperledger/iroha/issues/comments/359713109,https://github.com/hyperledger/iroha/pull/901#issuecomment-359713109,sorabot,"SonarQube analysis reported 35 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 6 minor
* ![INFO][INFO] 28 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L56](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/irohad/model/converters/impl/pb_query_factory.cpp#L56): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [pb_block_factory.cpp#L66](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/irohad/model/converters/impl/pb_block_factory.cpp#L66): Define a constant instead of duplicating this literal ""PbBlockFactory::deserialize"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [pb_query_factory.cpp#L158](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/irohad/model/converters/impl/pb_query_factory.cpp#L158): Define a constant instead of duplicating this literal ""PbQueryFactory::deserialize"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [pb_transaction_factory.cpp#L66](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/irohad/model/converters/impl/pb_transaction_factory.cpp#L66): Define a constant instead of duplicating this literal ""PbTransactionFactory::deserialize"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [types.hpp#L97](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/libs/common/types.hpp#L97): Define a constant instead of duplicating this literal "" bytes\n"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [signature.hpp#L67](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/shared_model/interfaces/common_objects/signature.hpp#L67): Define a constant instead of duplicating this literal ""Signature::makeOldModel"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [block.hpp#L65](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/shared_model/interfaces/iroha_internal/block.hpp#L65): Define a constant instead of duplicating this literal ""Block::makeOldModel"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [types.hpp#L42](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/libs/common/types.hpp#L42): Undocumented API: BadFormatException [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L43](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/libs/common/types.hpp#L43): Undocumented API: byte_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L45](https://github.com/hyperledger/iroha/blob/9e685ad3990b677411c6a09ffaba68b4e1ca2797/libs/common/types.hpp#L45): Undocumented API: code [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-23 08:25:04,2018-01-23 08:25:04
https://api.github.com/repos/hyperledger/iroha/issues/900,https://api.github.com/repos/hyperledger/iroha/issues/comments/359432828,https://github.com/hyperledger/iroha/pull/900#issuecomment-359432828,l4l,"Also these  function can be moved inside `shared_model::proto` namespace, but there's may some issues",2018-01-22 14:06:57,2018-01-22 14:06:57
https://api.github.com/repos/hyperledger/iroha/issues/900,https://api.github.com/repos/hyperledger/iroha/issues/comments/359435076,https://github.com/hyperledger/iroha/pull/900#issuecomment-359435076,sorabot,"SonarQube analysis reported 15 issues
* ![INFO][INFO] 15 info

#### Top 10 issues

1. ![INFO][INFO] [proto_command.hpp#L55](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/commands/proto_command.hpp#L55): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_command.hpp#L92](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/commands/proto_command.hpp#L92): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_command.hpp#L98](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/commands/proto_command.hpp#L98): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_command.hpp#L100](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/commands/proto_command.hpp#L100): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L45](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/queries/proto_query.hpp#L45): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L49](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/queries/proto_query.hpp#L49): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L51](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/queries/proto_query.hpp#L51): Undocumented API: which [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L55](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/queries/proto_query.hpp#L55): Undocumented API: shared_model [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L62](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/queries/proto_query.hpp#L62): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L94](https://github.com/hyperledger/iroha/blob/cfb072d030ca16077af3872fc0e3328e062f7cf4/shared_model/backend/protobuf/queries/proto_query.hpp#L94): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-22 14:15:15,2018-01-22 14:15:15
https://api.github.com/repos/hyperledger/iroha/issues/900,https://api.github.com/repos/hyperledger/iroha/issues/comments/359435145,https://github.com/hyperledger/iroha/pull/900#issuecomment-359435145,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/900?src=pr&el=h1) Report
> Merging [#900](https://codecov.io/gh/hyperledger/iroha/pull/900?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1f2e3300d8d424fbec5473e3ade27c13fdbba1c7?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `80%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/900/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/900?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #900      +/-   ##
===========================================
+ Coverage    31.19%   31.21%   +0.01%     
===========================================
  Files          465      465              
  Lines        14058    14062       +4     
  Branches      9139     9139              
===========================================
+ Hits          4386     4389       +3     
- Misses        1337     1338       +1     
  Partials      8335     8335
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/900?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/900/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `58.13% <100%> (ø)` | :arrow_up: |
| [...\_model/backend/protobuf/commands/proto\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/900/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY29tbWFuZC5ocHA=) | `66.66% <66.66%> (-3.34%)` | :arrow_down: |
| [...otobuf/transaction\_responses/proto\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/900/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3Byb3RvX3R4X3Jlc3BvbnNlLmhwcA==) | `75% <85.71%> (+3.57%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/900?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/900?src=pr&el=footer). Last update [1f2e330...cfb072d](https://codecov.io/gh/hyperledger/iroha/pull/900?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-22 14:15:29,2018-01-22 14:21:34
https://api.github.com/repos/hyperledger/iroha/issues/899,https://api.github.com/repos/hyperledger/iroha/issues/comments/359429810,https://github.com/hyperledger/iroha/pull/899#issuecomment-359429810,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/899?src=pr&el=h1) Report
> Merging [#899](https://codecov.io/gh/hyperledger/iroha/pull/899?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d92a63b6db06bedefaf57b6d0e36d2c5e16a7946?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `29.03%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/899/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/899?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #899      +/-   ##
==========================================
- Coverage    31.31%   31.3%   -0.02%     
==========================================
  Files          466     468       +2     
  Lines        14097   14159      +62     
  Branches      9128    9171      +43     
==========================================
+ Hits          4415    4433      +18     
- Misses        1358    1362       +4     
- Partials      8324    8364      +40
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/899?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/libs/common/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/899/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb21tb24vcmVzdWx0X3Rlc3QuY3Bw) | `10.63% <10.63%> (ø)` | |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/899/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | `86.66% <86.66%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/899?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/899?src=pr&el=footer). Last update [d92a63b...b8ead68](https://codecov.io/gh/hyperledger/iroha/pull/899?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-22 13:55:41,2018-01-26 09:48:46
https://api.github.com/repos/hyperledger/iroha/issues/899,https://api.github.com/repos/hyperledger/iroha/issues/comments/359523963,https://github.com/hyperledger/iroha/pull/899#issuecomment-359523963,l4l,"What about this: ![MINOR][MINOR] [result.hpp#L38](https://github.com/hyperledger/iroha/blob/505dd110a3b3e74fe774c0a08dc195183e7d263a/libs/common/result.hpp#L38): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-22 18:45:44,2018-01-22 18:45:44
https://api.github.com/repos/hyperledger/iroha/issues/899,https://api.github.com/repos/hyperledger/iroha/issues/comments/360434561,https://github.com/hyperledger/iroha/pull/899#issuecomment-360434561,sorabot,"SonarQube analysis reported 12 issues
* ![MINOR][MINOR] 1 minor
* ![INFO][INFO] 11 info

#### Top 10 issues

1. ![MINOR][MINOR] [result.hpp#L38](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L38): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [result.hpp#L1](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [result.hpp#L43](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L43): Undocumented API: Value [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L44](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L44): Undocumented API: value [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L46](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L46): Undocumented API: operator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L52](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L52): Undocumented API: Value [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L55](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L55): Undocumented API: Error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L56](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L56): Undocumented API: error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L58](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L58): Undocumented API: operator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [result.hpp#L64](https://github.com/hyperledger/iroha/blob/b8ead6844a228d6434143df98ea9cef8b181427e/libs/common/result.hpp#L64): Undocumented API: Error [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-25 11:03:44,2018-01-25 11:03:44
https://api.github.com/repos/hyperledger/iroha/issues/898,https://api.github.com/repos/hyperledger/iroha/issues/comments/359233889,https://github.com/hyperledger/iroha/pull/898#issuecomment-359233889,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/898?src=pr&el=h1) Report
> Merging [#898](https://codecov.io/gh/hyperledger/iroha/pull/898?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3743392e723792799aae717c8e31d68ff0a3a6db?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/898/graphs/tree.svg?src=pr&width=650&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/898?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #898      +/-   ##
==========================================
- Coverage     31.3%   31.3%   -0.01%     
==========================================
  Files          468     466       -2     
  Lines        14159   14097      -62     
  Branches      9171    9128      -43     
==========================================
- Hits          4433    4413      -20     
+ Misses        1362    1359       -3     
+ Partials      8364    8325      -39
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/898?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/server\_runner.cpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5jcHA=) | `42.85% <0%> (-9.53%)` | :arrow_down: |
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `100% <0%> (ø)` | :arrow_up: |
| [libs/cache/cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-bGlicy9jYWNoZS9jYWNoZS5ocHA=) | | |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | | |
| [test/module/libs/cache/cache\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jYWNoZS9jYWNoZV90ZXN0LmNwcA==) | | |
| [test/module/libs/common/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb21tb24vcmVzdWx0X3Rlc3QuY3Bw) | | |
| [libs/cache/abstract\_cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-bGlicy9jYWNoZS9hYnN0cmFjdF9jYWNoZS5ocHA=) | | |
| [irohad/torii/cache/cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NhY2hlL2NhY2hlLmhwcA==) | `89.47% <0%> (ø)` | |
| [irohad/torii/cache/abstract\_cache.hpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NhY2hlL2Fic3RyYWN0X2NhY2hlLmhwcA==) | `87.5% <0%> (ø)` | |
| [test/module/irohad/torii/cache/cache\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/898/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL2NhY2hlL2NhY2hlX3Rlc3QuY3Bw) | `29.82% <0%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/898?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/898?src=pr&el=footer). Last update [3743392...4503a7f](https://codecov.io/gh/hyperledger/iroha/pull/898?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-21 09:04:30,2018-01-27 08:12:25
https://api.github.com/repos/hyperledger/iroha/issues/898,https://api.github.com/repos/hyperledger/iroha/issues/comments/359383745,https://github.com/hyperledger/iroha/pull/898#issuecomment-359383745,Warchant,+3200 :cry:,2018-01-22 10:31:28,2018-01-22 10:31:28
https://api.github.com/repos/hyperledger/iroha/issues/898,https://api.github.com/repos/hyperledger/iroha/issues/comments/360189144,https://github.com/hyperledger/iroha/pull/898#issuecomment-360189144,Warchant,"Don't forget to rebase onto develop once again, before merge.
And wait for 2nd approval.",2018-01-24 16:22:52,2018-01-24 16:22:52
https://api.github.com/repos/hyperledger/iroha/issues/897,https://api.github.com/repos/hyperledger/iroha/issues/comments/359208299,https://github.com/hyperledger/iroha/pull/897#issuecomment-359208299,sorabot,"SonarQube analysis reported 2 issues

1. ![INFO][INFO] [postgres_wsv_command.hpp#L29](https://github.com/hyperledger/iroha/blob/576a989a5e9ef8e1e57292f39d7de755447a04ea/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L29): Undocumented API: PostgresWsvCommand [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [postgres_wsv_command.hpp#L31](https://github.com/hyperledger/iroha/blob/576a989a5e9ef8e1e57292f39d7de755447a04ea/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L31): Undocumented API: PostgresWsvCommand [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-20 22:50:03,2018-01-20 22:50:03
https://api.github.com/repos/hyperledger/iroha/issues/897,https://api.github.com/repos/hyperledger/iroha/issues/comments/359208304,https://github.com/hyperledger/iroha/pull/897#issuecomment-359208304,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/897?src=pr&el=h1) Report
> Merging [#897](https://codecov.io/gh/hyperledger/iroha/pull/897?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/55363e5411ba7f97ee4735d0764711171a81b42a?src=pr&el=desc) will **increase** coverage by `0.7%`.
> The diff coverage is `84.81%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/897/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/897?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##           develop    #897     +/-   ##
=========================================
+ Coverage       31%   31.7%   +0.7%     
=========================================
  Files          464     464             
  Lines        14172   14142     -30     
  Branches      9188    9083    -105     
=========================================
+ Hits          4394    4484     +90     
+ Misses        1425    1392     -33     
+ Partials      8353    8266     -87
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/897?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/897/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/897/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `83.24% <84.81%> (+53.47%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/897?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/897?src=pr&el=footer). Last update [55363e5...576a989](https://codecov.io/gh/hyperledger/iroha/pull/897?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-20 22:50:08,2018-01-26 09:13:16
https://api.github.com/repos/hyperledger/iroha/issues/897,https://api.github.com/repos/hyperledger/iroha/issues/comments/359812098,https://github.com/hyperledger/iroha/pull/897#issuecomment-359812098,Warchant,Rebase please,2018-01-23 14:45:17,2018-01-23 14:45:17
https://api.github.com/repos/hyperledger/iroha/issues/897,https://api.github.com/repos/hyperledger/iroha/issues/comments/360880827,https://github.com/hyperledger/iroha/pull/897#issuecomment-360880827,Warchant,Why closed?,2018-01-26 19:27:10,2018-01-26 19:27:10
https://api.github.com/repos/hyperledger/iroha/issues/897,https://api.github.com/repos/hyperledger/iroha/issues/comments/360989423,https://github.com/hyperledger/iroha/pull/897#issuecomment-360989423,l4l,"We've decided postpone this issue, that pr was mostly as PoC for coverage improving",2018-01-27 14:47:07,2018-01-27 14:47:07
https://api.github.com/repos/hyperledger/iroha/issues/896,https://api.github.com/repos/hyperledger/iroha/issues/comments/359203715,https://github.com/hyperledger/iroha/pull/896#issuecomment-359203715,sorabot,"SonarQube analysis reported 24 issues
* ![BLOCKER][BLOCKER] 1 blocker
* ![INFO][INFO] 23 info

#### Top 10 issues

1. ![BLOCKER][BLOCKER] [amount.hpp#L29](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L29): Using namespace are not allowed in header files. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUsingNamespaceInHeader)
1. ![INFO][INFO] [amount.hpp#L28](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L28): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [amount.hpp#L46](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L46): Class 'Amount' has a constructor with 1 argument that is not explicit. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoExplicitConstructor)
1. ![INFO][INFO] [amount.hpp#L55](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L55): Undocumented API: Amount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L57](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L57): Undocumented API: Amount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L60](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L60): Undocumented API: to_uint64s [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L66](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L66): Undocumented API: operator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L72](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L72): Undocumented API: operator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L74](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L74): Undocumented API: getIntValue [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L75](https://github.com/hyperledger/iroha/blob/b2a9a324c54e262480141a422181492eb4faead2/libs/amount/amount.hpp#L75): Undocumented API: getPrecision [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-20 21:31:18,2018-01-20 21:31:18
https://api.github.com/repos/hyperledger/iroha/issues/896,https://api.github.com/repos/hyperledger/iroha/issues/comments/359203723,https://github.com/hyperledger/iroha/pull/896#issuecomment-359203723,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/896?src=pr&el=h1) Report
> Merging [#896](https://codecov.io/gh/hyperledger/iroha/pull/896?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/55363e5411ba7f97ee4735d0764711171a81b42a?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `27.27%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/896/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/896?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #896      +/-   ##
===========================================
- Coverage       31%   30.99%   -0.01%     
===========================================
  Files          464      465       +1     
  Lines        14172    14184      +12     
  Branches      9188     9196       +8     
===========================================
+ Hits          4394     4397       +3     
- Misses        1425     1426       +1     
- Partials      8353     8361       +8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/896?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/amount/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/896/diff?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmhwcA==) | `38.46% <ø> (ø)` | :arrow_up: |
| [test/framework/test\_reflection.cpp](https://codecov.io/gh/hyperledger/iroha/pull/896/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvdGVzdF9yZWZsZWN0aW9uLmNwcA==) | `27.27% <27.27%> (ø)` | |
| [shared\_model/cryptography/public\_key.hpp](https://codecov.io/gh/hyperledger/iroha/pull/896/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9wdWJsaWNfa2V5LmhwcA==) | `11.11% <0%> (-1.39%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/896?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/896?src=pr&el=footer). Last update [55363e5...b2a9a32](https://codecov.io/gh/hyperledger/iroha/pull/896?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-20 21:31:23,2018-01-22 12:18:39
https://api.github.com/repos/hyperledger/iroha/issues/896,https://api.github.com/repos/hyperledger/iroha/issues/comments/359231071,https://github.com/hyperledger/iroha/pull/896#issuecomment-359231071,l4l,"A lot of compile error like this:
```
rttr/detail/method/method_wrapper.h:213:7: error: mangled name for ‘virtual rttr::detail::method_wrapper<bool (std::__cxx11::basic_string<char>::*)() const noexcept, (rttr::access_levels)0, rttr::detail::default_invoke, rttr::detail::default_args<>, rttr::detail::parameter_infos<>, 0>::~method_wrapper()’ will change in C++17 because the exception specification is part of a function type [-Werror=noexcept-type]
```

That error appears both on gcc 7.2.1 and clang 5.0.1",2018-01-21 08:04:27,2018-01-21 08:07:24
https://api.github.com/repos/hyperledger/iroha/issues/896,https://api.github.com/repos/hyperledger/iroha/issues/comments/359248274,https://github.com/hyperledger/iroha/pull/896#issuecomment-359248274,Warchant,@l4l how about gcc-6 and clang-3.8 ? They should work.,2018-01-21 13:25:35,2018-01-21 13:25:35
https://api.github.com/repos/hyperledger/iroha/issues/896,https://api.github.com/repos/hyperledger/iroha/issues/comments/359267301,https://github.com/hyperledger/iroha/pull/896#issuecomment-359267301,l4l,"We will move to c++17 soon, so they should work as well",2018-01-21 18:01:08,2018-01-21 18:01:08
https://api.github.com/repos/hyperledger/iroha/issues/896,https://api.github.com/repos/hyperledger/iroha/issues/comments/359407524,https://github.com/hyperledger/iroha/pull/896#issuecomment-359407524,Warchant,"as @lebdron explained, rttr can not be used for reflection, because for our case we need automatic reflection generation. closing.",2018-01-22 12:18:33,2018-01-22 12:18:33
https://api.github.com/repos/hyperledger/iroha/issues/895,https://api.github.com/repos/hyperledger/iroha/issues/comments/359179579,https://github.com/hyperledger/iroha/pull/895#issuecomment-359179579,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/895?src=pr&el=h1) Report
> Merging [#895](https://codecov.io/gh/hyperledger/iroha/pull/895?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/246b695313fc05fbaa8258d051386031fed0d19b?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `21.42%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/895/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/895?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #895      +/-   ##
===========================================
- Coverage     31.2%   31.19%   -0.01%     
===========================================
  Files          465      465              
  Lines        14052    14058       +6     
  Branches      9132     9139       +7     
===========================================
+ Hits          4385     4386       +1     
+ Misses        1338     1337       -1     
- Partials      8329     8335       +6
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/895?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/crypto/keys\_manager\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [...rohad/validation/impl/stateless\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWxlc3NfdmFsaWRhdG9yX2ltcGwuY3Bw) | `44.82% <0%> (-0.63%)` | :arrow_down: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `53.15% <0%> (-0.49%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `41.35% <0%> (-1.62%)` | :arrow_down: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `43.47% <0%> (-1.98%)` | :arrow_down: |
| [irohad/network/impl/block\_loader\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5jcHA=) | `23.61% <14.28%> (+2.18%)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `27.81% <18.18%> (+0.75%)` | :arrow_up: |
| [libs/logger/logger.cpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-bGlicy9sb2dnZXIvbG9nZ2VyLmNwcA==) | `52% <25%> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac.cpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWMuY3Bw) | `42.36% <50%> (-0.79%)` | :arrow_down: |
| [irohad/torii/command\_client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/895/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfY2xpZW50LmNwcA==) | `49.2% <57.89%> (+1.66%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/895?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/895?src=pr&el=footer). Last update [246b695...4afd5a3](https://codecov.io/gh/hyperledger/iroha/pull/895?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-20 15:34:11,2018-01-22 12:57:25
https://api.github.com/repos/hyperledger/iroha/issues/895,https://api.github.com/repos/hyperledger/iroha/issues/comments/359180527,https://github.com/hyperledger/iroha/pull/895#issuecomment-359180527,Warchant,"Codecov says that coverage is bad, this is because none of failure cases in postgres are covered. It is not the part of this PR.",2018-01-20 15:48:19,2018-01-20 15:48:19
https://api.github.com/repos/hyperledger/iroha/issues/895,https://api.github.com/repos/hyperledger/iroha/issues/comments/359184350,https://github.com/hyperledger/iroha/pull/895#issuecomment-359184350,Warchant,"Also look at this:
>BLOCKER iroha_conf_loader.hpp#L47: Using namespace are not allowed in header files. rule
>CRITICAL interactive_query_cli.cpp#L127: Add a default case to this switch. rule

",2018-01-20 16:40:56,2018-01-20 16:41:10
https://api.github.com/repos/hyperledger/iroha/issues/895,https://api.github.com/repos/hyperledger/iroha/issues/comments/359414790,https://github.com/hyperledger/iroha/pull/895#issuecomment-359414790,sorabot,"SonarQube analysis reported 63 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 13 minor
* ![INFO][INFO] 49 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L263](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/irohad/main/application.cpp#L263): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L98](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/iroha-cli/interactive/impl/interactive_query_cli.cpp#L98): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L135](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/iroha-cli/interactive/impl/interactive_query_cli.cpp#L135): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L35](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/irohad/ametsuchi/impl/storage_impl.cpp#L35): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.cpp#L48](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/irohad/consensus/yac/impl/yac.cpp#L48): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.cpp#L58](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/irohad/consensus/yac/impl/yac.cpp#L58): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.cpp#L34](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/irohad/main/application.cpp#L34): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [command_client.cpp#L3](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/irohad/torii/command_client.cpp#L3): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_client.cpp#L53](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/irohad/torii/command_client.cpp#L53): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [stateless_validator_impl.cpp#L45](https://github.com/hyperledger/iroha/blob/4afd5a370ed3b1606362d33e978029795bf6b0c6/irohad/validation/impl/stateless_validator_impl.cpp#L45): Define a constant instead of duplicating this literal false 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-22 12:52:20,2018-01-22 12:52:20
https://api.github.com/repos/hyperledger/iroha/issues/894,https://api.github.com/repos/hyperledger/iroha/issues/comments/358977525,https://github.com/hyperledger/iroha/pull/894#issuecomment-358977525,luckychess,Please also leave only one proposal interface :),2018-01-19 14:16:34,2018-01-19 14:16:34
https://api.github.com/repos/hyperledger/iroha/issues/894,https://api.github.com/repos/hyperledger/iroha/issues/comments/358981269,https://github.com/hyperledger/iroha/pull/894#issuecomment-358981269,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/894?src=pr&el=h1) Report
> Merging [#894](https://codecov.io/gh/hyperledger/iroha/pull/894?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/bbcb2402823c1fb7f49f86eebc15f1b8490f25e5?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/894/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/894?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #894   +/-   ##
========================================
  Coverage    31.31%   31.31%           
========================================
  Files          466      466           
  Lines        14097    14097           
  Branches      9128     9128           
========================================
  Hits          4415     4415           
  Misses        1358     1358           
  Partials      8324     8324
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/894?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/894?src=pr&el=footer). Last update [bbcb240...0424d50](https://codecov.io/gh/hyperledger/iroha/pull/894?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-19 14:30:55,2018-01-26 09:06:27
https://api.github.com/repos/hyperledger/iroha/issues/894,https://api.github.com/repos/hyperledger/iroha/issues/comments/360201945,https://github.com/hyperledger/iroha/pull/894#issuecomment-360201945,l4l,Why the lats commit (ef711ed) in this pr?,2018-01-24 17:00:53,2018-01-24 17:02:20
https://api.github.com/repos/hyperledger/iroha/issues/894,https://api.github.com/repos/hyperledger/iroha/issues/comments/360637383,https://github.com/hyperledger/iroha/pull/894#issuecomment-360637383,sorabot,"SonarQube analysis reported 25 issues
* ![INFO][INFO] 25 info

#### Top 10 issues

1. ![INFO][INFO] [proposal.hpp#L1](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/backend/protobuf/proposal.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [proposal.hpp#L37](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/backend/protobuf/proposal.hpp#L37): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L47](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/backend/protobuf/proposal.hpp#L47): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L60](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/backend/protobuf/proposal.hpp#L60): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L62](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/backend/protobuf/proposal.hpp#L62): Undocumented API: Proposal [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L1](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/builders/protobuf/proposal.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [proposal.hpp#L32](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/builders/protobuf/proposal.hpp#L32): Undocumented API: TemplateProposalBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L68](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/builders/protobuf/proposal.hpp#L68): Undocumented API: height [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L73](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/builders/protobuf/proposal.hpp#L73): Undocumented API: transactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proposal.hpp#L81](https://github.com/hyperledger/iroha/blob/0424d500313d6dc14753b9499172459109f5043a/shared_model/builders/protobuf/proposal.hpp#L81): Undocumented API: createdTime [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-25 23:38:45,2018-01-25 23:38:45
https://api.github.com/repos/hyperledger/iroha/issues/893,https://api.github.com/repos/hyperledger/iroha/issues/comments/359140215,https://github.com/hyperledger/iroha/pull/893#issuecomment-359140215,codecov[bot],"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/893?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@05ca504`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/893/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/893?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #893   +/-   ##
==========================================
  Coverage           ?   31.31%           
==========================================
  Files              ?      466           
  Lines              ?    14097           
  Branches           ?     9128           
==========================================
  Hits               ?     4415           
  Misses             ?     1358           
  Partials           ?     8324
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/893?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/893?src=pr&el=footer). Last update [05ca504...147968a](https://codecov.io/gh/hyperledger/iroha/pull/893?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-20 03:04:21,2018-02-02 09:47:13
https://api.github.com/repos/hyperledger/iroha/issues/893,https://api.github.com/repos/hyperledger/iroha/issues/comments/359523562,https://github.com/hyperledger/iroha/pull/893#issuecomment-359523562,l4l,Rebase and some issues will disappear ,2018-01-22 18:44:21,2018-01-22 18:44:21
https://api.github.com/repos/hyperledger/iroha/issues/893,https://api.github.com/repos/hyperledger/iroha/issues/comments/359787109,https://github.com/hyperledger/iroha/pull/893#issuecomment-359787109,l4l,"Meh, seems that not all. Nice to fix that beofre the merge:
![CRITICAL][CRITICAL] [interactive_status_cli.cpp#L78](https://github.com/hyperledger/iroha/blob/c49d1bf5eb612bf8a26bc8329c09a21718a1c2b4/iroha-cli/interactive/impl/interactive_status_cli.cpp#L78): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)


[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'",2018-01-23 13:17:07,2018-01-23 13:17:07
https://api.github.com/repos/hyperledger/iroha/issues/893,https://api.github.com/repos/hyperledger/iroha/issues/comments/362540830,https://github.com/hyperledger/iroha/pull/893#issuecomment-362540830,sorabot,"SonarQube analysis reported 38 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 11 minor
* ![INFO][INFO] 26 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L47](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/main.cpp#L47): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [interactive_cli.cpp#L44](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/interactive/impl/interactive_cli.cpp#L44): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L99](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/interactive/impl/interactive_query_cli.cpp#L99): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L133](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/interactive/impl/interactive_query_cli.cpp#L133): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_status_cli.cpp#L75](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/interactive/impl/interactive_status_cli.cpp#L75): Define a constant instead of duplicating this literal ""Choose action: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_status_cli.cpp#L80](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/interactive/impl/interactive_status_cli.cpp#L80): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L202](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L202): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L318](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L318): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_cli.hpp#L41](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/interactive/interactive_cli.hpp#L41): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L142](https://github.com/hyperledger/iroha/blob/147968a7006e389574e507aae87afdd1969724d8/iroha-cli/interactive/interactive_transaction_cli.hpp#L142): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-02 09:58:43,2018-02-02 09:58:43
https://api.github.com/repos/hyperledger/iroha/issues/892,https://api.github.com/repos/hyperledger/iroha/issues/comments/358941429,https://github.com/hyperledger/iroha/issues/892#issuecomment-358941429,Warchant,"Of course! For development environment you can build your container with redis and postgres inside, based on release dockerfile:
https://github.com/hyperledger/iroha/blob/develop/docker/release/Dockerfile

But first, you need to create `iroha.deb` package. You can use this cmake command from our CI:
https://github.com/hyperledger/iroha/blob/develop/.circleci/config.yml#L103-L118

",2018-01-19 11:34:14,2018-01-19 12:55:58
https://api.github.com/repos/hyperledger/iroha/issues/892,https://api.github.com/repos/hyperledger/iroha/issues/comments/359372448,https://github.com/hyperledger/iroha/issues/892#issuecomment-359372448,Warchant,Let me know if you have any other questions. I am closing this issue.,2018-01-22 09:46:21,2018-01-22 09:46:21
https://api.github.com/repos/hyperledger/iroha/issues/891,https://api.github.com/repos/hyperledger/iroha/issues/comments/358977567,https://github.com/hyperledger/iroha/pull/891#issuecomment-358977567,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/891?src=pr&el=h1) Report
> Merging [#891](https://codecov.io/gh/hyperledger/iroha/pull/891?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/01e9b1c4e1386acbb077b0277fbd1246e4adf133?src=pr&el=desc) will **decrease** coverage by `0.1%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/891/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/891?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #891      +/-   ##
===========================================
- Coverage    31.31%   31.21%   -0.11%     
===========================================
  Files          466      465       -1     
  Lines        14097    14062      -35     
  Branches      9128     9139      +11     
===========================================
- Hits          4415     4389      -26     
+ Misses        1358     1338      -20     
- Partials      8324     8335      +11
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/891?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `42.16% <0%> (-57.84%)` | :arrow_down: |
| [irohad/consensus/yac/impl/timer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC90aW1lcl9pbXBsLmNwcA==) | `50% <0%> (-20%)` | :arrow_down: |
| [.../query\_responses/proto\_account\_detail\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2FjY291bnRfZGV0YWlsX3Jlc3BvbnNlLmhwcA==) | `33.33% <0%> (-9.53%)` | :arrow_down: |
| [irohad/ordering/impl/ordering\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV9pbXBsLmNwcA==) | `50% <0%> (-8.34%)` | :arrow_down: |
| [...est/module/shared\_model/cryptography/blob\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iX3Rlc3QuY3Bw) | `18.18% <0%> (-6.82%)` | :arrow_down: |
| [...odel/backend/protobuf/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `71.42% <0%> (-6.35%)` | :arrow_down: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `50% <0%> (-5.56%)` | :arrow_down: |
| [.../backend/protobuf/common\_objects/trivial\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvdHJpdmlhbF9wcm90by5ocHA=) | `36.36% <0%> (-5.31%)` | :arrow_down: |
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `56.66% <0%> (-4.63%)` | :arrow_down: |
| [.../protobuf/query\_responses/proto\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `83.33% <0%> (-2.39%)` | :arrow_down: |
| ... and [132 more](https://codecov.io/gh/hyperledger/iroha/pull/891/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/891?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/891?src=pr&el=footer). Last update [01e9b1c...0037516](https://codecov.io/gh/hyperledger/iroha/pull/891?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-19 14:16:43,2018-01-24 09:38:37
https://api.github.com/repos/hyperledger/iroha/issues/891,https://api.github.com/repos/hyperledger/iroha/issues/comments/360068287,https://github.com/hyperledger/iroha/pull/891#issuecomment-360068287,sorabot,"SonarQube analysis reported 21 issues
* ![INFO][INFO] 21 info

#### Top 10 issues

1. ![INFO][INFO] [block.hpp#L1](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/backend/protobuf/block.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block.hpp#L32](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/backend/protobuf/block.hpp#L32): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L40](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/backend/protobuf/block.hpp#L40): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L68](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/backend/protobuf/block.hpp#L68): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L70](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/backend/protobuf/block.hpp#L70): Undocumented API: Block [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L1](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/builders/protobuf/block.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [block.hpp#L35](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/builders/protobuf/block.hpp#L35): Undocumented API: TemplateBlockBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L79](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/builders/protobuf/block.hpp#L79): Undocumented API: transactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L89](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/builders/protobuf/block.hpp#L89): Undocumented API: txNumber [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L95](https://github.com/hyperledger/iroha/blob/003751681bccec8039f0a97256a192f937457804/shared_model/builders/protobuf/block.hpp#L95): Undocumented API: height [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-24 09:16:39,2018-01-24 09:16:39
https://api.github.com/repos/hyperledger/iroha/issues/889,https://api.github.com/repos/hyperledger/iroha/issues/comments/358772075,https://github.com/hyperledger/iroha/pull/889#issuecomment-358772075,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/889?src=pr&el=h1) Report
> Merging [#889](https://codecov.io/gh/hyperledger/iroha/pull/889?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/55363e5411ba7f97ee4735d0764711171a81b42a?src=pr&el=desc) will **increase** coverage by `0.2%`.
> The diff coverage is `31.67%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/889/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/889?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##           develop    #889     +/-   ##
=========================================
+ Coverage       31%   31.2%   +0.2%     
=========================================
  Files          464     465      +1     
  Lines        14172   14052    -120     
  Branches      9188    9132     -56     
=========================================
- Hits          4394    4385      -9     
+ Misses        1425    1338     -87     
+ Partials      8353    8329     -24
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/889?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2FjY291bnRfYXNzZXQuaHBw) | `0% <0%> (ø)` | :arrow_up: |
| [irohad/model/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2Fzc2V0LmhwcA==) | `50% <100%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `66.66% <100%> (+66.66%)` | :arrow_up: |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `15% <28.12%> (+2.83%)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `42.96% <37.6%> (+15.64%)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `29.34% <5.35%> (-0.42%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tb24uaHBw) | `91.66% <91.66%> (ø)` | |
| [...rohad/model/converters/pb\_query\_responses\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfcmVzcG9uc2VzX3Rlc3QuY3Bw) | `15.15% <0%> (-1.02%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `46.77% <0%> (-0.29%)` | :arrow_down: |
| ... and [1 more](https://codecov.io/gh/hyperledger/iroha/pull/889/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/889?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/889?src=pr&el=footer). Last update [55363e5...e848fb8](https://codecov.io/gh/hyperledger/iroha/pull/889?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 20:29:36,2018-01-21 21:09:29
https://api.github.com/repos/hyperledger/iroha/issues/889,https://api.github.com/repos/hyperledger/iroha/issues/comments/359271167,https://github.com/hyperledger/iroha/pull/889#issuecomment-359271167,sorabot,"SonarQube analysis reported 19 issues
* ![MINOR][MINOR] 10 minor
* ![INFO][INFO] 9 info

#### Top 10 issues

1. ![MINOR][MINOR] [postgres_wsv_command.hpp#L77](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L77): Unused private function: 'PostgresWsvCommand::execute' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_common.hpp#L1](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/irohad/ametsuchi/impl/postgres_wsv_common.hpp#L1): Add a new line at the end of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingNewLineAtEndOfFile)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L48](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L48): Define a constant instead of duplicating this literal ""role_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L79](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L79): Define a constant instead of duplicating this literal ""Account {} not found"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L84](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L84): Define a constant instead of duplicating this literal ""account_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L85](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L85): Define a constant instead of duplicating this literal ""domain_id"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L127](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L127): Define a constant instead of duplicating this literal ""public_key"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L148](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L148): Define a constant instead of duplicating this literal ""asset_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L346](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L346): Variable 'permittee_account' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L403](https://github.com/hyperledger/iroha/blob/e848fb81b56efc0552919a6295976d23a71559b1/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L403): Variable 'peer' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-21 18:56:14,2018-01-21 18:56:14
https://api.github.com/repos/hyperledger/iroha/issues/888,https://api.github.com/repos/hyperledger/iroha/issues/comments/358755440,https://github.com/hyperledger/iroha/pull/888#issuecomment-358755440,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/888?src=pr&el=h1) Report
> Merging [#888](https://codecov.io/gh/hyperledger/iroha/pull/888?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/da64ede056232810a03ee9a8aaac6c5c06c7b697?src=pr&el=desc) will **increase** coverage by `0.06%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/888/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/888?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #888      +/-   ##
===========================================
+ Coverage    31.09%   31.16%   +0.06%     
===========================================
  Files          463      461       -2     
  Lines        13872    13716     -156     
  Branches      8912     8784     -128     
===========================================
- Hits          4314     4275      -39     
- Misses        1490     1506      +16     
+ Partials      8068     7935     -133
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/888?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `32.05% <0%> (-15.39%)` | :arrow_down: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `32.69% <0%> (-12.77%)` | :arrow_down: |
| [irohad/consensus/yac/cluster\_order.hpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlci5ocHA=) | `75% <0%> (-8.34%)` | :arrow_down: |
| [...module/irohad/consensus/yac/cluster\_order\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlcl90ZXN0LmNwcA==) | `10% <0%> (-7.65%)` | :arrow_down: |
| [irohad/ametsuchi/impl/redis\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `38.93% <0%> (-6.94%)` | :arrow_down: |
| [irohad/consensus/yac/messages.hpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvbWVzc2FnZXMuaHBw) | `76.92% <0%> (-4.9%)` | :arrow_down: |
| [libs/common/byteutils.hpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vYnl0ZXV0aWxzLmhwcA==) | `26.92% <0%> (-3.85%)` | :arrow_down: |
| [...le/irohad/consensus/yac/yac\_block\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2Jsb2NrX3N0b3JhZ2VfdGVzdC5jcHA=) | `11.62% <0%> (-3.76%)` | :arrow_down: |
| [...irohad/consensus/yac/yac\_proposal\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3Byb3Bvc2FsX3N0b3JhZ2VfdGVzdC5jcHA=) | `37.77% <0%> (-3.69%)` | :arrow_down: |
| [...onsensus/yac/storage/impl/yac\_proposal\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY19wcm9wb3NhbF9zdG9yYWdlLmNwcA==) | `64.7% <0%> (-2.95%)` | :arrow_down: |
| ... and [34 more](https://codecov.io/gh/hyperledger/iroha/pull/888/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/888?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/888?src=pr&el=footer). Last update [da64ede...b1834c1](https://codecov.io/gh/hyperledger/iroha/pull/888?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 19:28:08,2018-01-20 14:22:02
https://api.github.com/repos/hyperledger/iroha/issues/888,https://api.github.com/repos/hyperledger/iroha/issues/comments/358859801,https://github.com/hyperledger/iroha/pull/888#issuecomment-358859801,neewy,Can we update the docs we have related to ansible?,2018-01-19 03:53:39,2018-01-19 03:53:39
https://api.github.com/repos/hyperledger/iroha/issues/888,https://api.github.com/repos/hyperledger/iroha/issues/comments/359030849,https://github.com/hyperledger/iroha/pull/888#issuecomment-359030849,Warchant,"



Reviewed 35 of 35 files at r1.
Review status: all files reviewed at latest revision, 6 unresolved discussions, some commit checks broke.

---

*[Jenkinsfile, line 44 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3ENzyKv_bDtS0pDBQ2:-L3ENzyKv_bDtS0pDBQ3:b-2fjbbs) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L44)):*
> ```Groovy
>                     steps {
>                         script {
>                             def p_c = docker.image('postgres:9.5').run(""-e POSTGRES_USER=${env.POSTGRES_USER} -e POSTGRES_PASSWORD=${env.POSTGRES_PASSWORD} --name ${env.POSTGRES_NAME} --network=${env.IROHA_NETWORK}"")
> ```

is it possible to break string onto multiple lines? 

---

*[Jenkinsfile, line 57 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3ENJW8L8g749RRMj6y:-L3ENJW8L8g749RRMj6z:bhku50k) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L57)):*
> ```Groovy
>                             IROHA_POSTGRES_PASSWORD = readFile('pg-pass').trim()
>                             IROHA_REDIS_HOST = readFile('redis-host').trim()
>                             docker.image('hyperledger/iroha-docker-develop:v1').inside(""-e IROHA_POSTGRES_HOST=${IROHA_POSTGRES_HOST} -e IROHA_POSTGRES_PORT=5432 -e IROHA_POSTGRES_USER=${IROHA_POSTGRES_USER} -e IROHA_POSTGRES_PASSWORD=${IROHA_POSTGRES_PASSWORD} -e IROHA_REDIS_HOST=${IROHA_REDIS_HOST} -e IROHA_REDIS_PORT=6379 --network=${env.IROHA_NETWORK}"") {
> ```

is it possible to move `hyperledger/iroha-docker-develop:v1` into a separate Jenkins variable, then use var here?
It will be a single place, where we change version of that docker image.

---

*[Jenkinsfile, line 90 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EN-Rm-CYbitDpXNy7:-L3EN-Rm-CYbitDpXNy8:b-g1wcw0) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L90)):*
> ```Groovy
>                                         sonar-scanner \
>                                             -Dsonar.github.disableInlineComments \
>                                             -Dsonar.github.repository='bakhtin/iroha' \
> ```

hyperledger/iroha

---

*[deploy/ansible/ansible.cfg, line 13 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EOF0WtE6hetPNqwLD:-L3EOF0WtE6hetPNqwLE:bgz8ysb) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/ansible.cfg#L13)):*
> ```INI
> # Output display
> force_color		= 1
> nocows			= 1
> ```

this file contains both tabs and spaces. please, use subl (or similar tool) to convert tabs to spaces.

CTRL+SHIFT+P > convert tabs to spaces

---

*[deploy/ansible/roles/local/ansible-users/.travis.yml, line 44 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EP-5V3aSCS31JiHpg:-L3EP-5V3aSCS31JiHph:blqa20i) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/.travis.yml#L44)):*
> ```YAML
>   - ls -lg /home/ansibletestuser3/.profile  | awk '{exit $3!=""ansibletestgroup1""}'
>   - ls -lg /home/otherdirectory1/.profile   | awk '{exit $3!=""users""}'
>   - ls -lgd /home/ansibletestuser5/.profile | awk '{exit $3!=""ansibletestgroup""}'
> ```

this file looks weird. could you explain what is this?

---

*[deploy/ansible/roles/local/ansible-users/meta/.galaxy_install_info, line 1 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EPCZXr80tRF03HCS-:-L3EPCZXr80tRF03HCS0:b-stpuxf) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/meta/.galaxy_install_info#L1)):*
> ```
> {install_date: 'Sat Jan  6 04:50:20 2018', version: v1.2.4}
> ```

It looks like this file is autogenerated. If so, add it to gitignore

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/888)*
<!-- Sent from Reviewable.io -->
",2018-01-19 17:14:01,2018-01-19 17:14:01
https://api.github.com/repos/hyperledger/iroha/issues/888,https://api.github.com/repos/hyperledger/iroha/issues/comments/359046935,https://github.com/hyperledger/iroha/pull/888#issuecomment-359046935,l4l,"



Reviewed 28 of 35 files at r1.
Review status: all files reviewed at latest revision, 17 unresolved discussions, some commit checks broke.

---

*[Jenkinsfile, line 12 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EXUlJDYsTaLUGv6ps:-L3EXUlJDYsTaLUGv6pt:b-atnqsn) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L12)):*
> ```Groovy
> properties([parameters([
>     choice(choices: 'Debug\nRelease', description: '', name: 'BUILD_TYPE'),
>     booleanParam(defaultValue: true, description: '', name: 'x86'),
> ```

Maybe it's better Linux x86?

---

*[Jenkinsfile, line 15 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EXMB9evboevCjsOUX:-L3EXMB9evboevCjsOUY:b-h2xc80) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L15)):*
> ```Groovy
>     booleanParam(defaultValue: false, description: '', name: 'ARM'),
>     booleanParam(defaultValue: false, description: '', name: 'MacOS'),
>     string(defaultValue: '8', description: 'How much parallelism should we exploit. ""4"" is optimal for machines with modest amount of memory and at least 4 cores', name: 'PARALLELISM')]),
> ```

Why description doesn't match the default value? D:

---

*[Jenkinsfile, line 68 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EYS9v_vRWH_FeCO50:-L3EYS9v_vRWH_FeCO51:bkktozx) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L68)):*
> ```Groovy
>                                 sh """"""
>                                     cmake \
>                                       -DCOVERAGE=ON \
> ```

Maybe explicitly enable -DTEST=ON as well? We probably may change the default value soon

---

*[Jenkinsfile, line 99 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EYiikJGL2IYa0TUUr:-L3EYiikJGL2IYa0TUUs:b-554xne) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L99)):*
> ```Groovy
>                                 }
> 
>                                 stash(allowEmpty: true, includes: 'build/compile_commands.json', name: 'Compile commands')
> ```

Why is it allowed empty?

---

*[Jenkinsfile, line 225 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EZG7ZVbN3oBKPvMpp:-L3EZG7_JzS4ZJk7dsve:b32vhv) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L225)):*
> ```Groovy
>         }
>     }
> }
> ```

:(

---

*[deploy/ansible/roles/iroha-node/defaults/main.yml, line 10 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EaRrJjT0Z07pJZ6kp:-L3EaRrJjT0Z07pJZ6kq:b6sqmh1) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/iroha-node/defaults/main.yml#L10)):*
> ```YAML
>           65643330363765306433663238663263383236363932376430623636346365373330666635343961
>           3334383334663831650a336132366365313739653138353833333536326661356634653262623362
>           34396364633730393530643666643466313338333861333030366562393462313464
> ```

Looks a bit magic for me

---

*[deploy/ansible/roles/iroha-node/defaults/main.yml, line 13 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EaVbVxYsMxm9GF1Zs:-L3EaVbVxYsMxm9GF1Zt:b-3qfx1) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/iroha-node/defaults/main.yml#L13)):*
> ```YAML
>   redisName: iroha_redis
>   peers:
>     - 209.250.248.121:10001
> ```

May we use here something more readable, e.g DNS names

---

*[deploy/ansible/roles/iroha-node/tasks/ubuntu.yml, line 81 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EaLp2CTe3vEE2moyr:-L3EaLp2CTe3vEE2moys:bv2pl63) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/iroha-node/tasks/ubuntu.yml#L81)):*
> ```YAML
>       env:
>         POSTGRES_HOST: ""{{ postgresName }}""
>         POSTGRES_PORT: 5432        
> ```

redundant spaces here

---

*[deploy/ansible/roles/local/ansible-users/README.md, line 9 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3E_Iq0MlJNqA1GNSJT:-L3E_Iq0MlJNqA1GNSJU:b-qp4s6v) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/README.md#L9)):*
> ```Markdown
> ## Role configuration
> 
> * users_create_per_user_group (default: true) - when creating users, also
> ```

Seems that markup is unintended here and below

---

*[deploy/ansible/roles/local/ansible-users/defaults/main.yml, line 11 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EbOKYgCsW2pz8QqSO:-L3EbM_qtjVNVD7B_gIB:b-zgbwex) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/defaults/main.yml#L11)):*
> ```YAML
> # Create home dirs for new users? Set this to false if you manage home
> # directories in some other way.
> users_create_homedirs: true
> ```

Ehm, what's the purpose?

---

*[deploy/ansible/roles/local/ansible-users/tests/test.yml, line 19 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3Ebptdx4LRUnA13UQQ:-L3EbptelqMKdM8cDUEU:b-ghp047) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/tests/test.yml#L19)):*
> noone@throwaway.example.com

Should this key be here?

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/888)*
<!-- Sent from Reviewable.io -->
",2018-01-19 18:15:29,2018-01-19 18:15:29
https://api.github.com/repos/hyperledger/iroha/issues/888,https://api.github.com/repos/hyperledger/iroha/issues/comments/359054157,https://github.com/hyperledger/iroha/pull/888#issuecomment-359054157,Warchant,"



Review status: all files reviewed at latest revision, 17 unresolved discussions, some commit checks broke.

---

*[Jenkinsfile, line 12 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EXUlJDYsTaLUGv6ps:-L3EiYs24sAmG_OfX-gJ:bb6mt9b) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L12)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

Maybe it's better Linux x86?
</blockquote></details>

:+1:

---

*[Jenkinsfile, line 68 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EYS9v_vRWH_FeCO50:-L3EiensloeapEQddt-Y:b-26ddaw) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L68)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

Maybe explicitly enable -DTEST=ON as well? We probably may change the default value soon
</blockquote></details>

-DTESTING=ON

---

*[Jenkinsfile, line 99 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EYiikJGL2IYa0TUUr:-L3EilEicCZf-8hpd4hn:b-a7mu60) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L99)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

Why is it allowed empty?
</blockquote></details>

This file is always generated when you call cmake -DCOVERAGE=ON and if cmake returned 0

---

*[Jenkinsfile, line 225 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EZG7ZVbN3oBKPvMpp:-L3EisH19DJsWSUe5fJI:b-hcr6y1) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L225)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

:(
</blockquote></details>

@l4l means, that all files should end with a newline

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/888)*
<!-- Sent from Reviewable.io -->
",2018-01-19 18:44:32,2018-01-19 18:44:32
https://api.github.com/repos/hyperledger/iroha/issues/888,https://api.github.com/repos/hyperledger/iroha/issues/comments/359157276,https://github.com/hyperledger/iroha/pull/888#issuecomment-359157276,bakhtin,"I'll update it soon

---

Review status: all files reviewed at latest revision, 17 unresolved discussions, some commit checks broke.

---

*[Jenkinsfile, line 15 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EXMB9evboevCjsOUX:-L3HjYhUSd15I4pgEo50:b-awlo1y) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L15)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

Why description doesn't match the default value? D:
</blockquote></details>

Build server at the moment supports up to two concurrent builds. We exploit as much resources as we can while testing. Agree, it should be 4 for production use

---

*[Jenkinsfile, line 99 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EYiikJGL2IYa0TUUr:-L3Hkbq54pz1VS9DNjR7:bw07ba) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/Jenkinsfile#L99)):*
<details><summary><i>Previously, Warchant (Bogdan) wrote…</i></summary><blockquote>

This file is always generated when you call cmake -DCOVERAGE=ON and if cmake returned 0
</blockquote></details>

Remove `stash` as required files are available in the workspace anyways

---

*[deploy/ansible/roles/iroha-node/defaults/main.yml, line 10 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EaRrJjT0Z07pJZ6kp:-L3Hl2MtlyzqaPD6vS_L:b9y3nd0) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/iroha-node/defaults/main.yml#L10)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

Looks a bit magic for me
</blockquote></details>

Its a standard way of encrypting variables in Ansible using Vault and a passphrase

---

*[deploy/ansible/roles/iroha-node/defaults/main.yml, line 13 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EaVbVxYsMxm9GF1Zs:-L3HlGXFORPxJFn-qBGP:bveaxom) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/iroha-node/defaults/main.yml#L13)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

May we use here something more readable, e.g DNS names
</blockquote></details>

Nope, these are test nodes and we don't have DNS names for them

---

*[deploy/ansible/roles/iroha-node/tasks/ubuntu.yml, line 81 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EaLp2CTe3vEE2moyr:-L3Hlhodne_etZytDCmU:b82kqo2) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/iroha-node/tasks/ubuntu.yml#L81)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

redundant spaces here
</blockquote></details>

Nope. http://jinja.pocoo.org/docs/2.10/

---

*[deploy/ansible/roles/local/ansible-users/.travis.yml, line 44 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EP-5V3aSCS31JiHpg:-L3Hljm0a8F0SjaiHwto:b1fagvt) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/.travis.yml#L44)):*
<details><summary><i>Previously, Warchant (Bogdan) wrote…</i></summary><blockquote>

this file looks weird. could you explain what is this?
</blockquote></details>

These are `ansible-user` module tests. They are written by the author of this module. Not me.

---

*[deploy/ansible/roles/local/ansible-users/README.md, line 9 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3E_Iq0MlJNqA1GNSJT:-L3Hm1T_YpJuaBJzw93B:b-2pfuf4) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/README.md#L9)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

Seems that markup is unintended here and below
</blockquote></details>

These are files maintained by the author of the module. Indentation would revert to this state each time we update the module

---

*[deploy/ansible/roles/local/ansible-users/defaults/main.yml, line 11 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EbOKYgCsW2pz8QqSO:-L3HmUNvZQl0OX3e--1t:b8jx5q5) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/defaults/main.yml#L11)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

Ehm, what's the purpose?
</blockquote></details>

Written by the author of `ansible-users` module

---

*[deploy/ansible/roles/local/ansible-users/meta/.galaxy_install_info, line 1 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EPCZXr80tRF03HCS-:-L3HmZUGabSb1RliYWbL:b-9clcwa) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/meta/.galaxy_install_info#L1)):*
<details><summary><i>Previously, Warchant (Bogdan) wrote…</i></summary><blockquote>

It looks like this file is autogenerated. If so, add it to gitignore
</blockquote></details>

These are `ansible-users` module files. 

---

*[deploy/ansible/roles/local/ansible-users/tests/test.yml, line 19 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3Ebptdx4LRUnA13UQQ:-L3HmuGJiKPM2QFbzOf6:b-657o1n) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/tests/test.yml#L19)):*
<details><summary><i>Previously, l4l (Kitsu) wrote…</i></summary><blockquote>

> noone@throwaway.example.com

Should this key be here?
</blockquote></details>

This is a test for the module. They are not running while running playbook

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/888#-:-L3HiqggykOVm4eCOAy-:bx7kkc6)*
<!-- Sent from Reviewable.io -->
",2018-01-20 09:01:42,2018-01-20 09:01:42
https://api.github.com/repos/hyperledger/iroha/issues/888,https://api.github.com/repos/hyperledger/iroha/issues/comments/359163024,https://github.com/hyperledger/iroha/pull/888#issuecomment-359163024,Warchant,"



Reviewed 8 of 35 files at r1, 1 of 1 files at r2.
Review status: all files reviewed at latest revision, 14 unresolved discussions, some commit checks broke.

---

*[deploy/ansible/roles/local/ansible-users/.travis.yml, line 44 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EP-5V3aSCS31JiHpg:-L3I8iHnbAW3bUGPjCSg:b-sw10ny) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/.travis.yml#L44)):*
<details><summary><i>Previously, bakhtin (Artyom Bakhtin) wrote…</i></summary><blockquote>

These are `ansible-user` module tests. They are written by the author of this module. Not me.
</blockquote></details>

Can it be gitignored?

---

*[deploy/ansible/roles/local/ansible-users/README.md, line 9 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3E_Iq0MlJNqA1GNSJT:-L3I9cChYnqLUK8pkonW:b-sw10ny) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/README.md#L9)):*
<details><summary><i>Previously, bakhtin (Artyom Bakhtin) wrote…</i></summary><blockquote>

These are files maintained by the author of the module. Indentation would revert to this state each time we update the module
</blockquote></details>

Can it be gitignored?

---

*[deploy/ansible/roles/local/ansible-users/defaults/main.yml, line 11 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EbOKYgCsW2pz8QqSO:-L3I9eM-d4Sb3nxUVLWo:b-sw10ny) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/defaults/main.yml#L11)):*
<details><summary><i>Previously, bakhtin (Artyom Bakhtin) wrote…</i></summary><blockquote>

Written by the author of `ansible-users` module
</blockquote></details>

Can it be gitignored?

---

*[deploy/ansible/roles/local/ansible-users/meta/.galaxy_install_info, line 1 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EPCZXr80tRF03HCS-:-L3I9gpo7EWQh-al9EtD:b-sw10ny) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/meta/.galaxy_install_info#L1)):*
<details><summary><i>Previously, bakhtin (Artyom Bakhtin) wrote…</i></summary><blockquote>

These are `ansible-users` module files. 
</blockquote></details>

Can it be gitignored?

---

*[deploy/ansible/roles/local/ansible-users/tests/test.yml, line 19 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3Ebptdx4LRUnA13UQQ:-L3I9OCOcEQdyWVU6hA6:b-sw10ny) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/local/ansible-users/tests/test.yml#L19)):*
<details><summary><i>Previously, bakhtin (Artyom Bakhtin) wrote…</i></summary><blockquote>

This is a test for the module. They are not running while running playbook
</blockquote></details>

Can it be gitignored?

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/888)*
<!-- Sent from Reviewable.io -->
",2018-01-20 10:57:08,2018-01-20 10:57:08
https://api.github.com/repos/hyperledger/iroha/issues/888,https://api.github.com/repos/hyperledger/iroha/issues/comments/359180644,https://github.com/hyperledger/iroha/pull/888#issuecomment-359180644,l4l,"



Reviewed 7 of 35 files at r1, 3 of 3 files at r4.
Review status: all files reviewed at latest revision, 12 unresolved discussions, some commit checks broke.

---

*[Jenkinsfile, line 16 at r4](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3JEgfI6X2fLlv-1FAx:-L3JEgfI6X2fLlv-1FAy:b-m5yzvh) ([raw file](https://github.com/hyperledger/iroha/blob/b1834c17e3e49cbcba29a6826c4a7f55acf1c1b5/Jenkinsfile#L16)):*
> ```Groovy
>     choice(choices: 'Debug\nRelease', description: '', name: 'BUILD_TYPE'),
>     booleanParam(defaultValue: true, description: '', name: 'Linux'),
>     booleanParam(defaultValue: false, description: '', name: 'ARM'),
> ```

Meh, at the previous message I meant this line as well. So there was 2 arch + OS before and now it's 1 arch + 2 OS. Still inconsistent

---

*[Jenkinsfile, line 26 at r4](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3JDsvBLyfTTXsRHtRF:-L3JDsvBLyfTTXsRHtRG:bqyfh7m) ([raw file](https://github.com/hyperledger/iroha/blob/b1834c17e3e49cbcba29a6826c4a7f55acf1c1b5/Jenkinsfile#L26)):*
> ```Groovy
>         CODECOV_TOKEN = credentials('CODECOV_TOKEN')
>         DOCKERHUB = credentials('DOCKERHUB')
>         DOCKER_IMAGE = 'hyperledger/iroha-docker-develop:v1'        
> ```

Trailing spaces :(

---

*[Jenkinsfile, line 28 at r4](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3JE-aocQ_tO7YW0IIu:-L3JE-aocQ_tO7YW0IIv:bkqb8t8) ([raw file](https://github.com/hyperledger/iroha/blob/b1834c17e3e49cbcba29a6826c4a7f55acf1c1b5/Jenkinsfile#L28)):*
> ```Groovy
>         DOCKER_IMAGE = 'hyperledger/iroha-docker-develop:v1'        
> 
>         IROHA_NETWORK = ""iroha-${GIT_COMMIT}""
> ```

Is it really need to create a separate net at the each commit?

---

*[deploy/ansible/roles/iroha-node/tasks/ubuntu.yml, line 81 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/888#-L3EaLp2CTe3vEE2moyr:-L3JFNwUW9lqZ3IymUEq:bpn9ack) ([raw file](https://github.com/hyperledger/iroha/blob/aaa9c3915780ddc9b2cf566d5817846801fbac4d/deploy/ansible/roles/iroha-node/tasks/ubuntu.yml#L81)):*
<details><summary><i>Previously, bakhtin (Artyom Bakhtin) wrote…</i></summary><blockquote>

Nope. http://jinja.pocoo.org/docs/2.10/
</blockquote></details>

Ok, that's strange

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/888)*
<!-- Sent from Reviewable.io -->
",2018-01-20 15:50:06,2018-01-20 15:50:06
https://api.github.com/repos/hyperledger/iroha/issues/887,https://api.github.com/repos/hyperledger/iroha/issues/comments/358719843,https://github.com/hyperledger/iroha/pull/887#issuecomment-358719843,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/887?src=pr&el=h1) Report
> Merging [#887](https://codecov.io/gh/hyperledger/iroha/pull/887?src=pr&el=desc) into [ITF-remove-gtest-dependency](https://codecov.io/gh/hyperledger/iroha/commit/8859e793f1379d8d07e4cc221c7deb8e0291b469?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `87.5%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/887/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/887?src=pr&el=tree)

```diff
@@                       Coverage Diff                       @@
##           ITF-remove-gtest-dependency     #887      +/-   ##
===============================================================
+ Coverage                        31.18%   31.19%   +<.01%     
===============================================================
  Files                              465      465              
  Lines                            13897    13899       +2     
  Branches                          8863     8863              
===============================================================
+ Hits                              4334     4336       +2     
  Misses                            1589     1589              
  Partials                          7974     7974
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/887?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/887/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `6.45% <ø> (ø)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/887/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `38.33% <100%> (+1.04%)` | :arrow_up: |
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/887/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `68.57% <80%> (+0.92%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/887?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/887?src=pr&el=footer). Last update [8859e79...1942628](https://codecov.io/gh/hyperledger/iroha/pull/887?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 17:26:20,2018-01-19 15:36:36
https://api.github.com/repos/hyperledger/iroha/issues/887,https://api.github.com/repos/hyperledger/iroha/issues/comments/359000001,https://github.com/hyperledger/iroha/pull/887#issuecomment-359000001,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [integration_test_framework.cpp#L80](https://github.com/hyperledger/iroha/blob/1942628437e9cee8b869955a74851ed6dc1fd3ac/test/framework/integration_framework/integration_test_framework.cpp#L80): The function 'addUser' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L117](https://github.com/hyperledger/iroha/blob/1942628437e9cee8b869955a74851ed6dc1fd3ac/test/framework/integration_framework/integration_test_framework.cpp#L117): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L122](https://github.com/hyperledger/iroha/blob/1942628437e9cee8b869955a74851ed6dc1fd3ac/test/framework/integration_framework/integration_test_framework.cpp#L122): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-19 15:36:19,2018-01-19 15:36:19
https://api.github.com/repos/hyperledger/iroha/issues/886,https://api.github.com/repos/hyperledger/iroha/issues/comments/358939541,https://github.com/hyperledger/iroha/issues/886#issuecomment-358939541,l4l,"I have minor fix: it's better leave libiroha here, so don't remove/archive this repo",2018-01-19 11:25:13,2018-01-19 11:25:13
https://api.github.com/repos/hyperledger/iroha/issues/886,https://api.github.com/repos/hyperledger/iroha/issues/comments/358940542,https://github.com/hyperledger/iroha/issues/886#issuecomment-358940542,muratovv,"I think this improvement not needed for now. We will work in this direction after creating a stable version. Pls, check the history of Ametsuchi repository.
",2018-01-19 11:30:00,2018-01-19 11:30:00
https://api.github.com/repos/hyperledger/iroha/issues/886,https://api.github.com/repos/hyperledger/iroha/issues/comments/358943151,https://github.com/hyperledger/iroha/issues/886#issuecomment-358943151,Warchant,"@l4l not only irohad and iroha-cli depend on libiroha. Bindings also depend on libiroha. 
If you leave libiroha inside repository with irohad/iroha-cli, then other projects will depend on the redundant code (whole repository).",2018-01-19 11:42:18,2018-01-19 11:42:59
https://api.github.com/repos/hyperledger/iroha/issues/886,https://api.github.com/repos/hyperledger/iroha/issues/comments/358943799,https://github.com/hyperledger/iroha/issues/886#issuecomment-358943799,Warchant,"@muratovv right now we need to do at least bindings-iroha separation, because each should have separate version + CI + scripts to push to MVN/PIP",2018-01-19 11:45:37,2018-01-19 11:45:57
https://api.github.com/repos/hyperledger/iroha/issues/886,https://api.github.com/repos/hyperledger/iroha/issues/comments/358961798,https://github.com/hyperledger/iroha/issues/886#issuecomment-358961798,l4l,"> not only irohad and iroha-cli depend on libiroha. Bindings also depend on libiroha.
If you leave libiroha inside repository with irohad/iroha-cli, then other projects will depend on the redundant code (whole repository).

Yeah, I meant actually leave only libiroha here and remove the rest",2018-01-19 13:08:53,2018-01-19 13:08:53
https://api.github.com/repos/hyperledger/iroha/issues/886,https://api.github.com/repos/hyperledger/iroha/issues/comments/359159168,https://github.com/hyperledger/iroha/issues/886#issuecomment-359159168,muratovv,@Warchant  I guess better task that related to this issue is make our dependencies as submodules or subtrees. The task will be useful in terms of build time and management of dependencies may be more native and clear.,2018-01-20 09:40:12,2018-01-20 09:40:12
https://api.github.com/repos/hyperledger/iroha/issues/886,https://api.github.com/repos/hyperledger/iroha/issues/comments/374627783,https://github.com/hyperledger/iroha/issues/886#issuecomment-374627783,neewy,"We have decided to extract shared_model classes to a separate repository and eventually to store client libraries that depend on it and are stored in a separate repository for simplification of CI pipeline. Also, we have decided to rename shared_model to libiroha for better consistency with UNIX naming style",2018-03-20 14:54:52,2018-03-20 14:54:52
https://api.github.com/repos/hyperledger/iroha/issues/886,https://api.github.com/repos/hyperledger/iroha/issues/comments/374634410,https://github.com/hyperledger/iroha/issues/886#issuecomment-374634410,neewy,"In the future, I hope that iroha-cli is going to be rewritten and not dependent on iroha repo",2018-03-20 15:12:01,2018-03-20 15:12:01
https://api.github.com/repos/hyperledger/iroha/issues/886,https://api.github.com/repos/hyperledger/iroha/issues/comments/395948393,https://github.com/hyperledger/iroha/issues/886#issuecomment-395948393,l4l,"Issue seems pretty stale and it's pretty well-known, but the fixes are not coming soon probably",2018-06-09 07:39:54,2018-06-09 07:39:54
https://api.github.com/repos/hyperledger/iroha/issues/885,https://api.github.com/repos/hyperledger/iroha/issues/comments/358669564,https://github.com/hyperledger/iroha/pull/885#issuecomment-358669564,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [integration_test_framework.cpp#L80](https://github.com/hyperledger/iroha/blob/a5ed500084d4b8ce48a9347696d0d8b06df09c37/test/framework/integration_framework/integration_test_framework.cpp#L80): The function 'addUser' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L111](https://github.com/hyperledger/iroha/blob/a5ed500084d4b8ce48a9347696d0d8b06df09c37/test/framework/integration_framework/integration_test_framework.cpp#L111): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L116](https://github.com/hyperledger/iroha/blob/a5ed500084d4b8ce48a9347696d0d8b06df09c37/test/framework/integration_framework/integration_test_framework.cpp#L116): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L121](https://github.com/hyperledger/iroha/blob/a5ed500084d4b8ce48a9347696d0d8b06df09c37/test/framework/integration_framework/integration_test_framework.cpp#L121): The function 'done' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-18 14:52:06,2018-01-18 14:52:06
https://api.github.com/repos/hyperledger/iroha/issues/885,https://api.github.com/repos/hyperledger/iroha/issues/comments/358669637,https://github.com/hyperledger/iroha/pull/885#issuecomment-358669637,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/885?src=pr&el=h1) Report
> Merging [#885](https://codecov.io/gh/hyperledger/iroha/pull/885?src=pr&el=desc) into [ITF-remove-gtest-dependency](https://codecov.io/gh/hyperledger/iroha/commit/9ff5411dae7f3a258fed457a2380af3a682255b3?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/885/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/885?src=pr&el=tree)

```diff
@@                     Coverage Diff                      @@
##           ITF-remove-gtest-dependency     #885   +/-   ##
============================================================
  Coverage                        31.14%   31.14%           
============================================================
  Files                              462      462           
  Lines                            13724    13724           
  Branches                          8791     8791           
============================================================
  Hits                              4275     4275           
  Misses                            1508     1508           
  Partials                          7941     7941
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/885?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/885?src=pr&el=footer). Last update [9ff5411...a5ed500](https://codecov.io/gh/hyperledger/iroha/pull/885?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 14:52:19,2018-01-18 14:52:19
https://api.github.com/repos/hyperledger/iroha/issues/884,https://api.github.com/repos/hyperledger/iroha/issues/comments/358679086,https://github.com/hyperledger/iroha/pull/884#issuecomment-358679086,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/884?src=pr&el=h1) Report
> Merging [#884](https://codecov.io/gh/hyperledger/iroha/pull/884?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3f62cb0976a21969213ab60a8c0cf6699712a837?src=pr&el=desc) will **decrease** coverage by `0.12%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/884/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/884?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #884      +/-   ##
===========================================
- Coverage    31.21%   31.09%   -0.13%     
===========================================
  Files          466      463       -3     
  Lines        14062    13872     -190     
  Branches      9139     8912     -227     
===========================================
- Hits          4389     4313      -76     
- Misses        1338     1490     +152     
+ Partials      8335     8069     -266
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/884?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <0%> (-66.67%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `41.97% <0%> (-58.03%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `27.32% <0%> (-14.03%)` | :arrow_down: |
| [irohad/consensus/yac/impl/yac.cpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWMuY3Bw) | `32.55% <0%> (-9.81%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `38.56% <0%> (-8.22%)` | :arrow_down: |
| [libs/amount/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmhwcA==) | `30.76% <0%> (-7.7%)` | :arrow_down: |
| [...ad/consensus/yac/storage/impl/yac\_vote\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY192b3RlX3N0b3JhZ2UuY3Bw) | `63.33% <0%> (-6.67%)` | :arrow_down: |
| [irohad/network/grpc\_call.hpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvZ3JwY19jYWxsLmhwcA==) | `66.66% <0%> (-4.77%)` | :arrow_down: |
| [...otobuf/transaction\_responses/proto\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3Byb3RvX3R4X3Jlc3BvbnNlLmhwcA==) | `71.42% <0%> (-3.58%)` | :arrow_down: |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `12.16% <0%> (-2.84%)` | :arrow_down: |
| ... and [28 more](https://codecov.io/gh/hyperledger/iroha/pull/884/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/884?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/884?src=pr&el=footer). Last update [3f62cb0...004099d](https://codecov.io/gh/hyperledger/iroha/pull/884?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 15:21:20,2018-01-25 08:15:04
https://api.github.com/repos/hyperledger/iroha/issues/884,https://api.github.com/repos/hyperledger/iroha/issues/comments/359000428,https://github.com/hyperledger/iroha/pull/884#issuecomment-359000428,Warchant,"



Reviewed 38 of 39 files at r1, 1 of 1 files at r2.
Review status: all files reviewed at latest revision, 11 unresolved discussions, some commit checks broke.

---

*[docs/source/.gitignore, line 2 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E1Je-kA8rtdBPEPra:-L3E1Je-kA8rtdBPEPrb:b-202xa1) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/.gitignore#L2)):*
> ```
> _build
> .vscode
> ```

What about sphinx generated files?

---

*[docs/source/conf.py, line 170 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E1RzYlOfQLbkZv1gZ:-L3E1RzYlOfQLbkZv1g_:b-1jiay4) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/conf.py#L170)):*
> ```Python
> #  dir menu entry, description, category)
> texinfo_documents = [
>     (master_doc, 'Iroha', u'Iroha Documentation',
> ```

Move ""Iroha Documentation"", ""Iroha"", 'Nikolay Yushkevich at Soramitsu Co LLC' to separate variables and reuse variables.

---

*[docs/source/deployment.rst, line 29 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E28sIyXgly9NclaVD:-L3E28sIyXgly9NclaVE:ban0zv5) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/deployment.rst#L29)):*
> ```reStructuredText
> """"""""""""""""""""""""""""""""""""""""""""""""""
> 
> There is a list of assumptions which you should review before proceeding:
> ```

Maybe hot *review*, but 

""There is a list of assumptions, which must hold before proceeding"", or something like that?

---

*[docs/source/deployment.rst, line 31 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E2HXUMPjN6v0BBrvJ:-L3E2HXUMPjN6v0BBrvK:bo0bfuy) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/deployment.rst#L31)):*
> ```reStructuredText
> There is a list of assumptions which you should review before proceeding:
> 
>  * Postgres server is up and running, the port is 5432
> ```

Port does not matter, we specify it in config

---

*[docs/source/deployment.rst, line 32 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E2KqGF8SrkFzWZ9nN:-L3E2KqGF8SrkFzWZ9nO:buo9nmt) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/deployment.rst#L32)):*
> ```reStructuredText
> 
>  * Postgres server is up and running, the port is 5432
>  * Redis server is up and running, the port is 6379
> ```

Same here

---

*[docs/source/deployment.rst, line 33 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E2MOcI4FCfKrgfKAx:-L3E2MOcI4FCfKrgfKAy:b-pxegae) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/deployment.rst#L33)):*
> ```reStructuredText
>  * Postgres server is up and running, the port is 5432
>  * Redis server is up and running, the port is 6379
>  * Iroha daemon binary is built and accessible in your system
> ```

better write ""`irohad`  iroha daemon...""

---

*[docs/source/deployment.rst, line 34 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E2Sba_PUzRUXGF6w5:-L3E2Sba_PUzRUXGF6w6:b-8y80cu) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/deployment.rst#L34)):*
> ```reStructuredText
>  * Redis server is up and running, the port is 6379
>  * Iroha daemon binary is built and accessible in your system
>  * The genesis block and configuration files were created
> ```

*are created* ?

---

*[docs/source/deployment.rst, line 37 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E2Wl5crNsvoVqNfA9:-L3E2Wl5crNsvoVqNfAA:b-p43ija) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/deployment.rst#L37)):*
> ```reStructuredText
>  * Config file uses valid postgres and redis connection settings
>  * A keypair for the peer is generated
>  * This is the first time you run the Iroha on this peer and you want to create new chain
> ```

What if user wants to start not for the first time? 
Add TODO to add link to guide later.

---

*[docs/source/deployment.rst, line 124 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E2o2NnWBBL0YpuLWY:-L3E2o2NnWBBL0YpuLWZ:b5ylx7x) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/deployment.rst#L124)):*
> ```reStructuredText
> """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
> 
> There is a list of assumptions which you should review before proceeding:
> ```

again *review*

---

*[docs/source/deployment.rst, line 125 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E2rHL5bBWtZ_oasSa:-L3E2rHL5bBWtZ_oasSb:bfzx008) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/deployment.rst#L125)):*
> ```reStructuredText
> 
> There is a list of assumptions which you should review before proceeding:
>  * Postgres and redis servers are running on the same docker network
> ```

postgres and redis servers are accessible from iroha peer.
?

---

*[docs/source/install.rst, line 14 at r2](https://reviewable.io:443/reviews/hyperledger/iroha/884#-L3E3Db-R-fxys-gpJEj:-L3E3Db-R-fxys-gpJEk:b-zfw57l) ([raw file](https://github.com/hyperledger/iroha/blob/19bf3c339123bef66c391d3a26d7422737e5d21e/docs/source/install.rst#L14)):*
> ```reStructuredText
> ^^^^^^^^^^^^^^^^^^^^^^^
> 
> In order to contribute to the codebase of Hyperledger Iroha, one should meet following requirements:
> ```

Maybe add link to CONTRIBUTING.md?

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/884)*
<!-- Sent from Reviewable.io -->
",2018-01-19 15:37:49,2018-01-19 15:37:49
https://api.github.com/repos/hyperledger/iroha/issues/884,https://api.github.com/repos/hyperledger/iroha/issues/comments/359260303,https://github.com/hyperledger/iroha/pull/884#issuecomment-359260303,neewy,"> What about sphinx generated files?

There aren't any such files

> What if user wants to start not for the first time?

That is said in the attention section, which says ""If you have stopped the daemon and want to use existing chain — you should not pass the genesis block parameter."" Hopefully, we will change the flags and this won't be necessary to address as ""Attention"" note 

> Maybe add link to CONTRIBUTING.md?

no. this section will explain what kind of development environment is needed in future

> again review

It should be something like review before reading further, in order to understand the context",2018-01-21 16:22:46,2018-01-21 16:22:54
https://api.github.com/repos/hyperledger/iroha/issues/884,https://api.github.com/repos/hyperledger/iroha/issues/comments/359802366,https://github.com/hyperledger/iroha/pull/884#issuecomment-359802366,Warchant,"<img class=""emoji"" title="":lgtm:"" alt="":lgtm:"" align=""absmiddle"" src=""https://reviewable.io/lgtm.png"" height=""20"" width=""61""/>. Just add line terminators, fix @lebdron's issues and it can be merged.

---

Reviewed 6 of 6 files at r4.
Review status: all files reviewed at latest revision, 23 unresolved discussions.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/884#-:-L3YLoNm-fDiPZWGKgCy:b-9lesc6)*
<!-- Sent from Reviewable.io -->
",2018-01-23 14:12:33,2018-01-23 14:12:33
https://api.github.com/repos/hyperledger/iroha/issues/883,https://api.github.com/repos/hyperledger/iroha/issues/comments/358655609,https://github.com/hyperledger/iroha/pull/883#issuecomment-358655609,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/883?src=pr&el=h1) Report
> Merging [#883](https://codecov.io/gh/hyperledger/iroha/pull/883?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/da64ede056232810a03ee9a8aaac6c5c06c7b697?src=pr&el=desc) will **increase** coverage by `0.08%`.
> The diff coverage is `66.66%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/883/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/883?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #883      +/-   ##
===========================================
+ Coverage    31.09%   31.17%   +0.08%     
===========================================
  Files          463      461       -2     
  Lines        13872    13724     -148     
  Branches      8912     8787     -125     
===========================================
- Hits          4314     4279      -35     
- Misses        1490     1507      +17     
+ Partials      8068     7938     -130
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/883?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/server\_runner.cpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5jcHA=) | `52.38% <100%> (ø)` | :arrow_up: |
| [irohad/torii/torii\_service\_handler.hpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfaGFuZGxlci5ocHA=) | `50% <50%> (-7.15%)` | :arrow_down: |
| [irohad/torii/torii\_service\_handler.cpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfaGFuZGxlci5jcHA=) | `57.77% <56.25%> (-4.13%)` | :arrow_down: |
| [irohad/network/grpc\_call.hpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvZ3JwY19jYWxsLmhwcA==) | `71.42% <83.33%> (+4.76%)` | :arrow_up: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `32.05% <0%> (-15.39%)` | :arrow_down: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `32.69% <0%> (-12.77%)` | :arrow_down: |
| [irohad/consensus/yac/cluster\_order.hpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlci5ocHA=) | `75% <0%> (-8.34%)` | :arrow_down: |
| [...module/irohad/consensus/yac/cluster\_order\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlcl90ZXN0LmNwcA==) | `10% <0%> (-7.65%)` | :arrow_down: |
| [irohad/ametsuchi/impl/redis\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `38.93% <0%> (-6.94%)` | :arrow_down: |
| [irohad/consensus/yac/messages.hpp](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvbWVzc2FnZXMuaHBw) | `76.92% <0%> (-4.9%)` | :arrow_down: |
| ... and [38 more](https://codecov.io/gh/hyperledger/iroha/pull/883/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/883?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/883?src=pr&el=footer). Last update [da64ede...207fee2](https://codecov.io/gh/hyperledger/iroha/pull/883?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 14:04:52,2018-01-18 15:01:35
https://api.github.com/repos/hyperledger/iroha/issues/883,https://api.github.com/repos/hyperledger/iroha/issues/comments/358658442,https://github.com/hyperledger/iroha/pull/883#issuecomment-358658442,Warchant,"Hard to review actual changes, because of applied clang-format. Could you create 2 commits:
1. apply clang-format
2. do the fix

Please. ",2018-01-18 14:13:34,2018-01-18 14:13:34
https://api.github.com/repos/hyperledger/iroha/issues/883,https://api.github.com/repos/hyperledger/iroha/issues/comments/358672409,https://github.com/hyperledger/iroha/pull/883#issuecomment-358672409,sorabot,"SonarQube analysis reported 31 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 5 minor
* ![INFO][INFO] 25 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [grpc_call.hpp#L65](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/network/grpc_call.hpp#L65): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [grpc_call.hpp#L4](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/network/grpc_call.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [torii_service_handler.cpp#L4](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/torii/torii_service_handler.cpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [torii_service_handler.cpp#L106](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/torii/torii_service_handler.cpp#L106): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [torii_service_handler.hpp#L4](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/torii/torii_service_handler.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [torii_service_handler.hpp#L129](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/torii/torii_service_handler.hpp#L129): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [grpc_call.hpp#L1](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/network/grpc_call.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [grpc_call.hpp#L33](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/network/grpc_call.hpp#L33): Undocumented API: ~ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [grpc_call.hpp#L35](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/network/grpc_call.hpp#L35): Undocumented API: ResponseSent [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [grpc_call.hpp#L35](https://github.com/hyperledger/iroha/blob/207fee212e1adf96a4a28ff7833c93b3da2a898f/irohad/network/grpc_call.hpp#L35): Undocumented API: RequestCreated [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-18 15:00:43,2018-01-18 15:00:43
https://api.github.com/repos/hyperledger/iroha/issues/882,https://api.github.com/repos/hyperledger/iroha/issues/comments/358652339,https://github.com/hyperledger/iroha/pull/882#issuecomment-358652339,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/882?src=pr&el=h1) Report
> Merging [#882](https://codecov.io/gh/hyperledger/iroha/pull/882?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7ef2ee11ad9237fdace42096d3c309161425c3fc?src=pr&el=desc) will **decrease** coverage by `0.1%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/882/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/882?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #882      +/-   ##
===========================================
- Coverage     31.2%   31.09%   -0.11%     
===========================================
  Files          465      463       -2     
  Lines        14052    13872     -180     
  Branches      9132     8912     -220     
===========================================
- Hits          4385     4314      -71     
- Misses        1338     1490     +152     
+ Partials      8329     8068     -261
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/882?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <0%> (-66.67%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `27.32% <0%> (-15.65%)` | :arrow_down: |
| [irohad/consensus/yac/impl/yac.cpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWMuY3Bw) | `32.55% <0%> (-10.6%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `38.56% <0%> (-8.22%)` | :arrow_down: |
| [libs/amount/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmhwcA==) | `30.76% <0%> (-7.7%)` | :arrow_down: |
| [...ad/consensus/yac/storage/impl/yac\_vote\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY192b3RlX3N0b3JhZ2UuY3Bw) | `63.33% <0%> (-6.67%)` | :arrow_down: |
| [irohad/network/grpc\_call.hpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvZ3JwY19jYWxsLmhwcA==) | `66.66% <0%> (-4.77%)` | :arrow_down: |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `12.16% <0%> (-2.84%)` | :arrow_down: |
| [.../module/irohad/consensus/yac/peer\_orderer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvcGVlcl9vcmRlcmVyX3Rlc3QuY3Bw) | `20% <0%> (-2.23%)` | :arrow_down: |
| [...e/shared\_model/validators/field\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `43.6% <0%> (-0.92%)` | :arrow_down: |
| ... and [15 more](https://codecov.io/gh/hyperledger/iroha/pull/882/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/882?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/882?src=pr&el=footer). Last update [7ef2ee1...40e2d87](https://codecov.io/gh/hyperledger/iroha/pull/882?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 13:52:45,2018-01-22 11:02:43
https://api.github.com/repos/hyperledger/iroha/issues/881,https://api.github.com/repos/hyperledger/iroha/issues/comments/358632502,https://github.com/hyperledger/iroha/pull/881#issuecomment-358632502,Warchant,DCO,2018-01-18 12:29:56,2018-01-18 12:29:56
https://api.github.com/repos/hyperledger/iroha/issues/881,https://api.github.com/repos/hyperledger/iroha/issues/comments/358633976,https://github.com/hyperledger/iroha/pull/881#issuecomment-358633976,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/881?src=pr&el=h1) Report
> Merging [#881](https://codecov.io/gh/hyperledger/iroha/pull/881?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/da64ede056232810a03ee9a8aaac6c5c06c7b697?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/881/graphs/tree.svg?width=650&src=pr&height=150&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/881?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #881      +/-   ##
===========================================
- Coverage    31.09%   31.08%   -0.02%     
===========================================
  Files          463      463              
  Lines        13872    13869       -3     
  Branches      8912     8912              
===========================================
- Hits          4314     4311       -3     
  Misses        1490     1490              
  Partials      8068     8068
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/881?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/881/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `45.33% <0%> (-2.11%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/881?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/881?src=pr&el=footer). Last update [da64ede...f6b189a](https://codecov.io/gh/hyperledger/iroha/pull/881?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 12:36:13,2018-01-18 12:54:21
https://api.github.com/repos/hyperledger/iroha/issues/881,https://api.github.com/repos/hyperledger/iroha/issues/comments/358638155,https://github.com/hyperledger/iroha/pull/881#issuecomment-358638155,sorabot,"SonarQube analysis reported 1 issue

1. ![INFO][INFO] [flat_file.cpp#L54](https://github.com/hyperledger/iroha/blob/f6b189ac8e226dc75756f08d2a7d3207c7023f7d/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L54): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-18 12:53:53,2018-01-18 12:53:53
https://api.github.com/repos/hyperledger/iroha/issues/880,https://api.github.com/repos/hyperledger/iroha/issues/comments/358963891,https://github.com/hyperledger/iroha/pull/880#issuecomment-358963891,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/880?src=pr&el=h1) Report
> Merging [#880](https://codecov.io/gh/hyperledger/iroha/pull/880?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/644dd7a93842f6fa1aa157f7373f8a7c513a185b?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/880/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/880?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #880   +/-   ##
========================================
  Coverage    30.96%   30.96%           
========================================
  Files          463      463           
  Lines        14071    14071           
  Branches      9099     9099           
========================================
  Hits          4357     4357           
  Misses        1458     1458           
  Partials      8256     8256
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/880?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/880?src=pr&el=footer). Last update [644dd7a...febe1ec](https://codecov.io/gh/hyperledger/iroha/pull/880?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-19 13:19:15,2018-01-19 13:19:15
https://api.github.com/repos/hyperledger/iroha/issues/879,https://api.github.com/repos/hyperledger/iroha/issues/comments/358636543,https://github.com/hyperledger/iroha/pull/879#issuecomment-358636543,Alexey-N-Chernyshov,"@l4l, tx_pipeline_integration_test_fixture.hpp previously included TestIrohad and had the dependency on gtest",2018-01-18 12:47:03,2018-01-18 12:47:03
https://api.github.com/repos/hyperledger/iroha/issues/879,https://api.github.com/repos/hyperledger/iroha/issues/comments/358638130,https://github.com/hyperledger/iroha/pull/879#issuecomment-358638130,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/879?src=pr&el=h1) Report
> Merging [#879](https://codecov.io/gh/hyperledger/iroha/pull/879?src=pr&el=desc) into [trunk/integration-test-framework](https://codecov.io/gh/hyperledger/iroha/commit/245f4f7e17895ec73a5f780b9d5bbae07d1711a4?src=pr&el=desc) will **decrease** coverage by `0.02%`.
> The diff coverage is `48%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/879/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/879?src=pr&el=tree)

```diff
@@                         Coverage Diff                          @@
##           trunk/integration-test-framework     #879      +/-   ##
====================================================================
- Coverage                             31.17%   31.14%   -0.03%     
====================================================================
  Files                                   464      462       -2     
  Lines                                 13894    13724     -170     
  Branches                               8862     8791      -71     
====================================================================
- Hits                                   4332     4275      -57     
+ Misses                                 1589     1508      -81     
+ Partials                               7973     7941      -32
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/879?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/879/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `30.76% <ø> (-6.08%)` | :arrow_down: |
| [test/integration/pipeline/test\_irohad.hpp](https://codecov.io/gh/hyperledger/iroha/pull/879/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90ZXN0X2lyb2hhZC5ocHA=) | `48% <48%> (ø)` | |
| [...rohad/validation/impl/stateless\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/879/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWxlc3NfdmFsaWRhdG9yX2ltcGwuY3Bw) | `45.45% <0%> (-3.04%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/879/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | | |
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/879/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | | |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/879/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `25.49% <0%> (+0.06%)` | :arrow_up: |
| [...odel/converters/impl/pb\_query\_response\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/879/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9yZXNwb25zZV9mYWN0b3J5LmNwcA==) | `42.24% <0%> (+3.64%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/879?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/879?src=pr&el=footer). Last update [245f4f7...68a1332](https://codecov.io/gh/hyperledger/iroha/pull/879?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 12:53:48,2018-01-18 16:44:21
https://api.github.com/repos/hyperledger/iroha/issues/878,https://api.github.com/repos/hyperledger/iroha/issues/comments/358556180,https://github.com/hyperledger/iroha/pull/878#issuecomment-358556180,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/878?src=pr&el=h1) Report
> Merging [#878](https://codecov.io/gh/hyperledger/iroha/pull/878?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/60e0a588d9c51f9f772211bf9c55cf486681b50d?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/878/graphs/tree.svg?width=650&token=VEvywEmaef&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/878?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #878   +/-   ##
========================================
  Coverage    31.07%   31.07%           
========================================
  Files          463      463           
  Lines        13852    13852           
  Branches      8906     8906           
========================================
  Hits          4305     4305           
  Misses        1484     1484           
  Partials      8063     8063
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/878?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/878?src=pr&el=footer). Last update [60e0a58...30c8b35](https://codecov.io/gh/hyperledger/iroha/pull/878?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-18 07:01:30,2018-01-18 07:01:30
https://api.github.com/repos/hyperledger/iroha/issues/877,https://api.github.com/repos/hyperledger/iroha/issues/comments/358339547,https://github.com/hyperledger/iroha/pull/877#issuecomment-358339547,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/877?src=pr&el=h1) Report
> Merging [#877](https://codecov.io/gh/hyperledger/iroha/pull/877?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/ea0f6b2f6e6a7768fbda23aef4e691d7b872774c?src=pr&el=desc) will **decrease** coverage by `0.13%`.
> The diff coverage is `40.24%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/877/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/877?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #877      +/-   ##
===========================================
- Coverage    31.21%   31.07%   -0.14%     
===========================================
  Files          465      464       -1     
  Lines        14062    13854     -208     
  Branches      9139     8908     -231     
===========================================
- Hits          4389     4305      -84     
- Misses        1338     1485     +147     
+ Partials      8335     8064     -271
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/877?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `100% <ø> (+57.83%)` | :arrow_up: |
| [shared\_model/validators/field\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmNwcA==) | `40.24% <40.24%> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <0%> (-66.67%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `27.32% <0%> (-14.03%)` | :arrow_down: |
| [irohad/consensus/yac/impl/yac.cpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWMuY3Bw) | `31.7% <0%> (-10.66%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `38.56% <0%> (-8.22%)` | :arrow_down: |
| [libs/amount/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmhwcA==) | `30.76% <0%> (-7.7%)` | :arrow_down: |
| [irohad/ametsuchi/impl/redis\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `38.93% <0%> (-6.94%)` | :arrow_down: |
| [...ad/consensus/yac/storage/impl/yac\_vote\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY192b3RlX3N0b3JhZ2UuY3Bw) | `63.33% <0%> (-6.67%)` | :arrow_down: |
| [irohad/consensus/yac/messages.hpp](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvbWVzc2FnZXMuaHBw) | `76.92% <0%> (-4.9%)` | :arrow_down: |
| ... and [48 more](https://codecov.io/gh/hyperledger/iroha/pull/877/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/877?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/877?src=pr&el=footer). Last update [ea0f6b2...2e1d928](https://codecov.io/gh/hyperledger/iroha/pull/877?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-17 15:28:08,2018-01-23 07:36:26
https://api.github.com/repos/hyperledger/iroha/issues/877,https://api.github.com/repos/hyperledger/iroha/issues/comments/358596337,https://github.com/hyperledger/iroha/pull/877#issuecomment-358596337,sorabot,"SonarQube analysis reported 19 issues
* ![INFO][INFO] 19 info

#### Top 10 issues

1. ![INFO][INFO] [field_validator.cpp#L192](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.cpp#L192): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [field_validator.hpp#L38](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.hpp#L38): Undocumented API: FieldValidator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L40](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.hpp#L40): Undocumented API: validateAccountId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L44](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.hpp#L44): Undocumented API: validateAssetId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L47](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.hpp#L47): Undocumented API: validateAmount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L50](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.hpp#L50): Undocumented API: validatePubkey [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L53](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.hpp#L53): Undocumented API: validatePeerAddress [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L57](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.hpp#L57): Undocumented API: validateRoleId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L60](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.hpp#L60): Undocumented API: validateAccountName [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L64](https://github.com/hyperledger/iroha/blob/b1128dd3983da7d23a865b8404989120907f6bac/shared_model/validators/field_validator.hpp#L64): Undocumented API: validateDomainId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-18 09:57:38,2018-01-18 09:57:38
https://api.github.com/repos/hyperledger/iroha/issues/876,https://api.github.com/repos/hyperledger/iroha/issues/comments/358292301,https://github.com/hyperledger/iroha/pull/876#issuecomment-358292301,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/876?src=pr&el=h1) Report
> Merging [#876](https://codecov.io/gh/hyperledger/iroha/pull/876?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/da80e000094bf1c5b58d8c1da9db84dda72c5a0f?src=pr&el=desc) will **increase** coverage by `0.04%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/876/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/876?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #876      +/-   ##
===========================================
+ Coverage    31.15%   31.19%   +0.04%     
===========================================
  Files          463      463              
  Lines        13823    13771      -52     
  Branches      8875     8824      -51     
===========================================
- Hits          4306     4296      -10     
- Misses        1484     1500      +16     
+ Partials      8033     7975      -58
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/876?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/876/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `32.05% <0%> (-15.39%)` | :arrow_down: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.hpp](https://codecov.io/gh/hyperledger/iroha/pull/876/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuaHBw) | `100% <0%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/876/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `27.81% <0%> (+0.75%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/876/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `24.05% <0%> (+1.55%)` | :arrow_up: |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/876/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `37.31% <0%> (+6.43%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/flat\_file\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/876/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9mbGF0X2ZpbGVfdGVzdC5jcHA=) | `22.95% <0%> (+6.73%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/876?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/876?src=pr&el=footer). Last update [da80e00...8b3f37a](https://codecov.io/gh/hyperledger/iroha/pull/876?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-17 12:40:44,2018-01-17 12:40:44
https://api.github.com/repos/hyperledger/iroha/issues/876,https://api.github.com/repos/hyperledger/iroha/issues/comments/358316840,https://github.com/hyperledger/iroha/pull/876#issuecomment-358316840,l4l,Merged in 60e0a58,2018-01-17 14:15:14,2018-01-17 14:15:14
https://api.github.com/repos/hyperledger/iroha/issues/875,https://api.github.com/repos/hyperledger/iroha/issues/comments/358318748,https://github.com/hyperledger/iroha/pull/875#issuecomment-358318748,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/875?src=pr&el=h1) Report
> Merging [#875](https://codecov.io/gh/hyperledger/iroha/pull/875?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/e10d19eae8741eff54c1153a45b7d860b74dfa9d?src=pr&el=desc) will **increase** coverage by `0.03%`.
> The diff coverage is `11.76%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/875/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/875?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #875      +/-   ##
===========================================
+ Coverage    31.08%   31.11%   +0.03%     
===========================================
  Files          463      463              
  Lines        13859    13823      -36     
  Branches      8900     8870      -30     
===========================================
- Hits          4308     4301       -7     
- Misses        1495     1497       +2     
+ Partials      8056     8025      -31
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/875?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/875/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `36.84% <ø> (ø)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/875/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `26% <0%> (+0.5%)` | :arrow_up: |
| [...tion/pipeline/transfer\_asset\_inter\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/875/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90cmFuc2Zlcl9hc3NldF9pbnRlcl9kb21haW5fdGVzdC5jcHA=) | `42.55% <0%> (ø)` | :arrow_up: |
| [...est/module/irohad/common/raw\_block\_loader\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/875/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbW1vbi9yYXdfYmxvY2tfbG9hZGVyX3Rlc3QuY3Bw) | `0% <0%> (ø)` | |
| [irohad/main/raw\_block\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/875/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vcmF3X2Jsb2NrX2xvYWRlci5ocHA=) | `100% <100%> (ø)` | |
| [irohad/main/impl/raw\_block\_loader.cpp](https://codecov.io/gh/hyperledger/iroha/pull/875/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9yYXdfYmxvY2tfbG9hZGVyLmNwcA==) | `7.14% <16.66%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/875?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/875?src=pr&el=footer). Last update [e10d19e...de2e499](https://codecov.io/gh/hyperledger/iroha/pull/875?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-17 14:22:01,2018-01-18 09:06:59
https://api.github.com/repos/hyperledger/iroha/issues/875,https://api.github.com/repos/hyperledger/iroha/issues/comments/358582584,https://github.com/hyperledger/iroha/pull/875#issuecomment-358582584,sorabot,"SonarQube analysis reported 1 issue

1. ![INFO][INFO] [raw_block_loader.hpp#L40](https://github.com/hyperledger/iroha/blob/de2e499113350972da589f7c076fe4553e3dc7bf/irohad/main/raw_block_loader.hpp#L40): Undocumented API: BlockLoader [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-18 09:06:46,2018-01-18 09:06:46
https://api.github.com/repos/hyperledger/iroha/issues/874,https://api.github.com/repos/hyperledger/iroha/issues/comments/358263151,https://github.com/hyperledger/iroha/pull/874#issuecomment-358263151,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/874?src=pr&el=h1) Report
> Merging [#874](https://codecov.io/gh/hyperledger/iroha/pull/874?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/60e0a588d9c51f9f772211bf9c55cf486681b50d?src=pr&el=desc) will **decrease** coverage by `0.04%`.
> The diff coverage is `10.52%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/874/graphs/tree.svg?height=150&token=VEvywEmaef&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/874?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #874      +/-   ##
===========================================
- Coverage    31.07%   31.03%   -0.05%     
===========================================
  Files          463      463              
  Lines        13852    13859       +7     
  Branches      8906     8911       +5     
===========================================
- Hits          4305     4301       -4     
- Misses        1484     1491       +7     
- Partials      8063     8067       +4
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/874?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/files.cpp](https://codecov.io/gh/hyperledger/iroha/pull/874/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vZmlsZXMuY3Bw) | `14.28% <10.52%> (-35.72%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/874?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/874?src=pr&el=footer). Last update [60e0a58...6f4fddc](https://codecov.io/gh/hyperledger/iroha/pull/874?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-17 10:31:23,2018-01-18 07:08:41
https://api.github.com/repos/hyperledger/iroha/issues/873,https://api.github.com/repos/hyperledger/iroha/issues/comments/358267862,https://github.com/hyperledger/iroha/pull/873#issuecomment-358267862,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/873?src=pr&el=h1) Report
> Merging [#873](https://codecov.io/gh/hyperledger/iroha/pull/873?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/96cce50dc5bc5b46096a2d23cc4cc85b5f70b4a7?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/873/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/873?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #873      +/-   ##
==========================================
- Coverage    31.11%   31.1%   -0.01%     
==========================================
  Files          463     463              
  Lines        13823   13823              
  Branches      8870    8870              
==========================================
- Hits          4301    4300       -1     
- Misses        1497    1498       +1     
  Partials      8025    8025
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/873?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/873/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `53.63% <25%> (-0.91%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/873?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/873?src=pr&el=footer). Last update [96cce50...f89efac](https://codecov.io/gh/hyperledger/iroha/pull/873?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-17 10:50:07,2018-01-18 10:39:04
https://api.github.com/repos/hyperledger/iroha/issues/873,https://api.github.com/repos/hyperledger/iroha/issues/comments/358607371,https://github.com/hyperledger/iroha/pull/873#issuecomment-358607371,sorabot,"SonarQube analysis reported 4 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L264](https://github.com/hyperledger/iroha/blob/f89efacbb860152b680667888696ce44e439edbd/irohad/main/application.cpp#L264): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L269](https://github.com/hyperledger/iroha/blob/f89efacbb860152b680667888696ce44e439edbd/irohad/main/application.cpp#L269): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [application.cpp#L34](https://github.com/hyperledger/iroha/blob/f89efacbb860152b680667888696ce44e439edbd/irohad/main/application.cpp#L34): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.cpp#L264](https://github.com/hyperledger/iroha/blob/f89efacbb860152b680667888696ce44e439edbd/irohad/main/application.cpp#L264): Define a constant instead of duplicating this literal ""0.0.0.0:"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-18 10:38:55,2018-01-18 10:38:55
https://api.github.com/repos/hyperledger/iroha/issues/871,https://api.github.com/repos/hyperledger/iroha/issues/comments/359902399,https://github.com/hyperledger/iroha/issues/871#issuecomment-359902399,l4l,"Looks like an inconsistency, there's no such a thing in [block.proto](https://github.com/hyperledger/iroha/blob/master/schema/block.proto#L23)
**upd** also there's no such a thing in proto ever, so may be it's here for some reason",2018-01-23 19:27:55,2018-01-23 19:30:21
https://api.github.com/repos/hyperledger/iroha/issues/871,https://api.github.com/repos/hyperledger/iroha/issues/comments/454334364,https://github.com/hyperledger/iroha/issues/871#issuecomment-454334364,LiraLemur,The issue seems outdated. ,2019-01-15 10:01:04,2019-01-15 10:01:04
https://api.github.com/repos/hyperledger/iroha/issues/870,https://api.github.com/repos/hyperledger/iroha/issues/comments/358012068,https://github.com/hyperledger/iroha/pull/870#issuecomment-358012068,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/870?src=pr&el=h1) Report
> Merging [#870](https://codecov.io/gh/hyperledger/iroha/pull/870?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/fb0195bf60682462d8a4168c3fba3410769710e3?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/870/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/870?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #870      +/-   ##
===========================================
- Coverage    31.22%   31.19%   -0.04%     
===========================================
  Files          462      463       +1     
  Lines        13766    13771       +5     
  Branches      8816     8824       +8     
===========================================
- Hits          4299     4296       -3     
  Misses        1500     1500              
- Partials      7967     7975       +8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/870?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/validation/stateful\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/870/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVmdWxfdmFsaWRhdG9yLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/870/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyLmhwcA==) | `50% <0%> (-50%)` | :arrow_down: |
| [irohad/model/model\_crypto\_provider.hpp](https://codecov.io/gh/hyperledger/iroha/pull/870/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL21vZGVsX2NyeXB0b19wcm92aWRlci5ocHA=) | `50% <0%> (-50%)` | :arrow_down: |
| [irohad/validation/chain\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/870/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vY2hhaW5fdmFsaWRhdG9yLmhwcA==) | `50% <0%> (-50%)` | :arrow_down: |
| [irohad/validation/stateless\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/870/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVsZXNzX3ZhbGlkYXRvci5ocHA=) | `50% <0%> (-50%)` | :arrow_down: |
| [irohad/validation/impl/chain\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/870/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9jaGFpbl92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [libs/crypto/keys\_manager\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/870/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuaHBw) | `0% <0%> (-100%)` | :arrow_down: |
| [...rohad/validation/impl/stateless\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/870/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWxlc3NfdmFsaWRhdG9yX2ltcGwuaHBw) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/model/model\_crypto\_provider\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/870/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL21vZGVsX2NyeXB0b19wcm92aWRlcl9pbXBsLmhwcA==) | `0% <0%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/870?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/870?src=pr&el=footer). Last update [fb0195b...0ae4137](https://codecov.io/gh/hyperledger/iroha/pull/870?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-16 16:05:22,2018-01-16 16:05:22
https://api.github.com/repos/hyperledger/iroha/issues/869,https://api.github.com/repos/hyperledger/iroha/issues/comments/358009919,https://github.com/hyperledger/iroha/pull/869#issuecomment-358009919,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/869?src=pr&el=h1) Report
> Merging [#869](https://codecov.io/gh/hyperledger/iroha/pull/869?src=pr&el=desc) into [trunk/integration-test-framework](https://codecov.io/gh/hyperledger/iroha/commit/71671cb3123b61ba546469c5680e20501d57c826?src=pr&el=desc) will **increase** coverage by `0.02%`.
> The diff coverage is `27.53%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/869/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/869?src=pr&el=tree)

```diff
@@                         Coverage Diff                          @@
##           trunk/integration-test-framework     #869      +/-   ##
====================================================================
+ Coverage                             31.15%   31.17%   +0.02%     
====================================================================
  Files                                   461      464       +3     
  Lines                                 13723    13894     +171     
  Branches                               8790     8862      +72     
====================================================================
+ Hits                                   4275     4332      +57     
- Misses                                 1508     1589      +81     
- Partials                               7940     7973      +33
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/869?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/869/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `37.28% <0%> (ø)` | |
| [...odel/converters/impl/pb\_query\_response\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/869/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9yZXNwb25zZV9mYWN0b3J5LmNwcA==) | `38.59% <21.95%> (-3.65%)` | :arrow_down: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/869/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `6.45% <25%> (ø)` | |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/869/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `25.42% <25%> (-0.07%)` | :arrow_down: |
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/869/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `65.62% <66.66%> (ø)` | |
| [...rohad/validation/impl/stateless\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/869/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWxlc3NfdmFsaWRhdG9yX2ltcGwuY3Bw) | `48.48% <0%> (+3.03%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/869?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/869?src=pr&el=footer). Last update [71671cb...4998168](https://codecov.io/gh/hyperledger/iroha/pull/869?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-16 15:59:09,2018-01-18 11:00:28
https://api.github.com/repos/hyperledger/iroha/issues/869,https://api.github.com/repos/hyperledger/iroha/issues/comments/358612593,https://github.com/hyperledger/iroha/pull/869#issuecomment-358612593,sorabot,"SonarQube analysis reported 37 issues
* ![CRITICAL][CRITICAL] 5 critical
* ![MINOR][MINOR] 7 minor
* ![INFO][INFO] 25 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L26](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/irohad/model/converters/impl/pb_query_response_factory.cpp#L26): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L88](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/irohad/model/converters/impl/pb_query_response_factory.cpp#L88): The Cyclomatic Complexity of this function is 11 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L321](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/irohad/model/converters/impl/pb_query_response_factory.cpp#L321): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L324](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/irohad/model/converters/impl/pb_query_response_factory.cpp#L324): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L356](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/irohad/model/converters/impl/pb_query_response_factory.cpp#L356): The Cyclomatic Complexity of this function is 11 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L28](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/irohad/model/converters/impl/pb_query_response_factory.cpp#L28): Function parameter 'query_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L156](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/irohad/model/converters/impl/pb_query_response_factory.cpp#L156): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [pb_query_response_factory.hpp#L45](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/irohad/model/converters/pb_query_response_factory.hpp#L45): Function parameter 'query_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [pb_query_response_factory.hpp#L56](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/irohad/model/converters/pb_query_response_factory.hpp#L56): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L79](https://github.com/hyperledger/iroha/blob/4998168552624a1858d88182c14ebc398a99bb43/test/framework/integration_framework/integration_test_framework.cpp#L79): The function 'addUser' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-18 10:59:54,2018-01-18 10:59:54
https://api.github.com/repos/hyperledger/iroha/issues/867,https://api.github.com/repos/hyperledger/iroha/issues/comments/357974144,https://github.com/hyperledger/iroha/pull/867#issuecomment-357974144,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/867?src=pr&el=h1) Report
> Merging [#867](https://codecov.io/gh/hyperledger/iroha/pull/867?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/da64ede056232810a03ee9a8aaac6c5c06c7b697?src=pr&el=desc) will **decrease** coverage by `0.16%`.
> The diff coverage is `7.28%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/867/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/867?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #867      +/-   ##
===========================================
- Coverage    31.09%   30.93%   -0.17%     
===========================================
  Files          463      463              
  Lines        13872    14057     +185     
  Branches      8912     9093     +181     
===========================================
+ Hits          4314     4349      +35     
+ Misses        1490     1461      -29     
- Partials      8068     8247     +179
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/867?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/867/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `11.21% <3.62%> (-2.1%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/867/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `47.05% <61.53%> (+8.49%)` | :arrow_up: |
| [libs/amount/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/867/diff?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmhwcA==) | `38.46% <0%> (+7.69%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/867?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/867?src=pr&el=footer). Last update [da64ede...d95f621](https://codecov.io/gh/hyperledger/iroha/pull/867?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-16 14:19:54,2018-01-18 20:47:54
https://api.github.com/repos/hyperledger/iroha/issues/867,https://api.github.com/repos/hyperledger/iroha/issues/comments/358121086,https://github.com/hyperledger/iroha/pull/867#issuecomment-358121086,l4l,"![screenshot_20180117_005423](https://user-images.githubusercontent.com/5658339/35014268-09392754-fb21-11e7-9f57-3ad0890beeac.png)
![screenshot_20180117_005435](https://user-images.githubusercontent.com/5658339/35014364-60277dae-fb21-11e7-906e-7e8ed693b265.png)
![screenshot_20180117_005435](https://ci.memecdn.com/6020783.jpg)",2018-01-16 21:57:33,2018-01-16 21:57:33
https://api.github.com/repos/hyperledger/iroha/issues/867,https://api.github.com/repos/hyperledger/iroha/issues/comments/358129853,https://github.com/hyperledger/iroha/pull/867#issuecomment-358129853,l4l,"Imo that's pretty hard and probably out of that pr, but we can also add tests for broken database so we can cover cases like [command_executor.cpp:94](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-94)

Also [value_or](https://github.com/martinmoene/optional-lite#interface-of-optional-lite) function can slightly increase coverage in some cases, e.g [here](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-282) or [here](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-807)
Beside that multiple `optional::value()` calls can be refactored. It also can increase coverage

Plz teview also these lines: [177-182](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-177), [436-438](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-436), [533-560](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-553), [596-603](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-596), [620-622](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-620), [695](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-695), [754-755](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-754), [830-831](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-830), [882-886](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-882)

And especially these lines: [637](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-637), [678-681](https://codecov.io/gh/hyperledger/iroha/pull/867/src/irohad/model/execution/impl/command_executor.cpp?before=irohad/model/execution/impl/command_executor.cpp#D1-678)",2018-01-16 22:30:52,2018-01-16 22:30:52
https://api.github.com/repos/hyperledger/iroha/issues/867,https://api.github.com/repos/hyperledger/iroha/issues/comments/358130640,https://github.com/hyperledger/iroha/pull/867#issuecomment-358130640,motxx,"I suggest renaming `command_validate_execute_test` to another, something like `command_mock_call_test`.
As mentioned in possible drawbacks, commands are not validated by real database, which causes misunderstandings to others in the future.",2018-01-16 22:34:18,2018-01-16 22:34:18
https://api.github.com/repos/hyperledger/iroha/issues/867,https://api.github.com/repos/hyperledger/iroha/issues/comments/358134928,https://github.com/hyperledger/iroha/pull/867#issuecomment-358134928,l4l,"Maybe, sounds logical but I don't really like a new name. Mock is associated with fixtures and call doesn't say anything",2018-01-16 22:52:56,2018-01-16 22:52:56
https://api.github.com/repos/hyperledger/iroha/issues/867,https://api.github.com/repos/hyperledger/iroha/issues/comments/358241390,https://github.com/hyperledger/iroha/pull/867#issuecomment-358241390,nickaleks,"@l4l What do you mean by broken database? inconsistent data or when database is down?

About using value_or - command executor and storage will be greatly refactored in the future, to remove code duplication and increase informativeness, that is why making any changes to code is unnecessary at this point.

About 637 - strangely sonar does not show this as uncovered branch
678 - 681 - hard to test, because we have no way of checking what value was added to database

About other lines - sonar shows these branches as covered and codecov as partially. It seems to be caused by using different methods to calculate coverage.

I will look at 637 and in case something is missing, add test if necessary",2018-01-17 09:07:52,2018-01-17 09:07:52
https://api.github.com/repos/hyperledger/iroha/issues/867,https://api.github.com/repos/hyperledger/iroha/issues/comments/358408100,https://github.com/hyperledger/iroha/pull/867#issuecomment-358408100,nickaleks,@muratovv fixed test description and comment for execute function,2018-01-17 19:03:49,2018-01-17 19:03:49
https://api.github.com/repos/hyperledger/iroha/issues/867,https://api.github.com/repos/hyperledger/iroha/issues/comments/358430977,https://github.com/hyperledger/iroha/pull/867#issuecomment-358430977,l4l,"> What do you mean by broken database? inconsistent data or when database is down?

Inconsistency, yes. We probably have some number of bugs and probably some of them are related to db, so if the code can be protected from this kind of bug is a significant security plus.
And unavailable database is problem of deploying/installing/configuring, not ours imo.

> About using value_or - command executor and storage will be greatly refactored in the future, to remove code duplication and increase informativeness, that is why making any changes to code is unnecessary at this point.

Ok, let it be like it now

>About 637 - strangely sonar does not show this as uncovered branch
> 678 - 681 - hard to test, because we have no way of checking what value was added to database
>
> About other lines - sonar shows these branches as covered and codecov as partially. It seems to be caused by using different methods to calculate coverage.
> 
> I will look at 637 and in case something is missing, add test if necessary

Sonar has pretty awful (well, maybe it's biased) info about the coverage, it's better to look at info from codecov. Partial basically means that not-all-cases of the line covered or most probably the following two cases:
- There's can be non-covered exceptions and it's mostly fine to leave as-is
- Missed some logic-dependent branching is not really cool

Note also that, e.g 637 can be due to exception from `std::string`'s constructor (out_of_memory or smth like that)",2018-01-17 20:17:06,2018-01-17 20:17:06
https://api.github.com/repos/hyperledger/iroha/issues/867,https://api.github.com/repos/hyperledger/iroha/issues/comments/358776544,https://github.com/hyperledger/iroha/pull/867#issuecomment-358776544,sorabot,"SonarQube analysis reported 9 issues

1. ![MINOR][MINOR] [command_executor.cpp#L267](https://github.com/hyperledger/iroha/blob/d95f6212a33cfa94d4f8ee0997c11a3a176294e7/irohad/model/execution/impl/command_executor.cpp#L267): Define a constant instead of duplicating this literal ""asset {} is absent"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L302](https://github.com/hyperledger/iroha/blob/d95f6212a33cfa94d4f8ee0997c11a3a176294e7/irohad/model/execution/impl/command_executor.cpp#L302): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L370](https://github.com/hyperledger/iroha/blob/d95f6212a33cfa94d4f8ee0997c11a3a176294e7/irohad/model/execution/impl/command_executor.cpp#L370): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L772](https://github.com/hyperledger/iroha/blob/d95f6212a33cfa94d4f8ee0997c11a3a176294e7/irohad/model/execution/impl/command_executor.cpp#L772): Define a constant instead of duplicating this literal ""asset {} is absent of {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [command_executor.cpp#L213](https://github.com/hyperledger/iroha/blob/d95f6212a33cfa94d4f8ee0997c11a3a176294e7/irohad/model/execution/impl/command_executor.cpp#L213): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [command_executor.cpp#L248](https://github.com/hyperledger/iroha/blob/d95f6212a33cfa94d4f8ee0997c11a3a176294e7/irohad/model/execution/impl/command_executor.cpp#L248): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [command_executor.cpp#L313](https://github.com/hyperledger/iroha/blob/d95f6212a33cfa94d4f8ee0997c11a3a176294e7/irohad/model/execution/impl/command_executor.cpp#L313): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [command_executor.cpp#L421](https://github.com/hyperledger/iroha/blob/d95f6212a33cfa94d4f8ee0997c11a3a176294e7/irohad/model/execution/impl/command_executor.cpp#L421): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [command_executor.cpp#L488](https://github.com/hyperledger/iroha/blob/d95f6212a33cfa94d4f8ee0997c11a3a176294e7/irohad/model/execution/impl/command_executor.cpp#L488): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-18 20:47:04,2018-01-18 20:47:04
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/357969731,https://github.com/hyperledger/iroha/issues/866#issuecomment-357969731,motxx,"I asked maintainers and currently, genesis block hash cannot be created as I mentioned above.",2018-01-16 14:03:34,2018-01-16 14:03:34
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/358959460,https://github.com/hyperledger/iroha/issues/866#issuecomment-358959460,Warchant,"You can implement genesis block generator -- standalone program (+ module, which can be reused in iroha-cli), which is convenient for you.
This will help a lot! Thanks.",2018-01-19 12:57:28,2018-01-19 12:58:33
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/392596842,https://github.com/hyperledger/iroha/issues/866#issuecomment-392596842,ZeekHuge,"Hi @motxx ! Since you have self-assigned it, can you please update the current status of the solution to this issue ?",2018-05-28 20:13:32,2018-05-28 20:13:32
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/392604092,https://github.com/hyperledger/iroha/issues/866#issuecomment-392604092,l4l,@ZeekHuge it seems the issue have no recent activity. Feel free to handle it,2018-05-28 21:12:09,2018-05-28 21:12:09
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/394759501,https://github.com/hyperledger/iroha/issues/866#issuecomment-394759501,motxx,"@ZeekHuge I'm inactive at the issue any more, sorry for that. Please feel free to handle it. Thank you.",2018-06-05 15:44:32,2018-06-05 15:45:51
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/397797890,https://github.com/hyperledger/iroha/issues/866#issuecomment-397797890,ZeekHuge,"Hi, 
So, what I have been able to understand, regarding this issue, is : 

* For this issue, we want the `iroha-cli` to be able to create custom `genesis.block` . 
* In the `iroha-cli` this will be done in an interactive way and will require the user to enter many details
* I looked into the documentation and example `genesis.block`, what I have concluded is that the `genesis.block` payload needs to have these bare minimum requirements  : 
    * At least one `role` (using `createRole` command)
    * At least one `peer` (using `addPeer` command)
    * At least one `domain` (using `createDoman` command)
    * At least one `asset` (using `createAsset` command)
    * At least one `account` (using `createAccount` command)

 * The `iroha-cli` will only validate above details, and will not validate it much deeper (like the `account` created needs to be on the existing `domain` etc). This in-depth validation will be done by the `Validator` when this block is committed.


Is this all correct ? Please guide me if I am wrong at any point.


Also, I have this question, about `peer`. So, as schema of `addPeer` command shows, there is a `address` field to it. This would mean a peer (i..e. the user of the network) is identified based on the `address` **and** the `public-key`. Did I get this right ? If so, I think this makes it more difficult to interact with the network, as the user will always need to have the same IP address to interact with the network. I am not sure how other blockchains work, but this does not sound a good thing to me.",2018-06-16 08:37:21,2018-06-16 08:37:21
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/397806825,https://github.com/hyperledger/iroha/issues/866#issuecomment-397806825,l4l,"@ZeekHuge 
Actually the genesis block is configurable by these lines:
https://github.com/hyperledger/iroha/blob/fc742db1b817dc93d916e0e4fe843c46ac6f2631/iroha-cli/main.cpp#L105-L117

So user is able create a genesis block via providing transaction in json (that can be retrieved by the same cli). Seem the only problem left is:

> As a user, I want to create another block but how to calculate the genesis block hash?


> The iroha-cli will only validate above details, and will not validate it much deeper

Not really, the genesis considered to be valid. The problem of validation genesis block (if it makes sense) probably should be discussed in other issue (in fact there's even [such task in jira](https://soramitsu.atlassian.net/browse/IR-1234)).

> Also, I have this question, about peer. So, as schema of addPeer command shows, there is a address field to it. This would mean a peer (i..e. the user of the network) is identified based on the address and the public-key. Did I get this right ?

Yes, exactly

> If so, I think this makes it more difficult to interact with the network, as the user will always need to have the same IP address to interact with the network. I am not sure how other blockchains work, but this does not sound a good thing to me.

Indeed, it's a known problem. So far there's no proposed solution yet. In reality it's not a _huge_ problem because Iroha is private blockchain. In other words, peers are well known, their number cannot change uncontrollably (like in ethereum for example).",2018-06-16 11:42:16,2018-06-16 11:42:16
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/397857053,https://github.com/hyperledger/iroha/issues/866#issuecomment-397857053,ZeekHuge,"> Indeed, it's a known problem. So far there's no proposed solution yet. In reality it's not a huge problem because Iroha is private blockchain. In other words, peers are well known, their number cannot change uncontrollably (like in ethereum for example).

Pardon me, I have very little/no experience with blockchains, but this sounds a huge problem to me ! I mean, this problem would mean that for a **normal** user (not a developer, hence do not have a server with static IP) just by moving from office to home will make this network un-usable.

Why cant we use just the public key ? Something like, at the user's end each command/query will require to have a fixed message encrypted by the private key of the user, and at the peer's end if that message can be decrypted by using the public key of that user, then we can safely say that we have identified the user.",2018-06-17 06:03:37,2018-06-17 07:29:58
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/397863046,https://github.com/hyperledger/iroha/issues/866#issuecomment-397863046,l4l,"> his problem would mean that for a normal user (not a developer, hence do not have a server with static IP) just by moving from office to home will make this network un-usable

Thus the hoster should provide access from home, it's only an infrastructure problem. How can you connect to the network without the access (to the office) at all.

> Why cant we use just the public key ?

So where are you going to connect then? There's no information about endpoint(s) and you don't know with whom you should start to talk. Public key can only proof, that the service you are talking with is exactly the one you intended to.",2018-06-17 08:25:21,2018-06-17 08:25:21
https://api.github.com/repos/hyperledger/iroha/issues/866,https://api.github.com/repos/hyperledger/iroha/issues/comments/454746209,https://github.com/hyperledger/iroha/issues/866#issuecomment-454746209,LiraLemur,"Contacted participants, the issue is considered outdated and can be closed",2019-01-16 11:28:09,2019-01-16 11:28:09
https://api.github.com/repos/hyperledger/iroha/issues/865,https://api.github.com/repos/hyperledger/iroha/issues/comments/357890977,https://github.com/hyperledger/iroha/pull/865#issuecomment-357890977,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/865?src=pr&el=h1) Report
> Merging [#865](https://codecov.io/gh/hyperledger/iroha/pull/865?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/51753ea15a7ffd7c8a76ad1b0b0fe213949623f1?src=pr&el=desc) will **increase** coverage by `0.06%`.
> The diff coverage is `20.58%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/865/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/865?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #865      +/-   ##
===========================================
+ Coverage    30.94%   31.01%   +0.06%     
===========================================
  Files          463      464       +1     
  Lines        14068    14143      +75     
  Branches      9099     9166      +67     
===========================================
+ Hits          4354     4387      +33     
+ Misses        1458     1425      -33     
- Partials      8256     8331      +75
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/865?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/consensus/yac/yac\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/865/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX21vY2tzLmhwcA==) | `41.09% <0%> (-0.58%)` | :arrow_down: |
| [...module/irohad/consensus/yac/yac\_sunny\_day\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/865/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3N1bm55X2RheV90ZXN0LmNwcA==) | `12.5% <0%> (-2.68%)` | :arrow_down: |
| [...module/irohad/consensus/yac/yac\_rainy\_day\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/865/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3JhaW55X2RheV90ZXN0LmNwcA==) | `21.62% <21.62%> (ø)` | |
| [irohad/consensus/yac/impl/yac.cpp](https://codecov.io/gh/hyperledger/iroha/pull/865/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWMuY3Bw) | `43.15% <5.26%> (+10.59%)` | :arrow_up: |
| [irohad/consensus/yac/storage/impl/yac\_common.cpp](https://codecov.io/gh/hyperledger/iroha/pull/865/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY19jb21tb24uY3Bw) | `75% <80%> (ø)` | :arrow_up: |
| [...ad/consensus/yac/storage/impl/yac\_vote\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/865/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY192b3RlX3N0b3JhZ2UuY3Bw) | `70% <0%> (+6.66%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/865?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/865?src=pr&el=footer). Last update [51753ea...cfb8fd6](https://codecov.io/gh/hyperledger/iroha/pull/865?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-16 08:45:45,2018-01-19 14:55:50
https://api.github.com/repos/hyperledger/iroha/issues/865,https://api.github.com/repos/hyperledger/iroha/issues/comments/358988079,https://github.com/hyperledger/iroha/pull/865#issuecomment-358988079,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [yac.cpp#L48](https://github.com/hyperledger/iroha/blob/cfb8fd60ba6850ed91bab78a46cf093b6eeb93f9/irohad/consensus/yac/impl/yac.cpp#L48): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.cpp#L58](https://github.com/hyperledger/iroha/blob/cfb8fd60ba6850ed91bab78a46cf093b6eeb93f9/irohad/consensus/yac/impl/yac.cpp#L58): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.cpp#L170](https://github.com/hyperledger/iroha/blob/cfb8fd60ba6850ed91bab78a46cf093b6eeb93f9/irohad/consensus/yac/impl/yac.cpp#L170): Define a constant instead of duplicating this literal ""reject case"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [yac.cpp#L237](https://github.com/hyperledger/iroha/blob/cfb8fd60ba6850ed91bab78a46cf093b6eeb93f9/irohad/consensus/yac/impl/yac.cpp#L237): Define a constant instead of duplicating this literal ""Reject case on hash {} achieved"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [yac.cpp#L171](https://github.com/hyperledger/iroha/blob/cfb8fd60ba6850ed91bab78a46cf093b6eeb93f9/irohad/consensus/yac/impl/yac.cpp#L171): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [yac.cpp#L193](https://github.com/hyperledger/iroha/blob/cfb8fd60ba6850ed91bab78a46cf093b6eeb93f9/irohad/consensus/yac/impl/yac.cpp#L193): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-19 14:55:20,2018-01-19 14:55:20
https://api.github.com/repos/hyperledger/iroha/issues/864,https://api.github.com/repos/hyperledger/iroha/issues/comments/357913007,https://github.com/hyperledger/iroha/issues/864#issuecomment-357913007,luckychess,"Looks like your keys are correct (at least in terms of length). Could you try to run ```git clean -idx```, then pull latest master and run ```example/python/prepare.sh```?",2018-01-16 10:09:45,2018-01-16 10:09:45
https://api.github.com/repos/hyperledger/iroha/issues/864,https://api.github.com/repos/hyperledger/iroha/issues/comments/358196026,https://github.com/hyperledger/iroha/issues/864#issuecomment-358196026,a-r-g-v,"@luckychess 
I re-pulled this repository and re-built the SDK. But, The same error occurred.
Could you check to reproduce the problem in your environment?

```
$ python tx-example.py          
Import grpc:No module named gevent.socket
Traceback (most recent call last):
  File ""tx-example.py"", line 24, in <module>
    me_kp = crypto.convertFromExisting(admin_pub, admin_priv)
  File ""build/shared_model/bindings/iroha.py"", line 921, in convertFromExisting
    return _iroha.ModelCrypto_convertFromExisting(self, public_key, private_key)
ValueError: blob_t: input string has incorrect length
zsh: exit 1     python tx-example.py
```",2018-01-17 04:47:29,2018-01-17 04:48:03
https://api.github.com/repos/hyperledger/iroha/issues/864,https://api.github.com/repos/hyperledger/iroha/issues/comments/358243712,https://github.com/hyperledger/iroha/issues/864#issuecomment-358243712,a-r-g-v,"Sorry, I just noticed my mistake.
A cause of the problem is the file of my key pairs contained a new-line code.
Thanks a lot.",2018-01-17 09:17:06,2018-01-17 09:17:06
https://api.github.com/repos/hyperledger/iroha/issues/863,https://api.github.com/repos/hyperledger/iroha/issues/comments/357944489,https://github.com/hyperledger/iroha/issues/863#issuecomment-357944489,neewy,"Please define live status, what is this checking?",2018-01-16 12:25:20,2018-01-16 12:25:20
https://api.github.com/repos/hyperledger/iroha/issues/863,https://api.github.com/repos/hyperledger/iroha/issues/comments/358959837,https://github.com/hyperledger/iroha/issues/863#issuecomment-358959837,Warchant,Live status -- status of transaction or peer's health?,2018-01-19 12:59:19,2018-01-19 12:59:19
https://api.github.com/repos/hyperledger/iroha/issues/863,https://api.github.com/repos/hyperledger/iroha/issues/comments/361506727,https://github.com/hyperledger/iroha/issues/863#issuecomment-361506727,neewy,@MizukiSonoko can you specify what you mean?,2018-01-30 08:02:33,2018-01-30 08:02:33
https://api.github.com/repos/hyperledger/iroha/issues/862,https://api.github.com/repos/hyperledger/iroha/issues/comments/357870779,https://github.com/hyperledger/iroha/pull/862#issuecomment-357870779,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/862?src=pr&el=h1) Report
> Merging [#862](https://codecov.io/gh/hyperledger/iroha/pull/862?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/9b926acfd97be2f606eccab16b406ef17ad8bb4c?src=pr&el=desc) will **increase** coverage by `0.05%`.
> The diff coverage is `39.21%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/862/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/862?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #862      +/-   ##
===========================================
+ Coverage    31.03%   31.08%   +0.05%     
===========================================
  Files          463      463              
  Lines        13859    13859              
  Branches      8911     8900      -11     
===========================================
+ Hits          4301     4308       +7     
- Misses        1491     1495       +4     
+ Partials      8067     8056      -11
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/862?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...module/irohad/consensus/yac/yac\_sunny\_day\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3N1bm55X2RheV90ZXN0LmNwcA==) | `15.17% <0%> (-0.33%)` | :arrow_down: |
| [...irohad/consensus/yac/yac\_simple\_cold\_case\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3NpbXBsZV9jb2xkX2Nhc2VfdGVzdC5jcHA=) | `6.57% <0%> (ø)` | :arrow_up: |
| [irohad/consensus/yac/messages.hpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvbWVzc2FnZXMuaHBw) | `81.81% <100%> (+4.89%)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac.cpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWMuY3Bw) | `32.55% <25%> (+0.85%)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGVfdGVzdC5jcHA=) | `28.12% <25%> (-2.18%)` | :arrow_down: |
| [...le/irohad/consensus/yac/yac\_block\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2Jsb2NrX3N0b3JhZ2VfdGVzdC5jcHA=) | `15.38% <30%> (+3.75%)` | :arrow_up: |
| [...irohad/consensus/yac/yac\_proposal\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3Byb3Bvc2FsX3N0b3JhZ2VfdGVzdC5jcHA=) | `41.46% <45.45%> (+3.68%)` | :arrow_up: |
| [...ohad/consensus/yac/transport/impl/network\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmNwcA==) | `25% <50%> (ø)` | :arrow_up: |
| [...onsensus/yac/storage/impl/yac\_proposal\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY19wcm9wb3NhbF9zdG9yYWdlLmNwcA==) | `67.64% <61.9%> (+2.94%)` | :arrow_up: |
| [libs/common/visitor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vdmlzaXRvci5ocHA=) | `75% <75%> (ø)` | |
| ... and [1 more](https://codecov.io/gh/hyperledger/iroha/pull/862/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/862?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/862?src=pr&el=footer). Last update [9b926ac...dbe039d](https://codecov.io/gh/hyperledger/iroha/pull/862?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-16 07:02:24,2018-01-18 07:23:36
https://api.github.com/repos/hyperledger/iroha/issues/862,https://api.github.com/repos/hyperledger/iroha/issues/comments/358560071,https://github.com/hyperledger/iroha/pull/862#issuecomment-358560071,sorabot,"SonarQube analysis reported 20 issues
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 17 info

#### Top 10 issues

1. ![MINOR][MINOR] [yac.cpp#L48](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/impl/yac.cpp#L48): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.cpp#L58](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/impl/yac.cpp#L58): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.cpp#L215](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/impl/yac.cpp#L215): Define a constant instead of duplicating this literal ""Reject case on hash {} achieved"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [yac.cpp#L170](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/impl/yac.cpp#L170): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [yac.cpp#L181](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/impl/yac.cpp#L181): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [messages.hpp#L34](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/messages.hpp#L34): Undocumented API: hash [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [messages.hpp#L35](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/messages.hpp#L35): Undocumented API: signature [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [messages.hpp#L38](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/messages.hpp#L38): Undocumented API: signature [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [messages.hpp#L51](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/messages.hpp#L51): Undocumented API: CommitMessage [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [messages.hpp#L54](https://github.com/hyperledger/iroha/blob/dbe039d4e6304437bc2395e8b1d4708acbefa9bd/irohad/consensus/yac/messages.hpp#L54): Undocumented API: votes [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-18 07:23:06,2018-01-18 07:23:06
https://api.github.com/repos/hyperledger/iroha/issues/860,https://api.github.com/repos/hyperledger/iroha/issues/comments/357694591,https://github.com/hyperledger/iroha/pull/860#issuecomment-357694591,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/860?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@14af845`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `37.5%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/860/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/860?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #860   +/-   ##
==========================================
  Coverage           ?   30.96%           
==========================================
  Files              ?      463           
  Lines              ?    14071           
  Branches           ?     9099           
==========================================
  Hits               ?     4357           
  Misses             ?     1458           
  Partials           ?     8256
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/860?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/datetime/time.hpp](https://codecov.io/gh/hyperledger/iroha/pull/860/diff?src=pr&el=tree#diff-bGlicy9kYXRldGltZS90aW1lLmhwcA==) | `100% <ø> (ø)` | |
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/860/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `42.16% <37.5%> (ø)` | |
| [...e/shared\_model/validators/field\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/860/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `44.52% <37.5%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/860?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/860?src=pr&el=footer). Last update [14af845...0b7d7df](https://codecov.io/gh/hyperledger/iroha/pull/860?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-15 14:16:47,2018-01-19 10:36:53
https://api.github.com/repos/hyperledger/iroha/issues/860,https://api.github.com/repos/hyperledger/iroha/issues/comments/358928826,https://github.com/hyperledger/iroha/pull/860#issuecomment-358928826,sorabot,"SonarQube analysis reported 37 issues
* ![INFO][INFO] 37 info

#### Top 10 issues

1. ![INFO][INFO] [time.hpp#L46](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/libs/datetime/time.hpp#L46): Undocumented API: time_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L42](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/shared_model/validators/field_validator.hpp#L42): Undocumented API: FieldValidator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L42](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/shared_model/validators/field_validator.hpp#L42): Class 'FieldValidator' has a constructor with 1 argument that is not explicit. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoExplicitConstructor)
1. ![INFO][INFO] [field_validator.hpp#L53](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/shared_model/validators/field_validator.hpp#L53): Undocumented API: message [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L57](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/shared_model/validators/field_validator.hpp#L57): Undocumented API: push_back [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L65](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/shared_model/validators/field_validator.hpp#L65): Undocumented API: message [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L69](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/shared_model/validators/field_validator.hpp#L69): Undocumented API: push_back [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L73](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/shared_model/validators/field_validator.hpp#L73): Undocumented API: validateAmount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L84](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/shared_model/validators/field_validator.hpp#L84): Undocumented API: validatePubkey [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L100](https://github.com/hyperledger/iroha/blob/0b7d7dfdcfb48403e5a72926f9510d0c796666c2/shared_model/validators/field_validator.hpp#L100): Undocumented API: message [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-19 10:36:48,2018-01-19 10:36:48
https://api.github.com/repos/hyperledger/iroha/issues/859,https://api.github.com/repos/hyperledger/iroha/issues/comments/357502324,https://github.com/hyperledger/iroha/pull/859#issuecomment-357502324,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/859?src=pr&el=h1) Report
> Merging [#859](https://codecov.io/gh/hyperledger/iroha/pull/859?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/e6f3d0d31140cc42eddf8ad60daa4316d0222ab0?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `26.47%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/859/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/859?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #859      +/-   ##
==========================================
- Coverage    31.01%     31%   -0.02%     
==========================================
  Files          464     464              
  Lines        14143   14172      +29     
  Branches      9166    9188      +22     
==========================================
+ Hits          4387    4394       +7     
  Misses        1425    1425              
- Partials      8331    8353      +22
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/859?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/consensus/yac/impl/peer\_orderer\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/859/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9wZWVyX29yZGVyZXJfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/yac\_peer\_orderer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/859/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3BlZXJfb3JkZXJlci5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/859/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX21vY2tzLmhwcA==) | `42.46% <100%> (+1.36%)` | :arrow_up: |
| [irohad/consensus/yac/impl/peer\_orderer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/859/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9wZWVyX29yZGVyZXJfaW1wbC5jcHA=) | `41.66% <12.5%> (-29.77%)` | :arrow_down: |
| [.../module/irohad/consensus/yac/peer\_orderer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/859/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvcGVlcl9vcmRlcmVyX3Rlc3QuY3Bw) | `22.22% <28%> (+2.22%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/859?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/859?src=pr&el=footer). Last update [e6f3d0d...106e947](https://codecov.io/gh/hyperledger/iroha/pull/859?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-14 10:32:52,2018-01-20 03:04:56
https://api.github.com/repos/hyperledger/iroha/issues/859,https://api.github.com/repos/hyperledger/iroha/issues/comments/359139924,https://github.com/hyperledger/iroha/pull/859#issuecomment-359139924,sorabot,"SonarQube analysis reported 2 issues

1. ![INFO][INFO] [peer_orderer_impl.hpp#L28](https://github.com/hyperledger/iroha/blob/106e947cef2705a6c3498f84f7b3ec5a8e7fbd9e/irohad/consensus/yac/impl/peer_orderer_impl.hpp#L28): Undocumented API: PeerOrdererImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [peer_orderer_impl.hpp#L30](https://github.com/hyperledger/iroha/blob/106e947cef2705a6c3498f84f7b3ec5a8e7fbd9e/irohad/consensus/yac/impl/peer_orderer_impl.hpp#L30): Undocumented API: PeerOrdererImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-20 02:59:50,2018-01-20 02:59:50
https://api.github.com/repos/hyperledger/iroha/issues/858,https://api.github.com/repos/hyperledger/iroha/issues/comments/357502178,https://github.com/hyperledger/iroha/issues/858#issuecomment-357502178,l4l,"Ensure that related SWIG_* is on (e.g `SWIG_JAVA=ON`) and testing is enabled (`TESTING=ON`)
Build whole project and run `ctest` with related filters (or ""as is"" if you have time), e.g `ctest -R java`
Note also python protobuf generation is broken for now, so you need manually build it via `make python_tests`",2018-01-14 10:28:58,2018-01-14 10:28:58
https://api.github.com/repos/hyperledger/iroha/issues/858,https://api.github.com/repos/hyperledger/iroha/issues/comments/357551654,https://github.com/hyperledger/iroha/issues/858#issuecomment-357551654,motxx,"I tried master and other branch but I cannot find `python_transaction_test` and `python_query_test` .
The result of master branch:
```
iroha@71dde693f7fb:/opt/iroha/build$ make python_tests
[100%] Built target python_tests
iroha@71dde693f7fb:/opt/iroha/build$ ctest -R python_*
Test project /opt/iroha/build
    Start 73: python_transaction_test
1/2 Test #73: python_transaction_test ..........***Failed    0.43 sec
    Start 74: python_query_test
2/2 Test #74: python_query_test ................***Failed    0.42 sec

0% tests passed, 2 tests failed out of 2

Total Test time (real) =   1.17 sec

The following tests FAILED:
	 73 - python_transaction_test (Failed)
	 74 - python_query_test (Failed)
Errors while running CTest
```

CMake diff:
```diff
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 69a0aa6f..86f8e7c9 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -38,9 +38,9 @@ option(PACKAGE_TGZ  ""Create TGZ package""             OFF)
 option(PACKAGE_RPM  ""Create RPM package""             OFF)
 option(PACKAGE_DEB  ""Create DEB package""             OFF)
 option(ENABLE_LIBS_PACKAGING ""Enable libs packaging"" ON)
-option(SWIG_PYTHON  ""Generate Swig Python bindings""  OFF)
-option(SWIG_JAVA    ""Generate Swig Java bindings""    OFF)
-option(SWIG_CSHARP  ""Generate Swig C# bindings""      OFF)
+option(SWIG_PYTHON  ""Generate Swig Python bindings""  ON)
+option(SWIG_JAVA    ""Generate Swig Java bindings""    ON)
+option(SWIG_CSHARP  ""Generate Swig C# bindings""      ON)

 if (NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE Debug)
@@ -56,6 +56,9 @@ if(PACKAGE_TGZ OR PACKAGE_ZIP OR PACKAGE_RPM OR PACKAGE_DEB)
   set(SWIG_JAVA OFF)
 endif()

+set(SWIG_PYTHON ON)
+#set(SWIG_JAVA ON)
+
 message(STATUS ""-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}"")
 message(STATUS ""-DTESTING=${TESTING}"")
 message(STATUS ""-DBENCHMARKING=${BENCHMARKING}"")
```",2018-01-14 23:24:17,2018-01-14 23:24:52
https://api.github.com/repos/hyperledger/iroha/issues/858,https://api.github.com/repos/hyperledger/iroha/issues/comments/357556772,https://github.com/hyperledger/iroha/issues/858#issuecomment-357556772,l4l,"That's strange, may you rerun this test with `--output-on-failure` flag? Just tested at 78f152a8 (aka master), works fine for me. Do you have also python2 installed on your system?

Btw you can set cmake params instead of fixing CMakeLists it's much easier; e.g for python:
`cmake .. -DSWIG_PYTHON=ON`",2018-01-15 00:39:36,2018-01-15 00:39:36
https://api.github.com/repos/hyperledger/iroha/issues/858,https://api.github.com/repos/hyperledger/iroha/issues/comments/357886999,https://github.com/hyperledger/iroha/issues/858#issuecomment-357886999,motxx,"This solution of PR is what I've not reproduced. If I did, I'll report this. 🙇 ",2018-01-16 08:28:16,2018-01-16 08:28:27
https://api.github.com/repos/hyperledger/iroha/issues/858,https://api.github.com/repos/hyperledger/iroha/issues/comments/358969729,https://github.com/hyperledger/iroha/issues/858#issuecomment-358969729,l4l,"Ok, open if you have problem on this",2018-01-19 13:45:00,2018-01-19 13:45:00
https://api.github.com/repos/hyperledger/iroha/issues/857,https://api.github.com/repos/hyperledger/iroha/issues/comments/357492440,https://github.com/hyperledger/iroha/pull/857#issuecomment-357492440,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/857?src=pr&el=h1) Report
> Merging [#857](https://codecov.io/gh/hyperledger/iroha/pull/857?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/eb3384534f5dbc36e0d76ee021c829fe39dfce8d?src=pr&el=desc) will **increase** coverage by `9.07%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/857/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/857?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #857      +/-   ##
===========================================
+ Coverage    31.16%   40.24%   +9.07%     
===========================================
  Files          461      371      -90     
  Lines        13716     7388    -6328     
  Branches      8784     3716    -5068     
===========================================
- Hits          4275     2973    -1302     
+ Misses        1506     1440      -66     
+ Partials      7935     2975    -4960
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/857?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/libs/crypto/hash\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8vaGFzaF90ZXN0LmNwcA==) | | |
| [...le/irohad/consensus/yac/yac\_block\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2Jsb2NrX3N0b3JhZ2VfdGVzdC5jcHA=) | | |
| [test/module/irohad/common/blob\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbW1vbi9ibG9iX2NvbnZlcnRlcl90ZXN0LmNwcA==) | | |
| [test/module/irohad/ametsuchi/flat\_file\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9mbGF0X2ZpbGVfdGVzdC5jcHA=) | | |
| [test/module/shared\_model/reference\_holder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3JlZmVyZW5jZV9ob2xkZXJfdGVzdC5jcHA=) | | |
| [.../module/irohad/consensus/yac/peer\_orderer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvcGVlcl9vcmRlcmVyX3Rlc3QuY3Bw) | | |
| [...st/module/irohad/consensus/yac/yac\_common\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2NvbW1vbl90ZXN0LmNwcA==) | | |
| [test/module/irohad/validation/validation\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vdmFsaWRhdGlvbl9tb2Nrcy5ocHA=) | | |
| [test/module/irohad/model/model\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL21vZGVsX21vY2tzLmhwcA==) | | |
| [...st/module/libs/converter/string\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb252ZXJ0ZXIvc3RyaW5nX2NvbnZlcnRlcl90ZXN0LmNwcA==) | | |
| ... and [80 more](https://codecov.io/gh/hyperledger/iroha/pull/857/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/857?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/857?src=pr&el=footer). Last update [eb33845...7d63ffa](https://codecov.io/gh/hyperledger/iroha/pull/857?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-14 06:50:15,2018-01-16 12:41:24
https://api.github.com/repos/hyperledger/iroha/issues/857,https://api.github.com/repos/hyperledger/iroha/issues/comments/357945163,https://github.com/hyperledger/iroha/pull/857#issuecomment-357945163,l4l,Removed,2018-01-16 12:28:34,2018-01-16 12:28:34
https://api.github.com/repos/hyperledger/iroha/issues/856,https://api.github.com/repos/hyperledger/iroha/issues/comments/357465671,https://github.com/hyperledger/iroha/pull/856#issuecomment-357465671,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/856?src=pr&el=h1) Report
> Merging [#856](https://codecov.io/gh/hyperledger/iroha/pull/856?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d4f4e3ca3351bb92be99be7c3df440dc4bb8738a?src=pr&el=desc) will **increase** coverage by `0.06%`.
> The diff coverage is `37.8%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/856/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/856?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #856      +/-   ##
===========================================
+ Coverage    31.16%   31.22%   +0.06%     
===========================================
  Files          461      462       +1     
  Lines        13716    13766      +50     
  Branches      8784     8816      +32     
===========================================
+ Hits          4275     4299      +24     
+ Misses        1506     1500       -6     
- Partials      7935     7967      +32
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/856?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/crypto/keys\_manager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/856/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/856/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [test/module/libs/crypto/keys\_manager\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/856/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX3Rlc3QuY3Bw) | `34.48% <34.48%> (ø)` | |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/856/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `45.45% <45.83%> (+12.76%)` | :arrow_up: |
| [libs/common/byteutils.hpp](https://codecov.io/gh/hyperledger/iroha/pull/856/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vYnl0ZXV0aWxzLmhwcA==) | `30.76% <0%> (+3.84%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/856?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/856?src=pr&el=footer). Last update [d4f4e3c...7b7d3cd](https://codecov.io/gh/hyperledger/iroha/pull/856?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-13 20:40:10,2018-01-14 06:14:04
https://api.github.com/repos/hyperledger/iroha/issues/856,https://api.github.com/repos/hyperledger/iroha/issues/comments/357491254,https://github.com/hyperledger/iroha/pull/856#issuecomment-357491254,sorabot,"SonarQube analysis reported 8 issues

1. ![MINOR][MINOR] [keys_manager_impl.cpp#L77](https://github.com/hyperledger/iroha/blob/7b7d3cdacb5479ff63033b890f33268c69cab245/libs/crypto/keys_manager_impl.cpp#L77): Missing curly brace. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingCurlyBraces)
1. ![MINOR][MINOR] [keys_manager_impl.cpp#L77](https://github.com/hyperledger/iroha/blob/7b7d3cdacb5479ff63033b890f33268c69cab245/libs/crypto/keys_manager_impl.cpp#L77): Define a constant instead of duplicating this literal "".pub"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [keys_manager_impl.cpp#L78](https://github.com/hyperledger/iroha/blob/7b7d3cdacb5479ff63033b890f33268c69cab245/libs/crypto/keys_manager_impl.cpp#L78): Define a constant instead of duplicating this literal "".priv"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [keys_manager_impl.hpp#L41](https://github.com/hyperledger/iroha/blob/7b7d3cdacb5479ff63033b890f33268c69cab245/libs/crypto/keys_manager_impl.hpp#L41): Unused private function: 'KeysManagerImpl::validate' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [keys_manager_impl.hpp#L49](https://github.com/hyperledger/iroha/blob/7b7d3cdacb5479ff63033b890f33268c69cab245/libs/crypto/keys_manager_impl.hpp#L49): Unused private function: 'KeysManagerImpl::loadFile' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![INFO][INFO] [keys_manager.hpp#L26](https://github.com/hyperledger/iroha/blob/7b7d3cdacb5479ff63033b890f33268c69cab245/libs/crypto/keys_manager.hpp#L26): Undocumented API: KeysManager [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keys_manager_impl.hpp#L27](https://github.com/hyperledger/iroha/blob/7b7d3cdacb5479ff63033b890f33268c69cab245/libs/crypto/keys_manager_impl.hpp#L27): Undocumented API: KeysManagerImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [keys_manager_impl.hpp#L29](https://github.com/hyperledger/iroha/blob/7b7d3cdacb5479ff63033b890f33268c69cab245/libs/crypto/keys_manager_impl.hpp#L29): Undocumented API: KeysManagerImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-14 06:13:54,2018-01-14 06:13:54
https://api.github.com/repos/hyperledger/iroha/issues/855,https://api.github.com/repos/hyperledger/iroha/issues/comments/357453961,https://github.com/hyperledger/iroha/pull/855#issuecomment-357453961,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/855?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@04fa3ca`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `23.07%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/855/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/855?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #855   +/-   ##
==========================================
  Coverage           ?   31.15%           
==========================================
  Files              ?      463           
  Lines              ?    13823           
  Branches           ?     8875           
==========================================
  Hits               ?     4306           
  Misses             ?     1484           
  Partials           ?     8033
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/855?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/flat\_file/flat\_file.hpp](https://codecov.io/gh/hyperledger/iroha/pull/855/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuaHBw) | `100% <ø> (ø)` | |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/855/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `22.5% <0%> (ø)` | |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/855/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `27.06% <0%> (ø)` | |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/855/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `30.88% <0%> (ø)` | |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/855/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `47.43% <55.26%> (ø)` | |
| [test/module/irohad/ametsuchi/flat\_file\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/855/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9mbGF0X2ZpbGVfdGVzdC5jcHA=) | `16.21% <8.45%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/855?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/855?src=pr&el=footer). Last update [04fa3ca...c604835](https://codecov.io/gh/hyperledger/iroha/pull/855?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-13 17:59:33,2018-01-17 12:14:17
https://api.github.com/repos/hyperledger/iroha/issues/855,https://api.github.com/repos/hyperledger/iroha/issues/comments/357663666,https://github.com/hyperledger/iroha/pull/855#issuecomment-357663666,neewy,">Maximum coverage.
>Merging #855 into develop will increase coverage by 0.03%.

😭 ",2018-01-15 12:01:00,2018-01-15 12:01:00
https://api.github.com/repos/hyperledger/iroha/issues/855,https://api.github.com/repos/hyperledger/iroha/issues/comments/357667567,https://github.com/hyperledger/iroha/pull/855#issuecomment-357667567,x3medima17,">Maximum coverage.
>Merging #855 into develop will increase coverage by 0.03%.

>😭

![image](https://user-images.githubusercontent.com/750115/34942125-0f2ab8da-f9ff-11e7-898d-1a7867850470.png)
 ",2018-01-15 12:19:19,2018-01-15 12:19:19
https://api.github.com/repos/hyperledger/iroha/issues/855,https://api.github.com/repos/hyperledger/iroha/issues/comments/358286002,https://github.com/hyperledger/iroha/pull/855#issuecomment-358286002,sorabot,"SonarQube analysis reported 7 issues

1. ![MINOR][MINOR] [storage_impl.cpp#L30](https://github.com/hyperledger/iroha/blob/c60483555a19e107feeb05c08e5cc4367f7d618d/irohad/ametsuchi/impl/storage_impl.cpp#L30): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [storage_impl.cpp#L58](https://github.com/hyperledger/iroha/blob/c60483555a19e107feeb05c08e5cc4367f7d618d/irohad/ametsuchi/impl/storage_impl.cpp#L58): Define a constant instead of duplicating this literal ""Cannot create CommandExecutorFactory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L67](https://github.com/hyperledger/iroha/blob/c60483555a19e107feeb05c08e5cc4367f7d618d/irohad/ametsuchi/impl/storage_impl.cpp#L67): Define a constant instead of duplicating this literal ""Connection to PostgreSQL broken: {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L71](https://github.com/hyperledger/iroha/blob/c60483555a19e107feeb05c08e5cc4367f7d618d/irohad/ametsuchi/impl/storage_impl.cpp#L71): Define a constant instead of duplicating this literal ""TemporaryWsv"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [flat_file.cpp#L94](https://github.com/hyperledger/iroha/blob/c60483555a19e107feeb05c08e5cc4367f7d618d/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L94): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [flat_file.hpp#L74](https://github.com/hyperledger/iroha/blob/c60483555a19e107feeb05c08e5cc4367f7d618d/irohad/ametsuchi/impl/flat_file/flat_file.hpp#L74): Undocumented API: DIGIT_CAPACITY [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [flat_file.hpp#L108](https://github.com/hyperledger/iroha/blob/c60483555a19e107feeb05c08e5cc4367f7d618d/irohad/ametsuchi/impl/flat_file/flat_file.hpp#L108): Undocumented API: dropAll [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-17 12:10:58,2018-01-17 12:10:58
https://api.github.com/repos/hyperledger/iroha/issues/854,https://api.github.com/repos/hyperledger/iroha/issues/comments/357437662,https://github.com/hyperledger/iroha/pull/854#issuecomment-357437662,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/854?src=pr&el=h1) Report
> Merging [#854](https://codecov.io/gh/hyperledger/iroha/pull/854?src=pr&el=desc) into [trunk/integration-test-framework](https://codecov.io/gh/hyperledger/iroha/commit/54ef81753805251bbf6a14970a461aa232bbdd36?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `17.64%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/854/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/854?src=pr&el=tree)

```diff
@@                         Coverage Diff                          @@
##           trunk/integration-test-framework     #854      +/-   ##
====================================================================
+ Coverage                             31.18%   31.18%   +<.01%     
====================================================================
  Files                                   465      464       -1     
  Lines                                 13897    13915      +18     
  Branches                               8863     8869       +6     
====================================================================
+ Hits                                   4334     4340       +6     
+ Misses                                 1589     1585       -4     
- Partials                               7974     7990      +16
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/854?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...tegration\_framework/integration\_test\_framework.cpp](https://codecov.io/gh/hyperledger/iroha/pull/854/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmNwcA==) | `44.89% <0%> (+7.6%)` | :arrow_up: |
| [...tegration\_framework/integration\_test\_framework.hpp](https://codecov.io/gh/hyperledger/iroha/pull/854/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2ludGVncmF0aW9uX3Rlc3RfZnJhbWV3b3JrLmhwcA==) | `13.46% <13.04%> (+7%)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/854/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `26.08% <30%> (+0.66%)` | :arrow_up: |
| [...framework/integration\_framework/iroha\_instance.hpp](https://codecov.io/gh/hyperledger/iroha/pull/854/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvaW50ZWdyYXRpb25fZnJhbWV3b3JrL2lyb2hhX2luc3RhbmNlLmhwcA==) | `65.62% <0%> (-2.03%)` | :arrow_down: |
| [test/integration/pipeline/test\_irohad.hpp](https://codecov.io/gh/hyperledger/iroha/pull/854/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90ZXN0X2lyb2hhZC5ocHA=) | | |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/854/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `36.84% <0%> (+6.07%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/854?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/854?src=pr&el=footer). Last update [54ef817...ca57b0b](https://codecov.io/gh/hyperledger/iroha/pull/854?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-13 14:01:29,2018-01-21 17:30:30
https://api.github.com/repos/hyperledger/iroha/issues/854,https://api.github.com/repos/hyperledger/iroha/issues/comments/359018989,https://github.com/hyperledger/iroha/pull/854#issuecomment-359018989,Warchant,"And please, use PR template :)",2018-01-19 16:33:28,2018-01-19 16:33:28
https://api.github.com/repos/hyperledger/iroha/issues/854,https://api.github.com/repos/hyperledger/iroha/issues/comments/359172418,https://github.com/hyperledger/iroha/pull/854#issuecomment-359172418,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [integration_test_framework.cpp#L90](https://github.com/hyperledger/iroha/blob/ca57b0bb16ce7715c29fd707294f28d4d3e65a8f/test/framework/integration_framework/integration_test_framework.cpp#L90): The function 'skipProposal' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [integration_test_framework.cpp#L95](https://github.com/hyperledger/iroha/blob/ca57b0bb16ce7715c29fd707294f28d4d3e65a8f/test/framework/integration_framework/integration_test_framework.cpp#L95): The function 'skipBlock' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-20 13:42:30,2018-01-20 13:42:30
https://api.github.com/repos/hyperledger/iroha/issues/854,https://api.github.com/repos/hyperledger/iroha/issues/comments/359265176,https://github.com/hyperledger/iroha/pull/854#issuecomment-359265176,l4l,Merged in <s>e14e8d5c3</s> dac9a4a,2018-01-21 17:30:24,2018-01-22 14:39:02
https://api.github.com/repos/hyperledger/iroha/issues/853,https://api.github.com/repos/hyperledger/iroha/issues/comments/357631338,https://github.com/hyperledger/iroha/pull/853#issuecomment-357631338,neewy,"Do we need to update the docs?
",2018-01-15 09:44:59,2018-01-15 09:44:59
https://api.github.com/repos/hyperledger/iroha/issues/852,https://api.github.com/repos/hyperledger/iroha/issues/comments/357431526,https://github.com/hyperledger/iroha/pull/852#issuecomment-357431526,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/852?src=pr&el=h1) Report
> Merging [#852](https://codecov.io/gh/hyperledger/iroha/pull/852?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/ffc24f920dd3a09b1fe0b605c570dcc0f23ff223?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/852/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/852?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #852   +/-   ##
========================================
  Coverage    31.16%   31.16%           
========================================
  Files          461      461           
  Lines        13716    13716           
  Branches      8784     8784           
========================================
  Hits          4275     4275           
  Misses        1506     1506           
  Partials      7935     7935
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/852?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/852?src=pr&el=footer). Last update [ffc24f9...9346046](https://codecov.io/gh/hyperledger/iroha/pull/852?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-13 12:30:06,2018-01-15 13:55:11
https://api.github.com/repos/hyperledger/iroha/issues/852,https://api.github.com/repos/hyperledger/iroha/issues/comments/357631880,https://github.com/hyperledger/iroha/pull/852#issuecomment-357631880,muratovv,"Pls, fix DCO.",2018-01-15 09:47:08,2018-01-15 09:47:08
https://api.github.com/repos/hyperledger/iroha/issues/851,https://api.github.com/repos/hyperledger/iroha/issues/comments/357429657,https://github.com/hyperledger/iroha/pull/851#issuecomment-357429657,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/851?src=pr&el=h1) Report
> Merging [#851](https://codecov.io/gh/hyperledger/iroha/pull/851?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/da80e000094bf1c5b58d8c1da9db84dda72c5a0f?src=pr&el=desc) will **decrease** coverage by `0.07%`.
> The diff coverage is `21.79%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/851/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/851?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #851      +/-   ##
===========================================
- Coverage    31.15%   31.07%   -0.08%     
===========================================
  Files          463      463              
  Lines        13823    13852      +29     
  Branches      8875     8906      +31     
===========================================
- Hits          4306     4305       -1     
  Misses        1484     1484              
- Partials      8033     8063      +30
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/851?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/consensus/yac/impl/peer\_orderer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9wZWVyX29yZGVyZXJfaW1wbC5jcHA=) | `71.42% <ø> (ø)` | :arrow_up: |
| [...ule/irohad/consensus/yac/yac\_unknown\_peer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3Vua25vd25fcGVlcl90ZXN0LmNwcA==) | `9.52% <0%> (-0.24%)` | :arrow_down: |
| [test/integration/consensus/consensus\_sunny\_day.cpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jb25zZW5zdXMvY29uc2Vuc3VzX3N1bm55X2RheS5jcHA=) | `35.52% <0%> (-3.92%)` | :arrow_down: |
| [...irohad/consensus/yac/yac\_simple\_cold\_case\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3NpbXBsZV9jb2xkX2Nhc2VfdGVzdC5jcHA=) | `6.57% <0%> (-0.47%)` | :arrow_down: |
| [...module/irohad/consensus/yac/yac\_sunny\_day\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3N1bm55X2RheV90ZXN0LmNwcA==) | `15.49% <0%> (-3.66%)` | :arrow_down: |
| [test/module/irohad/consensus/yac/yac\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2dhdGVfdGVzdC5jcHA=) | `30.3% <0%> (ø)` | :arrow_up: |
| [irohad/consensus/yac/cluster\_order.hpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlci5ocHA=) | `83.33% <100%> (+8.33%)` | :arrow_up: |
| [...module/irohad/consensus/yac/cluster\_order\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlcl90ZXN0LmNwcA==) | `17.64% <17.64%> (+7.64%)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX21vY2tzLmhwcA==) | `41.66% <54.54%> (-5.4%)` | :arrow_down: |
| [irohad/consensus/yac/impl/cluster\_order.cpp](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9jbHVzdGVyX29yZGVyLmNwcA==) | `93.33% <80%> (-6.67%)` | :arrow_down: |
| ... and [1 more](https://codecov.io/gh/hyperledger/iroha/pull/851/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/851?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/851?src=pr&el=footer). Last update [da80e00...c7195dd](https://codecov.io/gh/hyperledger/iroha/pull/851?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-13 11:58:54,2018-01-17 12:41:29
https://api.github.com/repos/hyperledger/iroha/issues/851,https://api.github.com/repos/hyperledger/iroha/issues/comments/357502216,https://github.com/hyperledger/iroha/pull/851#issuecomment-357502216,l4l,Some test also is nice to add here,2018-01-14 10:29:59,2018-01-14 10:30:14
https://api.github.com/repos/hyperledger/iroha/issues/851,https://api.github.com/repos/hyperledger/iroha/issues/comments/358217627,https://github.com/hyperledger/iroha/pull/851#issuecomment-358217627,sorabot,"SonarQube analysis reported 3 issues

1. ![INFO][INFO] [cluster_order.hpp#L57](https://github.com/hyperledger/iroha/blob/14ae8fa0ede72c5622324868a29212e80960da77/irohad/consensus/yac/cluster_order.hpp#L57): Undocumented API: getPeers [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cluster_order.hpp#L61](https://github.com/hyperledger/iroha/blob/14ae8fa0ede72c5622324868a29212e80960da77/irohad/consensus/yac/cluster_order.hpp#L61): Undocumented API: getNumberOfPeers [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [peer_orderer_impl.cpp#L36](https://github.com/hyperledger/iroha/blob/14ae8fa0ede72c5622324868a29212e80960da77/irohad/consensus/yac/impl/peer_orderer_impl.cpp#L36): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-17 07:14:05,2018-01-17 07:14:05
https://api.github.com/repos/hyperledger/iroha/issues/850,https://api.github.com/repos/hyperledger/iroha/issues/comments/357197499,https://github.com/hyperledger/iroha/issues/850#issuecomment-357197499,l4l,May you specify the permission strings at the shared model? I don't remember any of it (also didn't find at the develop),2018-01-12 10:10:10,2018-01-12 10:10:10
https://api.github.com/repos/hyperledger/iroha/issues/850,https://api.github.com/repos/hyperledger/iroha/issues/comments/357198464,https://github.com/hyperledger/iroha/issues/850#issuecomment-357198464,motxx,"Sorry for missing link.
https://github.com/hyperledger/iroha/blob/develop/shared_model/builders/protobuf/transaction.hpp#L213
I think it parses snake_case and converts to protobuf type.",2018-01-12 10:14:14,2018-01-12 10:19:05
https://api.github.com/repos/hyperledger/iroha/issues/850,https://api.github.com/repos/hyperledger/iroha/issues/comments/357210951,https://github.com/hyperledger/iroha/issues/850#issuecomment-357210951,l4l,"Ah, seems so",2018-01-12 11:09:01,2018-01-12 11:09:01
https://api.github.com/repos/hyperledger/iroha/issues/850,https://api.github.com/repos/hyperledger/iroha/issues/comments/357868533,https://github.com/hyperledger/iroha/issues/850#issuecomment-357868533,motxx,"There are more 2 issues:
- I missed `""CanGetDomainTransactions""` permission in `permissions.hpp`
- Domain permissions are not created in protobuf schema, which causes that we cannot parse such permissions.",2018-01-16 06:48:37,2018-01-16 12:59:46
https://api.github.com/repos/hyperledger/iroha/issues/850,https://api.github.com/repos/hyperledger/iroha/issues/comments/363168298,https://github.com/hyperledger/iroha/issues/850#issuecomment-363168298,neewy,"that was fixed partially in https://github.com/hyperledger/iroha/commit/999a1c710dda7936d3cb78b158c536a6ab714232

@l4l can you check if other issues persist (I mean those that are mentioned above by @motxx)?",2018-02-05 18:03:42,2018-02-05 18:03:50
https://api.github.com/repos/hyperledger/iroha/issues/850,https://api.github.com/repos/hyperledger/iroha/issues/comments/363391095,https://github.com/hyperledger/iroha/issues/850#issuecomment-363391095,l4l,"The first issue is still here, though it will work in new one anyway

And I'm not really got the second issue. Which permission are you speaking of?
https://github.com/hyperledger/iroha/blob/0f1d5b522f1e7ed2485f1cd806c96a9a74806912/schema/commands.proto#L38-L41",2018-02-06 11:13:11,2018-02-06 11:13:11
https://api.github.com/repos/hyperledger/iroha/issues/850,https://api.github.com/repos/hyperledger/iroha/issues/comments/375908837,https://github.com/hyperledger/iroha/issues/850#issuecomment-375908837,l4l,Fixed in #921 and some of the following prs,2018-03-24 17:09:20,2018-03-24 17:09:20
https://api.github.com/repos/hyperledger/iroha/issues/849,https://api.github.com/repos/hyperledger/iroha/issues/comments/357179261,https://github.com/hyperledger/iroha/issues/849#issuecomment-357179261,l4l,"Seems that some swig [debian's](https://packages.debian.org/sid/swig) [repo](https://packages.ubuntu.com/bionic/swig) are up-to-date. Moreover it probably may work with older ones
The rest looks good",2018-01-12 08:53:28,2018-01-12 08:53:28
https://api.github.com/repos/hyperledger/iroha/issues/849,https://api.github.com/repos/hyperledger/iroha/issues/comments/357184452,https://github.com/hyperledger/iroha/issues/849#issuecomment-357184452,luckychess,"Just check Swig version, it should be at least 3.0.12. As I remember in our docker apt installs only 3.0.8 which does not support some C++ features we use; in that case you need to download sources for 3.0.12 and build them manually.
Also be careful about use of latest Swig from their master/some_else branch - some of us tried it and faced problems. Unfortunately Swig does not guarantee its master to work.
About CMake - you need at least version 3.8.",2018-01-12 09:15:19,2018-01-12 09:15:19
https://api.github.com/repos/hyperledger/iroha/issues/849,https://api.github.com/repos/hyperledger/iroha/issues/comments/357195744,https://github.com/hyperledger/iroha/issues/849#issuecomment-357195744,neewy,"@motxx please confirm if this helps
",2018-01-12 10:02:38,2018-01-12 10:02:38
https://api.github.com/repos/hyperledger/iroha/issues/849,https://api.github.com/repos/hyperledger/iroha/issues/comments/357197340,https://github.com/hyperledger/iroha/issues/849#issuecomment-357197340,motxx,"Thank you very much.
So you mean swig version is not 4.0, but 3.x might be better, right?
And. thank you for testing with debian's repo.",2018-01-12 10:09:31,2018-01-12 10:09:31
https://api.github.com/repos/hyperledger/iroha/issues/849,https://api.github.com/repos/hyperledger/iroha/issues/comments/357198388,https://github.com/hyperledger/iroha/issues/849#issuecomment-357198388,l4l,"Sorry, what do you mean by 4.0 version of swig?
![screenshot_20180112_131049](https://user-images.githubusercontent.com/5658339/34870105-2cb4d852-f79a-11e7-89e6-731c7720b4c2.png)
I personally tested that with 3.0.12-1, probably @luckychess used the same. Can't say anything about the other ones.
I guess we need to state it somewhere",2018-01-12 10:13:56,2018-01-12 10:13:56
https://api.github.com/repos/hyperledger/iroha/issues/849,https://api.github.com/repos/hyperledger/iroha/issues/comments/357206356,https://github.com/hyperledger/iroha/issues/849#issuecomment-357206356,luckychess,"I used plain 3.0.12 on MacOS installed via brew and probably same as @l4l on Linux (can't check it at the moment).
Also our CMake requires at least 3.0.12. Theoretically everything should work even with 3.0.11 (after editing root CMakeLists.txt) but I've never tested it.",2018-01-12 10:48:22,2018-01-12 10:48:22
https://api.github.com/repos/hyperledger/iroha/issues/849,https://api.github.com/repos/hyperledger/iroha/issues/comments/357207426,https://github.com/hyperledger/iroha/issues/849#issuecomment-357207426,motxx,"Okay. About 4.0, it is from master branch build (I checked by `swig -version`)
I understand preferred version is **3.0.12**. Thank you so much.",2018-01-12 10:53:09,2018-01-12 10:53:45
https://api.github.com/repos/hyperledger/iroha/issues/848,https://api.github.com/repos/hyperledger/iroha/issues/comments/357045209,https://github.com/hyperledger/iroha/pull/848#issuecomment-357045209,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/848?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@ea1aa20`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/848/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/848?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #848   +/-   ##
==========================================
  Coverage           ?   31.16%           
==========================================
  Files              ?      461           
  Lines              ?    13716           
  Branches           ?     8784           
==========================================
  Hits               ?     4275           
  Misses             ?     1506           
  Partials           ?     7935
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/848?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/848?src=pr&el=footer). Last update [ea1aa20...1620d57](https://codecov.io/gh/hyperledger/iroha/pull/848?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-11 20:03:22,2018-01-11 21:57:00
https://api.github.com/repos/hyperledger/iroha/issues/846,https://api.github.com/repos/hyperledger/iroha/issues/comments/356889023,https://github.com/hyperledger/iroha/issues/846#issuecomment-356889023,muratovv,Iroha doesn't support multi-ledger techniques. For solving your issue I suggest using a hash of genesis block.,2018-01-11 10:14:56,2018-01-11 10:14:56
https://api.github.com/repos/hyperledger/iroha/issues/846,https://api.github.com/repos/hyperledger/iroha/issues/comments/357855759,https://github.com/hyperledger/iroha/issues/846#issuecomment-357855759,motxx,How to know the addresses of all peers?,2018-01-16 05:13:06,2018-01-16 05:13:06
https://api.github.com/repos/hyperledger/iroha/issues/846,https://api.github.com/repos/hyperledger/iroha/issues/comments/357944985,https://github.com/hyperledger/iroha/issues/846#issuecomment-357944985,neewy,@motxx from which perspective?,2018-01-16 12:27:50,2018-01-16 12:27:50
https://api.github.com/repos/hyperledger/iroha/issues/846,https://api.github.com/repos/hyperledger/iroha/issues/comments/357947597,https://github.com/hyperledger/iroha/issues/846#issuecomment-357947597,motxx,"This is just a quick question. When Iroha scales out a bit in order to use the same ledger in several companies for some use cases, do we need to share some peer information easily with each other?",2018-01-16 12:39:38,2018-01-16 13:03:18
https://api.github.com/repos/hyperledger/iroha/issues/846,https://api.github.com/repos/hyperledger/iroha/issues/comments/359237061,https://github.com/hyperledger/iroha/issues/846#issuecomment-359237061,muratovv,Now we don't have a query for fetching all peers in the ledger.,2018-01-21 10:06:47,2018-01-21 10:06:47
https://api.github.com/repos/hyperledger/iroha/issues/846,https://api.github.com/repos/hyperledger/iroha/issues/comments/375908674,https://github.com/hyperledger/iroha/issues/846#issuecomment-375908674,l4l,Seems resolved,2018-03-24 17:07:23,2018-03-24 17:07:23
https://api.github.com/repos/hyperledger/iroha/issues/845,https://api.github.com/repos/hyperledger/iroha/issues/comments/356676429,https://github.com/hyperledger/iroha/pull/845#issuecomment-356676429,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/845?src=pr&el=h1) Report
> Merging [#845](https://codecov.io/gh/hyperledger/iroha/pull/845?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/60e0a588d9c51f9f772211bf9c55cf486681b50d?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `24.46%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/845/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/845?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #845      +/-   ##
===========================================
- Coverage    31.07%   31.06%   -0.01%     
===========================================
  Files          463      463              
  Lines        13852    13901      +49     
  Branches      8906     8948      +42     
===========================================
+ Hits          4305     4319      +14     
+ Misses        1484     1476       -8     
- Partials      8063     8106      +43
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/845?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/flat\_file/flat\_file.hpp](https://codecov.io/gh/hyperledger/iroha/pull/845/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [test/framework/test\_subscriber.hpp](https://codecov.io/gh/hyperledger/iroha/pull/845/diff?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvdGVzdF9zdWJzY3JpYmVyLmhwcA==) | `62.5% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/flat\_file\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/845/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9mbGF0X2ZpbGVfdGVzdC5jcHA=) | `16.21% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/845/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `19.54% <14.28%> (-2.96%)` | :arrow_down: |
| [irohad/ametsuchi/impl/redis\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/845/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `45.87% <33.33%> (+6.93%)` | :arrow_up: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/845/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `47.43% <44.82%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/845?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/845?src=pr&el=footer). Last update [60e0a58...c613b9a](https://codecov.io/gh/hyperledger/iroha/pull/845?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-10 17:32:28,2018-01-17 17:17:07
https://api.github.com/repos/hyperledger/iroha/issues/845,https://api.github.com/repos/hyperledger/iroha/issues/comments/358317508,https://github.com/hyperledger/iroha/pull/845#issuecomment-358317508,Warchant,"@x3medima17 made these changes in FlatFile:
- declare check_consistency in header
- declare id_to_name in header

I edited this a little bit more:
- moved free functions to static functions of FlatFile class
- fixed all tests

Now it can be reviewed",2018-01-17 14:17:30,2018-01-17 14:17:30
https://api.github.com/repos/hyperledger/iroha/issues/845,https://api.github.com/repos/hyperledger/iroha/issues/comments/358375533,https://github.com/hyperledger/iroha/pull/845#issuecomment-358375533,sorabot,"SonarQube analysis reported 3 issues

1. ![INFO][INFO] [flat_file.cpp#L54](https://github.com/hyperledger/iroha/blob/c613b9a0f9c65601e15fd988c57baa3e4241e002/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L54): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [flat_file.hpp#L51](https://github.com/hyperledger/iroha/blob/c613b9a0f9c65601e15fd988c57baa3e4241e002/irohad/ametsuchi/impl/flat_file/flat_file.hpp#L51): Undocumented API: DIGIT_CAPACITY [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [flat_file.hpp#L109](https://github.com/hyperledger/iroha/blob/c613b9a0f9c65601e15fd988c57baa3e4241e002/irohad/ametsuchi/impl/flat_file/flat_file.hpp#L109): Undocumented API: dropAll [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-17 17:15:16,2018-01-17 17:15:16
https://api.github.com/repos/hyperledger/iroha/issues/844,https://api.github.com/repos/hyperledger/iroha/issues/comments/356590277,https://github.com/hyperledger/iroha/pull/844#issuecomment-356590277,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/844?src=pr&el=h1) Report
> Merging [#844](https://codecov.io/gh/hyperledger/iroha/pull/844?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/bcbb372462430e57754491ebfc711f9d9953624b?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/844/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/844?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #844   +/-   ##
=======================================
  Coverage     30.9%   30.9%           
=======================================
  Files          460     460           
  Lines        13533   13533           
  Branches      8673    8673           
=======================================
  Hits          4183    4183           
  Misses        1508    1508           
  Partials      7842    7842
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/844?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/844?src=pr&el=footer). Last update [bcbb372...bf14804](https://codecov.io/gh/hyperledger/iroha/pull/844?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-10 12:37:12,2018-01-10 12:37:12
https://api.github.com/repos/hyperledger/iroha/issues/843,https://api.github.com/repos/hyperledger/iroha/issues/comments/356415496,https://github.com/hyperledger/iroha/pull/843#issuecomment-356415496,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/843?src=pr&el=h1) Report
> Merging [#843](https://codecov.io/gh/hyperledger/iroha/pull/843?src=pr&el=desc) into [feature/validation_better_message](https://codecov.io/gh/hyperledger/iroha/commit/6641cd0a19eee5dc987dacbab7cb753397cbf55f?src=pr&el=desc) will **decrease** coverage by `0.35%`.
> The diff coverage is `51.35%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/843/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/843?src=pr&el=tree)

```diff
@@                          Coverage Diff                          @@
##           feature/validation_better_message     #843      +/-   ##
=====================================================================
- Coverage                              31.52%   31.16%   -0.36%     
=====================================================================
  Files                                    461      461              
  Lines                                  13820    13716     -104     
  Branches                                8772     8784      +12     
=====================================================================
- Hits                                    4357     4275      -82     
+ Misses                                  1535     1506      -29     
- Partials                                7928     7935       +7
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/843?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...e/shared\_model/validators/field\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/843/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `43.6% <51.35%> (-15.47%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/843?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/843?src=pr&el=footer). Last update [6641cd0...354a40e](https://codecov.io/gh/hyperledger/iroha/pull/843?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-09 21:12:09,2018-01-09 21:12:09
https://api.github.com/repos/hyperledger/iroha/issues/842,https://api.github.com/repos/hyperledger/iroha/issues/comments/356329414,https://github.com/hyperledger/iroha/pull/842#issuecomment-356329414,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/842?src=pr&el=h1) Report
> Merging [#842](https://codecov.io/gh/hyperledger/iroha/pull/842?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c10e4c132e02fe564056f6f65f43b51c04f57388?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/842/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/842?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #842   +/-   ##
=======================================
  Coverage     30.9%   30.9%           
=======================================
  Files          460     460           
  Lines        13533   13533           
  Branches      8673    8673           
=======================================
  Hits          4183    4183           
  Misses        1508    1508           
  Partials      7842    7842
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/842?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/842?src=pr&el=footer). Last update [c10e4c1...28a5c2b](https://codecov.io/gh/hyperledger/iroha/pull/842?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-09 16:06:54,2018-01-09 16:06:54
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/356217491,https://github.com/hyperledger/iroha/pull/841#issuecomment-356217491,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/841?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/get-transactions-pager-queries@0eea520`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `31.34%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/841/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/841?src=pr&el=tree)

```diff
@@                           Coverage Diff                           @@
##             trunk/get-transactions-pager-queries     #841   +/-   ##
=======================================================================
  Coverage                                        ?   31.64%           
=======================================================================
  Files                                           ?      468           
  Lines                                           ?    14247           
  Branches                                        ?     9133           
=======================================================================
  Hits                                            ?     4509           
  Misses                                          ?     1453           
  Partials                                        ?     8285
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/841?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/converters/impl/pb\_common.cpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9jb21tb24uY3Bw) | `23.07% <ø> (ø)` | |
| [irohad/model/converters/pb\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbW9uLmhwcA==) | `50% <ø> (ø)` | |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | |
| [shared\_model/bindings/model\_query\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuaHBw) | `100% <ø> (ø)` | |
| [shared\_model/bindings/model\_query\_builder.cpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuY3Bw) | `16.66% <0%> (ø)` | |
| [shared\_model/interfaces/common\_objects/pager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvcGFnZXIuaHBw) | `0% <0%> (ø)` | |
| [...rotobuf/queries/proto\_get\_account\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfYWNjb3VudF90cmFuc2FjdGlvbnMuaHBw) | `50% <0%> (ø)` | |
| [...erfaces/queries/get\_account\_asset\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldF90cmFuc2FjdGlvbnMuaHBw) | `0% <0%> (ø)` | |
| [...el/interfaces/queries/get\_account\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF90cmFuc2FjdGlvbnMuaHBw) | `0% <0%> (ø)` | |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `14.28% <0%> (ø)` | |
| ... and [11 more](https://codecov.io/gh/hyperledger/iroha/pull/841/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/841?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/841?src=pr&el=footer). Last update [0eea520...6f57b08](https://codecov.io/gh/hyperledger/iroha/pull/841?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-09 08:44:41,2018-02-01 05:55:02
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/356520003,https://github.com/hyperledger/iroha/pull/841#issuecomment-356520003,motxx,"Exception throws when `makeOldModel()` in transaction is called.
Exception is from `blob_t::from_string()` called `Signature::makeOldModel()`

To create tests of APIs, I think integration tests for all commands/queries are needed but I can't do it with shared model because of this exception.
  
**UPDATE**: I found the cause of the bug. will fix soon.",2018-01-10 07:17:42,2018-01-13 13:44:12
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/357213145,https://github.com/hyperledger/iroha/pull/841#issuecomment-357213145,motxx,"> I think it's better refactor shared_model hierarchy so that Query class is derived from Pager and pager has some usefull stuff so all queries able to call it

<strike>Maybe this doesn't affect I/F for swig bindings, so</strike> maybe should it be solved in later PR?",2018-01-12 11:20:02,2018-01-12 16:06:12
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/357278669,https://github.com/hyperledger/iroha/pull/841#issuecomment-357278669,l4l,I don't really think that will cause any troubles with swig. But other pr sound good for me anyway so decide on your own or someone other may state their opinions,2018-01-12 16:03:53,2018-01-12 16:03:53
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/357411563,https://github.com/hyperledger/iroha/pull/841#issuecomment-357411563,motxx,"Note: Sonar reported some *Undocumented API* issues, but they are very trivial functions and these docs are not included in other APIs.",2018-01-13 05:30:55,2018-01-13 05:30:55
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/357434897,https://github.com/hyperledger/iroha/pull/841#issuecomment-357434897,motxx,"> other pr sound good for me anyway so decide on your own or someone other may state their opinions

I think it's good to generalize inheritance hierarchy of `Pager`. e.g. Query -> Pager -> GetSomeTransactions later.",2018-01-13 13:23:50,2018-01-13 13:23:50
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/357437178,https://github.com/hyperledger/iroha/pull/841#issuecomment-357437178,l4l,Why not Pager -> Query -> ... ?,2018-01-13 13:54:50,2018-01-13 13:54:50
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/357437465,https://github.com/hyperledger/iroha/pull/841#issuecomment-357437465,motxx,"Ah, sorry. I mistook. Pager -> Query is correct (like Mix-in?).
But `Pager` is used for only query of transaction history then I don't know whether it's valid inheritance or not.",2018-01-13 13:59:04,2018-01-13 14:00:21
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/357502903,https://github.com/hyperledger/iroha/pull/841#issuecomment-357502903,motxx,Anything else I have to do?,2018-01-14 10:44:42,2018-01-14 10:44:42
https://api.github.com/repos/hyperledger/iroha/issues/841,https://api.github.com/repos/hyperledger/iroha/issues/comments/362144454,https://github.com/hyperledger/iroha/pull/841#issuecomment-362144454,sorabot,"SonarQube analysis reported 104 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![INFO][INFO] 103 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L60](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/irohad/model/converters/impl/pb_query_factory.cpp#L60): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![INFO][INFO] [pb_common.hpp#L32](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/irohad/model/converters/pb_common.hpp#L32): Undocumented API: serializeAmount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [pb_common.hpp#L33](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/irohad/model/converters/pb_common.hpp#L33): Undocumented API: deserializeAmount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [pb_query_factory.hpp#L53](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/irohad/model/converters/pb_query_factory.hpp#L53): Undocumented API: PbQueryFactory [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [pager.hpp#L48](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/irohad/model/queries/pager.hpp#L48): Undocumented API: limit [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [pager.hpp#L51](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/irohad/model/queries/pager.hpp#L51): Undocumented API: operator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_get_account_transactions.hpp#L29](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/shared_model/backend/protobuf/queries/proto_get_account_transactions.hpp#L29): Undocumented API: GetAccountTransactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_get_account_transactions.hpp#L35](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/shared_model/backend/protobuf/queries/proto_get_account_transactions.hpp#L35): Undocumented API: GetAccountTransactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_get_account_transactions.hpp#L42](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/shared_model/backend/protobuf/queries/proto_get_account_transactions.hpp#L42): Undocumented API: GetAccountTransactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_get_account_transactions.hpp#L45](https://github.com/hyperledger/iroha/blob/6f57b08c76d68e34aa33374c428a2cc38542e242/shared_model/backend/protobuf/queries/proto_get_account_transactions.hpp#L45): Undocumented API: GetAccountTransactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-02-01 03:06:53,2018-02-01 03:06:53
https://api.github.com/repos/hyperledger/iroha/issues/840,https://api.github.com/repos/hyperledger/iroha/issues/comments/355806856,https://github.com/hyperledger/iroha/issues/840#issuecomment-355806856,neewy,"Nice! Thanks, we should check this out.
What about ERC20 tokens?",2018-01-07 08:12:21,2018-01-07 08:12:21
https://api.github.com/repos/hyperledger/iroha/issues/840,https://api.github.com/repos/hyperledger/iroha/issues/comments/355871159,https://github.com/hyperledger/iroha/issues/840#issuecomment-355871159,krasi69,The Counterparty tokens can be converted to Ethereum ERC20 tokens.,2018-01-08 01:48:59,2018-01-08 01:48:59
https://api.github.com/repos/hyperledger/iroha/issues/840,https://api.github.com/repos/hyperledger/iroha/issues/comments/355964428,https://github.com/hyperledger/iroha/issues/840#issuecomment-355964428,takemiyamakoto,Can you please elaborate?,2018-01-08 13:21:15,2018-01-08 13:21:15
https://api.github.com/repos/hyperledger/iroha/issues/840,https://api.github.com/repos/hyperledger/iroha/issues/comments/356152922,https://github.com/hyperledger/iroha/issues/840#issuecomment-356152922,krasi69,I can contribute. You can contact me at Skype : krasi1969 .,2018-01-09 01:40:31,2018-01-09 01:40:31
https://api.github.com/repos/hyperledger/iroha/issues/840,https://api.github.com/repos/hyperledger/iroha/issues/comments/357945126,https://github.com/hyperledger/iroha/issues/840#issuecomment-357945126,neewy,Solution is to open separate repo and continue work in it,2018-01-16 12:28:24,2018-01-16 12:28:24
https://api.github.com/repos/hyperledger/iroha/issues/839,https://api.github.com/repos/hyperledger/iroha/issues/comments/355770047,https://github.com/hyperledger/iroha/pull/839#issuecomment-355770047,Warchant,Do not remove base64,2018-01-06 19:33:29,2018-01-06 19:33:29
https://api.github.com/repos/hyperledger/iroha/issues/839,https://api.github.com/repos/hyperledger/iroha/issues/comments/355770250,https://github.com/hyperledger/iroha/pull/839#issuecomment-355770250,neewy,@Warchant it is used nowhere now,2018-01-06 19:36:18,2018-01-06 19:36:18
https://api.github.com/repos/hyperledger/iroha/issues/839,https://api.github.com/repos/hyperledger/iroha/issues/comments/355770674,https://github.com/hyperledger/iroha/pull/839#issuecomment-355770674,sorabot,"SonarQube analysis reported 22 issues
* ![INFO][INFO] 22 info

#### Top 10 issues

1. ![INFO][INFO] [types.hpp#L42](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L42): Undocumented API: BadFormatException [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L43](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L43): Undocumented API: byte_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L45](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L45): Undocumented API: code [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L92](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L92): Undocumented API: from_string [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L144](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L144): Undocumented API: :: [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L255](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L255): Undocumented API: hash_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L258](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L258): Undocumented API: hash224_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L259](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L259): Undocumented API: hash256_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L260](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L260): Undocumented API: hash384_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L261](https://github.com/hyperledger/iroha/blob/9e1546b539fdc2b3ccae8d6fc221ad8c2637d368/libs/common/types.hpp#L261): Undocumented API: hash512_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-06 19:42:57,2018-01-06 19:42:57
https://api.github.com/repos/hyperledger/iroha/issues/839,https://api.github.com/repos/hyperledger/iroha/issues/comments/355770712,https://github.com/hyperledger/iroha/pull/839#issuecomment-355770712,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/839?src=pr&el=h1) Report
> Merging [#839](https://codecov.io/gh/hyperledger/iroha/pull/839?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/eb0def7b2c42e160da53b6d4f594ee6acc6990dd?src=pr&el=desc) will **decrease** coverage by `0.52%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/839/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/839?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #839      +/-   ##
==========================================
- Coverage    31.43%   30.9%   -0.53%     
==========================================
  Files          464     460       -4     
  Lines        13719   13533     -186     
  Branches      8741    8673      -68     
==========================================
- Hits          4312    4183     -129     
+ Misses        1516    1508       -8     
+ Partials      7891    7842      -49
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/839?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/generator/generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/839/diff?src=pr&el=tree#diff-bGlicy9nZW5lcmF0b3IvZ2VuZXJhdG9yLmNwcA==) | `42.85% <ø> (+9.52%)` | :arrow_up: |
| [test/module/libs/crypto/signature\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/839/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8vc2lnbmF0dXJlX3Rlc3QuY3Bw) | `16.66% <ø> (+6.66%)` | :arrow_up: |
| [libs/generator/generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/839/diff?src=pr&el=tree#diff-bGlicy9nZW5lcmF0b3IvZ2VuZXJhdG9yLmhwcA==) | `80% <ø> (ø)` | :arrow_up: |
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/839/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `74.57% <ø> (-0.84%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/839?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/839?src=pr&el=footer). Last update [eb0def7...9e1546b](https://codecov.io/gh/hyperledger/iroha/pull/839?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-06 19:43:22,2018-01-06 19:43:22
https://api.github.com/repos/hyperledger/iroha/issues/838,https://api.github.com/repos/hyperledger/iroha/issues/comments/355864531,https://github.com/hyperledger/iroha/issues/838#issuecomment-355864531,l4l,"Not really, it's still at the designing stage, look at the #249",2018-01-08 00:09:18,2018-01-08 00:09:18
https://api.github.com/repos/hyperledger/iroha/issues/837,https://api.github.com/repos/hyperledger/iroha/issues/comments/355275441,https://github.com/hyperledger/iroha/pull/837#issuecomment-355275441,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/837?src=pr&el=h1) Report
> Merging [#837](https://codecov.io/gh/hyperledger/iroha/pull/837?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/04fa3ca7d9ec3f2e349d3bfa919e842627509d2e?src=pr&el=desc) will **decrease** coverage by `0.28%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/837/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/837?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #837      +/-   ##
==========================================
- Coverage    31.19%   30.9%   -0.29%     
==========================================
  Files          463     460       -3     
  Lines        13771   13533     -238     
  Branches      8824    8673     -151     
==========================================
- Hits          4296    4183     -113     
- Misses        1500    1508       +8     
+ Partials      7975    7842     -133
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/837?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...d\_model/backend/protobuf/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `15% <0%> (-60%)` | :arrow_down: |
| [...ule/shared\_model/validators/validators\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9yc19maXh0dXJlLmhwcA==) | `42.59% <0%> (-13.58%)` | :arrow_down: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `32.69% <0%> (-12.77%)` | :arrow_down: |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `81.08% <0%> (-5.41%)` | :arrow_down: |
| [libs/common/byteutils.hpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vYnl0ZXV0aWxzLmhwcA==) | `26.92% <0%> (-3.85%)` | :arrow_down: |
| [shared\_model/validators/transaction\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yLmhwcA==) | `48.36% <0%> (-0.06%)` | :arrow_down: |
| [test/module/irohad/consensus/yac/network\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvbmV0d29ya190ZXN0LmNwcA==) | `16% <0%> (ø)` | :arrow_up: |
| [irohad/model/model\_crypto\_provider\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL21vZGVsX2NyeXB0b19wcm92aWRlcl9pbXBsLmhwcA==) | | |
| [...e/shared\_model/validators/field\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yX3Rlc3QuY3Bw) | | |
| [test/module/libs/crypto/keys\_manager\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX3Rlc3QuY3Bw) | | |
| ... and [8 more](https://codecov.io/gh/hyperledger/iroha/pull/837/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/837?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/837?src=pr&el=footer). Last update [04fa3ca...1691c7a](https://codecov.io/gh/hyperledger/iroha/pull/837?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-04 12:55:41,2018-01-26 04:36:28
https://api.github.com/repos/hyperledger/iroha/issues/837,https://api.github.com/repos/hyperledger/iroha/issues/comments/356538062,https://github.com/hyperledger/iroha/pull/837#issuecomment-356538062,sorabot,"SonarQube analysis reported 36 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 14 minor
* ![INFO][INFO] 21 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L52](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/main.cpp#L52): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L98](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/interactive/impl/interactive_query_cli.cpp#L98): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L114](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/interactive/impl/interactive_query_cli.cpp#L114): Define a constant instead of duplicating this literal ""Choose query: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L124](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/interactive/impl/interactive_query_cli.cpp#L124): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_status_cli.cpp#L72](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/interactive/impl/interactive_status_cli.cpp#L72): Define a constant instead of duplicating this literal ""Choose action: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_status_cli.cpp#L77](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/interactive/impl/interactive_status_cli.cpp#L77): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L196](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L196): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L314](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L314): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [main.cpp#L40](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/main.cpp#L40): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L42](https://github.com/hyperledger/iroha/blob/1691c7a08a65ed1207a1d96bd0375d3e1709f80f/iroha-cli/main.cpp#L42): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-10 08:46:54,2018-01-10 08:46:54
https://api.github.com/repos/hyperledger/iroha/issues/836,https://api.github.com/repos/hyperledger/iroha/issues/comments/355290135,https://github.com/hyperledger/iroha/pull/836#issuecomment-355290135,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/836?src=pr&el=h1) Report
> Merging [#836](https://codecov.io/gh/hyperledger/iroha/pull/836?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/2cc84435bdba15f159316dfde04618a2bc07df45?src=pr&el=desc) will **increase** coverage by `0.25%`.
> The diff coverage is `36.61%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/836/graphs/tree.svg?src=pr&width=650&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/836?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #836      +/-   ##
===========================================
+ Coverage     30.9%   31.16%   +0.25%     
===========================================
  Files          460      461       +1     
  Lines        13533    13716     +183     
  Branches      8673     8784     +111     
===========================================
+ Hits          4183     4275      +92     
+ Misses        1508     1506       -2     
- Partials      7842     7935      +93
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/836?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...e/shared\_model/validators/query\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/836/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `42.5% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/consensus/yac/network\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/836/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvbmV0d29ya190ZXN0LmNwcA==) | `16% <0%> (ø)` | :arrow_up: |
| [shared\_model/validators/transaction\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/836/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yLmhwcA==) | `48.41% <10%> (+0.05%)` | :arrow_up: |
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/836/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `41.97% <20%> (-20.99%)` | :arrow_down: |
| [...ed\_model/validators/transaction\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/836/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yX3Rlc3QuY3Bw) | `44.89% <25%> (ø)` | :arrow_up: |
| [...e/shared\_model/validators/field\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/836/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `43.6% <43.6%> (ø)` | |
| [...ule/shared\_model/validators/validators\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/836/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9yc19maXh0dXJlLmhwcA==) | `56.16% <55.26%> (+13.57%)` | :arrow_up: |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/836/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `86.48% <0%> (+5.4%)` | :arrow_up: |
| [...d\_model/backend/protobuf/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/836/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `75% <0%> (+60%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/836?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/836?src=pr&el=footer). Last update [2cc8443...917ac23](https://codecov.io/gh/hyperledger/iroha/pull/836?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-04 14:05:49,2018-01-11 12:06:08
https://api.github.com/repos/hyperledger/iroha/issues/836,https://api.github.com/repos/hyperledger/iroha/issues/comments/355323676,https://github.com/hyperledger/iroha/pull/836#issuecomment-355323676,Warchant,"However, could you also fix minor issues from sorabot?",2018-01-04 16:11:15,2018-01-04 16:11:15
https://api.github.com/repos/hyperledger/iroha/issues/836,https://api.github.com/repos/hyperledger/iroha/issues/comments/356568392,https://github.com/hyperledger/iroha/pull/836#issuecomment-356568392,sorabot,"SonarQube analysis reported 66 issues
* ![INFO][INFO] 66 info

#### Top 10 issues

1. ![INFO][INFO] [field_validator.hpp#L38](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L38): Undocumented API: FieldValidator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L48](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L48): Undocumented API: message [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L52](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L52): Undocumented API: push_back [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L60](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L60): Undocumented API: message [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L64](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L64): Undocumented API: push_back [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L68](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L68): Undocumented API: validateAmount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L79](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L79): Undocumented API: validatePubkey [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L95](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L95): Undocumented API: message [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L99](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L99): Undocumented API: push_back [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [field_validator.hpp#L106](https://github.com/hyperledger/iroha/blob/49e90a7d0533a0b7ebaf5c514fe17934aec855e7/shared_model/validators/field_validator.hpp#L106): Undocumented API: message [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2018-01-10 10:56:05,2018-01-10 10:56:05
https://api.github.com/repos/hyperledger/iroha/issues/835,https://api.github.com/repos/hyperledger/iroha/issues/comments/355155299,https://github.com/hyperledger/iroha/pull/835#issuecomment-355155299,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/835?src=pr&el=h1) Report
> Merging [#835](https://codecov.io/gh/hyperledger/iroha/pull/835?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/f141ba7a86604fffc7fd766c943e3bb6f3e7125c?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/835/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/835?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #835   +/-   ##
========================================
  Coverage    31.43%   31.43%           
========================================
  Files          464      464           
  Lines        13719    13719           
  Branches      8741     8741           
========================================
  Hits          4312     4312           
  Misses        1516     1516           
  Partials      7891     7891
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/835?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/835?src=pr&el=footer). Last update [f141ba7...eb90b33](https://codecov.io/gh/hyperledger/iroha/pull/835?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2018-01-03 23:17:51,2018-01-04 22:07:39
https://api.github.com/repos/hyperledger/iroha/issues/835,https://api.github.com/repos/hyperledger/iroha/issues/comments/355341734,https://github.com/hyperledger/iroha/pull/835#issuecomment-355341734,Warchant,"@elopio please, rebase your branch onto develop to get rid of merge commit:

```bash
git rebase -i origin/develop
```
  ",2018-01-04 17:14:27,2018-01-04 17:14:43
https://api.github.com/repos/hyperledger/iroha/issues/834,https://api.github.com/repos/hyperledger/iroha/issues/comments/355043093,https://github.com/hyperledger/iroha/issues/834#issuecomment-355043093,neewy,"Please upload redis logs somewhere and post the link, it will help a lot, use `sudo tail /var/log/redis/redis-server.log -n 100`
  ",2018-01-03 15:39:52,2018-01-03 15:40:01
https://api.github.com/repos/hyperledger/iroha/issues/834,https://api.github.com/repos/hyperledger/iroha/issues/comments/356835993,https://github.com/hyperledger/iroha/issues/834#issuecomment-356835993,tkyonezu,"Because I was in bed with a cold, the reply was delayed. 
In conclusion, this seems to be not a bug in Iroha.　It is because the host designation of Redis, PostgreSQL in the setting file was wrong and it was not possible to connect.
In order to prove that it is not a problem of Iroha I think that it is good to display a warning message when Iroha can not connect with Redis, PostgreSQL and try again.  Iroha will not be able to connect after retrying, so I think that the warning message will be displayed and it will be easy for the user to understand as well.
",2018-01-11 06:08:06,2018-01-11 06:08:06
https://api.github.com/repos/hyperledger/iroha/issues/834,https://api.github.com/repos/hyperledger/iroha/issues/comments/356896386,https://github.com/hyperledger/iroha/issues/834#issuecomment-356896386,neewy,Glad to hear that there was no bug related to Redis. As for the message it seems to be a good suggestion,2018-01-11 10:43:33,2018-01-11 10:43:33
https://api.github.com/repos/hyperledger/iroha/issues/834,https://api.github.com/repos/hyperledger/iroha/issues/comments/359094355,https://github.com/hyperledger/iroha/issues/834#issuecomment-359094355,Warchant,It seems this issue is resolved. Closing.,2018-01-19 21:30:04,2018-01-19 21:30:04
https://api.github.com/repos/hyperledger/iroha/issues/833,https://api.github.com/repos/hyperledger/iroha/issues/comments/354998473,https://github.com/hyperledger/iroha/issues/833#issuecomment-354998473,strfn,"As @Warchant pointed out in the mailing list the problem is probably caused by a different representation of the signature between the Swift library and the server side.

The swift library represents the keypair and the message signature in base64 while the server side seems to expect those to be in HEX format.
I've also noticed a difference in the length of the private key when trying to convert from one system to another
i.e. the private key generated by Iroha-ios library is double the length of the public key while the keys automatically generated  when setting up the dev environment (e.g. the ones store in the  admin\@test.[pub|priv]) files seems to be of the same length.

Converting the signature to data using base64 encoding avoids the server to crash but still rejecting any query/transaction with the error:
`crypto verification broken` 

For reference see snip of the sign function:

 ```swift

var signature = Iroha_Protocol_Signature()
signature.pubkey = Data(fromHexEncodedString: hexFromB64(keypair.publicKey)!)!
        
//using directly query.payload.textFormatString() as the message to sign leads to the same errror.
let messageToSign = IrohaSwift.sha3_256(message: query.payload.textFormatString())
let proof = IrohaSwift.sign(publicKey: keypair.publicKey, privateKey: keypair.privateKey, message: messageToSign)      
signature.signature = Data(fromHexEncodedString: hexFromB64(proof)!)!

query.signature = signature
```",2018-01-03 12:15:16,2018-01-03 12:15:16
https://api.github.com/repos/hyperledger/iroha/issues/833,https://api.github.com/repos/hyperledger/iroha/issues/comments/361564527,https://github.com/hyperledger/iroha/issues/833#issuecomment-361564527,l4l,"Hey, @strfn! May you recheck that behavior again? I think #920 should partially fix that",2018-01-30 11:25:17,2018-01-30 11:25:17
https://api.github.com/repos/hyperledger/iroha/issues/833,https://api.github.com/repos/hyperledger/iroha/issues/comments/363197221,https://github.com/hyperledger/iroha/issues/833#issuecomment-363197221,neewy,"as shared model is not used in torii, the problem remains. However, we will migrate to shared model in this sprint :)",2018-02-05 19:38:37,2018-02-05 19:38:49
https://api.github.com/repos/hyperledger/iroha/issues/833,https://api.github.com/repos/hyperledger/iroha/issues/comments/375907251,https://github.com/hyperledger/iroha/issues/833#issuecomment-375907251,l4l,"Migrated to the new model, that should be stable for now. Feel free to write here if you still have a similar issue",2018-03-24 16:50:10,2018-03-24 16:50:10
https://api.github.com/repos/hyperledger/iroha/issues/832,https://api.github.com/repos/hyperledger/iroha/issues/comments/354564734,https://github.com/hyperledger/iroha/pull/832#issuecomment-354564734,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/832?src=pr&el=h1) Report
> Merging [#832](https://codecov.io/gh/hyperledger/iroha/pull/832?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/05327406a61a643e018fbe9f4007fe83f60d1668?src=pr&el=desc) will **increase** coverage by `0.48%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/832/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/832?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #832      +/-   ##
===========================================
+ Coverage    30.94%   31.42%   +0.48%     
===========================================
  Files          479      464      -15     
  Lines        14515    13669     -846     
  Branches      9412     8707     -705     
===========================================
- Hits          4491     4296     -195     
- Misses        1466     1518      +52     
+ Partials      8558     7855     -703
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/832?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <0%> (-66.67%)` | :arrow_down: |
| [...d\_model/backend/protobuf/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `15% <0%> (-56.43%)` | :arrow_down: |
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `62.96% <0%> (-37.04%)` | :arrow_down: |
| [irohad/model/converters/impl/pb\_common.cpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9jb21tb24uY3Bw) | `23.07% <0%> (-20.93%)` | :arrow_down: |
| [irohad/consensus/yac/impl/timer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC90aW1lcl9pbXBsLmNwcA==) | `50% <0%> (-20%)` | :arrow_down: |
| [irohad/model/peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3BlZXIuaHBw) | `55.55% <0%> (-17.18%)` | :arrow_down: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `32.69% <0%> (-16%)` | :arrow_down: |
| [...ule/shared\_model/validators/validators\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9yc19maXh0dXJlLmhwcA==) | `42.59% <0%> (-14.56%)` | :arrow_down: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `32.05% <0%> (-11.95%)` | :arrow_down: |
| [irohad/consensus/yac/impl/yac.cpp](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWMuY3Bw) | `31.7% <0%> (-10.66%)` | :arrow_down: |
| ... and [349 more](https://codecov.io/gh/hyperledger/iroha/pull/832/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/832?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/832?src=pr&el=footer). Last update [0532740...cc11d86](https://codecov.io/gh/hyperledger/iroha/pull/832?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-30 19:47:14,2018-02-04 15:31:55
https://api.github.com/repos/hyperledger/iroha/issues/832,https://api.github.com/repos/hyperledger/iroha/issues/comments/364141738,https://github.com/hyperledger/iroha/pull/832#issuecomment-364141738,Warchant,Closing: this PR is outdated. WIP in branch `fix/xcode-build-bogdan`,2018-02-08 15:12:36,2018-02-08 15:12:36
https://api.github.com/repos/hyperledger/iroha/issues/831,https://api.github.com/repos/hyperledger/iroha/issues/comments/367532898,https://github.com/hyperledger/iroha/issues/831#issuecomment-367532898,neewy,"what do you think guys? @luckychess @lebdron 
",2018-02-22 01:07:17,2018-02-22 01:07:17
https://api.github.com/repos/hyperledger/iroha/issues/831,https://api.github.com/repos/hyperledger/iroha/issues/comments/393337795,https://github.com/hyperledger/iroha/issues/831#issuecomment-393337795,l4l,"As reality show the swig interface usually enough, and in fact maintaining additional binding code can be quite messy and inconsistent. Moreover some wrappers around generated bindings can be done by yourself",2018-05-30 22:17:29,2018-05-30 22:17:29
https://api.github.com/repos/hyperledger/iroha/issues/830,https://api.github.com/repos/hyperledger/iroha/issues/comments/354375924,https://github.com/hyperledger/iroha/pull/830#issuecomment-354375924,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/830?src=pr&el=h1) Report
> Merging [#830](https://codecov.io/gh/hyperledger/iroha/pull/830?src=pr&el=desc) into [trunk/get-transactions-pager-queries](https://codecov.io/gh/hyperledger/iroha/commit/9a46621d9ac80af9521042e0f6eef6c509945b59?src=pr&el=desc) will **increase** coverage by `0.04%`.
> The diff coverage is `28.57%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/830/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/830?src=pr&el=tree)

```diff
@@                           Coverage Diff                            @@
##           trunk/get-transactions-pager-queries     #830      +/-   ##
========================================================================
+ Coverage                                 31.64%   31.69%   +0.04%     
========================================================================
  Files                                       468      468              
  Lines                                     14247    14241       -6     
  Branches                                   9133     9123      -10     
========================================================================
+ Hits                                       4509     4513       +4     
  Misses                                     1453     1453              
+ Partials                                   8285     8275      -10
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/830?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...rohad/model/converters/json\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5X3Rlc3QuY3Bw) | `9.74% <ø> (+0.24%)` | :arrow_up: |
| [shared\_model/interfaces/common\_objects/pager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvcGFnZXIuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/queries/pager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcGFnZXIuaHBw) | `66.66% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/query\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9xdWVyeV9nZW5lcmF0b3IuY3Bw) | `67.53% <ø> (+5.19%)` | :arrow_up: |
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `8.53% <0%> (+0.2%)` | :arrow_up: |
| [.../ametsuchi/get\_account\_asset\_transactions\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9nZXRfYWNjb3VudF9hc3NldF90cmFuc2FjdGlvbnNfdGVzdC5jcHA=) | `9.45% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `10.68% <100%> (ø)` | :arrow_up: |
| [.../module/irohad/validation/query\_execution\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vcXVlcnlfZXhlY3V0aW9uX3Rlc3QuY3Bw) | `12.81% <100%> (ø)` | :arrow_up: |
| [...irohad/ametsuchi/get\_account\_transactions\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9nZXRfYWNjb3VudF90cmFuc2FjdGlvbnNfdGVzdC5jcHA=) | `9.58% <40%> (ø)` | :arrow_up: |
| ... and [1 more](https://codecov.io/gh/hyperledger/iroha/pull/830/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/830?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/830?src=pr&el=footer). Last update [9a46621...8e40545](https://codecov.io/gh/hyperledger/iroha/pull/830?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-28 23:49:38,2018-03-24 08:34:44
https://api.github.com/repos/hyperledger/iroha/issues/830,https://api.github.com/repos/hyperledger/iroha/issues/comments/357410931,https://github.com/hyperledger/iroha/pull/830#issuecomment-357410931,motxx,"For the reason of trunk rebasing onto develop, this build cannot because shared model implementation is in https://github.com/hyperledger/iroha/pull/841
So reivew can be done after https://github.com/hyperledger/iroha/pull/841 merged.",2018-01-13 05:15:01,2018-01-13 05:17:37
https://api.github.com/repos/hyperledger/iroha/issues/830,https://api.github.com/repos/hyperledger/iroha/issues/comments/359067073,https://github.com/hyperledger/iroha/pull/830#issuecomment-359067073,Warchant,@motxx please rebase onto develop and fix build.,2018-01-19 19:34:29,2018-01-19 19:34:29
https://api.github.com/repos/hyperledger/iroha/issues/830,https://api.github.com/repos/hyperledger/iroha/issues/comments/360017856,https://github.com/hyperledger/iroha/pull/830#issuecomment-360017856,motxx,"@Warchant 
Field validator for `GetAccountAssetTransaction` cannot be built in this branch and trunk branch because it's implementation is in #841
This branch is waiting for #841 

**UPDATE**
Fixed.",2018-01-24 04:32:00,2018-02-06 05:17:02
https://api.github.com/repos/hyperledger/iroha/issues/830,https://api.github.com/repos/hyperledger/iroha/issues/comments/363341494,https://github.com/hyperledger/iroha/pull/830#issuecomment-363341494,sorabot,"SonarQube analysis reported 24 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 8 minor
* ![INFO][INFO] 15 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [interactive_query_cli.cpp#L130](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/iroha-cli/interactive/impl/interactive_query_cli.cpp#L130): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L105](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/iroha-cli/interactive/impl/interactive_query_cli.cpp#L105): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L122](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/iroha-cli/interactive/impl/interactive_query_cli.cpp#L122): Define a constant instead of duplicating this literal ""Choose query: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [query_generator.cpp#L61](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/irohad/model/generators/impl/query_generator.cpp#L61): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [query_generator.cpp#L69](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/irohad/model/generators/impl/query_generator.cpp#L69): Variable 'creator_account_id' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [query_generator.cpp#L102](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/irohad/model/generators/impl/query_generator.cpp#L102): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [query_generator.cpp#L130](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/irohad/model/generators/impl/query_generator.cpp#L130): Define a constant instead of duplicating this literal ""admin@test"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [query_generator.hpp#L47](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/irohad/model/generators/query_generator.hpp#L47): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [query_generator.hpp#L73](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/irohad/model/generators/query_generator.hpp#L73): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![INFO][INFO] [interactive_query_cli.cpp#L252](https://github.com/hyperledger/iroha/blob/8e405453e7b951a093101335a30cbe85b1f6f07f/iroha-cli/interactive/impl/interactive_query_cli.cpp#L252): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-02-06 08:03:10,2018-02-06 08:03:10
https://api.github.com/repos/hyperledger/iroha/issues/830,https://api.github.com/repos/hyperledger/iroha/issues/comments/363345661,https://github.com/hyperledger/iroha/pull/830#issuecomment-363345661,motxx,This PR is rebased onto trunk and can be reviewed.,2018-02-06 08:22:49,2018-02-06 08:22:49
https://api.github.com/repos/hyperledger/iroha/issues/829,https://api.github.com/repos/hyperledger/iroha/issues/comments/354247285,https://github.com/hyperledger/iroha/issues/829#issuecomment-354247285,kamilsa,"Good day @norihiro-ito !

Thanks for posting your question.

For me it seems that the problem is with precision you set for Add Asset Quantity command. 
From [documentation](https://hyperledger.github.io/iroha-api/#create-asset) you can see that precision is the amount of digits after the comma. 
It was decided that precision for all commands corresponding to the same asset should be the same. I.e. if you created asset with precision 2, you need to add quantity for this asset using the same precision.

I just repeated steps you done, but changed precision in AddAssetQuantity command from 11 to 2 and everything was ok.

Regarding your concern about the timing of schema creation, you can check that it is created when irohad starts for the first time. Schema is hidden in [storage object](https://github.com/hyperledger/iroha/blob/master/irohad/ametsuchi/impl/storage_impl.hpp#L129) which initializes when you run irohad
",2017-12-28 08:03:53,2017-12-28 08:03:53
https://api.github.com/repos/hyperledger/iroha/issues/829,https://api.github.com/repos/hyperledger/iroha/issues/comments/354250619,https://github.com/hyperledger/iroha/issues/829#issuecomment-354250619,norihiro-ito,"@kamilsa. thanks for your help. I could get it.
But I wonder the prompt is ""amount to add"".  So i think it will be values after the decimal point.
Thanks again.",2017-12-28 08:30:56,2017-12-28 08:30:56
https://api.github.com/repos/hyperledger/iroha/issues/829,https://api.github.com/repos/hyperledger/iroha/issues/comments/354590338,https://github.com/hyperledger/iroha/issues/829#issuecomment-354590338,neewy,"However, it is very confusing to pass integer part and then precision. We should improve this in our future implementation of CLI",2017-12-31 07:49:21,2017-12-31 07:49:21
https://api.github.com/repos/hyperledger/iroha/issues/829,https://api.github.com/repos/hyperledger/iroha/issues/comments/355193924,https://github.com/hyperledger/iroha/issues/829#issuecomment-355193924,norihiro-ito,"I think integer part exists for historical reason.
Bitcoin has two units; BTC and satoshi. BTC transactions are managed in satoshi internally.
The reason of precision seems possiblity of denomination in future. ",2018-01-04 04:01:32,2018-01-04 04:01:32
https://api.github.com/repos/hyperledger/iroha/issues/829,https://api.github.com/repos/hyperledger/iroha/issues/comments/362529537,https://github.com/hyperledger/iroha/issues/829#issuecomment-362529537,chenrenjing,"I do all thing follow you,but still get '[09:11:45][th: 1600][error] [QueryResponseHandler] << Account assets not found
'  ,Can u tell why?",2018-02-02 09:13:34,2018-02-02 09:13:34
https://api.github.com/repos/hyperledger/iroha/issues/827,https://api.github.com/repos/hyperledger/iroha/issues/comments/354232495,https://github.com/hyperledger/iroha/issues/827#issuecomment-354232495,neewy,"Exactly, this is inconvenient to type localhost every time. @grimadas do you think we can change it fast?",2017-12-28 05:42:40,2017-12-28 05:42:40
https://api.github.com/repos/hyperledger/iroha/issues/827,https://api.github.com/repos/hyperledger/iroha/issues/comments/378219758,https://github.com/hyperledger/iroha/issues/827#issuecomment-378219758,coderwassananmol,"Hi, I would like to work on this issue. I am working on a patch for this and would revert back shortly.",2018-04-03 11:37:32,2018-04-03 11:37:32
https://api.github.com/repos/hyperledger/iroha/issues/827,https://api.github.com/repos/hyperledger/iroha/issues/comments/398786054,https://github.com/hyperledger/iroha/issues/827#issuecomment-398786054,uditha-atukorala,"@coderwassananmol, are you still working on this? 

Had a quick look and there are already defaults for IP and port but `parseParams` won't allow empty input values ([iroha-cli/interactive/impl/interactive_common_cli.cpp#L127](https://github.com/hyperledger/iroha/blob/5efd87bd0014b54339dd7479192aed582bd31e44/iroha-cli/interactive/impl/interactive_common_cli.cpp#L127)). Happy to send a PR if no one else is working on this.",2018-06-20 15:08:31,2018-06-20 15:08:31
https://api.github.com/repos/hyperledger/iroha/issues/827,https://api.github.com/repos/hyperledger/iroha/issues/comments/399250971,https://github.com/hyperledger/iroha/issues/827#issuecomment-399250971,coderwassananmol,@uditha-atukorala Please feel free to submit PR. :),2018-06-21 21:34:42,2018-06-21 21:34:42
https://api.github.com/repos/hyperledger/iroha/issues/827,https://api.github.com/repos/hyperledger/iroha/issues/comments/454038534,https://github.com/hyperledger/iroha/issues/827#issuecomment-454038534,LiraLemur,"Seems like the PR on the issue has been merged. 
Great job 👍 ",2019-01-14 15:12:33,2019-01-14 15:12:33
https://api.github.com/repos/hyperledger/iroha/issues/826,https://api.github.com/repos/hyperledger/iroha/issues/comments/354377159,https://github.com/hyperledger/iroha/issues/826#issuecomment-354377159,l4l,"Hey, @norihiro-ito! Thanks for filling the issue.

Pass phrase is quite bad name for this imo, consider it as a seed. So this behavior is actually intended.",2017-12-29 00:02:06,2017-12-29 00:11:58
https://api.github.com/repos/hyperledger/iroha/issues/826,https://api.github.com/repos/hyperledger/iroha/issues/comments/354384952,https://github.com/hyperledger/iroha/issues/826#issuecomment-354384952,norihiro-ito,"Hi, @l4l .
yes, pass phrase is seed, I see.
I think iroha should use name + pass + solt for seed at least.
for example, ""foo@abc"" + ""dolphins"" + ""something what""",2017-12-29 01:34:03,2017-12-29 01:34:03
https://api.github.com/repos/hyperledger/iroha/issues/826,https://api.github.com/repos/hyperledger/iroha/issues/comments/366901143,https://github.com/hyperledger/iroha/issues/826#issuecomment-366901143,l4l,Fixed nearly month ago,2018-02-20 08:26:20,2018-02-20 08:26:20
https://api.github.com/repos/hyperledger/iroha/issues/825,https://api.github.com/repos/hyperledger/iroha/issues/comments/354376742,https://github.com/hyperledger/iroha/issues/825#issuecomment-354376742,l4l,"That's strange. Just tried a clean build - works fine for me
May you please remove _build_/_external_ dirs and try to rebuild simply with: `cmake .. && make`",2017-12-28 23:58:37,2017-12-28 23:58:37
https://api.github.com/repos/hyperledger/iroha/issues/825,https://api.github.com/repos/hyperledger/iroha/issues/comments/356198130,https://github.com/hyperledger/iroha/issues/825#issuecomment-356198130,l4l,Fixed,2018-01-09 07:05:31,2018-01-09 07:05:31
https://api.github.com/repos/hyperledger/iroha/issues/823,https://api.github.com/repos/hyperledger/iroha/issues/comments/354139239,https://github.com/hyperledger/iroha/pull/823#issuecomment-354139239,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/823?src=pr&el=h1) Report
> Merging [#823](https://codecov.io/gh/hyperledger/iroha/pull/823?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/acc537fcbde543b6ec641e04b647fd64856a065a?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/823/graphs/tree.svg?token=VEvywEmaef&height=150&width=650&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/823?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #823   +/-   ##
========================================
  Coverage    31.42%   31.42%           
========================================
  Files          464      464           
  Lines        13669    13669           
  Branches      8707     8707           
========================================
  Hits          4296     4296           
  Misses        1518     1518           
  Partials      7855     7855
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/823?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/823?src=pr&el=footer). Last update [acc537f...7ef83d2](https://codecov.io/gh/hyperledger/iroha/pull/823?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-27 16:33:36,2017-12-27 18:19:09
https://api.github.com/repos/hyperledger/iroha/issues/822,https://api.github.com/repos/hyperledger/iroha/issues/comments/354110920,https://github.com/hyperledger/iroha/pull/822#issuecomment-354110920,sorabot,"SonarQube analysis reported 861 issues
* ![CRITICAL][CRITICAL] 7 critical
* ![MINOR][MINOR] 129 minor
* ![INFO][INFO] 725 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [interactive_query_cli.cpp#L123](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/iroha-cli/interactive/impl/interactive_query_cli.cpp#L123): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![CRITICAL][CRITICAL] [interactive_status_cli.cpp#L75](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/iroha-cli/interactive/impl/interactive_status_cli.cpp#L75): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L566](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/irohad/model/converters/impl/pb_command_factory.cpp#L566): The Cyclomatic Complexity of this function is 17 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L56](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/irohad/model/converters/impl/pb_query_factory.cpp#L56): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L26](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/irohad/model/converters/impl/pb_query_response_factory.cpp#L26): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L286](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/irohad/model/converters/impl/pb_query_response_factory.cpp#L286): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L289](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/irohad/model/converters/impl/pb_query_response_factory.cpp#L289): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [query_response_handler.cpp#L99](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/iroha-cli/impl/query_response_handler.cpp#L99): Define a constant instead of duplicating this literal "" {} "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [query_response_handler.cpp#L115](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/iroha-cli/impl/query_response_handler.cpp#L115): Define a constant instead of duplicating this literal ""-Asset Id- {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L98](https://github.com/hyperledger/iroha/blob/ccb9147062c5cf596ff7b184be4fa023e1e052aa/iroha-cli/interactive/impl/interactive_query_cli.cpp#L98): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-27 13:02:38,2017-12-27 13:02:38
https://api.github.com/repos/hyperledger/iroha/issues/821,https://api.github.com/repos/hyperledger/iroha/issues/comments/354111841,https://github.com/hyperledger/iroha/pull/821#issuecomment-354111841,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/821?src=pr&el=h1) Report
> Merging [#821](https://codecov.io/gh/hyperledger/iroha/pull/821?src=pr&el=desc) into [master](https://codecov.io/gh/hyperledger/iroha/commit/19651930fa6851586bfb9f09c3f6f2f3d3a51eaf?src=pr&el=desc) will **decrease** coverage by `11.48%`.
> The diff coverage is `43.93%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/821/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/821?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           master     #821       +/-   ##
===========================================
- Coverage   42.91%   31.42%   -11.49%     
===========================================
  Files         307      464      +157     
  Lines       12478    13669     +1191     
  Branches     6927     8707     +1780     
===========================================
- Hits         5355     4296     -1059     
- Misses        704     1518      +814     
- Partials     6419     7855     +1436
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/821?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...\_model/interfaces/queries/get\_role\_permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfcm9sZV9wZXJtaXNzaW9ucy5ocHA=) | `0% <ø> (ø)` | |
| [libs/generator/generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-bGlicy9nZW5lcmF0b3IvZ2VuZXJhdG9yLmhwcA==) | `80% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/commands/create\_domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY3JlYXRlX2RvbWFpbi5ocHA=) | `0% <ø> (ø)` | |
| [...hared\_model/interfaces/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY3JlYXRlX2FjY291bnQuaHBw) | `0% <ø> (ø)` | |
| [shared\_model/interfaces/commands/detach\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvZGV0YWNoX3JvbGUuaHBw) | `0% <ø> (ø)` | |
| [irohad/model/converters/impl/pb\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9ibG9ja19mYWN0b3J5LmNwcA==) | `45.71% <ø> (+2.47%)` | :arrow_up: |
| [shared\_model/interfaces/commands/command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY29tbWFuZC5ocHA=) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/impl/redis\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/commands/create\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY3JlYXRlX2Fzc2V0LmhwcA==) | `0% <ø> (ø)` | |
| [...rohad/validation/impl/stateless\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWxlc3NfdmFsaWRhdG9yX2ltcGwuY3Bw) | `36.36% <ø> (ø)` | :arrow_up: |
| ... and [368 more](https://codecov.io/gh/hyperledger/iroha/pull/821/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/821?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/821?src=pr&el=footer). Last update [1965193...acc537f](https://codecov.io/gh/hyperledger/iroha/pull/821?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-27 13:10:59,2017-12-27 13:10:59
https://api.github.com/repos/hyperledger/iroha/issues/821,https://api.github.com/repos/hyperledger/iroha/issues/comments/354156610,https://github.com/hyperledger/iroha/pull/821#issuecomment-354156610,neewy,Seem to have troubles with Circle CI. I will close this PR and try to trigger build on new PR.,2017-12-27 18:38:09,2017-12-27 18:38:09
https://api.github.com/repos/hyperledger/iroha/issues/820,https://api.github.com/repos/hyperledger/iroha/issues/comments/354082866,https://github.com/hyperledger/iroha/pull/820#issuecomment-354082866,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/820?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@e9b6f5f`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `45.4%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/820/graphs/tree.svg?height=150&token=VEvywEmaef&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/820?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #820   +/-   ##
==========================================
  Coverage           ?   31.42%           
==========================================
  Files              ?      464           
  Lines              ?    13669           
  Branches           ?     8707           
==========================================
  Hits               ?     4296           
  Misses             ?     1518           
  Partials           ?     7855
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/820?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `81.08% <ø> (ø)` | |
| [shared\_model/bindings/model\_query\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuaHBw) | `100% <ø> (ø)` | |
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `75.4% <ø> (ø)` | |
| [shared\_model/interfaces/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <ø> (ø)` | |
| [shared\_model/builders/protobuf/unsigned\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Vuc2lnbmVkX3Byb3RvLmhwcA==) | `27.27% <ø> (ø)` | |
| [...st/module/libs/converter/string\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb252ZXJ0ZXIvc3RyaW5nX2NvbnZlcnRlcl90ZXN0LmNwcA==) | `7.69% <ø> (ø)` | |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <ø> (ø)` | |
| [libs/generator/generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-bGlicy9nZW5lcmF0b3IvZ2VuZXJhdG9yLmhwcA==) | `80% <ø> (ø)` | |
| [...le/irohad/validation/stateless\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVsZXNzX3ZhbGlkYXRpb25fdGVzdC5jcHA=) | `23.25% <ø> (ø)` | |
| [shared\_model/bindings/model\_query\_builder.cpp](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuY3Bw) | `17.85% <0%> (ø)` | |
| ... and [27 more](https://codecov.io/gh/hyperledger/iroha/pull/820/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/820?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/820?src=pr&el=footer). Last update [e9b6f5f...663c694](https://codecov.io/gh/hyperledger/iroha/pull/820?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-27 09:23:57,2017-12-27 11:03:40
https://api.github.com/repos/hyperledger/iroha/issues/820,https://api.github.com/repos/hyperledger/iroha/issues/comments/354094890,https://github.com/hyperledger/iroha/pull/820#issuecomment-354094890,sorabot,"SonarQube analysis reported 232 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 227 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [interactive_status_cli.cpp#L75](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/iroha-cli/interactive/impl/interactive_status_cli.cpp#L75): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MAJOR][MAJOR] [lazy_initializer.hpp#L91](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/shared_model/utils/lazy_initializer.hpp#L91): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![MINOR][MINOR] [interactive_status_cli.cpp#L72](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/iroha-cli/interactive/impl/interactive_status_cli.cpp#L72): Define a constant instead of duplicating this literal ""Choose action: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [generator.cpp#L29](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/libs/generator/generator.cpp#L29): The function 'random_printable_char' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [model_crypto.cpp#L33](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/shared_model/bindings/model_crypto.cpp#L33): The function 'convertFromExisting' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![INFO][INFO] [byteutils.hpp#L67](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/libs/common/byteutils.hpp#L67): Undocumented API: nonstd [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [byteutils.hpp#L69](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/libs/common/byteutils.hpp#L69): Undocumented API: result [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [byteutils.hpp#L70](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/libs/common/byteutils.hpp#L70): Undocumented API: i [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [byteutils.hpp#L70](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/libs/common/byteutils.hpp#L70): Undocumented API: length [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [byteutils.hpp#L71](https://github.com/hyperledger/iroha/blob/663c69475977e434fa00557391fca834e7785cc3/libs/common/byteutils.hpp#L71): Undocumented API: byte [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-27 10:47:17,2017-12-27 10:47:17
https://api.github.com/repos/hyperledger/iroha/issues/819,https://api.github.com/repos/hyperledger/iroha/issues/comments/354002536,https://github.com/hyperledger/iroha/pull/819#issuecomment-354002536,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/819?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/bindings-test@c57865a`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `45%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/819/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/819?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##             trunk/bindings-test    #819   +/-   ##
=====================================================
  Coverage                       ?   31.6%           
=====================================================
  Files                          ?     458           
  Lines                          ?   13508           
  Branches                       ?    8604           
=====================================================
  Hits                           ?    4269           
  Misses                         ?    1459           
  Partials                       ?    7780
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/819?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/bindings/model\_query\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/819/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuaHBw) | `100% <ø> (ø)` | |
| [...ule/shared\_model/validators/validators\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/819/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9yc19maXh0dXJlLmhwcA==) | `43.39% <ø> (ø)` | |
| [...e/shared\_model/validators/query\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/819/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `42.5% <0%> (ø)` | |
| [shared\_model/bindings/model\_query\_builder.cpp](https://codecov.io/gh/hyperledger/iroha/pull/819/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuY3Bw) | `17.85% <0%> (ø)` | |
| [shared\_model/validators/transaction\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/819/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yLmhwcA==) | `48.36% <0%> (ø)` | |
| [shared\_model/validators/query\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/819/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yLmhwcA==) | `58.46% <0%> (ø)` | |
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/819/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `62.96% <50%> (ø)` | |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/819/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `58.13% <66.66%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/819?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/819?src=pr&el=footer). Last update [c57865a...5e9cb2b](https://codecov.io/gh/hyperledger/iroha/pull/819?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-26 19:12:22,2017-12-26 20:42:04
https://api.github.com/repos/hyperledger/iroha/issues/819,https://api.github.com/repos/hyperledger/iroha/issues/comments/354007784,https://github.com/hyperledger/iroha/pull/819#issuecomment-354007784,sorabot,"SonarQube analysis reported 93 issues
* ![INFO][INFO] 93 info

#### Top 10 issues

1. ![INFO][INFO] [proto_query.hpp#L44](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/backend/protobuf/queries/proto_query.hpp#L44): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L48](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/backend/protobuf/queries/proto_query.hpp#L48): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L50](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/backend/protobuf/queries/proto_query.hpp#L50): Undocumented API: which [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L54](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/backend/protobuf/queries/proto_query.hpp#L54): Undocumented API: shared_model [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L61](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/backend/protobuf/queries/proto_query.hpp#L61): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L92](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/backend/protobuf/queries/proto_query.hpp#L92): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L104](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/backend/protobuf/queries/proto_query.hpp#L104): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L106](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/backend/protobuf/queries/proto_query.hpp#L106): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [model_query_builder.hpp#L37](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/bindings/model_query_builder.hpp#L37): Undocumented API: ModelQueryBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [model_transaction_builder.hpp#L39](https://github.com/hyperledger/iroha/blob/5e9cb2b338dc6d29500387e8171879c8f67656ef/shared_model/bindings/model_transaction_builder.hpp#L39): Undocumented API: ModelTransactionBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-12-26 20:05:23,2017-12-26 20:05:23
https://api.github.com/repos/hyperledger/iroha/issues/818,https://api.github.com/repos/hyperledger/iroha/issues/comments/353929846,https://github.com/hyperledger/iroha/pull/818#issuecomment-353929846,neewy,Thanks!,2017-12-26 07:11:48,2017-12-26 07:11:48
https://api.github.com/repos/hyperledger/iroha/issues/817,https://api.github.com/repos/hyperledger/iroha/issues/comments/353897339,https://github.com/hyperledger/iroha/pull/817#issuecomment-353897339,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/817?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/bindings-test@0d2c833`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/817/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/817?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##             trunk/bindings-test     #817   +/-   ##
======================================================
  Coverage                       ?   31.53%           
======================================================
  Files                          ?      458           
  Lines                          ?    13496           
  Branches                       ?     8598           
======================================================
  Hits                           ?     4256           
  Misses                         ?     1469           
  Partials                       ?     7771
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/817?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/817?src=pr&el=footer). Last update [0d2c833...cb5077f](https://codecov.io/gh/hyperledger/iroha/pull/817?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-26 00:19:28,2017-12-26 19:54:06
https://api.github.com/repos/hyperledger/iroha/issues/816,https://api.github.com/repos/hyperledger/iroha/issues/comments/353877730,https://github.com/hyperledger/iroha/pull/816#issuecomment-353877730,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/816?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/bindings-test@7cd9dea`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/816/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/816?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##             trunk/bindings-test     #816   +/-   ##
======================================================
  Coverage                       ?   31.54%           
======================================================
  Files                          ?      458           
  Lines                          ?    13492           
  Branches                       ?     8597           
======================================================
  Hits                           ?     4256           
  Misses                         ?     1466           
  Partials                       ?     7770
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/816?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/816?src=pr&el=footer). Last update [7cd9dea...94ebc88](https://codecov.io/gh/hyperledger/iroha/pull/816?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-25 16:04:26,2017-12-25 17:25:08
https://api.github.com/repos/hyperledger/iroha/issues/815,https://api.github.com/repos/hyperledger/iroha/issues/comments/353859045,https://github.com/hyperledger/iroha/pull/815#issuecomment-353859045,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/815?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/bindings-test@7cd9dea`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/815/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/815?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##             trunk/bindings-test     #815   +/-   ##
======================================================
  Coverage                       ?   31.69%           
======================================================
  Files                          ?      455           
  Lines                          ?    13419           
  Branches                       ?     8575           
======================================================
  Hits                           ?     4253           
  Misses                         ?     1400           
  Partials                       ?     7766
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/815?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/builders/protobuf/unsigned\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/815/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Vuc2lnbmVkX3Byb3RvLmhwcA==) | `27.27% <ø> (ø)` | |
| [shared\_model/backend/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/815/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb24uaHBw) | `54.34% <0%> (ø)` | |
| [shared\_model/interfaces/base/hashable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/815/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9oYXNoYWJsZS5ocHA=) | `0% <0%> (ø)` | |
| [...red\_model/cryptography/hash\_providers/sha3\_256.hpp](https://codecov.io/gh/hyperledger/iroha/pull/815/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoX3Byb3ZpZGVycy9zaGEzXzI1Ni5ocHA=) | `0% <0%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/815?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/815?src=pr&el=footer). Last update [7cd9dea...768738e](https://codecov.io/gh/hyperledger/iroha/pull/815?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-25 10:32:15,2017-12-25 19:19:52
https://api.github.com/repos/hyperledger/iroha/issues/815,https://api.github.com/repos/hyperledger/iroha/issues/comments/353886481,https://github.com/hyperledger/iroha/pull/815#issuecomment-353886481,sorabot,"SonarQube analysis reported 14 issues
* ![INFO][INFO] 14 info

#### Top 10 issues

1. ![INFO][INFO] [transaction.hpp#L32](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/backend/protobuf/transaction.hpp#L32): Undocumented API: Transaction [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [transaction.hpp#L37](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/backend/protobuf/transaction.hpp#L37): Undocumented API: Transaction [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [transaction.hpp#L63](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/backend/protobuf/transaction.hpp#L63): Undocumented API: Transaction [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [transaction.hpp#L65](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/backend/protobuf/transaction.hpp#L65): Undocumented API: Transaction [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [unsigned_proto.hpp#L37](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/builders/protobuf/unsigned_proto.hpp#L37): Undocumented API: ModelType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [unsigned_proto.hpp#L45](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/builders/protobuf/unsigned_proto.hpp#L45): Undocumented API: UnsignedWrapper [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [unsigned_proto.hpp#L60](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/builders/protobuf/unsigned_proto.hpp#L60): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [unsigned_proto.hpp#L64](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/builders/protobuf/unsigned_proto.hpp#L64): Undocumented API: hash [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [sha3_256.hpp#L26](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/cryptography/hash_providers/sha3_256.hpp#L26): Undocumented API: Sha3_256 [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [sha3_256.hpp#L28](https://github.com/hyperledger/iroha/blob/768738eed2d4f1dbef397985d52f6e3f63070a0b/shared_model/cryptography/hash_providers/sha3_256.hpp#L28): Undocumented API: makeHash [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-12-25 19:19:29,2017-12-25 19:19:29
https://api.github.com/repos/hyperledger/iroha/issues/814,https://api.github.com/repos/hyperledger/iroha/issues/comments/353799127,https://github.com/hyperledger/iroha/pull/814#issuecomment-353799127,sorabot,"SonarQube analysis reported 20 issues
* ![INFO][INFO] 20 info

#### Top 10 issues

1. ![INFO][INFO] [queries.hpp#L34](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L34): Undocumented API: TemplateQueryBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L83](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L83): Undocumented API: TemplateQueryBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L83](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L83): Class 'TemplateQueryBuilder' has a constructor with 1 argument that is not explicit. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoExplicitConstructor)
1. ![INFO][INFO] [queries.hpp#L86](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L86): Undocumented API: createdTime [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L92](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L92): Undocumented API: creatorAccountId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L99](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L99): Undocumented API: queryCounter [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L105](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L105): Undocumented API: getAccount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L112](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L112): Undocumented API: getSignatories [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L120](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L120): Undocumented API: getAccountTransactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L128](https://github.com/hyperledger/iroha/blob/ce7fe4eff3d703a6cc7593d426ee2a652e393b3a/shared_model/builders/protobuf/queries.hpp#L128): Undocumented API: getAccountAssetTransactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-12-24 19:07:20,2017-12-24 19:07:20
https://api.github.com/repos/hyperledger/iroha/issues/814,https://api.github.com/repos/hyperledger/iroha/issues/comments/353799143,https://github.com/hyperledger/iroha/pull/814#issuecomment-353799143,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/814?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/bindings-test@19119b8`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/814/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/814?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##             trunk/bindings-test     #814   +/-   ##
======================================================
  Coverage                       ?   31.54%           
======================================================
  Files                          ?      458           
  Lines                          ?    13492           
  Branches                       ?     8597           
======================================================
  Hits                           ?     4256           
  Misses                         ?     1466           
  Partials                       ?     7770
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/814?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/bindings/model\_query\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/814/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuaHBw) | `25% <ø> (ø)` | |
| [shared\_model/builders/protobuf/queries.hpp](https://codecov.io/gh/hyperledger/iroha/pull/814/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3F1ZXJpZXMuaHBw) | `34.61% <0%> (ø)` | |
| [shared\_model/bindings/model\_query\_builder.cpp](https://codecov.io/gh/hyperledger/iroha/pull/814/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuY3Bw) | `7.69% <0%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/814?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/814?src=pr&el=footer). Last update [19119b8...ce7fe4e](https://codecov.io/gh/hyperledger/iroha/pull/814?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-24 19:07:45,2017-12-24 19:17:30
https://api.github.com/repos/hyperledger/iroha/issues/813,https://api.github.com/repos/hyperledger/iroha/issues/comments/353797543,https://github.com/hyperledger/iroha/pull/813#issuecomment-353797543,sorabot,"SonarQube analysis reported 7 issues

1. ![INFO][INFO] [proto_query.hpp#L44](https://github.com/hyperledger/iroha/blob/9efbd16b147d6bed7e95f16e9bd566032d6ec2e0/shared_model/backend/protobuf/queries/proto_query.hpp#L44): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L46](https://github.com/hyperledger/iroha/blob/9efbd16b147d6bed7e95f16e9bd566032d6ec2e0/shared_model/backend/protobuf/queries/proto_query.hpp#L46): Undocumented API: which [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L50](https://github.com/hyperledger/iroha/blob/9efbd16b147d6bed7e95f16e9bd566032d6ec2e0/shared_model/backend/protobuf/queries/proto_query.hpp#L50): Undocumented API: shared_model [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L57](https://github.com/hyperledger/iroha/blob/9efbd16b147d6bed7e95f16e9bd566032d6ec2e0/shared_model/backend/protobuf/queries/proto_query.hpp#L57): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L88](https://github.com/hyperledger/iroha/blob/9efbd16b147d6bed7e95f16e9bd566032d6ec2e0/shared_model/backend/protobuf/queries/proto_query.hpp#L88): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L100](https://github.com/hyperledger/iroha/blob/9efbd16b147d6bed7e95f16e9bd566032d6ec2e0/shared_model/backend/protobuf/queries/proto_query.hpp#L100): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_query.hpp#L102](https://github.com/hyperledger/iroha/blob/9efbd16b147d6bed7e95f16e9bd566032d6ec2e0/shared_model/backend/protobuf/queries/proto_query.hpp#L102): Undocumented API: Query [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-12-24 18:23:59,2017-12-24 18:23:59
https://api.github.com/repos/hyperledger/iroha/issues/813,https://api.github.com/repos/hyperledger/iroha/issues/comments/353797559,https://github.com/hyperledger/iroha/pull/813#issuecomment-353797559,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/813?src=pr&el=h1) Report
> Merging [#813](https://codecov.io/gh/hyperledger/iroha/pull/813?src=pr&el=desc) into [trunk/bindings-test](https://codecov.io/gh/hyperledger/iroha/commit/3b155be1cafcff84b899f50591e73666af905094?src=pr&el=desc) will **decrease** coverage by `0.13%`.
> The diff coverage is `20%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/813/graphs/tree.svg?src=pr&width=650&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/813?src=pr&el=tree)

```diff
@@                   Coverage Diff                   @@
##           trunk/bindings-test     #813      +/-   ##
=======================================================
- Coverage                 31.7%   31.56%   -0.14%     
=======================================================
  Files                      455      458       +3     
  Lines                    13415    13483      +68     
  Branches                  8574     8593      +19     
=======================================================
+ Hits                      4253     4256       +3     
- Misses                    1397     1457      +60     
- Partials                  7765     7770       +5
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/813?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...shared\_model/bindings/model\_query\_builder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/813/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXJfdGVzdC5jcHA=) | `0% <0%> (ø)` | |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/813/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `54.05% <50%> (-0.24%)` | :arrow_down: |
| [shared\_model/builders/protobuf/queries.hpp](https://codecov.io/gh/hyperledger/iroha/pull/813/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3F1ZXJpZXMuaHBw) | `38.02% <0%> (-39.75%)` | :arrow_down: |
| [shared\_model/bindings/model\_query\_builder.cpp](https://codecov.io/gh/hyperledger/iroha/pull/813/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuY3Bw) | `8.33% <0%> (ø)` | |
| [shared\_model/bindings/model\_query\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/813/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JpbmRpbmdzL21vZGVsX3F1ZXJ5X2J1aWxkZXIuaHBw) | `25% <0%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/813?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/813?src=pr&el=footer). Last update [3b155be...9efbd16](https://codecov.io/gh/hyperledger/iroha/pull/813?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-24 18:24:23,2017-12-24 18:51:42
https://api.github.com/repos/hyperledger/iroha/issues/812,https://api.github.com/repos/hyperledger/iroha/issues/comments/353792169,https://github.com/hyperledger/iroha/pull/812#issuecomment-353792169,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/812?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@e362ccc`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/812/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/812?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #812   +/-   ##
==========================================
  Coverage           ?   31.14%           
==========================================
  Files              ?      451           
  Lines              ?    13303           
  Branches           ?     8545           
==========================================
  Hits               ?     4143           
  Misses             ?     1421           
  Partials           ?     7739
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/812?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/812?src=pr&el=footer). Last update [e362ccc...e0deed2](https://codecov.io/gh/hyperledger/iroha/pull/812?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-24 16:10:46,2017-12-26 06:51:36
https://api.github.com/repos/hyperledger/iroha/issues/810,https://api.github.com/repos/hyperledger/iroha/issues/comments/353733728,https://github.com/hyperledger/iroha/pull/810#issuecomment-353733728,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/810?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/bindings-test@0d2c833`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/810/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/810?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##             trunk/bindings-test     #810   +/-   ##
======================================================
  Coverage                       ?   31.53%           
======================================================
  Files                          ?      458           
  Lines                          ?    13496           
  Branches                       ?     8598           
======================================================
  Hits                           ?     4256           
  Misses                         ?     1469           
  Partials                       ?     7771
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/810?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/810?src=pr&el=footer). Last update [0d2c833...0815f65](https://codecov.io/gh/hyperledger/iroha/pull/810?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-23 16:00:54,2017-12-26 14:07:52
https://api.github.com/repos/hyperledger/iroha/issues/809,https://api.github.com/repos/hyperledger/iroha/issues/comments/353727406,https://github.com/hyperledger/iroha/pull/809#issuecomment-353727406,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/809?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/bindings-test@9b490a1`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `52.99%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/809/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/809?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##             trunk/bindings-test    #809   +/-   ##
=====================================================
  Coverage                       ?   31.7%           
=====================================================
  Files                          ?     455           
  Lines                          ?   13415           
  Branches                       ?    8574           
=====================================================
  Hits                           ?    4253           
  Misses                         ?    1397           
  Partials                       ?    7765
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/809?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...le/irohad/validation/stateless\_validation\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVsZXNzX3ZhbGlkYXRpb25fdGVzdC5jcHA=) | `23.25% <ø> (ø)` | |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `81.08% <ø> (ø)` | |
| [...\_model/backend\_proto/shared\_proto\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3F1ZXJpZXNfdGVzdC5jcHA=) | `17.14% <100%> (ø)` | |
| [...ule/shared\_model/validators/validators\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdmFsaWRhdG9yc19maXh0dXJlLmhwcA==) | `43.39% <43.39%> (ø)` | |
| [...e/shared\_model/validators/query\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `43.58% <43.58%> (ø)` | |
| [...ed\_model/validators/transaction\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yX3Rlc3QuY3Bw) | `44.89% <44.89%> (ø)` | |
| [shared\_model/validators/transaction\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvdHJhbnNhY3Rpb25fdmFsaWRhdG9yLmhwcA==) | `48.76% <48.76%> (ø)` | |
| [shared\_model/validators/query\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvcXVlcnlfdmFsaWRhdG9yLmhwcA==) | `59.37% <59.37%> (ø)` | |
| [shared\_model/validators/field\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvZmllbGRfdmFsaWRhdG9yLmhwcA==) | `59.61% <59.61%> (ø)` | |
| [shared\_model/builders/protobuf/queries.hpp](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3F1ZXJpZXMuaHBw) | `77.77% <78.78%> (ø)` | |
| ... and [1 more](https://codecov.io/gh/hyperledger/iroha/pull/809/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/809?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/809?src=pr&el=footer). Last update [9b490a1...277a016](https://codecov.io/gh/hyperledger/iroha/pull/809?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-23 13:56:05,2017-12-23 17:00:09
https://api.github.com/repos/hyperledger/iroha/issues/809,https://api.github.com/repos/hyperledger/iroha/issues/comments/353736447,https://github.com/hyperledger/iroha/pull/809#issuecomment-353736447,sorabot,"SonarQube analysis reported 134 issues
* ![MAJOR][MAJOR] 1 major
* ![INFO][INFO] 133 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [lazy_initializer.hpp#L91](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/utils/lazy_initializer.hpp#L91): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![INFO][INFO] [queries.hpp#L34](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/builders/protobuf/queries.hpp#L34): Undocumented API: TemplateQueryBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L83](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/builders/protobuf/queries.hpp#L83): Undocumented API: TemplateQueryBuilder [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L83](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/builders/protobuf/queries.hpp#L83): Class 'TemplateQueryBuilder' has a constructor with 1 argument that is not explicit. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoExplicitConstructor)
1. ![INFO][INFO] [queries.hpp#L86](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/builders/protobuf/queries.hpp#L86): Undocumented API: createdTime [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L92](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/builders/protobuf/queries.hpp#L92): Undocumented API: creatorAccountId [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L99](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/builders/protobuf/queries.hpp#L99): Undocumented API: queryCounter [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L105](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/builders/protobuf/queries.hpp#L105): Undocumented API: getAccount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L112](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/builders/protobuf/queries.hpp#L112): Undocumented API: getSignatories [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [queries.hpp#L120](https://github.com/hyperledger/iroha/blob/277a01657b6bb583bc414bc978d338b7ef5011b3/shared_model/builders/protobuf/queries.hpp#L120): Undocumented API: getAccountTransactions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2017-12-23 16:50:54,2017-12-23 16:50:54
https://api.github.com/repos/hyperledger/iroha/issues/808,https://api.github.com/repos/hyperledger/iroha/issues/comments/353561373,https://github.com/hyperledger/iroha/pull/808#issuecomment-353561373,sorabot,"SonarQube analysis reported 62 issues
* ![MINOR][MINOR] 2 minor
* ![INFO][INFO] 60 info

#### Top 10 issues

1. ![MINOR][MINOR] [commands_validator.hpp#L238](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/shared_model/validators/commands_validator.hpp#L238): Define a constant instead of duplicating this literal R""([a-z]{1,9}\@[a-z]{1,9})"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [commands_validator.hpp#L276](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/shared_model/validators/commands_validator.hpp#L276): Define a constant instead of duplicating this literal R""([a-z]{1,9})"" 4 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [parser.hpp#L53](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/libs/parser/parser.hpp#L53): Undocumented API: ss [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [parser.hpp#L55](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/libs/parser/parser.hpp#L55): Undocumented API: nonstd [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [parser.hpp#L57](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/libs/parser/parser.hpp#L57): Undocumented API: val [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [parser.hpp#L59](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/libs/parser/parser.hpp#L59): Undocumented API: val [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [parser.hpp#L61](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/libs/parser/parser.hpp#L61): Undocumented API: nonstd [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [address_validator.hpp#L56](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/libs/validator/address_validator.hpp#L56): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [commands_validator.hpp#L45](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/shared_model/validators/commands_validator.hpp#L45): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [commands_validator.hpp#L58](https://github.com/hyperledger/iroha/blob/e93b7663dd5f2cc36b4f84922b12b741411ab48e/shared_model/validators/commands_validator.hpp#L58): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-22 09:42:38,2017-12-22 09:42:38
https://api.github.com/repos/hyperledger/iroha/issues/806,https://api.github.com/repos/hyperledger/iroha/issues/comments/353474354,https://github.com/hyperledger/iroha/pull/806#issuecomment-353474354,l4l,Imo the base should be develop. Also there is still a compiling issue(s),2017-12-21 22:31:37,2017-12-21 22:31:44
https://api.github.com/repos/hyperledger/iroha/issues/806,https://api.github.com/repos/hyperledger/iroha/issues/comments/353525017,https://github.com/hyperledger/iroha/pull/806#issuecomment-353525017,muratovv,"Pls, solve problems with the build. I think that there is required rebase. After it, you should notify me for review. ",2017-12-22 05:28:24,2017-12-22 05:28:24
https://api.github.com/repos/hyperledger/iroha/issues/806,https://api.github.com/repos/hyperledger/iroha/issues/comments/353620325,https://github.com/hyperledger/iroha/pull/806#issuecomment-353620325,luckychess,I decided to use trunk bindings branch as base because this fix is critical for bindings tests.,2017-12-22 15:32:57,2017-12-22 15:32:57
https://api.github.com/repos/hyperledger/iroha/issues/806,https://api.github.com/repos/hyperledger/iroha/issues/comments/353622027,https://github.com/hyperledger/iroha/pull/806#issuecomment-353622027,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/806?src=pr&el=h1) Report
> Merging [#806](https://codecov.io/gh/hyperledger/iroha/pull/806?src=pr&el=desc) into [trunk/bindings-test](https://codecov.io/gh/hyperledger/iroha/commit/74d7fc42aea4135cad27cdb7c47d0aeada69bc5d?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/806/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/806?src=pr&el=tree)

```diff
@@                   Coverage Diff                   @@
##           trunk/bindings-test     #806      +/-   ##
=======================================================
- Coverage                40.14%   40.11%   -0.04%     
=======================================================
  Files                      460      460              
  Lines                    15548    15548              
  Branches                  8612     8612              
=======================================================
- Hits                      6242     6237       -5     
- Misses                    1559     1563       +4     
- Partials                  7747     7748       +1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/806?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...\_model/cryptography/ed25519\_sha3\_impl/verifier.cpp](https://codecov.io/gh/hyperledger/iroha/pull/806/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC92ZXJpZmllci5jcHA=) | `25% <0%> (ø)` | :arrow_up: |
| [...ed\_model/cryptography/ed25519\_sha3\_impl/signer.cpp](https://codecov.io/gh/hyperledger/iroha/pull/806/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9zaWduZXIuY3Bw) | `42.85% <0%> (ø)` | :arrow_up: |
| [...ptography/ed25519\_sha3\_impl/internal/impl/sha512.c](https://codecov.io/gh/hyperledger/iroha/pull/806/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9pbXBsL3NoYTUxMi5j) | `68.75% <0%> (-6.25%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/806?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/806?src=pr&el=footer). Last update [74d7fc4...0bb29a0](https://codecov.io/gh/hyperledger/iroha/pull/806?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-22 15:42:12,2017-12-23 15:26:11
https://api.github.com/repos/hyperledger/iroha/issues/805,https://api.github.com/repos/hyperledger/iroha/issues/comments/353556430,https://github.com/hyperledger/iroha/pull/805#issuecomment-353556430,l4l,tacopie is basically a submodule. So I don't see any reason why it shouldn't be declared as submodule in ExternalProject,2017-12-22 09:15:39,2017-12-22 09:15:39
https://api.github.com/repos/hyperledger/iroha/issues/804,https://api.github.com/repos/hyperledger/iroha/issues/comments/353388902,https://github.com/hyperledger/iroha/pull/804#issuecomment-353388902,neewy,Please rebase :bow:,2017-12-21 16:05:24,2017-12-21 16:05:24
https://api.github.com/repos/hyperledger/iroha/issues/804,https://api.github.com/repos/hyperledger/iroha/issues/comments/353933451,https://github.com/hyperledger/iroha/pull/804#issuecomment-353933451,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/804?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@45e90fa`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `48.88%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/804/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/804?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #804   +/-   ##
==========================================
  Coverage           ?   30.93%           
==========================================
  Files              ?      457           
  Lines              ?    13457           
  Branches           ?     8644           
==========================================
  Hits               ?     4163           
  Misses             ?     1484           
  Partials           ?     7810
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/804?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/804/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <ø> (ø)` | |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/804/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `22.22% <0%> (ø)` | |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/804/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `13.31% <11.11%> (ø)` | |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/804/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `52% <60%> (ø)` | |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/804/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `45.71% <60%> (ø)` | |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/804/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `38.56% <71.23%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/804?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/804?src=pr&el=footer). Last update [45e90fa...13bfcd1](https://codecov.io/gh/hyperledger/iroha/pull/804?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-26 07:46:04,2017-12-27 04:44:36
https://api.github.com/repos/hyperledger/iroha/issues/804,https://api.github.com/repos/hyperledger/iroha/issues/comments/353957904,https://github.com/hyperledger/iroha/pull/804#issuecomment-353957904,neewy,Please rebase and delete old Mizuki commits,2017-12-26 11:27:34,2017-12-26 11:27:34
https://api.github.com/repos/hyperledger/iroha/issues/804,https://api.github.com/repos/hyperledger/iroha/issues/comments/353957934,https://github.com/hyperledger/iroha/pull/804#issuecomment-353957934,neewy,"Also, Andrei has given an approval.",2017-12-26 11:27:58,2017-12-26 11:27:58
https://api.github.com/repos/hyperledger/iroha/issues/804,https://api.github.com/repos/hyperledger/iroha/issues/comments/354050451,https://github.com/hyperledger/iroha/pull/804#issuecomment-354050451,sorabot,"SonarQube analysis reported 45 issues
* ![MINOR][MINOR] 6 minor
* ![INFO][INFO] 39 info

#### Top 10 issues

1. ![MINOR][MINOR] [command_executor.cpp#L196](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/impl/command_executor.cpp#L196): Define a constant instead of duplicating this literal ""Creator account is empty"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L197](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/impl/command_executor.cpp#L197): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L275](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/impl/command_executor.cpp#L275): Define a constant instead of duplicating this literal ""asset {} is absent"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L310](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/impl/command_executor.cpp#L310): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L376](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/impl/command_executor.cpp#L376): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L771](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/impl/command_executor.cpp#L771): Define a constant instead of duplicating this literal ""asset {} is absent of {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [command_executor.hpp#L33](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/command_executor.hpp#L33): Undocumented API: CommandExecutor [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [command_executor.hpp#L82](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/command_executor.hpp#L82): Undocumented API: log_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [command_executor.hpp#L85](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/command_executor.hpp#L85): Undocumented API: AppendRoleExecutor [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [command_executor.hpp#L87](https://github.com/hyperledger/iroha/blob/13bfcd12b9a6bc0b5058ae4675a122c532c1f6e3/irohad/model/execution/command_executor.hpp#L87): Undocumented API: AppendRoleExecutor [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-27 04:33:25,2017-12-27 04:33:25
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/353392149,https://github.com/hyperledger/iroha/issues/803#issuecomment-353392149,neewy,"Yes, we do. In new model implementation all error related to validation will be clear and printed into log",2017-12-21 16:18:09,2017-12-21 16:18:09
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/354217999,https://github.com/hyperledger/iroha/issues/803#issuecomment-354217999,takemiyamakoto,@neewy Does that mean this will be taken care of in Alpha? Is there documentation stating what the possible error codes are?,2017-12-28 02:45:38,2017-12-28 02:45:38
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/377577859,https://github.com/hyperledger/iroha/issues/803#issuecomment-377577859,rishavpiku,"My transaction logs seemed terrible ...

> ethTransactionInvoke 0xde895c2c73e9f5332c90e3e7ffa705f751f747b0 <tab>
balances              cancelRedemption      issue                 issuer                redeem                redemptionRequests    requestRedemption     totalSupply           transfer              uncommittedBalances
> ethInvoke 0xde895c2c73e9f5332c90e3e7ffa705f751f747b0 issue <tab>
<recipient, of type address>   ​ <amount, of type uint256>     ​ ​ <message, of type string>    ​ ​ ​                             issuer
> ethInvoke 0xde895c2c73e9f5332c90e3e7ffa705f751f747b0 issue 0xfbace661786d580ed4373c79689e7e8eb6ba05df 888 ""Good luck!""
[info] V3 wallet found for '0x465e79b940bc2157e4259ff6b2d92f454497f1e4'
[info] Call data for function call: ebf469dc000000000000000000000000fbace661786d580ed4373c79689e7e8eb6ba05df00000000000000000000000000000000000000000000000000000000000003780000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000a476f6f64206c75636b2100000000000000000000000000000000000000000000
[info] Gas estimated for function call: 64486
[info] Called function 'issue', with args '0xfbace661786d580ed4373c79689e7e8eb6ba05df, 888, ""Good luck!""', sending 0 wei to address '0xde895c2c73e9f5332c90e3e7ffa705f751f747b0' in transaction '0x6065dc98620f5f3e9683b1dd4941ed1e865eee3efd0d71a1868c9b302b2fbe90'.
[info] Receipt for transaction '0x6065dc98620f5f3e9683b1dd4941ed1e865eee3efd0d71a1868c9b302b2fbe90' not yet available, will try again in 15 seconds. Attempt 1/9.
[info] Receipt for transaction '0x6065dc98620f5f3e9683b1dd4941ed1e865eee3efd0d71a1868c9b302b2fbe90' not yet available, will try again in 15 seconds. Attempt 2/9.
[info] Receipt received for transaction '0x6065dc98620f5f3e9683b1dd4941ed1e865eee3efd0d71a1868c9b302b2fbe90':
[info] ClientTransactionReceipt(Keccak256[6065dc98620f5f3e9683b1dd4941ed1e865eee3efd0d71a1868c9b302b2fbe90],Unsigned256(6),Keccak256[574bb5fe35bdd82fa6a5f02ae2e74899665ffb76965e7dacc36d5e4d0fa14260],Unsigned256(2833845),Unsigned256(196033),Unsigned256(53739),None,List(EthLogEntry(EthAddress(ByteSeqExact20(0xde895c2c73e9f5332c90e3e7ffa705f751f747b0)),Vector(ByteSeqExact32(0x56efce5854bf1d184d330cc0c05667850247efb9dd786f6efac4c3cf93e7e60f), ByteSeqExact32(0x000000000000000000000000fbace661786d580ed4373c79689e7e8eb6ba05df)),ImmutableArraySeq.Byte(0x00000000000000000000000000000000000000000000000000000000000003780000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000a476f6f64206c75636b2100000000000000000000000000000000000000000000))))
[success] Total time: 61 s, completed Mar 29, 2018 3:41:29 PM

You get a lot of ugly noise when invoking a smart contract method. But one piece of information you do not get is a return value. When you want to look up information about a smart contract, do so by calling constant functions using the task ethInvokeConstant.",2018-03-30 17:34:29,2018-03-30 17:35:10
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/377784888,https://github.com/hyperledger/iroha/issues/803#issuecomment-377784888,takemiyamakoto,Not sure if this is a dimensional rift or the Mandela Effect.,2018-04-01 12:53:32,2018-04-01 12:53:32
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/377882284,https://github.com/hyperledger/iroha/issues/803#issuecomment-377882284,neewy,@rishavpiku are you sure to use Iroha?,2018-04-02 08:18:14,2018-04-02 08:18:14
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/377887609,https://github.com/hyperledger/iroha/issues/803#issuecomment-377887609,rishavpiku,Yes,2018-04-02 08:51:01,2018-04-02 08:51:01
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/377896346,https://github.com/hyperledger/iroha/issues/803#issuecomment-377896346,neewy,"what version is that? 
we don't have support for smart contracts now, and the log seems to be either from other system or from old version (0.75)",2018-04-02 09:45:04,2018-04-02 09:45:04
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/377906497,https://github.com/hyperledger/iroha/issues/803#issuecomment-377906497,rishavpiku,"Yes, we dont have support for smart contracts now. It was done earlier in the old version. ",2018-04-02 10:54:23,2018-04-02 10:54:23
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/377913362,https://github.com/hyperledger/iroha/issues/803#issuecomment-377913362,l4l,It more looks like the ethereum logs. Nevertheless the 0.75 version isn't supported,2018-04-02 11:45:29,2018-04-02 11:45:29
https://api.github.com/repos/hyperledger/iroha/issues/803,https://api.github.com/repos/hyperledger/iroha/issues/comments/454037527,https://github.com/hyperledger/iroha/issues/803#issuecomment-454037527,LiraLemur,Issue seems outdated. ,2019-01-14 15:09:42,2019-01-14 15:09:42
https://api.github.com/repos/hyperledger/iroha/issues/802,https://api.github.com/repos/hyperledger/iroha/issues/comments/353899215,https://github.com/hyperledger/iroha/pull/802#issuecomment-353899215,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/802?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@7090754`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `25.49%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/802/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/802?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #802   +/-   ##
==========================================
  Coverage           ?   31.43%           
==========================================
  Files              ?      464           
  Lines              ?    13719           
  Branches           ?     8741           
==========================================
  Hits               ?     4312           
  Misses             ?     1516           
  Partials           ?     7891
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/802?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/query\_execution.hpp](https://codecov.io/gh/hyperledger/iroha/pull/802/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJ5X2V4ZWN1dGlvbi5ocHA=) | `100% <ø> (ø)` | |
| [irohad/model/permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/802/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Blcm1pc3Npb25zLmhwcA==) | `13.46% <0%> (ø)` | |
| [...rohad/model/converters/impl/pb\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/802/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9jb21tYW5kX2ZhY3RvcnkuY3Bw) | `37.36% <0%> (ø)` | |
| [irohad/model/generators/impl/query\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/802/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9xdWVyeV9nZW5lcmF0b3IuY3Bw) | `60% <100%> (ø)` | |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/802/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `36.84% <100%> (ø)` | |
| [irohad/model/impl/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/802/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `44.35% <37.5%> (ø)` | |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/802/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `25.49% <5.26%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/802?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/802?src=pr&el=footer). Last update [7090754...2496f75](https://codecov.io/gh/hyperledger/iroha/pull/802?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-26 00:57:02,2018-01-03 21:25:28
https://api.github.com/repos/hyperledger/iroha/issues/802,https://api.github.com/repos/hyperledger/iroha/issues/comments/353899490,https://github.com/hyperledger/iroha/pull/802#issuecomment-353899490,motxx,Commit of perms reordering is already discarded.,2017-12-26 01:01:47,2017-12-26 01:01:47
https://api.github.com/repos/hyperledger/iroha/issues/802,https://api.github.com/repos/hyperledger/iroha/issues/comments/355131546,https://github.com/hyperledger/iroha/pull/802#issuecomment-355131546,sorabot,"SonarQube analysis reported 72 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 5 minor
* ![INFO][INFO] 66 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L570](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/converters/impl/pb_command_factory.cpp#L570): The Cyclomatic Complexity of this function is 17 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [query_generator.cpp#L61](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/generators/impl/query_generator.cpp#L61): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [query_generator.cpp#L69](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/generators/impl/query_generator.cpp#L69): Variable 'creator_account_id' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [query_generator.cpp#L97](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/generators/impl/query_generator.cpp#L97): The function 'generateGetAccountAssetTransactions' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [query_generator.cpp#L123](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/generators/impl/query_generator.cpp#L123): Define a constant instead of duplicating this literal ""admin@test"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [query_generator.hpp#L44](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/generators/query_generator.hpp#L44): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![INFO][INFO] [pb_command_factory.cpp#L442](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/converters/impl/pb_command_factory.cpp#L442): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [query_generator.hpp#L31](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/generators/query_generator.hpp#L31): Undocumented API: QueryGenerator [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [query_generator.hpp#L34](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/generators/query_generator.hpp#L34): Undocumented API: generateGetAccount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [query_generator.hpp#L38](https://github.com/hyperledger/iroha/blob/2496f75f232891af639a9ad30e272c37ae6a7a60/irohad/model/generators/query_generator.hpp#L38): Undocumented API: generateGetAccountAssets [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2018-01-03 21:25:04,2018-01-03 21:25:04
https://api.github.com/repos/hyperledger/iroha/issues/801,https://api.github.com/repos/hyperledger/iroha/issues/comments/353181346,https://github.com/hyperledger/iroha/pull/801#issuecomment-353181346,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/801?src=pr&el=h1) Report
> Merging [#801](https://codecov.io/gh/hyperledger/iroha/pull/801?src=pr&el=desc) into [trunk/bindings-test](https://codecov.io/gh/hyperledger/iroha/commit/6089aadf910b36555d3c864a8393d70631327ce1?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/801/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/801?src=pr&el=tree)

```diff
@@                 Coverage Diff                  @@
##           trunk/bindings-test     #801   +/-   ##
====================================================
  Coverage                40.17%   40.17%           
====================================================
  Files                      456      456           
  Lines                    15502    15502           
  Branches                  8594     8594           
====================================================
  Hits                      6228     6228           
  Misses                    1554     1554           
  Partials                  7720     7720
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/801?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/801?src=pr&el=footer). Last update [6089aad...321eabd](https://codecov.io/gh/hyperledger/iroha/pull/801?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-20 21:01:33,2017-12-21 11:10:39
https://api.github.com/repos/hyperledger/iroha/issues/801,https://api.github.com/repos/hyperledger/iroha/issues/comments/353223322,https://github.com/hyperledger/iroha/pull/801#issuecomment-353223322,Warchant,"Just noticed: why user manually sets created time? IMO it is internal value and can be setted automatically.
Maybe it would be wise to make it like this:
1. if user specified createdTime, then use this time
2. if not - set it automatically",2017-12-21 00:34:19,2017-12-21 00:34:28
https://api.github.com/repos/hyperledger/iroha/issues/801,https://api.github.com/repos/hyperledger/iroha/issues/comments/353295989,https://github.com/hyperledger/iroha/pull/801#issuecomment-353295989,luckychess,Better ask this in chat or on some meeting ),2017-12-21 09:01:17,2017-12-21 09:01:17
https://api.github.com/repos/hyperledger/iroha/issues/799,https://api.github.com/repos/hyperledger/iroha/issues/comments/353078812,https://github.com/hyperledger/iroha/pull/799#issuecomment-353078812,neewy,Reason why builds are failing — Circle CI is using image which is not updated. Consider reviewing it on a local machine and after approval we will update image together with rebase,2017-12-20 14:35:05,2017-12-20 14:35:05
https://api.github.com/repos/hyperledger/iroha/issues/799,https://api.github.com/repos/hyperledger/iroha/issues/comments/353289918,https://github.com/hyperledger/iroha/pull/799#issuecomment-353289918,Warchant,Don't forget to rebase.,2017-12-21 08:32:29,2017-12-21 08:32:29
https://api.github.com/repos/hyperledger/iroha/issues/799,https://api.github.com/repos/hyperledger/iroha/issues/comments/353325842,https://github.com/hyperledger/iroha/pull/799#issuecomment-353325842,l4l,ci doesn't like it :(,2017-12-21 11:15:52,2017-12-21 11:15:52
https://api.github.com/repos/hyperledger/iroha/issues/798,https://api.github.com/repos/hyperledger/iroha/issues/comments/353158088,https://github.com/hyperledger/iroha/pull/798#issuecomment-353158088,l4l,CircleCI doesn't like it :(,2017-12-20 19:21:52,2017-12-21 09:57:17
https://api.github.com/repos/hyperledger/iroha/issues/798,https://api.github.com/repos/hyperledger/iroha/issues/comments/353251929,https://github.com/hyperledger/iroha/pull/798#issuecomment-353251929,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/798?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@caceba5`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `18.35%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/798/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/798?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             develop    #798   +/-   ##
=========================================
  Coverage           ?     31%           
=========================================
  Files              ?     457           
  Lines              ?   13453           
  Branches           ?    8632           
=========================================
  Hits               ?    4171           
  Misses             ?    1480           
  Partials           ?    7802
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/798?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/converters/json\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5LmhwcA==) | `100% <ø> (ø)` | |
| [...odel/interfaces/query\_responses/query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/model/queries/responses/error\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcmVzcG9uc2VzL2Vycm9yX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/model/query\_execution.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJ5X2V4ZWN1dGlvbi5ocHA=) | `100% <ø> (ø)` | |
| [shared\_model/interfaces/queries/query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9xdWVyeS5ocHA=) | `0% <ø> (ø)` | |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | |
| [irohad/model/queries/get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnRfYXNzZXRzLmhwcA==) | `0% <ø> (ø)` | |
| [.../protobuf/query\_responses/proto\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `83.33% <ø> (ø)` | |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `42.85% <ø> (ø)` | |
| [shared\_model/builders/protobuf/queries.hpp](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3F1ZXJpZXMuaHBw) | `95% <ø> (ø)` | |
| ... and [19 more](https://codecov.io/gh/hyperledger/iroha/pull/798/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/798?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/798?src=pr&el=footer). Last update [caceba5...a6b658a](https://codecov.io/gh/hyperledger/iroha/pull/798?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-21 03:54:53,2017-12-25 05:15:50
https://api.github.com/repos/hyperledger/iroha/issues/798,https://api.github.com/repos/hyperledger/iroha/issues/comments/353830267,https://github.com/hyperledger/iroha/pull/798#issuecomment-353830267,sorabot,"SonarQube analysis reported 178 issues
* ![CRITICAL][CRITICAL] 5 critical
* ![MINOR][MINOR] 34 minor
* ![INFO][INFO] 139 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L566](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/pb_command_factory.cpp#L566): The Cyclomatic Complexity of this function is 17 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L56](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/pb_query_factory.cpp#L56): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L26](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/pb_query_response_factory.cpp#L26): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L286](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/pb_query_response_factory.cpp#L286): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L289](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/pb_query_response_factory.cpp#L289): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [json_query_factory.cpp#L36](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/json_query_factory.cpp#L36): Variable 'deserializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_query_factory.cpp#L37](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/json_query_factory.cpp#L37): Define a constant instead of duplicating this literal ""GetAccount"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L38](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/json_query_factory.cpp#L38): Define a constant instead of duplicating this literal ""GetAccountAssets"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L40](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/json_query_factory.cpp#L40): Define a constant instead of duplicating this literal ""GetAccountDetail"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L42](https://github.com/hyperledger/iroha/blob/a6b658a466c4d71802143ff833ec755b124925d7/irohad/model/converters/impl/json_query_factory.cpp#L42): Define a constant instead of duplicating this literal ""GetAccountTransactions"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-25 05:00:19,2017-12-25 05:00:19
https://api.github.com/repos/hyperledger/iroha/issues/798,https://api.github.com/repos/hyperledger/iroha/issues/comments/353925990,https://github.com/hyperledger/iroha/pull/798#issuecomment-353925990,neewy,"Please reopen PR, restore the state of develop before the merge and have an additional review from any maintainer 🙇 ",2017-12-26 06:35:01,2017-12-26 06:35:01
https://api.github.com/repos/hyperledger/iroha/issues/797,https://api.github.com/repos/hyperledger/iroha/issues/comments/353031227,https://github.com/hyperledger/iroha/pull/797#issuecomment-353031227,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/797?src=pr&el=h1) Report
> Merging [#797](https://codecov.io/gh/hyperledger/iroha/pull/797?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/6089aadf910b36555d3c864a8393d70631327ce1?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/797/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/797?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #797   +/-   ##
========================================
  Coverage    40.17%   40.17%           
========================================
  Files          456      456           
  Lines        15502    15502           
  Branches      8594     8594           
========================================
  Hits          6228     6228           
  Misses        1554     1554           
  Partials      7720     7720
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/797?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/797?src=pr&el=footer). Last update [6089aad...8333950](https://codecov.io/gh/hyperledger/iroha/pull/797?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-20 10:51:51,2017-12-20 10:51:51
https://api.github.com/repos/hyperledger/iroha/issues/796,https://api.github.com/repos/hyperledger/iroha/issues/comments/353124638,https://github.com/hyperledger/iroha/pull/796#issuecomment-353124638,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/796?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/bindings-test@9112ff0`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/796/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/796?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##             trunk/bindings-test    #796   +/-   ##
=====================================================
  Coverage                       ?   40.2%           
=====================================================
  Files                          ?     456           
  Lines                          ?   15492           
  Branches                       ?    8585           
=====================================================
  Hits                           ?    6228           
  Misses                         ?    1544           
  Partials                       ?    7720
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/796?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/796/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `81.08% <ø> (ø)` | |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/796/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <ø> (ø)` | |
| [shared\_model/interfaces/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/796/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <ø> (ø)` | |
| [...d\_model/backend/protobuf/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/796/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `15% <0%> (ø)` | |
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/796/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (ø)` | |
| [.../backend/protobuf/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/796/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `0% <0%> (ø)` | |
| [...\_model/backend/protobuf/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/796/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/796?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/796?src=pr&el=footer). Last update [9112ff0...48d240f](https://codecov.io/gh/hyperledger/iroha/pull/796?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-20 17:13:03,2017-12-21 12:52:00
https://api.github.com/repos/hyperledger/iroha/issues/796,https://api.github.com/repos/hyperledger/iroha/issues/comments/353341257,https://github.com/hyperledger/iroha/pull/796#issuecomment-353341257,sorabot,"SonarQube analysis reported 44 issues
* ![INFO][INFO] 44 info

#### Top 10 issues

1. ![INFO][INFO] [account.hpp#L29](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/account.hpp#L29): Undocumented API: Account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account.hpp#L34](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/account.hpp#L34): Undocumented API: Account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account.hpp#L38](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/account.hpp#L38): Undocumented API: Account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account.hpp#L40](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/account.hpp#L40): Undocumented API: Account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_asset.hpp#L30](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/account_asset.hpp#L30): Undocumented API: AccountAsset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_asset.hpp#L36](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/account_asset.hpp#L36): Undocumented API: AccountAsset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_asset.hpp#L41](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/account_asset.hpp#L41): Undocumented API: AccountAsset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_asset.hpp#L43](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/account_asset.hpp#L43): Undocumented API: AccountAsset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L31](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/amount.hpp#L31): Undocumented API: Amount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [amount.hpp#L36](https://github.com/hyperledger/iroha/blob/48d240f37e67f0d0e0cdd8f4c9d0d91857eb27ad/shared_model/backend/protobuf/common_objects/amount.hpp#L36): Undocumented API: Amount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-12-21 12:41:16,2017-12-21 12:41:16
https://api.github.com/repos/hyperledger/iroha/issues/795,https://api.github.com/repos/hyperledger/iroha/issues/comments/353231169,https://github.com/hyperledger/iroha/pull/795#issuecomment-353231169,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/795?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@d9c80ba`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `87.5%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/795/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/795?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #795   +/-   ##
==========================================
  Coverage           ?   31.14%           
==========================================
  Files              ?      451           
  Lines              ?    13303           
  Branches           ?     8545           
==========================================
  Hits               ?     4143           
  Misses             ?     1421           
  Partials           ?     7739
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/795?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/795/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `64.55% <ø> (ø)` | |
| [...graphy/ed25519\_sha3\_impl/internal/ed25519\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/795/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9lZDI1NTE5X2ltcGwuY3Bw) | `100% <100%> (ø)` | |
| [...ptography/ed25519\_sha3\_impl/internal/sha3\_hash.cpp](https://codecov.io/gh/hyperledger/iroha/pull/795/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9zaGEzX2hhc2guY3Bw) | `58.53% <62.5%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/795?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/795?src=pr&el=footer). Last update [d9c80ba...2b90dee](https://codecov.io/gh/hyperledger/iroha/pull/795?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-21 01:24:36,2017-12-23 14:11:44
https://api.github.com/repos/hyperledger/iroha/issues/795,https://api.github.com/repos/hyperledger/iroha/issues/comments/353723829,https://github.com/hyperledger/iroha/pull/795#issuecomment-353723829,sorabot,"SonarQube analysis reported 31 issues
* ![INFO][INFO] 31 info

#### Top 10 issues

1. ![INFO][INFO] [types.hpp#L42](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L42): Undocumented API: BadFormatException [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L43](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L43): Undocumented API: byte_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L45](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L45): Undocumented API: code [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L99](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L99): Undocumented API: from_string [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L151](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L151): Undocumented API: nonstd [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L153](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L153): Undocumented API: result [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L154](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L154): Undocumented API: i [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L154](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L154): Undocumented API: length [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L155](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L155): Undocumented API: byte [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L157](https://github.com/hyperledger/iroha/blob/2b90deea62b3c3595c7a6937a2d579bb628fe7b3/libs/common/types.hpp#L157): Undocumented API: at [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-12-23 12:33:24,2017-12-23 12:33:24
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/352960288,https://github.com/hyperledger/iroha/issues/794#issuecomment-352960288,Warchant,"This may be useful
http://gernotklingler.com/blog/open-source-tools-examine-and-adjust-include-dependencies/
https://github.com/tomtom-international/cpp-dependencies",2017-12-20 04:14:14,2017-12-20 04:15:51
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/352967227,https://github.com/hyperledger/iroha/issues/794#issuecomment-352967227,Warchant,"There are some circular dependencies in shared_model:
![image](https://user-images.githubusercontent.com/1867551/34192284-766b2eb8-e590-11e7-953b-4629c1fc04cf.png)
",2017-12-20 05:17:11,2017-12-20 05:17:11
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/352968490,https://github.com/hyperledger/iroha/issues/794#issuecomment-352968490,Warchant,"irohad:
![image](https://user-images.githubusercontent.com/1867551/34192542-eb0b02e2-e591-11e7-883c-12df9dc8c789.png)
",2017-12-20 05:27:37,2017-12-20 05:27:37
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/352968553,https://github.com/hyperledger/iroha/issues/794#issuecomment-352968553,Warchant,"libs:
![image](https://user-images.githubusercontent.com/1867551/34192550-fbe2fe26-e591-11e7-8baf-ff54d5c3386d.png)
",2017-12-20 05:28:04,2017-12-20 05:28:04
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/352975797,https://github.com/hyperledger/iroha/issues/794#issuecomment-352975797,l4l,"As for shared_model it's fine to has circle dependency on the interfaces, because it can't be tested by definition. So I think there's no need in this kind of work for this module.

irohad is obviously should be drastically refactored. Hopefully that may be eased after droppping support of the old model

libs also have a little problem but that can be fixed in few mins: just move either byteutils to the crypto or base64 to common

Thanks for reporting that!",2017-12-20 06:21:03,2017-12-20 06:21:03
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/352982371,https://github.com/hyperledger/iroha/issues/794#issuecomment-352982371,Warchant,"@l4l any circular dependency can be broken. Interfaces should not depend on the implementation, it is horrible mistake.",2017-12-20 07:03:42,2017-12-20 07:03:42
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/352983807,https://github.com/hyperledger/iroha/issues/794#issuecomment-352983807,muratovv,"Pls, verify what concrete wrong inside with concrete classes that broken. I feel, that there are (in most cases) no problems for dependencies at all.",2017-12-20 07:12:39,2017-12-20 07:12:39
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/352988259,https://github.com/hyperledger/iroha/issues/794#issuecomment-352988259,l4l,"> any circular dependency can be broken. Interfaces should not depend on the implementation, it is horrible mistake.

Yeah, i guess these better be moved to the interfaces/crypto

![screenshot_20171220_103731](https://user-images.githubusercontent.com/5658339/34196157-e4521370-e571-11e7-869a-fbbd7f3cb0fc.png)
",2017-12-20 07:38:34,2017-12-20 07:38:34
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/354590455,https://github.com/hyperledger/iroha/issues/794#issuecomment-354590455,neewy,"@Warchant let’s run analysis over the project, decide how to localize circular dependencies and try to make tasks that are not cross-dependent ",2017-12-31 07:53:03,2017-12-31 07:53:03
https://api.github.com/repos/hyperledger/iroha/issues/794,https://api.github.com/repos/hyperledger/iroha/issues/comments/395948597,https://github.com/hyperledger/iroha/issues/794#issuecomment-395948597,l4l,Outdated,2018-06-09 07:42:34,2018-06-09 07:42:34
https://api.github.com/repos/hyperledger/iroha/issues/793,https://api.github.com/repos/hyperledger/iroha/issues/comments/352900080,https://github.com/hyperledger/iroha/pull/793#issuecomment-352900080,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/793?src=pr&el=h1) Report
> Merging [#793](https://codecov.io/gh/hyperledger/iroha/pull/793?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/e93266de206f653473c8dd9536d79af9aed7da64?src=pr&el=desc) will **decrease** coverage by `0.02%`.
> The diff coverage is `17.46%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/793/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/793?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #793      +/-   ##
===========================================
- Coverage    40.14%   40.11%   -0.03%     
===========================================
  Files          456      458       +2     
  Lines        15508    15531      +23     
  Branches      8601     8611      +10     
===========================================
+ Hits          6225     6230       +5     
- Misses        1555     1564       +9     
- Partials      7728     7737       +9
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/793?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `81.08% <ø> (ø)` | :arrow_up: |
| [...\_model/backend/protobuf/commands/proto\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY29tbWFuZC5ocHA=) | `70% <0%> (ø)` | :arrow_up: |
| [...d\_model/backend/protobuf/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `14.28% <0%> (ø)` | :arrow_up: |
| [...\_model/cryptography/ed25519\_sha3\_impl/verifier.cpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC92ZXJpZmllci5jcHA=) | `25% <0%> (ø)` | :arrow_up: |
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (ø)` | :arrow_up: |
| [...ptography/ed25519\_sha3\_impl/internal/sha3\_hash.cpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9zaGEzX2hhc2guY3Bw) | `48.78% <0%> (-11.83%)` | :arrow_down: |
| [shared\_model/builders/protobuf/unsigned\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Vuc2lnbmVkX3Byb3RvLmhwcA==) | `27.27% <0%> (ø)` | :arrow_up: |
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `19.56% <0%> (ø)` | :arrow_up: |
| [.../backend/protobuf/common\_objects/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudF9hc3NldC5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| ... and [16 more](https://codecov.io/gh/hyperledger/iroha/pull/793/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/793?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/793?src=pr&el=footer). Last update [e93266d...d000534](https://codecov.io/gh/hyperledger/iroha/pull/793?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-19 22:03:16,2017-12-21 12:59:39
https://api.github.com/repos/hyperledger/iroha/issues/793,https://api.github.com/repos/hyperledger/iroha/issues/comments/352930678,https://github.com/hyperledger/iroha/pull/793#issuecomment-352930678,Warchant,Look at sorabot's issues.,2017-12-20 00:43:07,2017-12-20 00:43:07
https://api.github.com/repos/hyperledger/iroha/issues/793,https://api.github.com/repos/hyperledger/iroha/issues/comments/353023884,https://github.com/hyperledger/iroha/pull/793#issuecomment-353023884,luckychess,"Btw should it be merged directly into develop and not to the trunk?
Another possible problem I see is that str() method remains public and available to anyone. Could it be hided somehow?",2017-12-20 10:19:47,2017-12-20 10:50:57
https://api.github.com/repos/hyperledger/iroha/issues/793,https://api.github.com/repos/hyperledger/iroha/issues/comments/353045492,https://github.com/hyperledger/iroha/pull/793#issuecomment-353045492,luckychess,API of Blob should be changed anyway because Blob is a type known outside C++. We only have an option to leave internal string representation as is or also change it and I think the second option is better.,2017-12-20 12:01:37,2017-12-20 12:01:37
https://api.github.com/repos/hyperledger/iroha/issues/793,https://api.github.com/repos/hyperledger/iroha/issues/comments/353155411,https://github.com/hyperledger/iroha/pull/793#issuecomment-353155411,l4l,"> Btw should it be merged directly into develop and not to the trunk?

I think so, it noticeably changes shared model primitive

> Another possible problem I see is that str() method remains public and available to anyone. Could it be hided somehow?

Don't really sure that it possible. But it still possible to change it e.g to `binstr()` or smth more obvious

> I don't think that existing API of Blob should be changed, since it works fine in C++. Instead this behaviour should be changed only in bindings.

And I don't sure that semantically string is a proper type for storing binary data. It's better be changed as earlier as possible. Anyway swig&java doesn't work in such way and I don't really sure that we will be able to easily change the swig. Besides there's can be problems with other bindings.

As @luckychess said the change of interntal datatype is optional (and I agree that it's better be fixed as well)",2017-12-20 19:11:43,2017-12-20 19:11:43
https://api.github.com/repos/hyperledger/iroha/issues/793,https://api.github.com/repos/hyperledger/iroha/issues/comments/353408635,https://github.com/hyperledger/iroha/pull/793#issuecomment-353408635,sorabot,"SonarQube analysis reported 81 issues
* ![INFO][INFO] 81 info

#### Top 10 issues

1. ![INFO][INFO] [proto_command.hpp#L55](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/commands/proto_command.hpp#L55): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_command.hpp#L92](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/commands/proto_command.hpp#L92): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_command.hpp#L97](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/commands/proto_command.hpp#L97): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_command.hpp#L99](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/commands/proto_command.hpp#L99): Undocumented API: Command [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account.hpp#L30](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/common_objects/account.hpp#L30): Undocumented API: Account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account.hpp#L35](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/common_objects/account.hpp#L35): Undocumented API: Account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account.hpp#L43](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/common_objects/account.hpp#L43): Undocumented API: Account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account.hpp#L45](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/common_objects/account.hpp#L45): Undocumented API: Account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_asset.hpp#L31](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/common_objects/account_asset.hpp#L31): Undocumented API: AccountAsset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account_asset.hpp#L37](https://github.com/hyperledger/iroha/blob/0e0e708bd0510cb85c2179d7545875b4854baba1/shared_model/backend/protobuf/common_objects/account_asset.hpp#L37): Undocumented API: AccountAsset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-12-21 17:25:14,2017-12-21 17:25:14
https://api.github.com/repos/hyperledger/iroha/issues/792,https://api.github.com/repos/hyperledger/iroha/issues/comments/352826126,https://github.com/hyperledger/iroha/pull/792#issuecomment-352826126,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/792?src=pr&el=h1) Report
> Merging [#792](https://codecov.io/gh/hyperledger/iroha/pull/792?src=pr&el=desc) into [trunk/bindings-test](https://codecov.io/gh/hyperledger/iroha/commit/6948b52de9bf9f2b2dff1a71b88c038482029e0f?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/792/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/792?src=pr&el=tree)

```diff
@@                 Coverage Diff                  @@
##           trunk/bindings-test     #792   +/-   ##
====================================================
  Coverage                40.15%   40.15%           
====================================================
  Files                      460      460           
  Lines                    15546    15546           
  Branches                  8615     8615           
====================================================
  Hits                      6242     6242           
  Misses                    1554     1554           
  Partials                  7750     7750
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/792?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/792?src=pr&el=footer). Last update [6948b52...2d07101](https://codecov.io/gh/hyperledger/iroha/pull/792?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-19 17:17:16,2017-12-23 13:52:05
https://api.github.com/repos/hyperledger/iroha/issues/791,https://api.github.com/repos/hyperledger/iroha/issues/comments/352780425,https://github.com/hyperledger/iroha/pull/791#issuecomment-352780425,sorabot,"SonarQube analysis reported 827 issues
* ![CRITICAL][CRITICAL] 9 critical
* ![MAJOR][MAJOR] 10 major
* ![MINOR][MINOR] 223 minor
* ![INFO][INFO] 585 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [interactive_query_cli.cpp#L123](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/iroha-cli/interactive/impl/interactive_query_cli.cpp#L123): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L53](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/irohad/model/converters/impl/pb_query_factory.cpp#L53): The Cyclomatic Complexity of this function is 11 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [fe.c#L364](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/shared_model/cryptography/ed25519_sha3_impl/internal/impl/fe.c#L364): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [fe.c#L881](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/shared_model/cryptography/ed25519_sha3_impl/internal/impl/fe.c#L881): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [ge.c#L25](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/shared_model/cryptography/ed25519_sha3_impl/internal/impl/ge.c#L25): The Cyclomatic Complexity of this function is 11 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [ge.c#L67](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/shared_model/cryptography/ed25519_sha3_impl/internal/impl/ge.c#L67): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [sha3.c#L83](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/shared_model/cryptography/ed25519_sha3_impl/internal/impl/sha3.c#L83): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [sha3.c#L154](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/shared_model/cryptography/ed25519_sha3_impl/internal/impl/sha3.c#L154): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [sha512.c#L171](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/shared_model/cryptography/ed25519_sha3_impl/internal/impl/sha512.c#L171): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MAJOR][MAJOR] [fe.c#L556](https://github.com/hyperledger/iroha/blob/f0da31b3406fcc1ccbd6c1f8b7eb41fc9afc6795/shared_model/cryptography/ed25519_sha3_impl/internal/impl/fe.c#L556): The number of code lines in this function is 201 which is greater than 200 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyLinesOfCodeInFunction)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-19 14:53:47,2017-12-19 14:53:47
https://api.github.com/repos/hyperledger/iroha/issues/791,https://api.github.com/repos/hyperledger/iroha/issues/comments/352780576,https://github.com/hyperledger/iroha/pull/791#issuecomment-352780576,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/791?src=pr&el=h1) Report
> Merging [#791](https://codecov.io/gh/hyperledger/iroha/pull/791?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/59fbfd7dfefcc9265605fffc47228d88ba7a1198?src=pr&el=desc) will **decrease** coverage by `1.64%`.
> The diff coverage is `29.18%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/791/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/791?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #791      +/-   ##
===========================================
- Coverage    41.82%   40.17%   -1.65%     
===========================================
  Files          315      456     +141     
  Lines        13511    15502    +1991     
  Branches      7687     8594     +907     
===========================================
+ Hits          5651     6228     +577     
- Misses         671     1554     +883     
- Partials      7189     7720     +531
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/791?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ryptography/ed25519\_sha3\_impl/internal/impl/seed.c](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9pbXBsL3NlZWQuYw==) | `44.44% <ø> (ø)` | |
| [test/module/irohad/network/block\_loader\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyX3Rlc3QuY3Bw) | `21.17% <ø> (ø)` | :arrow_up: |
| [test/module/libs/crypto/hash\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8vaGFzaF90ZXN0LmNwcA==) | `5.88% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `23.83% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `24.05% <ø> (ø)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.38% <ø> (ø)` | :arrow_up: |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.23% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `41.26% <ø> (ø)` | :arrow_up: |
| [...rohad/validation/impl/stateless\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWxlc3NfdmFsaWRhdG9yX2ltcGwuY3Bw) | `36.36% <ø> (ø)` | :arrow_up: |
| ... and [332 more](https://codecov.io/gh/hyperledger/iroha/pull/791/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/791?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/791?src=pr&el=footer). Last update [59fbfd7...f0da31b](https://codecov.io/gh/hyperledger/iroha/pull/791?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-19 14:54:09,2017-12-19 14:54:09
https://api.github.com/repos/hyperledger/iroha/issues/791,https://api.github.com/repos/hyperledger/iroha/issues/comments/352784865,https://github.com/hyperledger/iroha/pull/791#issuecomment-352784865,neewy,As this is a merge from trunk — you are ready to go,2017-12-19 15:04:35,2017-12-19 15:04:35
https://api.github.com/repos/hyperledger/iroha/issues/790,https://api.github.com/repos/hyperledger/iroha/issues/comments/352744701,https://github.com/hyperledger/iroha/pull/790#issuecomment-352744701,sorabot,"SonarQube analysis reported 143 issues
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 140 info

#### Top 10 issues

1. ![MINOR][MINOR] [proto_query.hpp#L123](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/shared_model/backend/protobuf/queries/proto_query.hpp#L123): Missing curly brace. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingCurlyBraces)
1. ![MINOR][MINOR] [commands_validator.hpp#L237](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/shared_model/validators/commands_validator.hpp#L237): Define a constant instead of duplicating this literal R""([a-z]{1,9}\@[a-z]{1,9})"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [commands_validator.hpp#L280](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/shared_model/validators/commands_validator.hpp#L280): Define a constant instead of duplicating this literal R""([a-z]{1,9})"" 4 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [cache.hpp#L27](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/irohad/torii/cache/cache.hpp#L27): Undocumented API: Cache [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L30](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/irohad/torii/cache/cache.hpp#L30): Undocumented API: getIndexSizeHighImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L34](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/irohad/torii/cache/cache.hpp#L34): Undocumented API: getIndexSizeLowImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L36](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/irohad/torii/cache/cache.hpp#L36): Undocumented API: getCacheItemCountImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L40](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/irohad/torii/cache/cache.hpp#L40): Undocumented API: addItemImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L52](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/irohad/torii/cache/cache.hpp#L52): Undocumented API: findItemImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [cache.hpp#L67](https://github.com/hyperledger/iroha/blob/1163adfba65e9ed3ade4123fdc4beb59ef989407/irohad/torii/cache/cache.hpp#L67): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-19 13:11:52,2017-12-19 13:11:52
https://api.github.com/repos/hyperledger/iroha/issues/790,https://api.github.com/repos/hyperledger/iroha/issues/comments/352744807,https://github.com/hyperledger/iroha/pull/790#issuecomment-352744807,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/790?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/shared_model@ba13d6f`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/790/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/790?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##             trunk/shared_model     #790   +/-   ##
=====================================================
  Coverage                      ?   40.17%           
=====================================================
  Files                         ?      456           
  Lines                         ?    15502           
  Branches                      ?     8594           
=====================================================
  Hits                          ?     6228           
  Misses                        ?     1554           
  Partials                      ?     7720
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/790?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `47.05% <ø> (ø)` | |
| [shared\_model/interfaces/commands/command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY29tbWFuZC5ocHA=) | `0% <ø> (ø)` | |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `41.26% <ø> (ø)` | |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `50% <ø> (ø)` | |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.23% <ø> (ø)` | |
| [irohad/ametsuchi/impl/redis\_block\_index.cpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX2luZGV4LmNwcA==) | `45.94% <ø> (ø)` | |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `37.31% <ø> (ø)` | |
| [shared\_model/interfaces/queries/query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9xdWVyeS5ocHA=) | `0% <ø> (ø)` | |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <ø> (ø)` | |
| [...\_model/backend/protobuf/commands/proto\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY29tbWFuZC5ocHA=) | `70% <ø> (ø)` | |
| ... and [18 more](https://codecov.io/gh/hyperledger/iroha/pull/790/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/790?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/790?src=pr&el=footer). Last update [ba13d6f...1163adf](https://codecov.io/gh/hyperledger/iroha/pull/790?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-19 13:12:21,2017-12-19 13:12:21
https://api.github.com/repos/hyperledger/iroha/issues/789,https://api.github.com/repos/hyperledger/iroha/issues/comments/353025651,https://github.com/hyperledger/iroha/pull/789#issuecomment-353025651,neewy,for some reason it also includes hidden commit from bogdan,2017-12-20 10:27:24,2017-12-20 10:27:24
https://api.github.com/repos/hyperledger/iroha/issues/788,https://api.github.com/repos/hyperledger/iroha/issues/comments/353050553,https://github.com/hyperledger/iroha/pull/788#issuecomment-353050553,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/788?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@c036c0d`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `33.96%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/788/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/788?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #788   +/-   ##
==========================================
  Coverage           ?   40.08%           
==========================================
  Files              ?      460           
  Lines              ?    15576           
  Branches           ?     8641           
==========================================
  Hits               ?     6243           
  Misses             ?     1566           
  Partials           ?     7767
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/788?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/788/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <ø> (ø)` | |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/788/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `13.27% <0%> (ø)` | |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/788/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `41.33% <37.5%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/788?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/788?src=pr&el=footer). Last update [c036c0d...541661f](https://codecov.io/gh/hyperledger/iroha/pull/788?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-20 12:28:16,2017-12-22 14:11:52
https://api.github.com/repos/hyperledger/iroha/issues/788,https://api.github.com/repos/hyperledger/iroha/issues/comments/353172360,https://github.com/hyperledger/iroha/pull/788#issuecomment-353172360,l4l,"Also when you will be merging plz squash redundant commit(s) (e.g add ""A"", del ""A"" should be in one commit)",2017-12-20 20:21:26,2017-12-20 20:22:43
https://api.github.com/repos/hyperledger/iroha/issues/788,https://api.github.com/repos/hyperledger/iroha/issues/comments/353603584,https://github.com/hyperledger/iroha/pull/788#issuecomment-353603584,sorabot,"SonarQube analysis reported 45 issues
* ![MINOR][MINOR] 5 minor
* ![INFO][INFO] 40 info

#### Top 10 issues

1. ![MINOR][MINOR] [command_executor.cpp#L186](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/impl/command_executor.cpp#L186): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L255](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/impl/command_executor.cpp#L255): Define a constant instead of duplicating this literal ""asset {} is absent"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L290](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/impl/command_executor.cpp#L290): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L352](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/impl/command_executor.cpp#L352): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L724](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/impl/command_executor.cpp#L724): Define a constant instead of duplicating this literal ""asset {} is absent of {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [command_executor.hpp#L33](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/command_executor.hpp#L33): Undocumented API: CommandExecutor [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [command_executor.hpp#L80](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/command_executor.hpp#L80): Undocumented API: log_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [command_executor.hpp#L83](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/command_executor.hpp#L83): Undocumented API: AppendRoleExecutor [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [command_executor.hpp#L85](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/command_executor.hpp#L85): Undocumented API: AppendRoleExecutor [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [command_executor.hpp#L101](https://github.com/hyperledger/iroha/blob/541661f6ef2d494783e09020f2783cf4b6b09c5a/irohad/model/execution/command_executor.hpp#L101): Undocumented API: DetachRoleExecutor [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-22 14:00:28,2017-12-22 14:00:28
https://api.github.com/repos/hyperledger/iroha/issues/787,https://api.github.com/repos/hyperledger/iroha/issues/comments/354590519,https://github.com/hyperledger/iroha/issues/787#issuecomment-354590519,neewy,I strongly hope that plugin CoderGears Cppdepend can help us a lot in a new year,2017-12-31 07:55:18,2017-12-31 07:55:18
https://api.github.com/repos/hyperledger/iroha/issues/787,https://api.github.com/repos/hyperledger/iroha/issues/comments/367003146,https://github.com/hyperledger/iroha/issues/787#issuecomment-367003146,Warchant,"@neewy I think it is possible to implement additional rules for clang-tidy, which do checks, at least for some of the above rules. What do you think?",2018-02-20 14:56:20,2018-02-20 14:56:20
https://api.github.com/repos/hyperledger/iroha/issues/787,https://api.github.com/repos/hyperledger/iroha/issues/comments/395948717,https://github.com/hyperledger/iroha/issues/787#issuecomment-395948717,l4l,"Outdated, codacy (though pluginless) is used instead.
Consider opening another issue if you feel that it need to be resolved",2018-06-09 07:44:10,2018-06-09 07:44:10
https://api.github.com/repos/hyperledger/iroha/issues/786,https://api.github.com/repos/hyperledger/iroha/issues/comments/352680234,https://github.com/hyperledger/iroha/issues/786#issuecomment-352680234,Warchant,"@neewy I request from you to enforce everyone to read and remember this glossary.

Review and additions are also welcomed.
",2017-12-19 08:59:10,2017-12-19 08:59:20
https://api.github.com/repos/hyperledger/iroha/issues/786,https://api.github.com/repos/hyperledger/iroha/issues/comments/354590757,https://github.com/hyperledger/iroha/issues/786#issuecomment-354590757,neewy,"This is fine to post anywhere, but we should extend it with our own notions like WSV and others. If you will also add a definition for System Test then you will help our japanese colleagues to understand the difference better ",2017-12-31 08:00:49,2017-12-31 08:00:49
https://api.github.com/repos/hyperledger/iroha/issues/786,https://api.github.com/repos/hyperledger/iroha/issues/comments/354595843,https://github.com/hyperledger/iroha/issues/786#issuecomment-354595843,Warchant,This is exactly a reason why I posted it here,2017-12-31 10:12:18,2017-12-31 10:12:18
https://api.github.com/repos/hyperledger/iroha/issues/786,https://api.github.com/repos/hyperledger/iroha/issues/comments/377896488,https://github.com/hyperledger/iroha/issues/786#issuecomment-377896488,laSinteZ,"Closing this issue since we have [Glossary section](http://iroha.readthedocs.io/en/latest/core_concepts/glossary/) in documentation now
",2018-04-02 09:45:51,2018-04-02 09:45:51
https://api.github.com/repos/hyperledger/iroha/issues/785,https://api.github.com/repos/hyperledger/iroha/issues/comments/352697635,https://github.com/hyperledger/iroha/pull/785#issuecomment-352697635,l4l,"Looks nice!
Also afair there's some DNS host validations in the develop branch. Thus plz don't spend time on the improvement, I'm pretty sure we can reuse it",2017-12-19 10:07:53,2017-12-19 10:07:53
https://api.github.com/repos/hyperledger/iroha/issues/785,https://api.github.com/repos/hyperledger/iroha/issues/comments/353046108,https://github.com/hyperledger/iroha/pull/785#issuecomment-353046108,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/785?src=pr&el=h1) Report
> Merging [#785](https://codecov.io/gh/hyperledger/iroha/pull/785?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/6089aadf910b36555d3c864a8393d70631327ce1?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `37.77%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/785/graphs/tree.svg?width=650&token=VEvywEmaef&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/785?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##           trunk/shared_model     #785      +/-   ##
======================================================
- Coverage               40.17%   40.17%   -0.01%     
======================================================
  Files                     456      458       +2     
  Lines                   15502    15529      +27     
  Branches                 8594     8611      +17     
======================================================
+ Hits                     6228     6238      +10     
  Misses                   1554     1554              
- Partials                 7720     7737      +17
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/785?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...t/module/libs/validator/address\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/785/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy92YWxpZGF0b3IvYWRkcmVzc192YWxpZGF0b3JfdGVzdC5jcHA=) | `25% <25%> (ø)` | |
| [libs/validator/address\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/785/diff?src=pr&el=tree#diff-bGlicy92YWxpZGF0b3IvYWRkcmVzc192YWxpZGF0b3IuaHBw) | `33.33% <33.33%> (ø)` | |
| [shared\_model/validators/commands\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/785/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yLmhwcA==) | `44.5% <33.33%> (+0.25%)` | :arrow_up: |
| [...hared\_model/validators/commands\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/785/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `36.19% <50%> (+1.84%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/785?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/785?src=pr&el=footer). Last update [6089aad...3c93a13](https://codecov.io/gh/hyperledger/iroha/pull/785?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-20 12:04:44,2017-12-21 12:06:01
https://api.github.com/repos/hyperledger/iroha/issues/785,https://api.github.com/repos/hyperledger/iroha/issues/comments/353552239,https://github.com/hyperledger/iroha/pull/785#issuecomment-353552239,sorabot,"SonarQube analysis reported 62 issues
* ![MINOR][MINOR] 2 minor
* ![INFO][INFO] 60 info

#### Top 10 issues

1. ![MINOR][MINOR] [commands_validator.hpp#L238](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/shared_model/validators/commands_validator.hpp#L238): Define a constant instead of duplicating this literal R""([a-z]{1,9}\@[a-z]{1,9})"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [commands_validator.hpp#L276](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/shared_model/validators/commands_validator.hpp#L276): Define a constant instead of duplicating this literal R""([a-z]{1,9})"" 4 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [parser.hpp#L53](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/libs/parser/parser.hpp#L53): Undocumented API: ss [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [parser.hpp#L55](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/libs/parser/parser.hpp#L55): Undocumented API: nonstd [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [parser.hpp#L57](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/libs/parser/parser.hpp#L57): Undocumented API: val [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [parser.hpp#L59](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/libs/parser/parser.hpp#L59): Undocumented API: val [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [parser.hpp#L61](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/libs/parser/parser.hpp#L61): Undocumented API: nonstd [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [address_validator.hpp#L56](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/libs/validator/address_validator.hpp#L56): Undocumented API: std [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [commands_validator.hpp#L45](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/shared_model/validators/commands_validator.hpp#L45): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [commands_validator.hpp#L58](https://github.com/hyperledger/iroha/blob/4e76d3a9fe5846027cc74950d3766810c4fef5eb/shared_model/validators/commands_validator.hpp#L58): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-22 08:51:18,2017-12-22 08:51:18
https://api.github.com/repos/hyperledger/iroha/issues/784,https://api.github.com/repos/hyperledger/iroha/issues/comments/352688117,https://github.com/hyperledger/iroha/pull/784#issuecomment-352688117,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/784?src=pr&el=h1) Report
> Merging [#784](https://codecov.io/gh/hyperledger/iroha/pull/784?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/59fbfd7dfefcc9265605fffc47228d88ba7a1198?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `20.56%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/784/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/784?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #784      +/-   ##
===========================================
+ Coverage    41.82%   41.82%   +<.01%     
===========================================
  Files          315      313       -2     
  Lines        13511    13235     -276     
  Branches      7687     7483     -204     
===========================================
- Hits          5651     5536     -115     
- Misses         671      755      +84     
+ Partials      7189     6944     -245
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/784?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/query\_execution.hpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJ5X2V4ZWN1dGlvbi5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/queries/responses/error\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcmVzcG9uc2VzL2Vycm9yX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/json\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/queries/get\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnRfZGV0YWlsLmhwcA==) | `0% <0%> (ø)` | |
| [...rohad/model/converters/pb\_query\_responses\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfcmVzcG9uc2VzX3Rlc3QuY3Bw) | `16.16% <0%> (-1.43%)` | :arrow_down: |
| [...rohad/model/converters/impl/pb\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9jb21tYW5kX2ZhY3RvcnkuY3Bw) | `37.56% <0%> (-0.11%)` | :arrow_down: |
| [irohad/model/impl/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `31.73% <0%> (-18.52%)` | :arrow_down: |
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `9.09% <0%> (-1.06%)` | :arrow_down: |
| [...odel/queries/responses/account\_detail\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcmVzcG9uc2VzL2FjY291bnRfZGV0YWlsX3Jlc3BvbnNlLmhwcA==) | `0% <0%> (ø)` | |
| ... and [25 more](https://codecov.io/gh/hyperledger/iroha/pull/784/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/784?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/784?src=pr&el=footer). Last update [59fbfd7...01fccc0](https://codecov.io/gh/hyperledger/iroha/pull/784?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-19 09:31:07,2017-12-19 10:01:08
https://api.github.com/repos/hyperledger/iroha/issues/784,https://api.github.com/repos/hyperledger/iroha/issues/comments/352695809,https://github.com/hyperledger/iroha/pull/784#issuecomment-352695809,sorabot,"SonarQube analysis reported 128 issues
* ![CRITICAL][CRITICAL] 5 critical
* ![MINOR][MINOR] 34 minor
* ![INFO][INFO] 89 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L566](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/pb_command_factory.cpp#L566): The Cyclomatic Complexity of this function is 17 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L56](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/pb_query_factory.cpp#L56): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L26](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/pb_query_response_factory.cpp#L26): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L286](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/pb_query_response_factory.cpp#L286): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [pb_query_response_factory.cpp#L289](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/pb_query_response_factory.cpp#L289): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [json_query_factory.cpp#L36](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/json_query_factory.cpp#L36): Variable 'deserializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_query_factory.cpp#L37](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/json_query_factory.cpp#L37): Define a constant instead of duplicating this literal ""GetAccount"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L38](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/json_query_factory.cpp#L38): Define a constant instead of duplicating this literal ""GetAccountAssets"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L40](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/json_query_factory.cpp#L40): Define a constant instead of duplicating this literal ""GetAccountDetail"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L42](https://github.com/hyperledger/iroha/blob/01fccc0115070078a62c6e4388cfbde59b01ad75/irohad/model/converters/impl/json_query_factory.cpp#L42): Define a constant instead of duplicating this literal ""GetAccountTransactions"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-19 10:00:36,2017-12-19 10:00:36
https://api.github.com/repos/hyperledger/iroha/issues/784,https://api.github.com/repos/hyperledger/iroha/issues/comments/352976165,https://github.com/hyperledger/iroha/pull/784#issuecomment-352976165,l4l,May you remove every merge commits (c7ec7bb2 and 9c43b5b) from this pr and rebase it?,2017-12-20 06:23:41,2017-12-20 06:23:41
https://api.github.com/repos/hyperledger/iroha/issues/784,https://api.github.com/repos/hyperledger/iroha/issues/comments/353026107,https://github.com/hyperledger/iroha/pull/784#issuecomment-353026107,MizukiSonoko,"Sorry I miss again, I will re pr 🙇 ",2017-12-20 10:29:28,2017-12-20 10:29:28
https://api.github.com/repos/hyperledger/iroha/issues/783,https://api.github.com/repos/hyperledger/iroha/issues/comments/352623052,https://github.com/hyperledger/iroha/pull/783#issuecomment-352623052,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/783?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/mst@51fae2d`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `21.42%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/783/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/783?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##             trunk/mst     #783   +/-   ##
============================================
  Coverage             ?   41.56%           
============================================
  Files                ?      338           
  Lines                ?    13818           
  Branches             ?     7871           
============================================
  Hits                 ?     5743           
  Misses               ?      737           
  Partials             ?     7338
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/783?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/783/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `52.5% <0%> (ø)` | |
| [...\_transactions/gossip\_propagation\_strategy\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/783/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvZ29zc2lwX3Byb3BhZ2F0aW9uX3N0cmF0ZWd5X3Rlc3QuY3Bw) | `40% <0%> (ø)` | |
| [...e/irohad/multi\_sig\_transactions/transport\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/783/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvdHJhbnNwb3J0X3Rlc3QuY3Bw) | `7.4% <0%> (ø)` | |
| [...d/model/converters/impl/pb\_transaction\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/783/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl90cmFuc2FjdGlvbl9mYWN0b3J5LmNwcA==) | `36.36% <0%> (ø)` | |
| [...\_transactions/impl/gossip\_propagation\_strategy.cpp](https://codecov.io/gh/hyperledger/iroha/pull/783/diff?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvaW1wbC9nb3NzaXBfcHJvcGFnYXRpb25fc3RyYXRlZ3kuY3Bw) | `61.76% <0%> (ø)` | |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/783/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `38.23% <100%> (ø)` | |
| [...irohad/multi\_sig\_transactions/mst\_test\_helpers.hpp](https://codecov.io/gh/hyperledger/iroha/pull/783/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvbXN0X3Rlc3RfaGVscGVycy5ocHA=) | `61.9% <50%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/783?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/783?src=pr&el=footer). Last update [51fae2d...7c97ea0](https://codecov.io/gh/hyperledger/iroha/pull/783?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-19 02:42:36,2017-12-19 04:50:50
https://api.github.com/repos/hyperledger/iroha/issues/783,https://api.github.com/repos/hyperledger/iroha/issues/comments/352639090,https://github.com/hyperledger/iroha/pull/783#issuecomment-352639090,sorabot,"SonarQube analysis reported 5 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L225](https://github.com/hyperledger/iroha/blob/7c97ea016b782ed7895e82497d2c7ca82fa1b75c/irohad/main/application.cpp#L225): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L229](https://github.com/hyperledger/iroha/blob/7c97ea016b782ed7895e82497d2c7ca82fa1b75c/irohad/main/application.cpp#L229): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/7c97ea016b782ed7895e82497d2c7ca82fa1b75c/irohad/main/application.cpp#L31): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.cpp#L225](https://github.com/hyperledger/iroha/blob/7c97ea016b782ed7895e82497d2c7ca82fa1b75c/irohad/main/application.cpp#L225): Define a constant instead of duplicating this literal ""0.0.0.0:"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [application.cpp#L189](https://github.com/hyperledger/iroha/blob/7c97ea016b782ed7895e82497d2c7ca82fa1b75c/irohad/main/application.cpp#L189): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-19 04:50:22,2017-12-19 04:50:22
https://api.github.com/repos/hyperledger/iroha/issues/782,https://api.github.com/repos/hyperledger/iroha/issues/comments/352579498,https://github.com/hyperledger/iroha/issues/782#issuecomment-352579498,l4l,"I have even worse results:
```==17594== 
==17594== HEAP SUMMARY:
==17594==     in use at exit: 25,149 bytes in 328 blocks
==17594==   total heap usage: 20,216 allocs, 19,888 frees, 10,177,115 bytes allocated
==17594== 
==17594== Thread 1:
==17594== 1,704 (128 direct, 1,576 indirect) bytes in 1 blocks are definitely lost in loss record 153 of 154
==17594==    at 0x4C2D52F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17594==    by 0x1982D9: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<rxcpp::detail::composite_subscription_inner::composite_subscription_state, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==17594==    by 0x1952A4: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<rxcpp::detail::composite_subscription_inner::composite_subscription_state, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<rxcpp::detail::composite_subscription_inner::composite_subscription_state, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)
==17594==    by 0x1904D9: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<rxcpp::detail::composite_subscription_inner::composite_subscription_state, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<rxcpp::detail::composite_subscription_inner::composite_subscription_state, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<rxcpp::detail::composite_subscription_inner::composite_subscription_state, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:104)
==17594==    by 0x188F22: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<rxcpp::detail::composite_subscription_inner::composite_subscription_state, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>>(std::_Sp_make_shared_tag, rxcpp::detail::composite_subscription_inner::composite_subscription_state*, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state> const&) (shared_ptr_base.h:635)
==17594==    by 0x18367F: std::__shared_ptr<rxcpp::detail::composite_subscription_inner::composite_subscription_state, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>>(std::_Sp_make_shared_tag, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state> const&) (shared_ptr_base.h:1295)
==17594==    by 0x17BAD7: std::shared_ptr<rxcpp::detail::composite_subscription_inner::composite_subscription_state>::shared_ptr<std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>>(std::_Sp_make_shared_tag, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state> const&) (shared_ptr.h:344)
==17594==    by 0x1713EF: std::shared_ptr<rxcpp::detail::composite_subscription_inner::composite_subscription_state> std::allocate_shared<rxcpp::detail::composite_subscription_inner::composite_subscription_state, std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state>>(std::allocator<rxcpp::detail::composite_subscription_inner::composite_subscription_state> const&) (shared_ptr.h:691)
==17594==    by 0x169255: std::shared_ptr<rxcpp::detail::composite_subscription_inner::composite_subscription_state> std::make_shared<rxcpp::detail::composite_subscription_inner::composite_subscription_state>() (shared_ptr.h:707)
==17594==    by 0x15FA3C: rxcpp::detail::composite_subscription_inner::composite_subscription_inner() (rx-subscription.hpp:296)
==17594==    by 0x15FDA3: rxcpp::composite_subscription::composite_subscription() (rx-subscription.hpp:382)
==17594==    by 0x22043F: rxcpp::subjects::subject<iroha::consensus::yac::CommitMessage>::subject() (rx-subject.hpp:245)
==17594== 
==17594== 4,096 bytes in 1 blocks are definitely lost in loss record 154 of 154
==17594==    at 0x4C2CE5F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==17594==    by 0xAD99E18: ???
==17594==    by 0xADB53C1: ???
==17594==    by 0xADABA41: ???
==17594==    by 0xADAC1B1: ???
==17594==    by 0x6F06C6C: gethostbyname2_r@@GLIBC_2.2.5 (in /usr/lib/libc-2.26.so)
==17594==    by 0x6EDE935: gaih_inet.constprop.7 (in /usr/lib/libc-2.26.so)
==17594==    by 0x6EDF573: getaddrinfo (in /usr/lib/libc-2.26.so)
==17594==    by 0x4DDECE: tacopie::tcp_socket::connect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (tcp_socket.cpp:135)
==17594==    by 0x4D88A6: tacopie::tcp_client::connect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) (tcp_client.cpp:79)
==17594==    by 0x4D050F: connect (tcp_client.hpp:44)
==17594==    by 0x4D050F: cpp_redis::network::redis_connection::connect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::function<void (cpp_redis::network::redis_connection&)> const&, std::function<void (cpp_redis::network::redis_connection&, cpp_redis::reply&)> const&) (redis_connection.cpp:61)
==17594==    by 0x4BA7F3: cpp_redis::redis_client::connect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::function<void (cpp_redis::redis_client&)> const&) (redis_client.cpp:51)
==17594== 
==17594== LEAK SUMMARY:
==17594==    definitely lost: 4,224 bytes in 2 blocks
==17594==    indirectly lost: 1,576 bytes in 20 blocks
==17594==      possibly lost: 0 bytes in 0 blocks
==17594==    still reachable: 19,349 bytes in 306 blocks
==17594==         suppressed: 0 bytes in 0 blocks
```

Ping @grimadas ",2017-12-18 22:32:56,2017-12-18 22:32:56
https://api.github.com/repos/hyperledger/iroha/issues/782,https://api.github.com/repos/hyperledger/iroha/issues/comments/354590929,https://github.com/hyperledger/iroha/issues/782#issuecomment-354590929,neewy,Why Bulat? Can you explain the output of valgrind? Where the problem is localized?,2017-12-31 08:04:16,2017-12-31 08:04:16
https://api.github.com/repos/hyperledger/iroha/issues/782,https://api.github.com/repos/hyperledger/iroha/issues/comments/375908421,https://github.com/hyperledger/iroha/issues/782#issuecomment-375908421,l4l,"Should be fixed in #883, I have only false-positives right now",2018-03-24 17:04:07,2018-03-24 17:04:07
https://api.github.com/repos/hyperledger/iroha/issues/781,https://api.github.com/repos/hyperledger/iroha/issues/comments/352364934,https://github.com/hyperledger/iroha/pull/781#issuecomment-352364934,Warchant,Sad :( MacOS build does not work. It seems I have to add automatic downloading of the ed lib.,2017-12-18 09:02:20,2017-12-18 09:02:32
https://api.github.com/repos/hyperledger/iroha/issues/781,https://api.github.com/repos/hyperledger/iroha/issues/comments/352409574,https://github.com/hyperledger/iroha/pull/781#issuecomment-352409574,Warchant,I will reopen when finish with cmake script.,2017-12-18 12:14:51,2017-12-18 12:14:51
https://api.github.com/repos/hyperledger/iroha/issues/781,https://api.github.com/repos/hyperledger/iroha/issues/comments/352642899,https://github.com/hyperledger/iroha/pull/781#issuecomment-352642899,sorabot,"SonarQube analysis reported 40 issues
* ![INFO][INFO] 40 info

#### Top 10 issues

1. ![INFO][INFO] [types.hpp#L42](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L42): Undocumented API: BadFormatException [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L43](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L43): Undocumented API: byte_t [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L45](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L45): Undocumented API: code [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L99](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L99): Undocumented API: from_string [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L151](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L151): Undocumented API: nonstd [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L153](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L153): Undocumented API: result [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L154](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L154): Undocumented API: i [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L154](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L154): Undocumented API: length [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L155](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L155): Undocumented API: byte [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [types.hpp#L157](https://github.com/hyperledger/iroha/blob/a6a9528e0a2eede2ca2947fba71d2eeaaa69561e/libs/common/types.hpp#L157): Undocumented API: at [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-12-19 05:21:04,2017-12-19 05:21:04
https://api.github.com/repos/hyperledger/iroha/issues/780,https://api.github.com/repos/hyperledger/iroha/issues/comments/352347691,https://github.com/hyperledger/iroha/pull/780#issuecomment-352347691,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/780?src=pr&el=h1) Report
> Merging [#780](https://codecov.io/gh/hyperledger/iroha/pull/780?src=pr&el=desc) into [trunk/mst](https://codecov.io/gh/hyperledger/iroha/commit/526ee932a72abdf6e9d2ad4e5cdd57508be0bca4?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `55.55%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/780/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/780?src=pr&el=tree)

```diff
@@              Coverage Diff              @@
##           trunk/mst     #780      +/-   ##
=============================================
+ Coverage      44.32%   44.33%   +0.01%     
=============================================
  Files            297      297              
  Lines          11872    11866       -6     
  Branches        6343     6338       -5     
=============================================
- Hits            5262     5261       -1     
  Misses           760      760              
+ Partials        5850     5845       -5
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/780?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/780/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `58.9% <ø> (-1.63%)` | :arrow_down: |
| [...e/irohad/multi\_sig\_transactions/transport\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/780/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvdHJhbnNwb3J0X3Rlc3QuY3Bw) | `7.14% <0%> (-4.29%)` | :arrow_down: |
| [irohad/model/operators/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/780/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL29wZXJhdG9ycy9oYXNoLmhwcA==) | `75% <100%> (ø)` | :arrow_up: |
| [irohad/multi\_sig\_transactions/state/mst\_state.hpp](https://codecov.io/gh/hyperledger/iroha/pull/780/diff?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGUvbXN0X3N0YXRlLmhwcA==) | `64.28% <100%> (+14.28%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/780?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/780?src=pr&el=footer). Last update [526ee93...c9dcfbb](https://codecov.io/gh/hyperledger/iroha/pull/780?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-18 07:38:27,2017-12-18 09:24:53
https://api.github.com/repos/hyperledger/iroha/issues/780,https://api.github.com/repos/hyperledger/iroha/issues/comments/352370369,https://github.com/hyperledger/iroha/pull/780#issuecomment-352370369,sorabot,"SonarQube analysis reported 42 issues
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 39 info

#### Top 10 issues

1. ![MINOR][MINOR] [types.hpp#L82](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/libs/common/types.hpp#L82): The scope of the variable 'front' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)
1. ![MINOR][MINOR] [types.hpp#L82](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/libs/common/types.hpp#L82): The scope of the variable 'back' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)
1. ![MINOR][MINOR] [types.hpp#L294](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/libs/common/types.hpp#L294): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [hash.hpp#L33](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/irohad/model/operators/hash.hpp#L33): Undocumented API: TxType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L34](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/irohad/model/operators/hash.hpp#L34): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L48](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/irohad/model/operators/hash.hpp#L48): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L63](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/irohad/model/operators/hash.hpp#L63): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_state.hpp#L55](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/irohad/multi_sig_transactions/state/mst_state.hpp#L55): Undocumented API: TxHashEquality [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_state.hpp#L57](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/irohad/multi_sig_transactions/state/mst_state.hpp#L57): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_state.hpp#L76](https://github.com/hyperledger/iroha/blob/c9dcfbbca55ea09be57e5a0abecb95f0f53ac0e3/irohad/multi_sig_transactions/state/mst_state.hpp#L76): Undocumented API: CompleterType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-18 09:24:21,2017-12-18 09:24:21
https://api.github.com/repos/hyperledger/iroha/issues/779,https://api.github.com/repos/hyperledger/iroha/issues/comments/353014731,https://github.com/hyperledger/iroha/issues/779#issuecomment-353014731,l4l,"Sorry, I'm not really sure that I clearly understood you
 
If you want to replace `...` in the example then imo it's not really good idea (at least for pubkey/signature). It basically can lead for using these objects with the default values (e.g keys) and that is not secure.
So it's intended being modified by the user in advance (thus built systems won't have backdoors)",2017-12-20 09:42:44,2017-12-20 09:42:44
https://api.github.com/repos/hyperledger/iroha/issues/779,https://api.github.com/repos/hyperledger/iroha/issues/comments/353219395,https://github.com/hyperledger/iroha/issues/779#issuecomment-353219395,Octarine-J,"No, I mean the last comma in JSON file (shown in a bold font in the GetRoles example above) causes a parsing error.",2017-12-21 00:08:47,2017-12-21 00:08:47
https://api.github.com/repos/hyperledger/iroha/issues/779,https://api.github.com/repos/hyperledger/iroha/issues/comments/453971118,https://github.com/hyperledger/iroha/issues/779#issuecomment-453971118,LiraLemur,"The issue seems outdated, I suggest closing it with the PR. Anyway, thank you fr noticing that issue!

There seems no issue with JSON at the moment (I believe it was fixed elsewhere). ",2019-01-14 11:15:31,2019-01-14 11:15:31
https://api.github.com/repos/hyperledger/iroha/issues/779,https://api.github.com/repos/hyperledger/iroha/issues/comments/454748716,https://github.com/hyperledger/iroha/issues/779#issuecomment-454748716,l4l,"iroha-api is considered deprecated actually, all docs are located at that repo",2019-01-16 11:38:43,2019-01-16 11:38:43
https://api.github.com/repos/hyperledger/iroha/issues/778,https://api.github.com/repos/hyperledger/iroha/issues/comments/352264302,https://github.com/hyperledger/iroha/pull/778#issuecomment-352264302,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/778?src=pr&el=h1) Report
> Merging [#778](https://codecov.io/gh/hyperledger/iroha/pull/778?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c79bfa0fd68a959301827a100fafbad9608c39f3?src=pr&el=desc) will **decrease** coverage by `0.28%`.
> The diff coverage is `34.86%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/778/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/778?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #778      +/-   ##
===========================================
- Coverage    31.42%   31.14%   -0.29%     
===========================================
  Files          464      451      -13     
  Lines        13669    13304     -365     
  Branches      8707     8545     -162     
===========================================
- Hits          4296     4144     -152     
+ Misses        1518     1421      -97     
+ Partials      7855     7739     -116
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/778?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...rohad/model/converters/impl/json\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2Jsb2NrX2ZhY3RvcnkuY3Bw) | `44.44% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `10.48% <ø> (ø)` | :arrow_up: |
| [...t/module/irohad/model/converters/pb\_block\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfYmxvY2tfdGVzdC5jcHA=) | `25% <ø> (ø)` | :arrow_up: |
| [irohad/model/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2Jsb2NrLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/redis\_block\_index.hpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX2luZGV4LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...le/irohad/model/operators/model\_operators\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL29wZXJhdG9ycy9tb2RlbF9vcGVyYXRvcnNfdGVzdC5jcHA=) | `25.82% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `85.71% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/impl/pb\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9ibG9ja19mYWN0b3J5LmNwcA==) | `45.71% <ø> (ø)` | :arrow_up: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/transaction\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3RyYW5zYWN0aW9uX3Jlc3BvbnNlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| ... and [132 more](https://codecov.io/gh/hyperledger/iroha/pull/778/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/778?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/778?src=pr&el=footer). Last update [c79bfa0...e86a387](https://codecov.io/gh/hyperledger/iroha/pull/778?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-17 15:39:23,2017-12-28 16:21:36
https://api.github.com/repos/hyperledger/iroha/issues/778,https://api.github.com/repos/hyperledger/iroha/issues/comments/353014794,https://github.com/hyperledger/iroha/pull/778#issuecomment-353014794,nickaleks,"https://soramitsu.atlassian.net/browse/IR-741
",2017-12-20 09:42:57,2017-12-20 09:42:57
https://api.github.com/repos/hyperledger/iroha/issues/778,https://api.github.com/repos/hyperledger/iroha/issues/comments/353723475,https://github.com/hyperledger/iroha/pull/778#issuecomment-353723475,muratovv,"Pls, fix the build. After it, I will approve changes.",2017-12-23 12:24:26,2017-12-23 12:24:26
https://api.github.com/repos/hyperledger/iroha/issues/778,https://api.github.com/repos/hyperledger/iroha/issues/comments/353973980,https://github.com/hyperledger/iroha/pull/778#issuecomment-353973980,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [command_connection_test.cpp#L27](https://github.com/hyperledger/iroha/blob/4a8453306f3d79a2d328bd4e01ca3026128dfa6d/test/module/irohad/api/connection/command_connection_test.cpp#L27): The class 'CommandConnectionTest' does not have a constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoConstructor)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-26 14:23:30,2017-12-26 14:23:30
https://api.github.com/repos/hyperledger/iroha/issues/777,https://api.github.com/repos/hyperledger/iroha/issues/comments/352255865,https://github.com/hyperledger/iroha/pull/777#issuecomment-352255865,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/777?src=pr&el=h1) Report
> Merging [#777](https://codecov.io/gh/hyperledger/iroha/pull/777?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/1b1133e12fda044c65b584c4a9fb8dfe02aa0888?src=pr&el=desc) will **increase** coverage by `0.04%`.
> The diff coverage is `45.45%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/777/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/777?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##           trunk/shared_model     #777      +/-   ##
======================================================
+ Coverage               41.28%   41.33%   +0.04%     
======================================================
  Files                     430      430              
  Lines                   13888    13896       +8     
  Branches                 7471     7477       +6     
======================================================
+ Hits                     5734     5744      +10     
+ Misses                   1554     1544      -10     
- Partials                 6600     6608       +8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/777?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...hared\_model/interfaces/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY3JlYXRlX2FjY291bnQuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb24uaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/commands/create\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY3JlYXRlX2Fzc2V0LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `19.56% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/queries/query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...\_model/backend\_proto/shared\_proto\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3F1ZXJpZXNfdGVzdC5jcHA=) | `17.14% <0%> (-3.55%)` | :arrow_down: |
| [...l/backend/protobuf/commands/proto\_create\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY3JlYXRlX2Fzc2V0LmhwcA==) | `80% <100%> (ø)` | :arrow_up: |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `73.07% <100%> (ø)` | :arrow_up: |
| [...backend/protobuf/commands/proto\_create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY3JlYXRlX2FjY291bnQuaHBw) | `69.23% <100%> (ø)` | :arrow_up: |
| [shared\_model/validators/commands\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yLmhwcA==) | `44.52% <100%> (ø)` | :arrow_up: |
| ... and [5 more](https://codecov.io/gh/hyperledger/iroha/pull/777/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/777?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/777?src=pr&el=footer). Last update [1b1133e...ae14d36](https://codecov.io/gh/hyperledger/iroha/pull/777?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-17 13:31:18,2017-12-18 10:22:50
https://api.github.com/repos/hyperledger/iroha/issues/777,https://api.github.com/repos/hyperledger/iroha/issues/comments/352384552,https://github.com/hyperledger/iroha/pull/777#issuecomment-352384552,sorabot,"SonarQube analysis reported 101 issues
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 98 info

#### Top 10 issues

1. ![MINOR][MINOR] [proto_query.hpp#L121](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/backend/protobuf/queries/proto_query.hpp#L121): Missing curly brace. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingCurlyBraces)
1. ![MINOR][MINOR] [commands_validator.hpp#L199](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/validators/commands_validator.hpp#L199): Define a constant instead of duplicating this literal R""([a-z]{1,9}\@[a-z]{1,9})"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [commands_validator.hpp#L242](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/validators/commands_validator.hpp#L242): Define a constant instead of duplicating this literal R""([a-z]{1,9})"" 4 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [proto_create_account.hpp#L26](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/backend/protobuf/commands/proto_create_account.hpp#L26): Undocumented API: CreateAccount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_create_account.hpp#L31](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/backend/protobuf/commands/proto_create_account.hpp#L31): Undocumented API: CreateAccount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_create_account.hpp#L40](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/backend/protobuf/commands/proto_create_account.hpp#L40): Undocumented API: CreateAccount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_create_account.hpp#L42](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/backend/protobuf/commands/proto_create_account.hpp#L42): Undocumented API: CreateAccount [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_create_asset.hpp#L26](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/backend/protobuf/commands/proto_create_asset.hpp#L26): Undocumented API: CreateAsset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_create_asset.hpp#L31](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/backend/protobuf/commands/proto_create_asset.hpp#L31): Undocumented API: CreateAsset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [proto_create_asset.hpp#L37](https://github.com/hyperledger/iroha/blob/ae14d36f87f721363e57ac3847feacfc922342ec/shared_model/backend/protobuf/commands/proto_create_asset.hpp#L37): Undocumented API: CreateAsset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-18 10:20:44,2017-12-18 10:20:44
https://api.github.com/repos/hyperledger/iroha/issues/776,https://api.github.com/repos/hyperledger/iroha/issues/comments/352254198,https://github.com/hyperledger/iroha/pull/776#issuecomment-352254198,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/776?src=pr&el=h1) Report
> Merging [#776](https://codecov.io/gh/hyperledger/iroha/pull/776?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c709b75fd1f287f958b3dd8836a3f351711f6280?src=pr&el=desc) will **increase** coverage by `0.54%`.
> The diff coverage is `29.48%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/776/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/776?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #776      +/-   ##
===========================================
+ Coverage    41.98%   42.53%   +0.54%     
===========================================
  Files          311      315       +4     
  Lines        13132    13065      -67     
  Branches      7414     7299     -115     
===========================================
+ Hits          5514     5557      +43     
  Misses         727      727              
+ Partials      6891     6781     -110
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/776?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/redis\_block\_index.hpp](https://codecov.io/gh/hyperledger/iroha/pull/776/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX2luZGV4LmhwcA==) | `0% <0%> (ø)` | |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/776/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `47.05% <0%> (+2.23%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/776/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `24.05% <0%> (-1.27%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/776/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `23.83% <22.95%> (+7.79%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/776/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfZml4dHVyZS5ocHA=) | `34.21% <25%> (-3.29%)` | :arrow_down: |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/776/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `37.31% <37.31%> (ø)` | |
| [irohad/ametsuchi/impl/redis\_block\_index.cpp](https://codecov.io/gh/hyperledger/iroha/pull/776/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX2luZGV4LmNwcA==) | `45.94% <45.94%> (ø)` | |
| [irohad/ametsuchi/impl/block\_index.hpp](https://codecov.io/gh/hyperledger/iroha/pull/776/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2Jsb2NrX2luZGV4LmhwcA==) | `50% <50%> (ø)` | |
| ... and [2 more](https://codecov.io/gh/hyperledger/iroha/pull/776/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/776?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/776?src=pr&el=footer). Last update [c709b75...27c888f](https://codecov.io/gh/hyperledger/iroha/pull/776?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-17 13:01:46,2017-12-18 17:29:15
https://api.github.com/repos/hyperledger/iroha/issues/776,https://api.github.com/repos/hyperledger/iroha/issues/comments/352496560,https://github.com/hyperledger/iroha/pull/776#issuecomment-352496560,sorabot,"SonarQube analysis reported 13 issues
* ![MINOR][MINOR] 9 minor
* ![INFO][INFO] 4 info

#### Top 10 issues

1. ![MINOR][MINOR] [redis_block_index.hpp#L52](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/irohad/ametsuchi/impl/redis_block_index.hpp#L52): Unused private function: 'RedisBlockIndex::indexAccountAssets' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L185](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L185): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L303](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L303): Unused variable: account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L303](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L303): Unused variable: src_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L303](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L303): Unused variable: dest_account [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![MINOR][MINOR] [ametsuchi_test.cpp#L303](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L303): Unused variable: asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)
1. ![INFO][INFO] [mutable_storage_impl.hpp#L33](https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/irohad/ametsuchi/impl/mutable_storage_impl.hpp#L33): Undocumented API: MutableStorageImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-18 17:28:20,2017-12-18 17:28:20
https://api.github.com/repos/hyperledger/iroha/issues/776,https://api.github.com/repos/hyperledger/iroha/issues/comments/352497744,https://github.com/hyperledger/iroha/pull/776#issuecomment-352497744,lebdron,"@Warchant @bakhtin please check this
>Unused private function: 'RedisBlockIndex::indexAccountAssets'

https://github.com/hyperledger/iroha/blob/27c888fe94149e6b1dc761cf846b4d53a04cfc99/irohad/ametsuchi/impl/redis_block_index.cpp#L58-L59",2017-12-18 17:32:16,2017-12-18 17:32:16
https://api.github.com/repos/hyperledger/iroha/issues/775,https://api.github.com/repos/hyperledger/iroha/issues/comments/351990751,https://github.com/hyperledger/iroha/pull/775#issuecomment-351990751,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/775?src=pr&el=h1) Report
> Merging [#775](https://codecov.io/gh/hyperledger/iroha/pull/775?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/e0b33c232e87acbd7c91556e7497f8a7abdc3287?src=pr&el=desc) will **increase** coverage by `0.05%`.
> The diff coverage is `85.71%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/775/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/775?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #775      +/-   ##
========================================================
+ Coverage                 41.49%   41.55%   +0.05%     
========================================================
  Files                       395      395              
  Lines                     13343    13356      +13     
  Branches                   7185     7185              
========================================================
+ Hits                       5537     5550      +13     
  Misses                     1420     1420              
  Partials                   6386     6386
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/775?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/775/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `15.09% <0%> (ø)` | :arrow_up: |
| [shared\_model/builders/protobuf/unsigned\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/775/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Vuc2lnbmVkX3Byb3RvLmhwcA==) | `27.27% <100%> (ø)` | :arrow_up: |
| [shared\_model/validators/commands\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/775/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yLmhwcA==) | `8.94% <100%> (ø)` | :arrow_up: |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/775/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `81.08% <87.5%> (+8%)` | :arrow_up: |
| [shared\_model/backend/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/775/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb24uaHBw) | `51.21% <0%> (+2.5%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/775?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/775?src=pr&el=footer). Last update [e0b33c2...a538321](https://codecov.io/gh/hyperledger/iroha/pull/775?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-15 12:09:03,2017-12-17 12:08:02
https://api.github.com/repos/hyperledger/iroha/issues/774,https://api.github.com/repos/hyperledger/iroha/issues/comments/352177809,https://github.com/hyperledger/iroha/issues/774#issuecomment-352177809,l4l,"I like it

p.s: sorry for being short on so long post",2017-12-16 11:32:56,2017-12-16 11:32:56
https://api.github.com/repos/hyperledger/iroha/issues/774,https://api.github.com/repos/hyperledger/iroha/issues/comments/354591101,https://github.com/hyperledger/iroha/issues/774#issuecomment-354591101,neewy,By doing so we can also discard using complex redis indexing and use postgresql indices,2017-12-31 08:09:11,2017-12-31 08:09:11
https://api.github.com/repos/hyperledger/iroha/issues/774,https://api.github.com/repos/hyperledger/iroha/issues/comments/427890014,https://github.com/hyperledger/iroha/issues/774#issuecomment-427890014,Warchant,Bump,2018-10-08 16:02:52,2018-10-08 16:02:52
https://api.github.com/repos/hyperledger/iroha/issues/774,https://api.github.com/repos/hyperledger/iroha/issues/comments/454037194,https://github.com/hyperledger/iroha/issues/774#issuecomment-454037194,LiraLemur,See the issue in Jira: https://jira.hyperledger.org/browse/IR-190,2019-01-14 15:08:46,2019-01-14 15:08:46
https://api.github.com/repos/hyperledger/iroha/issues/774,https://api.github.com/repos/hyperledger/iroha/issues/comments/454372553,https://github.com/hyperledger/iroha/issues/774#issuecomment-454372553,Warchant,Outdated,2019-01-15 12:15:24,2019-01-15 12:15:24
https://api.github.com/repos/hyperledger/iroha/issues/773,https://api.github.com/repos/hyperledger/iroha/issues/comments/351986026,https://github.com/hyperledger/iroha/pull/773#issuecomment-351986026,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/773?src=pr&el=h1) Report
> Merging [#773](https://codecov.io/gh/hyperledger/iroha/pull/773?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/62931e03286ec0f3b942ad116aa32587fcb1e2ce?src=pr&el=desc) will **increase** coverage by `0.09%`.
> The diff coverage is `20%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/773/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/773?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##           trunk/shared_model     #773      +/-   ##
======================================================
+ Coverage               41.19%   41.28%   +0.09%     
======================================================
  Files                     430      430              
  Lines                   13884    13888       +4     
  Branches                 7468     7471       +3     
======================================================
+ Hits                     5719     5734      +15     
+ Misses                   1577     1554      -23     
- Partials                 6588     6600      +12
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/773?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...hared\_model/validators/commands\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/773/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `31.17% <20%> (+2.26%)` | :arrow_up: |
| [shared\_model/validators/commands\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/773/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yLmhwcA==) | `44.52% <0%> (+3.42%)` | :arrow_up: |
| [...l/backend/protobuf/commands/proto\_create\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/773/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY3JlYXRlX2Fzc2V0LmhwcA==) | `80% <0%> (+50%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/773?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/773?src=pr&el=footer). Last update [62931e0...7be223b](https://codecov.io/gh/hyperledger/iroha/pull/773?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-15 11:43:34,2017-12-17 16:18:46
https://api.github.com/repos/hyperledger/iroha/issues/772,https://api.github.com/repos/hyperledger/iroha/issues/comments/351979871,https://github.com/hyperledger/iroha/pull/772#issuecomment-351979871,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/772?src=pr&el=h1) Report
> Merging [#772](https://codecov.io/gh/hyperledger/iroha/pull/772?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/373269d6b94fa2e3ba744aba8609048ca7681e6f?src=pr&el=desc) will **increase** coverage by `0.11%`.
> The diff coverage is `20%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/772/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/772?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           trunk/shared_model    #772      +/-   ##
=====================================================
+ Coverage               41.19%   41.3%   +0.11%     
=====================================================
  Files                     430     430              
  Lines                   13884   13877       -7     
  Branches                 7468    7461       -7     
=====================================================
+ Hits                     5719    5732      +13     
+ Misses                   1577    1554      -23     
- Partials                 6588    6591       +3
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/772?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...hared\_model/validators/commands\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/772/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `32.31% <20%> (+3.4%)` | :arrow_up: |
| [shared\_model/validators/commands\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/772/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yLmhwcA==) | `44.68% <0%> (+3.58%)` | :arrow_up: |
| [...l/backend/protobuf/commands/proto\_create\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/772/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY3JlYXRlX2Fzc2V0LmhwcA==) | `80% <0%> (+50%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/772?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/772?src=pr&el=footer). Last update [373269d...0b493ef](https://codecov.io/gh/hyperledger/iroha/pull/772?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-15 11:10:38,2017-12-15 11:10:38
https://api.github.com/repos/hyperledger/iroha/issues/771,https://api.github.com/repos/hyperledger/iroha/issues/comments/351955973,https://github.com/hyperledger/iroha/pull/771#issuecomment-351955973,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/771?src=pr&el=h1) Report
> Merging [#771](https://codecov.io/gh/hyperledger/iroha/pull/771?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/373269d6b94fa2e3ba744aba8609048ca7681e6f?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/771/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/771?src=pr&el=tree)

```diff
@@                 Coverage Diff                 @@
##           trunk/shared_model     #771   +/-   ##
===================================================
  Coverage               41.19%   41.19%           
===================================================
  Files                     430      430           
  Lines                   13884    13884           
  Branches                 7468     7468           
===================================================
  Hits                     5719     5719           
  Misses                   1577     1577           
  Partials                 6588     6588
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/771?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/771?src=pr&el=footer). Last update [373269d...c968311](https://codecov.io/gh/hyperledger/iroha/pull/771?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-15 09:23:24,2017-12-15 13:59:18
https://api.github.com/repos/hyperledger/iroha/issues/770,https://api.github.com/repos/hyperledger/iroha/issues/comments/351991579,https://github.com/hyperledger/iroha/pull/770#issuecomment-351991579,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/770?src=pr&el=h1) Report
> Merging [#770](https://codecov.io/gh/hyperledger/iroha/pull/770?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1cf0c6e49d93db079c2031f3b49b5d2388d9c5a2?src=pr&el=desc) will **decrease** coverage by `0.7%`.
> The diff coverage is `22%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/770/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/770?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #770      +/-   ##
===========================================
- Coverage    42.53%   41.82%   -0.71%     
===========================================
  Files          315      315              
  Lines        13065    13511     +446     
  Branches      7299     7687     +388     
===========================================
+ Hits          5557     5651      +94     
+ Misses         727      671      -56     
- Partials      6781     7189     +408
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/770?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/770/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.38% <0%> (+0.09%)` | :arrow_up: |
| [test/module/irohad/validation/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/770/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `12.37% <12.43%> (-2.57%)` | :arrow_down: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/770/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `10.86% <23.8%> (+0.41%)` | :arrow_up: |
| [irohad/model/permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/770/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Blcm1pc3Npb25zLmhwcA==) | `14.89% <33.33%> (-0.11%)` | :arrow_down: |
| [irohad/model/execution/impl/common\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/770/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1vbl9leGVjdXRvci5jcHA=) | `65.38% <52.63%> (-13.19%)` | :arrow_down: |
| [irohad/model/impl/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/770/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `50.24% <73.19%> (+14.76%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/770/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `65.07% <0%> (+1.58%)` | :arrow_up: |
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/770/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `42.07% <0%> (+1.82%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/770?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/770?src=pr&el=footer). Last update [1cf0c6e...57e3df8](https://codecov.io/gh/hyperledger/iroha/pull/770?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-15 12:13:56,2017-12-19 01:41:32
https://api.github.com/repos/hyperledger/iroha/issues/770,https://api.github.com/repos/hyperledger/iroha/issues/comments/352176944,https://github.com/hyperledger/iroha/pull/770#issuecomment-352176944,l4l,It seems that coverage significantly decreases :( Maybe add some other cases?,2017-12-16 11:14:32,2017-12-16 11:14:32
https://api.github.com/repos/hyperledger/iroha/issues/770,https://api.github.com/repos/hyperledger/iroha/issues/comments/352613295,https://github.com/hyperledger/iroha/pull/770#issuecomment-352613295,sorabot,"SonarQube analysis reported 49 issues
* ![INFO][INFO] 49 info

#### Top 10 issues

1. ![INFO][INFO] [query_execution.cpp#L78](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/impl/query_execution.cpp#L78): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [query_execution.cpp#L85](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/impl/query_execution.cpp#L85): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [query_execution.cpp#L91](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/impl/query_execution.cpp#L91): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [query_execution.cpp#L98](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/impl/query_execution.cpp#L98): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [query_execution.cpp#L109](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/impl/query_execution.cpp#L109): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [query_execution.cpp#L120](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/impl/query_execution.cpp#L120): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [query_execution.cpp#L131](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/impl/query_execution.cpp#L131): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [query_execution.cpp#L142](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/impl/query_execution.cpp#L142): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [query_execution.cpp#L273](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/impl/query_execution.cpp#L273): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [permissions.hpp#L27](https://github.com/hyperledger/iroha/blob/57e3df8e2afbe966d4f8f99220980b45a9d527dd/irohad/model/permissions.hpp#L27): Undocumented API: can_append_role [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-12-19 01:40:58,2017-12-19 01:40:58
https://api.github.com/repos/hyperledger/iroha/issues/769,https://api.github.com/repos/hyperledger/iroha/issues/comments/351925568,https://github.com/hyperledger/iroha/pull/769#issuecomment-351925568,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/769?src=pr&el=h1) Report
> Merging [#769](https://codecov.io/gh/hyperledger/iroha/pull/769?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/3b162de84df4d2fde958c8889440ea6547cb3db0?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/769/graphs/tree.svg?src=pr&height=150&width=650&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/769?src=pr&el=tree)

```diff
@@                 Coverage Diff                 @@
##           trunk/shared_model     #769   +/-   ##
===================================================
  Coverage               41.28%   41.28%           
===================================================
  Files                     430      430           
  Lines                   13888    13888           
  Branches                 7471     7471           
===================================================
  Hits                     5734     5734           
  Misses                   1554     1554           
  Partials                 6600     6600
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/769?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/769?src=pr&el=footer). Last update [3b162de...43aadf8](https://codecov.io/gh/hyperledger/iroha/pull/769?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-15 06:32:28,2017-12-18 03:03:42
https://api.github.com/repos/hyperledger/iroha/issues/768,https://api.github.com/repos/hyperledger/iroha/issues/comments/351809789,https://github.com/hyperledger/iroha/pull/768#issuecomment-351809789,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/768?src=pr&el=h1) Report
> Merging [#768](https://codecov.io/gh/hyperledger/iroha/pull/768?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/2473883c0b0d46ea3e45eaa812b855b6f4e4a023?src=pr&el=desc) will **decrease** coverage by `0.02%`.
> The diff coverage is `17.64%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/768/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/768?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##           trunk/shared_model     #768      +/-   ##
======================================================
- Coverage               41.21%   41.19%   -0.03%     
======================================================
  Files                     430      430              
  Lines                   13873    13884      +11     
  Branches                 7458     7468      +10     
======================================================
+ Hits                     5718     5719       +1     
- Misses                   1570     1577       +7     
- Partials                 6585     6588       +3
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/768?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...hared\_model/validators/commands\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/768/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `28.91% <0%> (-1.09%)` | :arrow_down: |
| [shared\_model/validators/commands\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/768/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yLmhwcA==) | `41.09% <27.27%> (-0.04%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/768/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfZml4dHVyZS5ocHA=) | `36.36% <0%> (-3.04%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/768?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/768?src=pr&el=footer). Last update [2473883...cd8d37b](https://codecov.io/gh/hyperledger/iroha/pull/768?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-14 19:21:32,2017-12-15 09:25:29
https://api.github.com/repos/hyperledger/iroha/issues/767,https://api.github.com/repos/hyperledger/iroha/issues/comments/351896038,https://github.com/hyperledger/iroha/pull/767#issuecomment-351896038,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/767?src=pr&el=h1) Report
> Merging [#767](https://codecov.io/gh/hyperledger/iroha/pull/767?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/25c9012fbc52bb924a6576fbf57f05169a0d4cf3?src=pr&el=desc) will **decrease** coverage by `0.7%`.
> The diff coverage is `28.02%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/767/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/767?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #767      +/-   ##
===========================================
- Coverage    41.98%   41.28%   -0.71%     
===========================================
  Files          311      430     +119     
  Lines        13132    13888     +756     
  Branches      7414     7471      +57     
===========================================
+ Hits          5514     5734     +220     
- Misses         727     1554     +827     
+ Partials      6891     6600     -291
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/767?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `2.08% <ø> (-8.07%)` | :arrow_down: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `32.55% <ø> (-0.14%)` | :arrow_down: |
| [...orii/processor/impl/transaction\_processor\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9pbXBsL3RyYW5zYWN0aW9uX3Byb2Nlc3Nvcl9pbXBsLmNwcA==) | `43.85% <ø> (ø)` | :arrow_up: |
| [irohad/model/impl/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `35.48% <ø> (ø)` | :arrow_up: |
| [.../cryptography/ed25519\_sha3\_impl/internal/impl/fe.c](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9pbXBsL2ZlLmM=) | `89.49% <ø> (ø)` | |
| [irohad/model/converters/impl/pb\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9ibG9ja19mYWN0b3J5LmNwcA==) | `43.24% <ø> (ø)` | :arrow_up: |
| [...d/model/converters/impl/pb\_transaction\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl90cmFuc2FjdGlvbl9mYWN0b3J5LmNwcA==) | `35.48% <ø> (ø)` | :arrow_up: |
| [irohad/model/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3NpZ25hdHVyZS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [...rohad/validation/impl/stateless\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWxlc3NfdmFsaWRhdG9yX2ltcGwuY3Bw) | `36.36% <ø> (ø)` | :arrow_up: |
| [...rohad/model/converters/json\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5X3Rlc3QuY3Bw) | `5.49% <ø> (-2.58%)` | :arrow_down: |
| ... and [399 more](https://codecov.io/gh/hyperledger/iroha/pull/767/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/767?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/767?src=pr&el=footer). Last update [25c9012...1b1133e](https://codecov.io/gh/hyperledger/iroha/pull/767?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-15 02:31:03,2017-12-18 07:38:19
https://api.github.com/repos/hyperledger/iroha/issues/767,https://api.github.com/repos/hyperledger/iroha/issues/comments/352234408,https://github.com/hyperledger/iroha/pull/767#issuecomment-352234408,Warchant,"@lebdron what is the purpose of this PR? 
",2017-12-17 06:00:31,2017-12-17 11:45:53
https://api.github.com/repos/hyperledger/iroha/issues/767,https://api.github.com/repos/hyperledger/iroha/issues/comments/352341964,https://github.com/hyperledger/iroha/pull/767#issuecomment-352341964,sorabot,"SonarQube analysis reported 766 issues
* ![CRITICAL][CRITICAL] 10 critical
* ![MAJOR][MAJOR] 10 major
* ![MINOR][MINOR] 213 minor
* ![INFO][INFO] 533 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [interactive_query_cli.cpp#L117](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/iroha-cli/interactive/impl/interactive_query_cli.cpp#L117): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L51](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/irohad/model/converters/impl/pb_query_factory.cpp#L51): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [command_service.cpp#L28](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/irohad/torii/impl/command_service.cpp#L28): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [fe.c#L364](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/shared_model/cryptography/ed25519_sha3_impl/internal/impl/fe.c#L364): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [fe.c#L881](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/shared_model/cryptography/ed25519_sha3_impl/internal/impl/fe.c#L881): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [ge.c#L25](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/shared_model/cryptography/ed25519_sha3_impl/internal/impl/ge.c#L25): The Cyclomatic Complexity of this function is 11 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [ge.c#L67](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/shared_model/cryptography/ed25519_sha3_impl/internal/impl/ge.c#L67): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [sha3.c#L83](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/shared_model/cryptography/ed25519_sha3_impl/internal/impl/sha3.c#L83): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [sha3.c#L154](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/shared_model/cryptography/ed25519_sha3_impl/internal/impl/sha3.c#L154): The Cyclomatic Complexity of this function is 9 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![CRITICAL][CRITICAL] [sha512.c#L171](https://github.com/hyperledger/iroha/blob/1b1133e12fda044c65b584c4a9fb8dfe02aa0888/shared_model/cryptography/ed25519_sha3_impl/internal/impl/sha512.c#L171): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-18 07:02:01,2017-12-18 07:02:01
https://api.github.com/repos/hyperledger/iroha/issues/767,https://api.github.com/repos/hyperledger/iroha/issues/comments/352353454,https://github.com/hyperledger/iroha/pull/767#issuecomment-352353454,lebdron,@Warchant it was an unsuccessful attempt to merge directly without rebasing,2017-12-18 08:09:07,2017-12-18 08:09:07
https://api.github.com/repos/hyperledger/iroha/issues/766,https://api.github.com/repos/hyperledger/iroha/issues/comments/351929695,https://github.com/hyperledger/iroha/issues/766#issuecomment-351929695,Warchant,"IMO we don't need fuzzing until we make big release. 
And we should get rid of legacy.",2017-12-15 07:01:46,2017-12-15 07:01:57
https://api.github.com/repos/hyperledger/iroha/issues/766,https://api.github.com/repos/hyperledger/iroha/issues/comments/354246081,https://github.com/hyperledger/iroha/issues/766#issuecomment-354246081,neewy,can we delete the folder then?,2017-12-28 07:54:17,2017-12-28 07:54:17
https://api.github.com/repos/hyperledger/iroha/issues/766,https://api.github.com/repos/hyperledger/iroha/issues/comments/357949490,https://github.com/hyperledger/iroha/issues/766#issuecomment-357949490,l4l,fixed in #839,2018-01-16 12:48:32,2018-01-16 12:48:32
https://api.github.com/repos/hyperledger/iroha/issues/765,https://api.github.com/repos/hyperledger/iroha/issues/comments/352234533,https://github.com/hyperledger/iroha/issues/765#issuecomment-352234533,Warchant,"And where will you write this warning? User may not have stderr/stdout opened. 
You want to break invariants on transaction by purpose, which is very bad. 
If you want to debug -- you may disable these checks by setting some compile-time command, like 
```
#define IROHA_ENABLE_CHECKS 0
```
",2017-12-17 06:04:35,2017-12-17 06:05:21
https://api.github.com/repos/hyperledger/iroha/issues/764,https://api.github.com/repos/hyperledger/iroha/issues/comments/351653707,https://github.com/hyperledger/iroha/pull/764#issuecomment-351653707,neewy,"As we have recently merged https://github.com/hyperledger/iroha/pull/757 I want to see also tests for true negatives. And also, with more than one command in transaction :)",2017-12-14 09:20:26,2017-12-14 09:21:17
https://api.github.com/repos/hyperledger/iroha/issues/764,https://api.github.com/repos/hyperledger/iroha/issues/comments/351654539,https://github.com/hyperledger/iroha/pull/764#issuecomment-351654539,l4l,"@neewy, actually there's a simple one:
https://github.com/hyperledger/iroha/blob/6bc6b7a845586a8ec76db842caa015ad647ddca4/test/module/shared_model/bindings/builder-test.py#L6-L8",2017-12-14 09:23:42,2017-12-14 09:24:19
https://api.github.com/repos/hyperledger/iroha/issues/764,https://api.github.com/repos/hyperledger/iroha/issues/comments/351655453,https://github.com/hyperledger/iroha/pull/764#issuecomment-351655453,neewy,I mean please check how field validation (stateless) works 🙏 ,2017-12-14 09:27:08,2017-12-14 09:27:08
https://api.github.com/repos/hyperledger/iroha/issues/764,https://api.github.com/repos/hyperledger/iroha/issues/comments/351658318,https://github.com/hyperledger/iroha/pull/764#issuecomment-351658318,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/764?src=pr&el=h1) Report
> Merging [#764](https://codecov.io/gh/hyperledger/iroha/pull/764?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/04b02d9bb917fdcdbc5810a3e0b45d507470722b?src=pr&el=desc) will **decrease** coverage by `0.12%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/764/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/764?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           trunk/shared_model    #764      +/-   ##
=====================================================
- Coverage               41.33%   41.2%   -0.13%     
=====================================================
  Files                     430     430              
  Lines                   13896   13873      -23     
  Branches                 7477    7458      -19     
=====================================================
- Hits                     5744    5717      -27     
- Misses                   1544    1577      +33     
+ Partials                 6608    6579      -29
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/764?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...l/backend/protobuf/commands/proto\_create\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY3JlYXRlX2Fzc2V0LmhwcA==) | `30% <0%> (-50%)` | :arrow_down: |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `23.52% <0%> (-25.05%)` | :arrow_down: |
| [shared\_model/validators/commands\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yLmhwcA==) | `41.13% <0%> (-3.39%)` | :arrow_down: |
| [...hared\_model/validators/commands\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `30% <0%> (-1.18%)` | :arrow_down: |
| [shared\_model/backend/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb24uaHBw) | `58.97% <0%> (-1.03%)` | :arrow_down: |
| [shared\_model/builders/protobuf/queries.hpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3F1ZXJpZXMuaHBw) | `95% <0%> (ø)` | :arrow_up: |
| [...hared\_model/interfaces/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY3JlYXRlX2FjY291bnQuaHBw) | `0% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/queries/query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9xdWVyeS5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `73.07% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/commands/create\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY3JlYXRlX2Fzc2V0LmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| ... and [2 more](https://codecov.io/gh/hyperledger/iroha/pull/764/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/764?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/764?src=pr&el=footer). Last update [04b02d9...a750943](https://codecov.io/gh/hyperledger/iroha/pull/764?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-14 09:38:10,2017-12-18 15:14:57
https://api.github.com/repos/hyperledger/iroha/issues/764,https://api.github.com/repos/hyperledger/iroha/issues/comments/352336995,https://github.com/hyperledger/iroha/pull/764#issuecomment-352336995,neewy,3 days without any progress with review or more than a single reviewer assigned?,2017-12-18 06:27:43,2017-12-18 06:27:43
https://api.github.com/repos/hyperledger/iroha/issues/764,https://api.github.com/repos/hyperledger/iroha/issues/comments/352817952,https://github.com/hyperledger/iroha/pull/764#issuecomment-352817952,l4l,I will recreate base on the other base,2017-12-19 16:50:17,2017-12-19 16:50:17
https://api.github.com/repos/hyperledger/iroha/issues/762,https://api.github.com/repos/hyperledger/iroha/issues/comments/351382074,https://github.com/hyperledger/iroha/pull/762#issuecomment-351382074,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/762?src=pr&el=h1) Report
> Merging [#762](https://codecov.io/gh/hyperledger/iroha/pull/762?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3484c6b514ad24db530b4a7a76f363d251c7e200?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/762/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/762?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #762   +/-   ##
========================================
  Coverage    42.52%   42.52%           
========================================
  Files          309      309           
  Lines        12789    12789           
  Branches      7155     7155           
========================================
  Hits          5438     5438           
  Misses         709      709           
  Partials      6642     6642
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/762?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/762?src=pr&el=footer). Last update [3484c6b...047fadd](https://codecov.io/gh/hyperledger/iroha/pull/762?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-13 12:50:34,2017-12-13 12:50:34
https://api.github.com/repos/hyperledger/iroha/issues/761,https://api.github.com/repos/hyperledger/iroha/issues/comments/351532110,https://github.com/hyperledger/iroha/pull/761#issuecomment-351532110,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/761?src=pr&el=h1) Report
> Merging [#761](https://codecov.io/gh/hyperledger/iroha/pull/761?src=pr&el=desc) into [trunk/bindings-test](https://codecov.io/gh/hyperledger/iroha/commit/6948b52de9bf9f2b2dff1a71b88c038482029e0f?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `38.7%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/761/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/761?src=pr&el=tree)

```diff
@@                   Coverage Diff                   @@
##           trunk/bindings-test     #761      +/-   ##
=======================================================
- Coverage                40.15%   40.14%   -0.01%     
=======================================================
  Files                      460      460              
  Lines                    15546    15548       +2     
  Branches                  8615     8612       -3     
=======================================================
  Hits                      6242     6242              
- Misses                    1554     1559       +5     
+ Partials                  7750     7747       -3
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/761?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/generator/generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-bGlicy9nZW5lcmF0b3IvZ2VuZXJhdG9yLmhwcA==) | `80% <ø> (ø)` | :arrow_up: |
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `78.68% <ø> (+11.59%)` | :arrow_up: |
| [...st/module/libs/converter/string\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb252ZXJ0ZXIvc3RyaW5nX2NvbnZlcnRlcl90ZXN0LmNwcA==) | `7.69% <ø> (ø)` | :arrow_up: |
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `40% <0%> (+2.5%)` | :arrow_up: |
| [libs/generator/generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-bGlicy9nZW5lcmF0b3IvZ2VuZXJhdG9yLmNwcA==) | `33.33% <0%> (-26.67%)` | :arrow_down: |
| [shared\_model/cryptography/public\_key.hpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9wdWJsaWNfa2V5LmhwcA==) | `12.5% <100%> (ø)` | :arrow_up: |
| [shared\_model/cryptography/private\_key.hpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9wcml2YXRlX2tleS5ocHA=) | `16.66% <100%> (ø)` | :arrow_up: |
| [libs/common/byteutils.hpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-bGlicy9jb21tb24vYnl0ZXV0aWxzLmhwcA==) | `26.92% <27.77%> (+1.92%)` | :arrow_up: |
| [shared\_model/cryptography/keypair.hpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9rZXlwYWlyLmhwcA==) | `25% <83.33%> (+8.33%)` | :arrow_up: |
| [libs/crypto/base64.hpp](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8vYmFzZTY0LmhwcA==) | `84.21% <0%> (-1.76%)` | :arrow_down: |
| ... and [1 more](https://codecov.io/gh/hyperledger/iroha/pull/761/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/761?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/761?src=pr&el=footer). Last update [6948b52...0a99b8e](https://codecov.io/gh/hyperledger/iroha/pull/761?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-13 21:34:23,2017-12-22 15:30:22
https://api.github.com/repos/hyperledger/iroha/issues/761,https://api.github.com/repos/hyperledger/iroha/issues/comments/351933096,https://github.com/hyperledger/iroha/pull/761#issuecomment-351933096,l4l,It also would be nice if you fix sorabot's blockers,2017-12-15 07:25:02,2017-12-15 07:25:02
https://api.github.com/repos/hyperledger/iroha/issues/761,https://api.github.com/repos/hyperledger/iroha/issues/comments/353616631,https://github.com/hyperledger/iroha/pull/761#issuecomment-353616631,sorabot,"SonarQube analysis reported 51 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 47 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [interactive_status_cli.cpp#L75](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/iroha-cli/interactive/impl/interactive_status_cli.cpp#L75): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [interactive_status_cli.cpp#L72](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/iroha-cli/interactive/impl/interactive_status_cli.cpp#L72): Define a constant instead of duplicating this literal ""Choose action: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [generator.cpp#L29](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/libs/generator/generator.cpp#L29): The function 'random_printable_char' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [model_crypto.cpp#L33](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/shared_model/bindings/model_crypto.cpp#L33): The function 'convertFromExisting' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![INFO][INFO] [byteutils.hpp#L67](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/libs/common/byteutils.hpp#L67): Undocumented API: nonstd [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [byteutils.hpp#L69](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/libs/common/byteutils.hpp#L69): Undocumented API: result [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [byteutils.hpp#L70](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/libs/common/byteutils.hpp#L70): Undocumented API: length [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [byteutils.hpp#L70](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/libs/common/byteutils.hpp#L70): Undocumented API: i [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [byteutils.hpp#L71](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/libs/common/byteutils.hpp#L71): Undocumented API: byte [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [byteutils.hpp#L73](https://github.com/hyperledger/iroha/blob/0a99b8e6785ce9e41fdb83f09a6cbb8a8e5fa203/libs/common/byteutils.hpp#L73): Undocumented API: at [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-22 15:13:18,2017-12-22 15:13:18
https://api.github.com/repos/hyperledger/iroha/issues/760,https://api.github.com/repos/hyperledger/iroha/issues/comments/351157904,https://github.com/hyperledger/iroha/pull/760#issuecomment-351157904,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/760?src=pr&el=h1) Report
> Merging [#760](https://codecov.io/gh/hyperledger/iroha/pull/760?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/fdf2651da7a59167b29b49fd3dce72bacb5195f2?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `37.5%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/760/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/760?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           trunk/shared_model    #760      +/-   ##
=====================================================
- Coverage               41.22%   41.2%   -0.02%     
=====================================================
  Files                     430     430              
  Lines                   13877   13873       -4     
  Branches                 7458    7458              
=====================================================
- Hits                     5721    5717       -4     
  Misses                   1577    1577              
  Partials                 6579    6579
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/760?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ptography/ed25519\_sha3\_impl/internal/sha3\_hash.cpp](https://codecov.io/gh/hyperledger/iroha/pull/760/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9zaGEzX2hhc2guY3Bw) | `58.06% <37.5%> (-4.8%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/760?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/760?src=pr&el=footer). Last update [fdf2651...f3f387e](https://codecov.io/gh/hyperledger/iroha/pull/760?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-12 19:07:57,2017-12-13 12:54:51
https://api.github.com/repos/hyperledger/iroha/issues/759,https://api.github.com/repos/hyperledger/iroha/issues/comments/351087436,https://github.com/hyperledger/iroha/pull/759#issuecomment-351087436,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/759?src=pr&el=h1) Report
> Merging [#759](https://codecov.io/gh/hyperledger/iroha/pull/759?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/9e9c0f868159120924a575d475168ba72cd88b60?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `33.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/759/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/759?src=pr&el=tree)

```diff
@@                Coverage Diff                 @@
##           trunk/shared_model    #759   +/-   ##
==================================================
  Coverage                41.2%   41.2%           
==================================================
  Files                     430     430           
  Lines                   13873   13873           
  Branches                 7458    7458           
==================================================
  Hits                     5717    5717           
  Misses                   1577    1577           
  Partials                 6579    6579
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/759?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/759/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `19.56% <0%> (ø)` | :arrow_up: |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/759/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `73.07% <100%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/759?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/759?src=pr&el=footer). Last update [9e9c0f8...275319d](https://codecov.io/gh/hyperledger/iroha/pull/759?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-12 15:34:45,2017-12-13 20:45:42
https://api.github.com/repos/hyperledger/iroha/issues/758,https://api.github.com/repos/hyperledger/iroha/issues/comments/351066171,https://github.com/hyperledger/iroha/pull/758#issuecomment-351066171,sorabot,"SonarQube analysis reported 7 issues

1. ![MINOR][MINOR] [json_transaction_factory.cpp#L42](https://github.com/hyperledger/iroha/blob/1d2a378b45bd37d52e1c4901b04629dadc1a6d60/irohad/model/converters/impl/json_transaction_factory.cpp#L42): Define a constant instead of duplicating this literal ""signatures"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_transaction_factory.cpp#L44](https://github.com/hyperledger/iroha/blob/1d2a378b45bd37d52e1c4901b04629dadc1a6d60/irohad/model/converters/impl/json_transaction_factory.cpp#L44): Define a constant instead of duplicating this literal ""created_ts"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_transaction_factory.cpp#L45](https://github.com/hyperledger/iroha/blob/1d2a378b45bd37d52e1c4901b04629dadc1a6d60/irohad/model/converters/impl/json_transaction_factory.cpp#L45): Define a constant instead of duplicating this literal ""creator_account_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_transaction_factory.cpp#L47](https://github.com/hyperledger/iroha/blob/1d2a378b45bd37d52e1c4901b04629dadc1a6d60/irohad/model/converters/impl/json_transaction_factory.cpp#L47): Define a constant instead of duplicating this literal ""tx_counter"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_transaction_factory.cpp#L48](https://github.com/hyperledger/iroha/blob/1d2a378b45bd37d52e1c4901b04629dadc1a6d60/irohad/model/converters/impl/json_transaction_factory.cpp#L48): Define a constant instead of duplicating this literal ""quorum"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_transaction_factory.cpp#L60](https://github.com/hyperledger/iroha/blob/1d2a378b45bd37d52e1c4901b04629dadc1a6d60/irohad/model/converters/impl/json_transaction_factory.cpp#L60): Define a constant instead of duplicating this literal ""commands"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [client_test.cpp#L109](https://github.com/hyperledger/iroha/blob/1d2a378b45bd37d52e1c4901b04629dadc1a6d60/test/integration/client_test.cpp#L109): The function 'TearDown' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-12 14:25:47,2017-12-12 14:25:47
https://api.github.com/repos/hyperledger/iroha/issues/758,https://api.github.com/repos/hyperledger/iroha/issues/comments/351066349,https://github.com/hyperledger/iroha/pull/758#issuecomment-351066349,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/758?src=pr&el=h1) Report
> Merging [#758](https://codecov.io/gh/hyperledger/iroha/pull/758?src=pr&el=desc) into [trunk/mst](https://codecov.io/gh/hyperledger/iroha/commit/45b1cac8f6998049e30c4fdba48ae8f3c7a9f482?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/758/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/758?src=pr&el=tree)

```diff
@@              Coverage Diff              @@
##           trunk/mst     #758      +/-   ##
=============================================
- Coverage      44.33%   44.29%   -0.04%     
=============================================
  Files            297      297              
  Lines          11870    11872       +2     
  Branches        6341     6343       +2     
=============================================
- Hits            5262     5259       -3     
- Misses           760      763       +3     
- Partials        5848     5850       +2
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/758?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/758/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.11% <ø> (ø)` | :arrow_up: |
| [...model/converters/impl/json\_transaction\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/758/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX3RyYW5zYWN0aW9uX2ZhY3RvcnkuY3Bw) | `43.9% <0%> (-2.26%)` | :arrow_down: |
| [libs/crypto/ed25519/ge.c](https://codecov.io/gh/hyperledger/iroha/pull/758/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS9nZS5j) | `97.2% <0%> (-1.21%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/758?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/758?src=pr&el=footer). Last update [45b1cac...1d2a378](https://codecov.io/gh/hyperledger/iroha/pull/758?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-12 14:26:22,2017-12-12 14:26:22
https://api.github.com/repos/hyperledger/iroha/issues/757,https://api.github.com/repos/hyperledger/iroha/issues/comments/351057170,https://github.com/hyperledger/iroha/pull/757#issuecomment-351057170,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/757?src=pr&el=h1) Report
> Merging [#757](https://codecov.io/gh/hyperledger/iroha/pull/757?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/81ad2a1baa2b4e476c1d29bda216e6ba08bdabb5?src=pr&el=desc) will **increase** coverage by `0.85%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/757/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/757?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##           trunk/shared_model     #757      +/-   ##
======================================================
+ Coverage               41.22%   42.07%   +0.85%     
======================================================
  Files                     430      396      -34     
  Lines                   13877    13513     -364     
  Branches                 7458     7299     -159     
======================================================
- Hits                     5721     5686      -35     
+ Misses                   1577     1289     -288     
+ Partials                 6579     6538      -41
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/757?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/interfaces/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb24uaHBw) | `0% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | | |
| [.../protobuf/query\_responses/proto\_roles\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3JvbGVzX3Jlc3BvbnNlLmhwcA==) | | |
| [.../protobuf/query\_responses/proto\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | | |
| [...ponses/error\_responses/abstract\_error\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2Vycm9yX3Jlc3BvbnNlcy9hYnN0cmFjdF9lcnJvcl9yZXNwb25zZS5ocHA=) | | |
| [...rotobuf/query\_responses/proto\_account\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2FjY291bnRfcmVzcG9uc2UuaHBw) | | |
| [...buf/query\_responses/proto\_transaction\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3RyYW5zYWN0aW9uX3Jlc3BvbnNlLmhwcA==) | | |
| [...odel/interfaces/query\_responses/roles\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3JvbGVzX3Jlc3BvbnNlLmhwcA==) | | |
| [shared\_model/interfaces/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | | |
| [...error\_responses/stateful\_failed\_error\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2Vycm9yX3Jlc3BvbnNlcy9zdGF0ZWZ1bF9mYWlsZWRfZXJyb3JfcmVzcG9uc2UuaHBw) | | |
| ... and [26 more](https://codecov.io/gh/hyperledger/iroha/pull/757/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/757?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/757?src=pr&el=footer). Last update [81ad2a1...f261d82](https://codecov.io/gh/hyperledger/iroha/pull/757?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-12 13:52:30,2017-12-12 13:52:30
https://api.github.com/repos/hyperledger/iroha/issues/756,https://api.github.com/repos/hyperledger/iroha/issues/comments/351021942,https://github.com/hyperledger/iroha/pull/756#issuecomment-351021942,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [query_response_handler.cpp#L98](https://github.com/hyperledger/iroha/blob/3e3c5673270d7687d17fef2d8ff7dd73239e38b4/iroha-cli/impl/query_response_handler.cpp#L98): Define a constant instead of duplicating this literal "" {} "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [query_response_handler.cpp#L114](https://github.com/hyperledger/iroha/blob/3e3c5673270d7687d17fef2d8ff7dd73239e38b4/iroha-cli/impl/query_response_handler.cpp#L114): Define a constant instead of duplicating this literal ""-Asset Id- {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [query_response_handler.cpp#L145](https://github.com/hyperledger/iroha/blob/3e3c5673270d7687d17fef2d8ff7dd73239e38b4/iroha-cli/impl/query_response_handler.cpp#L145): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-12 11:17:10,2017-12-12 11:17:10
https://api.github.com/repos/hyperledger/iroha/issues/756,https://api.github.com/repos/hyperledger/iroha/issues/comments/351022046,https://github.com/hyperledger/iroha/pull/756#issuecomment-351022046,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/756?src=pr&el=h1) Report
> Merging [#756](https://codecov.io/gh/hyperledger/iroha/pull/756?src=pr&el=desc) into [trunk/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/9eba47ea6ea0f4a7c3f046677e719d49ce670d7a?src=pr&el=desc) will **decrease** coverage by `0.85%`.
> The diff coverage is `17.6%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/756/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/756?src=pr&el=tree)

```diff
@@                  Coverage Diff                   @@
##           trunk/shared_model     #756      +/-   ##
======================================================
- Coverage               42.07%   41.22%   -0.86%     
======================================================
  Files                     396      430      +34     
  Lines                   13513    13877     +364     
  Branches                 7299     7458     +159     
======================================================
+ Hits                     5686     5721      +35     
- Misses                   1289     1577     +288     
- Partials                 6538     6579      +41
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/756?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...f/query\_responses/proto\_account\_asset\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2FjY291bnRfYXNzZXRfcmVzcG9uc2UuaHBw) | `33.33% <ø> (ø)` | |
| [...el/interfaces/query\_responses/role\_permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3JvbGVfcGVybWlzc2lvbnMuaHBw) | `0% <ø> (ø)` | |
| [...el/interfaces/query\_responses/account\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2FjY291bnRfcmVzcG9uc2UuaHBw) | `0% <ø> (ø)` | |
| [.../protobuf/query\_responses/proto\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `83.33% <ø> (ø)` | |
| [...nterfaces/query\_responses/signatories\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3NpZ25hdG9yaWVzX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [...nterfaces/query\_responses/error\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2Vycm9yX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [...odel/interfaces/query\_responses/query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [...odel/interfaces/query\_responses/roles\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3JvbGVzX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [shared\_model/interfaces/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb24uaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [...\_model/backend/protobuf/common\_objects/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYWNjb3VudC5ocHA=) | `0% <0%> (ø)` | |
| ... and [44 more](https://codecov.io/gh/hyperledger/iroha/pull/756/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/756?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/756?src=pr&el=footer). Last update [9eba47e...3e3c567](https://codecov.io/gh/hyperledger/iroha/pull/756?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-12 11:17:44,2017-12-12 11:17:44
https://api.github.com/repos/hyperledger/iroha/issues/755,https://api.github.com/repos/hyperledger/iroha/issues/comments/351013337,https://github.com/hyperledger/iroha/pull/755#issuecomment-351013337,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/755?src=pr&el=h1) Report
> Merging [#755](https://codecov.io/gh/hyperledger/iroha/pull/755?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c81dd577b9779de6a679b5d6ea3bc38b61bc2114?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/755/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/755?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #755   +/-   ##
========================================
  Coverage    42.52%   42.52%           
========================================
  Files          309      309           
  Lines        12789    12789           
  Branches      7155     7155           
========================================
  Hits          5438     5438           
  Misses         709      709           
  Partials      6642     6642
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/755?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/755?src=pr&el=footer). Last update [c81dd57...182366d](https://codecov.io/gh/hyperledger/iroha/pull/755?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-12 10:40:49,2017-12-12 10:40:49
https://api.github.com/repos/hyperledger/iroha/issues/754,https://api.github.com/repos/hyperledger/iroha/issues/comments/351041848,https://github.com/hyperledger/iroha/pull/754#issuecomment-351041848,l4l,May you please rebase the branch before the review?,2017-12-12 12:49:10,2017-12-12 12:49:10
https://api.github.com/repos/hyperledger/iroha/issues/754,https://api.github.com/repos/hyperledger/iroha/issues/comments/351246087,https://github.com/hyperledger/iroha/pull/754#issuecomment-351246087,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/754?src=pr&el=h1) Report
> Merging [#754](https://codecov.io/gh/hyperledger/iroha/pull/754?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1739d6decb9887151985f46c7454d74b493cc48d?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/754/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/754?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #754   +/-   ##
========================================
  Coverage    42.17%   42.17%           
========================================
  Files          310      310           
  Lines        12997    12997           
  Branches      7326     7326           
========================================
  Hits          5482     5482           
  Misses         710      710           
  Partials      6805     6805
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/754?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/754?src=pr&el=footer). Last update [1739d6d...03426e4](https://codecov.io/gh/hyperledger/iroha/pull/754?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-13 00:57:58,2017-12-15 02:49:06
https://api.github.com/repos/hyperledger/iroha/issues/754,https://api.github.com/repos/hyperledger/iroha/issues/comments/351379734,https://github.com/hyperledger/iroha/pull/754#issuecomment-351379734,neewy,"We need to extend documentation with new API, have we already done it?",2017-12-13 12:40:39,2017-12-13 12:40:39
https://api.github.com/repos/hyperledger/iroha/issues/754,https://api.github.com/repos/hyperledger/iroha/issues/comments/351889446,https://github.com/hyperledger/iroha/pull/754#issuecomment-351889446,motxx,"> We need to extend documentation with new API, have we already done it?

I submitted PR to iroha-api repo.",2017-12-15 01:44:29,2017-12-15 01:45:06
https://api.github.com/repos/hyperledger/iroha/issues/754,https://api.github.com/repos/hyperledger/iroha/issues/comments/351898560,https://github.com/hyperledger/iroha/pull/754#issuecomment-351898560,sorabot,"SonarQube analysis reported 5 issues

1. ![CRITICAL][CRITICAL] [interactive_query_cli.cpp#L123](https://github.com/hyperledger/iroha/blob/03426e41a07636c24804bc8334f8b8e92ea8b4ef/iroha-cli/interactive/impl/interactive_query_cli.cpp#L123): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L98](https://github.com/hyperledger/iroha/blob/03426e41a07636c24804bc8334f8b8e92ea8b4ef/iroha-cli/interactive/impl/interactive_query_cli.cpp#L98): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L115](https://github.com/hyperledger/iroha/blob/03426e41a07636c24804bc8334f8b8e92ea8b4ef/iroha-cli/interactive/impl/interactive_query_cli.cpp#L115): Define a constant instead of duplicating this literal ""Choose query: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [interactive_query_cli.cpp#L201](https://github.com/hyperledger/iroha/blob/03426e41a07636c24804bc8334f8b8e92ea8b4ef/iroha-cli/interactive/impl/interactive_query_cli.cpp#L201): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [interactive_query_cli.hpp#L32](https://github.com/hyperledger/iroha/blob/03426e41a07636c24804bc8334f8b8e92ea8b4ef/iroha-cli/interactive/interactive_query_cli.hpp#L32): Undocumented API: InteractiveQueryCli [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-15 02:48:34,2017-12-15 02:48:34
https://api.github.com/repos/hyperledger/iroha/issues/753,https://api.github.com/repos/hyperledger/iroha/issues/comments/350951012,https://github.com/hyperledger/iroha/issues/753#issuecomment-350951012,grimadas,"Right now, if two users use same keys they are independent one from another.  admin@domain will have access for modification only to field with ""admin@domain"" key",2017-12-12 05:40:43,2017-12-12 05:40:43
https://api.github.com/repos/hyperledger/iroha/issues/753,https://api.github.com/repos/hyperledger/iroha/issues/comments/350974874,https://github.com/hyperledger/iroha/issues/753#issuecomment-350974874,motxx,"Yes, but what is intended for? Maybe I missed some requirements?

If AccountDetail, that is a substitute for ComplexAsset, can be different depending on account_id,
maybe similarly AccountAsset needed to be different depending on account_id, but the latter one is obviously wrong.",2017-12-12 08:05:12,2017-12-12 08:05:12
https://api.github.com/repos/hyperledger/iroha/issues/753,https://api.github.com/repos/hyperledger/iroha/issues/comments/351041855,https://github.com/hyperledger/iroha/issues/753#issuecomment-351041855,motxx,"I'm sorry, my understanding of kv-storage purpose is wrong. So I'll close this PR.",2017-12-12 12:49:12,2017-12-12 12:49:12
https://api.github.com/repos/hyperledger/iroha/issues/752,https://api.github.com/repos/hyperledger/iroha/issues/comments/350687021,https://github.com/hyperledger/iroha/issues/752#issuecomment-350687021,l4l,I think it should be guaranteed by the transport,2017-12-11 10:41:47,2017-12-11 10:41:47
https://api.github.com/repos/hyperledger/iroha/issues/752,https://api.github.com/repos/hyperledger/iroha/issues/comments/350913062,https://github.com/hyperledger/iroha/issues/752#issuecomment-350913062,Warchant,"There are two types of people who typically issue query:
1. peer operator
2. client

Operator has full access to the peer data, so there is no reason to sign answers.

However, clients do not have access. For them it is preferable to use TLS (transport level security). It guarantees that data between client and server (peer) is encrypted and that peer is authenticated. 

GRPC has option to turn TLS on. It is not implemented now in iroha, but eventually will be.",2017-12-12 01:16:59,2017-12-12 01:24:08
https://api.github.com/repos/hyperledger/iroha/issues/752,https://api.github.com/repos/hyperledger/iroha/issues/comments/350931179,https://github.com/hyperledger/iroha/issues/752#issuecomment-350931179,motxx,"I see. Thank you. Then, I'll close this issue.",2017-12-12 03:05:22,2017-12-12 03:05:22
https://api.github.com/repos/hyperledger/iroha/issues/751,https://api.github.com/repos/hyperledger/iroha/issues/comments/350582155,https://github.com/hyperledger/iroha/pull/751#issuecomment-350582155,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/751?src=pr&el=h1) Report
> Merging [#751](https://codecov.io/gh/hyperledger/iroha/pull/751?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/9eba47ea6ea0f4a7c3f046677e719d49ce670d7a?src=pr&el=desc) will **decrease** coverage by `0.85%`.
> The diff coverage is `17.6%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/751/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/751?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #751      +/-   ##
========================================================
- Coverage                 42.07%   41.22%   -0.86%     
========================================================
  Files                       396      430      +34     
  Lines                     13513    13877     +364     
  Branches                   7299     7458     +159     
========================================================
+ Hits                       5686     5721      +35     
- Misses                     1289     1577     +288     
- Partials                   6538     6579      +41
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/751?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...nterfaces/query\_responses/error\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2Vycm9yX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [...nterfaces/query\_responses/signatories\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3NpZ25hdG9yaWVzX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [.../protobuf/query\_responses/proto\_query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `83.33% <ø> (ø)` | |
| [...el/interfaces/query\_responses/account\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL2FjY291bnRfcmVzcG9uc2UuaHBw) | `0% <ø> (ø)` | |
| [shared\_model/interfaces/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb24uaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [...odel/interfaces/query\_responses/roles\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3JvbGVzX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [...odel/interfaces/query\_responses/query\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3F1ZXJ5X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [...el/interfaces/query\_responses/role\_permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcnlfcmVzcG9uc2VzL3JvbGVfcGVybWlzc2lvbnMuaHBw) | `0% <ø> (ø)` | |
| [...f/query\_responses/proto\_account\_asset\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcnlfcmVzcG9uc2VzL3Byb3RvX2FjY291bnRfYXNzZXRfcmVzcG9uc2UuaHBw) | `33.33% <ø> (ø)` | |
| [...ed\_model/backend/protobuf/common\_objects/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYXNzZXQuaHBw) | `0% <0%> (ø)` | |
| ... and [44 more](https://codecov.io/gh/hyperledger/iroha/pull/751/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/751?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/751?src=pr&el=footer). Last update [9eba47e...51d96a3](https://codecov.io/gh/hyperledger/iroha/pull/751?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-10 21:15:57,2017-12-11 14:35:26
https://api.github.com/repos/hyperledger/iroha/issues/751,https://api.github.com/repos/hyperledger/iroha/issues/comments/350741337,https://github.com/hyperledger/iroha/pull/751#issuecomment-350741337,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [query_response_handler.cpp#L98](https://github.com/hyperledger/iroha/blob/51d96a371f7c66fb50776ea0b8468e36bbe0964f/iroha-cli/impl/query_response_handler.cpp#L98): Define a constant instead of duplicating this literal "" {} "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [query_response_handler.cpp#L114](https://github.com/hyperledger/iroha/blob/51d96a371f7c66fb50776ea0b8468e36bbe0964f/iroha-cli/impl/query_response_handler.cpp#L114): Define a constant instead of duplicating this literal ""-Asset Id- {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [query_response_handler.cpp#L145](https://github.com/hyperledger/iroha/blob/51d96a371f7c66fb50776ea0b8468e36bbe0964f/iroha-cli/impl/query_response_handler.cpp#L145): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-11 14:35:05,2017-12-11 14:35:05
https://api.github.com/repos/hyperledger/iroha/issues/750,https://api.github.com/repos/hyperledger/iroha/issues/comments/350466453,https://github.com/hyperledger/iroha/pull/750#issuecomment-350466453,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/750?src=pr&el=h1) Report
> Merging [#750](https://codecov.io/gh/hyperledger/iroha/pull/750?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c81dd577b9779de6a679b5d6ea3bc38b61bc2114?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/750/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/750?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #750      +/-   ##
===========================================
+ Coverage    42.52%   42.52%   +<.01%     
===========================================
  Files          309      309              
  Lines        12789    12778      -11     
  Branches      7155     7146       -9     
===========================================
- Hits          5438     5434       -4     
- Misses         709      710       +1     
+ Partials      6642     6634       -8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/750?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/server\_runner.cpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5jcHA=) | `42.85% <0%> (-9.53%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/kv\_storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9rdl9zdG9yYWdlX3Rlc3QuY3Bw) | `18.18% <0%> (-4.05%)` | :arrow_down: |
| [...had/model/converters/impl/json\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2NvbW1hbmRfZmFjdG9yeS5jcHA=) | `41.98% <0%> (-0.49%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `15.84% <0%> (-0.19%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `41.34% <0%> (-0.04%)` | :arrow_down: |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.5% <0%> (-0.02%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `62.9% <0%> (ø)` | :arrow_up: |
| [irohad/model/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9hY2NvdW50LmhwcA==) | `25% <0%> (ø)` | :arrow_up: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `14% <0%> (+0.04%)` | :arrow_up: |
| ... and [6 more](https://codecov.io/gh/hyperledger/iroha/pull/750/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/750?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/750?src=pr&el=footer). Last update [c81dd57...4605c70](https://codecov.io/gh/hyperledger/iroha/pull/750?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-09 13:25:32,2017-12-09 13:25:32
https://api.github.com/repos/hyperledger/iroha/issues/750,https://api.github.com/repos/hyperledger/iroha/issues/comments/350961395,https://github.com/hyperledger/iroha/pull/750#issuecomment-350961395,neewy,"It was told by Andrei (@lebdron), that we should install boost dependencies in .deb package rather than in the system. As agreed with @x3medima17 I shall close the PR",2017-12-12 06:52:46,2017-12-12 06:52:46
https://api.github.com/repos/hyperledger/iroha/issues/749,https://api.github.com/repos/hyperledger/iroha/issues/comments/350465975,https://github.com/hyperledger/iroha/issues/749#issuecomment-350465975,x3medima17,Fixed by https://github.com/hyperledger/iroha/pull/750 PR,2017-12-09 13:20:23,2017-12-09 13:20:23
https://api.github.com/repos/hyperledger/iroha/issues/749,https://api.github.com/repos/hyperledger/iroha/issues/comments/350945106,https://github.com/hyperledger/iroha/issues/749#issuecomment-350945106,Warchant,I close this issue? @x3medima17 @neewy ,2017-12-12 04:54:05,2017-12-12 04:54:05
https://api.github.com/repos/hyperledger/iroha/issues/749,https://api.github.com/repos/hyperledger/iroha/issues/comments/351386704,https://github.com/hyperledger/iroha/issues/749#issuecomment-351386704,neewy,Fixed by https://github.com/hyperledger/iroha/pull/762,2017-12-13 13:11:05,2017-12-13 13:11:05
https://api.github.com/repos/hyperledger/iroha/issues/748,https://api.github.com/repos/hyperledger/iroha/issues/comments/353159878,https://github.com/hyperledger/iroha/issues/748#issuecomment-353159878,neewy,@motxx specify exact method -- it is not meaningful in current develop,2017-12-20 19:28:54,2017-12-20 19:28:54
https://api.github.com/repos/hyperledger/iroha/issues/748,https://api.github.com/repos/hyperledger/iroha/issues/comments/359017481,https://github.com/hyperledger/iroha/issues/748#issuecomment-359017481,Warchant,What is the status of this issue?,2018-01-19 16:28:43,2018-01-19 16:28:43
https://api.github.com/repos/hyperledger/iroha/issues/748,https://api.github.com/repos/hyperledger/iroha/issues/comments/360213943,https://github.com/hyperledger/iroha/issues/748#issuecomment-360213943,motxx,"I heard that we've already decided details of above constraints.
Finally, we use RFC for domain_id, not account_id. And account_id and asset_id is expressed by regex (with relaxed restrictions).
",2018-01-24 17:39:24,2018-01-24 17:41:10
https://api.github.com/repos/hyperledger/iroha/issues/747,https://api.github.com/repos/hyperledger/iroha/issues/comments/350037965,https://github.com/hyperledger/iroha/pull/747#issuecomment-350037965,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/747?src=pr&el=h1) Report
> Merging [#747](https://codecov.io/gh/hyperledger/iroha/pull/747?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/5e768fb169af79a508e4e07cdfd2e572cf2c52f6?src=pr&el=desc) will **increase** coverage by `0.58%`.
> The diff coverage is `31.96%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/747/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/747?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #747      +/-   ##
========================================================
+ Coverage                 41.49%   42.07%   +0.58%     
========================================================
  Files                       395      396       +1     
  Lines                     13339    13513     +174     
  Branches                   7183     7299     +116     
========================================================
+ Hits                       5535     5686     +151     
+ Misses                     1420     1289     -131     
- Partials                   6384     6538     +154
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/747?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...rohad/validation/impl/stateless\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/747/diff?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWxlc3NfdmFsaWRhdG9yX2ltcGwuY3Bw) | `36.36% <ø> (ø)` | :arrow_up: |
| [...hared\_model/validators/commands\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/747/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `30% <30%> (ø)` | |
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/747/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `19.56% <33.33%> (+4.47%)` | :arrow_up: |
| [shared\_model/validators/commands\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/747/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yLmhwcA==) | `41.13% <34.61%> (+32.19%)` | :arrow_up: |
| [shared\_model/validators/answer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/747/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvYW5zd2VyLmhwcA==) | `76.92% <66.66%> (-3.08%)` | :arrow_down: |
| [shared\_model/backend/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/747/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb24uaHBw) | `58.97% <0%> (+10.25%)` | :arrow_up: |
| [...el/backend/protobuf/commands/proto\_create\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/747/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY3JlYXRlX3JvbGUuaHBw) | `33.33% <0%> (+13.33%)` | :arrow_up: |
| [...ckend/protobuf/commands/proto\_grant\_permission.hpp](https://codecov.io/gh/hyperledger/iroha/pull/747/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fZ3JhbnRfcGVybWlzc2lvbi5ocHA=) | `55.55% <0%> (+22.22%)` | :arrow_up: |
| ... and [9 more](https://codecov.io/gh/hyperledger/iroha/pull/747/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/747?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/747?src=pr&el=footer). Last update [5e768fb...9a8f523](https://codecov.io/gh/hyperledger/iroha/pull/747?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-07 17:28:29,2017-12-11 07:25:50
https://api.github.com/repos/hyperledger/iroha/issues/747,https://api.github.com/repos/hyperledger/iroha/issues/comments/350079039,https://github.com/hyperledger/iroha/pull/747#issuecomment-350079039,l4l,"You've forgot to cleanup the generated pb files, that's the problem
I think we need some `proto<>variant_idx` map as we have in old model, otherwise we have pain in debugging such things

Please remove (by amending) debugging fixes in the pr",2017-12-07 20:04:24,2017-12-07 20:04:24
https://api.github.com/repos/hyperledger/iroha/issues/747,https://api.github.com/repos/hyperledger/iroha/issues/comments/350641266,https://github.com/hyperledger/iroha/pull/747#issuecomment-350641266,sorabot,"SonarQube analysis reported 3 issues

1. ![MINOR][MINOR] [stateless_validator_impl.cpp#L39](https://github.com/hyperledger/iroha/blob/9a8f52389d45da4957308072f4aa2fe6b9fadc6e/irohad/validation/impl/stateless_validator_impl.cpp#L39): Define a constant instead of duplicating this literal ""crypto verification broken"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [stateless_validator_impl.cpp#L40](https://github.com/hyperledger/iroha/blob/9a8f52389d45da4957308072f4aa2fe6b9fadc6e/irohad/validation/impl/stateless_validator_impl.cpp#L40): Define a constant instead of duplicating this literal false 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [stateless_validator_impl.cpp#L76](https://github.com/hyperledger/iroha/blob/9a8f52389d45da4957308072f4aa2fe6b9fadc6e/irohad/validation/impl/stateless_validator_impl.cpp#L76): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-11 07:20:24,2017-12-11 07:20:24
https://api.github.com/repos/hyperledger/iroha/issues/746,https://api.github.com/repos/hyperledger/iroha/issues/comments/375907707,https://github.com/hyperledger/iroha/issues/746#issuecomment-375907707,l4l,Fixed after #1123 merge,2018-03-24 16:56:08,2018-03-24 16:56:08
https://api.github.com/repos/hyperledger/iroha/issues/745,https://api.github.com/repos/hyperledger/iroha/issues/comments/349912593,https://github.com/hyperledger/iroha/pull/745#issuecomment-349912593,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/745?src=pr&el=h1) Report
> Merging [#745](https://codecov.io/gh/hyperledger/iroha/pull/745?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/b33d71a14068c206599c1d49ef8a9a07efd5fa5b?src=pr&el=desc) will **decrease** coverage by `0.02%`.
> The diff coverage is `11.11%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/745/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/745?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #745      +/-   ##
========================================================
- Coverage                 41.51%   41.49%   -0.03%     
========================================================
  Files                       395      395              
  Lines                     13336    13343       +7     
  Branches                   7182     7185       +3     
========================================================
  Hits                       5537     5537              
- Misses                     1414     1420       +6     
- Partials                   6385     6386       +1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/745?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/interfaces/base/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/745/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9zaWduYWJsZS5ocHA=) | `25% <ø> (ø)` | :arrow_up: |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/745/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `23.52% <0%> (-3.14%)` | :arrow_down: |
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/745/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `15.09% <0%> (-0.3%)` | :arrow_down: |
| [shared\_model/builders/protobuf/unsigned\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/745/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Vuc2lnbmVkX3Byb3RvLmhwcA==) | `27.27% <0%> (ø)` | :arrow_up: |
| [shared\_model/backend/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/745/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb24uaHBw) | `48.71% <50%> (-2.64%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/745?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/745?src=pr&el=footer). Last update [b33d71a...9fb2eaf](https://codecov.io/gh/hyperledger/iroha/pull/745?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-07 09:32:49,2017-12-07 10:28:50
https://api.github.com/repos/hyperledger/iroha/issues/744,https://api.github.com/repos/hyperledger/iroha/issues/comments/349863047,https://github.com/hyperledger/iroha/pull/744#issuecomment-349863047,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/744?src=pr&el=h1) Report
> Merging [#744](https://codecov.io/gh/hyperledger/iroha/pull/744?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3484c6b514ad24db530b4a7a76f363d251c7e200?src=pr&el=desc) will **decrease** coverage by `0.34%`.
> The diff coverage is `19.71%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/744/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/744?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #744      +/-   ##
===========================================
- Coverage    42.52%   42.17%   -0.35%     
===========================================
  Files          309      310       +1     
  Lines        12789    12997     +208     
  Branches      7155     7326     +171     
===========================================
+ Hits          5438     5482      +44     
- Misses         709      710       +1     
- Partials      6642     6805     +163
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/744?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/converters/json\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kX2ZhY3RvcnkuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZF9mYWN0b3J5LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Blcm1pc3Npb25zLmhwcA==) | `15.38% <0%> (-0.41%)` | :arrow_down: |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.33% <0%> (-0.18%)` | :arrow_down: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [.../model/execution/impl/command\_executor\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3JfZmFjdG9yeS5jcHA=) | `16.12% <0%> (-1.12%)` | :arrow_down: |
| [irohad/model/registration/command\_registration.hpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3JlZ2lzdHJhdGlvbi9jb21tYW5kX3JlZ2lzdHJhdGlvbi5ocHA=) | `11.76% <0%> (-0.74%)` | :arrow_down: |
| [irohad/model/generators/impl/command\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9jb21tYW5kX2dlbmVyYXRvci5jcHA=) | `26.31% <0%> (ø)` | :arrow_up: |
| [...odule/irohad/model/converters/pb\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZHNfdGVzdC5jcHA=) | `6.36% <0%> (-0.48%)` | :arrow_down: |
| [irohad/model/commands/subtract\_asset\_quantity.hpp](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL3N1YnRyYWN0X2Fzc2V0X3F1YW50aXR5LmhwcA==) | `0% <0%> (ø)` | |
| ... and [9 more](https://codecov.io/gh/hyperledger/iroha/pull/744/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/744?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/744?src=pr&el=footer). Last update [3484c6b...5d7f0bf](https://codecov.io/gh/hyperledger/iroha/pull/744?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-07 04:57:01,2017-12-13 09:18:13
https://api.github.com/repos/hyperledger/iroha/issues/744,https://api.github.com/repos/hyperledger/iroha/issues/comments/351329787,https://github.com/hyperledger/iroha/pull/744#issuecomment-351329787,sorabot,"SonarQube analysis reported 190 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 42 minor
* ![INFO][INFO] 147 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L541](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/pb_command_factory.cpp#L541): The Cyclomatic Complexity of this function is 16 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [json_command_factory.cpp#L48](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/json_command_factory.cpp#L48): Define a constant instead of duplicating this literal ""value"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L63](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/json_command_factory.cpp#L63): Define a constant instead of duplicating this literal ""precision"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L71](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/json_command_factory.cpp#L71): Variable 'serializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_command_factory.cpp#L98](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/json_command_factory.cpp#L98): Define a constant instead of duplicating this literal ""AddAssetQuantity"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L100](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/json_command_factory.cpp#L100): Define a constant instead of duplicating this literal ""SubtractAssetQuantity"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L102](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/json_command_factory.cpp#L102): Define a constant instead of duplicating this literal ""AddPeer"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L103](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/json_command_factory.cpp#L103): Define a constant instead of duplicating this literal ""AddSignatory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L104](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/json_command_factory.cpp#L104): Define a constant instead of duplicating this literal ""CreateAccount"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L105](https://github.com/hyperledger/iroha/blob/5d7f0bff191d8b7e6048a3a610bdd98239131a4e/irohad/model/converters/impl/json_command_factory.cpp#L105): Define a constant instead of duplicating this literal ""CreateAsset"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-13 09:13:16,2017-12-13 09:13:16
https://api.github.com/repos/hyperledger/iroha/issues/743,https://api.github.com/repos/hyperledger/iroha/issues/comments/349812517,https://github.com/hyperledger/iroha/pull/743#issuecomment-349812517,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/743?src=pr&el=h1) Report
> Merging [#743](https://codecov.io/gh/hyperledger/iroha/pull/743?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/8e26d7553eba9736d46e7f56fb89dc4ed511a238?src=pr&el=desc) will **increase** coverage by `0.18%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/743/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/743?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #743      +/-   ##
===========================================
+ Coverage    41.98%   42.17%   +0.18%     
===========================================
  Files          311      310       -1     
  Lines        13132    12997     -135     
  Branches      7414     7326      -88     
===========================================
- Hits          5514     5482      -32     
+ Misses         727      710      -17     
+ Partials      6891     6805      -86
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/743?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `42.12% <0%> (-0.78%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `62.9% <0%> (-0.59%)` | :arrow_down: |
| [...had/model/converters/impl/json\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2NvbW1hbmRfZmFjdG9yeS5jcHA=) | `42.29% <0%> (-0.52%)` | :arrow_down: |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `13.03% <0%> (-0.32%)` | :arrow_down: |
| [...rohad/model/converters/impl/pb\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9jb21tYW5kX2ZhY3RvcnkuY3Bw) | `37.57% <0%> (-0.1%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `29.75% <0%> (-0.02%)` | :arrow_down: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZF9mYWN0b3J5LmhwcA==) | `100% <0%> (ø)` | :arrow_up: |
| [irohad/model/commands/detach\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2RldGFjaF9yb2xlLmhwcA==) | | |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.33% <0%> (+0.1%)` | :arrow_up: |
| ... and [7 more](https://codecov.io/gh/hyperledger/iroha/pull/743/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/743?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/743?src=pr&el=footer). Last update [8e26d75...47587dc](https://codecov.io/gh/hyperledger/iroha/pull/743?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-06 23:43:09,2017-12-15 09:42:21
https://api.github.com/repos/hyperledger/iroha/issues/743,https://api.github.com/repos/hyperledger/iroha/issues/comments/350276434,https://github.com/hyperledger/iroha/pull/743#issuecomment-350276434,neewy,corrections?,2017-12-08 14:29:46,2017-12-08 14:29:46
https://api.github.com/repos/hyperledger/iroha/issues/743,https://api.github.com/repos/hyperledger/iroha/issues/comments/351931828,https://github.com/hyperledger/iroha/pull/743#issuecomment-351931828,neewy,"I would be extra happy if you follow advice of @l4l and make html labels for issues
<a href=""/hyperledger/iroha/labels/enhancement"" class=""label css-truncate-target linked-labelstyle-1d76db"" title=""enhancement"">enhancement</a>",2017-12-15 07:16:43,2017-12-15 07:16:43
https://api.github.com/repos/hyperledger/iroha/issues/743,https://api.github.com/repos/hyperledger/iroha/issues/comments/351932133,https://github.com/hyperledger/iroha/pull/743#issuecomment-351932133,Warchant,@neewy this does not work in github,2017-12-15 07:18:38,2017-12-15 07:18:38
https://api.github.com/repos/hyperledger/iroha/issues/743,https://api.github.com/repos/hyperledger/iroha/issues/comments/351934882,https://github.com/hyperledger/iroha/pull/743#issuecomment-351934882,l4l,@neewy isaacs/github#305 is still unresolved :(,2017-12-15 07:36:23,2017-12-15 07:36:23
https://api.github.com/repos/hyperledger/iroha/issues/742,https://api.github.com/repos/hyperledger/iroha/issues/comments/349612525,https://github.com/hyperledger/iroha/pull/742#issuecomment-349612525,MizukiSonoko,"Sorry I miss `rebase`, so I will close PR",2017-12-06 11:31:11,2017-12-06 11:31:41
https://api.github.com/repos/hyperledger/iroha/issues/742,https://api.github.com/repos/hyperledger/iroha/issues/comments/350049761,https://github.com/hyperledger/iroha/pull/742#issuecomment-350049761,l4l,"@MizukiSonoko you basically can force push to your own branch after rebase, it's fine",2017-12-07 18:13:13,2017-12-07 18:13:13
https://api.github.com/repos/hyperledger/iroha/issues/741,https://api.github.com/repos/hyperledger/iroha/issues/comments/349566993,https://github.com/hyperledger/iroha/pull/741#issuecomment-349566993,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/741?src=pr&el=h1) Report
> Merging [#741](https://codecov.io/gh/hyperledger/iroha/pull/741?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/f05e6ee0c38a6b90bb62401ba77a9530533bc80f?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/741/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/741?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #741   +/-   ##
=====================================================
  Coverage                 41.51%   41.51%           
=====================================================
  Files                       395      395           
  Lines                     13336    13336           
  Branches                   7182     7182           
=====================================================
  Hits                       5537     5537           
  Misses                     1414     1414           
  Partials                   6385     6385
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/741?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/interfaces/base/model\_primitive.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9tb2RlbF9wcmltaXRpdmUuaHBw) | `12.5% <ø> (ø)` | |
| [shared\_model/interfaces/commands/set\_quorum.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvc2V0X3F1b3J1bS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...red\_model/interfaces/commands/remove\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvcmVtb3ZlX3NpZ25hdG9yeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...el/interfaces/queries/get\_account\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF90cmFuc2FjdGlvbnMuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/utils/polymorphic\_wrapper.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3BvbHltb3JwaGljX3dyYXBwZXIuaHBw) | `87.5% <ø> (ø)` | |
| [...hared\_model/interfaces/queries/get\_signatories.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfc2lnbmF0b3JpZXMuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/queries/get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/utils/visitor\_apply\_for\_all.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3Zpc2l0b3JfYXBwbHlfZm9yX2FsbC5ocHA=) | `0% <ø> (ø)` | |
| [...nsaction\_responses/stateless\_valid\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3N0YXRlbGVzc192YWxpZF90eF9yZXNwb25zZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...ed\_model/interfaces/queries/get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldHMuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| ... and [34 more](https://codecov.io/gh/hyperledger/iroha/pull/741/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/741?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/741?src=pr&el=footer). Last update [f05e6ee...756ade5](https://codecov.io/gh/hyperledger/iroha/pull/741?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-06 08:17:39,2017-12-06 15:52:05
https://api.github.com/repos/hyperledger/iroha/issues/739,https://api.github.com/repos/hyperledger/iroha/issues/comments/349397110,https://github.com/hyperledger/iroha/pull/739#issuecomment-349397110,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/739?src=pr&el=h1) Report
> Merging [#739](https://codecov.io/gh/hyperledger/iroha/pull/739?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/76eb3535bde92bc35f7c457b69ad1148a978a656?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `18.34%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/739/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/739?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #739      +/-   ##
========================================================
+ Coverage                 41.51%   41.51%   +<.01%     
========================================================
  Files                       393      395       +2     
  Lines                     13178    13336     +158     
  Branches                   7090     7182      +92     
========================================================
+ Hits                       5471     5537      +66     
- Misses                     1367     1414      +47     
- Partials                   6340     6385      +45
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/739?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/interfaces/queries/get\_roles.hpp](https://codecov.io/gh/hyperledger/iroha/pull/739/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfcm9sZXMuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/polymorphic\_wrapper.hpp](https://codecov.io/gh/hyperledger/iroha/pull/739/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcG9seW1vcnBoaWNfd3JhcHBlci5ocHA=) | `87.5% <100%> (+18.26%)` | :arrow_up: |
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/739/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `15.38% <18.51%> (+3.26%)` | :arrow_up: |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/739/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `73.07% <60%> (-22.58%)` | :arrow_down: |
| [shared\_model/validators/commands\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/739/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvY29tbWFuZHNfdmFsaWRhdG9yLmhwcA==) | `8.94% <8.94%> (ø)` | |
| [shared\_model/validators/answer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/739/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3ZhbGlkYXRvcnMvYW5zd2VyLmhwcA==) | `80% <80%> (ø)` | |
| [shared\_model/interfaces/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/739/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| ... and [6 more](https://codecov.io/gh/hyperledger/iroha/pull/739/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/739?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/739?src=pr&el=footer). Last update [76eb353...dbf6c66](https://codecov.io/gh/hyperledger/iroha/pull/739?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-05 18:31:03,2017-12-06 14:14:51
https://api.github.com/repos/hyperledger/iroha/issues/738,https://api.github.com/repos/hyperledger/iroha/issues/comments/349274727,https://github.com/hyperledger/iroha/pull/738#issuecomment-349274727,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/738?src=pr&el=h1) Report
> Merging [#738](https://codecov.io/gh/hyperledger/iroha/pull/738?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/3b3859d879f4e60959cf81d1238caca0f1bc87e1?src=pr&el=desc) will **decrease** coverage by `0.38%`.
> The diff coverage is `22.54%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/738/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/738?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #738      +/-   ##
========================================================
- Coverage                 41.65%   41.26%   -0.39%     
========================================================
  Files                       378      390      +12     
  Lines                     13020    13113      +93     
  Branches                   7022     7062      +40     
========================================================
- Hits                       5423     5411      -12     
- Misses                     1308     1397      +89     
- Partials                   6289     6305      +16
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/738?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...del/backend/protobuf/queries/proto\_get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfYWNjb3VudC5ocHA=) | `37.5% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/queries/query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...odel/backend/protobuf/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/queries/get\_asset\_info.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYXNzZXRfaW5mby5ocHA=) | `0% <0%> (ø)` | |
| [...ed\_model/interfaces/queries/get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldHMuaHBw) | `0% <0%> (ø)` | |
| [...\_model/interfaces/queries/get\_role\_permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfcm9sZV9wZXJtaXNzaW9ucy5ocHA=) | `0% <0%> (ø)` | |
| [...el/interfaces/queries/get\_account\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF90cmFuc2FjdGlvbnMuaHBw) | `0% <0%> (ø)` | |
| [shared\_model/interfaces/queries/get\_roles.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfcm9sZXMuaHBw) | `0% <0%> (ø)` | |
| [...erfaces/queries/get\_account\_asset\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldF90cmFuc2FjdGlvbnMuaHBw) | `0% <0%> (ø)` | |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `26.66% <0%> (-0.26%)` | :arrow_down: |
| ... and [29 more](https://codecov.io/gh/hyperledger/iroha/pull/738/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/738?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/738?src=pr&el=footer). Last update [3b3859d...21a38f1](https://codecov.io/gh/hyperledger/iroha/pull/738?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-05 11:18:33,2017-12-05 13:03:07
https://api.github.com/repos/hyperledger/iroha/issues/737,https://api.github.com/repos/hyperledger/iroha/issues/comments/348958294,https://github.com/hyperledger/iroha/issues/737#issuecomment-348958294,kamilsa,"Hi, RobTS!
Thanks for your question.

Can you please specify all pipeline. What transactions you have executed before launching query which resulted in that error? Also please tell the command you use to execute iroha-cli",2017-12-04 13:12:40,2017-12-04 13:12:40
https://api.github.com/repos/hyperledger/iroha/issues/737,https://api.github.com/repos/hyperledger/iroha/issues/comments/375907613,https://github.com/hyperledger/iroha/issues/737#issuecomment-375907613,l4l,"No response, feel free to add more info if issue is still present",2018-03-24 16:54:58,2018-03-24 16:54:58
https://api.github.com/repos/hyperledger/iroha/issues/737,https://api.github.com/repos/hyperledger/iroha/issues/comments/376891789,https://github.com/hyperledger/iroha/issues/737#issuecomment-376891789,BertCatsburg,"Hello, 
I am following your ""**Getting Started**"" and at **paragraph 2.3.2**. I get the same error. Although, in my case it says ""**Query is stateless invalid**"". 

Here's my terminal output: 
```
Choose query: 
1. Get all permissions related to role (get_role_perm)
2. Get Transactions by transactions' hashes (get_tx)
3. Get information about asset (get_ast_info)
4. Get Account's Transactions (get_acc_tx)
5. Get all current roles in the system (get_roles)
6. Get Account's Signatories (get_acc_sign)
7. Get Account's Assets (get_acc_ast)
8. Get Account Information (get_acc)
0. Back (b)
> : 7
Requested account Id: test@test
Requested asset Id: coolcoin
Query is formed. Choose what to do:
1. Send to Iroha peer (send)
2. Save as json file (save)
0. Back (b)
> : 1
Peer address (0.0.0.0): localhost
Peer port (50051): 50051
[2018-03-28 13:35:28.906738600][th:251][error] QueryResponseHandler Query is stateless invalid
--------------------
Choose what to do:
```

Also saved the query to a json file. This is the contents of that json: 
```
{
    ""creator_account_id"": ""admin@test"",
    ""query_counter"": 5,
    ""created_ts"": 1522244159458,
    ""signature"": {
        ""pubkey"": ""407e57f50ca48969b08ba948171bb2435e035d82cec417e18e4a38f5fb113f83"",
        ""signature"": ""b1fb69f9ecac99a514624c217965add0d945a02202b1dd4c75cf4ce80da9ccd625eb511cf8380a65d76cf2f
b3b6d2865235a0b3a757a06386b89c24454a4e30b""
    },
    ""query_type"": ""GetAccountAssets"",
    ""account_id"": ""test@test"",
    ""asset_id"": ""coolcoin""
}
```

I followed the getting_started with one exception: the blockquote volume was moved somewhere else: Docker starting up irohad:
```
		docker run -it --name iroha \
		-p 50051:50051 \
		-v $(pwd)/iroha/example:/opt/iroha_data \
		-v $(pwd)/blockstore:/tmp/block_store \
		--network=iroha-network \
		--entrypoint=/bin/bash \
		hyperledger/iroha-docker:develop
```
But that should not be the problem I guess. ",2018-03-28 13:44:28,2018-03-28 13:44:28
https://api.github.com/repos/hyperledger/iroha/issues/737,https://api.github.com/repos/hyperledger/iroha/issues/comments/376974414,https://github.com/hyperledger/iroha/issues/737#issuecomment-376974414,l4l,@BertCatsburg asset_id should be in form `coin#domain`,2018-03-28 17:44:54,2018-03-28 17:44:54
https://api.github.com/repos/hyperledger/iroha/issues/737,https://api.github.com/repos/hyperledger/iroha/issues/comments/377012054,https://github.com/hyperledger/iroha/issues/737#issuecomment-377012054,BertCatsburg,"I already tried that, but then another error: 
```
Requested account Id: test@test
Requested asset Id: coolcoin#test
Query is formed. Choose what to do:
1. Send to Iroha peer (send)
2. Save as json file (save)
0. Back (b)
> : 1
Peer address (0.0.0.0): localhost
Peer port (50051): 50051
[2018-03-28 19:41:47.186480500][th:251][error] QueryResponseHandler Account assets not found
--------------------
```

So, problem not solved. ",2018-03-28 19:45:16,2018-03-28 19:45:16
https://api.github.com/repos/hyperledger/iroha/issues/737,https://api.github.com/repos/hyperledger/iroha/issues/comments/377017095,https://github.com/hyperledger/iroha/issues/737#issuecomment-377017095,BertCatsburg,"Ho, stop, I tried with a new asset and then it worked. 
Very strange, 
Problem solved. 

Sorry for the inconvenience and thanks for your time.
",2018-03-28 20:01:39,2018-03-28 20:01:39
https://api.github.com/repos/hyperledger/iroha/issues/737,https://api.github.com/repos/hyperledger/iroha/issues/comments/377024586,https://github.com/hyperledger/iroha/issues/737#issuecomment-377024586,l4l,You are welcome,2018-03-28 20:26:38,2018-03-28 20:26:38
https://api.github.com/repos/hyperledger/iroha/issues/737,https://api.github.com/repos/hyperledger/iroha/issues/comments/465873818,https://github.com/hyperledger/iroha/issues/737#issuecomment-465873818,darwinharianto,"tried to do that with a new asset, but I still get query is stateless invalid. What should I do? 

```
--------------------
Choose what to do:
1. New transaction (tx)
2. New query (qry)
3. New transaction status request (st)
> : 2
Choose query: 
1. Get all permissions related to role (get_role_perm)
2. Get Transactions by transactions' hashes (get_tx)
3. Get information about asset (get_ast_info)
4. Get Account's Transactions (get_acc_tx)
5. Get Account's Asset Transactions (get_acc_ast_tx)
6. Get all current roles in the system (get_roles)
7. Get Account's Signatories (get_acc_sign)
8. Get Account's Assets (get_acc_ast)
9. Get Account Information (get_acc)
0. Back (b)
> : 4
Requested account Id (admin@test): 
Query is formed. Choose what to do:
1. Send to Iroha peer (send)
2. Save as json file (save)
0. Back (b)
> : 1
Peer address (localhost): 
Peer port (50051): 
[2019-02-21 06:00:15.596882000][th:37][error] QueryResponseHandler Query is stateless invalid
```",2019-02-21 06:05:52,2019-02-21 06:05:52
https://api.github.com/repos/hyperledger/iroha/issues/736,https://api.github.com/repos/hyperledger/iroha/issues/comments/348955434,https://github.com/hyperledger/iroha/pull/736#issuecomment-348955434,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/736?src=pr&el=h1) Report
> Merging [#736](https://codecov.io/gh/hyperledger/iroha/pull/736?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/9dd5d017537ca97649860e13ec86e1581590a159?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/736/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/736?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #736   +/-   ##
=====================================================
  Coverage                 41.38%   41.38%           
=====================================================
  Files                       392      392           
  Lines                     13160    13160           
  Branches                   7074     7074           
=====================================================
  Hits                       5446     5446           
  Misses                     1397     1397           
  Partials                   6317     6317
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/736?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...erfaces/queries/get\_account\_asset\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldF90cmFuc2FjdGlvbnMuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [...hared\_model/interfaces/commands/transfer\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvdHJhbnNmZXJfYXNzZXQuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/base/primitive.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9wcmltaXRpdmUuaHBw) | `0% <ø> (ø)` | |
| [...ed\_model/interfaces/queries/get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldHMuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [...nsaction\_responses/stateless\_valid\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3N0YXRlbGVzc192YWxpZF90eF9yZXNwb25zZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...ces/transaction\_responses/abstract\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL2Fic3RyYWN0X3R4X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/base/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9zaWduYWJsZS5ocHA=) | `0% <ø> (ø)` | |
| [...\_model/interfaces/queries/get\_role\_permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfcm9sZV9wZXJtaXNzaW9ucy5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/base/hashable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvYmFzZS9oYXNoYWJsZS5ocHA=) | `0% <ø> (ø)` | |
| ... and [31 more](https://codecov.io/gh/hyperledger/iroha/pull/736/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/736?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/736?src=pr&el=footer). Last update [9dd5d01...d51eff9](https://codecov.io/gh/hyperledger/iroha/pull/736?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-04 12:59:55,2017-12-05 18:18:47
https://api.github.com/repos/hyperledger/iroha/issues/736,https://api.github.com/repos/hyperledger/iroha/issues/comments/349544173,https://github.com/hyperledger/iroha/pull/736#issuecomment-349544173,muratovv,Moved to https://github.com/hyperledger/iroha/pull/741.,2017-12-06 06:03:10,2017-12-06 06:03:10
https://api.github.com/repos/hyperledger/iroha/issues/735,https://api.github.com/repos/hyperledger/iroha/issues/comments/348831281,https://github.com/hyperledger/iroha/pull/735#issuecomment-348831281,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/735?src=pr&el=h1) Report
> Merging [#735](https://codecov.io/gh/hyperledger/iroha/pull/735?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/a99dccb373c3d51e4b7038482404191119965928?src=pr&el=desc) will **decrease** coverage by `0.15%`.
> The diff coverage is `28.57%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/735/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/735?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #735      +/-   ##
========================================================
- Coverage                 41.69%   41.53%   -0.16%     
========================================================
  Files                       371      376       +5     
  Lines                     12895    12973      +78     
  Branches                   6976     7010      +34     
========================================================
+ Hits                       5376     5388      +12     
- Misses                     1257     1308      +51     
- Partials                   6262     6277      +15
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/735?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/queries/get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/735/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnQuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/queries/query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/735/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9xdWVyeS5ocHA=) | `0% <ø> (ø)` | |
| [shared\_model/interfaces/queries/get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/735/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudC5ocHA=) | `0% <0%> (ø)` | |
| [shared\_model/utils/lazy\_initializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/735/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL2xhenlfaW5pdGlhbGl6ZXIuaHBw) | `71.42% <0%> (+0.84%)` | :arrow_up: |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/735/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `26.92% <26.92%> (ø)` | |
| [...\_model/backend\_proto/shared\_proto\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/735/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3F1ZXJpZXNfdGVzdC5jcHA=) | `36.36% <36.36%> (ø)` | |
| [...del/backend/protobuf/queries/proto\_get\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/735/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfYWNjb3VudC5ocHA=) | `37.5% <37.5%> (ø)` | |
| [shared\_model/utils/reference\_holder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/735/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3JlZmVyZW5jZV9ob2xkZXIuaHBw) | `80% <0%> (-5.72%)` | :arrow_down: |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/735/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/735?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/735?src=pr&el=footer). Last update [a99dccb...5527a50](https://codecov.io/gh/hyperledger/iroha/pull/735?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-03 23:57:26,2017-12-04 09:24:47
https://api.github.com/repos/hyperledger/iroha/issues/734,https://api.github.com/repos/hyperledger/iroha/issues/comments/348718604,https://github.com/hyperledger/iroha/pull/734#issuecomment-348718604,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/734?src=pr&el=h1) Report
> Merging [#734](https://codecov.io/gh/hyperledger/iroha/pull/734?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/4f5bd3de1637edb7d59b548f059e927ade8122af?src=pr&el=desc) will **increase** coverage by `0.15%`.
> The diff coverage is `29.41%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/734/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/734?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #734      +/-   ##
========================================================
+ Coverage                 41.36%   41.51%   +0.15%     
========================================================
  Files                       392      393       +1     
  Lines                     13159    13178      +19     
  Branches                   7076     7090      +14     
========================================================
+ Hits                       5443     5471      +28     
+ Misses                     1397     1367      -30     
- Partials                   6319     6340      +21
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/734?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/interfaces/hashable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvaGFzaGFibGUuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [shared\_model/interfaces/primitive.hpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcHJpbWl0aXZlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...red\_model/backend/protobuf/queries/proto\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19xdWVyeS5ocHA=) | `26.66% <0%> (ø)` | :arrow_up: |
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `12.12% <0%> (-2.7%)` | :arrow_down: |
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `36.84% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvc2lnbmFibGUuaHBw) | `25% <100%> (+25%)` | :arrow_up: |
| [shared\_model/builders/protobuf/unsigned\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Vuc2lnbmVkX3Byb3RvLmhwcA==) | `27.27% <27.27%> (ø)` | |
| [shared\_model/backend/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb24uaHBw) | `37.83% <37.5%> (+23.55%)` | :arrow_up: |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `95.65% <75%> (ø)` | :arrow_up: |
| [...ared\_model/interfaces/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| ... and [7 more](https://codecov.io/gh/hyperledger/iroha/pull/734/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/734?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/734?src=pr&el=footer). Last update [4f5bd3d...5a76ff9](https://codecov.io/gh/hyperledger/iroha/pull/734?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-02 20:40:40,2017-12-06 13:03:22
https://api.github.com/repos/hyperledger/iroha/issues/734,https://api.github.com/repos/hyperledger/iroha/issues/comments/348721938,https://github.com/hyperledger/iroha/pull/734#issuecomment-348721938,l4l,Works fine for python2. But there's a errors with 3rd version :(,2017-12-02 21:36:35,2017-12-02 21:36:35
https://api.github.com/repos/hyperledger/iroha/issues/733,https://api.github.com/repos/hyperledger/iroha/issues/comments/348603622,https://github.com/hyperledger/iroha/pull/733#issuecomment-348603622,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/733?src=pr&el=h1) Report
> Merging [#733](https://codecov.io/gh/hyperledger/iroha/pull/733?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/9175e1fcc0d87fb8e61ce3a91d463e6b56841753?src=pr&el=desc) will **increase** coverage by `0.11%`.
> The diff coverage is `65.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/733/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/733?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #733      +/-   ##
========================================================
+ Coverage                 42.43%   42.55%   +0.11%     
========================================================
  Files                       346      349       +3     
  Lines                     12579    12626      +47     
  Branches                   6855     6867      +12     
========================================================
+ Hits                       5338     5373      +35     
  Misses                     1019     1019              
- Partials                   6222     6234      +12
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/733?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/builders/protobuf/helpers.hpp](https://codecov.io/gh/hyperledger/iroha/pull/733/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL2hlbHBlcnMuaHBw) | `10% <10%> (ø)` | |
| [shared\_model/builders/protobuf/queries.hpp](https://codecov.io/gh/hyperledger/iroha/pull/733/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3F1ZXJpZXMuaHBw) | `100% <100%> (ø)` | |
| [...\_model/backend\_proto/shared\_proto\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/733/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3F1ZXJpZXNfdGVzdC5jcHA=) | `22.22% <22.22%> (ø)` | |
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/733/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `14.81% <50%> (+6.48%)` | :arrow_up: |
| [shared\_model/builders/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/733/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3RyYW5zYWN0aW9uLmhwcA==) | `95.65% <95.65%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/733?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/733?src=pr&el=footer). Last update [9175e1f...37d85e1](https://codecov.io/gh/hyperledger/iroha/pull/733?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-01 20:16:10,2017-12-04 11:44:57
https://api.github.com/repos/hyperledger/iroha/issues/732,https://api.github.com/repos/hyperledger/iroha/issues/comments/348380195,https://github.com/hyperledger/iroha/pull/732#issuecomment-348380195,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/732?src=pr&el=h1) Report
> Merging [#732](https://codecov.io/gh/hyperledger/iroha/pull/732?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/af991d61275cb9dc445ad5f588b9adc2940ac817?src=pr&el=desc) will **decrease** coverage by `0.02%`.
> The diff coverage is `7.22%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/732/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/732?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #732      +/-   ##
===========================================
- Coverage    42.54%   42.52%   -0.03%     
===========================================
  Files          309      309              
  Lines        12778    12789      +11     
  Branches      7146     7155       +9     
===========================================
+ Hits          5436     5438       +2     
  Misses         709      709              
- Partials      6633     6642       +9
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/732?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.51% <ø> (+0.01%)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `16.03% <ø> (+0.18%)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfY29tbWFuZC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Blcm1pc3Npb25zLmhwcA==) | `15.78% <0%> (-0.43%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `27.32% <0%> (-2.24%)` | :arrow_down: |
| [irohad/model/impl/model\_operators.cpp](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvbW9kZWxfb3BlcmF0b3JzLmNwcA==) | `39.39% <0%> (-0.61%)` | :arrow_down: |
| ... and [10 more](https://codecov.io/gh/hyperledger/iroha/pull/732/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/732?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/732?src=pr&el=footer). Last update [af991d6...4b8c9be](https://codecov.io/gh/hyperledger/iroha/pull/732?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-12-01 02:03:30,2017-12-08 02:03:03
https://api.github.com/repos/hyperledger/iroha/issues/732,https://api.github.com/repos/hyperledger/iroha/issues/comments/350150638,https://github.com/hyperledger/iroha/pull/732#issuecomment-350150638,sorabot,"SonarQube analysis reported 122 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 44 minor
* ![INFO][INFO] 77 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_command_factory.cpp#L509](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/model/converters/impl/pb_command_factory.cpp#L509): The Cyclomatic Complexity of this function is 15 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [postgres_wsv_command.cpp#L36](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/ametsuchi/impl/postgres_wsv_command.cpp#L36): Define a constant instead of duplicating this literal false 17 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L72](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L72): Define a constant instead of duplicating this literal ""role_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L122](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L122): Define a constant instead of duplicating this literal ""Account {} not found"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L180](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L180): Define a constant instead of duplicating this literal ""public_key"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L47](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/model/converters/impl/json_command_factory.cpp#L47): Define a constant instead of duplicating this literal ""value"" 5 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L62](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/model/converters/impl/json_command_factory.cpp#L62): Define a constant instead of duplicating this literal ""precision"" 5 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L70](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/model/converters/impl/json_command_factory.cpp#L70): Variable 'serializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_command_factory.cpp#L94](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/model/converters/impl/json_command_factory.cpp#L94): Define a constant instead of duplicating this literal ""AddAssetQuantity"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L96](https://github.com/hyperledger/iroha/blob/4b8c9bea3f986ecaff064560a298b0d328335dbe/irohad/model/converters/impl/json_command_factory.cpp#L96): Define a constant instead of duplicating this literal ""AddPeer"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-08 02:02:25,2017-12-08 02:02:25
https://api.github.com/repos/hyperledger/iroha/issues/731,https://api.github.com/repos/hyperledger/iroha/issues/comments/352511146,https://github.com/hyperledger/iroha/issues/731#issuecomment-352511146,motxx,Condition variable in `PeerCommunicationService` is used and it can be closed if the PR reviewed.,2017-12-18 18:10:32,2017-12-18 18:10:32
https://api.github.com/repos/hyperledger/iroha/issues/731,https://api.github.com/repos/hyperledger/iroha/issues/comments/353932043,https://github.com/hyperledger/iroha/issues/731#issuecomment-353932043,neewy,"PR was reviewed, @motxx ?",2017-12-26 07:32:41,2017-12-26 07:32:41
https://api.github.com/repos/hyperledger/iroha/issues/730,https://api.github.com/repos/hyperledger/iroha/issues/comments/347915385,https://github.com/hyperledger/iroha/pull/730#issuecomment-347915385,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/730?src=pr&el=h1) Report
> Merging [#730](https://codecov.io/gh/hyperledger/iroha/pull/730?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/e0b33c232e87acbd7c91556e7497f8a7abdc3287?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/730/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/730?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #730      +/-   ##
========================================================
- Coverage                 41.49%   41.49%   -0.01%     
========================================================
  Files                       395      395              
  Lines                     13343    13341       -2     
  Branches                   7185     7184       -1     
========================================================
- Hits                       5537     5536       -1     
  Misses                     1420     1420              
+ Partials                   6386     6385       -1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/730?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...kend/protobuf/queries/proto\_get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/730/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfYWNjb3VudF9hc3NldHMuaHBw) | `30% <0%> (-3.34%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/730?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/730?src=pr&el=footer). Last update [e0b33c2...9f98590](https://codecov.io/gh/hyperledger/iroha/pull/730?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-29 16:27:22,2017-12-08 08:16:59
https://api.github.com/repos/hyperledger/iroha/issues/729,https://api.github.com/repos/hyperledger/iroha/issues/comments/348057674,https://github.com/hyperledger/iroha/issues/729#issuecomment-348057674,neewy,Good suggestion. It seems to be important in order to lower the grade of entropy in the project. As soon as we agree on release plan -- I will assign a milestone for this issue.,2017-11-30 01:54:20,2017-11-30 01:54:20
https://api.github.com/repos/hyperledger/iroha/issues/729,https://api.github.com/repos/hyperledger/iroha/issues/comments/367533212,https://github.com/hyperledger/iroha/issues/729#issuecomment-367533212,neewy,This should be performed as part of optimisations for the upcoming release,2018-02-22 01:08:52,2018-02-22 01:08:52
https://api.github.com/repos/hyperledger/iroha/issues/729,https://api.github.com/repos/hyperledger/iroha/issues/comments/395948879,https://github.com/hyperledger/iroha/issues/729#issuecomment-395948879,l4l,"I believe most of it is resolved via shared model, consider opening a new issue if something is missed",2018-06-09 07:46:21,2018-06-09 07:46:21
https://api.github.com/repos/hyperledger/iroha/issues/728,https://api.github.com/repos/hyperledger/iroha/issues/comments/347789824,https://github.com/hyperledger/iroha/pull/728#issuecomment-347789824,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=h1) Report
> Merging [#728](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/17eb2a108f891f67367d594df107982f0e3df17d?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `15%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/728/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #728      +/-   ##
========================================================
- Coverage                 43.04%   43.02%   -0.02%     
========================================================
  Files                       327      327              
  Lines                     12293    12294       +1     
  Branches                   6705     6709       +4     
========================================================
- Hits                       5291     5289       -2     
+ Misses                      883      882       -1     
- Partials                   6119     6123       +4
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `10.45% <17.85%> (-0.04%)` | :arrow_down: |
| [irohad/torii/impl/query\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvcXVlcnlfc2VydmljZS5jcHA=) | `15.78% <8.33%> (-10.53%)` | :arrow_down: |
| [shared\_model/interfaces/polymorphic\_wrapper.hpp](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcG9seW1vcnBoaWNfd3JhcHBlci5ocHA=) | `72.72% <0%> (ø)` | :arrow_up: |
| [shared\_model/utils/variant\_deserializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3ZhcmlhbnRfZGVzZXJpYWxpemVyLmhwcA==) | `37.5% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=footer). Last update [17eb2a1...adcc186](https://codecov.io/gh/hyperledger/iroha/pull/728?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-29 08:38:57,2017-11-29 13:42:19
https://api.github.com/repos/hyperledger/iroha/issues/727,https://api.github.com/repos/hyperledger/iroha/issues/comments/347523382,https://github.com/hyperledger/iroha/pull/727#issuecomment-347523382,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/727?src=pr&el=h1) Report
> Merging [#727](https://codecov.io/gh/hyperledger/iroha/pull/727?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/f624783484353ff1c8cc19e7dc4e14359d49443b?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `83.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/727/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/727?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #727   +/-   ##
=====================================================
  Coverage                 43.04%   43.04%           
=====================================================
  Files                       327      327           
  Lines                     12293    12293           
  Branches                   6705     6705           
=====================================================
  Hits                       5291     5291           
  Misses                      883      883           
  Partials                   6119     6119
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/727?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/utils/variant\_deserializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/727?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3ZhcmlhbnRfZGVzZXJpYWxpemVyLmhwcA==) | `37.5% <0%> (ø)` | :arrow_up: |
| [shared\_model/interfaces/polymorphic\_wrapper.hpp](https://codecov.io/gh/hyperledger/iroha/pull/727?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcG9seW1vcnBoaWNfd3JhcHBlci5ocHA=) | `72.72% <100%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/727?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/727?src=pr&el=footer). Last update [f624783...8f40a1f](https://codecov.io/gh/hyperledger/iroha/pull/727?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-28 13:29:13,2017-11-28 13:56:44
https://api.github.com/repos/hyperledger/iroha/issues/725,https://api.github.com/repos/hyperledger/iroha/issues/comments/347599379,https://github.com/hyperledger/iroha/pull/725#issuecomment-347599379,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=h1) Report
> Merging [#725](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/17eb2a108f891f67367d594df107982f0e3df17d?src=pr&el=desc) will **decrease** coverage by `0.41%`.
> The diff coverage is `29.32%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/725/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #725      +/-   ##
========================================================
- Coverage                 43.04%   42.62%   -0.42%     
========================================================
  Files                       327      336       +9     
  Lines                     12293    12497     +204     
  Branches                   6705     6798      +93     
========================================================
+ Hits                       5291     5327      +36     
- Misses                      883      997     +114     
- Partials                   6119     6173      +54
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/interfaces/signable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvc2lnbmFibGUuaHBw) | `0% <ø> (ø)` | |
| [shared\_model/interfaces/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb24uaHBw) | `0% <ø> (ø)` | |
| [...odel/backend/protobuf/common\_objects/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvc2lnbmF0dXJlLmhwcA==) | `0% <0%> (ø)` | |
| [...end/protobuf/commands/proto\_add\_asset\_quantity.hpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fYWRkX2Fzc2V0X3F1YW50aXR5LmhwcA==) | `21.42% <100%> (+7.14%)` | :arrow_up: |
| [test/module/shared\_model/reference\_holder\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL3JlZmVyZW5jZV9ob2xkZXJfdGVzdC5jcHA=) | `14.28% <14.28%> (ø)` | |
| [shared\_model/backend/protobuf/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb24uaHBw) | `17.94% <17.94%> (ø)` | |
| [shared\_model/utils/lazy\_initializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL2xhenlfaW5pdGlhbGl6ZXIuaHBw) | `70.58% <50%> (-11.23%)` | :arrow_down: |
| [...el/builders/protobuf/proto\_transaction\_builder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3Byb3RvX3RyYW5zYWN0aW9uX2J1aWxkZXIuaHBw) | `53.57% <53.57%> (ø)` | |
| [shared\_model/utils/reference\_holder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3JlZmVyZW5jZV9ob2xkZXIuaHBw) | `73.33% <75%> (-1.67%)` | :arrow_down: |
| [...el/backend\_proto/shared\_proto\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3RyYW5zYWN0aW9uX3Rlc3QuY3Bw) | `8.33% <8.33%> (ø)` | |
| ... and [11 more](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=footer). Last update [17eb2a1...7db180b](https://codecov.io/gh/hyperledger/iroha/pull/725?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-28 17:28:00,2017-11-29 13:40:18
https://api.github.com/repos/hyperledger/iroha/issues/724,https://api.github.com/repos/hyperledger/iroha/issues/comments/348057862,https://github.com/hyperledger/iroha/issues/724#issuecomment-348057862,neewy,It seems to be a bug definitely. I will assign a milestone for correction soon.,2017-11-30 01:55:20,2017-11-30 01:55:20
https://api.github.com/repos/hyperledger/iroha/issues/724,https://api.github.com/repos/hyperledger/iroha/issues/comments/387597285,https://github.com/hyperledger/iroha/issues/724#issuecomment-387597285,sjashwin,"Can I complete this?
",2018-05-09 02:03:24,2018-05-09 02:03:24
https://api.github.com/repos/hyperledger/iroha/issues/724,https://api.github.com/repos/hyperledger/iroha/issues/comments/453970432,https://github.com/hyperledger/iroha/issues/724#issuecomment-453970432,LiraLemur,"The issue with PRs seems outdated and can be closed
Hopefully, CLI will be fixed soon in general",2019-01-14 11:12:59,2019-01-14 11:12:59
https://api.github.com/repos/hyperledger/iroha/issues/723,https://api.github.com/repos/hyperledger/iroha/issues/comments/347234281,https://github.com/hyperledger/iroha/pull/723#issuecomment-347234281,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=h1) Report
> Merging [#723](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=desc) into [feature/shared_model-proto-txresp](https://codecov.io/gh/hyperledger/iroha/commit/480acaf193561cf3934b4cfc8fc11df9f2b25753?src=pr&el=desc) will **increase** coverage by `0.02%`.
> The diff coverage is `39.68%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/723/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=tree)

```diff
@@                          Coverage Diff                          @@
##           feature/shared_model-proto-txresp     #723      +/-   ##
=====================================================================
+ Coverage                              43.32%   43.34%   +0.02%     
=====================================================================
  Files                                    317      317              
  Lines                                  12217    12233      +16     
  Branches                                6667     6683      +16     
=====================================================================
+ Hits                                    5293     5303      +10     
+ Misses                                   806      791      -15     
- Partials                                6118     6139      +21
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `26.7% <25%> (-0.46%)` | :arrow_down: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `42.22% <45.45%> (-6.76%)` | :arrow_down: |
| [...otobuf/transaction\_responses/proto\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3Byb3RvX3R4X3Jlc3BvbnNlLmhwcA==) | `66.66% <66.66%> (+12.12%)` | :arrow_up: |
| [...el/backend\_proto/shared\_proto\_tx\_response\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3R4X3Jlc3BvbnNlX3Rlc3QuY3Bw) | `45.45% <66.66%> (+2.12%)` | :arrow_up: |
| [shared\_model/utils/reference\_holder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3JlZmVyZW5jZV9ob2xkZXIuaHBw) | `66.66% <0%> (+2.38%)` | :arrow_up: |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `16.66% <0%> (+16.66%)` | :arrow_up: |
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `23.52% <0%> (+23.52%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=footer). Last update [480acaf...9611e6a](https://codecov.io/gh/hyperledger/iroha/pull/723?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-27 16:18:43,2017-11-28 08:56:39
https://api.github.com/repos/hyperledger/iroha/issues/722,https://api.github.com/repos/hyperledger/iroha/issues/comments/347505438,https://github.com/hyperledger/iroha/pull/722#issuecomment-347505438,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/722?src=pr&el=h1) Report
> Merging [#722](https://codecov.io/gh/hyperledger/iroha/pull/722?src=pr&el=desc) into [trunk/get-transactions-pager-queries](https://codecov.io/gh/hyperledger/iroha/commit/1571e10fdbad0d8f3c4d4657fc0c08a34ee2f70b?src=pr&el=desc) will **decrease** coverage by `0.08%`.
> The diff coverage is `24.77%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/722/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/722?src=pr&el=tree)

```diff
@@                           Coverage Diff                            @@
##           trunk/get-transactions-pager-queries     #722      +/-   ##
========================================================================
- Coverage                                 30.92%   30.84%   -0.09%     
========================================================================
  Files                                       460      464       +4     
  Lines                                     13622    13800     +178     
  Branches                                   8757     8873     +116     
========================================================================
+ Hits                                       4213     4257      +44     
- Misses                                     1493     1520      +27     
- Partials                                   7916     8023     +107
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/722?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/builders/protobuf/queries.hpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2J1aWxkZXJzL3Byb3RvYnVmL3F1ZXJpZXMuaHBw) | `95% <ø> (ø)` | :arrow_up: |
| [irohad/model/registration/query\_registration.hpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3JlZ2lzdHJhdGlvbi9xdWVyeV9yZWdpc3RyYXRpb24uaHBw) | `16.66% <ø> (ø)` | :arrow_up: |
| [irohad/model/queries/get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X3RyYW5zYWN0aW9ucy5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/query\_execution.hpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJ5X2V4ZWN1dGlvbi5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `8.43% <0%> (-0.43%)` | :arrow_down: |
| [...rohad/model/converters/json\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5X3Rlc3QuY3Bw) | `9.49% <0%> (-0.51%)` | :arrow_down: |
| [...erfaces/queries/get\_account\_asset\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvcXVlcmllcy9nZXRfYWNjb3VudF9hc3NldF90cmFuc2FjdGlvbnMuaHBw) | `0% <0%> (ø)` | :arrow_up: |
| [...ule/irohad/ametsuchi/block\_query\_transfer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90cmFuc2Zlcl90ZXN0LmNwcA==) | `33.33% <0%> (-3.99%)` | :arrow_down: |
| [...f/queries/proto\_get\_account\_asset\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvcXVlcmllcy9wcm90b19nZXRfYWNjb3VudF9hc3NldF90cmFuc2FjdGlvbnMuaHBw) | `16.66% <0%> (-13.34%)` | :arrow_down: |
| ... and [17 more](https://codecov.io/gh/hyperledger/iroha/pull/722/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/722?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/722?src=pr&el=footer). Last update [1571e10...cfa56a2](https://codecov.io/gh/hyperledger/iroha/pull/722?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-28 12:16:14,2018-01-01 22:59:59
https://api.github.com/repos/hyperledger/iroha/issues/722,https://api.github.com/repos/hyperledger/iroha/issues/comments/348193691,https://github.com/hyperledger/iroha/pull/722#issuecomment-348193691,l4l,It would be nice also if you fix issues mentioned by sorabot for ` redis_block_query.hpp`,2017-11-30 13:52:40,2017-11-30 13:52:40
https://api.github.com/repos/hyperledger/iroha/issues/722,https://api.github.com/repos/hyperledger/iroha/issues/comments/348906516,https://github.com/hyperledger/iroha/pull/722#issuecomment-348906516,motxx,"It looks strange that ""Unused private function""s reported by sorabot are all used.",2017-12-04 09:28:48,2017-12-07 00:17:42
https://api.github.com/repos/hyperledger/iroha/issues/722,https://api.github.com/repos/hyperledger/iroha/issues/comments/349809642,https://github.com/hyperledger/iroha/pull/722#issuecomment-349809642,motxx,"I made long commit message short.
Can I merge this?",2017-12-06 23:28:31,2017-12-07 00:17:24
https://api.github.com/repos/hyperledger/iroha/issues/722,https://api.github.com/repos/hyperledger/iroha/issues/comments/350049116,https://github.com/hyperledger/iroha/pull/722#issuecomment-350049116,l4l,"> It looks strange that ""Unused private function""s reported by sorabot are all used.

Well, it's not ideal. Nvm

> I made long commit message short.

👍 

> Can I merge this?

There's still 1 review left",2017-12-07 18:10:46,2017-12-07 18:10:46
https://api.github.com/repos/hyperledger/iroha/issues/722,https://api.github.com/repos/hyperledger/iroha/issues/comments/353410264,https://github.com/hyperledger/iroha/pull/722#issuecomment-353410264,motxx,This can be reviewed again. ping. @muratovv ,2017-12-21 17:32:10,2017-12-21 17:33:00
https://api.github.com/repos/hyperledger/iroha/issues/722,https://api.github.com/repos/hyperledger/iroha/issues/comments/353902212,https://github.com/hyperledger/iroha/pull/722#issuecomment-353902212,muratovv,"Pls, fix a build on linux and mac-os.",2017-12-26 01:41:10,2017-12-26 01:41:10
https://api.github.com/repos/hyperledger/iroha/issues/722,https://api.github.com/repos/hyperledger/iroha/issues/comments/353926137,https://github.com/hyperledger/iroha/pull/722#issuecomment-353926137,neewy,Just rebuild without cache after you rebase onto develop,2017-12-26 06:36:29,2017-12-26 06:36:29
https://api.github.com/repos/hyperledger/iroha/issues/722,https://api.github.com/repos/hyperledger/iroha/issues/comments/354369678,https://github.com/hyperledger/iroha/pull/722#issuecomment-354369678,sorabot,"SonarQube analysis reported 100 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 45 minor
* ![INFO][INFO] 54 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L59](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/model/converters/impl/pb_query_factory.cpp#L59): The Cyclomatic Complexity of this function is 12 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [redis_block_query.cpp#L75](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/ametsuchi/impl/redis_block_query.cpp#L75): The function 'getBlockIds' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [redis_block_query.cpp#L106](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/ametsuchi/impl/redis_block_query.cpp#L106): The function 'callbackToLrange' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L65](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/ametsuchi/impl/redis_block_query.hpp#L65): Unused private function: 'RedisBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L72](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/ametsuchi/impl/redis_block_query.hpp#L72): Unused private function: 'RedisBlockQuery::reverseObservable' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L80](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/ametsuchi/impl/redis_block_query.hpp#L80): Unused private function: 'RedisBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L110](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/ametsuchi/impl/redis_block_query.hpp#L110): Unused private function: 'RedisBlockQuery::hasAccountAssetRelatedCommand' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L122](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/ametsuchi/impl/redis_block_query.hpp#L122): Unused private function: 'RedisBlockQuery::callbackToLrange' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [json_query_factory.cpp#L38](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/model/converters/impl/json_query_factory.cpp#L38): Variable 'deserializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_query_factory.cpp#L39](https://github.com/hyperledger/iroha/blob/cfa56a2fbd83ebe2264d22733bac6b615e81aa02/irohad/model/converters/impl/json_query_factory.cpp#L39): Define a constant instead of duplicating this literal ""GetAccount"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-28 22:45:48,2017-12-28 22:45:48
https://api.github.com/repos/hyperledger/iroha/issues/721,https://api.github.com/repos/hyperledger/iroha/issues/comments/347097360,https://github.com/hyperledger/iroha/pull/721#issuecomment-347097360,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/721?src=pr&el=h1) Report
> Merging [#721](https://codecov.io/gh/hyperledger/iroha/pull/721?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/12d58e2be0931c09b7bed865971b978856ba9b11?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/721/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/721?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #721   +/-   ##
=====================================================
  Coverage                 43.49%   43.49%           
=====================================================
  Files                       298      298           
  Lines                     12022    12022           
  Branches                   6599     6599           
=====================================================
  Hits                       5229     5229           
  Misses                      721      721           
  Partials                   6072     6072
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/721?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/721?src=pr&el=footer). Last update [12d58e2...7de3529](https://codecov.io/gh/hyperledger/iroha/pull/721?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-27 07:15:50,2017-11-27 08:16:36
https://api.github.com/repos/hyperledger/iroha/issues/720,https://api.github.com/repos/hyperledger/iroha/issues/comments/346995758,https://github.com/hyperledger/iroha/pull/720#issuecomment-346995758,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=h1) Report
> Merging [#720](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/610ad89ed60c1fca23f35e5ce833630b21b87c2f?src=pr&el=desc) will **decrease** coverage by `0.41%`.
> The diff coverage is `36.84%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/720/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #720      +/-   ##
========================================================
- Coverage                 43.49%   43.08%   -0.42%     
========================================================
  Files                       298      316      +18     
  Lines                     12022    12211     +189     
  Branches                   6599     6662      +63     
========================================================
+ Hits                       5229     5261      +32     
- Misses                      721      860     +139     
- Partials                   6072     6090      +18
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...d\_model/backend/protobuf/common\_objects/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvYW1vdW50LmhwcA==) | `0% <0%> (ø)` | |
| [...end/protobuf/commands/proto\_add\_asset\_quantity.hpp](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fYWRkX2Fzc2V0X3F1YW50aXR5LmhwcA==) | `14.28% <28.57%> (ø)` | |
| [...model/backend\_proto/shared\_proto\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX2NvbW1hbmRzX3Rlc3QuY3Bw) | `36.36% <36.36%> (ø)` | |
| [shared\_model/utils/variant\_deserializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3ZhcmlhbnRfZGVzZXJpYWxpemVyLmhwcA==) | `37.5% <50%> (ø)` | |
| [shared\_model/utils/lazy\_initializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL2xhenlfaW5pdGlhbGl6ZXIuaHBw) | `81.81% <66.66%> (+1.81%)` | :arrow_up: |
| [shared\_model/utils/reference\_holder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3JlZmVyZW5jZV9ob2xkZXIuaHBw) | `75% <66.66%> (ø)` | |
| [...\_model/backend/protobuf/commands/proto\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY29tbWFuZC5ocHA=) | `58.33% <85.71%> (ø)` | |
| [shared\_model/cryptography/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9oYXNoLmhwcA==) | `0% <0%> (ø)` | |
| ... and [16 more](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=footer). Last update [610ad89...4cce8e9](https://codecov.io/gh/hyperledger/iroha/pull/720?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-26 09:42:38,2017-11-27 11:57:20
https://api.github.com/repos/hyperledger/iroha/issues/719,https://api.github.com/repos/hyperledger/iroha/issues/comments/346944522,https://github.com/hyperledger/iroha/pull/719#issuecomment-346944522,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/719?src=pr&el=h1) Report
> Merging [#719](https://codecov.io/gh/hyperledger/iroha/pull/719?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/a38d941dfec8df633a600c3cf3e119c0fa373f21?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/719/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/719?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #719   +/-   ##
========================================
  Coverage    42.91%   42.91%           
========================================
  Files          307      307           
  Lines        12478    12478           
  Branches      6927     6927           
========================================
  Hits          5355     5355           
  Misses         704      704           
  Partials      6419     6419
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/719?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/719?src=pr&el=footer). Last update [a38d941...9c6ceb9](https://codecov.io/gh/hyperledger/iroha/pull/719?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-25 14:43:03,2017-11-26 14:43:01
https://api.github.com/repos/hyperledger/iroha/issues/719,https://api.github.com/repos/hyperledger/iroha/issues/comments/346947905,https://github.com/hyperledger/iroha/pull/719#issuecomment-346947905,l4l,Builds fine for me :+1: ,2017-11-25 15:39:04,2017-11-25 15:39:10
https://api.github.com/repos/hyperledger/iroha/issues/718,https://api.github.com/repos/hyperledger/iroha/issues/comments/346939492,https://github.com/hyperledger/iroha/pull/718#issuecomment-346939492,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/get-transactions-pager-queries@9da89ad`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `23.18%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/718/graphs/tree.svg?src=pr&token=VEvywEmaef&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree)

```diff
@@                           Coverage Diff                           @@
##             trunk/get-transactions-pager-queries     #718   +/-   ##
=======================================================================
  Coverage                                        ?   43.08%           
=======================================================================
  Files                                           ?      310           
  Lines                                           ?    12415           
  Branches                                        ?     6852           
=======================================================================
  Hits                                            ?     5349           
  Misses                                          ?      750           
  Partials                                        ?     6316
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/generator/generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-bGlicy9nZW5lcmF0b3IvZ2VuZXJhdG9yLmhwcA==) | `80% <ø> (ø)` | |
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `50% <ø> (ø)` | |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | |
| [irohad/ametsuchi/impl/redis\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | |
| [irohad/model/queries/get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X3RyYW5zYWN0aW9ucy5ocHA=) | `0% <ø> (ø)` | |
| [irohad/model/query\_execution.hpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJ5X2V4ZWN1dGlvbi5ocHA=) | `100% <ø> (ø)` | |
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `8.33% <0%> (ø)` | |
| [...rohad/model/converters/json\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5X3Rlc3QuY3Bw) | `5.26% <0%> (ø)` | |
| [irohad/model/queries/get\_account\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnRfdHJhbnNhY3Rpb25zLmhwcA==) | `0% <0%> (ø)` | |
| [irohad/model/generators/impl/query\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9xdWVyeV9nZW5lcmF0b3IuY3Bw) | `56.66% <100%> (ø)` | |
| ... and [12 more](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=footer). Last update [9da89ad...e62511c](https://codecov.io/gh/hyperledger/iroha/pull/718?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-25 13:06:05,2017-11-25 16:12:09
https://api.github.com/repos/hyperledger/iroha/issues/718,https://api.github.com/repos/hyperledger/iroha/issues/comments/346949883,https://github.com/hyperledger/iroha/pull/718#issuecomment-346949883,sorabot,"SonarQube analysis reported 79 issues
* ![BLOCKER][BLOCKER] 1 blocker
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 32 minor
* ![INFO][INFO] 45 info

#### Top 10 issues

1. ![BLOCKER][BLOCKER] [generator.hpp#L19](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/libs/generator/generator.hpp#L19): Reserved name used for macro (contains two consecutive underscores) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AReservedNames)
1. ![MAJOR][MAJOR] [interactive_query_cli.cpp#L121](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/iroha-cli/interactive/impl/interactive_query_cli.cpp#L121): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L96](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/iroha-cli/interactive/impl/interactive_query_cli.cpp#L96): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L113](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/iroha-cli/interactive/impl/interactive_query_cli.cpp#L113): Define a constant instead of duplicating this literal ""Choose query: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L208](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/iroha-cli/interactive/impl/interactive_query_cli.cpp#L208): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [redis_block_query.cpp#L156](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/irohad/ametsuchi/impl/redis_block_query.cpp#L156): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [redis_block_query.hpp#L63](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/irohad/ametsuchi/impl/redis_block_query.hpp#L63): Unused private function: 'RedisBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L70](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/irohad/ametsuchi/impl/redis_block_query.hpp#L70): Unused private function: 'RedisBlockQuery::reverseObservable' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L78](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/irohad/ametsuchi/impl/redis_block_query.hpp#L78): Unused private function: 'RedisBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L88](https://github.com/hyperledger/iroha/blob/e62511c8e748d4db3e8cfffa4884e8dc56fd7d35/irohad/ametsuchi/impl/redis_block_query.hpp#L88): Unused private function: 'RedisBlockQuery::callbackToLrange' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-25 16:11:49,2017-11-25 16:11:49
https://api.github.com/repos/hyperledger/iroha/issues/718,https://api.github.com/repos/hyperledger/iroha/issues/comments/346968876,https://github.com/hyperledger/iroha/pull/718#issuecomment-346968876,motxx,"Close this PR and merge with https://github.com/hyperledger/iroha/pull/717, as mentioned in https://github.com/hyperledger/iroha/pull/717#issuecomment-346952513",2017-11-25 21:58:55,2017-11-25 21:58:55
https://api.github.com/repos/hyperledger/iroha/issues/717,https://api.github.com/repos/hyperledger/iroha/issues/comments/346946090,https://github.com/hyperledger/iroha/pull/717#issuecomment-346946090,motxx,"Same implementations parts of https://github.com/hyperledger/iroha/pull/650
 ",2017-11-25 15:08:35,2017-11-25 15:08:59
https://api.github.com/repos/hyperledger/iroha/issues/717,https://api.github.com/repos/hyperledger/iroha/issues/comments/346946981,https://github.com/hyperledger/iroha/pull/717#issuecomment-346946981,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/717?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`trunk/get-transactions-pager-queries@8c44421`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `23.07%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/717/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/717?src=pr&el=tree)

```diff
@@                           Coverage Diff                           @@
##             trunk/get-transactions-pager-queries     #717   +/-   ##
=======================================================================
  Coverage                                        ?   43.05%           
=======================================================================
  Files                                           ?      310           
  Lines                                           ?    12440           
  Branches                                        ?     6870           
=======================================================================
  Hits                                            ?     5356           
  Misses                                          ?      750           
  Partials                                        ?     6334
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/717?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/queries/get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X3RyYW5zYWN0aW9ucy5ocHA=) | `0% <ø> (ø)` | |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | |
| [irohad/ametsuchi/impl/redis\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | |
| [irohad/model/queries/pager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcGFnZXIuaHBw) | `66.66% <ø> (ø)` | |
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `50% <ø> (ø)` | |
| [irohad/model/query\_execution.hpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJ5X2V4ZWN1dGlvbi5ocHA=) | `100% <ø> (ø)` | |
| [...rohad/model/converters/json\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5X3Rlc3QuY3Bw) | `7.96% <0%> (ø)` | |
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `36.8% <0%> (ø)` | |
| [libs/crypto/hash.cpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-bGlicy9jcnlwdG8vaGFzaC5jcHA=) | `64.86% <0%> (ø)` | |
| [irohad/model/converters/impl/pb\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9ibG9ja19mYWN0b3J5LmNwcA==) | `43.24% <0%> (ø)` | |
| ... and [15 more](https://codecov.io/gh/hyperledger/iroha/pull/717/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/717?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/717?src=pr&el=footer). Last update [8c44421...cd00ffd](https://codecov.io/gh/hyperledger/iroha/pull/717?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-25 15:23:59,2017-12-14 07:29:00
https://api.github.com/repos/hyperledger/iroha/issues/717,https://api.github.com/repos/hyperledger/iroha/issues/comments/346952513,https://github.com/hyperledger/iroha/pull/717#issuecomment-346952513,l4l,"Ah, tests are in #718, i think you can merge these prs in one
or merge this one and recreate the mentioned",2017-11-25 16:56:25,2017-11-25 16:56:57
https://api.github.com/repos/hyperledger/iroha/issues/717,https://api.github.com/repos/hyperledger/iroha/issues/comments/346969169,https://github.com/hyperledger/iroha/pull/717#issuecomment-346969169,motxx,"`RedisBlockQuery::reverseObservable` **itself** doesn't have unit test for now. If Redis implementation uses this, I'll create its test.

And I merged https://github.com/hyperledger/iroha/pull/718 into this branch.",2017-11-25 22:04:06,2017-11-25 23:25:15
https://api.github.com/repos/hyperledger/iroha/issues/717,https://api.github.com/repos/hyperledger/iroha/issues/comments/349594664,https://github.com/hyperledger/iroha/pull/717#issuecomment-349594664,motxx,Sonarqube reports 2 critical issues but fixing this seems out of the task of this PR.,2017-12-06 10:14:04,2017-12-06 10:14:04
https://api.github.com/repos/hyperledger/iroha/issues/717,https://api.github.com/repos/hyperledger/iroha/issues/comments/351627677,https://github.com/hyperledger/iroha/pull/717#issuecomment-351627677,sorabot,"SonarQube analysis reported 73 issues
* ![CRITICAL][CRITICAL] 2 critical
* ![MINOR][MINOR] 27 minor
* ![INFO][INFO] 44 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [interactive_query_cli.cpp#L113](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/iroha-cli/interactive/impl/interactive_query_cli.cpp#L113): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![CRITICAL][CRITICAL] [pb_query_factory.cpp#L54](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/irohad/model/converters/impl/pb_query_factory.cpp#L54): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L88](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/iroha-cli/interactive/impl/interactive_query_cli.cpp#L88): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L105](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/iroha-cli/interactive/impl/interactive_query_cli.cpp#L105): Define a constant instead of duplicating this literal ""Choose query: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [redis_block_query.hpp#L63](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/irohad/ametsuchi/impl/redis_block_query.hpp#L63): Unused private function: 'RedisBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L70](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/irohad/ametsuchi/impl/redis_block_query.hpp#L70): Unused private function: 'RedisBlockQuery::reverseObservable' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L78](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/irohad/ametsuchi/impl/redis_block_query.hpp#L78): Unused private function: 'RedisBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L88](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/irohad/ametsuchi/impl/redis_block_query.hpp#L88): Unused private function: 'RedisBlockQuery::callbackToLrange' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [json_query_factory.cpp#L36](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/irohad/model/converters/impl/json_query_factory.cpp#L36): Variable 'deserializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_query_factory.cpp#L37](https://github.com/hyperledger/iroha/blob/cd00ffd780fb3a771424674cbe651e83626a4f04/irohad/model/converters/impl/json_query_factory.cpp#L37): Define a constant instead of duplicating this literal ""GetAccount"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-12-14 07:12:54,2017-12-14 07:12:54
https://api.github.com/repos/hyperledger/iroha/issues/716,https://api.github.com/repos/hyperledger/iroha/issues/comments/346833688,https://github.com/hyperledger/iroha/pull/716#issuecomment-346833688,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=h1) Report
> Merging [#716](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/f085ffad8ab1f32b22b4b65ca93d62de16670ab2?src=pr&el=desc) will **decrease** coverage by `0.04%`.
> The diff coverage is `62.5%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/716/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #716      +/-   ##
========================================================
- Coverage                 43.08%   43.04%   -0.05%     
========================================================
  Files                       316      327      +11     
  Lines                     12211    12293      +82     
  Branches                   6662     6705      +43     
========================================================
+ Hits                       5261     5291      +30     
- Misses                      860      883      +23     
- Partials                   6090     6119      +29
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/cryptography/seed.hpp](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9zZWVkLmhwcA==) | `16.66% <ø> (ø)` | |
| [shared\_model/interfaces/hashable.hpp](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvaGFzaGFibGUuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [...\_model/cryptography/ed25519\_sha3\_impl/verifier.cpp](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC92ZXJpZmllci5jcHA=) | `25% <ø> (ø)` | |
| [shared\_model/cryptography/keypair.hpp](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9rZXlwYWlyLmhwcA==) | `16.66% <0%> (ø)` | |
| [...l/cryptography/crypto\_provider/crypto\_verifier.hpp](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9jcnlwdG9fcHJvdmlkZXIvY3J5cHRvX3ZlcmlmaWVyLmhwcA==) | `100% <100%> (ø)` | |
| [...del/cryptography/crypto\_provider/crypto\_signer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9jcnlwdG9fcHJvdmlkZXIvY3J5cHRvX3NpZ25lci5ocHA=) | `100% <100%> (ø)` | |
| [...ed\_model/cryptography/ed25519\_sha3\_impl/signer.cpp](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9zaWduZXIuY3Bw) | `42.85% <100%> (ø)` | |
| [test/module/shared\_model/crypto\_usage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NyeXB0b191c2FnZV90ZXN0LmNwcA==) | `33.33% <33.33%> (ø)` | |
| [...cryptography/ed25519\_sha3\_impl/crypto\_provider.cpp](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9jcnlwdG9fcHJvdmlkZXIuY3Bw) | `57.14% <87.5%> (ø)` | |
| ... and [11 more](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=footer). Last update [f085ffa...c269666](https://codecov.io/gh/hyperledger/iroha/pull/716?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-24 13:54:23,2017-11-27 15:04:45
https://api.github.com/repos/hyperledger/iroha/issues/715,https://api.github.com/repos/hyperledger/iroha/issues/comments/346789395,https://github.com/hyperledger/iroha/pull/715#issuecomment-346789395,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/715?src=pr&el=h1) Report
> Merging [#715](https://codecov.io/gh/hyperledger/iroha/pull/715?src=pr&el=desc) into [trunk/get-transactions-pager-queries](https://codecov.io/gh/hyperledger/iroha/commit/19651930fa6851586bfb9f09c3f6f2f3d3a51eaf?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `43.47%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/715/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/715?src=pr&el=tree)

```diff
@@                           Coverage Diff                            @@
##           trunk/get-transactions-pager-queries     #715      +/-   ##
========================================================================
+ Coverage                                 42.91%   42.91%   +<.01%     
========================================================================
  Files                                       307      307              
  Lines                                     12478    12501      +23     
  Branches                                   6927     6940      +13     
========================================================================
+ Hits                                       5355     5365      +10     
  Misses                                      704      704              
- Partials                                   6419     6432      +13
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/715?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/framework/test\_subscriber\_testing.cpp](https://codecov.io/gh/hyperledger/iroha/pull/715?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvdGVzdF9zdWJzY3JpYmVyX3Rlc3RpbmcuY3Bw) | `22.72% <25%> (+1.29%)` | :arrow_up: |
| [test/framework/test\_subscriber.hpp](https://codecov.io/gh/hyperledger/iroha/pull/715?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvdGVzdF9zdWJzY3JpYmVyLmhwcA==) | `65.45% <85.71%> (+2.95%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/715?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/715?src=pr&el=footer). Last update [1965193...67c5fe3](https://codecov.io/gh/hyperledger/iroha/pull/715?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-24 09:59:01,2017-11-25 11:12:27
https://api.github.com/repos/hyperledger/iroha/issues/714,https://api.github.com/repos/hyperledger/iroha/issues/comments/346770188,https://github.com/hyperledger/iroha/pull/714#issuecomment-346770188,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/714?src=pr&el=h1) Report
> Merging [#714](https://codecov.io/gh/hyperledger/iroha/pull/714?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/4e5734a60a7e82426243caa443105d6155460991?src=pr&el=desc) will **decrease** coverage by `0.02%`.
> The diff coverage is `7.14%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/714/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/714?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #714      +/-   ##
===========================================
- Coverage    42.91%   42.89%   -0.03%     
===========================================
  Files          307      308       +1     
  Lines        12478    12491      +13     
  Branches      6927     6940      +13     
===========================================
+ Hits          5355     5358       +3     
+ Misses         704      698       -6     
- Partials      6419     6435      +16
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/714?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/714?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `65.82% <0%> (+2.53%)` | :arrow_up: |
| [...st/module/libs/converter/string\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/714?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jb252ZXJ0ZXIvc3RyaW5nX2NvbnZlcnRlcl90ZXN0LmNwcA==) | `7.69% <7.69%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/714?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/714?src=pr&el=footer). Last update [4e5734a...e689e8e](https://codecov.io/gh/hyperledger/iroha/pull/714?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-24 08:28:49,2017-11-27 08:05:35
https://api.github.com/repos/hyperledger/iroha/issues/714,https://api.github.com/repos/hyperledger/iroha/issues/comments/347105848,https://github.com/hyperledger/iroha/pull/714#issuecomment-347105848,sorabot,"SonarQube analysis reported 51 issues
* ![MINOR][MINOR] 21 minor
* ![INFO][INFO] 30 info

#### Top 10 issues

1. ![MINOR][MINOR] [types.hpp#L57](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L57): Rename class ""blob_t"" to match the regular expression ^[A-Z_][a-zA-Z0-9]+$. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AClassName)
1. ![MINOR][MINOR] [types.hpp#L88](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L88): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [types.hpp#L138](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L138): Extract this magic number '0xff' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [types.hpp#L138](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L138): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [types.hpp#L150](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L150): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [types.hpp#L153](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L153): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [types.hpp#L155](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L155): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [types.hpp#L155](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L155): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [types.hpp#L157](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L157): Extract this magic number '16' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [types.hpp#L303](https://github.com/hyperledger/iroha/blob/e689e8ecf0615a7f94be2244d8600c7e8e34c02a/libs/common/types.hpp#L303): Extract this magic number '224' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-27 08:05:23,2017-11-27 08:05:23
https://api.github.com/repos/hyperledger/iroha/issues/713,https://api.github.com/repos/hyperledger/iroha/issues/comments/346600370,https://github.com/hyperledger/iroha/pull/713#issuecomment-346600370,Warchant,"Is it possible to create a separate cmake target, instead of `SWIG` option?

And then change `include_directories(...)` to `target_include_directories`? ",2017-11-23 12:01:24,2017-11-23 12:01:24
https://api.github.com/repos/hyperledger/iroha/issues/713,https://api.github.com/repos/hyperledger/iroha/issues/comments/346622417,https://github.com/hyperledger/iroha/pull/713#issuecomment-346622417,luckychess,About separate cmake target: SWIG option was introduced to make possible Iroha build without bindings (not every system has everything needed to it like our CI).,2017-11-23 13:46:05,2017-11-23 13:46:05
https://api.github.com/repos/hyperledger/iroha/issues/713,https://api.github.com/repos/hyperledger/iroha/issues/comments/346624104,https://github.com/hyperledger/iroha/pull/713#issuecomment-346624104,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/713?src=pr&el=h1) Report
> Merging [#713](https://codecov.io/gh/hyperledger/iroha/pull/713?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/198c4ae8ec63a490e9127aae3ea8dc535f6e7c1a?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/713/graphs/tree.svg?token=VEvywEmaef&height=150&width=650&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/713?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #713   +/-   ##
=====================================================
  Coverage                 43.49%   43.49%           
=====================================================
  Files                       298      298           
  Lines                     12022    12022           
  Branches                   6599     6599           
=====================================================
  Hits                       5229     5229           
  Misses                      721      721           
  Partials                   6072     6072
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/713?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/713?src=pr&el=footer). Last update [198c4ae...db608d5](https://codecov.io/gh/hyperledger/iroha/pull/713?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-23 13:53:27,2017-11-27 08:41:20
https://api.github.com/repos/hyperledger/iroha/issues/713,https://api.github.com/repos/hyperledger/iroha/issues/comments/346771891,https://github.com/hyperledger/iroha/pull/713#issuecomment-346771891,luckychess,"I agree about tests but we need install Swig and other libs into CI and turn in always on. Do you think all these changes worth it?
Created task https://soramitsu.atlassian.net/browse/IR-627.",2017-11-24 08:37:45,2017-11-24 13:57:15
https://api.github.com/repos/hyperledger/iroha/issues/713,https://api.github.com/repos/hyperledger/iroha/issues/comments/346836793,https://github.com/hyperledger/iroha/pull/713#issuecomment-346836793,luckychess,I think bindings should remain in shared_model because they are related only to shared model and their main function is providing easy access to shared model classes.,2017-11-24 14:10:48,2017-11-24 14:10:48
https://api.github.com/repos/hyperledger/iroha/issues/712,https://api.github.com/repos/hyperledger/iroha/issues/comments/346493336,https://github.com/hyperledger/iroha/pull/712#issuecomment-346493336,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=h1) Report
> Merging [#712](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/17eb2a108f891f67367d594df107982f0e3df17d?src=pr&el=desc) will **decrease** coverage by `0.2%`.
> The diff coverage is `35.78%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/712/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #712      +/-   ##
========================================================
- Coverage                 43.04%   42.83%   -0.21%     
========================================================
  Files                       327      338      +11     
  Lines                     12293    12388      +95     
  Branches                   6705     6761      +56     
========================================================
+ Hits                       5291     5307      +16     
- Misses                      883      919      +36     
- Partials                   6119     6162      +43
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...l/interfaces/transaction\_responses/tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3R4X3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | |
| [shared\_model/utils/reference\_holder.hpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL3JlZmVyZW5jZV9ob2xkZXIuaHBw) | `87.5% <ø> (+12.5%)` | :arrow_up: |
| [.../backend/protobuf/common\_objects/trivial\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvdHJpdmlhbF9wcm90by5ocHA=) | `20% <20%> (ø)` | |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `26.7% <25%> (-0.46%)` | :arrow_down: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `42.22% <45.45%> (-6.76%)` | :arrow_down: |
| [...el/backend\_proto/shared\_proto\_tx\_response\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX3R4X3Jlc3BvbnNlX3Rlc3QuY3Bw) | `6.25% <6.25%> (ø)` | |
| [...otobuf/transaction\_responses/proto\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3Byb3RvX3R4X3Jlc3BvbnNlLmhwcA==) | `64.7% <64.7%> (ø)` | |
| [...nsaction\_responses/stateful\_failed\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3N0YXRlZnVsX2ZhaWxlZF90eF9yZXNwb25zZS5ocHA=) | `0% <0%> (ø)` | |
| [...saction\_responses/stateless\_failed\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3N0YXRlbGVzc19mYWlsZWRfdHhfcmVzcG9uc2UuaHBw) | `0% <0%> (ø)` | |
| [...aces/transaction\_responses/unknown\_tx\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvdHJhbnNhY3Rpb25fcmVzcG9uc2VzL3Vua25vd25fdHhfcmVzcG9uc2UuaHBw) | `0% <0%> (ø)` | |
| ... and [12 more](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=footer). Last update [17eb2a1...60855a8](https://codecov.io/gh/hyperledger/iroha/pull/712?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-22 22:46:34,2017-11-29 14:10:40
https://api.github.com/repos/hyperledger/iroha/issues/712,https://api.github.com/repos/hyperledger/iroha/issues/comments/347871078,https://github.com/hyperledger/iroha/pull/712#issuecomment-347871078,sorabot,"SonarQube analysis reported 3 issues

1. ![BLOCKER][BLOCKER] [command_service.cpp#L74](https://github.com/hyperledger/iroha/blob/60855a864d5fc9312f3bec2973072cdf00f314f2/irohad/torii/impl/command_service.cpp#L74): Rename method ""ToriiAsync"" to match the regular expression ^[a-z][A-Za-z0-9]{2,25}$. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMethodName)
1. ![BLOCKER][BLOCKER] [command_service.cpp#L93](https://github.com/hyperledger/iroha/blob/60855a864d5fc9312f3bec2973072cdf00f314f2/irohad/torii/impl/command_service.cpp#L93): Rename method ""StatusAsync"" to match the regular expression ^[a-z][A-Za-z0-9]{2,25}$. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMethodName)
1. ![CRITICAL][CRITICAL] [command_service.cpp#L28](https://github.com/hyperledger/iroha/blob/60855a864d5fc9312f3bec2973072cdf00f314f2/irohad/torii/impl/command_service.cpp#L28): The Cyclomatic Complexity of this function is 10 which is greater than 8 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'",2017-11-29 14:10:22,2017-11-29 14:10:22
https://api.github.com/repos/hyperledger/iroha/issues/711,https://api.github.com/repos/hyperledger/iroha/issues/comments/346372597,https://github.com/hyperledger/iroha/pull/711#issuecomment-346372597,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/711?src=pr&el=h1) Report
> Merging [#711](https://codecov.io/gh/hyperledger/iroha/pull/711?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/894a343b51c31a606a6dce201238ccf014b2be62?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/711/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/711?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #711   +/-   ##
=====================================================
  Coverage                 43.49%   43.49%           
=====================================================
  Files                       298      298           
  Lines                     12022    12022           
  Branches                   6599     6599           
=====================================================
  Hits                       5229     5229           
  Misses                      721      721           
  Partials                   6072     6072
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/711?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/711?src=pr&el=footer). Last update [894a343...56f644f](https://codecov.io/gh/hyperledger/iroha/pull/711?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-22 14:52:38,2017-11-22 15:51:34
https://api.github.com/repos/hyperledger/iroha/issues/710,https://api.github.com/repos/hyperledger/iroha/issues/comments/346345233,https://github.com/hyperledger/iroha/pull/710#issuecomment-346345233,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/710?src=pr&el=h1) Report
> Merging [#710](https://codecov.io/gh/hyperledger/iroha/pull/710?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/0faeb219cc85eacc6384e66033f2d2d8bbcd05cf?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/710/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/710?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #710   +/-   ##
=====================================================
  Coverage                 43.49%   43.49%           
=====================================================
  Files                       298      298           
  Lines                     12022    12022           
  Branches                   6599     6599           
=====================================================
  Hits                       5229     5229           
  Misses                      721      721           
  Partials                   6072     6072
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/710?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/710?src=pr&el=footer). Last update [0faeb21...0d2f30e](https://codecov.io/gh/hyperledger/iroha/pull/710?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-22 13:08:30,2017-11-22 15:37:09
https://api.github.com/repos/hyperledger/iroha/issues/709,https://api.github.com/repos/hyperledger/iroha/issues/comments/345870942,https://github.com/hyperledger/iroha/pull/709#issuecomment-345870942,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/709?src=pr&el=h1) Report
> Merging [#709](https://codecov.io/gh/hyperledger/iroha/pull/709?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3706a2023d240acebc1cb5d9f4dc9f1bb488d7c1?src=pr&el=desc) will **decrease** coverage by `0.02%`.
> The diff coverage is `29.16%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/709/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/709?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #709      +/-   ##
===========================================
- Coverage    40.17%   40.15%   -0.03%     
===========================================
  Files          456      456              
  Lines        15502    15508       +6     
  Branches      8594     8601       +7     
===========================================
- Hits          6228     6227       -1     
  Misses        1554     1554              
- Partials      7720     7727       +7
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/709?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/709/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `37.5% <0%> (+1.13%)` | :arrow_up: |
| [...tion/pipeline/transfer\_asset\_inter\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/709/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90cmFuc2Zlcl9hc3NldF9pbnRlcl9kb21haW5fdGVzdC5jcHA=) | `42.55% <0%> (+2.16%)` | :arrow_up: |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/709/diff?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `34.66% <30.43%> (-6.61%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/709?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/709?src=pr&el=footer). Last update [3706a20...b499452](https://codecov.io/gh/hyperledger/iroha/pull/709?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-20 23:56:15,2017-12-20 23:52:10
https://api.github.com/repos/hyperledger/iroha/issues/709,https://api.github.com/repos/hyperledger/iroha/issues/comments/345876870,https://github.com/hyperledger/iroha/pull/709#issuecomment-345876870,l4l,It's fine that txs goes without order here. Imo it's better sort sent proposal and compare with the base one,2017-11-21 00:30:36,2017-11-21 00:30:36
https://api.github.com/repos/hyperledger/iroha/issues/709,https://api.github.com/repos/hyperledger/iroha/issues/comments/345878204,https://github.com/hyperledger/iroha/pull/709#issuecomment-345878204,motxx,"I think that's one of the options, on the other hand, this test is the integration test. So maybe we have to send transactions the same way as clients. i.e. we need to send transactions via Torii endpoint and we cannot sort the proposal in processing.

And, if sending transactions like:
```cpp
sendTransactions({tx1, tx2});
```
`tx2` depends on `tx1`. If `tx1` is not processed, `tx2` may be failed at stateful validation. In that case, the committed block doesn't have all transactions.

Also, we cannot send transactions like:
```cpp
sendTransactions({tx1});
sendTransactions({tx2});
```
Because `validate()` functions need to be called only once in one test. So,
```cpp
sendTransactions({tx1, tx2});
validate();
```
is ok, but
```cpp
sendTransactions({tx1});
validate();
sendTransactions({tx2});
validate();
```
causes the test to fail.",2017-11-21 00:38:50,2017-11-21 00:44:35
https://api.github.com/repos/hyperledger/iroha/issues/709,https://api.github.com/repos/hyperledger/iroha/issues/comments/345886487,https://github.com/hyperledger/iroha/pull/709#issuecomment-345886487,l4l,"The problem with the sleep is it doesn't solve the problem. Only increases chances of green test. This probably should be done either via sorting as I mentioned earlier, or via conditional variable.

And about your comment: maybe you're right, but it seems quite strange for me to predict order of asynchronous service. And dependent commands should be sent in one txs, so there's no ""dependent txs""

That are my though, I also would like to hear any others from our team",2017-11-21 01:26:42,2017-11-21 01:26:42
https://api.github.com/repos/hyperledger/iroha/issues/709,https://api.github.com/repos/hyperledger/iroha/issues/comments/346195783,https://github.com/hyperledger/iroha/pull/709#issuecomment-346195783,motxx,"> That are my though, I also would like to hear any others from our team

Can anybody help?
`sendTransactions()` is created by @lebdron so could you help if possible? (ping)",2017-11-21 23:33:33,2017-11-21 23:33:33
https://api.github.com/repos/hyperledger/iroha/issues/709,https://api.github.com/repos/hyperledger/iroha/issues/comments/346259310,https://github.com/hyperledger/iroha/pull/709#issuecomment-346259310,lebdron,"That method is synchronous here, since Torii itself (gGRPC service) is not created, and the gRPC endpoint is called directly. What is asynchronous here - `OrderingGateTransportGrpc::propagate_transaction` method:
https://github.com/hyperledger/iroha/blob/15ffc458b9704e19353ddba58b3582cf2202eaa9/irohad/ordering/impl/ordering_gate_transport_grpc.cpp#L53-L58
Therefore, I would suggest to inherit from ordering service/ordering service transport, add condition variable to inherited class, and notify when `onTransaction` method is called to ensure transaction order.",2017-11-22 06:51:19,2017-11-22 06:51:19
https://api.github.com/repos/hyperledger/iroha/issues/709,https://api.github.com/repos/hyperledger/iroha/issues/comments/347500660,https://github.com/hyperledger/iroha/pull/709#issuecomment-347500660,motxx,This PR stopped because we may implement https://github.com/hyperledger/iroha/pull/709#issuecomment-346259310 but it's needed for modifying ordering service init code. This design is being discussed now.,2017-11-28 11:54:06,2017-11-28 11:55:17
https://api.github.com/repos/hyperledger/iroha/issues/709,https://api.github.com/repos/hyperledger/iroha/issues/comments/352482867,https://github.com/hyperledger/iroha/pull/709#issuecomment-352482867,motxx,"I changed the code to use condition variable for waiting transactions.
When a transaction is committed, `cv.notify_one()` works via `PeerCommunicationService`",2017-12-18 16:42:03,2017-12-19 09:18:38
https://api.github.com/repos/hyperledger/iroha/issues/709,https://api.github.com/repos/hyperledger/iroha/issues/comments/353214823,https://github.com/hyperledger/iroha/pull/709#issuecomment-353214823,motxx,Can anyone else review this?,2017-12-20 23:39:34,2017-12-20 23:39:34
https://api.github.com/repos/hyperledger/iroha/issues/708,https://api.github.com/repos/hyperledger/iroha/issues/comments/345680290,https://github.com/hyperledger/iroha/pull/708#issuecomment-345680290,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/708?src=pr&el=h1) Report
> Merging [#708](https://codecov.io/gh/hyperledger/iroha/pull/708?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/19651930fa6851586bfb9f09c3f6f2f3d3a51eaf?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/708/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/708?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #708   +/-   ##
========================================
  Coverage    42.91%   42.91%           
========================================
  Files          307      307           
  Lines        12478    12478           
  Branches      6927     6927           
========================================
  Hits          5355     5355           
  Misses         704      704           
  Partials      6419     6419
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/708?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/708?src=pr&el=footer). Last update [1965193...e5f0ec8](https://codecov.io/gh/hyperledger/iroha/pull/708?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-20 12:21:12,2017-11-25 14:50:15
https://api.github.com/repos/hyperledger/iroha/issues/707,https://api.github.com/repos/hyperledger/iroha/issues/comments/345701659,https://github.com/hyperledger/iroha/pull/707#issuecomment-345701659,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=h1) Report
> Merging [#707](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/19651930fa6851586bfb9f09c3f6f2f3d3a51eaf?src=pr&el=desc) will **decrease** coverage by `0.33%`.
> The diff coverage is `16.11%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/707/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #707      +/-   ##
===========================================
- Coverage    42.91%   42.57%   -0.34%     
===========================================
  Files          307      308       +1     
  Lines        12478    12664     +186     
  Branches      6927     7072     +145     
===========================================
+ Hits          5355     5392      +37     
- Misses         704      715      +11     
- Partials      6419     6557     +138
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `85.71% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2FjY291bnQuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfY29tbWFuZC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [...had/model/converters/impl/json\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2NvbW1hbmRfZmFjdG9yeS5jcHA=) | `41.98% <0%> (-0.66%)` | :arrow_down: |
| [irohad/model/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9hY2NvdW50LmhwcA==) | `25% <0%> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/command\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9jb21tYW5kX2dlbmVyYXRvci5jcHA=) | `26.31% <0%> (ø)` | :arrow_up: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| ... and [16 more](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=footer). Last update [1965193...74aacba](https://codecov.io/gh/hyperledger/iroha/pull/707?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-20 13:53:35,2017-11-23 08:37:58
https://api.github.com/repos/hyperledger/iroha/issues/707,https://api.github.com/repos/hyperledger/iroha/issues/comments/346556901,https://github.com/hyperledger/iroha/pull/707#issuecomment-346556901,sorabot,"SonarQube analysis reported 143 issues
* ![MAJOR][MAJOR] 2 major
* ![MINOR][MINOR] 76 minor
* ![INFO][INFO] 65 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [storage_impl.hpp#L82](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/irohad/ametsuchi/impl/storage_impl.hpp#L82): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [pb_query_response_factory.cpp#L266](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/irohad/model/converters/impl/pb_query_response_factory.cpp#L266): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [query_response_handler.cpp#L100](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/iroha-cli/impl/query_response_handler.cpp#L100): Define a constant instead of duplicating this literal "" {} "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [query_response_handler.cpp#L116](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/iroha-cli/impl/query_response_handler.cpp#L116): Define a constant instead of duplicating this literal ""-Asset Id- {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L201](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L201): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L232](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L232): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L233](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L233): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L234](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L234): Extract this magic number '4' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L235](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L235): Extract this magic number '5' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L236](https://github.com/hyperledger/iroha/blob/74aacbaf95a5aa7a418a9ea81aaea38b3dde4328/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L236): Extract this magic number '6' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-23 08:37:21,2017-11-23 08:37:21
https://api.github.com/repos/hyperledger/iroha/issues/707,https://api.github.com/repos/hyperledger/iroha/issues/comments/347213456,https://github.com/hyperledger/iroha/pull/707#issuecomment-347213456,Warchant,"Just noticed:
>MAJOR pb_query_response_factory.cpp#L266: Add a default case to this switch. rule

Fix this.",2017-11-27 15:17:51,2017-11-27 15:17:51
https://api.github.com/repos/hyperledger/iroha/issues/706,https://api.github.com/repos/hyperledger/iroha/issues/comments/345607343,https://github.com/hyperledger/iroha/pull/706#issuecomment-345607343,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=h1) Report
> Merging [#706](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=desc) into [feature/mst-trunk_rebased](https://codecov.io/gh/hyperledger/iroha/commit/3e1dc3779cc0f7efcb71502d30088d325dec75fe?src=pr&el=desc) will **decrease** coverage by `0.04%`.
> The diff coverage is `6.89%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/706/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=tree)

```diff
@@                      Coverage Diff                      @@
##           feature/mst-trunk_rebased     #706      +/-   ##
=============================================================
- Coverage                      42.68%   42.64%   -0.05%     
=============================================================
  Files                            328      327       -1     
  Lines                          12973    12923      -50     
  Branches                        7253     7222      -31     
=============================================================
- Hits                            5538     5511      -27     
- Misses                           720      735      +15     
+ Partials                        6715     6677      -38
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [iroha-cli/client.hpp](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/queries/get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X3RyYW5zYWN0aW9ucy5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [...odel/converters/impl/pb\_query\_response\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9yZXNwb25zZV9mYWN0b3J5LmNwcA==) | `41.86% <0%> (-0.5%)` | :arrow_down: |
| [iroha-cli/client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5jcHA=) | `37.03% <25%> (-2.97%)` | :arrow_down: |
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `34.61% <6.66%> (-2.71%)` | :arrow_down: |
| [test/integration/consensus/consensus\_sunny\_day.cpp](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jb25zZW5zdXMvY29uc2Vuc3VzX3N1bm55X2RheS5jcHA=) | | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=footer). Last update [3e1dc37...b3a11f6](https://codecov.io/gh/hyperledger/iroha/pull/706?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-20 06:57:30,2017-11-24 08:50:37
https://api.github.com/repos/hyperledger/iroha/issues/706,https://api.github.com/repos/hyperledger/iroha/issues/comments/346774371,https://github.com/hyperledger/iroha/pull/706#issuecomment-346774371,sorabot,"SonarQube analysis reported 41 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 3 major
* ![MINOR][MINOR] 15 minor
* ![INFO][INFO] 22 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L46](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/iroha-cli/main.cpp#L46): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [transaction_response_handler.cpp#L24](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/iroha-cli/impl/transaction_response_handler.cpp#L24): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MAJOR][MAJOR] [pb_query_factory.cpp#L53](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/irohad/model/converters/impl/pb_query_factory.cpp#L53): The Cyclomatic Complexity of this function is 11 which is greater than 10 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MAJOR][MAJOR] [pb_query_response_factory.cpp#L267](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/irohad/model/converters/impl/pb_query_response_factory.cpp#L267): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [client.cpp#L26](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/iroha-cli/client.cpp#L26): Member variable 'CliClient::server_port' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [transaction_response_handler.cpp#L31](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/iroha-cli/impl/transaction_response_handler.cpp#L31): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L34](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/iroha-cli/main.cpp#L34): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L36](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/iroha-cli/main.cpp#L36): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L37](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/iroha-cli/main.cpp#L37): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L39](https://github.com/hyperledger/iroha/blob/b3a11f692b0dcdbe9187917806109eced396b528/iroha-cli/main.cpp#L39): Define a constant instead of duplicating this literal false 4 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-24 08:49:58,2017-11-24 08:49:58
https://api.github.com/repos/hyperledger/iroha/issues/705,https://api.github.com/repos/hyperledger/iroha/issues/comments/345455264,https://github.com/hyperledger/iroha/pull/705#issuecomment-345455264,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/705?src=pr&el=h1) Report
> Merging [#705](https://codecov.io/gh/hyperledger/iroha/pull/705?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7513fc0cd863485c0d8b9ad7cf6f96ce027faac6?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/705/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/705?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #705   +/-   ##
========================================
  Coverage    42.96%   42.96%           
========================================
  Files          305      305           
  Lines        12424    12424           
  Branches      6893     6893           
========================================
  Hits          5338     5338           
  Misses         708      708           
  Partials      6378     6378
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/705?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/705?src=pr&el=footer). Last update [7513fc0...a138550](https://codecov.io/gh/hyperledger/iroha/pull/705?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-18 16:59:10,2017-11-19 05:09:05
https://api.github.com/repos/hyperledger/iroha/issues/704,https://api.github.com/repos/hyperledger/iroha/issues/comments/345191803,https://github.com/hyperledger/iroha/pull/704#issuecomment-345191803,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/704?src=pr&el=h1) Report
> Merging [#704](https://codecov.io/gh/hyperledger/iroha/pull/704?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7527d9fc8071c4e800c97f62f3a1862e6e98019a?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/704/graphs/tree.svg?src=pr&height=150&width=650&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/704?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #704   +/-   ##
========================================
  Coverage    42.98%   42.98%           
========================================
  Files          304      304           
  Lines        12395    12395           
  Branches      6882     6882           
========================================
  Hits          5328     5328           
  Misses         714      714           
  Partials      6353     6353
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/704?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/704?src=pr&el=footer). Last update [7527d9f...8289825](https://codecov.io/gh/hyperledger/iroha/pull/704?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-17 09:32:27,2017-11-17 09:32:27
https://api.github.com/repos/hyperledger/iroha/issues/704,https://api.github.com/repos/hyperledger/iroha/issues/comments/345589866,https://github.com/hyperledger/iroha/pull/704#issuecomment-345589866,neewy,I think this is a nice suggestion and we can add it ,2017-11-20 04:37:29,2017-11-20 04:37:29
https://api.github.com/repos/hyperledger/iroha/issues/704,https://api.github.com/repos/hyperledger/iroha/issues/comments/345624864,https://github.com/hyperledger/iroha/pull/704#issuecomment-345624864,l4l,"Personally I don't like it, it basically show same info as [pulse](https://github.com/hyperledger/iroha/pulse)",2017-11-20 08:32:32,2017-11-20 08:32:32
https://api.github.com/repos/hyperledger/iroha/issues/703,https://api.github.com/repos/hyperledger/iroha/issues/comments/346535400,https://github.com/hyperledger/iroha/pull/703#issuecomment-346535400,motxx,Anyone can see review this?,2017-11-23 05:40:10,2017-11-23 05:40:10
https://api.github.com/repos/hyperledger/iroha/issues/703,https://api.github.com/repos/hyperledger/iroha/issues/comments/347503966,https://github.com/hyperledger/iroha/pull/703#issuecomment-347503966,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=h1) Report
> Merging [#703](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b5c1212897d82461a40527e2b1899e2e30fb069c?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `40.19%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/703/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #703      +/-   ##
===========================================
- Coverage    42.55%   42.54%   -0.02%     
===========================================
  Files          309      309              
  Lines        12677    12778     +101     
  Branches      7085     7146      +61     
===========================================
+ Hits          5395     5436      +41     
  Misses         709      709              
- Partials      6573     6633      +60
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/json\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/queries/get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X3RyYW5zYWN0aW9ucy5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [irohad/model/registration/query\_registration.hpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3JlZ2lzdHJhdGlvbi9xdWVyeV9yZWdpc3RyYXRpb24uaHBw) | `18.18% <0%> (-1.82%)` | :arrow_down: |
| [test/module/irohad/model/static\_map.cpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL3N0YXRpY19tYXAuY3Bw) | `0% <0%> (ø)` | :arrow_up: |
| [...rohad/model/converters/json\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5X3Rlc3QuY3Bw) | `8.06% <15.15%> (+2.57%)` | :arrow_up: |
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `10.14% <33.33%> (+2.2%)` | :arrow_up: |
| [irohad/model/converters/json\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tb24uaHBw) | `62.96% <50%> (-7.04%)` | :arrow_down: |
| [...rohad/model/converters/impl/json\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX3F1ZXJ5X2ZhY3RvcnkuY3Bw) | `43.2% <52.94%> (+1.53%)` | :arrow_up: |
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `40.24% <59.09%> (+2.91%)` | :arrow_up: |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=footer). Last update [b5c1212...c51d77c](https://codecov.io/gh/hyperledger/iroha/pull/703?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-28 12:09:37,2017-11-28 12:09:37
https://api.github.com/repos/hyperledger/iroha/issues/703,https://api.github.com/repos/hyperledger/iroha/issues/comments/347517460,https://github.com/hyperledger/iroha/pull/703#issuecomment-347517460,neewy,Two approvals — you can rebase and merge it :) ,2017-11-28 13:05:24,2017-11-28 13:05:24
https://api.github.com/repos/hyperledger/iroha/issues/702,https://api.github.com/repos/hyperledger/iroha/issues/comments/344852498,https://github.com/hyperledger/iroha/pull/702#issuecomment-344852498,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/702?src=pr&el=h1) Report
> Merging [#702](https://codecov.io/gh/hyperledger/iroha/pull/702?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/5ec7798e519d38c39b611c55c6365b2eba8df946?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/702/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/702?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #702   +/-   ##
========================================
  Coverage    42.95%   42.95%           
========================================
  Files          307      307           
  Lines        12496    12496           
  Branches      6936     6936           
========================================
  Hits          5368     5368           
  Misses         707      707           
  Partials      6421     6421
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/702?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/702?src=pr&el=footer). Last update [5ec7798...d3f8940](https://codecov.io/gh/hyperledger/iroha/pull/702?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-16 08:38:16,2017-11-20 14:49:11
https://api.github.com/repos/hyperledger/iroha/issues/701,https://api.github.com/repos/hyperledger/iroha/issues/comments/344821491,https://github.com/hyperledger/iroha/pull/701#issuecomment-344821491,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/701?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@15ffc45`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `30.76%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/701/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/701?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #701   +/-   ##
==========================================
  Coverage           ?   42.91%           
==========================================
  Files              ?      307           
  Lines              ?    12478           
  Branches           ?     6927           
==========================================
  Hits               ?     5355           
  Misses             ?      704           
  Partials           ?     6419
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/701?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/701?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `32.05% <30.76%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/701?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/701?src=pr&el=footer). Last update [15ffc45...87922e8](https://codecov.io/gh/hyperledger/iroha/pull/701?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-16 05:39:24,2017-11-21 01:17:10
https://api.github.com/repos/hyperledger/iroha/issues/701,https://api.github.com/repos/hyperledger/iroha/issues/comments/345110456,https://github.com/hyperledger/iroha/pull/701#issuecomment-345110456,neewy,"Takeda-san, thanks for the contribution! According to Iroha working agreement, we should have at least two approvals, I will assign here additional reviewers",2017-11-17 00:45:50,2017-11-17 00:45:50
https://api.github.com/repos/hyperledger/iroha/issues/701,https://api.github.com/repos/hyperledger/iroha/issues/comments/345619568,https://github.com/hyperledger/iroha/pull/701#issuecomment-345619568,l4l,There's just been merged #705 and it introduces common [boost target](https://github.com/hyperledger/iroha/pull/705/files#diff-7344eef4eeb9c6706103abcb20cc1dcaR85). So may please rebase your branch and replace the last commit so I can merge it?,2017-11-20 08:08:06,2017-11-20 08:08:49
https://api.github.com/repos/hyperledger/iroha/issues/701,https://api.github.com/repos/hyperledger/iroha/issues/comments/345668711,https://github.com/hyperledger/iroha/pull/701#issuecomment-345668711,mitsutaka-takeda,"I got kind of confused about how to fix CMakeLists.txt. After rabasing onto the latest develop, I use the new target `boost`. Is this a right correction? 

Somehow circleci build failed 😰 ",2017-11-20 11:27:19,2017-11-20 11:27:19
https://api.github.com/repos/hyperledger/iroha/issues/701,https://api.github.com/repos/hyperledger/iroha/issues/comments/345672379,https://github.com/hyperledger/iroha/pull/701#issuecomment-345672379,lebdron,@mitsutaka-takeda there was some minor turbulence with docker image. It should be OK now.,2017-11-20 11:44:40,2017-11-20 11:44:40
https://api.github.com/repos/hyperledger/iroha/issues/701,https://api.github.com/repos/hyperledger/iroha/issues/comments/345751227,https://github.com/hyperledger/iroha/pull/701#issuecomment-345751227,Warchant,One more rebase and we can merge ^_^,2017-11-20 16:34:12,2017-11-20 16:34:12
https://api.github.com/repos/hyperledger/iroha/issues/701,https://api.github.com/repos/hyperledger/iroha/issues/comments/345881883,https://github.com/hyperledger/iroha/pull/701#issuecomment-345881883,l4l,"Nevermind, I'll finish with that pr. Thanks for your contribution!",2017-11-21 01:00:36,2017-11-21 01:00:36
https://api.github.com/repos/hyperledger/iroha/issues/701,https://api.github.com/repos/hyperledger/iroha/issues/comments/345884650,https://github.com/hyperledger/iroha/pull/701#issuecomment-345884650,l4l,Merged in 15ffc45,2017-11-21 01:16:13,2017-11-21 01:16:13
https://api.github.com/repos/hyperledger/iroha/issues/700,https://api.github.com/repos/hyperledger/iroha/issues/comments/344800619,https://github.com/hyperledger/iroha/pull/700#issuecomment-344800619,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=h1) Report
> Merging [#700](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/078a1762123661242d9959ed2a449fbf0df5378a?src=pr&el=desc) will **increase** coverage by `0.02%`.
> The diff coverage is `37.5%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/700/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #700      +/-   ##
===========================================
+ Coverage    43.05%   43.08%   +0.02%     
===========================================
  Files          302      302              
  Lines        12372    12307      -65     
  Branches      6860     6815      -45     
===========================================
- Hits          5327     5302      -25     
+ Misses         714      710       -4     
+ Partials      6331     6295      -36
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `35.44% <37.5%> (-4.15%)` | :arrow_down: |
| [irohad/ametsuchi/impl/redis\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `36.53% <0%> (-2.4%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `64.4% <0%> (+1.07%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `26.82% <0%> (+1.51%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=footer). Last update [078a176...eee9186](https://codecov.io/gh/hyperledger/iroha/pull/700?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-16 02:59:15,2017-11-16 04:43:29
https://api.github.com/repos/hyperledger/iroha/issues/700,https://api.github.com/repos/hyperledger/iroha/issues/comments/344812493,https://github.com/hyperledger/iroha/pull/700#issuecomment-344812493,mitsutaka-takeda,I don't know why DCO check failed. All my commits are signed-off. It may be because I tried to merge in to master instead of develop when I create this PR.,2017-11-16 04:28:25,2017-11-16 04:28:25
https://api.github.com/repos/hyperledger/iroha/issues/700,https://api.github.com/repos/hyperledger/iroha/issues/comments/344816505,https://github.com/hyperledger/iroha/pull/700#issuecomment-344816505,motxx,Could you try to recreate the PR?,2017-11-16 05:01:18,2017-11-16 05:01:18
https://api.github.com/repos/hyperledger/iroha/issues/700,https://api.github.com/repos/hyperledger/iroha/issues/comments/344820289,https://github.com/hyperledger/iroha/pull/700#issuecomment-344820289,mitsutaka-takeda,To recreate PR,2017-11-16 05:30:26,2017-11-16 05:30:26
https://api.github.com/repos/hyperledger/iroha/issues/699,https://api.github.com/repos/hyperledger/iroha/issues/comments/344895827,https://github.com/hyperledger/iroha/pull/699#issuecomment-344895827,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=h1) Report
> Merging [#699](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/41f1d8699ce3ecd6d8f32947c222dad4659b73fa?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/699/graphs/tree.svg?token=VEvywEmaef&height=150&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #699   +/-   ##
=====================================================
  Coverage                 43.49%   43.49%           
=====================================================
  Files                       298      298           
  Lines                     12022    12022           
  Branches                   6599     6599           
=====================================================
  Hits                       5229     5229           
  Misses                      721      721           
  Partials                   6072     6072
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [.../irohad/consensus/yac/yac\_crypto\_provider\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2NyeXB0b19wcm92aWRlcl90ZXN0LmNwcA==) | `11.76% <ø> (ø)` | :arrow_up: |
| [irohad/torii/impl/query\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvcXVlcnlfc2VydmljZS5jcHA=) | `26.31% <ø> (ø)` | :arrow_up: |
| [test/framework/test\_block\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvdGVzdF9ibG9ja19nZW5lcmF0b3IuY3Bw) | `39.58% <ø> (ø)` | :arrow_up: |
| [...ptography/ed25519\_sha3\_impl/internal/impl/verify.c](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9pbXBsL3ZlcmlmeS5j) | `92.15% <ø> (ø)` | |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `39.53% <ø> (ø)` | :arrow_up: |
| [.../cryptography/ed25519\_sha3\_impl/internal/impl/sc.c](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9pbXBsL3NjLmM=) | `100% <ø> (ø)` | |
| [...orii/processor/impl/transaction\_processor\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9pbXBsL3RyYW5zYWN0aW9uX3Byb2Nlc3Nvcl9pbXBsLmNwcA==) | `43.85% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/query\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9xdWVyeV9nZW5lcmF0b3IuY3Bw) | `59.32% <ø> (ø)` | :arrow_up: |
| [...ryptography/ed25519\_sha3\_impl/internal/impl/seed.c](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9pbXBsL3NlZWQuYw==) | `71.42% <ø> (ø)` | |
| [...ptography/ed25519\_sha3\_impl/internal/impl/sha512.c](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9lZDI1NTE5X3NoYTNfaW1wbC9pbnRlcm5hbC9pbXBsL3NoYTUxMi5j) | `68.75% <ø> (ø)` | |
| ... and [35 more](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=footer). Last update [41f1d86...7ab3d97](https://codecov.io/gh/hyperledger/iroha/pull/699?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-16 11:28:39,2017-11-17 14:41:55
https://api.github.com/repos/hyperledger/iroha/issues/699,https://api.github.com/repos/hyperledger/iroha/issues/comments/344948265,https://github.com/hyperledger/iroha/pull/699#issuecomment-344948265,Warchant,Commented in upsource https://upsource.soramitsu.co.jp/iroha/review/IRH-CR-44,2017-11-16 14:59:34,2017-11-16 15:10:54
https://api.github.com/repos/hyperledger/iroha/issues/699,https://api.github.com/repos/hyperledger/iroha/issues/comments/345261623,https://github.com/hyperledger/iroha/pull/699#issuecomment-345261623,sorabot,"SonarQube analysis reported 126 issues
* ![MAJOR][MAJOR] 3 major
* ![MINOR][MINOR] 56 minor
* ![INFO][INFO] 67 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [interactive_query_cli.cpp#L117](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/iroha-cli/interactive/impl/interactive_query_cli.cpp#L117): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MAJOR][MAJOR] [application.hpp#L61](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/irohad/main/application.hpp#L61): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [command_service.cpp#L40](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/irohad/torii/impl/command_service.cpp#L40): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L92](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/iroha-cli/interactive/impl/interactive_query_cli.cpp#L92): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L109](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/iroha-cli/interactive/impl/interactive_query_cli.cpp#L109): Define a constant instead of duplicating this literal ""Choose query: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L199](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L199): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L230](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L230): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L231](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L231): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L232](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L232): Extract this magic number '4' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L233](https://github.com/hyperledger/iroha/blob/7ab3d9718e893b6d95c0d0adb28534f1a858a2fd/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L233): Extract this magic number '5' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-17 14:41:31,2017-11-17 14:41:31
https://api.github.com/repos/hyperledger/iroha/issues/697,https://api.github.com/repos/hyperledger/iroha/issues/comments/344771182,https://github.com/hyperledger/iroha/pull/697#issuecomment-344771182,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`master@ee0b4fc`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `38.37%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/697/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             master     #697   +/-   ##
=========================================
  Coverage          ?   42.91%           
=========================================
  Files             ?      307           
  Lines             ?    12478           
  Branches          ?     6927           
=========================================
  Hits              ?     5355           
  Misses            ?      704           
  Partials          ?     6419
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...had/consensus/yac/storage/yac\_proposal\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfcHJvcG9zYWxfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | |
| [irohad/network/ordering\_service\_transport.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnQuaHBw) | `50% <ø> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | |
| [irohad/model/queries/get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X3RyYW5zYWN0aW9ucy5ocHA=) | `0% <ø> (ø)` | |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <ø> (ø)` | |
| [irohad/model/converters/pb\_block\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfYmxvY2tfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | |
| [irohad/network/block\_loader.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvYmxvY2tfbG9hZGVyLmhwcA==) | `50% <ø> (ø)` | |
| [irohad/model/registration/query\_registration.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3JlZ2lzdHJhdGlvbi9xdWVyeV9yZWdpc3RyYXRpb24uaHBw) | `20% <ø> (ø)` | |
| [.../model/queries/responses/transactions\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcmVzcG9uc2VzL3RyYW5zYWN0aW9uc19yZXNwb25zZS5ocHA=) | `0% <ø> (ø)` | |
| [irohad/model/queries/get\_roles.hpp](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X3JvbGVzLmhwcA==) | `40% <ø> (ø)` | |
| ... and [139 more](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=footer). Last update [ee0b4fc...62946b7](https://codecov.io/gh/hyperledger/iroha/pull/697?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-16 00:06:20,2017-11-23 06:18:34
https://api.github.com/repos/hyperledger/iroha/issues/696,https://api.github.com/repos/hyperledger/iroha/issues/comments/344539660,https://github.com/hyperledger/iroha/pull/696#issuecomment-344539660,motxx,sonarqube failed but can be reveiwed.,2017-11-15 09:45:12,2017-11-15 09:45:12
https://api.github.com/repos/hyperledger/iroha/issues/696,https://api.github.com/repos/hyperledger/iroha/issues/comments/344587387,https://github.com/hyperledger/iroha/pull/696#issuecomment-344587387,Warchant,"LOL, sonar-scanner has a bug, it can not parse from json `...id: 4317685969, ...` since it is out of `uint32` range. Github, well done. Do not worry about failing of sonar-pr.",2017-11-15 13:09:17,2017-11-15 13:09:17
https://api.github.com/repos/hyperledger/iroha/issues/695,https://api.github.com/repos/hyperledger/iroha/issues/comments/344892051,https://github.com/hyperledger/iroha/pull/695#issuecomment-344892051,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/695?src=pr&el=h1) Report
> Merging [#695](https://codecov.io/gh/hyperledger/iroha/pull/695?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/21910943c3b87ea08a09394af3522632e9bd2a06?src=pr&el=desc) will **decrease** coverage by `0.74%`.
> The diff coverage is `27.53%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/695/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/695?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #695      +/-   ##
========================================================
- Coverage                 42.43%   41.69%   -0.75%     
========================================================
  Files                       346      371      +25     
  Lines                     12579    12895     +316     
  Branches                   6855     6976     +121     
========================================================
+ Hits                       5338     5376      +38     
- Misses                     1019     1257     +238     
- Partials                   6222     6262      +40
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/695?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [shared\_model/cryptography/blob.hpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iLmhwcA==) | `36.84% <ø> (+5.26%)` | :arrow_up: |
| [shared\_model/interfaces/commands/command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2ludGVyZmFjZXMvY29tbWFuZHMvY29tbWFuZC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [.../backend/protobuf/common\_objects/trivial\_proto.hpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbW9uX29iamVjdHMvdHJpdmlhbF9wcm90by5ocHA=) | `27.27% <0%> (ø)` | :arrow_up: |
| [...model/backend\_proto/shared\_proto\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2JhY2tlbmRfcHJvdG8vc2hhcmVkX3Byb3RvX2NvbW1hbmRzX3Rlc3QuY3Bw) | `36.36% <0%> (ø)` | :arrow_up: |
| [...\_model/backend/protobuf/commands/proto\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY29tbWFuZC5ocHA=) | `70% <100%> (ø)` | :arrow_up: |
| [...est/module/shared\_model/cryptography/blob\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2NyeXB0b2dyYXBoeS9ibG9iX3Rlc3QuY3Bw) | `20% <20%> (ø)` | |
| [...el/backend/protobuf/commands/proto\_create\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY3JlYXRlX3JvbGUuaHBw) | `20% <20%> (ø)` | |
| [...backend/protobuf/commands/proto\_transfer\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fdHJhbnNmZXJfYXNzZXQuaHBw) | `21.42% <21.42%> (ø)` | |
| [...backend/protobuf/commands/proto\_create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fY3JlYXRlX2FjY291bnQuaHBw) | `23.07% <23.07%> (ø)` | |
| [.../backend/protobuf/commands/proto\_add\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL2JhY2tlbmQvcHJvdG9idWYvY29tbWFuZHMvcHJvdG9fYWRkX3NpZ25hdG9yeS5ocHA=) | `27.27% <27.27%> (ø)` | |
| ... and [33 more](https://codecov.io/gh/hyperledger/iroha/pull/695/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/695?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/695?src=pr&el=footer). Last update [2191094...a198bc6](https://codecov.io/gh/hyperledger/iroha/pull/695?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-16 11:11:55,2017-12-04 08:02:28
https://api.github.com/repos/hyperledger/iroha/issues/694,https://api.github.com/repos/hyperledger/iroha/issues/comments/343792264,https://github.com/hyperledger/iroha/pull/694#issuecomment-343792264,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=h1) Report
> Merging [#694](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3fef80087584591e919af699df12b5dc4a8a1f66?src=pr&el=desc) will **decrease** coverage by `0.07%`.
> The diff coverage is `11.76%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/694/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #694      +/-   ##
===========================================
- Coverage     43.1%   43.03%   -0.08%     
===========================================
  Files          302      304       +2     
  Lines        12324    12347      +23     
  Branches      6826     6848      +22     
===========================================
+ Hits          5312     5313       +1     
  Misses         713      713              
- Partials      6299     6321      +22
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `40.86% <0%> (-0.07%)` | :arrow_down: |
| [...dule/libs/validator/domain\_name\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy92YWxpZGF0b3IvZG9tYWluX25hbWVfdmFsaWRhdG9yX3Rlc3QuY3Bw) | `0% <0%> (ø)` | |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `13.02% <100%> (-0.02%)` | :arrow_down: |
| [libs/validator/domain\_name\_validator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=tree#diff-bGlicy92YWxpZGF0b3IvZG9tYWluX25hbWVfdmFsaWRhdG9yLmNwcA==) | `27.27% <27.27%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=footer). Last update [3fef800...0539830](https://codecov.io/gh/hyperledger/iroha/pull/694?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-13 02:21:11,2017-11-16 01:27:52
https://api.github.com/repos/hyperledger/iroha/issues/694,https://api.github.com/repos/hyperledger/iroha/issues/comments/343808197,https://github.com/hyperledger/iroha/pull/694#issuecomment-343808197,neewy,"Thank you for your first time contribution! We are really pleased to see improvements like these
It would be nice to see also contribution to https://github.com/hyperledger/iroha-api in **docs** branch, to keep the docs about API consistent",2017-11-13 04:23:54,2017-11-13 04:23:54
https://api.github.com/repos/hyperledger/iroha/issues/694,https://api.github.com/repos/hyperledger/iroha/issues/comments/343809282,https://github.com/hyperledger/iroha/pull/694#issuecomment-343809282,takemiyamakoto,Does sorabot have anything to say?,2017-11-13 04:30:43,2017-11-13 04:30:43
https://api.github.com/repos/hyperledger/iroha/issues/694,https://api.github.com/repos/hyperledger/iroha/issues/comments/343809901,https://github.com/hyperledger/iroha/pull/694#issuecomment-343809901,neewy,"@Warchant you see — for some reason sorabot haven't triggered on such PR, can you please check that?",2017-11-13 04:35:01,2017-11-13 04:35:01
https://api.github.com/repos/hyperledger/iroha/issues/694,https://api.github.com/repos/hyperledger/iroha/issues/comments/343859327,https://github.com/hyperledger/iroha/pull/694#issuecomment-343859327,Warchant,"@neewy sorabot does not work for forks. If you want to trigger sorabot, then setup `SORABOT_TOKEN` env variable inside circle CI. It should contain `personal access token` with `repo` permission. Account which analyzes PR should have push access to this PR.",2017-11-13 09:22:03,2017-11-13 09:22:03
https://api.github.com/repos/hyperledger/iroha/issues/694,https://api.github.com/repos/hyperledger/iroha/issues/comments/344961100,https://github.com/hyperledger/iroha/pull/694#issuecomment-344961100,Warchant,"Thanks for your contribution!

If you want to contribute more -- please, next time please don't forget to rebase branch onto develop :) We have bot `sorabot` which checks if your branch is rebased.
```
# once add hyperledger/iroha repo as upstream
git remote add upstream git@github.com:hyperledger/iroha.git

# then, rebase:
git fetch upstream
git checkout $yourbranch
git rebase -i upstream/develop
```

I did this for you in this branch.",2017-11-16 15:38:41,2017-11-16 17:44:03
https://api.github.com/repos/hyperledger/iroha/issues/693,https://api.github.com/repos/hyperledger/iroha/issues/comments/343730670,https://github.com/hyperledger/iroha/pull/693#issuecomment-343730670,sorabot,"SonarQube analysis reported 8 issues

1. ![MINOR][MINOR] [mst_storage_impl.hpp#L35](https://github.com/hyperledger/iroha/blob/077b8641d30e3f5aa101d75984ab49c82a9084a7/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L35): Unused private function: 'MstStorageStateImpl::getState' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![INFO][INFO] [mst_storage_impl.hpp#L26](https://github.com/hyperledger/iroha/blob/077b8641d30e3f5aa101d75984ab49c82a9084a7/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L26): Undocumented API: MstStorageStateImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_storage_impl.hpp#L39](https://github.com/hyperledger/iroha/blob/077b8641d30e3f5aa101d75984ab49c82a9084a7/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L39): Undocumented API: MstStorageStateImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_storage_impl.hpp#L41](https://github.com/hyperledger/iroha/blob/077b8641d30e3f5aa101d75984ab49c82a9084a7/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L41): Undocumented API: applyImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_storage_impl.hpp#L44](https://github.com/hyperledger/iroha/blob/077b8641d30e3f5aa101d75984ab49c82a9084a7/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L44): Undocumented API: updateOwnStateImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_storage_impl.hpp#L47](https://github.com/hyperledger/iroha/blob/077b8641d30e3f5aa101d75984ab49c82a9084a7/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L47): Undocumented API: getExpiredTransactionsImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_storage_impl.hpp#L50](https://github.com/hyperledger/iroha/blob/077b8641d30e3f5aa101d75984ab49c82a9084a7/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L50): Undocumented API: getDiffStateImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_storage_impl.hpp#L53](https://github.com/hyperledger/iroha/blob/077b8641d30e3f5aa101d75984ab49c82a9084a7/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L53): Undocumented API: whatsNewImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-12 11:33:57,2017-11-12 11:33:57
https://api.github.com/repos/hyperledger/iroha/issues/693,https://api.github.com/repos/hyperledger/iroha/issues/comments/343730676,https://github.com/hyperledger/iroha/pull/693#issuecomment-343730676,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=h1) Report
> Merging [#693](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=desc) into [feature/mst-trunk](https://codecov.io/gh/hyperledger/iroha/commit/e7a5d2151ece12e446ebdd9e8b51a18f1718d6c6?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `37.5%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/693/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=tree)

```diff
@@                 Coverage Diff                  @@
##           feature/mst-trunk    #693      +/-   ##
====================================================
- Coverage              44.51%   44.5%   -0.01%     
====================================================
  Files                    297     297              
  Lines                  11803   11800       -3     
  Branches                6286    6285       -1     
====================================================
- Hits                    5254    5252       -2     
  Misses                   756     756              
+ Partials                5793    5792       -1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ulti\_sig\_transactions/storage/mst\_storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9tc3Rfc3RvcmFnZV9pbXBsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...ohad/multi\_sig\_transactions/mst\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvbXN0X3Byb2Nlc3Nvcl90ZXN0LmNwcA==) | `40.27% <0%> (-0.82%)` | :arrow_down: |
| [...ule/irohad/multi\_sig\_transactions/storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZV90ZXN0LmNwcA==) | `34.28% <38.46%> (-1.83%)` | :arrow_down: |
| [...sig\_transactions/storage/impl/mst\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9pbXBsL21zdF9zdG9yYWdlX2ltcGwuY3Bw) | `60.86% <50%> (+2.53%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=footer). Last update [e7a5d21...077b864](https://codecov.io/gh/hyperledger/iroha/pull/693?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-12 11:34:09,2017-11-12 11:34:09
https://api.github.com/repos/hyperledger/iroha/issues/692,https://api.github.com/repos/hyperledger/iroha/issues/comments/343705927,https://github.com/hyperledger/iroha/pull/692#issuecomment-343705927,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=h1) Report
> Merging [#692](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7527d9fc8071c4e800c97f62f3a1862e6e98019a?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `39.86%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/692/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #692      +/-   ##
===========================================
- Coverage    42.98%   42.97%   -0.01%     
===========================================
  Files          304      306       +2     
  Lines        12395    12467      +72     
  Branches      6882     6925      +43     
===========================================
+ Hits          5328     5358      +30     
+ Misses         714      713       -1     
- Partials      6353     6396      +43
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/crypto/keys\_manager\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/command\_generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvY29tbWFuZF9nZW5lcmF0b3IuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuY3Bw) | `32.69% <33.33%> (+0.13%)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `36.36% <33.33%> (-3.18%)` | :arrow_down: |
| [...tion/pipeline/transfer\_asset\_inter\_domain\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90cmFuc2Zlcl9hc3NldF9pbnRlcl9kb21haW5fdGVzdC5jcHA=) | `40.38% <40.38%> (ø)` | |
| [.../pipeline/tx\_pipeline\_integration\_test\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0X2ZpeHR1cmUuaHBw) | `41.26% <41.26%> (ø)` | |
| [irohad/model/generators/impl/command\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9jb21tYW5kX2dlbmVyYXRvci5jcHA=) | `26.31% <50%> (+4.09%)` | :arrow_up: |
| [irohad/model/generators/impl/block\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9ibG9ja19nZW5lcmF0b3IuY3Bw) | `50% <50%> (-4.55%)` | :arrow_down: |
| ... and [2 more](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=footer). Last update [7527d9f...54a025b](https://codecov.io/gh/hyperledger/iroha/pull/692?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-12 00:59:20,2017-11-17 11:31:33
https://api.github.com/repos/hyperledger/iroha/issues/692,https://api.github.com/repos/hyperledger/iroha/issues/comments/343941028,https://github.com/hyperledger/iroha/pull/692#issuecomment-343941028,Warchant,@motxx don't forget to rebase it onto `origin/develop`,2017-11-13 14:47:26,2017-11-13 14:47:26
https://api.github.com/repos/hyperledger/iroha/issues/692,https://api.github.com/repos/hyperledger/iroha/issues/comments/345219926,https://github.com/hyperledger/iroha/pull/692#issuecomment-345219926,sorabot,"SonarQube analysis reported 35 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 12 minor
* ![INFO][INFO] 22 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L52](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/iroha-cli/main.cpp#L52): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [main.cpp#L40](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/iroha-cli/main.cpp#L40): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L42](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/iroha-cli/main.cpp#L42): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L43](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/iroha-cli/main.cpp#L43): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L45](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/iroha-cli/main.cpp#L45): Define a constant instead of duplicating this literal false 5 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L46](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/iroha-cli/main.cpp#L46): Define a constant instead of duplicating this literal ""Name of the account"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L53](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/iroha-cli/main.cpp#L53): Extract this magic number '50051' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [main.cpp#L54](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/iroha-cli/main.cpp#L54): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L99](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/iroha-cli/main.cpp#L99): Define a constant instead of duplicating this literal ""Json has wrong format."" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_generator.cpp#L115](https://github.com/hyperledger/iroha/blob/54a025b799d5e696a511ba6788c81487e6b32327/irohad/model/generators/impl/command_generator.cpp#L115): The function 'generateSubtractAssetQuantity' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-17 11:30:57,2017-11-17 11:30:57
https://api.github.com/repos/hyperledger/iroha/issues/691,https://api.github.com/repos/hyperledger/iroha/issues/comments/343871087,https://github.com/hyperledger/iroha/pull/691#issuecomment-343871087,kamilsa,please fix mac os build,2017-11-13 10:06:26,2017-11-13 10:06:26
https://api.github.com/repos/hyperledger/iroha/issues/691,https://api.github.com/repos/hyperledger/iroha/issues/comments/343908885,https://github.com/hyperledger/iroha/pull/691#issuecomment-343908885,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/691?src=pr&el=h1) Report
> Merging [#691](https://codecov.io/gh/hyperledger/iroha/pull/691?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/d1618bae95292ca9db52ca471f81f4d58e095b85?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `58.82%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/691/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/691?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #691   +/-   ##
=====================================================
  Coverage                 43.49%   43.49%           
=====================================================
  Files                       298      298           
  Lines                     12022    12022           
  Branches                   6599     6599           
=====================================================
  Hits                       5229     5229           
  Misses                      721      721           
  Partials                   6072     6072
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/691?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/shared\_model/lazy\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/691?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvc2hhcmVkX21vZGVsL2xhenlfdGVzdC5jcHA=) | `41.17% <37.5%> (ø)` | :arrow_up: |
| [shared\_model/utils/lazy\_initializer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/691?src=pr&el=tree#diff-c2hhcmVkX21vZGVsL3V0aWxzL2xhenlfaW5pdGlhbGl6ZXIuaHBw) | `80% <77.77%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/691?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/691?src=pr&el=footer). Last update [d1618ba...c422b3f](https://codecov.io/gh/hyperledger/iroha/pull/691?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-13 12:47:59,2017-11-21 10:40:40
https://api.github.com/repos/hyperledger/iroha/issues/690,https://api.github.com/repos/hyperledger/iroha/issues/comments/344082561,https://github.com/hyperledger/iroha/pull/690#issuecomment-344082561,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=h1) Report
> Merging [#690](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=desc) into [feature/mst-trunk](https://codecov.io/gh/hyperledger/iroha/commit/b0f49c80a2ee7ca9f92608a8395781e42dabcb0f?src=pr&el=desc) will **decrease** coverage by `0.17%`.
> The diff coverage is `30%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/690/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/mst-trunk     #690      +/-   ##
=====================================================
- Coverage               44.5%   44.33%   -0.18%     
=====================================================
  Files                    297      297              
  Lines                  11800    11870      +70     
  Branches                6285     6341      +56     
=====================================================
+ Hits                    5252     5262      +10     
- Misses                   756      760       +4     
- Partials                5792     5848      +56
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/operators/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL29wZXJhdG9ycy9oYXNoLmhwcA==) | `75% <ø> (ø)` | :arrow_up: |
| [...ulti\_sig\_transactions/storage/mst\_storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9tc3Rfc3RvcmFnZV9pbXBsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...had/torii/processor/transaction\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/multi\_sig\_transactions/mst\_processor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvbXN0X3Byb2Nlc3Nvci5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/multi\_sig\_transactions/state/mst\_state.hpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGUvbXN0X3N0YXRlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [...ohad/multi\_sig\_transactions/mst\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvbXN0X3Byb2Nlc3Nvcl9pbXBsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...had/multi\_sig\_transactions/storage/mst\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9tc3Rfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/torii/processor/transaction\_processor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3IuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/torii/impl/command\_service.cpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2ltcGwvY29tbWFuZF9zZXJ2aWNlLmNwcA==) | `46.15% <0%> (-2.83%)` | :arrow_down: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.11% <0%> (-1.5%)` | :arrow_down: |
| ... and [12 more](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=footer). Last update [b0f49c8...185e775](https://codecov.io/gh/hyperledger/iroha/pull/690?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-13 22:36:30,2017-11-19 23:19:34
https://api.github.com/repos/hyperledger/iroha/issues/690,https://api.github.com/repos/hyperledger/iroha/issues/comments/346776380,https://github.com/hyperledger/iroha/pull/690#issuecomment-346776380,sorabot,"SonarQube analysis reported 107 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 3 major
* ![MINOR][MINOR] 8 minor
* ![INFO][INFO] 95 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L256](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/main/application.cpp#L256): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [application.cpp#L39](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/main/application.cpp#L39): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.hpp#L67](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/main/application.hpp#L67): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [command_service.cpp#L40](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/torii/impl/command_service.cpp#L40): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [application.cpp#L4](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/main/application.cpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [application.cpp#L152](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/main/application.cpp#L152): Extract this magic number '10u' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [application.cpp#L155](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/main/application.cpp#L155): Extract this magic number '5000u' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [application.cpp#L224](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/main/application.cpp#L224): Extract this magic number '5' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [application.cpp#L225](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/main/application.cpp#L225): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [mst_storage_impl.hpp#L35](https://github.com/hyperledger/iroha/blob/5086866fbfc938b3455fb6b061cff4900c26ccbb/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L35): Unused private function: 'MstStorageStateImpl::getState' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-24 08:59:37,2017-11-24 08:59:37
https://api.github.com/repos/hyperledger/iroha/issues/689,https://api.github.com/repos/hyperledger/iroha/issues/comments/343860712,https://github.com/hyperledger/iroha/issues/689#issuecomment-343860712,Warchant,"If you'd write regexp for all rules, I could enable sonar rules to keep track of all names.",2017-11-13 09:27:30,2017-11-13 09:27:40
https://api.github.com/repos/hyperledger/iroha/issues/689,https://api.github.com/repos/hyperledger/iroha/issues/comments/343926153,https://github.com/hyperledger/iroha/issues/689#issuecomment-343926153,l4l,"Regexp is not really good idea (e.g how can you define that some T is function name and not variable?)
I think it would be nice to just run clang-format on all (changed) files",2017-11-13 13:57:25,2017-11-13 13:57:25
https://api.github.com/repos/hyperledger/iroha/issues/689,https://api.github.com/repos/hyperledger/iroha/issues/comments/343932208,https://github.com/hyperledger/iroha/issues/689#issuecomment-343932208,Warchant,"Sonar detects functions, variables, members, everything. I need to provide regexp only.",2017-11-13 14:19:13,2017-11-13 14:19:13
https://api.github.com/repos/hyperledger/iroha/issues/689,https://api.github.com/repos/hyperledger/iroha/issues/comments/358967074,https://github.com/hyperledger/iroha/issues/689#issuecomment-358967074,l4l,"Some regexpes are added/improved in [sonar](https://sonar.soramitsu.co.jp/coding_rules#qprofile=AV6BROZmKITu8lzV99Ce|activation=false), for now it's fine I think",2018-01-19 13:33:41,2018-01-19 13:33:41
https://api.github.com/repos/hyperledger/iroha/issues/688,https://api.github.com/repos/hyperledger/iroha/issues/comments/343449848,https://github.com/hyperledger/iroha/pull/688#issuecomment-343449848,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=h1) Report
> Merging [#688](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=desc) into [feature/yuna-storage](https://codecov.io/gh/hyperledger/iroha/commit/be22d6bd496b517147cb2c6000446126fa07024f?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `9.09%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/688/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/yuna-storage     #688      +/-   ##
========================================================
- Coverage                  42.9%   42.89%   -0.02%     
========================================================
  Files                       299      299              
  Lines                     12277    12283       +6     
  Branches                   6809     6815       +6     
========================================================
+ Hits                       5268     5269       +1     
  Misses                      735      735              
- Partials                   6274     6279       +5
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9hY2NvdW50LmhwcA==) | `25% <0%> (ø)` | :arrow_up: |
| [...had/model/converters/impl/json\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2NvbW1hbmRfZmFjdG9yeS5jcHA=) | `41.98% <0%> (-0.66%)` | :arrow_down: |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.5% <0%> (-0.02%)` | :arrow_down: |
| [irohad/model/impl/model\_operators.cpp](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvbW9kZWxfb3BlcmF0b3JzLmNwcA==) | `40% <50%> (+0.6%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=footer). Last update [be22d6b...bc922b6](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-10 11:30:05,2017-11-19 17:36:42
https://api.github.com/repos/hyperledger/iroha/issues/688,https://api.github.com/repos/hyperledger/iroha/issues/comments/345534719,https://github.com/hyperledger/iroha/pull/688#issuecomment-345534719,sorabot,"SonarQube analysis reported 59 issues
* ![MINOR][MINOR] 55 minor
* ![INFO][INFO] 4 info

#### Top 10 issues

1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L201](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L201): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L232](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L232): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L233](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L233): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L234](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L234): Extract this magic number '4' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L235](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L235): Extract this magic number '5' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L236](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L236): Extract this magic number '6' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L237](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L237): Extract this magic number '7' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L238](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L238): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L299](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L299): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L312](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L312): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-19 17:36:30,2017-11-19 17:36:30
https://api.github.com/repos/hyperledger/iroha/issues/687,https://api.github.com/repos/hyperledger/iroha/issues/comments/343122689,https://github.com/hyperledger/iroha/pull/687#issuecomment-343122689,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/687?src=pr&el=h1) Report
> Merging [#687](https://codecov.io/gh/hyperledger/iroha/pull/687?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/bf3ea987eb135f5264aa5c9e028bfbd6c51309e5?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/687/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/687?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #687   +/-   ##
=======================================
  Coverage     43.1%   43.1%           
=======================================
  Files          302     302           
  Lines        12324   12324           
  Branches      6826    6826           
=======================================
  Hits          5312    5312           
  Misses         713     713           
  Partials      6299    6299
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/687?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/687?src=pr&el=footer). Last update [bf3ea98...c065ab1](https://codecov.io/gh/hyperledger/iroha/pull/687?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-09 11:08:45,2017-11-09 12:53:13
https://api.github.com/repos/hyperledger/iroha/issues/687,https://api.github.com/repos/hyperledger/iroha/issues/comments/343150402,https://github.com/hyperledger/iroha/pull/687#issuecomment-343150402,l4l,"Thanks for your contribution!
Unfortunately these are deprecated examples and will be removed [here](https://github.com/hyperledger/iroha/pull/686) soon",2017-11-09 13:13:23,2017-11-09 13:14:07
https://api.github.com/repos/hyperledger/iroha/issues/686,https://api.github.com/repos/hyperledger/iroha/issues/comments/343127353,https://github.com/hyperledger/iroha/pull/686#issuecomment-343127353,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/686?src=pr&el=h1) Report
> Merging [#686](https://codecov.io/gh/hyperledger/iroha/pull/686?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/bf3ea987eb135f5264aa5c9e028bfbd6c51309e5?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/686/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/686?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #686      +/-   ##
===========================================
+ Coverage     43.1%   43.11%   +0.01%     
===========================================
  Files          302      302              
  Lines        12324    12308      -16     
  Branches      6826     6815      -11     
===========================================
- Hits          5312     5307       -5     
  Misses         713      713              
+ Partials      6299     6288      -11
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/686?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/686?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `2.08% <0%> (-5.86%)` | :arrow_down: |
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/686?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `36.87% <0%> (-0.45%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/686?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/686?src=pr&el=footer). Last update [bf3ea98...77a4edf](https://codecov.io/gh/hyperledger/iroha/pull/686?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-09 11:30:00,2017-11-12 07:23:14
https://api.github.com/repos/hyperledger/iroha/issues/686,https://api.github.com/repos/hyperledger/iroha/issues/comments/343462600,https://github.com/hyperledger/iroha/pull/686#issuecomment-343462600,Warchant,@kamilsa fixed DCO.,2017-11-10 12:36:19,2017-11-10 12:36:19
https://api.github.com/repos/hyperledger/iroha/issues/685,https://api.github.com/repos/hyperledger/iroha/issues/comments/343141752,https://github.com/hyperledger/iroha/pull/685#issuecomment-343141752,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/685?src=pr&el=h1) Report
> Merging [#685](https://codecov.io/gh/hyperledger/iroha/pull/685?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/bf3ea987eb135f5264aa5c9e028bfbd6c51309e5?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/685/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/685?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #685   +/-   ##
=======================================
  Coverage     43.1%   43.1%           
=======================================
  Files          302     302           
  Lines        12324   12324           
  Branches      6826    6826           
=======================================
  Hits          5312    5312           
  Misses         713     713           
  Partials      6299    6299
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/685?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/685?src=pr&el=footer). Last update [bf3ea98...6864925](https://codecov.io/gh/hyperledger/iroha/pull/685?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-09 12:36:17,2017-11-09 12:44:52
https://api.github.com/repos/hyperledger/iroha/issues/685,https://api.github.com/repos/hyperledger/iroha/issues/comments/343736002,https://github.com/hyperledger/iroha/pull/685#issuecomment-343736002,lebdron,https://github.com/hyperledger/iroha/pull/664 seems to fix the issue. This pull request can be reopened if the issue will reappear.,2017-11-12 13:06:10,2017-11-12 13:06:10
https://api.github.com/repos/hyperledger/iroha/issues/684,https://api.github.com/repos/hyperledger/iroha/issues/comments/343072847,https://github.com/hyperledger/iroha/pull/684#issuecomment-343072847,muratovv,"Nice fix, thank you!",2017-11-09 07:45:29,2017-11-09 07:45:29
https://api.github.com/repos/hyperledger/iroha/issues/682,https://api.github.com/repos/hyperledger/iroha/issues/comments/342430101,https://github.com/hyperledger/iroha/pull/682#issuecomment-342430101,sorabot,"SonarQube analysis reported 4 issues

1. ![MINOR][MINOR] [redis_block_query.hpp#L60](https://github.com/hyperledger/iroha/blob/d56517cf9fdc4467ab044f78ada1903eea0adcbd/irohad/ametsuchi/impl/redis_block_query.hpp#L60): Unused private function: 'RedisBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L68](https://github.com/hyperledger/iroha/blob/d56517cf9fdc4467ab044f78ada1903eea0adcbd/irohad/ametsuchi/impl/redis_block_query.hpp#L68): Unused private function: 'RedisBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L78](https://github.com/hyperledger/iroha/blob/d56517cf9fdc4467ab044f78ada1903eea0adcbd/irohad/ametsuchi/impl/redis_block_query.hpp#L78): Unused private function: 'RedisBlockQuery::callbackToLrange' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![INFO][INFO] [redis_block_query.hpp#L36](https://github.com/hyperledger/iroha/blob/d56517cf9fdc4467ab044f78ada1903eea0adcbd/irohad/ametsuchi/impl/redis_block_query.hpp#L36): Undocumented API: RedisBlockQuery [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-07 09:49:02,2017-11-07 09:49:02
https://api.github.com/repos/hyperledger/iroha/issues/682,https://api.github.com/repos/hyperledger/iroha/issues/comments/342430264,https://github.com/hyperledger/iroha/pull/682#issuecomment-342430264,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=h1) Report
> Merging [#682](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1289c3d9fa502fcd28c0e8afd3f09ec192d6c6e9?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `35.29%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/682/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #682      +/-   ##
===========================================
- Coverage    43.17%   43.16%   -0.01%     
===========================================
  Files          301      301              
  Lines        12267    12280      +13     
  Branches      6785     6793       +8     
===========================================
+ Hits          5296     5301       +5     
  Misses         713      713              
- Partials      6258     6266       +8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/redis\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `16.5% <33.33%> (+0.47%)` | :arrow_up: |
| [irohad/ametsuchi/impl/redis\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `36.53% <50%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=footer). Last update [1289c3d...d56517c](https://codecov.io/gh/hyperledger/iroha/pull/682?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-07 09:49:40,2017-11-07 09:49:40
https://api.github.com/repos/hyperledger/iroha/issues/682,https://api.github.com/repos/hyperledger/iroha/issues/comments/342511298,https://github.com/hyperledger/iroha/pull/682#issuecomment-342511298,kamilsa,"Seems that this PR does the same as #671, but achieves it in the other way",2017-11-07 15:08:03,2017-11-07 15:08:03
https://api.github.com/repos/hyperledger/iroha/issues/682,https://api.github.com/repos/hyperledger/iroha/issues/comments/342677361,https://github.com/hyperledger/iroha/pull/682#issuecomment-342677361,cimadai,"@kamilsa Thank you for your comment.

In my opinion, the value for the account_id as key should contain that not only block_id but also tx_id.

Because, currently block_ids contained in redis look same duplicated number, but they are information from another txs.
So the value should be unique information like `{block_id}:{tx_id}`.

If the value become unique, we can fetch tx with limit number like pagination.

I think that is correct that not to `sadd block_id` to redis but to `rpush block_id and tx_id` to redis for fetch with limit.

What do you think?",2017-11-08 01:12:56,2017-11-08 01:12:56
https://api.github.com/repos/hyperledger/iroha/issues/682,https://api.github.com/repos/hyperledger/iroha/issues/comments/342765803,https://github.com/hyperledger/iroha/pull/682#issuecomment-342765803,cimadai,"https://github.com/hyperledger/iroha/pull/671 is merged.
So this PR is no more needed.",2017-11-08 09:49:48,2017-11-08 09:49:48
https://api.github.com/repos/hyperledger/iroha/issues/681,https://api.github.com/repos/hyperledger/iroha/issues/comments/342377353,https://github.com/hyperledger/iroha/pull/681#issuecomment-342377353,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/681?src=pr&el=h1) Report
> Merging [#681](https://codecov.io/gh/hyperledger/iroha/pull/681?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/147903c9297426c2dc6cd62aeed5153d9beff278?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `13.51%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/681/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/681?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #681      +/-   ##
==========================================
- Coverage    43.11%   43.1%   -0.02%     
==========================================
  Files          302     302              
  Lines        12308   12324      +16     
  Branches      6815    6826      +11     
==========================================
+ Hits          5307    5312       +5     
  Misses         713     713              
- Partials      6288    6299      +11
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/681?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/681?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `37.32% <100%> (+0.44%)` | :arrow_up: |
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/681?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `7.93% <11.11%> (+5.85%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/681?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/681?src=pr&el=footer). Last update [147903c...046fc4c](https://codecov.io/gh/hyperledger/iroha/pull/681?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-07 05:09:45,2017-11-08 09:57:24
https://api.github.com/repos/hyperledger/iroha/issues/681,https://api.github.com/repos/hyperledger/iroha/issues/comments/342418033,https://github.com/hyperledger/iroha/pull/681#issuecomment-342418033,cimadai,"OK, I'll add test.
",2017-11-07 09:03:19,2017-11-07 09:03:19
https://api.github.com/repos/hyperledger/iroha/issues/681,https://api.github.com/repos/hyperledger/iroha/issues/comments/342442373,https://github.com/hyperledger/iroha/pull/681#issuecomment-342442373,cimadai,Added one test. please check it~,2017-11-07 10:37:21,2017-11-07 10:37:21
https://api.github.com/repos/hyperledger/iroha/issues/679,https://api.github.com/repos/hyperledger/iroha/issues/comments/342375383,https://github.com/hyperledger/iroha/pull/679#issuecomment-342375383,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/679?src=pr&el=h1) Report
> Merging [#679](https://codecov.io/gh/hyperledger/iroha/pull/679?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1289c3d9fa502fcd28c0e8afd3f09ec192d6c6e9?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/679/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/679?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #679      +/-   ##
===========================================
+ Coverage    43.17%   43.17%   +<.01%     
===========================================
  Files          301      301              
  Lines        12267    12268       +1     
  Branches      6785     6785              
===========================================
+ Hits          5296     5297       +1     
  Misses         713      713              
  Partials      6258     6258
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/679?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/679?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `37.32% <100%> (+0.44%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/679?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/679?src=pr&el=footer). Last update [1289c3d...04d26ec](https://codecov.io/gh/hyperledger/iroha/pull/679?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-07 04:53:56,2017-11-07 04:53:56
https://api.github.com/repos/hyperledger/iroha/issues/678,https://api.github.com/repos/hyperledger/iroha/issues/comments/342099334,https://github.com/hyperledger/iroha/pull/678#issuecomment-342099334,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`feature/yuna-storage@026f41b`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `22.01%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/678/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree)

```diff
@@                   Coverage Diff                   @@
##             feature/yuna-storage     #678   +/-   ##
=======================================================
  Coverage                        ?   43.03%           
=======================================================
  Files                           ?      298           
  Lines                           ?    12205           
  Branches                        ?     6756           
=======================================================
  Hits                            ?     5252           
  Misses                          ?      729           
  Partials                        ?     6224
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/ametsuchi/wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfY29tbWFuZC5ocHA=) | `50% <ø> (ø)` | |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <0%> (ø)` | |
| [test/module/irohad/model/static\_map.cpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL3N0YXRpY19tYXAuY3Bw) | `0% <0%> (ø)` | |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `14.4% <0%> (ø)` | |
| [.../model/execution/impl/command\_executor\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3JfZmFjdG9yeS5jcHA=) | `17.24% <0%> (ø)` | |
| [irohad/model/registration/command\_registration.hpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3JlZ2lzdHJhdGlvbi9jb21tYW5kX3JlZ2lzdHJhdGlvbi5ocHA=) | `12.5% <0%> (ø)` | |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `14% <53.33%> (ø)` | |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `41.4% <60%> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `30.65% <7.4%> (ø)` | |
| ... and [1 more](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=footer). Last update [026f41b...ea66424](https://codecov.io/gh/hyperledger/iroha/pull/678?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-06 09:56:42,2017-11-08 12:37:11
https://api.github.com/repos/hyperledger/iroha/issues/678,https://api.github.com/repos/hyperledger/iroha/issues/comments/342260577,https://github.com/hyperledger/iroha/pull/678#issuecomment-342260577,l4l,Look at sorabot's advices as well please,2017-11-06 19:34:01,2017-11-06 19:34:01
https://api.github.com/repos/hyperledger/iroha/issues/678,https://api.github.com/repos/hyperledger/iroha/issues/comments/342805139,https://github.com/hyperledger/iroha/pull/678#issuecomment-342805139,sorabot,"SonarQube analysis reported 51 issues
* ![MINOR][MINOR] 10 minor
* ![INFO][INFO] 41 info

#### Top 10 issues

1. ![MINOR][MINOR] [postgres_wsv_command.cpp#L36](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/irohad/ametsuchi/impl/postgres_wsv_command.cpp#L36): Define a constant instead of duplicating this literal false 17 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L120](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/irohad/model/execution/impl/command_executor.cpp#L120): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L136](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/irohad/model/execution/impl/command_executor.cpp#L136): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L240](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/irohad/model/execution/impl/command_executor.cpp#L240): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L376](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/irohad/model/execution/impl/command_executor.cpp#L376): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L418](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/irohad/model/execution/impl/command_executor.cpp#L418): Extract this magic number '10' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L458](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/irohad/model/execution/impl/command_executor.cpp#L458): Extract this magic number '10' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L590](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/irohad/model/execution/impl/command_executor.cpp#L590): Extract this magic number '10' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L607](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/irohad/model/execution/impl/command_executor.cpp#L607): Define a constant instead of duplicating this literal ""asset {} is absent of {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L271](https://github.com/hyperledger/iroha/blob/ea664248db936b25b081dc90ea0f80b3e3b95071/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L271): Variable 'permittee_account' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-08 12:36:59,2017-11-08 12:36:59
https://api.github.com/repos/hyperledger/iroha/issues/677,https://api.github.com/repos/hyperledger/iroha/issues/comments/341876319,https://github.com/hyperledger/iroha/pull/677#issuecomment-341876319,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/677?src=pr&el=h1) Report
> Merging [#677](https://codecov.io/gh/hyperledger/iroha/pull/677?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/89af7617cb9600542141452aaabae6339cdf6eef?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/677/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/677?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/shared_model     #677      +/-   ##
========================================================
+ Coverage                 43.45%   43.46%   +<.01%     
========================================================
  Files                       297      296       -1     
  Lines                     12002    11995       -7     
  Branches                   6591     6586       -5     
========================================================
- Hits                       5216     5214       -2     
  Misses                      721      721              
+ Partials                   6065     6060       -5
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/677?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/model/static\_map.cpp](https://codecov.io/gh/hyperledger/iroha/pull/677?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL3N0YXRpY19tYXAuY3Bw) | `0% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/677?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/677?src=pr&el=footer). Last update [89af761...ce1cc9f](https://codecov.io/gh/hyperledger/iroha/pull/677?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-04 06:45:16,2017-11-06 07:25:26
https://api.github.com/repos/hyperledger/iroha/issues/676,https://api.github.com/repos/hyperledger/iroha/issues/comments/341692702,https://github.com/hyperledger/iroha/pull/676#issuecomment-341692702,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=h1) Report
> Merging [#676](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/037ab0fac7ca35a642b56dd8ce2a576ed8b15c68?src=pr&el=desc) will **increase** coverage by `0.03%`.
> The diff coverage is `35%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/676/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #676      +/-   ##
===========================================
+ Coverage    43.08%   43.11%   +0.03%     
===========================================
  Files          301      299       -2     
  Lines        12274    12250      -24     
  Branches      6793     6782      -11     
===========================================
- Hits          5288     5282       -6     
+ Misses         731      712      -19     
- Partials      6255     6256       +1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `16.03% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `27.81% <0%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/redis\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmhwcA==) | `0% <0%> (ø)` | |
| [irohad/ametsuchi/impl/redis\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `37.14% <36.84%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=footer). Last update [037ab0f...2080501](https://codecov.io/gh/hyperledger/iroha/pull/676?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-03 12:41:55,2017-11-04 08:49:25
https://api.github.com/repos/hyperledger/iroha/issues/676,https://api.github.com/repos/hyperledger/iroha/issues/comments/341881536,https://github.com/hyperledger/iroha/pull/676#issuecomment-341881536,sorabot,"SonarQube analysis reported 8 issues

1. ![MAJOR][MAJOR] [storage_impl.cpp#L30](https://github.com/hyperledger/iroha/blob/2080501953149bb2f03bff7300ec0152cf58e670/irohad/ametsuchi/impl/storage_impl.cpp#L30): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [redis_block_query.hpp#L60](https://github.com/hyperledger/iroha/blob/2080501953149bb2f03bff7300ec0152cf58e670/irohad/ametsuchi/impl/redis_block_query.hpp#L60): Unused private function: 'RedisBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L68](https://github.com/hyperledger/iroha/blob/2080501953149bb2f03bff7300ec0152cf58e670/irohad/ametsuchi/impl/redis_block_query.hpp#L68): Unused private function: 'RedisBlockQuery::getBlockId' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_block_query.hpp#L78](https://github.com/hyperledger/iroha/blob/2080501953149bb2f03bff7300ec0152cf58e670/irohad/ametsuchi/impl/redis_block_query.hpp#L78): Unused private function: 'RedisBlockQuery::callbackToLrange' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [storage_impl.cpp#L58](https://github.com/hyperledger/iroha/blob/2080501953149bb2f03bff7300ec0152cf58e670/irohad/ametsuchi/impl/storage_impl.cpp#L58): Define a constant instead of duplicating this literal ""Cannot create CommandExecutorFactory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L67](https://github.com/hyperledger/iroha/blob/2080501953149bb2f03bff7300ec0152cf58e670/irohad/ametsuchi/impl/storage_impl.cpp#L67): Define a constant instead of duplicating this literal ""Connection to PostgreSQL broken: {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L71](https://github.com/hyperledger/iroha/blob/2080501953149bb2f03bff7300ec0152cf58e670/irohad/ametsuchi/impl/storage_impl.cpp#L71): Define a constant instead of duplicating this literal ""TemporaryWsv"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [redis_block_query.hpp#L36](https://github.com/hyperledger/iroha/blob/2080501953149bb2f03bff7300ec0152cf58e670/irohad/ametsuchi/impl/redis_block_query.hpp#L36): Undocumented API: RedisBlockQuery [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-04 08:49:10,2017-11-04 08:49:10
https://api.github.com/repos/hyperledger/iroha/issues/675,https://api.github.com/repos/hyperledger/iroha/issues/comments/342121059,https://github.com/hyperledger/iroha/pull/675#issuecomment-342121059,Warchant,Is it still WIP?,2017-11-06 11:25:20,2017-11-06 11:25:20
https://api.github.com/repos/hyperledger/iroha/issues/674,https://api.github.com/repos/hyperledger/iroha/issues/comments/341658321,https://github.com/hyperledger/iroha/issues/674#issuecomment-341658321,prajithparan,"However I can see the file in my PC
/home/test-pc/iroha/external/src/google_protobuf/src/google/protobuf/empty.proto
Could be an issue with makefile creation",2017-11-03 09:45:52,2017-11-03 09:45:52
https://api.github.com/repos/hyperledger/iroha/issues/674,https://api.github.com/repos/hyperledger/iroha/issues/comments/341658685,https://github.com/hyperledger/iroha/issues/674#issuecomment-341658685,prajithparan,Or may be some environment settings... I forgot to mention,2017-11-03 09:47:39,2017-11-03 09:47:39
https://api.github.com/repos/hyperledger/iroha/issues/674,https://api.github.com/repos/hyperledger/iroha/issues/comments/341689854,https://github.com/hyperledger/iroha/issues/674#issuecomment-341689854,neewy,"which branch are you trying to build? develop?
which version of protobuf are you using to build Iroha?",2017-11-03 12:27:09,2017-11-03 12:27:09
https://api.github.com/repos/hyperledger/iroha/issues/674,https://api.github.com/repos/hyperledger/iroha/issues/comments/341690483,https://github.com/hyperledger/iroha/issues/674#issuecomment-341690483,neewy,"please, also clean up proto generated classes, using script clean.sh",2017-11-03 12:30:20,2017-11-03 12:30:20
https://api.github.com/repos/hyperledger/iroha/issues/674,https://api.github.com/repos/hyperledger/iroha/issues/comments/341730479,https://github.com/hyperledger/iroha/issues/674#issuecomment-341730479,prajithparan,"test-pc@testpc-ThinkPad-T410:~$ protoc --version
**libprotoc 2.6.1**
Im trying to build full irohad by using the git download.
I used the following commands
https://github.com/hyperledger/iroha/blob/master/docs/how_to_build.rst



",2017-11-03 15:08:04,2017-11-03 15:08:04
https://api.github.com/repos/hyperledger/iroha/issues/674,https://api.github.com/repos/hyperledger/iroha/issues/comments/341879836,https://github.com/hyperledger/iroha/issues/674#issuecomment-341879836,neewy,please use development branch for now and follow https://hyperledger.github.io/iroha-api/#build,2017-11-04 08:11:52,2017-11-04 08:11:52
https://api.github.com/repos/hyperledger/iroha/issues/674,https://api.github.com/repos/hyperledger/iroha/issues/comments/341879887,https://github.com/hyperledger/iroha/issues/674#issuecomment-341879887,Warchant,"Currently we are on a way of big changes and the latest branch is `develop`.
Try to install all dependencies as in `docker/develop/Dockerfile`. Then, iroha easily can be built.

Or, you can just use prebuilt image with 
`sh scripts/run-iroha-dev.sh`",2017-11-04 08:13:08,2017-11-04 08:13:08
https://api.github.com/repos/hyperledger/iroha/issues/674,https://api.github.com/repos/hyperledger/iroha/issues/comments/342404118,https://github.com/hyperledger/iroha/issues/674#issuecomment-342404118,prajithparan,"Thanks a lot . Let  me know when the new build is ready.
With docker is working ",2017-11-07 08:00:41,2017-11-07 08:00:41
https://api.github.com/repos/hyperledger/iroha/issues/673,https://api.github.com/repos/hyperledger/iroha/issues/comments/341656838,https://github.com/hyperledger/iroha/pull/673#issuecomment-341656838,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=h1) Report
> Merging [#673](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7527d9fc8071c4e800c97f62f3a1862e6e98019a?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `18.51%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/673/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #673      +/-   ##
===========================================
- Coverage    42.98%   42.96%   -0.02%     
===========================================
  Files          304      305       +1     
  Lines        12395    12424      +29     
  Branches      6882     6893      +11     
===========================================
+ Hits          5328     5338      +10     
+ Misses         714      708       -6     
- Partials      6353     6378      +25
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ohad/consensus/yac/transport/impl/network\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/yac.hpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMveWFjLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [.../consensus/yac/transport/yac\_network\_interface.hpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L3lhY19uZXR3b3JrX2ludGVyZmFjZS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/consensus\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9jb25zZW5zdXNfaW5pdC5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/consensus/yac/yac\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX21vY2tzLmhwcA==) | `47.05% <0%> (ø)` | :arrow_up: |
| [test/integration/consensus/consensus\_sunny\_day.cpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jb25zZW5zdXMvY29uc2Vuc3VzX3N1bm55X2RheS5jcHA=) | `39.43% <0%> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `54.54% <0%> (ø)` | :arrow_up: |
| [...module/irohad/consensus/yac/yac\_sunny\_day\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX3N1bm55X2RheV90ZXN0LmNwcA==) | `19.14% <0%> (ø)` | :arrow_up: |
| [...ohad/consensus/yac/transport/impl/network\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmNwcA==) | `25% <0%> (+3.49%)` | :arrow_up: |
| [test/module/irohad/consensus/yac/network\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvbmV0d29ya190ZXN0LmNwcA==) | `16% <16%> (+8.59%)` | :arrow_up: |
| ... and [5 more](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=footer). Last update [7527d9f...01c0048](https://codecov.io/gh/hyperledger/iroha/pull/673?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-03 09:38:17,2017-11-17 12:05:29
https://api.github.com/repos/hyperledger/iroha/issues/673,https://api.github.com/repos/hyperledger/iroha/issues/comments/345226603,https://github.com/hyperledger/iroha/pull/673#issuecomment-345226603,sorabot,"SonarQube analysis reported 27 issues
* ![CRITICAL][CRITICAL] 2 critical
* ![MAJOR][MAJOR] 7 major
* ![MINOR][MINOR] 2 minor
* ![INFO][INFO] 16 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L209](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/main/application.cpp#L209): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L213](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/main/application.cpp#L213): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [yac.cpp#L47](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/consensus/yac/impl/yac.cpp#L47): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.cpp#L57](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/consensus/yac/impl/yac.cpp#L57): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.hpp#L47](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/consensus/yac/yac.hpp#L47): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.hpp#L54](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/consensus/yac/yac.hpp#L54): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/main/application.cpp#L31): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [consensus_init.cpp#L68](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/main/impl/consensus_init.cpp#L68): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [consensus_init.hpp#L61](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/main/impl/consensus_init.hpp#L61): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.cpp#L211](https://github.com/hyperledger/iroha/blob/01c0048874209be6673e6ce96e7e3536d1350a50/irohad/consensus/yac/impl/yac.cpp#L211): Define a constant instead of duplicating this literal ""Reject case on hash {} achieved"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-17 12:04:49,2017-11-17 12:04:49
https://api.github.com/repos/hyperledger/iroha/issues/672,https://api.github.com/repos/hyperledger/iroha/issues/comments/341632928,https://github.com/hyperledger/iroha/pull/672#issuecomment-341632928,muratovv,"Also, need to add data commands to variant from Command class.",2017-11-03 06:57:37,2017-11-03 06:57:37
https://api.github.com/repos/hyperledger/iroha/issues/672,https://api.github.com/repos/hyperledger/iroha/issues/comments/341671561,https://github.com/hyperledger/iroha/pull/672#issuecomment-341671561,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/672?src=pr&el=h1) Report
> Merging [#672](https://codecov.io/gh/hyperledger/iroha/pull/672?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/8826336d92eb1cc1bed500097aa46ae7d26b7a38?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/672/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/672?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #672   +/-   ##
=====================================================
  Coverage                 43.46%   43.46%           
=====================================================
  Files                       296      296           
  Lines                     11995    11995           
  Branches                   6586     6586           
=====================================================
  Hits                       5214     5214           
  Misses                      721      721           
  Partials                   6060     6060
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/672?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/672?src=pr&el=footer). Last update [8826336...d55a29e](https://codecov.io/gh/hyperledger/iroha/pull/672?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-03 10:49:44,2017-11-07 04:46:40
https://api.github.com/repos/hyperledger/iroha/issues/672,https://api.github.com/repos/hyperledger/iroha/issues/comments/342193893,https://github.com/hyperledger/iroha/pull/672#issuecomment-342193893,l4l,"+1 @Warchant
Though `new` have been used for a while in all shared_model trunk. Still maybe there're some reasons for that",2017-11-06 15:59:39,2017-11-06 15:59:39
https://api.github.com/repos/hyperledger/iroha/issues/672,https://api.github.com/repos/hyperledger/iroha/issues/comments/342196284,https://github.com/hyperledger/iroha/pull/672#issuecomment-342196284,Warchant,@l4l I did a quick search by `feature/shared_model` and did not find any unsafe `new` occurrences like in this PR. ,2017-11-06 16:06:52,2017-11-06 16:06:52
https://api.github.com/repos/hyperledger/iroha/issues/672,https://api.github.com/repos/hyperledger/iroha/issues/comments/342198198,https://github.com/hyperledger/iroha/pull/672#issuecomment-342198198,l4l,[Here](https://github.com/hyperledger/iroha/blob/feature/shared_model/shared_model/interfaces/common_objects/signature.hpp#L63)'s the first occurence,2017-11-06 16:12:37,2017-11-06 16:12:37
https://api.github.com/repos/hyperledger/iroha/issues/672,https://api.github.com/repos/hyperledger/iroha/issues/comments/342199051,https://github.com/hyperledger/iroha/pull/672#issuecomment-342199051,Warchant,:scream: that's memory leak again. Should be fixed @muratovv @luckychess ,2017-11-06 16:15:03,2017-11-06 16:15:03
https://api.github.com/repos/hyperledger/iroha/issues/672,https://api.github.com/repos/hyperledger/iroha/issues/comments/342199932,https://github.com/hyperledger/iroha/pull/672#issuecomment-342199932,l4l,"Well, just by itself it's not a memory leak. And it's even doesn't intended to be used (and hopefully will be removed with old models asap)",2017-11-06 16:17:37,2017-11-06 16:17:37
https://api.github.com/repos/hyperledger/iroha/issues/672,https://api.github.com/repos/hyperledger/iroha/issues/comments/342200359,https://github.com/hyperledger/iroha/pull/672#issuecomment-342200359,Warchant,"If caller forgets to delete old model, then it is a memory leak. 
I am pretty sure you would never ever delete that pointer manually.",2017-11-06 16:18:55,2017-11-06 16:18:55
https://api.github.com/repos/hyperledger/iroha/issues/671,https://api.github.com/repos/hyperledger/iroha/issues/comments/342513191,https://github.com/hyperledger/iroha/pull/671#issuecomment-342513191,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=h1) Report
> Merging [#671](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1289c3d9fa502fcd28c0e8afd3f09ec192d6c6e9?src=pr&el=desc) will **decrease** coverage by `0.05%`.
> The diff coverage is `27.9%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/671/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #671      +/-   ##
===========================================
- Coverage    43.17%   43.11%   -0.06%     
===========================================
  Files          301      302       +1     
  Lines        12267    12308      +41     
  Branches      6785     6815      +30     
===========================================
+ Hits          5296     5307      +11     
  Misses         713      713              
- Partials      6258     6288      +30
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `44.82% <0%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/redis\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2Jsb2NrX3F1ZXJ5LmNwcA==) | `36.53% <100%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `26.82% <26.82%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=footer). Last update [1289c3d...27a81b1](https://codecov.io/gh/hyperledger/iroha/pull/671?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-07 15:13:55,2017-11-08 09:19:26
https://api.github.com/repos/hyperledger/iroha/issues/669,https://api.github.com/repos/hyperledger/iroha/issues/comments/341415343,https://github.com/hyperledger/iroha/issues/669#issuecomment-341415343,kamilsa,"Hello! Thanks for sharing with us your problem.

Iroha can install all dependencies itself using cmake. So you might try to remove cpp_redis completely from your system and install iroha following steps from [this](https://hyperledger.github.io/iroha-api/#build) tutorial. 
If you want to install cpp_redis into your system you can checkout the on the same commit of cpp_redis that we use in cmake [here](https://github.com/hyperledger/iroha/blob/develop/cmake/Modules/Findcpp_redis.cmake). There you can find that the cpp_redis's commit hash is `727aa5f06c8ce498168cbab5a023cad5b9c00bc0` and tacopie's commit hash is `290dc38681f346adae41d3cc8feabbe534424675`

",2017-11-02 13:08:11,2017-11-02 13:08:11
https://api.github.com/repos/hyperledger/iroha/issues/669,https://api.github.com/repos/hyperledger/iroha/issues/comments/341604046,https://github.com/hyperledger/iroha/issues/669#issuecomment-341604046,haojun,"Thanks, the installation succeeds with those commit version",2017-11-03 01:30:46,2017-11-03 01:30:46
https://api.github.com/repos/hyperledger/iroha/issues/668,https://api.github.com/repos/hyperledger/iroha/issues/comments/341349990,https://github.com/hyperledger/iroha/pull/668#issuecomment-341349990,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/668?src=pr&el=h1) Report
> Merging [#668](https://codecov.io/gh/hyperledger/iroha/pull/668?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/9ca6b94dc8beb164d06e752f5bed5e06c1e57615?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/668/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/668?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #668   +/-   ##
=====================================================
  Coverage                 43.45%   43.45%           
=====================================================
  Files                       297      297           
  Lines                     12002    12002           
  Branches                   6591     6591           
=====================================================
  Hits                       5216     5216           
  Misses                      721      721           
  Partials                   6065     6065
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/668?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/668?src=pr&el=footer). Last update [9ca6b94...aa785d4](https://codecov.io/gh/hyperledger/iroha/pull/668?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-02 08:27:56,2017-11-02 11:19:19
https://api.github.com/repos/hyperledger/iroha/issues/667,https://api.github.com/repos/hyperledger/iroha/issues/comments/341042288,https://github.com/hyperledger/iroha/pull/667#issuecomment-341042288,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/667?src=pr&el=h1) Report
> Merging [#667](https://codecov.io/gh/hyperledger/iroha/pull/667?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/f75232c153da85bd52944610fea3cac9dd07372a?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/667/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/667?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #667   +/-   ##
=====================================================
  Coverage                 43.45%   43.45%           
=====================================================
  Files                       297      297           
  Lines                     12002    12002           
  Branches                   6591     6591           
=====================================================
  Hits                       5216     5216           
  Misses                      721      721           
  Partials                   6065     6065
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/667?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/667?src=pr&el=footer). Last update [f75232c...22fbf7e](https://codecov.io/gh/hyperledger/iroha/pull/667?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-01 09:04:43,2017-11-02 10:28:13
https://api.github.com/repos/hyperledger/iroha/issues/666,https://api.github.com/repos/hyperledger/iroha/issues/comments/341105697,https://github.com/hyperledger/iroha/issues/666#issuecomment-341105697,l4l,"It seems that you're using old protobuf, just update it",2017-11-01 13:27:39,2017-11-01 13:27:39
https://api.github.com/repos/hyperledger/iroha/issues/666,https://api.github.com/repos/hyperledger/iroha/issues/comments/341351330,https://github.com/hyperledger/iroha/issues/666#issuecomment-341351330,neewy,@prajithparan have you checked your proto version?,2017-11-02 08:34:06,2017-11-02 08:51:49
https://api.github.com/repos/hyperledger/iroha/issues/666,https://api.github.com/repos/hyperledger/iroha/issues/comments/341655268,https://github.com/hyperledger/iroha/issues/666#issuecomment-341655268,prajithparan,"I have removed both protoc versions (2&3) and did a clean build from scratch and works fine
Thanks a lot for your help.",2017-11-03 09:30:57,2017-11-03 09:30:57
https://api.github.com/repos/hyperledger/iroha/issues/665,https://api.github.com/repos/hyperledger/iroha/issues/comments/340965387,https://github.com/hyperledger/iroha/pull/665#issuecomment-340965387,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/665?src=pr&el=h1) Report
> Merging [#665](https://codecov.io/gh/hyperledger/iroha/pull/665?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/d77bf20f46392cdebb7a7be3c77ed46e17b5765e?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/665/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/665?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #665   +/-   ##
=====================================================
  Coverage                 43.49%   43.49%           
=====================================================
  Files                       298      298           
  Lines                     12022    12022           
  Branches                   6599     6599           
=====================================================
  Hits                       5229     5229           
  Misses                      721      721           
  Partials                   6072     6072
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/665?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/665?src=pr&el=footer). Last update [d77bf20...a5e7dab](https://codecov.io/gh/hyperledger/iroha/pull/665?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-01 03:04:12,2017-11-09 12:57:58
https://api.github.com/repos/hyperledger/iroha/issues/665,https://api.github.com/repos/hyperledger/iroha/issues/comments/342780479,https://github.com/hyperledger/iroha/pull/665#issuecomment-342780479,l4l,"@motxx plz, don't merge; [rebase](https://soramitsu.atlassian.net/wiki/spaces/IS/pages/11173889/Rebase+and+merge+guide) instead",2017-11-08 10:46:59,2017-11-08 10:46:59
https://api.github.com/repos/hyperledger/iroha/issues/664,https://api.github.com/repos/hyperledger/iroha/issues/comments/340508948,https://github.com/hyperledger/iroha/pull/664#issuecomment-340508948,Warchant,"I added new step `build-linux-release`, which produces `.deb`, after which `dockerize` step is executed.",2017-10-30 16:51:33,2017-10-30 16:51:33
https://api.github.com/repos/hyperledger/iroha/issues/664,https://api.github.com/repos/hyperledger/iroha/issues/comments/340509445,https://github.com/hyperledger/iroha/pull/664#issuecomment-340509445,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/664?src=pr&el=h1) Report
> Merging [#664](https://codecov.io/gh/hyperledger/iroha/pull/664?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/8e7ce1927a3d67a5143c68164d470902b35b3347?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/664/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/664?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #664   +/-   ##
=======================================
  Coverage     43.1%   43.1%           
=======================================
  Files          302     302           
  Lines        12324   12324           
  Branches      6826    6826           
=======================================
  Hits          5312    5312           
  Misses         713     713           
  Partials      6299    6299
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/664?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/664?src=pr&el=footer). Last update [8e7ce19...a3249e9](https://codecov.io/gh/hyperledger/iroha/pull/664?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-30 16:53:12,2017-11-13 05:20:30
https://api.github.com/repos/hyperledger/iroha/issues/664,https://api.github.com/repos/hyperledger/iroha/issues/comments/343719223,https://github.com/hyperledger/iroha/pull/664#issuecomment-343719223,neewy,@lebdron please review,2017-11-12 07:38:55,2017-11-12 07:38:55
https://api.github.com/repos/hyperledger/iroha/issues/663,https://api.github.com/repos/hyperledger/iroha/issues/comments/340430016,https://github.com/hyperledger/iroha/pull/663#issuecomment-340430016,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/663?src=pr&el=h1) Report
> Merging [#663](https://codecov.io/gh/hyperledger/iroha/pull/663?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/040eb55860e57d87f225972726144e8f91bfca48?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/663/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/663?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #663   +/-   ##
=====================================================
  Coverage                 43.45%   43.45%           
=====================================================
  Files                       297      297           
  Lines                     12002    12002           
  Branches                   6591     6591           
=====================================================
  Hits                       5216     5216           
  Misses                      721      721           
  Partials                   6065     6065
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/663?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/663?src=pr&el=footer). Last update [040eb55...7408f26](https://codecov.io/gh/hyperledger/iroha/pull/663?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-30 12:30:37,2017-11-02 08:55:22
https://api.github.com/repos/hyperledger/iroha/issues/662,https://api.github.com/repos/hyperledger/iroha/issues/comments/340266551,https://github.com/hyperledger/iroha/pull/662#issuecomment-340266551,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@e00160e`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `23.8%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/662/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #662   +/-   ##
==========================================
  Coverage           ?   43.31%           
==========================================
  Files              ?      298           
  Lines              ?    12068           
  Branches           ?     6645           
==========================================
  Hits               ?     5227           
  Misses             ?      724           
  Partials           ?     6117
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/converters/pb\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZF9mYWN0b3J5LmhwcA==) | `100% <ø> (ø)` | |
| [irohad/model/converters/json\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kX2ZhY3RvcnkuaHBw) | `100% <ø> (ø)` | |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.51% <0%> (ø)` | |
| [...odule/irohad/model/converters/pb\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZHNfdGVzdC5jcHA=) | `7.53% <0%> (ø)` | |
| [irohad/model/generators/impl/command\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9jb21tYW5kX2dlbmVyYXRvci5jcHA=) | `22.22% <0%> (ø)` | |
| [...had/model/converters/impl/json\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2NvbW1hbmRfZmFjdG9yeS5jcHA=) | `42.63% <22.58%> (ø)` | |
| [irohad/model/impl/model\_operators.cpp](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvbW9kZWxfb3BlcmF0b3JzLmNwcA==) | `39.39% <28.57%> (ø)` | |
| [...rohad/model/converters/impl/pb\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9jb21tYW5kX2ZhY3RvcnkuY3Bw) | `37.99% <37.5%> (ø)` | |
| [irohad/model/commands/set\_account\_detail.hpp](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL3NldF9hY2NvdW50X2RldGFpbC5ocHA=) | `50% <50%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=footer). Last update [e00160e...4799191](https://codecov.io/gh/hyperledger/iroha/pull/662?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-29 14:31:37,2017-10-31 12:44:33
https://api.github.com/repos/hyperledger/iroha/issues/662,https://api.github.com/repos/hyperledger/iroha/issues/comments/340299198,https://github.com/hyperledger/iroha/pull/662#issuecomment-340299198,l4l,"![MAJOR][MAJOR] [pb_command_factory.cpp#L507](https://github.com/hyperledger/iroha/blob/a00335bfa3c797aa2679315bb5edb609d6780ebf/irohad/model/converters/impl/pb_command_factory.cpp#L507): The Cyclomatic Complexity of this function is 15 which is greater than 10 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'

:cry: we should deal with it some day",2017-10-29 21:24:21,2017-10-29 21:24:21
https://api.github.com/repos/hyperledger/iroha/issues/662,https://api.github.com/repos/hyperledger/iroha/issues/comments/340750905,https://github.com/hyperledger/iroha/pull/662#issuecomment-340750905,sorabot,"SonarQube analysis reported 130 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 54 minor
* ![INFO][INFO] 75 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [pb_command_factory.cpp#L507](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/irohad/model/converters/impl/pb_command_factory.cpp#L507): The Cyclomatic Complexity of this function is 15 which is greater than 10 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L199](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L199): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L230](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L230): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L231](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L231): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L232](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L232): Extract this magic number '4' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L233](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L233): Extract this magic number '5' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L234](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L234): Extract this magic number '6' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L235](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L235): Extract this magic number '7' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L236](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L236): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L295](https://github.com/hyperledger/iroha/blob/479919163259dbbda29ec623a396c14e718aaf73/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L295): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-31 12:44:18,2017-10-31 12:44:18
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/340360786,https://github.com/hyperledger/iroha/pull/661#issuecomment-340360786,neewy,"https://github.com/hyperledger/iroha/wiki/Iroha-working-agreement
```
4.1 Opening pull requests
Developers from maintainers team cannot open pull requests  until all tests are passed.
```",2017-10-30 07:11:38,2017-10-30 07:11:38
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/340363323,https://github.com/hyperledger/iroha/pull/661#issuecomment-340363323,Warchant,"@neewy look at the base branch. This PR is one of many parts related to CLI config. There is no need to make tests passing here. 
They will definitely will be passing when I open PR with develop base.",2017-10-30 07:27:36,2017-10-30 07:28:09
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/340472304,https://github.com/hyperledger/iroha/pull/661#issuecomment-340472304,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=h1) Report
> Merging [#661](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=desc) into [trunk/cliutils](https://codecov.io/gh/hyperledger/iroha/commit/bf3ea987eb135f5264aa5c9e028bfbd6c51309e5?src=pr&el=desc) will **decrease** coverage by `0.23%`.
> The diff coverage is `32.09%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/661/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree)

```diff
@@                Coverage Diff                 @@
##           trunk/cliutils     #661      +/-   ##
==================================================
- Coverage            43.1%   42.86%   -0.24%     
==================================================
  Files                 302      313      +11     
  Lines               12324    12515     +191     
  Branches             6826     6967     +141     
==================================================
+ Hits                 5312     5365      +53     
  Misses                713      713              
- Partials             6299     6437     +138
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/files.cpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-bGlicy9jb21tb24vZmlsZXMuY3Bw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9zdG9yYWdlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager.hpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `16.03% <0%> (ø)` | :arrow_up: |
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `63.29% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `64.4% <0%> (ø)` | :arrow_up: |
| [irohad/cli/env-vars.hpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-aXJvaGFkL2NsaS9lbnYtdmFycy5ocHA=) | `0% <0%> (ø)` | |
| [test/module/irohad/ametsuchi/block\_query\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeV90ZXN0LmNwcA==) | `26.82% <0%> (ø)` | :arrow_up: |
| ... and [31 more](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=footer). Last update [bf3ea98...9f5abda](https://codecov.io/gh/hyperledger/iroha/pull/661?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-30 15:04:03,2017-11-12 10:46:16
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/341899933,https://github.com/hyperledger/iroha/pull/661#issuecomment-341899933,Warchant,"Currently, structure of config was reworked.

Main goal was to get rid of complexities with flags, since no one wants to write lots of flags with every irohad run.

How to use config:
```
# look at the list of all flags
1. irohad --help
# set up all required flags
# then run subcommand ""config"" and store output in file
2. irohad --pguser=postgres --pgdatabase=postgres --pgpassword=pass config > config1.sh
# whenever you want to use iroha, just apply config:
3. source config1.sh

and freely use

irohad ledger clear
irohad ledger create genesis.block
irohad start

```",2017-11-04 14:12:50,2017-11-04 14:14:53
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/341920493,https://github.com/hyperledger/iroha/pull/661#issuecomment-341920493,Warchant,"WIP: writing keypair generation 

UPD: tx_pipeline_integration_test now enabled, but fails. Working on this.",2017-11-04 18:44:01,2017-11-05 12:55:12
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/342271998,https://github.com/hyperledger/iroha/pull/661#issuecomment-342271998,Warchant,"tx_pipeline_integration still does not work. Can't fix it for like 3-4 days. 

I will inform all reviewers when it will be fixed. 😿 ",2017-11-06 20:13:48,2017-11-06 21:33:20
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/342459778,https://github.com/hyperledger/iroha/pull/661#issuecomment-342459778,Warchant,"PR is ready to be  reviewed.

```
irohad --help                    # print flags 
irohad --flag1=a config > env.sh # save current config to file
source env.sh                    # apply config 
irohad ledger clear
irohad ledger create genesis.block
irohad start
```",2017-11-07 11:51:46,2017-11-07 13:48:54
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/343461513,https://github.com/hyperledger/iroha/pull/661#issuecomment-343461513,muratovv,Better to separate this PR on smaller for better code review.,2017-11-10 12:30:33,2017-11-10 12:30:33
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/343462009,https://github.com/hyperledger/iroha/pull/661#issuecomment-343462009,Warchant,"@muratovv 
1. you can not test pieces of code if I make separation, only whole PR.
2. amount of code for review will not be changed 
3. it adds unnecessary work for me

There is no benefit from doing this.

Come on, only +2k, @l4l, @luckychess and @x3medima17 already reviewed.",2017-11-10 12:33:03,2017-11-10 12:37:16
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/343655696,https://github.com/hyperledger/iroha/pull/661#issuecomment-343655696,l4l,"Also it would be nice:
- to clean up the env param (similar to `docker-machine env -u`)
- to permit empty passwords (but maybe throw a warning)
- to set the flags after the command :cry:",2017-11-11 10:39:12,2017-11-11 10:39:12
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/343656748,https://github.com/hyperledger/iroha/pull/661#issuecomment-343656748,Warchant,">to permit empty passwords (but maybe throw a warning)

Is there this requirement?

>to set the flags after the command 

what?",2017-11-11 10:58:47,2017-11-11 10:58:47
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/343657038,https://github.com/hyperledger/iroha/pull/661#issuecomment-343657038,l4l,"> Is there this requirement?

Yup
![screenshot_20171111_140227](https://user-images.githubusercontent.com/5658339/32688818-09fd832c-c6e9-11e7-925a-986d5c01ceb1.png)

>>to set the flags after the command 
>
>what?

look at this
![screenshot_20171111_140317](https://user-images.githubusercontent.com/5658339/32688822-2ae2d1be-c6e9-11e7-917e-7e2c5d9ea9cf.png)
",2017-11-11 11:04:15,2017-11-11 11:16:29
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/343728104,https://github.com/hyperledger/iroha/pull/661#issuecomment-343728104,sorabot,"SonarQube analysis reported 247 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 46 minor
* ![INFO][INFO] 200 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [defaults.hpp#L29](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/cli/defaults.hpp#L29): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [storage_impl.cpp#L53](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/ametsuchi/impl/storage_impl.cpp#L53): Define a constant instead of duplicating this literal ""Cannot create CommandExecutorFactory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L66](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/ametsuchi/impl/storage_impl.cpp#L66): Define a constant instead of duplicating this literal ""TemporaryWsv"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [env-vars.hpp#L1](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/cli/env-vars.hpp#L1): Rename this file to match this regular expression: ""(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$"". [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileName)
1. ![MINOR][MINOR] [flags.hpp#L35](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/cli/flags.hpp#L35): Define a constant instead of duplicating this literal 100000 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flags.hpp#L54](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/cli/flags.hpp#L54): Define a constant instead of duplicating this literal ""Peer"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flags.hpp#L76](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/cli/flags.hpp#L76): Define a constant instead of duplicating this literal false 4 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flags.hpp#L97](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/cli/flags.hpp#L97): Define a constant instead of duplicating this literal ""PostgreSQL"" 5 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flags.hpp#L128](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/cli/flags.hpp#L128): Define a constant instead of duplicating this literal ""Redis"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flags.hpp#L167](https://github.com/hyperledger/iroha/blob/9f5abda8d5e8a093eba7e05efbe136a3721f9d4f/irohad/cli/flags.hpp#L167): Define a constant instead of duplicating this literal ""Other"" 4 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-12 10:45:33,2017-11-12 10:45:33
https://api.github.com/repos/hyperledger/iroha/issues/661,https://api.github.com/repos/hyperledger/iroha/issues/comments/343730193,https://github.com/hyperledger/iroha/pull/661#issuecomment-343730193,Warchant,"![image](https://user-images.githubusercontent.com/1867551/32698342-1b544ff8-c7b5-11e7-9b17-891bada8b046.png)
",2017-11-12 11:23:54,2017-11-12 11:23:54
https://api.github.com/repos/hyperledger/iroha/issues/660,https://api.github.com/repos/hyperledger/iroha/issues/comments/339998557,https://github.com/hyperledger/iroha/pull/660#issuecomment-339998557,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/660?src=pr&el=h1) Report
> Merging [#660](https://codecov.io/gh/hyperledger/iroha/pull/660?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/ca2c9fcaab66ead5b89c7cc20e905261338e3add?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/660/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/660?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #660   +/-   ##
=====================================================
  Coverage                 43.45%   43.45%           
=====================================================
  Files                       297      297           
  Lines                     12002    12002           
  Branches                   6591     6591           
=====================================================
  Hits                       5216     5216           
  Misses                      721      721           
  Partials                   6065     6065
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/660?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/660?src=pr&el=footer). Last update [ca2c9fc...1beb3f0](https://codecov.io/gh/hyperledger/iroha/pull/660?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-27 15:08:17,2017-10-31 15:00:44
https://api.github.com/repos/hyperledger/iroha/issues/659,https://api.github.com/repos/hyperledger/iroha/issues/comments/339939066,https://github.com/hyperledger/iroha/pull/659#issuecomment-339939066,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/659?src=pr&el=h1) Report
> Merging [#659](https://codecov.io/gh/hyperledger/iroha/pull/659?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/ca2c9fcaab66ead5b89c7cc20e905261338e3add?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/659/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/659?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #659   +/-   ##
=====================================================
  Coverage                 43.45%   43.45%           
=====================================================
  Files                       297      297           
  Lines                     12002    12002           
  Branches                   6591     6591           
=====================================================
  Hits                       5216     5216           
  Misses                      721      721           
  Partials                   6065     6065
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/659?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/659?src=pr&el=footer). Last update [ca2c9fc...ee9d3ae](https://codecov.io/gh/hyperledger/iroha/pull/659?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-27 10:49:01,2017-10-28 18:16:51
https://api.github.com/repos/hyperledger/iroha/issues/658,https://api.github.com/repos/hyperledger/iroha/issues/comments/341310382,https://github.com/hyperledger/iroha/pull/658#issuecomment-341310382,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=h1) Report
> Merging [#658](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/27587e8c77a9bff544d6ca0bbff603ca4674c469?src=pr&el=desc) will **decrease** coverage by `0.08%`.
> The diff coverage is `6.25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/658/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #658      +/-   ##
===========================================
- Coverage    43.25%   43.17%   -0.09%     
===========================================
  Files          298      298              
  Lines        12098    12123      +25     
  Branches      6670     6694      +24     
===========================================
+ Hits          5233     5234       +1     
  Misses         724      724              
- Partials      6141     6165      +24
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `85.71% <ø> (ø)` | :arrow_up: |
| [irohad/model/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2FjY291bnQuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9hY2NvdW50LmhwcA==) | `25% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `16.34% <0%> (-0.21%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `40.78% <0%> (-0.14%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `34.93% <0%> (-1.09%)` | :arrow_down: |
| [irohad/model/generators/impl/command\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9jb21tYW5kX2dlbmVyYXRvci5jcHA=) | `22.22% <0%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `27.45% <0%> (-0.19%)` | :arrow_down: |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `16.82% <18.18%> (+0.15%)` | :arrow_up: |
| [...odule/irohad/model/converters/pb\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZHNfdGVzdC5jcHA=) | `6.84% <0%> (-0.69%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=footer). Last update [27587e8...f7b6a11](https://codecov.io/gh/hyperledger/iroha/pull/658?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-02 03:49:25,2017-11-03 03:39:32
https://api.github.com/repos/hyperledger/iroha/issues/658,https://api.github.com/repos/hyperledger/iroha/issues/comments/341616415,https://github.com/hyperledger/iroha/pull/658#issuecomment-341616415,sorabot,"SonarQube analysis reported 39 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 14 minor
* ![INFO][INFO] 24 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [storage_impl.hpp#L82](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/ametsuchi/impl/storage_impl.hpp#L82): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [postgres_wsv_command.cpp#L35](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/ametsuchi/impl/postgres_wsv_command.cpp#L35): Define a constant instead of duplicating this literal false 16 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L72](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L72): Define a constant instead of duplicating this literal ""role_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L149](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L149): Define a constant instead of duplicating this literal ""public_key"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [account.hpp#L53](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/model/account.hpp#L53): Member variable 'Account::quorum' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [command_executor.cpp#L120](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/model/execution/impl/command_executor.cpp#L120): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L136](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/model/execution/impl/command_executor.cpp#L136): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L240](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/model/execution/impl/command_executor.cpp#L240): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L376](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/model/execution/impl/command_executor.cpp#L376): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L418](https://github.com/hyperledger/iroha/blob/f7b6a11d470a80564e521dcc52993de512300078/irohad/model/execution/impl/command_executor.cpp#L418): Extract this magic number '10' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-03 03:38:54,2017-11-03 03:38:54
https://api.github.com/repos/hyperledger/iroha/issues/657,https://api.github.com/repos/hyperledger/iroha/issues/comments/339663815,https://github.com/hyperledger/iroha/pull/657#issuecomment-339663815,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=h1) Report
> Merging [#657](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/2926eea5a017a6f9b606389167981c74e4283577?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `9.09%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/657/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #657      +/-   ##
===========================================
- Coverage    43.43%   43.42%   -0.02%     
===========================================
  Files          297      297              
  Lines        12001    12005       +4     
  Branches      6593     6597       +4     
===========================================
  Hits          5213     5213              
  Misses         721      721              
- Partials      6067     6071       +4
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/commands/create\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9yb2xlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `36.02% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfY29tbWFuZC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `72.91% <ø> (ø)` | :arrow_up: |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.68% <0%> (-0.08%)` | :arrow_down: |
| [...odule/irohad/model/converters/pb\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZHNfdGVzdC5jcHA=) | `7.91% <0%> (ø)` | :arrow_up: |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `13.08% <0%> (ø)` | :arrow_up: |
| [irohad/model/permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Blcm1pc3Npb25zLmhwcA==) | `16.21% <0%> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/command\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9jb21tYW5kX2dlbmVyYXRvci5jcHA=) | `22.22% <0%> (ø)` | :arrow_up: |
| ... and [2 more](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=footer). Last update [2926eea...f97b991](https://codecov.io/gh/hyperledger/iroha/pull/657?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-26 13:21:39,2017-10-26 13:21:39
https://api.github.com/repos/hyperledger/iroha/issues/656,https://api.github.com/repos/hyperledger/iroha/issues/comments/339632789,https://github.com/hyperledger/iroha/pull/656#issuecomment-339632789,sorabot,"SonarQube analysis reported 6 issues

1. ![MINOR][MINOR] [flat_file.cpp#L74](https://github.com/hyperledger/iroha/blob/a78a48dde6f542fa3656de022e2d9d2775d87e47/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L74): Define a constant instead of duplicating this literal ""FLAT_FILE"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flat_file.cpp#L100](https://github.com/hyperledger/iroha/blob/a78a48dde6f542fa3656de022e2d9d2775d87e47/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L100): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [flat_file.cpp#L110](https://github.com/hyperledger/iroha/blob/a78a48dde6f542fa3656de022e2d9d2775d87e47/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L110): Extract this magic number '2u' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [flat_file.cpp#L209](https://github.com/hyperledger/iroha/blob/a78a48dde6f542fa3656de022e2d9d2775d87e47/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L209): The function 'directory' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![INFO][INFO] [flat_file.cpp#L30](https://github.com/hyperledger/iroha/blob/a78a48dde6f542fa3656de022e2d9d2775d87e47/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L30): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [flat_file.cpp#L145](https://github.com/hyperledger/iroha/blob/a78a48dde6f542fa3656de022e2d9d2775d87e47/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L145): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-26 11:13:35,2017-10-26 11:13:35
https://api.github.com/repos/hyperledger/iroha/issues/656,https://api.github.com/repos/hyperledger/iroha/issues/comments/339632823,https://github.com/hyperledger/iroha/pull/656#issuecomment-339632823,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=h1) Report
> Merging [#656](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/2926eea5a017a6f9b606389167981c74e4283577?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `33.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/656/graphs/tree.svg?src=pr&width=650&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #656      +/-   ##
===========================================
+ Coverage    43.43%   43.45%   +0.01%     
===========================================
  Files          297      297              
  Lines        12001    12016      +15     
  Branches      6593     6601       +8     
===========================================
+ Hits          5213     5221       +8     
  Misses         721      721              
- Partials      6067     6074       +7
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/ametsuchi/flat\_file\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9mbGF0X2ZpbGVfdGVzdC5jcHA=) | `24.61% <16.66%> (-1.8%)` | :arrow_down: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `39.58% <55.55%> (+2.34%)` | :arrow_up: |
| [irohad/main/impl/consensus\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9jb25zZW5zdXNfaW5pdC5jcHA=) | `62.96% <0%> (ø)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `39.53% <0%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/redis\_flat\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2ZsYXRfYmxvY2tfcXVlcnkuY3Bw) | `40.74% <0%> (+0.74%)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `55.35% <0%> (+0.81%)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `56.25% <0%> (+6.25%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=footer). Last update [2926eea...a78a48d](https://codecov.io/gh/hyperledger/iroha/pull/656?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-26 11:13:49,2017-10-26 11:31:43
https://api.github.com/repos/hyperledger/iroha/issues/655,https://api.github.com/repos/hyperledger/iroha/issues/comments/339424606,https://github.com/hyperledger/iroha/pull/655#issuecomment-339424606,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/655?src=pr&el=h1) Report
> Merging [#655](https://codecov.io/gh/hyperledger/iroha/pull/655?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/2b862ec50ed0439a8f849a2853da88b5fe699a83?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/655/graphs/tree.svg?height=150&token=VEvywEmaef&width=650&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/655?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #655      +/-   ##
===========================================
- Coverage    43.44%   43.43%   -0.01%     
===========================================
  Files          297      297              
  Lines        12000    12001       +1     
  Branches      6592     6593       +1     
===========================================
  Hits          5213     5213              
  Misses         721      721              
- Partials      6066     6067       +1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/655?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/redis\_flat\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/655?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2ZsYXRfYmxvY2tfcXVlcnkuY3Bw) | `40% <0%> (-0.75%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/655?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/655?src=pr&el=footer). Last update [2b862ec...9a709df](https://codecov.io/gh/hyperledger/iroha/pull/655?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-25 18:23:47,2017-10-26 07:29:48
https://api.github.com/repos/hyperledger/iroha/issues/655,https://api.github.com/repos/hyperledger/iroha/issues/comments/339553058,https://github.com/hyperledger/iroha/pull/655#issuecomment-339553058,muratovv,Is it possible to write a test that covers the fix?,2017-10-26 05:10:39,2017-10-26 05:10:39
https://api.github.com/repos/hyperledger/iroha/issues/655,https://api.github.com/repos/hyperledger/iroha/issues/comments/339558663,https://github.com/hyperledger/iroha/pull/655#issuecomment-339558663,lebdron,"@muratovv Unfortunately `index_block` method, required for the test is in `MutableStorage` class, and it is a private method. It does not seem suitable to instantiate `MutableStorage` to test redis query functions.",2017-10-26 05:49:46,2017-10-26 05:49:46
https://api.github.com/repos/hyperledger/iroha/issues/654,https://api.github.com/repos/hyperledger/iroha/issues/comments/339796951,https://github.com/hyperledger/iroha/pull/654#issuecomment-339796951,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=h1) Report
> Merging [#654](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/27587e8c77a9bff544d6ca0bbff603ca4674c469?src=pr&el=desc) will **decrease** coverage by `0.17%`.
> The diff coverage is `34.32%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/654/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #654      +/-   ##
===========================================
- Coverage    43.25%   43.08%   -0.18%     
===========================================
  Files          298      301       +3     
  Lines        12098    12274     +176     
  Branches      6670     6793     +123     
===========================================
+ Hits          5233     5288      +55     
- Misses         724      731       +7     
- Partials      6141     6255     +114
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...had/torii/processor/transaction\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/torii/command\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL2NvbW1hbmRfc2VydmljZS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2Jsb2NrLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/redis\_flat\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2ZsYXRfYmxvY2tfcXVlcnkuaHBw) | `0% <ø> (ø)` | :arrow_up: |
| [...had/torii/processor/transaction\_processor\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci90cmFuc2FjdGlvbl9wcm9jZXNzb3JfdGVzdC5jcHA=) | `8.57% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/flat\_file\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZV9ibG9ja19xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `10.45% <0%> (-0.04%)` | :arrow_down: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `11.29% <0%> (-0.1%)` | :arrow_down: |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `25.9% <0%> (-1.26%)` | :arrow_down: |
| ... and [14 more](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=footer). Last update [27587e8...63e777d](https://codecov.io/gh/hyperledger/iroha/pull/654?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-26 20:51:10,2017-11-03 13:17:24
https://api.github.com/repos/hyperledger/iroha/issues/654,https://api.github.com/repos/hyperledger/iroha/issues/comments/339992932,https://github.com/hyperledger/iroha/pull/654#issuecomment-339992932,neewy,"Docs are in the iroha-api, btw: https://hyperledger.github.io/iroha-api/#get-transaction-status",2017-10-27 14:47:54,2017-10-27 14:47:54
https://api.github.com/repos/hyperledger/iroha/issues/654,https://api.github.com/repos/hyperledger/iroha/issues/comments/341700261,https://github.com/hyperledger/iroha/pull/654#issuecomment-341700261,sorabot,"SonarQube analysis reported 77 issues
* ![CRITICAL][CRITICAL] 3 critical
* ![MAJOR][MAJOR] 2 major
* ![MINOR][MINOR] 25 minor
* ![INFO][INFO] 47 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L154](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/irohad/main/application.cpp#L154): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L210](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/irohad/main/application.cpp#L210): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L214](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/irohad/main/application.cpp#L214): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [interactive_status_cli.cpp#L74](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/iroha-cli/interactive/impl/interactive_status_cli.cpp#L74): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MAJOR][MAJOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/irohad/main/application.cpp#L31): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [interactive_status_cli.cpp#L71](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/iroha-cli/interactive/impl/interactive_status_cli.cpp#L71): Define a constant instead of duplicating this literal ""Choose action: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L199](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L199): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L230](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L230): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L231](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L231): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L232](https://github.com/hyperledger/iroha/blob/63e777d5496a7a2f74aecee22e5c95b9325b6885/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L232): Extract this magic number '4' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-03 13:16:48,2017-11-03 13:16:48
https://api.github.com/repos/hyperledger/iroha/issues/653,https://api.github.com/repos/hyperledger/iroha/issues/comments/339293565,https://github.com/hyperledger/iroha/pull/653#issuecomment-339293565,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/653?src=pr&el=h1) Report
> Merging [#653](https://codecov.io/gh/hyperledger/iroha/pull/653?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/ed05e40ae705ec110e239c9c66cf4d7a02a156a9?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/653/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/653?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #653   +/-   ##
=====================================================
  Coverage                 43.45%   43.45%           
=====================================================
  Files                       297      297           
  Lines                     12002    12002           
  Branches                   6591     6591           
=====================================================
  Hits                       5216     5216           
  Misses                      721      721           
  Partials                   6065     6065
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/653?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/653?src=pr&el=footer). Last update [ed05e40...cfb675c](https://codecov.io/gh/hyperledger/iroha/pull/653?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-25 11:01:22,2017-10-26 17:40:44
https://api.github.com/repos/hyperledger/iroha/issues/652,https://api.github.com/repos/hyperledger/iroha/issues/comments/339080936,https://github.com/hyperledger/iroha/pull/652#issuecomment-339080936,sorabot,"SonarQube analysis reported 104 issues
* ![BLOCKER][BLOCKER] 1 blocker
* ![CRITICAL][CRITICAL] 3 critical
* ![MAJOR][MAJOR] 4 major
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 93 info

#### Top 10 issues

1. ![BLOCKER][BLOCKER] [iroha_conf_loader.hpp#L47](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/iroha_conf_loader.hpp#L47): Using namespace are not allowed in header files. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUsingNamespaceInHeader)
1. ![CRITICAL][CRITICAL] [application.cpp#L154](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/application.cpp#L154): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L210](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/application.cpp#L210): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L214](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/application.cpp#L214): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/application.cpp#L31): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.hpp#L68](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/application.hpp#L68): parameter list has 11 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [consensus_init.cpp#L70](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/impl/consensus_init.cpp#L70): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [consensus_init.hpp#L63](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/impl/consensus_init.hpp#L63): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.cpp#L154](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/application.cpp#L154): Define a constant instead of duplicating this literal ""0.0.0.0:"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [iroha_conf_loader.hpp#L58](https://github.com/hyperledger/iroha/blob/d77ffe9516468f0035b4b75866328f4c0a652e1e/irohad/main/iroha_conf_loader.hpp#L58): Define a constant instead of duplicating this literal ""string"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-24 18:09:03,2017-10-24 18:09:03
https://api.github.com/repos/hyperledger/iroha/issues/652,https://api.github.com/repos/hyperledger/iroha/issues/comments/339081089,https://github.com/hyperledger/iroha/pull/652#issuecomment-339081089,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=h1) Report
> Merging [#652](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/cbd97c7b8fc412056176f83845a7b3d0db9523ea?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `50%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/652/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #652      +/-   ##
===========================================
- Coverage    43.45%   43.44%   -0.02%     
===========================================
  Files          297      297              
  Lines        12002    12000       -2     
  Branches      6591     6592       +1     
===========================================
- Hits          5216     5213       -3     
  Misses         721      721              
- Partials      6065     6066       +1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/impl/ordering\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/consensus\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9jb25zZW5zdXNfaW5pdC5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/consensus\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9jb25zZW5zdXNfaW5pdC5jcHA=) | `62.96% <33.33%> (ø)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `50% <50%> (-6.25%)` | :arrow_down: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `39.53% <50%> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `54.54% <66.66%> (-0.82%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=footer). Last update [cbd97c7...d77ffe9](https://codecov.io/gh/hyperledger/iroha/pull/652?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-24 18:09:39,2017-10-24 18:09:39
https://api.github.com/repos/hyperledger/iroha/issues/650,https://api.github.com/repos/hyperledger/iroha/issues/comments/340068456,https://github.com/hyperledger/iroha/pull/650#issuecomment-340068456,neewy,@motxx seems that this PR has troubles with CI (build step). Can you check what is the problem so that we can review it?,2017-10-27 19:47:47,2017-10-27 19:47:47
https://api.github.com/repos/hyperledger/iroha/issues/650,https://api.github.com/repos/hyperledger/iroha/issues/comments/342163264,https://github.com/hyperledger/iroha/pull/650#issuecomment-342163264,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=h1) Report
> Merging [#650](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3fef80087584591e919af699df12b5dc4a8a1f66?src=pr&el=desc) will **decrease** coverage by `0.78%`.
> The diff coverage is `21.14%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/650/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #650      +/-   ##
===========================================
- Coverage     43.1%   42.31%   -0.79%     
===========================================
  Files          302      305       +3     
  Lines        12324    12778     +454     
  Branches      6826     7181     +355     
===========================================
+ Hits          5312     5407      +95     
- Misses         713      755      +42     
- Partials      6299     6616     +317
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/query\_execution.hpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJ5X2V4ZWN1dGlvbi5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [libs/generator/generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-bGlicy9nZW5lcmF0b3IvZ2VuZXJhdG9yLmhwcA==) | `80% <ø> (ø)` | :arrow_up: |
| [irohad/model/registration/query\_registration.hpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3JlZ2lzdHJhdGlvbi9xdWVyeV9yZWdpc3RyYXRpb24uaHBw) | `20% <ø> (ø)` | :arrow_up: |
| [...rohad/model/converters/json\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5X3Rlc3QuY3Bw) | `4.85% <0%> (-0.65%)` | :arrow_down: |
| [...d/model/queries/get\_account\_asset\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnRfYXNzZXRfdHJhbnNhY3Rpb25zLmhwcA==) | `0% <0%> (ø)` | |
| [irohad/model/queries/get\_account\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnRfdHJhbnNhY3Rpb25zLmhwcA==) | `0% <0%> (ø)` | |
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `2% <0%> (-5.94%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `27.81% <0%> (ø)` | :arrow_up: |
| ... and [29 more](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=footer). Last update [3fef800...b40ae74](https://codecov.io/gh/hyperledger/iroha/pull/650?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-11-06 14:24:25,2017-11-15 08:26:05
https://api.github.com/repos/hyperledger/iroha/issues/650,https://api.github.com/repos/hyperledger/iroha/issues/comments/342251092,https://github.com/hyperledger/iroha/pull/650#issuecomment-342251092,l4l,"Also don't forget to rebase, new patches forbid warnings",2017-11-06 19:03:13,2017-11-06 19:03:13
https://api.github.com/repos/hyperledger/iroha/issues/650,https://api.github.com/repos/hyperledger/iroha/issues/comments/345634015,https://github.com/hyperledger/iroha/pull/650#issuecomment-345634015,motxx,@l4l @muratovv Could you review this?,2017-11-20 09:10:17,2017-11-20 09:10:17
https://api.github.com/repos/hyperledger/iroha/issues/650,https://api.github.com/repos/hyperledger/iroha/issues/comments/345706502,https://github.com/hyperledger/iroha/pull/650#issuecomment-345706502,l4l,"Looks more or less fine for me but still this pr is huge, so I'd like to ask some additional ppl to review this",2017-11-20 14:12:00,2017-11-20 14:12:00
https://api.github.com/repos/hyperledger/iroha/issues/650,https://api.github.com/repos/hyperledger/iroha/issues/comments/346317069,https://github.com/hyperledger/iroha/pull/650#issuecomment-346317069,motxx,"This PR is huge, reviewing is hard.
Should I separate 5 PRs like:

- Implement EqualList of VerificationStrategy
- Implement GetAccountTransactions
  - without test
  - with model, rxstuff, IrohaCLI and converters
- Implement GetAccountTransactions test
- Implement GetAccountAssetTransactions implementation
  - without test
  - with model, rxstuff, IrohaCLI and converters
- Implement GetAccountAssetTransactions test

?",2017-11-22 11:00:54,2017-11-22 11:37:55
https://api.github.com/repos/hyperledger/iroha/issues/650,https://api.github.com/repos/hyperledger/iroha/issues/comments/346488503,https://github.com/hyperledger/iroha/pull/650#issuecomment-346488503,l4l,"I think it's better, yeah",2017-11-22 22:20:15,2017-11-22 22:20:15
https://api.github.com/repos/hyperledger/iroha/issues/650,https://api.github.com/repos/hyperledger/iroha/issues/comments/346783324,https://github.com/hyperledger/iroha/pull/650#issuecomment-346783324,motxx,Close PR to separate into 5 PRs.,2017-11-24 09:31:52,2017-11-24 09:31:52
https://api.github.com/repos/hyperledger/iroha/issues/649,https://api.github.com/repos/hyperledger/iroha/issues/comments/338851852,https://github.com/hyperledger/iroha/pull/649#issuecomment-338851852,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=h1) Report
> Merging [#649](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/af6993a002950cbe431bfa4a9c3f778d655cfad4?src=pr&el=desc) will **decrease** coverage by `0.05%`.
> The diff coverage is `20%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/649/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #649      +/-   ##
===========================================
- Coverage    43.31%   43.25%   -0.06%     
===========================================
  Files          298      298              
  Lines        12068    12098      +30     
  Branches      6645     6670      +25     
===========================================
+ Hits          5227     5233       +6     
  Misses         724      724              
- Partials      6117     6141      +24
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...rohad/model/converters/impl/pb\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9jb21tYW5kX2ZhY3RvcnkuY3Bw) | `37.87% <0%> (-0.12%)` | :arrow_down: |
| [irohad/model/permissions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Blcm1pc3Npb25zLmhwcA==) | `16.21% <100%> (ø)` | :arrow_up: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `40.92% <75%> (+0.45%)` | :arrow_up: |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `13.03% <8.88%> (-0.05%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=footer). Last update [af6993a...c639a91](https://codecov.io/gh/hyperledger/iroha/pull/649?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-24 02:19:46,2017-11-03 02:28:10
https://api.github.com/repos/hyperledger/iroha/issues/649,https://api.github.com/repos/hyperledger/iroha/issues/comments/340068172,https://github.com/hyperledger/iroha/pull/649#issuecomment-340068172,neewy,"After review, this pull request is accepted",2017-10-27 19:46:39,2017-10-27 19:46:39
https://api.github.com/repos/hyperledger/iroha/issues/649,https://api.github.com/repos/hyperledger/iroha/issues/comments/341609712,https://github.com/hyperledger/iroha/pull/649#issuecomment-341609712,sorabot,"SonarQube analysis reported 47 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 8 minor
* ![INFO][INFO] 38 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [pb_command_factory.cpp#L510](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/converters/impl/pb_command_factory.cpp#L510): The Cyclomatic Complexity of this function is 15 which is greater than 10 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MINOR][MINOR] [command_executor.cpp#L120](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/execution/impl/command_executor.cpp#L120): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L136](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/execution/impl/command_executor.cpp#L136): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [command_executor.cpp#L240](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/execution/impl/command_executor.cpp#L240): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [command_executor.cpp#L375](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/execution/impl/command_executor.cpp#L375): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L417](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/execution/impl/command_executor.cpp#L417): Extract this magic number '10' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L457](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/execution/impl/command_executor.cpp#L457): Extract this magic number '10' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L563](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/execution/impl/command_executor.cpp#L563): Extract this magic number '10' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [command_executor.cpp#L580](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/execution/impl/command_executor.cpp#L580): Define a constant instead of duplicating this literal ""asset {} is absent of {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [pb_command_factory.cpp#L397](https://github.com/hyperledger/iroha/blob/c639a91f5a1fa68b1ce58e0220d057170045d455/irohad/model/converters/impl/pb_command_factory.cpp#L397): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-03 02:27:51,2017-11-03 02:27:51
https://api.github.com/repos/hyperledger/iroha/issues/648,https://api.github.com/repos/hyperledger/iroha/issues/comments/338420544,https://github.com/hyperledger/iroha/pull/648#issuecomment-338420544,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=h1) Report
> Merging [#648](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=desc) into [feature/mst-trunk](https://codecov.io/gh/hyperledger/iroha/commit/04ff17c0435731954eca38535857fd727863d9fa?src=pr&el=desc) will **increase** coverage by `0.05%`.
> The diff coverage is `51.25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/648/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/mst-trunk     #648      +/-   ##
=====================================================
+ Coverage              43.04%   43.09%   +0.05%     
=====================================================
  Files                    320      323       +3     
  Lines                  12526    12606      +80     
  Branches                6941     6981      +40     
=====================================================
+ Hits                    5392     5433      +41     
  Misses                   727      727              
- Partials                6407     6446      +39
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...i\_sig\_transactions/gossip\_propagation\_strategy.hpp](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvZ29zc2lwX3Byb3BhZ2F0aW9uX3N0cmF0ZWd5LmhwcA==) | `100% <100%> (ø)` | |
| [...\_transactions/gossip\_propagation\_strategy\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvZ29zc2lwX3Byb3BhZ2F0aW9uX3N0cmF0ZWd5X3Rlc3QuY3Bw) | `40% <40%> (ø)` | |
| [...\_transactions/impl/gossip\_propagation\_strategy.cpp](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvaW1wbC9nb3NzaXBfcHJvcGFnYXRpb25fc3RyYXRlZ3kuY3Bw) | `64.7% <64.7%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=footer). Last update [04ff17c...36b5242](https://codecov.io/gh/hyperledger/iroha/pull/648?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-21 17:53:13,2017-10-24 15:42:18
https://api.github.com/repos/hyperledger/iroha/issues/648,https://api.github.com/repos/hyperledger/iroha/issues/comments/339034847,https://github.com/hyperledger/iroha/pull/648#issuecomment-339034847,sorabot,"SonarQube analysis reported 2 issues

1. ![INFO][INFO] [gossip_propagation_strategy.hpp#L37](https://github.com/hyperledger/iroha/blob/36b5242a0f6c6ab9d0ae83d9643bec85595c99bf/irohad/multi_sig_transactions/gossip_propagation_strategy.hpp#L37): Undocumented API: PeerProvider [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [gossip_propagation_strategy.hpp#L38](https://github.com/hyperledger/iroha/blob/36b5242a0f6c6ab9d0ae83d9643bec85595c99bf/irohad/multi_sig_transactions/gossip_propagation_strategy.hpp#L38): Undocumented API: OptPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-10-24 15:41:57,2017-10-24 15:41:57
https://api.github.com/repos/hyperledger/iroha/issues/647,https://api.github.com/repos/hyperledger/iroha/issues/comments/338256272,https://github.com/hyperledger/iroha/pull/647#issuecomment-338256272,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/647?src=pr&el=h1) Report
> Merging [#647](https://codecov.io/gh/hyperledger/iroha/pull/647?src=pr&el=desc) into [feature/shared_model](https://codecov.io/gh/hyperledger/iroha/commit/549fd053296512fc01c12961d07b47ef80093931?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/647/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/647?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/shared_model     #647   +/-   ##
=====================================================
  Coverage                 43.45%   43.45%           
=====================================================
  Files                       297      297           
  Lines                     12002    12002           
  Branches                   6591     6591           
=====================================================
  Hits                       5216     5216           
  Misses                      721      721           
  Partials                   6065     6065
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/647?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/signature.hpp](https://codecov.io/gh/hyperledger/iroha/pull/647?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3NpZ25hdHVyZS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/647?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/647?src=pr&el=footer). Last update [549fd05...7eaadb1](https://codecov.io/gh/hyperledger/iroha/pull/647?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-20 16:28:46,2017-10-23 13:17:04
https://api.github.com/repos/hyperledger/iroha/issues/647,https://api.github.com/repos/hyperledger/iroha/issues/comments/338261662,https://github.com/hyperledger/iroha/pull/647#issuecomment-338261662,Warchant,"



Reviewed 20 of 20 files at r1.
Review status: all files reviewed at latest revision, 15 unresolved discussions, some commit checks failed.

---

*[shared_model/CMakeLists.txt, line 23 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwubw3uCt2HCpXO3D59:-Kwubw3uCt2HCpXO3D5A:b-u3vpzx) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/CMakeLists.txt#L23)):*
> ```CMake
> 
> 
> SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/shared_model_bin)
> ```

There are no binaries. Use LIBRARY_OUTPUT_PATH

---

*[shared_model/interfaces/polymorphic_wrapper.hpp, line 56 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwuca2tmr0WkotPyzLw:-Kwuca2tmr0WkotPyzLx:bg2qgz1) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/polymorphic_wrapper.hpp#L56)):*
> ```cpp
> 
>       /**
>        * Move copy constructor
> ```

no `move copy constructor`

should be `move constructor`

---

*[shared_model/interfaces/polymorphic_wrapper.hpp, line 59 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwud9z3skLo9HZgtVDn:-Kwud9z3skLo9HZgtVDo:b3lmoge) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/polymorphic_wrapper.hpp#L59)):*
> ```cpp
>        * @param rhs - wrapped temporary value
>        */
>       PolymorphicWrapper(PolymorphicWrapper &&rhs) {
> ```

move constructor should be marked noexcept

---

*[shared_model/interfaces/polymorphic_wrapper.hpp, line 69 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwud-Jq_38mxHBNrdZT:-Kwud-Jq_38mxHBNrdZU:b-1ay7wl) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/polymorphic_wrapper.hpp#L69)):*
> ```cpp
>        */
>       PolymorphicWrapper &operator=(const PolymorphicWrapper &rhs) {
>         ptr = std::shared_ptr<T>(rhs.ptr.get()->copy());
> ```

change to ptr->copy()

---

*[shared_model/interfaces/polymorphic_wrapper.hpp, line 78 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwud57KlddlV1CMvr8I:-Kwud57KlddlV1CMvr8J:b-7krqyc) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/polymorphic_wrapper.hpp#L78)):*
> ```cpp
>        * @return *this
>        */
>       PolymorphicWrapper &operator=(PolymorphicWrapper &&rhs) {
> ```

move operator should be marked noexcept

---

*[shared_model/interfaces/polymorphic_wrapper.hpp, line 86 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-KwudELliUwiGI9IomTS:-KwudELliUwiGI9IomTT:b-93ufc0) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/polymorphic_wrapper.hpp#L86)):*
> ```cpp
>        * Checks equality of objects inside
>        * @param rhs - other wrapped value
>        * @return true, if wpapped objects are same
> ```

wrapped

---

*[shared_model/interfaces/primitive.hpp, line 29 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwue2PYO5bku63WF-Oj:-Kwue2PYO5bku63WF-Ok:baj5j7u) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/primitive.hpp#L29)):*
> ```cpp
>     /**
>      * Primitive is a base class of whole domain objects in system.
>      * This class required for guarantee consistent interface on whole model
> ```

on whole -> on all

---

*[shared_model/interfaces/primitive.hpp, line 35 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-KwuePB3yLJxoO6hcgr0:-KwuePB3yLJxoO6hcgr1:bg1vdbt) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/primitive.hpp#L35)):*
> ```cpp
>      */
>     template <typename Model, typename OldModel>
>     class Primitive {
> ```

no virtual destructor in this class

---

*[shared_model/interfaces/transaction.hpp, line 36 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-KwueZvezT9mVO3dPjjV:-KwueZvezT9mVO3dPjjW:bg1vdbt) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/transaction.hpp#L36)):*
> ```cpp
>      * state of ledger.
>      */
>     class Transaction
> ```

no virtual destructor in this class

---

*[shared_model/interfaces/commands/add_asset_quantity.hpp, line 32 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwuex1DYiBKqbCEayGH:-Kwuex1DYiBKqbCEayGI:bg1vdbt) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/commands/add_asset_quantity.hpp#L32)):*
> ```cpp
>      * TODO add business logic description
>      */
>     class AddAssetQuantity
> ```

no virtual destructor in this class

---

*[shared_model/interfaces/commands/command.hpp, line 37 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-KwufEbWYVQyTgP7PYcM:-KwufEbWYVQyTgP7PYcN:b2or9bb) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/commands/command.hpp#L37)):*
> ```cpp
>      * avoid this misunderstanding class should be final
>      */
>     class Command final : public Primitive<Command, iroha::model::Command> {
> ```

no virtual destructor in this class (should override the one from Primitive)

---

*[shared_model/interfaces/common_objects/hash.hpp, line 28 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwuf_5xCA9xpNoozPp2:-Kwuf_5xCA9xpNoozPp3:bg1vdbt) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/common_objects/hash.hpp#L28)):*
> ```cpp
>   namespace interface {
>     // TODO discuss naming, may be blob will be more applicable
>     class Hash : public Primitive<Hash, Hash> {
> ```

no virtual destructor in this class

---

*[shared_model/interfaces/common_objects/hash.hpp, line 32 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwufg2QUdIlfjNvghTO:-Kwufg2R-bRYPqLfsq5Q:bgnx3e7) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/common_objects/hash.hpp#L32)):*
> ```cpp
>        * @return provides raw representation of hash
>        */
>       virtual const std::string &blobRepr() const = 0;
> ```

maybe it is better to call it `toBlob`? 

---

*[shared_model/interfaces/common_objects/hash.hpp, line 37 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwufia61OgaN2TkvlMv:-Kwufia61OgaN2TkvlMw:b7rhcpi) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/common_objects/hash.hpp#L37)):*
> ```cpp
>        * @return provides human-readable representation of hash
>        */
>       virtual const std::string &hexRepr() const = 0;
> ```

toHexstring?
toHex?

---

*[shared_model/interfaces/common_objects/signature.hpp, line 30 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-KwufnjSYiF6aSr4f3kN:-KwufnjSYiF6aSr4f3kO:b-diqtq0) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/common_objects/signature.hpp#L30)):*
> ```cpp
>      * Class represents signature of high-level domain objects.
>      */
>     class Signature : public Primitive<Signature, iroha::model::Signature> {
> ```

no virtual destructor

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/647)*
<!-- Sent from Reviewable.io -->
",2017-10-20 16:50:08,2017-10-20 16:50:08
https://api.github.com/repos/hyperledger/iroha/issues/647,https://api.github.com/repos/hyperledger/iroha/issues/comments/338296586,https://github.com/hyperledger/iroha/pull/647#issuecomment-338296586,Warchant,"



Reviewed 2 of 20 files at r1, 4 of 4 files at r2.
Review status: all files reviewed at latest revision, 15 unresolved discussions, some commit checks failed.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/647)*
<!-- Sent from Reviewable.io -->
",2017-10-20 19:07:23,2017-10-20 19:07:23
https://api.github.com/repos/hyperledger/iroha/issues/647,https://api.github.com/repos/hyperledger/iroha/issues/comments/338384550,https://github.com/hyperledger/iroha/pull/647#issuecomment-338384550,lebdron,">move constructor should be marked noexcept

There is no such requirement
http://en.cppreference.com/w/cpp/language/move_assignment",2017-10-21 11:20:27,2017-10-21 11:20:27
https://api.github.com/repos/hyperledger/iroha/issues/647,https://api.github.com/repos/hyperledger/iroha/issues/comments/338423495,https://github.com/hyperledger/iroha/pull/647#issuecomment-338423495,l4l,"



Review status: 15 of 20 files reviewed at latest revision, 19 unresolved discussions, some commit checks failed.

---

*[shared_model/interfaces/polymorphic_wrapper.hpp, line 59 at r4](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kx-9iOeKQc_OII-Dx42:-Kx-9iOeKQc_OII-Dx43:b8fmdld) ([raw file](https://github.com/hyperledger/iroha/blob/57f74f5cf05e1d1a12f85876e5ffc221e844099d/shared_model/interfaces/polymorphic_wrapper.hpp#L59)):*
> ```cpp
>        */
>       PolymorphicWrapper(PolymorphicWrapper &&rhs) noexcept {
>         std::swap(this->ptr, rhs.ptr);
> ```

`this->ptr` is undefined, so its swapping is a bad idea. Imo it's better to use smth like:
```
PolymorphicWrapper(PolymorphicWrapper &&rhs) ptr(0) {
  std::swap(ptr, rhs.ptr);
}
```

---

*[shared_model/interfaces/polymorphic_wrapper.hpp, line 78 at r4](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kx-BNh_jfhlYomTjfRB:-Kx-BNh_jfhlYomTjfRC:bw3hnfj) ([raw file](https://github.com/hyperledger/iroha/blob/57f74f5cf05e1d1a12f85876e5ffc221e844099d/shared_model/interfaces/polymorphic_wrapper.hpp#L78)):*
> ```cpp
>        */
>       PolymorphicWrapper &operator=(PolymorphicWrapper &&rhs) noexcept {
>         std::swap(this->ptr, rhs.ptr);
> ```

Same as the previous

---

*[shared_model/interfaces/transaction.hpp, line 117 at r4](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kx-Cd3Qo8JJ3nbo9FEU:-Kx-Cd3Qo8JJ3nbo9FEV:b-5jva8v) ([raw file](https://github.com/hyperledger/iroha/blob/57f74f5cf05e1d1a12f85876e5ffc221e844099d/shared_model/interfaces/transaction.hpp#L117)):*
> ```cpp
> 
>       iroha::model::Transaction *makeOldModel() const {
>         // TODO implement conversion to old style transaction
> ```

Maybe then it's better to name it cast or convert rather than make?

---

*[shared_model/interfaces/commands/command.hpp, line 68 at r4](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kx-D8Q0PKO95paFi6fJ:-Kx-D8Q0PKO95paFi6fK:b-wt5fgp) ([raw file](https://github.com/hyperledger/iroha/blob/57f74f5cf05e1d1a12f85876e5ffc221e844099d/shared_model/interfaces/commands/command.hpp#L68)):*
> ```cpp
>       using CommandListType = decltype(command_variant)::types;
> 
>       std::string toString() const override {
> ```

Maybe it's a good idea to make in consistent with the stl (`to_string`)? But it brings chaos to naming thoug

---

*[shared_model/interfaces/common_objects/hash.hpp, line 32 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/647#-Kwufg2QUdIlfjNvghTO:-Kx-DSiHP3WOaiTEfPQs:b-jo0dib) ([raw file](https://github.com/hyperledger/iroha/blob/c68ff0700ee32423a1e2dafa48f34497a092f650/shared_model/interfaces/common_objects/hash.hpp#L32)):*
<details><summary><i>Previously, Warchant (Bogdan) wrote…</i></summary><blockquote>

maybe it is better to call it `toBlob`? 
</blockquote></details>

imo blob is better

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/647)*
<!-- Sent from Reviewable.io -->
",2017-10-21 18:39:03,2017-10-21 18:39:03
https://api.github.com/repos/hyperledger/iroha/issues/647,https://api.github.com/repos/hyperledger/iroha/issues/comments/338423544,https://github.com/hyperledger/iroha/pull/647#issuecomment-338423544,l4l,"



Reviewed 13 of 20 files at r1, 2 of 4 files at r2, 1 of 1 files at r3, 4 of 4 files at r4.
Review status: all files reviewed at latest revision, 19 unresolved discussions, some commit checks failed.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/647)*
<!-- Sent from Reviewable.io -->
",2017-10-21 18:39:49,2017-10-21 18:39:49
https://api.github.com/repos/hyperledger/iroha/issues/647,https://api.github.com/repos/hyperledger/iroha/issues/comments/338626039,https://github.com/hyperledger/iroha/pull/647#issuecomment-338626039,l4l,"<img class=""emoji"" title="":lgtm:"" alt="":lgtm:"" align=""absmiddle"" src=""https://reviewable.io/lgtm.png"" height=""20"" width=""61""/>
btw, <a href=""https://google.github.io/styleguide/cppguide.html#Declaration_Order"">why in some classes firstly goes private section then public</a>? (note that it's ""usually"", not ""required"")

---

Reviewed 7 of 7 files at r5.
Review status: all files reviewed at latest revision, 19 unresolved discussions, some commit checks failed.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/647#-:-Kx7vDp5t1kvCkfIERvB:b-awli31)*
<!-- Sent from Reviewable.io -->
",2017-10-23 11:12:37,2017-10-23 11:13:58
https://api.github.com/repos/hyperledger/iroha/issues/647,https://api.github.com/repos/hyperledger/iroha/issues/comments/338655193,https://github.com/hyperledger/iroha/pull/647#issuecomment-338655193,sorabot,"SonarQube analysis reported 7 issues

1. ![INFO][INFO] [signature.hpp#L31](https://github.com/hyperledger/iroha/blob/7eaadb10c452944aedc7a3f41d4d7c5b4ebf2a25/irohad/model/signature.hpp#L31): Undocumented API: Signature [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [signature.hpp#L34](https://github.com/hyperledger/iroha/blob/7eaadb10c452944aedc7a3f41d4d7c5b4ebf2a25/irohad/model/signature.hpp#L34): Undocumented API: signature [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [signature.hpp#L36](https://github.com/hyperledger/iroha/blob/7eaadb10c452944aedc7a3f41d4d7c5b4ebf2a25/irohad/model/signature.hpp#L36): Undocumented API: SignatureType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [signature.hpp#L38](https://github.com/hyperledger/iroha/blob/7eaadb10c452944aedc7a3f41d4d7c5b4ebf2a25/irohad/model/signature.hpp#L38): Undocumented API: pubkey [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [signature.hpp#L40](https://github.com/hyperledger/iroha/blob/7eaadb10c452944aedc7a3f41d4d7c5b4ebf2a25/irohad/model/signature.hpp#L40): Undocumented API: KeyType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [signature.hpp#L42](https://github.com/hyperledger/iroha/blob/7eaadb10c452944aedc7a3f41d4d7c5b4ebf2a25/irohad/model/signature.hpp#L42): Undocumented API: operator== [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [signature.hpp#L43](https://github.com/hyperledger/iroha/blob/7eaadb10c452944aedc7a3f41d4d7c5b4ebf2a25/irohad/model/signature.hpp#L43): Undocumented API: operator!= [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-10-23 13:16:32,2017-10-23 13:16:32
https://api.github.com/repos/hyperledger/iroha/issues/646,https://api.github.com/repos/hyperledger/iroha/issues/comments/337921680,https://github.com/hyperledger/iroha/pull/646#issuecomment-337921680,Warchant,Sign DCO,2017-10-19 14:15:39,2017-10-19 14:15:39
https://api.github.com/repos/hyperledger/iroha/issues/646,https://api.github.com/repos/hyperledger/iroha/issues/comments/337923791,https://github.com/hyperledger/iroha/pull/646#issuecomment-337923791,Warchant,"<img class=""emoji"" title="":lgtm:"" alt="":lgtm:"" align=""absmiddle"" src=""https://reviewable.io/lgtm.png"" height=""20"" width=""61""/>

---

Review status: all files reviewed at latest revision, 1 unresolved discussion.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/646#-:-Kwp-uANuJQGOmOrmWfY:bnfp4nl)*
<!-- Sent from Reviewable.io -->
",2017-10-19 14:22:37,2017-10-19 14:22:37
https://api.github.com/repos/hyperledger/iroha/issues/646,https://api.github.com/repos/hyperledger/iroha/issues/comments/337924533,https://github.com/hyperledger/iroha/pull/646#issuecomment-337924533,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/646?src=pr&el=h1) Report
> Merging [#646](https://codecov.io/gh/hyperledger/iroha/pull/646?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/c1fdf6baceb4bec827612c83814de0879539c24d?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/646/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/646?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #646   +/-   ##
========================================
  Coverage    43.45%   43.45%           
========================================
  Files          301      301           
  Lines        12022    12022           
  Branches      6600     6600           
========================================
  Hits          5224     5224           
  Misses         724      724           
  Partials      6074     6074
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/646?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/646?src=pr&el=footer). Last update [c1fdf6b...7eae843](https://codecov.io/gh/hyperledger/iroha/pull/646?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-19 14:25:00,2017-10-19 14:30:31
https://api.github.com/repos/hyperledger/iroha/issues/645,https://api.github.com/repos/hyperledger/iroha/issues/comments/337874082,https://github.com/hyperledger/iroha/pull/645#issuecomment-337874082,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=h1) Report
> Merging [#645](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/4a57cd95b5d34b1aaaac3eed9fc7eed5fb97b693?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `21.83%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/645/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #645      +/-   ##
===========================================
+ Coverage    43.45%   43.45%   +<.01%     
===========================================
  Files          301      297       -4     
  Lines        12022    12002      -20     
  Branches      6600     6591       -9     
===========================================
- Hits          5224     5216       -8     
+ Misses         724      721       -3     
+ Partials      6074     6065       -9
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `85.71% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9zdG9yYWdlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.hpp](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `55.35% <0%> (-0.5%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `16.54% <20.75%> (+0.5%)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `27.81% <22.22%> (-1.43%)` | :arrow_down: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `37.23% <33.33%> (-0.55%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=footer). Last update [4a57cd9...51ef349](https://codecov.io/gh/hyperledger/iroha/pull/645?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-19 11:00:48,2017-10-22 13:47:35
https://api.github.com/repos/hyperledger/iroha/issues/645,https://api.github.com/repos/hyperledger/iroha/issues/comments/338478672,https://github.com/hyperledger/iroha/pull/645#issuecomment-338478672,sorabot,"SonarQube analysis reported 82 issues
* ![CRITICAL][CRITICAL] 3 critical
* ![MAJOR][MAJOR] 4 major
* ![MINOR][MINOR] 10 minor
* ![INFO][INFO] 65 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L153](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/main/application.cpp#L153): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L207](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/main/application.cpp#L207): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L211](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/main/application.cpp#L211): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [storage_impl.cpp#L30](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/ametsuchi/impl/storage_impl.cpp#L30): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [storage_impl.hpp#L82](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/ametsuchi/impl/storage_impl.hpp#L82): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/main/application.cpp#L31): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.hpp#L62](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/main/application.hpp#L62): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [flat_file.cpp#L73](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L73): Define a constant instead of duplicating this literal ""FLAT_FILE"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flat_file.cpp#L98](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L98): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [flat_file.cpp#L105](https://github.com/hyperledger/iroha/blob/51ef349cc2bfbc34e6d5474fa26e60bf7dd982ed/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L105): Extract this magic number '2u' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-22 13:46:58,2017-10-22 13:46:58
https://api.github.com/repos/hyperledger/iroha/issues/644,https://api.github.com/repos/hyperledger/iroha/issues/comments/337821982,https://github.com/hyperledger/iroha/pull/644#issuecomment-337821982,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/644?src=pr&el=h1) Report
> Merging [#644](https://codecov.io/gh/hyperledger/iroha/pull/644?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1af59cf99b990807e2b521f0f55772a093314e75?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/644/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/644?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #644   +/-   ##
========================================
  Coverage    43.45%   43.45%           
========================================
  Files          301      301           
  Lines        12022    12022           
  Branches      6600     6600           
========================================
  Hits          5224     5224           
  Misses         724      724           
  Partials      6074     6074
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/644?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/644?src=pr&el=footer). Last update [1af59cf...775823f](https://codecov.io/gh/hyperledger/iroha/pull/644?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-19 07:23:17,2017-10-19 13:24:29
https://api.github.com/repos/hyperledger/iroha/issues/644,https://api.github.com/repos/hyperledger/iroha/issues/comments/337875664,https://github.com/hyperledger/iroha/pull/644#issuecomment-337875664,Warchant,"@lebdron all changes are related to cache: 
- added `{{ arch }}` to cache key, because now we use two different architectures, which require different cache
- removed limit for the cache size
- removed comments
- removed upsource webhook notification, since we no longer use upsource

That's all",2017-10-19 11:08:53,2017-10-19 11:10:10
https://api.github.com/repos/hyperledger/iroha/issues/644,https://api.github.com/repos/hyperledger/iroha/issues/comments/337882131,https://github.com/hyperledger/iroha/pull/644#issuecomment-337882131,lebdron,"@Warchant 
1. Removing cache size limit may potentially increase the time of build. Is there a reason to remove the limit? If there is no particular reason, please restore command that were previously used for ccache. Also the flags for ccache used are unreadable now, consider using full versions.
2. CircleCI uses prefix matching to get the latest cache in case of partial match. Placing `{{ arch }}` after `{{ .Branch }}` will not allow to reuse cache by new branches.
Use the following key for save `build-cache-{{ arch }}-{{ .Branch }}-{{ epoch }}`, and the following keys for restore: `build-cache-{{ arch }}-{{ .Branch }}-`, `build-cache-{{ arch }}-`.",2017-10-19 11:41:03,2017-10-19 11:41:03
https://api.github.com/repos/hyperledger/iroha/issues/644,https://api.github.com/repos/hyperledger/iroha/issues/comments/337904294,https://github.com/hyperledger/iroha/pull/644#issuecomment-337904294,Warchant,"@lebdron done
",2017-10-19 13:15:53,2017-10-19 13:15:53
https://api.github.com/repos/hyperledger/iroha/issues/643,https://api.github.com/repos/hyperledger/iroha/issues/comments/337733857,https://github.com/hyperledger/iroha/pull/643#issuecomment-337733857,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=h1) Report
> Merging [#643](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=desc) into [feature/mst-trunk](https://codecov.io/gh/hyperledger/iroha/commit/270f0d70bb65d3ceec75d33e26e8b3fc4ab1b565?src=pr&el=desc) will **decrease** coverage by `0.13%`.
> The diff coverage is `20.31%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/643/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/mst-trunk     #643      +/-   ##
=====================================================
- Coverage              44.46%   44.33%   -0.14%     
=====================================================
  Files                    294      297       +3     
  Lines                  11723    11787      +64     
  Branches                6246     6293      +47     
=====================================================
+ Hits                    5213     5226      +13     
- Misses                   756      777      +21     
- Partials                5754     5784      +30
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...i\_sig\_transactions/gossip\_propagation\_strategy.hpp](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvZ29zc2lwX3Byb3BhZ2F0aW9uX3N0cmF0ZWd5LmhwcA==) | `100% <100%> (ø)` | |
| [...\_transactions/gossip\_propagation\_strategy\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvZ29zc2lwX3Byb3BhZ2F0aW9uX3N0cmF0ZWd5X3Rlc3QuY3Bw) | `17.64% <17.64%> (ø)` | |
| [...\_transactions/impl/gossip\_propagation\_strategy.cpp](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvaW1wbC9nb3NzaXBfcHJvcGFnYXRpb25fc3RyYXRlZ3kuY3Bw) | `20.68% <20.68%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=footer). Last update [270f0d7...d592fa9](https://codecov.io/gh/hyperledger/iroha/pull/643?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-18 21:30:40,2017-10-19 15:44:45
https://api.github.com/repos/hyperledger/iroha/issues/643,https://api.github.com/repos/hyperledger/iroha/issues/comments/337816947,https://github.com/hyperledger/iroha/pull/643#issuecomment-337816947,muratovv,And also add another reviewer to PR.,2017-10-19 06:58:03,2017-10-19 06:58:03
https://api.github.com/repos/hyperledger/iroha/issues/643,https://api.github.com/repos/hyperledger/iroha/issues/comments/338166087,https://github.com/hyperledger/iroha/pull/643#issuecomment-338166087,l4l,Seems that I configured my clang format incorrectly. I'll submit a patch shortly ,2017-10-20 10:13:07,2017-10-20 10:13:07
https://api.github.com/repos/hyperledger/iroha/issues/643,https://api.github.com/repos/hyperledger/iroha/issues/comments/338168968,https://github.com/hyperledger/iroha/pull/643#issuecomment-338168968,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [gossip_propagation_strategy.cpp#L39](https://github.com/hyperledger/iroha/blob/89a61d52eb66e85351e2e87793a5072c95a8d5a1/irohad/multi_sig_transactions/impl/gossip_propagation_strategy.cpp#L39): Missing curly brace. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingCurlyBraces)
1. ![INFO][INFO] [gossip_propagation_strategy.hpp#L36](https://github.com/hyperledger/iroha/blob/89a61d52eb66e85351e2e87793a5072c95a8d5a1/irohad/multi_sig_transactions/gossip_propagation_strategy.hpp#L36): Undocumented API: OptPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-20 10:26:23,2017-10-20 10:26:23
https://api.github.com/repos/hyperledger/iroha/issues/642,https://api.github.com/repos/hyperledger/iroha/issues/comments/337775931,https://github.com/hyperledger/iroha/pull/642#issuecomment-337775931,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/642?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@89506a5`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/642/graphs/tree.svg?width=650&height=150&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/642?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #642   +/-   ##
==========================================
  Coverage           ?   43.13%           
==========================================
  Files              ?      300           
  Lines              ?    11973           
  Branches           ?     6608           
==========================================
  Hits               ?     5165           
  Misses             ?      710           
  Partials           ?     6098
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/642?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/642?src=pr&el=footer). Last update [89506a5...088a2b3](https://codecov.io/gh/hyperledger/iroha/pull/642?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-19 01:47:57,2017-10-19 01:47:57
https://api.github.com/repos/hyperledger/iroha/issues/641,https://api.github.com/repos/hyperledger/iroha/issues/comments/337779305,https://github.com/hyperledger/iroha/pull/641#issuecomment-337779305,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=h1) Report
> Merging [#641](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/ea84e243a9f2b85bcde04b7602e66a324ddbe0bc?src=pr&el=desc) will **increase** coverage by `0.31%`.
> The diff coverage is `73.68%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/641/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #641      +/-   ##
===========================================
+ Coverage    43.13%   43.45%   +0.31%     
===========================================
  Files          300      301       +1     
  Lines        11973    12013      +40     
  Branches      6608     6593      -15     
===========================================
+ Hits          5165     5220      +55     
- Misses         710      722      +12     
+ Partials      6098     6071      -27
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/libs/crypto/signature\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8vc2lnbmF0dXJlX3Rlc3QuY3Bw) | `10% <ø> (+8%)` | :arrow_up: |
| [libs/crypto/ed25519/verify.c](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS92ZXJpZnkuYw==) | `92.15% <100%> (ø)` | :arrow_up: |
| [libs/crypto/ed25519/sign.c](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS9zaWduLmM=) | `100% <100%> (ø)` | :arrow_up: |
| [libs/crypto/ed25519/keypair.c](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS9rZXlwYWlyLmM=) | `100% <100%> (ø)` | :arrow_up: |
| [libs/crypto/ed25519/sha512.c](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS9zaGE1MTIuYw==) | `68.75% <68.75%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=footer). Last update [ea84e24...8c21fbc](https://codecov.io/gh/hyperledger/iroha/pull/641?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-19 02:11:34,2017-10-19 03:16:59
https://api.github.com/repos/hyperledger/iroha/issues/641,https://api.github.com/repos/hyperledger/iroha/issues/comments/337788061,https://github.com/hyperledger/iroha/pull/641#issuecomment-337788061,sorabot,"SonarQube analysis reported 35 issues
* ![MAJOR][MAJOR] 8 major
* ![MINOR][MINOR] 12 minor
* ![INFO][INFO] 15 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [add_scalar.c#L1](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/add_scalar.c#L1): Skipping configuration 'int32_t' since the value of 'int32_t' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AConfigurationNotChecked)
1. ![MAJOR][MAJOR] [keypair.c#L1](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/keypair.c#L1): Skipping configuration 'int32_t' since the value of 'int32_t' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AConfigurationNotChecked)
1. ![MAJOR][MAJOR] [sha512.c#L171](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/sha512.c#L171): The Cyclomatic Complexity of this function is 12 which is greater than 10 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MAJOR][MAJOR] [sha512.c#L271](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/sha512.c#L271): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![MAJOR][MAJOR] [sha512.c#L272](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/sha512.c#L272): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![MAJOR][MAJOR] [sha512.c#L273](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/sha512.c#L273): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![MAJOR][MAJOR] [sign.c#L1](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/sign.c#L1): Skipping configuration 'int32_t' since the value of 'int32_t' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AConfigurationNotChecked)
1. ![MAJOR][MAJOR] [verify.c#L1](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/verify.c#L1): Skipping configuration 'int32_t' since the value of 'int32_t' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AConfigurationNotChecked)
1. ![MINOR][MINOR] [add_scalar.c#L8](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/add_scalar.c#L8): The function 'ed25519_add_scalar' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [sha512.c#L93](https://github.com/hyperledger/iroha/blob/8c21fbca05f9e052e7902f99a9ec10fc8884407e/libs/crypto/ed25519/sha512.c#L93): The scope of the variable 't0' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-19 03:16:30,2017-10-19 03:16:30
https://api.github.com/repos/hyperledger/iroha/issues/640,https://api.github.com/repos/hyperledger/iroha/issues/comments/337681937,https://github.com/hyperledger/iroha/pull/640#issuecomment-337681937,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=h1) Report
> Merging [#640](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0c4749d343e102116db238d99fd7ab3400c754b4?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `37.93%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/640/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #640      +/-   ##
===========================================
+ Coverage    43.45%   43.45%   +<.01%     
===========================================
  Files          301      301              
  Lines        12013    12022       +9     
  Branches      6593     6600       +7     
===========================================
+ Hits          5220     5224       +4     
- Misses         722      724       +2     
- Partials      6071     6074       +3
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ohad/consensus/yac/transport/impl/network\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `39.53% <25%> (-0.95%)` | :arrow_down: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `55.85% <33.33%> (+0.77%)` | :arrow_up: |
| [...ohad/consensus/yac/transport/impl/network\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmNwcA==) | `21.5% <33.33%> (+1.96%)` | :arrow_up: |
| [irohad/simulator/impl/simulator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9pbXBsL3NpbXVsYXRvci5jcHA=) | `44.44% <42.85%> (-0.56%)` | :arrow_down: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `37.77% <66.66%> (+0.99%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=footer). Last update [0c4749d...b11d32c](https://codecov.io/gh/hyperledger/iroha/pull/640?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-18 18:18:09,2017-10-19 03:47:38
https://api.github.com/repos/hyperledger/iroha/issues/640,https://api.github.com/repos/hyperledger/iroha/issues/comments/337791689,https://github.com/hyperledger/iroha/pull/640#issuecomment-337791689,sorabot,"SonarQube analysis reported 90 issues
* ![BLOCKER][BLOCKER] 1 blocker
* ![CRITICAL][CRITICAL] 3 critical
* ![MAJOR][MAJOR] 3 major
* ![MINOR][MINOR] 7 minor
* ![INFO][INFO] 76 info

#### Top 10 issues

1. ![BLOCKER][BLOCKER] [iroha_conf_loader.hpp#L43](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/main/iroha_conf_loader.hpp#L43): Using namespace are not allowed in header files. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUsingNamespaceInHeader)
1. ![CRITICAL][CRITICAL] [application.cpp#L151](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/main/application.cpp#L151): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L205](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/main/application.cpp#L205): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L209](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/main/application.cpp#L209): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [flat_file.cpp#L60](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L60): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![MAJOR][MAJOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/main/application.cpp#L31): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.hpp#L62](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/main/application.hpp#L62): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [flat_file.cpp#L72](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L72): Define a constant instead of duplicating this literal ""FLAT_FILE"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flat_file.cpp#L201](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L201): The function 'directory' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [network_impl.cpp#L51](https://github.com/hyperledger/iroha/blob/b11d32c1fc101b9de46d9f09d787f9c33f258311/irohad/consensus/yac/transport/impl/network_impl.cpp#L51): Define a constant instead of duplicating this literal ""address"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-19 03:47:04,2017-10-19 03:47:04
https://api.github.com/repos/hyperledger/iroha/issues/639,https://api.github.com/repos/hyperledger/iroha/issues/comments/337570649,https://github.com/hyperledger/iroha/pull/639#issuecomment-337570649,sorabot,"SonarQube analysis reported 23 issues
* ![INFO][INFO] 23 info

#### Top 10 issues

1. ![INFO][INFO] [config.hpp#L41](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L41): Undocumented API: host [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [config.hpp#L42](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L42): Undocumented API: port [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [config.hpp#L50](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L50): Undocumented API: username [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [config.hpp#L51](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L51): Undocumented API: password [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [config.hpp#L71](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L71): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [config.hpp#L72](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L72): Undocumented API: keypair [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [config.hpp#L152](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L152): Undocumented API: loaded_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [config.hpp#L154](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L154): Undocumented API: redis_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [config.hpp#L155](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L155): Undocumented API: pg_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [config.hpp#L156](https://github.com/hyperledger/iroha/blob/b1dc9563e635691d3215b978cdfebf0a49b9880e/irohad/main/config/config.hpp#L156): Undocumented API: torii_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-10-18 12:13:34,2017-10-18 12:13:34
https://api.github.com/repos/hyperledger/iroha/issues/639,https://api.github.com/repos/hyperledger/iroha/issues/comments/337570785,https://github.com/hyperledger/iroha/pull/639#issuecomment-337570785,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=h1) Report
> Merging [#639](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/98c0d2240e86e5b46fc18e32c27374e06bfedc48?src=pr&el=desc) will **decrease** coverage by `4.77%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/639/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #639      +/-   ##
===========================================
- Coverage    48.01%   43.24%   -4.78%     
===========================================
  Files          304      304              
  Lines        11025    12035    +1010     
  Branches      5652     6625     +973     
===========================================
- Hits          5294     5204      -90     
- Misses         489      714     +225     
- Partials      5242     6117     +875
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/config/config.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL21haW4vY29uZmlnL2NvbmZpZy5ocHA=) | `83.87% <100%> (-2.34%)` | :arrow_down: |
| [irohad/consensus/yac/impl/yac\_gate\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/ametsuchi/impl/test\_storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Rlc3Rfc3RvcmFnZV9pbXBsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [...ad/consensus/yac/impl/yac\_crypto\_provider\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfY3J5cHRvX3Byb3ZpZGVyX2ltcGwuaHBw) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/ametsuchi/impl/flat\_file\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZV9ibG9ja19xdWVyeS5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/network/ordering\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfc2VydmljZS5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/ametsuchi/impl/redis\_flat\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2ZsYXRfYmxvY2tfcXVlcnkuaHBw) | `0% <0%> (-100%)` | :arrow_down: |
| [...d/network/impl/peer\_communication\_service\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9wZWVyX2NvbW11bmljYXRpb25fc2VydmljZV9pbXBsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/network/impl/block\_loader\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfc2VydmljZS5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| ... and [135 more](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=footer). Last update [98c0d22...b1dc956](https://codecov.io/gh/hyperledger/iroha/pull/639?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-18 12:14:09,2017-10-18 12:14:09
https://api.github.com/repos/hyperledger/iroha/issues/637,https://api.github.com/repos/hyperledger/iroha/issues/comments/337459487,https://github.com/hyperledger/iroha/pull/637#issuecomment-337459487,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/637?src=pr&el=h1) Report
> Merging [#637](https://codecov.io/gh/hyperledger/iroha/pull/637?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/adef992ca707d43eda458058482667b7c47e53c7?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/637/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/637?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #637   +/-   ##
========================================
  Coverage    48.01%   48.01%           
========================================
  Files          304      304           
  Lines        11025    11025           
  Branches      5652     5652           
========================================
  Hits          5294     5294           
  Misses         489      489           
  Partials      5242     5242
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/637?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/637?src=pr&el=footer). Last update [adef992...ea2b561](https://codecov.io/gh/hyperledger/iroha/pull/637?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-18 04:48:28,2017-10-18 08:10:46
https://api.github.com/repos/hyperledger/iroha/issues/636,https://api.github.com/repos/hyperledger/iroha/issues/comments/337163445,https://github.com/hyperledger/iroha/pull/636#issuecomment-337163445,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=h1) Report
> Merging [#636](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b00fb4224e6ec923f06d911eda0da38aa4eb08a6?src=pr&el=desc) will **decrease** coverage by `5.28%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/636/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #636      +/-   ##
===========================================
- Coverage    49.95%   44.66%   -5.29%     
===========================================
  Files          298      300       +2     
  Lines        10754    11819    +1065     
  Branches      5314     6287     +973     
===========================================
- Hits          5372     5279      -93     
- Misses         488      773     +285     
- Partials      4894     5767     +873
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/ametsuchi/impl/test\_storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Rlc3Rfc3RvcmFnZV9pbXBsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/network/impl/block\_loader\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfc2VydmljZS5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [...ad/consensus/yac/impl/yac\_crypto\_provider\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfY3J5cHRvX3Byb3ZpZGVyX2ltcGwuaHBw) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/network/impl/block\_loader\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfaW1wbC5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/validation/impl/stateful\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/ametsuchi/impl/flat\_file\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZV9ibG9ja19xdWVyeS5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [...d/network/impl/peer\_communication\_service\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9wZWVyX2NvbW11bmljYXRpb25fc2VydmljZV9pbXBsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/ametsuchi/impl/peer\_query\_wsv.hpp](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3BlZXJfcXVlcnlfd3N2LmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| ... and [139 more](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=footer). Last update [b00fb42...aa9a153](https://codecov.io/gh/hyperledger/iroha/pull/636?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-17 08:51:25,2017-10-17 08:51:25
https://api.github.com/repos/hyperledger/iroha/issues/635,https://api.github.com/repos/hyperledger/iroha/issues/comments/336891941,https://github.com/hyperledger/iroha/pull/635#issuecomment-336891941,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=h1) Report
> Merging [#635](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b614360e16db836ad22b8303a6f7a4f0d8effb35?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/635/graphs/tree.svg?height=150&src=pr&width=650&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #635      +/-   ##
===========================================
+ Coverage    44.66%   44.67%   +<.01%     
===========================================
  Files          300      300              
  Lines        11819    11820       +1     
  Branches      6287     6287              
===========================================
+ Hits          5279     5280       +1     
  Misses         773      773              
  Partials      5767     5767
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/impl/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `28.64% <0%> (-0.16%)` | :arrow_down: |
| [...ohad/consensus/yac/transport/impl/network\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmNwcA==) | `19.54% <0%> (ø)` | :arrow_up: |
| [iroha-cli/client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5jcHA=) | `36% <0%> (ø)` | :arrow_up: |
| [libs/common/byteutils.hpp](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=tree#diff-bGlicy9jb21tb24vYnl0ZXV0aWxzLmhwcA==) | `25% <0%> (ø)` | :arrow_up: |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `100% <0%> (ø)` | :arrow_up: |
| [irohad/model/peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3BlZXIuaHBw) | `66.66% <0%> (+11.11%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=footer). Last update [b614360...f52190b](https://codecov.io/gh/hyperledger/iroha/pull/635?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-16 13:47:54,2017-10-16 13:47:54
https://api.github.com/repos/hyperledger/iroha/issues/634,https://api.github.com/repos/hyperledger/iroha/issues/comments/336883640,https://github.com/hyperledger/iroha/pull/634#issuecomment-336883640,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/634?src=pr&el=h1) Report
> Merging [#634](https://codecov.io/gh/hyperledger/iroha/pull/634?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/31888c515fcec9a2777139fe347732dd5c9cc46d?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/634/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/634?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #634   +/-   ##
========================================
  Coverage    44.66%   44.66%           
========================================
  Files          300      300           
  Lines        11819    11819           
  Branches      6287     6287           
========================================
  Hits          5279     5279           
  Misses         773      773           
  Partials      5767     5767
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/634?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/634?src=pr&el=footer). Last update [31888c5...b18969b](https://codecov.io/gh/hyperledger/iroha/pull/634?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-16 13:17:53,2017-10-16 13:17:53
https://api.github.com/repos/hyperledger/iroha/issues/633,https://api.github.com/repos/hyperledger/iroha/issues/comments/337279874,https://github.com/hyperledger/iroha/pull/633#issuecomment-337279874,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=h1) Report
> Merging [#633](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=desc) into [feature/mst-trunk](https://codecov.io/gh/hyperledger/iroha/commit/5f0f5d1b70cc5df2b6d68667231ad609e835ab76?src=pr&el=desc) will **increase** coverage by `0.08%`.
> The diff coverage is `48.25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/633/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/mst-trunk     #633      +/-   ##
=====================================================
+ Coverage              44.38%   44.46%   +0.08%     
=====================================================
  Files                    286      294       +8     
  Lines                  11587    11723     +136     
  Branches                6177     6246      +69     
=====================================================
+ Hits                    5143     5213      +70     
  Misses                   756      756              
- Partials                5688     5754      +66
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...had/multi\_sig\_transactions/storage/mst\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9tc3Rfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/multi\_sig\_transactions/mst\_processor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvbXN0X3Byb2Nlc3Nvci5ocHA=) | `0% <ø> (ø)` | |
| [irohad/network/mst\_transport.hpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvbXN0X3RyYW5zcG9ydC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/multi\_sig\_transactions/state/mst\_state.hpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGUvbXN0X3N0YXRlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [...\_sig\_transactions/transport/mst\_transport\_grpc.hpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvdHJhbnNwb3J0L21zdF90cmFuc3BvcnRfZ3JwYy5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...ulti\_sig\_transactions/storage/mst\_storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9tc3Rfc3RvcmFnZV9pbXBsLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...ohad/multi\_sig\_transactions/mst\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvbXN0X3Byb2Nlc3Nvcl9pbXBsLmhwcA==) | `0% <0%> (ø)` | |
| [...e/irohad/multi\_sig\_transactions/transport\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvdHJhbnNwb3J0X3Rlc3QuY3Bw) | `11.42% <0%> (+0.61%)` | :arrow_up: |
| [...ad/multi\_sig\_transactions/state/impl/mst\_state.cpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGUvaW1wbC9tc3Rfc3RhdGUuY3Bw) | `62.26% <100%> (+1.47%)` | :arrow_up: |
| [...ulti\_sig\_transactions/mst\_propagation\_strategy.hpp](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvbXN0X3Byb3BhZ2F0aW9uX3N0cmF0ZWd5LmhwcA==) | `100% <100%> (ø)` | |
| ... and [16 more](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=footer). Last update [5f0f5d1...6923825](https://codecov.io/gh/hyperledger/iroha/pull/633?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-17 15:59:48,2017-10-17 17:01:28
https://api.github.com/repos/hyperledger/iroha/issues/633,https://api.github.com/repos/hyperledger/iroha/issues/comments/337296407,https://github.com/hyperledger/iroha/pull/633#issuecomment-337296407,sorabot,"SonarQube analysis reported 32 issues
* ![MINOR][MINOR] 1 minor
* ![INFO][INFO] 31 info

#### Top 10 issues

1. ![MINOR][MINOR] [mst_storage_impl.hpp#L35](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/storage/mst_storage_impl.hpp#L35): Unused private function: 'MstStorageStateImpl::getState' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![INFO][INFO] [mst_processor_impl.cpp#L82](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/impl/mst_processor_impl.cpp#L82): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [mst_processor.hpp#L64](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/mst_processor.hpp#L64): Undocumented API: MstProcessor [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L51](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/mst_processor_impl.hpp#L51): Undocumented API: propagateTransactionImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L54](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/mst_processor_impl.hpp#L54): Undocumented API: onStateUpdateImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L56](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/mst_processor_impl.hpp#L56): Undocumented API: onPreparedTransactionsImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_processor_impl.hpp#L59](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/mst_processor_impl.hpp#L59): Undocumented API: onExpiredTransactionsImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_propagation_strategy.hpp#L31](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/mst_propagation_strategy.hpp#L31): Undocumented API: PropagationData [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_types.hpp#L26](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/mst_types.hpp#L26): Undocumented API: TransactionType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_types.hpp#L27](https://github.com/hyperledger/iroha/blob/69238250edfb7d14f5cadda3b8a2a5796ad14708/irohad/multi_sig_transactions/mst_types.hpp#L27): Undocumented API: ConstPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-17 16:56:40,2017-10-17 16:56:40
https://api.github.com/repos/hyperledger/iroha/issues/632,https://api.github.com/repos/hyperledger/iroha/issues/comments/375907505,https://github.com/hyperledger/iroha/issues/632#issuecomment-375907505,l4l,Seems outdated as long as jira issue is closed,2018-03-24 16:53:19,2018-03-24 16:53:19
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/336629721,https://github.com/hyperledger/iroha/pull/631#issuecomment-336629721,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=631) <br/>All committers have signed the CLA.,2017-10-14 11:45:47,2018-08-22 07:30:24
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/336811257,https://github.com/hyperledger/iroha/pull/631#issuecomment-336811257,neewy,"@Warchant there is a problem with sonar scanner, which worth checking after PR review",2017-10-16 08:06:50,2017-10-16 08:06:50
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/336844018,https://github.com/hyperledger/iroha/pull/631#issuecomment-336844018,amitkumarj441,"Yes @neewy, seems Sonar Scanner is unhappy with my PR :disappointed: ",2017-10-16 10:18:10,2017-10-16 10:18:10
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/336884258,https://github.com/hyperledger/iroha/pull/631#issuecomment-336884258,Warchant,"Don't forget to rebase on `develop`, it seems I fixed the issue with `sonar-pr`. 

Don't forget to sign DCO with **every** commit:
```
git commit -s -m  ""commit message""
```",2017-10-16 13:20:13,2017-10-16 13:20:13
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/336965622,https://github.com/hyperledger/iroha/pull/631#issuecomment-336965622,amitkumarj441,"@Warchant Sorry, I mistakenly ran `git push -f` and when signing with `git commit -s -m  ""commit message""` it's throwing 
```
ith@ith-ThinkPad-W520:~/Practice/iroha$ git commit -s -m ""Signed-off-by: Amit Kumar Jaiswal <amitkumarj441@gmail.com>""
On branch patch-1
nothing to commit, working directory clean
```
Can you please delete those unrelated commits except my changes in PR?",2017-10-16 17:41:33,2017-10-16 17:41:43
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/337185332,https://github.com/hyperledger/iroha/pull/631#issuecomment-337185332,Warchant,Sure.,2017-10-17 10:13:39,2017-10-17 10:13:39
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/337286259,https://github.com/hyperledger/iroha/pull/631#issuecomment-337286259,amitkumarj441,Thanks @Warchant :+1: for removing irrelevant commits to this PR. But commit [c9d67e9](https://github.com/hyperledger/iroha/pull/631/commits/c9d67e93931247152a2fa1dbe415159fbf8df9f9) needs sign-off. I forgot my existing gpg passphrase and need to create another gpg to sign it.,2017-10-17 16:22:02,2017-10-17 16:22:58
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/337337452,https://github.com/hyperledger/iroha/pull/631#issuecomment-337337452,l4l,"Well, you actually don't required to make real signing. Comment with __Signed-off-by__ is enough
You can try [this](https://gist.github.com/l4l/694ca936ef538a881cdc3604cc12b2e0) script for make this automatically (though it may have bug(s))",2017-10-17 19:08:58,2017-10-17 19:08:58
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/337459845,https://github.com/hyperledger/iroha/pull/631#issuecomment-337459845,Warchant,"P.S. you don't have to **cryptographically** sign commits. You need to sign DCO. Every commit should contain 

(put your data)
```
Signed-off-by: Kitsu <mail@kitsu.me>
```

```
$ git commit
(your favourite editor will be open)
<1st line: commit title>
<blank line>
<optional commit description>
Signed-off-by: Kitsu <mail@kitsu.me>
<save file>
```
Done! You just signed it. 
Easy way is to predefine a template or to use -s:
```
$ git commit -s
```",2017-10-18 04:51:29,2017-10-18 04:52:15
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/337638156,https://github.com/hyperledger/iroha/pull/631#issuecomment-337638156,amitkumarj441,"Thanks @l4l and @Warchant for letting me know about PRs rules .
Sorry for polluting my PRs and could you remove this irrelevant [commit](https://github.com/hyperledger/iroha/pull/631/commits/0ff9d0b5cfddb88c0e0704e3e11f15bac914c81a).
Out of the six main commits, I signed 2 of them and 4 of them still unsigned.
Please let me know should I sign my other 4 commits ( as @Warchant already signed it and that's why I got confused ).",2017-10-18 15:53:08,2017-10-18 15:53:08
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/338555838,https://github.com/hyperledger/iroha/pull/631#issuecomment-338555838,neewy,@amitkumarj441 hi! What is the status?,2017-10-23 06:02:14,2017-10-23 06:02:14
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/338561858,https://github.com/hyperledger/iroha/pull/631#issuecomment-338561858,amitkumarj441,@neewy Have a look at my previous comment? and I guess we're done with review but need to remove this [commit](https://github.com/hyperledger/iroha/pull/631/commits/0ff9d0b5cfddb88c0e0704e3e11f15bac914c81a),2017-10-23 06:41:45,2017-10-23 06:41:45
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/338562490,https://github.com/hyperledger/iroha/pull/631#issuecomment-338562490,neewy,"Please, try to answer all the questions @l4l asked you. Also, to merge PR we have to get at least another confirmation from Iroha maintainers team.",2017-10-23 06:45:39,2017-10-23 06:45:39
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/338566208,https://github.com/hyperledger/iroha/pull/631#issuecomment-338566208,amitkumarj441,"@neewy Sorry, I just replied on @l4l questions.",2017-10-23 07:05:53,2017-10-23 07:05:53
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/340068761,https://github.com/hyperledger/iroha/pull/631#issuecomment-340068761,neewy,"@amitkumarj441 please, implement the changes requested. Ask your help at any time from maintainers team to explain you what is needed here or in rocker.chat.

Thanks for your interest to the project!",2017-10-27 19:49:05,2017-10-27 19:49:05
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/345111250,https://github.com/hyperledger/iroha/pull/631#issuecomment-345111250,neewy,"@amitkumarj441 please respond here about the intention to fix changes. According to https://github.com/hyperledger/iroha/wiki/Iroha-working-agreement:

> 4.10.4 Outdated flow
> 
> {needs review, needs correction, …, candidate for closing}
> 
> In case when:
> 
> pull request is opened for single month without any activity, like review or discussions, or
> review corrections are not fixed for 14 days The pull request is a candidate to be closed, if after change of status and request for the opener to clarify the status no activity happens for 24 hours.",2017-11-17 00:50:38,2017-11-17 00:50:38
https://api.github.com/repos/hyperledger/iroha/issues/631,https://api.github.com/repos/hyperledger/iroha/issues/comments/345631382,https://github.com/hyperledger/iroha/pull/631#issuecomment-345631382,amitkumarj441,"@neewy I'll ping reviewers on rocketchat or gitter to short out this issues and move ahead toward goal of this PR.

Apologies for the delay :disappointed: ",2017-11-20 08:59:36,2017-11-20 08:59:36
https://api.github.com/repos/hyperledger/iroha/issues/630,https://api.github.com/repos/hyperledger/iroha/issues/comments/336610622,https://github.com/hyperledger/iroha/issues/630#issuecomment-336610622,motxx,It's nice to remove memory leak while using `scandir` in `flat_file::check_consistency`.,2017-10-14 05:05:39,2017-10-14 05:06:11
https://api.github.com/repos/hyperledger/iroha/issues/630,https://api.github.com/repos/hyperledger/iroha/issues/comments/336635181,https://github.com/hyperledger/iroha/issues/630#issuecomment-336635181,neewy,@motxx https://soramitsu.atlassian.net/browse/IR-409?,2017-10-14 13:31:21,2017-10-14 13:31:21
https://api.github.com/repos/hyperledger/iroha/issues/629,https://api.github.com/repos/hyperledger/iroha/issues/comments/336628311,https://github.com/hyperledger/iroha/issues/629#issuecomment-336628311,Warchant,">We should extend this with checks of transaction to be formed in nearest future only (like 2 minutes) — otherwise it should be rejected.

Please, explain why is it so?",2017-10-14 11:16:53,2017-10-14 11:16:53
https://api.github.com/repos/hyperledger/iroha/issues/629,https://api.github.com/repos/hyperledger/iroha/issues/comments/336635375,https://github.com/hyperledger/iroha/issues/629#issuecomment-336635375,neewy,"Because transactions from future are not valid. But if only time period is small enough (~5 min or so) they are not rejected.
If the transaction is relatively old (24 hours) it might be a part of multisignature transaction",2017-10-14 13:35:28,2017-10-30 06:19:00
https://api.github.com/repos/hyperledger/iroha/issues/629,https://api.github.com/repos/hyperledger/iroha/issues/comments/358966745,https://github.com/hyperledger/iroha/issues/629#issuecomment-358966745,l4l,Fixed by #860,2018-01-19 13:32:21,2018-01-19 13:32:21
https://api.github.com/repos/hyperledger/iroha/issues/628,https://api.github.com/repos/hyperledger/iroha/issues/comments/373900784,https://github.com/hyperledger/iroha/issues/628#issuecomment-373900784,darsh7807,"
```
std::map<pubkey_t,bool>map_keys;
for (auto sign : signatures) {
        map_keys[sign.pubkey] = True;
  }
for (auto pubkey : public_keys) {
       if(map_keys[pubkey] == False) return False;
      }
return True;
```
Is this approach acceptable?",2018-03-17 07:28:14,2018-03-17 07:28:14
https://api.github.com/repos/hyperledger/iroha/issues/628,https://api.github.com/repos/hyperledger/iroha/issues/comments/373928093,https://github.com/hyperledger/iroha/issues/628#issuecomment-373928093,Warchant,"@darsh7807 please look at the latest code, approach may be different:

https://github.com/hyperledger/iroha/blob/develop/irohad/validation/impl/stateful_validator_impl.cpp#L97-L112

Please, always look at the latest code (develop branch) when you're studying iroha :-)

Few things I want to add:
1) SignatureSetType is actually already std::unordered_set, this copy is redundant https://github.com/hyperledger/iroha/blob/develop/irohad/validation/impl/stateful_validator_impl.cpp#L102-L105
2)  `PublicKey`s can be compared with `operator==`, no need in casting to string. ",2018-03-17 15:21:03,2018-03-17 15:22:31
https://api.github.com/repos/hyperledger/iroha/issues/628,https://api.github.com/repos/hyperledger/iroha/issues/comments/373937247,https://github.com/hyperledger/iroha/issues/628#issuecomment-373937247,darsh7807,"@Warchant  Ok, I looked at it, I think it is pretty much same thing with the previous one.
I have discussed on the telegram channel and found this approach suitable for this condition:
```
for( auto pubkey : pulic_keys){
   for(auto sign : signatures){
         if( sign.pubkey == pubkey)  {
             count++; break;
          }     
    }
}
if ( count == public_key.size()) return True;
return False;
```",2018-03-17 17:20:31,2018-03-17 17:20:56
https://api.github.com/repos/hyperledger/iroha/issues/628,https://api.github.com/repos/hyperledger/iroha/issues/comments/375280331,https://github.com/hyperledger/iroha/issues/628#issuecomment-375280331,darsh7807,"I made a PR please review it 
[PR](https://github.com/hyperledger/iroha/pull/1108)",2018-03-22 12:02:18,2018-03-22 12:02:18
https://api.github.com/repos/hyperledger/iroha/issues/628,https://api.github.com/repos/hyperledger/iroha/issues/comments/381083196,https://github.com/hyperledger/iroha/issues/628#issuecomment-381083196,steephengeorge,"I am new here. Can I make this change as follows. So I can learn the process and take part in this collaborative effort:

```
 bool StatefulValidatorImpl::signaturesSubset(
        const shared_model::interface::SignatureSetType &signatures,
        const std::vector<shared_model::crypto::PublicKey> &public_keys) {
      // TODO 09/10/17 Lebedev: simplify the subset verification IR-510
      // #goodfirstissue
      return std::all_of(public_keys.begin(),
                         public_keys.end(),
                         [&signatures](const auto &public_key) {
                           return signatures.find(public_key)
                               != signatures.end();
                         });
    }
```",2018-04-13 09:41:39,2018-04-13 09:42:01
https://api.github.com/repos/hyperledger/iroha/issues/628,https://api.github.com/repos/hyperledger/iroha/issues/comments/381248288,https://github.com/hyperledger/iroha/issues/628#issuecomment-381248288,l4l,"@steephengeorge looks good, couple minors that need to be fixed are:
- the todo comment removal
- adding [dco](https://github.com/probot/dco#how-it-works) at your commit",2018-04-13 20:10:37,2018-04-13 20:10:43
https://api.github.com/repos/hyperledger/iroha/issues/628,https://api.github.com/repos/hyperledger/iroha/issues/comments/406450484,https://github.com/hyperledger/iroha/issues/628#issuecomment-406450484,l4l,Fixed in #1339,2018-07-20 00:09:33,2018-07-20 00:09:33
https://api.github.com/repos/hyperledger/iroha/issues/627,https://api.github.com/repos/hyperledger/iroha/issues/comments/359017692,https://github.com/hyperledger/iroha/issues/627#issuecomment-359017692,Warchant,What is the status of this issue?,2018-01-19 16:29:04,2018-01-19 16:29:04
https://api.github.com/repos/hyperledger/iroha/issues/627,https://api.github.com/repos/hyperledger/iroha/issues/comments/359047311,https://github.com/hyperledger/iroha/issues/627#issuecomment-359047311,l4l,"Seems that TODO is still here:
https://github.com/hyperledger/iroha/blob/78f152a85ee2b3b86db7b705831938e96a186c36/test/module/irohad/model/converters/pb_query_factory_test.cpp#L36",2018-01-19 18:17:11,2018-01-19 18:17:11
https://api.github.com/repos/hyperledger/iroha/issues/627,https://api.github.com/repos/hyperledger/iroha/issues/comments/374016513,https://github.com/hyperledger/iroha/issues/627#issuecomment-374016513,l4l,Seems redundant as we are going to move to the new model,2018-03-18 17:05:04,2018-03-18 17:05:04
https://api.github.com/repos/hyperledger/iroha/issues/626,https://api.github.com/repos/hyperledger/iroha/issues/comments/336476533,https://github.com/hyperledger/iroha/pull/626#issuecomment-336476533,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=h1) Report
> Merging [#626](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b5396117e012191a6f1c51b06b944c0a02a21904?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `25%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/626/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #626      +/-   ##
===========================================
- Coverage    44.67%   44.66%   -0.01%     
===========================================
  Files          300      300              
  Lines        11820    11819       -1     
  Branches      6287     6287              
===========================================
- Hits          5280     5279       -1     
  Misses         773      773              
  Partials      5767     5767
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `68.57% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac.cpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWMuY3Bw) | `28.97% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/flat\_file/flat\_file.cpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZS9mbGF0X2ZpbGUuY3Bw) | `36.78% <ø> (ø)` | :arrow_up: |
| [iroha-cli/client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5jcHA=) | `36% <ø> (ø)` | :arrow_up: |
| [irohad/model/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2Jsb2NrLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/command\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9jb21tYW5kX2dlbmVyYXRvci5jcHA=) | `48.57% <ø> (ø)` | :arrow_up: |
| [iroha-cli/client.hpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `2.08% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/validation/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `16.36% <ø> (ø)` | :arrow_up: |
| ... and [13 more](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=footer). Last update [b539611...5fd84ec](https://codecov.io/gh/hyperledger/iroha/pull/626?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-13 14:54:46,2017-10-13 15:12:05
https://api.github.com/repos/hyperledger/iroha/issues/626,https://api.github.com/repos/hyperledger/iroha/issues/comments/336480526,https://github.com/hyperledger/iroha/pull/626#issuecomment-336480526,Warchant,"<img class=""emoji"" title="":lgtm:"" alt="":lgtm:"" align=""absmiddle"" src=""https://reviewable.io/lgtm.png"" height=""20"" width=""61""/>

---

Reviewed 50 of 50 files at r1.
Review status: all files reviewed at latest revision, all discussions resolved.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/626#-:-KwLGny4VkjoTTFIct4U:bnfp4nl)*
<!-- Sent from Reviewable.io -->
",2017-10-13 15:08:24,2017-10-13 15:08:24
https://api.github.com/repos/hyperledger/iroha/issues/626,https://api.github.com/repos/hyperledger/iroha/issues/comments/336481278,https://github.com/hyperledger/iroha/pull/626#issuecomment-336481278,sorabot,"SonarQube analysis reported 133 issues
* ![BLOCKER][BLOCKER] 1 blocker
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 6 major
* ![MINOR][MINOR] 36 minor
* ![INFO][INFO] 89 info

#### Top 10 issues

1. ![BLOCKER][BLOCKER] [iroha_conf_loader.hpp#L42](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/irohad/main/iroha_conf_loader.hpp#L42): Using namespace are not allowed in header files. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUsingNamespaceInHeader)
1. ![CRITICAL][CRITICAL] [main.cpp#L52](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/iroha-cli/main.cpp#L52): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [interactive_query_cli.cpp#L117](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/iroha-cli/interactive/impl/interactive_query_cli.cpp#L117): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MAJOR][MAJOR] [flat_file.cpp#L60](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L60): Remove those useless parentheses. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUselessParentheses)
1. ![MAJOR][MAJOR] [yac.cpp#L49](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/irohad/consensus/yac/impl/yac.cpp#L49): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.cpp#L59](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/irohad/consensus/yac/impl/yac.cpp#L59): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [pb_command_factory.cpp#L446](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/irohad/model/converters/impl/pb_command_factory.cpp#L446): The Cyclomatic Complexity of this function is 15 which is greater than 10 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MAJOR][MAJOR] [pb_query_response_factory.cpp#L294](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/irohad/model/converters/impl/pb_query_response_factory.cpp#L294): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L92](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/iroha-cli/interactive/impl/interactive_query_cli.cpp#L92): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L109](https://github.com/hyperledger/iroha/blob/5fd84ec8191ceaf69bd49991ffdcbb4f1fb0440d/iroha-cli/interactive/impl/interactive_query_cli.cpp#L109): Define a constant instead of duplicating this literal ""Choose query: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-13 15:11:10,2017-10-13 15:11:10
https://api.github.com/repos/hyperledger/iroha/issues/625,https://api.github.com/repos/hyperledger/iroha/issues/comments/336187055,https://github.com/hyperledger/iroha/pull/625#issuecomment-336187055,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/625?src=pr&el=h1) Report
> Merging [#625](https://codecov.io/gh/hyperledger/iroha/pull/625?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/f6588cc7e2e7693a6b7cb73f260cfc541a702a85?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/625/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/625?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #625   +/-   ##
========================================
  Coverage    44.67%   44.67%           
========================================
  Files          300      300           
  Lines        11820    11820           
  Branches      6287     6287           
========================================
  Hits          5280     5280           
  Misses         773      773           
  Partials      5767     5767
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/625?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/625?src=pr&el=footer). Last update [f6588cc...e201c6a](https://codecov.io/gh/hyperledger/iroha/pull/625?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-12 16:12:49,2017-10-12 16:36:04
https://api.github.com/repos/hyperledger/iroha/issues/625,https://api.github.com/repos/hyperledger/iroha/issues/comments/336191293,https://github.com/hyperledger/iroha/pull/625#issuecomment-336191293,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [benchmark_example.cpp#L38](https://github.com/hyperledger/iroha/blob/e201c6a740918bb1dd1bd609ffcea9db2c942dde/test/benchmark/benchmark_example.cpp#L38): Unused variable: empty_string [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-12 16:28:07,2017-10-12 16:28:07
https://api.github.com/repos/hyperledger/iroha/issues/624,https://api.github.com/repos/hyperledger/iroha/issues/comments/336131695,https://github.com/hyperledger/iroha/pull/624#issuecomment-336131695,neewy,https://github.com/hyperledger/iroha/blob/develop/irohad/main/application.hpp#L58 please check this TODO @lebdron ,2017-10-12 13:14:02,2017-10-12 13:14:09
https://api.github.com/repos/hyperledger/iroha/issues/624,https://api.github.com/repos/hyperledger/iroha/issues/comments/336329142,https://github.com/hyperledger/iroha/pull/624#issuecomment-336329142,sorabot,"SonarQube analysis reported 79 issues
* ![BLOCKER][BLOCKER] 1 blocker
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 5 minor
* ![INFO][INFO] 72 info

#### Top 10 issues

1. ![BLOCKER][BLOCKER] [iroha_conf_loader.hpp#L42](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/irohad/main/iroha_conf_loader.hpp#L42): Using namespace are not allowed in header files. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUsingNamespaceInHeader)
1. ![MAJOR][MAJOR] [application.hpp#L60](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/irohad/main/application.hpp#L60): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L184](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L184): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L236](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L236): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L328](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L328): Define a constant instead of duplicating this literal ""Not implemented"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [iroha_conf_loader.hpp#L53](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/irohad/main/iroha_conf_loader.hpp#L53): Define a constant instead of duplicating this literal ""string"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [iroha_conf_loader.hpp#L57](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/irohad/main/iroha_conf_loader.hpp#L57): Define a constant instead of duplicating this literal ""uint"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [interactive_transaction_cli.cpp#L213](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L213): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [interactive_transaction_cli.cpp#L327](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L327): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [interactive_transaction_cli.cpp#L346](https://github.com/hyperledger/iroha/blob/b80084927c1219b76de18875c42909b7c21e57eb/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L346): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-13 01:59:13,2017-10-13 01:59:13
https://api.github.com/repos/hyperledger/iroha/issues/624,https://api.github.com/repos/hyperledger/iroha/issues/comments/336329293,https://github.com/hyperledger/iroha/pull/624#issuecomment-336329293,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/624?src=pr&el=h1) Report
> Merging [#624](https://codecov.io/gh/hyperledger/iroha/pull/624?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d9395d0c6ca147a6d1733e48e15b95967970d4a1?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/624/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/624?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #624   +/-   ##
========================================
  Coverage    44.67%   44.67%           
========================================
  Files          300      300           
  Lines        11820    11820           
  Branches      6287     6287           
========================================
  Hits          5280     5280           
  Misses         773      773           
  Partials      5767     5767
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/624?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/624?src=pr&el=footer). Last update [d9395d0...b800849](https://codecov.io/gh/hyperledger/iroha/pull/624?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-13 02:00:14,2017-10-13 02:00:14
https://api.github.com/repos/hyperledger/iroha/issues/623,https://api.github.com/repos/hyperledger/iroha/issues/comments/335618621,https://github.com/hyperledger/iroha/pull/623#issuecomment-335618621,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=h1) Report
> Merging [#623](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b614360e16db836ad22b8303a6f7a4f0d8effb35?src=pr&el=desc) will **increase** coverage by `5.28%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/623/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #623      +/-   ##
===========================================
+ Coverage    44.66%   49.95%   +5.28%     
===========================================
  Files          300      298       -2     
  Lines        11819    10754    -1065     
  Branches      6287     5314     -973     
===========================================
+ Hits          5279     5372      +93     
+ Misses         773      488     -285     
+ Partials      5767     4894     -873
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ohad/model/converters/json\_transaction\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl90cmFuc2FjdGlvbl9mYWN0b3J5LmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/consensus/yac/cluster\_order.hpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvY2x1c3Rlcl9vcmRlci5ocHA=) | `0% <0%> (-75%)` | :arrow_down: |
| [irohad/model/proposal.hpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Byb3Bvc2FsLmhwcA==) | `33.33% <0%> (-66.67%)` | :arrow_down: |
| [irohad/model/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2FjY291bnQuaHBw) | `0% <0%> (-50%)` | :arrow_down: |
| [irohad/consensus/yac/messages.hpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvbWVzc2FnZXMuaHBw) | `44.44% <0%> (-32.48%)` | :arrow_down: |
| [test/module/irohad/validation/validation\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vdmFsaWRhdGlvbl9tb2Nrcy5ocHA=) | `25% <0%> (-25%)` | :arrow_down: |
| [test/module/irohad/network/network\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL25ldHdvcmsvbmV0d29ya19tb2Nrcy5ocHA=) | `30.76% <0%> (-15.39%)` | :arrow_down: |
| [test/framework/test\_subscriber.hpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvdGVzdF9zdWJzY3JpYmVyLmhwcA==) | `54.16% <0%> (-8.34%)` | :arrow_down: |
| [irohad/torii/torii\_service\_handler.hpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfaGFuZGxlci5ocHA=) | `50% <0%> (-7.15%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `28.57% <0%> (-6.22%)` | :arrow_down: |
| ... and [139 more](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=footer). Last update [b614360...6ff0176](https://codecov.io/gh/hyperledger/iroha/pull/623?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-10 21:49:05,2017-10-16 15:19:58
https://api.github.com/repos/hyperledger/iroha/issues/623,https://api.github.com/repos/hyperledger/iroha/issues/comments/335705418,https://github.com/hyperledger/iroha/pull/623#issuecomment-335705418,neewy,"You may forget about mac package, I can create it via brew, or we can distribute a tar.gz with binaries compiled in macOS environment",2017-10-11 07:07:18,2017-10-11 07:07:18
https://api.github.com/repos/hyperledger/iroha/issues/623,https://api.github.com/repos/hyperledger/iroha/issues/comments/336622371,https://github.com/hyperledger/iroha/pull/623#issuecomment-336622371,neewy,I confirm that this creates valid binaries for macOS,2017-10-14 09:16:10,2017-10-14 09:16:10
https://api.github.com/repos/hyperledger/iroha/issues/623,https://api.github.com/repos/hyperledger/iroha/issues/comments/336925013,https://github.com/hyperledger/iroha/pull/623#issuecomment-336925013,l4l,"Overall code looks good, though didn't tested creation of packages",2017-10-16 15:33:19,2017-10-16 15:33:19
https://api.github.com/repos/hyperledger/iroha/issues/622,https://api.github.com/repos/hyperledger/iroha/issues/comments/335770143,https://github.com/hyperledger/iroha/pull/622#issuecomment-335770143,Warchant,"



Review status: 0 of 2 files reviewed at latest revision, 4 unresolved discussions, some commit checks failed.

---

*[deploy/ansible/setup.yml, line 4 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/622#-KwA05HGrYt4AuyzaVah:-KwA05HGrYt4AuyzaVai:b-rhxc7r) ([raw file](https://github.com/hyperledger/iroha/blob/e8a5d340217d428dd892de6726284f14e02b4411/deploy/ansible/setup.yml#L4)):*
> ```YAML
> - hosts: all
>   vars:
>     user: dumitru #your user here
> ```

change user to `iroha`. Add better description what is this `user` about.

Also change name of the file to `provisioning.yml`.

---

*[deploy/ansible/setup.yml, line 7 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/622#-KwA0a9CbFIRdLJZ0keR:-KwA0a9CbFIRdLJZ0keS:b-8ljmod) ([raw file](https://github.com/hyperledger/iroha/blob/e8a5d340217d428dd892de6726284f14e02b4411/deploy/ansible/setup.yml#L7)):*
> ```YAML
> 
>   tasks:
>     - name: Get docker script 
> ```

add commentaries, like
```
get_url:
   # 1. install docker 
```

---

*[deploy/ansible/setup.yml, line 14 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/622#-KwA0llgIcFRmLrLKa5w:-KwA0llgIcFRmLrLKa5x:b-f2ijmt) ([raw file](https://github.com/hyperledger/iroha/blob/e8a5d340217d428dd892de6726284f14e02b4411/deploy/ansible/setup.yml#L14)):*
> ```YAML
>         validate_certs: false
> 
>     - name: Execute install script
> ```

```
# 2. Install docker
```

By  the way, if I execute this ansible playbook multiple times in a row, will it re-install docker every time?

---

*[deploy/ansible/setup.yml, line 19 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/622#-KwA0xcfy_wYycOVH8AU:-KwA0xcgmvXiwOMGj44U:b-loa704) ([raw file](https://github.com/hyperledger/iroha/blob/e8a5d340217d428dd892de6726284f14e02b4411/deploy/ansible/setup.yml#L19)):*
> ```YAML
>         chdir: /tmp
> 
>     - name: add user mod
> ```

also add comment

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/622)*
<!-- Sent from Reviewable.io -->
",2017-10-11 10:43:11,2017-10-11 10:43:11
https://api.github.com/repos/hyperledger/iroha/issues/622,https://api.github.com/repos/hyperledger/iroha/issues/comments/335770361,https://github.com/hyperledger/iroha/pull/622#issuecomment-335770361,Warchant,"Use `git commit -s -m ""Message""` (-s) to sign DCO.",2017-10-11 10:44:13,2017-10-11 10:44:13
https://api.github.com/repos/hyperledger/iroha/issues/622,https://api.github.com/repos/hyperledger/iroha/issues/comments/335814267,https://github.com/hyperledger/iroha/pull/622#issuecomment-335814267,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=h1) Report
> Merging [#622](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/aca60700be88897135b63287a7a1e98d09772493?src=pr&el=desc) will **increase** coverage by `0.06%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/622/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #622      +/-   ##
===========================================
+ Coverage    44.67%   44.73%   +0.06%     
===========================================
  Files          300      297       -3     
  Lines        11820    11797      -23     
  Branches      6287     6265      -22     
===========================================
- Hits          5280     5277       -3     
- Misses         773      776       +3     
+ Partials      5767     5744      -23
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `48% <0%> (-8.67%)` | :arrow_down: |
| [test/module/irohad/ordering/ordering\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfdGVzdC5jcHA=) | `23.8% <0%> (-3.02%)` | :arrow_down: |
| [...t/module/irohad/ordering/ordering\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX3NlcnZpY2VfdGVzdC5jcHA=) | `35.71% <0%> (-2.62%)` | :arrow_down: |
| [irohad/main/impl/ordering\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmhwcA==) | `100% <0%> (ø)` | :arrow_up: |
| [irohad/network/ordering\_gate\_transport.hpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnQuaHBw) | `50% <0%> (ø)` | :arrow_up: |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.hpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5ocHA=) | `0% <0%> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `55.08% <0%> (ø)` | :arrow_up: |
| [irohad/network/peer\_communication\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvcGVlcl9jb21tdW5pY2F0aW9uX3NlcnZpY2UuaHBw) | `50% <0%> (ø)` | :arrow_up: |
| [irohad/ordering/impl/ordering\_gate\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV9pbXBsLmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [.../ordering/impl/ordering\_service\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | | |
| ... and [8 more](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=footer). Last update [aca6070...7e03792](https://codecov.io/gh/hyperledger/iroha/pull/622?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-11 13:44:29,2017-10-12 07:33:25
https://api.github.com/repos/hyperledger/iroha/issues/622,https://api.github.com/repos/hyperledger/iroha/issues/comments/336046271,https://github.com/hyperledger/iroha/pull/622#issuecomment-336046271,Warchant,"



Reviewed 1 of 3 files at r1, 2 of 2 files at r2.
Review status: 0 of 2 files reviewed at latest revision, 4 unresolved discussions.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/622)*
<!-- Sent from Reviewable.io -->
",2017-10-12 07:36:05,2017-10-12 07:36:05
https://api.github.com/repos/hyperledger/iroha/issues/622,https://api.github.com/repos/hyperledger/iroha/issues/comments/336049045,https://github.com/hyperledger/iroha/pull/622#issuecomment-336049045,x3medima17,"



Review status: 0 of 2 files reviewed at latest revision, 4 unresolved discussions.

---

*[deploy/ansible/provisioning.yml, line 4 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/622#-KwA05HGrYt4AuyzaVah:-KwEYdmWvcfPgArx7NX-:b-896fix) ([raw file](https://github.com/hyperledger/iroha/blob/e8a5d340217d428dd892de6726284f14e02b4411/deploy/ansible/provisioning.yml#L4)):*
<details><summary><i>Previously, Warchant (Bogdan) wrote…</i></summary><blockquote>

change user to `iroha`. Add better description what is this `user` about.

Also change name of the file to `provisioning.yml`.
</blockquote></details>

Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/622)*
<!-- Sent from Reviewable.io -->
",2017-10-12 07:49:02,2017-10-12 07:49:02
https://api.github.com/repos/hyperledger/iroha/issues/622,https://api.github.com/repos/hyperledger/iroha/issues/comments/336049713,https://github.com/hyperledger/iroha/pull/622#issuecomment-336049713,x3medima17,"



Review status: 0 of 2 files reviewed at latest revision, 4 unresolved discussions.

---

*[deploy/ansible/provisioning.yml, line 7 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/622#-KwA0a9CbFIRdLJZ0keR:-KwEZ9OT4nyIplQnizoc:b-896fix) ([raw file](https://github.com/hyperledger/iroha/blob/e8a5d340217d428dd892de6726284f14e02b4411/deploy/ansible/provisioning.yml#L7)):*
<details><summary><i>Previously, Warchant (Bogdan) wrote…</i></summary><blockquote>

add commentaries, like
```
get_url:
   # 1. install docker 
```
</blockquote></details>

Done.

---

*[deploy/ansible/provisioning.yml, line 14 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/622#-KwA0llgIcFRmLrLKa5w:-KwEZAKQ1V8um7tpoKjh:bx1euo) ([raw file](https://github.com/hyperledger/iroha/blob/e8a5d340217d428dd892de6726284f14e02b4411/deploy/ansible/provisioning.yml#L14)):*
<details><summary><i>Previously, Warchant (Bogdan) wrote…</i></summary><blockquote>

```
# 2. Install docker
```

By  the way, if I execute this ansible playbook multiple times in a row, will it re-install docker every time?
</blockquote></details>

If docker is installed, it will not install it again

---

*[deploy/ansible/provisioning.yml, line 19 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/622#-KwA0xcfy_wYycOVH8AU:-KwEZJovi3bDC4CeZ9EB:b-896fix) ([raw file](https://github.com/hyperledger/iroha/blob/e8a5d340217d428dd892de6726284f14e02b4411/deploy/ansible/provisioning.yml#L19)):*
<details><summary><i>Previously, Warchant (Bogdan) wrote…</i></summary><blockquote>

also add comment
</blockquote></details>

Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/622)*
<!-- Sent from Reviewable.io -->
",2017-10-12 07:51:54,2017-10-12 07:51:54
https://api.github.com/repos/hyperledger/iroha/issues/622,https://api.github.com/repos/hyperledger/iroha/issues/comments/336055040,https://github.com/hyperledger/iroha/pull/622#issuecomment-336055040,Warchant,"<img class=""emoji"" title="":lgtm:"" alt="":lgtm:"" align=""absmiddle"" src=""https://reviewable.io/lgtm.png"" height=""20"" width=""61""/>

---

Reviewed 1 of 2 files at r2, 2 of 2 files at r4.
Review status: all files reviewed at latest revision, all discussions resolved.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/622#-:-KwEddCrHR0AGGWlqRQG:bnfp4nl)*
<!-- Sent from Reviewable.io -->
",2017-10-12 08:15:07,2017-10-12 08:15:07
https://api.github.com/repos/hyperledger/iroha/issues/621,https://api.github.com/repos/hyperledger/iroha/issues/comments/335385672,https://github.com/hyperledger/iroha/pull/621#issuecomment-335385672,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=h1) Report
> Merging [#621](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=desc) into [feature/mst-trunk](https://codecov.io/gh/hyperledger/iroha/commit/8cac4c0c9078838a11ff5646271f2550296b9b74?src=pr&el=desc) will **decrease** coverage by `0.1%`.
> The diff coverage is `29.21%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/621/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/mst-trunk     #621      +/-   ##
=====================================================
- Coverage              44.49%   44.38%   -0.11%     
=====================================================
  Files                    282      286       +4     
  Lines                  11507    11587      +80     
  Branches                6118     6177      +59     
=====================================================
+ Hits                    5120     5143      +23     
  Misses                   756      756              
- Partials                5631     5688      +57
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/network/mst\_transport.hpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvbXN0X3RyYW5zcG9ydC5ocHA=) | `50% <ø> (ø)` | |
| [libs/common/set.hpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-bGlicy9jb21tb24vc2V0LmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [.../irohad/model/converters/json\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl90cmFuc2FjdGlvbl90ZXN0LmNwcA==) | `14.28% <ø> (ø)` | :arrow_up: |
| [...irohad/multi\_sig\_transactions/mst\_test\_helpers.hpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvbXN0X3Rlc3RfaGVscGVycy5ocHA=) | `68.75% <ø> (ø)` | :arrow_up: |
| [irohad/multi\_sig\_transactions/state/mst\_state.hpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGUvbXN0X3N0YXRlLmhwcA==) | `50% <0%> (ø)` | :arrow_up: |
| [irohad/model/operators/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL29wZXJhdG9ycy9oYXNoLmhwcA==) | `75% <0%> (-2.78%)` | :arrow_down: |
| [...\_sig\_transactions/transport/mst\_transport\_grpc.hpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvdHJhbnNwb3J0L21zdF90cmFuc3BvcnRfZ3JwYy5ocHA=) | `0% <0%> (ø)` | |
| [...e/irohad/multi\_sig\_transactions/transport\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvdHJhbnNwb3J0X3Rlc3QuY3Bw) | `10.81% <10.81%> (ø)` | |
| [...le/irohad/model/converters/pb\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfdHJhbnNhY3Rpb25fdGVzdC5jcHA=) | `25.64% <100%> (+1.95%)` | :arrow_up: |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `47.82% <100%> (ø)` | :arrow_up: |
| ... and [9 more](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=footer). Last update [8cac4c0...0f75c78](https://codecov.io/gh/hyperledger/iroha/pull/621?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-10 07:29:02,2017-10-13 08:14:41
https://api.github.com/repos/hyperledger/iroha/issues/621,https://api.github.com/repos/hyperledger/iroha/issues/comments/336382916,https://github.com/hyperledger/iroha/pull/621#issuecomment-336382916,sorabot,"SonarQube analysis reported 24 issues
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 21 info

#### Top 10 issues

1. ![MINOR][MINOR] [peer.hpp#L4](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/peer.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [peer.hpp#L48](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/peer.hpp#L48): Missing curly brace. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingCurlyBraces)
1. ![MINOR][MINOR] [peer.hpp#L50](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/peer.hpp#L50): Missing curly brace. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingCurlyBraces)
1. ![INFO][INFO] [hash.hpp#L33](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/operators/hash.hpp#L33): Undocumented API: TxType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L34](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/operators/hash.hpp#L34): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L48](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/operators/hash.hpp#L48): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L63](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/operators/hash.hpp#L63): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [peer.hpp#L1](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/peer.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [peer.hpp#L34](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/peer.hpp#L34): Undocumented API: AddressType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [peer.hpp#L41](https://github.com/hyperledger/iroha/blob/0f75c78c95bb5f656d60d63c1c8d3958302366f5/irohad/model/peer.hpp#L41): Undocumented API: KeyType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-13 08:14:25,2017-10-13 08:14:25
https://api.github.com/repos/hyperledger/iroha/issues/620,https://api.github.com/repos/hyperledger/iroha/issues/comments/335157025,https://github.com/hyperledger/iroha/pull/620#issuecomment-335157025,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=h1) Report
> Merging [#620](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/5d5ac9fedc0eda61c40a06d49cd3ee3da7171ca5?src=pr&el=desc) will **decrease** coverage by `0.02%`.
> The diff coverage is `35%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/620/graphs/tree.svg?token=VEvywEmaef&width=650&src=pr&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #620      +/-   ##
===========================================
- Coverage    44.78%   44.76%   -0.03%     
===========================================
  Files          293      293              
  Lines        11666    11701      +35     
  Branches      6176     6205      +29     
===========================================
+ Hits          5225     5238      +13     
  Misses         775      775              
- Partials      5666     5688      +22
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/libs/amount/amount\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9hbW91bnQvYW1vdW50X3Rlc3QuY3Bw) | `4.54% <13.33%> (+4.54%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `16.53% <25%> (+0.21%)` | :arrow_up: |
| [irohad/ametsuchi/impl/redis\_flat\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2ZsYXRfYmxvY2tfcXVlcnkuY3Bw) | `40.74% <57.14%> (+3.24%)` | :arrow_up: |
| [libs/amount/amount.cpp](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmNwcA==) | `76% <83.33%> (+5.59%)` | :arrow_up: |
| [libs/crypto/ed25519/ge.c](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS9nZS5j) | `97.2% <0%> (-1.21%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=footer). Last update [5d5ac9f...c13a64f](https://codecov.io/gh/hyperledger/iroha/pull/620?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-09 13:25:13,2017-10-09 13:57:06
https://api.github.com/repos/hyperledger/iroha/issues/619,https://api.github.com/repos/hyperledger/iroha/issues/comments/339851019,https://github.com/hyperledger/iroha/pull/619#issuecomment-339851019,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@e69d952`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `38.59%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/619/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #619   +/-   ##
==========================================
  Coverage           ?   43.17%           
==========================================
  Files              ?      301           
  Lines              ?    12267           
  Branches           ?     6785           
==========================================
  Hits               ?     5296           
  Misses             ?      713           
  Partials           ?     6258
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `27.63% <ø> (ø)` | |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `10.45% <ø> (ø)` | |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `27.21% <ø> (ø)` | |
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `36.87% <ø> (ø)` | |
| [iroha-cli/client.cpp](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-aXJvaGEtY2xpL2NsaWVudC5jcHA=) | `40% <ø> (ø)` | |
| [...onsensus/yac/storage/impl/yac\_proposal\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS9pbXBsL3lhY19wcm9wb3NhbF9zdG9yYWdlLmNwcA==) | `64.7% <ø> (ø)` | |
| [libs/crypto/ed25519/sha3.c](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS9zaGEzLmM=) | `76.92% <ø> (ø)` | |
| [test/module/irohad/ametsuchi/ametsuchi\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfZml4dHVyZS5ocHA=) | `37.5% <ø> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `36.02% <ø> (ø)` | |
| [irohad/model/impl/model\_operators.cpp](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvbW9kZWxfb3BlcmF0b3JzLmNwcA==) | `39.39% <ø> (ø)` | |
| ... and [21 more](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=footer). Last update [e69d952...185a15d](https://codecov.io/gh/hyperledger/iroha/pull/619?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-27 02:00:02,2017-11-06 12:42:36
https://api.github.com/repos/hyperledger/iroha/issues/619,https://api.github.com/repos/hyperledger/iroha/issues/comments/339986370,https://github.com/hyperledger/iroha/pull/619#issuecomment-339986370,muratovv,Add ignoring deprecated methods ,2017-10-27 14:24:48,2017-10-27 14:24:48
https://api.github.com/repos/hyperledger/iroha/issues/619,https://api.github.com/repos/hyperledger/iroha/issues/comments/340068002,https://github.com/hyperledger/iroha/pull/619#issuecomment-340068002,neewy,"After review, this pull request could be merged into the codebase",2017-10-27 19:45:57,2017-10-27 19:45:57
https://api.github.com/repos/hyperledger/iroha/issues/619,https://api.github.com/repos/hyperledger/iroha/issues/comments/342137293,https://github.com/hyperledger/iroha/pull/619#issuecomment-342137293,sorabot,"SonarQube analysis reported 205 issues
* ![MAJOR][MAJOR] 3 major
* ![MINOR][MINOR] 141 minor
* ![INFO][INFO] 61 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [yac.cpp#L49](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/irohad/consensus/yac/impl/yac.cpp#L49): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.cpp#L59](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/irohad/consensus/yac/impl/yac.cpp#L59): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [rxcpp_subject_usage.cpp#L34](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/test/module/vendor/rxcpp_subject_usage.cpp#L34): struct member 'Person::age' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedStructMember)
1. ![MINOR][MINOR] [flat_file.cpp#L47](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L47): The function 'name_to_id' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [flat_file.cpp#L71](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L71): Define a constant instead of duplicating this literal ""FLAT_FILE"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flat_file.cpp#L97](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L97): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [flat_file.cpp#L108](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L108): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [flat_file.cpp#L122](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L122): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [flat_file.cpp#L205](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/irohad/ametsuchi/impl/flat_file/flat_file.cpp#L205): The function 'directory' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.cpp#L35](https://github.com/hyperledger/iroha/blob/185a15dbe67fc20376b57eb644fd47d37ba6ff8f/irohad/ametsuchi/impl/postgres_wsv_command.cpp#L35): Define a constant instead of duplicating this literal false 16 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-06 12:42:15,2017-11-06 12:42:15
https://api.github.com/repos/hyperledger/iroha/issues/618,https://api.github.com/repos/hyperledger/iroha/issues/comments/334942642,https://github.com/hyperledger/iroha/pull/618#issuecomment-334942642,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=h1) Report
> Merging [#618](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=desc) into [feature/mst-trunk](https://codecov.io/gh/hyperledger/iroha/commit/6660ecc8abbeb21c6ba9e9dcabff50ffe7fbb4b7?src=pr&el=desc) will **decrease** coverage by `0.15%`.
> The diff coverage is `28.75%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/618/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/mst-trunk     #618      +/-   ##
=====================================================
- Coverage              44.69%   44.54%   -0.16%     
=====================================================
  Files                    275      277       +2     
  Lines                  11334    11411      +77     
  Branches                6003     6060      +57     
=====================================================
+ Hits                    5066     5083      +17     
- Misses                   753      755       +2     
- Partials                5515     5573      +58
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3RyYW5zYWN0aW9uLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [libs/common/set.hpp](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=tree#diff-bGlicy9jb21tb24vc2V0LmhwcA==) | `50% <0%> (ø)` | |
| [...ad/multi\_sig\_transactions/state/impl/mst\_state.cpp](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGUvaW1wbC9tc3Rfc3RhdGUuY3Bw) | `52.38% <52.38%> (ø)` | |
| [irohad/multi\_sig\_transactions/state/mst\_state.hpp](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGUvbXN0X3N0YXRlLmhwcA==) | `60% <60%> (ø)` | |
| [...irohad/multi\_sig\_transactions/mst\_test\_helpers.hpp](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvbXN0X3Rlc3RfaGVscGVycy5ocHA=) | `72.72% <72.72%> (ø)` | |
| [...odule/irohad/multi\_sig\_transactions/state\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGVfdGVzdC5jcHA=) | `8.13% <8.98%> (-5.03%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=footer). Last update [6660ecc...a1c644a](https://codecov.io/gh/hyperledger/iroha/pull/618?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-07 15:21:13,2017-10-08 07:16:44
https://api.github.com/repos/hyperledger/iroha/issues/618,https://api.github.com/repos/hyperledger/iroha/issues/comments/334988124,https://github.com/hyperledger/iroha/pull/618#issuecomment-334988124,sorabot,"SonarQube analysis reported 23 issues
* ![MINOR][MINOR] 1 minor
* ![INFO][INFO] 22 info

#### Top 10 issues

1. ![MINOR][MINOR] [transaction.hpp#L4](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/model/transaction.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [transaction.hpp#L1](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/model/transaction.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [transaction.hpp#L42](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/model/transaction.hpp#L42): Undocumented API: TimeType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [transaction.hpp#L74](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/model/transaction.hpp#L74): Undocumented API: HashType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [transaction.hpp#L89](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/model/transaction.hpp#L89): Undocumented API: CommandsType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [transaction.hpp#L91](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/model/transaction.hpp#L91): Undocumented API: operator== [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [transaction.hpp#L92](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/model/transaction.hpp#L92): Undocumented API: operator!= [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_types.hpp#L26](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/multi_sig_transactions/mst_types.hpp#L26): Undocumented API: TransactionType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_types.hpp#L27](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/multi_sig_transactions/mst_types.hpp#L27): Undocumented API: ConstPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_state.hpp#L32](https://github.com/hyperledger/iroha/blob/a1c644afc9e0932fa5c5fb410aa9a70d88983c54/irohad/multi_sig_transactions/state/mst_state.hpp#L32): Undocumented API: DataType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-08 07:16:18,2017-10-08 07:16:18
https://api.github.com/repos/hyperledger/iroha/issues/617,https://api.github.com/repos/hyperledger/iroha/issues/comments/334814011,https://github.com/hyperledger/iroha/pull/617#issuecomment-334814011,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=h1) Report
> Merging [#617](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/5584e0ed37fabe6279e3ef8dffe329b31409658f?src=pr&el=desc) will **increase** coverage by `0.13%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/617/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #617      +/-   ##
===========================================
+ Coverage    44.88%   45.01%   +0.13%     
===========================================
  Files          291      290       -1     
  Lines        11587    11569      -18     
  Branches      6113     6088      -25     
===========================================
+ Hits          5201     5208       +7     
- Misses         762      763       +1     
+ Partials      5624     5598      -26
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...rohad/model/converters/pb\_query\_responses\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfcmVzcG9uc2VzX3Rlc3QuY3Bw) | `17.02% <0%> (-1.93%)` | :arrow_down: |
| [...odule/irohad/model/converters/pb\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZHNfdGVzdC5jcHA=) | `13.79% <0%> (-1.73%)` | :arrow_down: |
| [libs/crypto/hash.cpp](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-bGlicy9jcnlwdG8vaGFzaC5jcHA=) | `61.29% <0%> (-1.57%)` | :arrow_down: |
| [libs/crypto/ed25519/ge.c](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS9nZS5j) | `97.2% <0%> (-1.21%)` | :arrow_down: |
| [irohad/model/impl/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `27.56% <0%> (-1.09%)` | :arrow_down: |
| [...le/irohad/model/operators/model\_operators\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL29wZXJhdG9ycy9tb2RlbF9vcGVyYXRvcnNfdGVzdC5jcHA=) | `26.82% <0%> (-0.98%)` | :arrow_down: |
| [test/module/irohad/validation/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `15.75% <0%> (-0.61%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `43.01% <0%> (-0.37%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `28.05% <0%> (-0.32%)` | :arrow_down: |
| [...ohad/model/generators/impl/signature\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9zaWduYXR1cmVfZ2VuZXJhdG9yLmNwcA==) | `100% <0%> (ø)` | :arrow_up: |
| ... and [32 more](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=footer). Last update [5584e0e...bae1ebf](https://codecov.io/gh/hyperledger/iroha/pull/617?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-06 17:05:57,2017-10-06 20:52:03
https://api.github.com/repos/hyperledger/iroha/issues/617,https://api.github.com/repos/hyperledger/iroha/issues/comments/334819523,https://github.com/hyperledger/iroha/pull/617#issuecomment-334819523,Warchant,"Sorabot says: 
>MAJOR interactive_transaction_cli.cpp#L162: Add a default case to this switch. 

Fix it with boost:
```
default:
BOOST_ASSERT_MSG(false, ""not implemented"");
```

Reason: if switch falls to `default` case, we should know this. ",2017-10-06 17:28:49,2017-10-06 17:30:27
https://api.github.com/repos/hyperledger/iroha/issues/617,https://api.github.com/repos/hyperledger/iroha/issues/comments/334820178,https://github.com/hyperledger/iroha/pull/617#issuecomment-334820178,Warchant,"



Reviewed 1 of 1 files at r1.
Review status: all files reviewed at latest revision, all discussions resolved.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/617)*
<!-- Sent from Reviewable.io -->
",2017-10-06 17:31:13,2017-10-06 17:31:13
https://api.github.com/repos/hyperledger/iroha/issues/617,https://api.github.com/repos/hyperledger/iroha/issues/comments/334927539,https://github.com/hyperledger/iroha/pull/617#issuecomment-334927539,Warchant,"



Reviewed 1 of 1 files at r2.
Review status: all files reviewed at latest revision, all discussions resolved.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/617)*
<!-- Sent from Reviewable.io -->
",2017-10-07 11:09:22,2017-10-07 11:09:22
https://api.github.com/repos/hyperledger/iroha/issues/617,https://api.github.com/repos/hyperledger/iroha/issues/comments/334929770,https://github.com/hyperledger/iroha/pull/617#issuecomment-334929770,muratovv,"The good strategy for fixing errors is: writing test, that appears broken behavior => fix code => test pass. So, in this case, we need provide tests, that covers fixes.",2017-10-07 11:51:54,2017-10-07 11:51:54
https://api.github.com/repos/hyperledger/iroha/issues/617,https://api.github.com/repos/hyperledger/iroha/issues/comments/335002579,https://github.com/hyperledger/iroha/pull/617#issuecomment-335002579,sorabot,"SonarQube analysis reported 9 issues

1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L146](https://github.com/hyperledger/iroha/blob/e261bca839fb8d8852da4d0d7572ab164560ee44/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L146): Variable 'creator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L171](https://github.com/hyperledger/iroha/blob/e261bca839fb8d8852da4d0d7572ab164560ee44/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L171): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L223](https://github.com/hyperledger/iroha/blob/e261bca839fb8d8852da4d0d7572ab164560ee44/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L223): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L315](https://github.com/hyperledger/iroha/blob/e261bca839fb8d8852da4d0d7572ab164560ee44/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L315): Define a constant instead of duplicating this literal ""Not implemented"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [interactive_transaction_cli.cpp#L200](https://github.com/hyperledger/iroha/blob/e261bca839fb8d8852da4d0d7572ab164560ee44/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L200): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [interactive_transaction_cli.cpp#L314](https://github.com/hyperledger/iroha/blob/e261bca839fb8d8852da4d0d7572ab164560ee44/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L314): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [interactive_transaction_cli.cpp#L333](https://github.com/hyperledger/iroha/blob/e261bca839fb8d8852da4d0d7572ab164560ee44/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L333): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [interactive_transaction_cli.cpp#L381](https://github.com/hyperledger/iroha/blob/e261bca839fb8d8852da4d0d7572ab164560ee44/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L381): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [interactive_transaction_cli.cpp#L409](https://github.com/hyperledger/iroha/blob/e261bca839fb8d8852da4d0d7572ab164560ee44/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L409): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-08 12:15:05,2017-10-08 12:15:05
https://api.github.com/repos/hyperledger/iroha/issues/616,https://api.github.com/repos/hyperledger/iroha/issues/comments/334789531,https://github.com/hyperledger/iroha/pull/616#issuecomment-334789531,Warchant,"



Reviewed 20 of 20 files at r1.
Review status: all files reviewed at latest revision, 25 unresolved discussions, some commit checks failed.

---

*[docker/docker-compose.yml, line 8 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmF69ytnVRoZhw_yRE:-KvmF69ytnVRoZhw_yRF:bjjrc9j) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/docker/docker-compose.yml#L8)):*
> ```YAML
>     ports:
>       - ""50051:50051""
>       - ""20000:20000""
> ```

Why do we need to forward ports to host computer?

---

*[irohad/main/impl/ordering_init.cpp, line 33 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmFMzVN3zhSjH1xb3z:-KvmFMzVN3zhSjH1xb4-:beq54h3) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/main/impl/ordering_init.cpp#L33)):*
> ```cpp
>                                      size_t max_size, size_t delay_milliseconds,
>                                      std::shared_ptr<network::OrderingServiceTransport> transport,
>                                      std::shared_ptr<uvw::Loop> loop) {
> ```

Rebase again. We do not use `uvw` anymore.

---

*[irohad/main/impl/ordering_init.cpp, line 48 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmFsCxv-u9Da5QzUv-:-KvmFsCxv-u9Da5QzUv0:b-18zd9b) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/main/impl/ordering_init.cpp#L48)):*
> ```cpp
> 
>       ordering_service_transport = std::make_shared<ordering::OrderingServiceTransportGrpc>();
>       ordering_service = createService(wsv, max_size, delay_milliseconds, ordering_service_transport, loop);
> ```

Again, there is uvw::Loop. It should not be there.

---

*[irohad/main/impl/ordering_init.hpp, line 55 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmG0ZquF0GLksIv1Mq:-KvmG0ZquF0GLksIv1Mr:biirocj) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/main/impl/ordering_init.hpp#L55)):*
> ```cpp
>           size_t delay_milliseconds,
>           std::shared_ptr<network::OrderingServiceTransport> transport,
>           std::shared_ptr<uvw::Loop> loop);
> ```

Remove uvw::Loop

---

*[irohad/network/ordering_service.hpp, line 3 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmG54JJX02vd40l9q4:-KvmG54JJX02vd40l9q5:b-57ra4v) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/network/ordering_service.hpp#L3)):*
> ```cpp
> //
> // Created by Dumitru Savva on 02/10/2017.
> //
> ```

Please, setup templates for headers and sources. Put copyright on top of every file.
```
/**
 * Copyright Soramitsu Co., Ltd. 2017 All Rights Reserved.
 * http://soramitsu.co.jp
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
```

---

*[irohad/ordering/CMakeLists.txt, line 19 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmGNKFor1LcY0mA9Sx:-KvmGNKGwTI6ZpB8RXdO:b86yg3j) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/CMakeLists.txt#L19)):*
> ```CMake
>     impl/ordering_service_impl.cpp
>     impl/ordering_gate_transport_grpc.cpp
>         impl/ordering_service_transport_grpc.cpp impl/ordering_service_transport_grpc.hpp)
> ```

use 
   better
      formatting
         please
            

---

*[irohad/ordering/impl/ordering_gate_transport_grpc.cpp, line 30 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmGWuPANIzeAqNLe7E:-KvmGWuPANIzeAqNLe7F:b6840ow) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_gate_transport_grpc.cpp#L30)):*
> ```cpp
>     transactions.push_back(*factory_.deserialize(tx));
>   }
>   log_->info(""transactions in proposal: {}"" + std::to_string(transactions.size()));
> ```

remove `std::to_string`, it will work without it

---

*[irohad/ordering/impl/ordering_service_impl.cpp, line 31 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmGieZ1DAwRO7AX5JP:-KvmGieZ1DAwRO7AX5JQ:bwgja3n) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_impl.cpp#L31)):*
> ```cpp
>         size_t delay_milliseconds,
>         std::shared_ptr<network::OrderingServiceTransport> transport,
>         std::shared_ptr<uvw::Loop> loop)
> ```

remove uvw::Loop

---

*[irohad/ordering/impl/ordering_service_impl.cpp, line 32 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmGkxwjMKQNm-WwfOC:-KvmGkxwjMKQNm-WwfOD:b-rq4yxh) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_impl.cpp#L32)):*
> ```cpp
>         std::shared_ptr<network::OrderingServiceTransport> transport,
>         std::shared_ptr<uvw::Loop> loop)
>         : loop_(std::move(loop)),
> ```

again, uvw::Loop

---

*[irohad/ordering/impl/ordering_service_impl.hpp, line 47 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmGxQna0tgLwAuv7QE:-KvmGxQna0tgLwAuv7QF:b277ufd) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_impl.hpp#L47)):*
> ```cpp
>      * @param max_size proposal size
>      */
>     class OrderingServiceImpl : public uvw::Emitter<OrderingServiceImpl>,
> ```

do not use uvw, we removed it

---

*[irohad/ordering/impl/ordering_service_impl.hpp, line 54 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmH-QZ1VAy620KH3dy:-KvmH-QZ1VAy620KH3dz:bwgja3n) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_impl.hpp#L54)):*
> ```cpp
>           size_t delay_milliseconds,
>           std::shared_ptr<network::OrderingServiceTransport> transport,
>           std::shared_ptr<uvw::Loop> loop = uvw::Loop::getDefault());
> ```

remove uvw::Loop

---

*[irohad/ordering/impl/ordering_service_impl.hpp, line 61 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmHsNVuw6HrsajESgG:-KvmHsNVuw6HrsajESgH:bocuv19) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_impl.hpp#L61)):*
> ```cpp
>        * @param transaction
>        */
>       void onTransaction(model::Transaction tx) override;
> ```

justify why tx is passed by-value or change to const ref / ptr

---

*[irohad/ordering/impl/ordering_service_impl.hpp, line 84 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmH6tEglNa9k4YTTHG:-KvmH6tEglNa9k4YTTHH:bwgja3n) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_impl.hpp#L84)):*
> ```cpp
>        */
> 
>       std::shared_ptr<uvw::Loop> loop_;
> ```

remove uvw::Loop

---

*[irohad/ordering/impl/ordering_service_impl.hpp, line 85 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmH8Ux26F__fxZTCat:-KvmH8Ux26F__fxZTCau:b-6whxzm) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_impl.hpp#L85)):*
> ```cpp
> 
>       std::shared_ptr<uvw::Loop> loop_;
>       std::shared_ptr<uvw::TimerHandle> timer_;
> ```

remove uvw::TimerHandle

---

*[irohad/ordering/impl/ordering_service_transport_grpc.cpp, line 28 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmI0gFq-Qgu7U4yFRi:-KvmI0gFq-Qgu7U4yFRj:b-2x49jp) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_transport_grpc.cpp#L28)):*
> ```cpp
> }
> 
> grpc::Status OrderingServiceTransportGrpc::onTransaction(::grpc::ServerContext *context,
> ```

use clang-format for formatting

---

*[irohad/ordering/impl/ordering_service_transport_grpc.cpp, line 32 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmI5E4lG2T0TZDWIzu:-KvmI5E4lG2T0TZDWIzv:b-wv32kt) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_transport_grpc.cpp#L32)):*
> ```cpp
>                            ::google::protobuf::Empty *response) {
>   if (subscriber_.expired())
>     throw std::runtime_error(""No subscriber"");
> ```

why it throws? we do not use exceptions

---

*[irohad/ordering/impl/ordering_service_transport_grpc.hpp, line 34 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmIF0iZrw2DL8ZBIUm:-KvmIF0iZrw2DL8ZBIUn:b-2x49jp) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/irohad/ordering/impl/ordering_service_transport_grpc.hpp#L34)):*
> ```cpp
>         : public iroha::network::OrderingServiceTransport,
>           public proto::OrderingServiceTransportGrpc::Service,
>           network::AsyncGrpcClient<google::protobuf::Empty> {
> ```

use clang-format for formatting

---

*[test/module/irohad/ordering/ordering_gate_service_test.cpp, line 73 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmIanC3Iy1Qajs_Jpv:-KvmIanC3Iy1Qajs_Jpw:b-5elfq9) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/test/module/irohad/ordering/ordering_gate_service_test.cpp#L73)):*
> ```cpp
>     cv.wait_for(lock, std::chrono::seconds(1));
> 
>     loop_thread = std::thread([this] { loop->run(); });
> ```

remove uvw

---

*[test/module/irohad/ordering/ordering_gate_service_test.cpp, line 78 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmIeYQz3bGB7fpwJGo:-KvmIeYQz3bGB7fpwJGp:bcymypv) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/test/module/irohad/ordering/ordering_gate_service_test.cpp#L78)):*
> ```cpp
>   void TearDown() override  {
>     proposals.clear();
>     loop->stop();
> ```

again uvw. 

---

*[test/module/irohad/ordering/ordering_gate_service_test.cpp, line 93 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmIiWhq6O9405QG3J0:-KvmIiWhq6O9405QG3J1:b3k5pwy) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/test/module/irohad/ordering/ordering_gate_service_test.cpp#L93)):*
> ```cpp
>         make_test_subscriber<CallExact>(gate->on_proposal(), times);
>     wrapper.subscribe([this](auto proposal) { proposals.push_back(proposal); });
>     gate->on_proposal().subscribe([this](auto) {
> ```

`auto` = pass-by-value. justify copyting or change to const ref / ptr

---

*[test/module/irohad/ordering/ordering_service_test.cpp, line 49 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmHLor2nUySsoY0L4p:-KvmHLor2nUySsoY0L4q:b-2x49jp) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/test/module/irohad/ordering/ordering_service_test.cpp#L49)):*
> ```cpp
> class MockOrderingServiceTransport : public network::OrderingServiceTransport {
> public:
>    void publishProposal(model::Proposal &&proposal, const std::vector<std::string> &peers) override {
> ```

use clang-format for formatting

---

*[test/module/irohad/ordering/ordering_service_test.cpp, line 68 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmHPlpWSZ77QHQsUbb:-KvmHPlpWSZ77QHQsUbc:b-wsy52n) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/test/module/irohad/ordering/ordering_service_test.cpp#L68)):*
> ```cpp
>   OrderingServiceTest() {
>     peer.address = address;
>     loop = uvw::Loop::create();
> ```

again uvw

---

*[test/module/irohad/ordering/ordering_service_test.cpp, line 101 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmJ3nMsP978wDr9Yb9:-KvmJ3nMsP978wDr9YbA:bb7k6jt) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/test/module/irohad/ordering/ordering_service_test.cpp#L101)):*
> ```cpp
> 
>   void TearDown() override  {
>     if(loop)
> ```

loop

---

*[test/module/irohad/ordering/ordering_service_test.cpp, line 130 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmHi0klIrRLLXXX5ie:-KvmHi0klIrRLLXXX5if:b-mhzhsn) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/test/module/irohad/ordering/ordering_service_test.cpp#L130)):*
> ```cpp
> 
>   auto ordering_service = std::make_shared<OrderingServiceImpl>(
>           wsv, max_proposal, commit_delay, fake_transport, loop);
> ```

again loop

---

*[test/module/irohad/ordering/ordering_service_test.cpp, line 147 at r1](https://reviewable.io:443/reviews/hyperledger/iroha/616#-KvmHWr4F-TsSFZxdtU1:-KvmHWr4F-TsSFZxdtU2:b-mhzhsn) ([raw file](https://github.com/hyperledger/iroha/blob/c63ce3fd13c9317ba5433cb2c37491f4f3ef9925/test/module/irohad/ordering/ordering_service_test.cpp#L147)):*
> ```cpp
> 
>   auto ordering_service = std::make_shared<OrderingServiceImpl>(
>           wsv, max_proposal, commit_delay, fake_transport, loop);
> ```

again loop

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/616)*
<!-- Sent from Reviewable.io -->
",2017-10-06 15:32:10,2017-10-06 15:32:10
https://api.github.com/repos/hyperledger/iroha/issues/616,https://api.github.com/repos/hyperledger/iroha/issues/comments/334934704,https://github.com/hyperledger/iroha/pull/616#issuecomment-334934704,muratovv,"Your base branch outdated. Pls, rebase on new develop.",2017-10-07 13:21:21,2017-10-07 13:21:21
https://api.github.com/repos/hyperledger/iroha/issues/616,https://api.github.com/repos/hyperledger/iroha/issues/comments/335172719,https://github.com/hyperledger/iroha/pull/616#issuecomment-335172719,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=h1) Report
> Merging [#616](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/bd953681a471d3345fbaa1116e8c700ee1d394ae?src=pr&el=desc) will **decrease** coverage by `0.06%`.
> The diff coverage is `33.74%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/616/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #616      +/-   ##
===========================================
- Coverage    44.73%   44.66%   -0.07%     
===========================================
  Files          297      300       +3     
  Lines        11797    11821      +24     
  Branches      6265     6288      +23     
===========================================
+ Hits          5277     5280       +3     
+ Misses         776      773       -3     
- Partials      5744     5768      +24
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/main/impl/ordering\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.hpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [.../ordering/impl/ordering\_service\_transport\_grpc.hpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV90cmFuc3BvcnRfZ3JwYy5ocHA=) | `0% <0%> (ø)` | |
| [irohad/network/ordering\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfc2VydmljZS5ocHA=) | `0% <0%> (ø)` | |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `55.08% <0%> (ø)` | :arrow_up: |
| [test/integration/consensus/consensus\_sunny\_day.cpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jb25zZW5zdXMvY29uc2Vuc3VzX3N1bm55X2RheS5jcHA=) | `39.43% <14.28%> (-0.85%)` | :arrow_down: |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `44% <16.66%> (-3.83%)` | :arrow_down: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `56.25% <25%> (-8.04%)` | :arrow_down: |
| [...ule/irohad/ordering/ordering\_gate\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfc2VydmljZV90ZXN0LmNwcA==) | `31.25% <28.2%> (-6.09%)` | :arrow_down: |
| ... and [13 more](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=footer). Last update [bd95368...47c0fc4](https://codecov.io/gh/hyperledger/iroha/pull/616?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-09 14:20:21,2017-10-11 09:10:54
https://api.github.com/repos/hyperledger/iroha/issues/616,https://api.github.com/repos/hyperledger/iroha/issues/comments/335751507,https://github.com/hyperledger/iroha/pull/616#issuecomment-335751507,sorabot,"SonarQube analysis reported 13 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 1 major
* ![INFO][INFO] 11 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L216](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/main/application.cpp#L216): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/main/application.cpp#L31): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![INFO][INFO] [ordering_init.hpp#L70](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/main/impl/ordering_init.hpp#L70): Undocumented API: ordering_service [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_init.hpp#L71](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/main/impl/ordering_init.hpp#L71): Undocumented API: ordering_gate [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_init.hpp#L72](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/main/impl/ordering_init.hpp#L72): Undocumented API: ordering_gate_transport [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_init.hpp#L73](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/main/impl/ordering_init.hpp#L73): Undocumented API: ordering_service_transport [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_service.hpp#L25](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/network/ordering_service.hpp#L25): Undocumented API: OrderingService [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [peer_communication_service.hpp#L29](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/network/peer_communication_service.hpp#L29): Undocumented API: Commit [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_gate_transport_grpc.hpp#L29](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/ordering/impl/ordering_gate_transport_grpc.hpp#L29): Undocumented API: OrderingGateTransportGrpc [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [ordering_gate_transport_grpc.hpp#L34](https://github.com/hyperledger/iroha/blob/cc726200a79c0b62bf5407d0696fce9214cd0630/irohad/ordering/impl/ordering_gate_transport_grpc.hpp#L34): Undocumented API: OrderingGateTransportGrpc [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2017-10-11 09:27:56,2017-10-11 09:27:56
https://api.github.com/repos/hyperledger/iroha/issues/615,https://api.github.com/repos/hyperledger/iroha/issues/comments/334708670,https://github.com/hyperledger/iroha/pull/615#issuecomment-334708670,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=h1) Report
> Merging [#615](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/602f488ba80a5f6a8b55ad43eb8262ae1b5c9bc0?src=pr&el=desc) will **decrease** coverage by `0.13%`.
> The diff coverage is `75%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/615/graphs/tree.svg?token=VEvywEmaef&height=150&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #615      +/-   ##
===========================================
- Coverage    45.01%   44.88%   -0.14%     
===========================================
  Files          290      291       +1     
  Lines        11569    11587      +18     
  Branches      6088     6113      +25     
===========================================
- Hits          5208     5201       -7     
+ Misses         763      762       -1     
- Partials      5598     5624      +26
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/commands/create\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9yb2xlLmhwcA==) | `33.33% <ø> (ø)` | :arrow_up: |
| [...odel/queries/responses/account\_assets\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcmVzcG9uc2VzL2FjY291bnRfYXNzZXRzX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...d/model/queries/responses/signatories\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcmVzcG9uc2VzL3NpZ25hdG9yaWVzX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/append\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2FwcGVuZF9yb2xlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/remove\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL3JlbW92ZV9zaWduYXRvcnkuaHBw) | `0% <ø> (-25%)` | :arrow_down: |
| [irohad/model/queries/get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnRfYXNzZXRzLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/transaction\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3RyYW5zYWN0aW9uX3Jlc3BvbnNlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2Fzc2V0LmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3RyYW5zYWN0aW9uLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/add\_peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2FkZF9wZWVyLmhwcA==) | `25% <ø> (-25%)` | :arrow_down: |
| ... and [69 more](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=footer). Last update [602f488...2194712](https://codecov.io/gh/hyperledger/iroha/pull/615?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-06 09:42:12,2017-10-06 14:11:49
https://api.github.com/repos/hyperledger/iroha/issues/615,https://api.github.com/repos/hyperledger/iroha/issues/comments/334750563,https://github.com/hyperledger/iroha/pull/615#issuecomment-334750563,Warchant,"



Reviewed 44 of 44 files at r1.
Review status: all files reviewed at latest revision, all discussions resolved, some commit checks failed.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/615)*
<!-- Sent from Reviewable.io -->
",2017-10-06 13:12:18,2017-10-06 13:12:18
https://api.github.com/repos/hyperledger/iroha/issues/615,https://api.github.com/repos/hyperledger/iroha/issues/comments/334751983,https://github.com/hyperledger/iroha/pull/615#issuecomment-334751983,Warchant,"Sorabot is triggered on badly formed ""License"" section on top of every file. Could you change them to
```
/**
 * Copyright Soramitsu Co., Ltd. 2017 All Rights Reserved.
 * http://soramitsu.co.jp
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
```
",2017-10-06 13:18:10,2017-10-06 13:18:10
https://api.github.com/repos/hyperledger/iroha/issues/615,https://api.github.com/repos/hyperledger/iroha/issues/comments/334766303,https://github.com/hyperledger/iroha/pull/615#issuecomment-334766303,sorabot,"SonarQube analysis reported 124 issues
* ![INFO][INFO] 124 info

#### Top 10 issues

1. ![INFO][INFO] [account.hpp#L31](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/account.hpp#L31): Undocumented API: Permissions [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account.hpp#L88](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/account.hpp#L88): Undocumented API: operator== [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [account.hpp#L89](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/account.hpp#L89): Undocumented API: operator!= [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [asset.hpp#L31](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/asset.hpp#L31): Undocumented API: Asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [asset.hpp#L33](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/asset.hpp#L33): Undocumented API: Asset [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [asset.hpp#L40](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/asset.hpp#L40): Undocumented API: domain_id [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L39](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/block.hpp#L39): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [block.hpp#L43](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/block.hpp#L43): Undocumented API: HashType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L51](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/block.hpp#L51): Undocumented API: SignaturesType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [block.hpp#L91](https://github.com/hyperledger/iroha/blob/219471214cc2ba5f651100c913862b9b9441ba76/irohad/model/block.hpp#L91): Undocumented API: TransactionsType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-10-06 14:11:20,2017-10-06 14:11:20
https://api.github.com/repos/hyperledger/iroha/issues/614,https://api.github.com/repos/hyperledger/iroha/issues/comments/334576315,https://github.com/hyperledger/iroha/pull/614#issuecomment-334576315,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=h1) Report
> Merging [#614](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/960dbbe14e6ceaaf15dc8060f44a597b6b869f38?src=pr&el=desc) will **decrease** coverage by `0.06%`.
> The diff coverage is `32.99%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/614/graphs/tree.svg?height=150&token=VEvywEmaef&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #614      +/-   ##
===========================================
- Coverage    44.79%   44.73%   -0.07%     
===========================================
  Files          293      294       +1     
  Lines        11702    11754      +52     
  Branches      6205     6240      +35     
===========================================
+ Hits          5242     5258      +16     
- Misses         772      776       +4     
- Partials      5688     5720      +32
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/validation/impl/stateful\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/model\_crypto\_provider.hpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL21vZGVsX2NyeXB0b19wcm92aWRlci5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/torii/torii\_queries\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3F1ZXJpZXNfdGVzdC5jcHA=) | `9.23% <ø> (ø)` | :arrow_up: |
| [libs/crypto/keys\_manager\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-bGlicy9jcnlwdG8va2V5c19tYW5hZ2VyX2ltcGwuaHBw) | `100% <ø> (ø)` | |
| [irohad/validation/stateless\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVsZXNzX3ZhbGlkYXRvci5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3RyYW5zYWN0aW9uLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/peer\_orderer\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9wZWVyX29yZGVyZXJfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/impl/pb\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9ibG9ja19mYWN0b3J5LmNwcA==) | `43.24% <ø> (-2.71%)` | :arrow_down: |
| [irohad/main/impl/consensus\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9jb25zZW5zdXNfaW5pdC5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [...rohad/validation/impl/stateless\_validator\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWxlc3NfdmFsaWRhdG9yX2ltcGwuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| ... and [46 more](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=footer). Last update [960dbbe...6169d75](https://codecov.io/gh/hyperledger/iroha/pull/614?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-05 20:02:38,2017-10-09 14:29:42
https://api.github.com/repos/hyperledger/iroha/issues/614,https://api.github.com/repos/hyperledger/iroha/issues/comments/334865364,https://github.com/hyperledger/iroha/pull/614#issuecomment-334865364,Warchant,"



Reviewed 1 of 15 files at r1, 5 of 21 files at r2, 13 of 18 files at r3, 4 of 12 files at r5, 24 of 27 files at r7, 11 of 12 files at r8, 1 of 1 files at r9, 2 of 2 files at r10.
Review status: all files reviewed at latest revision, 7 unresolved discussions, some commit checks broke.

---

*[iroha-cli/interactive/impl/interactive_cli.cpp, line 40 at r10](https://reviewable.io:443/reviews/hyperledger/iroha/614#-KvnPG9v6Y1g9Wf0-Hoz:-KvnPG9v6Y1g9Wf0-Hp-:b-5c7ym5) ([raw file](https://github.com/hyperledger/iroha/blob/ba44f05d50b872106b63d49ef51cc4e0f226fda1/iroha-cli/interactive/impl/interactive_cli.cpp#L40)):*
> ```cpp
>     InteractiveCli::InteractiveCli(std::string account_name,
>                                    uint64_t tx_counter,
>                                    uint64_t qry_counter,
> ```

how to query query counter?

---

*[irohad/consensus/yac/transport/impl/network_impl.cpp, line 49 at r10](https://reviewable.io:443/reviews/hyperledger/iroha/614#-KvnPYXVezgoyOIRbnsR:-KvnPYXVezgoyOIRbnsS:b-5x8757) ([raw file](https://github.com/hyperledger/iroha/blob/ba44f05d50b872106b63d49ef51cc4e0f226fda1/irohad/consensus/yac/transport/impl/network_impl.cpp#L49)):*
> ```cpp
>         auto request = PbConverters::serializeVote(vote);
> 
>         auto call = new AsyncClientCall;
> ```

raw `new`? 
it looks like a memory leak

---

*[irohad/model/generators/impl/command_generator.cpp, line 109 at r10](https://reviewable.io:443/reviews/hyperledger/iroha/614#-KvnQHGDakUgIxQkH5WW:-KvnQHGDakUgIxQkH5WX:b-jal87n) ([raw file](https://github.com/hyperledger/iroha/blob/ba44f05d50b872106b63d49ef51cc4e0f226fda1/irohad/model/generators/impl/command_generator.cpp#L109)):*
> ```cpp
>           const std::string &asset_id,
>           const Amount &amount) {
>         // TODO: implement
> ```

`BOOST_ASSERT_MSG(false, ""not implemented"");`

---

*[libs/crypto/keys_manager_impl.cpp, line 66 at r9](https://reviewable.io:443/reviews/hyperledger/iroha/614#-KvmJr6Fg01mSBw4wzfN-r9-66:-KvnQUwApzooa6mBcwbe:bb7qx3u) ([raw file](https://github.com/hyperledger/iroha/blob/2eb61757077d57f4ae244013d7e0da221aa4deae/libs/crypto/keys_manager_impl.cpp#L66)):*
<details><summary><i>Previously, l4l (Eugene) wrote…</i></summary><blockquote>

wat?
</blockquote></details>

wat?

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/hyperledger/iroha/614)*
<!-- Sent from Reviewable.io -->
",2017-10-06 20:44:43,2017-10-06 20:44:43
https://api.github.com/repos/hyperledger/iroha/issues/614,https://api.github.com/repos/hyperledger/iroha/issues/comments/335175359,https://github.com/hyperledger/iroha/pull/614#issuecomment-335175359,sorabot,"SonarQube analysis reported 148 issues
* ![BLOCKER][BLOCKER] 1 blocker
* ![CRITICAL][CRITICAL] 2 critical
* ![MAJOR][MAJOR] 5 major
* ![MINOR][MINOR] 28 minor
* ![INFO][INFO] 112 info

#### Top 10 issues

1. ![BLOCKER][BLOCKER] [logger.hpp#L17](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/libs/logger/logger.hpp#L17): Reserved name used for macro (contains two consecutive underscores) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AReservedNames)
1. ![CRITICAL][CRITICAL] [main.cpp#L56](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/iroha-cli/main.cpp#L56): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L216](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/irohad/main/application.cpp#L216): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [interactive_query_cli.cpp#L117](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/iroha-cli/interactive/impl/interactive_query_cli.cpp#L117): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MAJOR][MAJOR] [yac.cpp#L49](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/irohad/consensus/yac/impl/yac.cpp#L49): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.cpp#L59](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/irohad/consensus/yac/impl/yac.cpp#L59): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/irohad/main/application.cpp#L31): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.hpp#L60](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/irohad/main/application.hpp#L60): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L92](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/iroha-cli/interactive/impl/interactive_query_cli.cpp#L92): Member variable 'InteractiveQueryCli::local_time_' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [interactive_query_cli.cpp#L109](https://github.com/hyperledger/iroha/blob/6169d75007020f8a7ce9925de1edf5bdf828364e/iroha-cli/interactive/impl/interactive_query_cli.cpp#L109): Define a constant instead of duplicating this literal ""Choose query: "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-09 14:29:14,2017-10-09 14:29:14
https://api.github.com/repos/hyperledger/iroha/issues/613,https://api.github.com/repos/hyperledger/iroha/issues/comments/334461599,https://github.com/hyperledger/iroha/pull/613#issuecomment-334461599,sorabot,"SonarQube analysis reported 15 issues
* ![MAJOR][MAJOR] 1 major
* ![INFO][INFO] 14 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [storage_impl.hpp#L78](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L78): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![INFO][INFO] [storage_impl.hpp#L36](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L36): Undocumented API: ConnectionContext [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L37](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L37): Undocumented API: ConnectionContext [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L47](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L47): Undocumented API: block_store [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L48](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L48): Undocumented API: index [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L49](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L49): Undocumented API: pg_lazy [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L50](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L50): Undocumented API: pg_nontx [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L53](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L53): Undocumented API: StorageImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L56](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L56): Undocumented API: initConnections [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [storage_impl.hpp#L62](https://github.com/hyperledger/iroha/blob/409928318379686986f29b184e84b15cb5355a86/irohad/ametsuchi/impl/storage_impl.hpp#L62): Undocumented API: create [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",2017-10-05 13:17:15,2017-10-05 13:17:15
https://api.github.com/repos/hyperledger/iroha/issues/613,https://api.github.com/repos/hyperledger/iroha/issues/comments/334461755,https://github.com/hyperledger/iroha/pull/613#issuecomment-334461755,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/613?src=pr&el=h1) Report
> Merging [#613](https://codecov.io/gh/hyperledger/iroha/pull/613?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/602f488ba80a5f6a8b55ad43eb8262ae1b5c9bc0?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/613/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/613?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #613   +/-   ##
========================================
  Coverage    45.01%   45.01%           
========================================
  Files          290      290           
  Lines        11569    11569           
  Branches      6088     6088           
========================================
  Hits          5208     5208           
  Misses         763      763           
  Partials      5598     5598
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/613?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/613?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `85.71% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/613?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/613?src=pr&el=footer). Last update [602f488...4099283](https://codecov.io/gh/hyperledger/iroha/pull/613?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-05 13:17:51,2017-10-05 13:17:51
https://api.github.com/repos/hyperledger/iroha/issues/613,https://api.github.com/repos/hyperledger/iroha/issues/comments/335006148,https://github.com/hyperledger/iroha/pull/613#issuecomment-335006148,neewy,Regarded redundant as model classes aren't containing signed types,2017-10-08 13:19:43,2017-10-08 13:19:43
https://api.github.com/repos/hyperledger/iroha/issues/612,https://api.github.com/repos/hyperledger/iroha/issues/comments/334679802,https://github.com/hyperledger/iroha/pull/612#issuecomment-334679802,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=h1) Report
> Merging [#612](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/602f488ba80a5f6a8b55ad43eb8262ae1b5c9bc0?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `30.43%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/612/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #612      +/-   ##
===========================================
+ Coverage    45.01%   45.02%   +0.01%     
===========================================
  Files          290      292       +2     
  Lines        11569    11710     +141     
  Branches      6088     6173      +85     
===========================================
+ Hits          5208     5273      +65     
- Misses         763      775      +12     
- Partials      5598     5662      +64
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/flat\_file\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZV9ibG9ja19xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...le/irohad/model/converters/pb\_transaction\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfdHJhbnNhY3Rpb25fdGVzdC5jcHA=) | `30.76% <ø> (+7.08%)` | :arrow_up: |
| [irohad/ametsuchi/impl/redis\_flat\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2ZsYXRfYmxvY2tfcXVlcnkuaHBw) | `0% <0%> (ø)` | |
| [irohad/ametsuchi/impl/redis\_flat\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3JlZGlzX2ZsYXRfYmxvY2tfcXVlcnkuY3Bw) | `37.5% <37.5%> (ø)` | |
| [irohad/ametsuchi/impl/mutable\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL211dGFibGVfc3RvcmFnZV9pbXBsLmNwcA==) | `46.42% <40.74%> (-3.58%)` | :arrow_down: |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `29.24% <42.85%> (+0.81%)` | :arrow_up: |
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `61.11% <75%> (+0.24%)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `16.35% <9.09%> (-0.18%)` | :arrow_down: |
| [irohad/ametsuchi/impl/flat\_file\_block\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZV9ibG9ja19xdWVyeS5jcHA=) | `22.64% <0%> (-15.1%)` | :arrow_down: |
| [test/integration/consensus/consensus\_sunny\_day.cpp](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jb25zZW5zdXMvY29uc2Vuc3VzX3N1bm55X2RheS5jcHA=) | `41.55% <0%> (-0.11%)` | :arrow_down: |
| ... and [15 more](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=footer). Last update [602f488...b18100a](https://codecov.io/gh/hyperledger/iroha/pull/612?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-06 07:27:27,2017-10-08 12:34:20
https://api.github.com/repos/hyperledger/iroha/issues/612,https://api.github.com/repos/hyperledger/iroha/issues/comments/335005058,https://github.com/hyperledger/iroha/pull/612#issuecomment-335005058,sorabot,"SonarQube analysis reported 43 issues
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 5 minor
* ![INFO][INFO] 37 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [storage_impl.cpp#L30](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/storage_impl.cpp#L30): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [redis_flat_block_query.hpp#L46](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/redis_flat_block_query.hpp#L46): Unused private function: 'RedisFlatBlockQuery::getBlockIds' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [redis_flat_block_query.hpp#L55](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/redis_flat_block_query.hpp#L55): Unused private function: 'RedisFlatBlockQuery::callbackToLrange' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [storage_impl.cpp#L59](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/storage_impl.cpp#L59): Define a constant instead of duplicating this literal ""Cannot create CommandExecutorFactory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L68](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/storage_impl.cpp#L68): Define a constant instead of duplicating this literal ""Connection to PostgreSQL broken: {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L72](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/storage_impl.cpp#L72): Define a constant instead of duplicating this literal ""TemporaryWsv"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [flat_file_block_query.hpp#L28](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/flat_file_block_query.hpp#L28): Undocumented API: FlatFileBlockQuery [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [flat_file_block_query.hpp#L30](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/flat_file_block_query.hpp#L30): Undocumented API: FlatFileBlockQuery [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [flat_file_block_query.hpp#L46](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/flat_file_block_query.hpp#L46): Undocumented API: block_store_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [flat_file_block_query.hpp#L48](https://github.com/hyperledger/iroha/blob/e3e1670a6526436f3b6dbf3365f1e34811473087/irohad/ametsuchi/impl/flat_file_block_query.hpp#L48): Undocumented API: serializer_ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-08 13:00:07,2017-10-08 13:00:07
https://api.github.com/repos/hyperledger/iroha/issues/610,https://api.github.com/repos/hyperledger/iroha/issues/comments/336640145,https://github.com/hyperledger/iroha/pull/610#issuecomment-336640145,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=h1) Report
> Merging [#610](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/600565c1ad2d6826d11ab84380e2908738cf73f7?src=pr&el=desc) will **increase** coverage by `0.12%`.
> The diff coverage is `56.32%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/610/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #610      +/-   ##
===========================================
+ Coverage    47.89%   48.01%   +0.12%     
===========================================
  Files          300      304       +4     
  Lines        10957    11025      +68     
  Branches      5638     5652      +14     
===========================================
+ Hits          5248     5294      +46     
- Misses         484      489       +5     
- Partials      5225     5242      +17
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [.../irohad/model/converters/pb\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeV90ZXN0LmNwcA==) | `2.08% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/test\_storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Rlc3Rfc3RvcmFnZV9pbXBsLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `15.62% <0%> (-1.05%)` | :arrow_down: |
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `63.79% <0%> (+1.72%)` | :arrow_up: |
| [libs/util/string.hpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-bGlicy91dGlsL3N0cmluZy5ocHA=) | `0% <0%> (ø)` | |
| [libs/util/filesystem.hpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-bGlicy91dGlsL2ZpbGVzeXN0ZW0uaHBw) | `25% <25%> (ø)` | |
| [test/module/libs/util/filesystem\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy91dGlsL2ZpbGVzeXN0ZW1fdGVzdC5jcHA=) | `28.57% <28.57%> (ø)` | |
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `31.34% <30.76%> (+1.65%)` | :arrow_up: |
| [irohad/ametsuchi/impl/test\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Rlc3Rfc3RvcmFnZV9pbXBsLmNwcA==) | `37.83% <33.33%> (+1.72%)` | :arrow_up: |
| ... and [11 more](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=footer). Last update [600565c...61ab120](https://codecov.io/gh/hyperledger/iroha/pull/610?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-14 14:56:19,2017-10-18 07:32:47
https://api.github.com/repos/hyperledger/iroha/issues/610,https://api.github.com/repos/hyperledger/iroha/issues/comments/337485410,https://github.com/hyperledger/iroha/pull/610#issuecomment-337485410,sorabot,"SonarQube analysis reported 146 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 4 major
* ![MINOR][MINOR] 12 minor
* ![INFO][INFO] 129 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [flags.cpp#L134](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/main/config/gflags_impl/flags.cpp#L134): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [storage_impl.cpp#L30](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/ametsuchi/impl/storage_impl.cpp#L30): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [storage_impl.hpp#L79](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/ametsuchi/impl/storage_impl.hpp#L79): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [test_storage_impl.cpp#L37](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/ametsuchi/impl/test_storage_impl.cpp#L37): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [test_storage_impl.hpp#L40](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/ametsuchi/impl/test_storage_impl.hpp#L40): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [storage_impl.cpp#L57](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/ametsuchi/impl/storage_impl.cpp#L57): Define a constant instead of duplicating this literal ""Cannot create CommandExecutorFactory"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L67](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/ametsuchi/impl/storage_impl.cpp#L67): Define a constant instead of duplicating this literal ""Connection to PostgreSQL broken: {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [storage_impl.cpp#L71](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/ametsuchi/impl/storage_impl.cpp#L71): Define a constant instead of duplicating this literal ""TemporaryWsv"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flags.cpp#L38](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/main/config/gflags_impl/flags.cpp#L38): Define a constant instead of duplicating this literal ""-{} {} is invalid"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [flags.cpp#L39](https://github.com/hyperledger/iroha/blob/61ab120d49bc405438001d37a9706f7a6abf85e3/irohad/main/config/gflags_impl/flags.cpp#L39): Define a constant instead of duplicating this literal false 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-18 07:32:14,2017-10-18 07:32:14
https://api.github.com/repos/hyperledger/iroha/issues/609,https://api.github.com/repos/hyperledger/iroha/issues/comments/334147908,https://github.com/hyperledger/iroha/pull/609#issuecomment-334147908,sorabot,"SonarQube analysis reported 75 issues
* ![CRITICAL][CRITICAL] 2 critical
* ![MAJOR][MAJOR] 2 major
* ![MINOR][MINOR] 14 minor
* ![INFO][INFO] 57 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L53](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/iroha-cli/main.cpp#L53): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![CRITICAL][CRITICAL] [application.cpp#L226](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/irohad/main/application.cpp#L226): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/irohad/main/application.cpp#L31): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.hpp#L62](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/irohad/main/application.hpp#L62): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [main.cpp#L42](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/iroha-cli/main.cpp#L42): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L44](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/iroha-cli/main.cpp#L44): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L45](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/iroha-cli/main.cpp#L45): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L47](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/iroha-cli/main.cpp#L47): Define a constant instead of duplicating this literal false 5 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L48](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/iroha-cli/main.cpp#L48): Define a constant instead of duplicating this literal ""Name of the account"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L55](https://github.com/hyperledger/iroha/blob/24bb6e6ce8d6a7fe0924c6c10ae69176cbd53000/iroha-cli/main.cpp#L55): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-04 13:03:12,2017-10-04 13:03:12
https://api.github.com/repos/hyperledger/iroha/issues/609,https://api.github.com/repos/hyperledger/iroha/issues/comments/334148122,https://github.com/hyperledger/iroha/pull/609#issuecomment-334148122,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`feature/crypto@be27e04`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `28%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/609/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=tree)

```diff
@@                Coverage Diff                @@
##             feature/crypto     #609   +/-   ##
=================================================
  Coverage                  ?   44.99%           
=================================================
  Files                     ?      294           
  Lines                     ?    11706           
  Branches                  ?     6159           
=================================================
  Hits                      ?     5267           
  Misses                    ?      776           
  Partials                  ?     5663
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ad/model/generators/impl/transaction\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC90cmFuc2FjdGlvbl9nZW5lcmF0b3IuY3Bw) | `40.54% <0%> (ø)` | |
| [irohad/model/generators/impl/block\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9ibG9ja19nZW5lcmF0b3IuY3Bw) | `63.63% <0%> (ø)` | |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `40.47% <12.5%> (ø)` | |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `54.83% <28.57%> (ø)` | |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `41.57% <57.89%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=footer). Last update [be27e04...24bb6e6](https://codecov.io/gh/hyperledger/iroha/pull/609?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-04 13:04:01,2017-10-04 13:11:04
https://api.github.com/repos/hyperledger/iroha/issues/608,https://api.github.com/repos/hyperledger/iroha/issues/comments/334051237,https://github.com/hyperledger/iroha/pull/608#issuecomment-334051237,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=h1) Report
> Merging [#608](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=desc) into [feature/crypto](https://codecov.io/gh/hyperledger/iroha/commit/e10bc2c747000fde46cc2bb45128cbaf5f801392?src=pr&el=desc) will **decrease** coverage by `0.07%`.
> The diff coverage is `27.9%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/608/graphs/tree.svg?token=VEvywEmaef&height=150&width=650&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree)

```diff
@@                Coverage Diff                 @@
##           feature/crypto     #608      +/-   ##
==================================================
- Coverage           45.09%   45.02%   -0.08%     
==================================================
  Files                 290      291       +1     
  Lines               11630    11643      +13     
  Branches             6103     6114      +11     
==================================================
- Hits                 5245     5242       -3     
- Misses                770      781      +11     
- Partials             5615     5620       +5
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/consensus/yac/impl/peer\_orderer\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9wZWVyX29yZGVyZXJfaW1wbC5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/consensus\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9jb25zZW5zdXNfaW5pdC5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [...ohad/consensus/yac/transport/impl/network\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmNwcA==) | `19.54% <0%> (ø)` | :arrow_up: |
| [...ad/consensus/yac/impl/yac\_crypto\_provider\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfY3J5cHRvX3Byb3ZpZGVyX2ltcGwuaHBw) | `0% <0%> (ø)` | |
| [.../module/irohad/consensus/yac/peer\_orderer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvcGVlcl9vcmRlcmVyX3Rlc3QuY3Bw) | `20% <0%> (-2.59%)` | :arrow_down: |
| [.../irohad/consensus/yac/yac\_crypto\_provider\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2NyeXB0b19wcm92aWRlcl90ZXN0LmNwcA==) | `11.76% <11.76%> (ø)` | |
| [irohad/consensus/yac/impl/yac.cpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWMuY3Bw) | `29.52% <16.66%> (-6.35%)` | :arrow_down: |
| [...ohad/consensus/yac/transport/yac\_pb\_converters.hpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L3lhY19wYl9jb252ZXJ0ZXJzLmhwcA==) | `20% <20%> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `56.77% <35.71%> (-1.96%)` | :arrow_down: |
| [irohad/main/impl/consensus\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9jb25zZW5zdXNfaW5pdC5jcHA=) | `65.51% <41.66%> (+14.45%)` | :arrow_up: |
| ... and [6 more](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=footer). Last update [e10bc2c...942c2d8](https://codecov.io/gh/hyperledger/iroha/pull/608?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-04 05:08:26,2017-10-04 10:33:36
https://api.github.com/repos/hyperledger/iroha/issues/608,https://api.github.com/repos/hyperledger/iroha/issues/comments/334115362,https://github.com/hyperledger/iroha/pull/608#issuecomment-334115362,sorabot,"SonarQube analysis reported 77 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 6 major
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 67 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L218](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/main/application.cpp#L218): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [yac.cpp#L27](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/consensus/yac/impl/yac.cpp#L27): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.cpp#L37](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/consensus/yac/impl/yac.cpp#L37): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.cpp#L31](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/main/application.cpp#L31): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.hpp#L62](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/main/application.hpp#L62): parameter list has 7 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [consensus_init.cpp#L72](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/main/impl/consensus_init.cpp#L72): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [consensus_init.hpp#L67](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/main/impl/consensus_init.hpp#L67): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [yac.cpp#L92](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/consensus/yac/impl/yac.cpp#L92): Define a constant instead of duplicating this literal ""Signature: {}, public key: {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [network_impl.cpp#L51](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/consensus/yac/transport/impl/network_impl.cpp#L51): Define a constant instead of duplicating this literal ""address"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [network_impl.cpp#L109](https://github.com/hyperledger/iroha/blob/942c2d8e9124726fcee8e9ff66293ac188510c63/irohad/consensus/yac/transport/impl/network_impl.cpp#L109): Define a constant instead of duplicating this literal ""Missing source address"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-04 10:32:39,2017-10-04 10:32:39
https://api.github.com/repos/hyperledger/iroha/issues/607,https://api.github.com/repos/hyperledger/iroha/issues/comments/334065770,https://github.com/hyperledger/iroha/pull/607#issuecomment-334065770,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=h1) Report
> Merging [#607](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/f6588cc7e2e7693a6b7cb73f260cfc541a702a85?src=pr&el=desc) will **decrease** coverage by `0.91%`.
> The diff coverage is `19.81%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/607/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #607      +/-   ##
===========================================
- Coverage    44.67%   43.75%   -0.92%     
===========================================
  Files          300      289      -11     
  Lines        11820    12270     +450     
  Branches      6287     6641     +354     
===========================================
+ Hits          5280     5369      +89     
+ Misses         773      771       -2     
- Partials      5767     6130     +363
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/converters/json\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/flat\_file\_block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL2ZsYXRfZmlsZV9ibG9ja19xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/query\_execution.hpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJ5X2V4ZWN1dGlvbi5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/registration/query\_registration.hpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3JlZ2lzdHJhdGlvbi9xdWVyeV9yZWdpc3RyYXRpb24uaHBw) | `16.66% <0%> (-3.34%)` | :arrow_down: |
| [test/module/irohad/model/static\_map.cpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL3N0YXRpY19tYXAuY3Bw) | `14.28% <0%> (ø)` | :arrow_up: |
| [...rohad/model/converters/json\_query\_factory\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9xdWVyeV9mYWN0b3J5X3Rlc3QuY3Bw) | `3.81% <1.88%> (-1.68%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfdGVzdC5jcHA=) | `14.75% <12.03%> (-1.78%)` | :arrow_down: |
| [irohad/model/queries/get\_transactions.hpp](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X3RyYW5zYWN0aW9ucy5ocHA=) | `16.66% <25%> (+16.66%)` | :arrow_up: |
| ... and [125 more](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=footer). Last update [f6588cc...d595629](https://codecov.io/gh/hyperledger/iroha/pull/607?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-04 06:55:02,2017-10-13 20:06:52
https://api.github.com/repos/hyperledger/iroha/issues/607,https://api.github.com/repos/hyperledger/iroha/issues/comments/334437954,https://github.com/hyperledger/iroha/pull/607#issuecomment-334437954,sorabot,"SonarQube analysis reported 75 issues
* ![MAJOR][MAJOR] 3 major
* ![MINOR][MINOR] 23 minor
* ![INFO][INFO] 49 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [pb_query_factory.cpp#L56](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/converters/impl/pb_query_factory.cpp#L56): The Cyclomatic Complexity of this function is 12 which is greater than 10 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MAJOR][MAJOR] [query_generator.cpp#L107](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/generators/impl/query_generator.cpp#L107): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [query_generator.hpp#L72](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/generators/query_generator.hpp#L72): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [json_query_factory.cpp#L35](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/converters/impl/json_query_factory.cpp#L35): Variable 'deserializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_query_factory.cpp#L36](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/converters/impl/json_query_factory.cpp#L36): Define a constant instead of duplicating this literal ""GetAccount"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L37](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/converters/impl/json_query_factory.cpp#L37): Define a constant instead of duplicating this literal ""GetAccountAssets"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L39](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/converters/impl/json_query_factory.cpp#L39): Define a constant instead of duplicating this literal ""GetAccountTransactions"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L41](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/converters/impl/json_query_factory.cpp#L41): Define a constant instead of duplicating this literal ""GetAccountAssetTransactions"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L43](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/converters/impl/json_query_factory.cpp#L43): Define a constant instead of duplicating this literal ""GetAccountTransactionsWithPager"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_query_factory.cpp#L45](https://github.com/hyperledger/iroha/blob/d5956291b0b9cd698cc2b2309296f3bcec6cf03a/irohad/model/converters/impl/json_query_factory.cpp#L45): Define a constant instead of duplicating this literal ""GetAccountAssetsTransactionsWithPager"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-05 11:31:15,2017-10-05 11:31:15
https://api.github.com/repos/hyperledger/iroha/issues/607,https://api.github.com/repos/hyperledger/iroha/issues/comments/334929159,https://github.com/hyperledger/iroha/pull/607#issuecomment-334929159,muratovv,"General issue: I prefer to review tasks independently, one by one. In next time, pls, separate your pull request with respect to tasks.",2017-10-07 11:40:10,2017-10-07 11:40:10
https://api.github.com/repos/hyperledger/iroha/issues/607,https://api.github.com/repos/hyperledger/iroha/issues/comments/338752297,https://github.com/hyperledger/iroha/pull/607#issuecomment-338752297,motxx,This PR will be closed and a new one is to be opened after answering all comments.,2017-10-23 18:25:09,2017-10-23 18:25:09
https://api.github.com/repos/hyperledger/iroha/issues/607,https://api.github.com/repos/hyperledger/iroha/issues/comments/338759630,https://github.com/hyperledger/iroha/pull/607#issuecomment-338759630,motxx,"About separating PR, I tried to separate PR but, one change for adding pagination into rx stuff leads to changes proto and json converters, also interactive cli and torii endpoint in order to succeed compilation. I tried editing commits file by file, but after all, the result led to the above.",2017-10-23 18:50:19,2017-10-23 18:50:28
https://api.github.com/repos/hyperledger/iroha/issues/606,https://api.github.com/repos/hyperledger/iroha/issues/comments/333832933,https://github.com/hyperledger/iroha/pull/606#issuecomment-333832933,sorabot,"SonarQube analysis reported 2 issues

1. ![MINOR][MINOR] [tx_pipeline_integration_test.cpp#L80](https://github.com/hyperledger/iroha/blob/43a46463d59ebb73c7a5a248a6e44d00cf54ca8c/test/integration/pipeline/tx_pipeline_integration_test.cpp#L80): Member variable 'TxPipelineIntegrationTest::genesis_block' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [tx_pipeline_integration_test.cpp#L80](https://github.com/hyperledger/iroha/blob/43a46463d59ebb73c7a5a248a6e44d00cf54ca8c/test/integration/pipeline/tx_pipeline_integration_test.cpp#L80): Member variable 'TxPipelineIntegrationTest::expected_block' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-03 12:56:43,2017-10-03 12:56:43
https://api.github.com/repos/hyperledger/iroha/issues/606,https://api.github.com/repos/hyperledger/iroha/issues/comments/333833248,https://github.com/hyperledger/iroha/pull/606#issuecomment-333833248,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/606?src=pr&el=h1) Report
> Merging [#606](https://codecov.io/gh/hyperledger/iroha/pull/606?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1b32bc5ff83ce461d1941961a772ba7afc54c652?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/606/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/606?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #606      +/-   ##
===========================================
- Coverage     45.1%   45.09%   -0.01%     
===========================================
  Files          290      290              
  Lines        11631    11632       +1     
  Branches      6110     6111       +1     
===========================================
  Hits          5246     5246              
  Misses         765      765              
- Partials      5620     5621       +1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/606?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/606?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `37.66% <0%> (-0.5%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/606?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/606?src=pr&el=footer). Last update [1b32bc5...43a4646](https://codecov.io/gh/hyperledger/iroha/pull/606?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-03 12:57:54,2017-10-03 12:57:54
https://api.github.com/repos/hyperledger/iroha/issues/605,https://api.github.com/repos/hyperledger/iroha/issues/comments/340067412,https://github.com/hyperledger/iroha/pull/605#issuecomment-340067412,neewy,@tkyonezu ARMv7 is very helpful for the project. Can you please either clean this PR and leave ARM docker file in it or open a separate pull request with ARM?,2017-10-27 19:43:23,2017-10-27 19:43:23
https://api.github.com/repos/hyperledger/iroha/issues/605,https://api.github.com/repos/hyperledger/iroha/issues/comments/340361060,https://github.com/hyperledger/iroha/pull/605#issuecomment-340361060,tkyonezu,"@neewy ARM support on Iroha only changes the base image of Dockerfile and docker-compose.yml.  However, it is a story if you run it in steps as I have written. Therefore, ARM support is really easy, but it may be difficult to extract it.",2017-10-30 07:13:21,2017-10-30 07:13:21
https://api.github.com/repos/hyperledger/iroha/issues/605,https://api.github.com/repos/hyperledger/iroha/issues/comments/343781936,https://github.com/hyperledger/iroha/pull/605#issuecomment-343781936,tkyonezu,"As I said before, I do not think that Makefile is the best solution. Other alternatives only hope to provide an environment that can be more easily and reliably built and executed.
Also, since hakodate is only written according to the development situation of Iroha at the time, of course it is another topic whether it conforms to the current Iroha.
I pray that the environment that users are likely to make errors will be improved according to complicated procedures.",2017-11-13 00:33:55,2017-11-13 00:33:55
https://api.github.com/repos/hyperledger/iroha/issues/605,https://api.github.com/repos/hyperledger/iroha/issues/comments/343825136,https://github.com/hyperledger/iroha/pull/605#issuecomment-343825136,takemiyamakoto,Is it possible to make some progress on this pull request to get it integrated into the codebase?,2017-11-13 06:22:59,2017-11-13 06:22:59
https://api.github.com/repos/hyperledger/iroha/issues/605,https://api.github.com/repos/hyperledger/iroha/issues/comments/348493737,https://github.com/hyperledger/iroha/pull/605#issuecomment-348493737,lebdron,"In order to merge this, the following has to be done:
1. Remove Makefiles, so that they will be decided over in a separate pull request.
2. Make templates for Dockerfiles and docker-compose.yml, so that it's possible to generate current files with script. Scripts can specify exactly the lines that are changed in these files, such as base images.
3. Remove Hakodate scripts, as they were removed in #686.",2017-12-01 13:24:25,2017-12-01 13:24:25
https://api.github.com/repos/hyperledger/iroha/issues/605,https://api.github.com/repos/hyperledger/iroha/issues/comments/348836661,https://github.com/hyperledger/iroha/pull/605#issuecomment-348836661,tkyonezu,"There are about three issues on this pull request.

First of all, it is possible to crrespond to Raspberry Pi with docker simply by rewrite base image of Dockerfile for arm32v7.

The hakodate.sh script was created and used for the Hakodate Workshop on September 30th. I think that such a sample script is useful, but you will need to fix it following to Iroha development.

The story that there is no potability in the Makefile is something I can not understand at all. It is possible to build and run Iroha with cloud (Linux/amd64), MacOS, and Raspberry Pi just by running make with my Makefile.

It is wonderful that there is a better solution, so even if it is Ninja, real code should be provided.

What we need now is to provide Iroha with an environment that can be built and executed more easily, whether it is Makefile or Ninja.",2017-12-04 01:12:45,2017-12-04 01:12:45
https://api.github.com/repos/hyperledger/iroha/issues/604,https://api.github.com/repos/hyperledger/iroha/issues/comments/333768682,https://github.com/hyperledger/iroha/pull/604#issuecomment-333768682,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/604?src=pr&el=h1) Report
> Merging [#604](https://codecov.io/gh/hyperledger/iroha/pull/604?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1b32bc5ff83ce461d1941961a772ba7afc54c652?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `26.66%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/604/graphs/tree.svg?token=VEvywEmaef&src=pr&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/604?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #604      +/-   ##
===========================================
+ Coverage     45.1%   45.11%   +0.01%     
===========================================
  Files          290      290              
  Lines        11631    11634       +3     
  Branches      6110     6112       +2     
===========================================
+ Hits          5246     5249       +3     
+ Misses         765      764       -1     
- Partials      5620     5621       +1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/604?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...d/model/converters/impl/pb\_transaction\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/604?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl90cmFuc2FjdGlvbl9mYWN0b3J5LmNwcA==) | `37.5% <26.66%> (-3.88%)` | :arrow_down: |
| [libs/crypto/ed25519/ge.c](https://codecov.io/gh/hyperledger/iroha/pull/604?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS9nZS5j) | `98.4% <0%> (+1.2%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/604?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/604?src=pr&el=footer). Last update [1b32bc5...8b6795d](https://codecov.io/gh/hyperledger/iroha/pull/604?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-03 07:59:32,2017-10-03 08:18:53
https://api.github.com/repos/hyperledger/iroha/issues/604,https://api.github.com/repos/hyperledger/iroha/issues/comments/333772579,https://github.com/hyperledger/iroha/pull/604#issuecomment-333772579,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [pb_transaction_factory.cpp#L31](https://github.com/hyperledger/iroha/blob/8b6795d0ccd51f0b481ebce03ade0e4a338cb9c9/irohad/model/converters/impl/pb_transaction_factory.cpp#L31): Unused variable: pb_tx [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedVariable)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-03 08:18:02,2017-10-03 08:18:02
https://api.github.com/repos/hyperledger/iroha/issues/604,https://api.github.com/repos/hyperledger/iroha/issues/comments/335006715,https://github.com/hyperledger/iroha/pull/604#issuecomment-335006715,neewy,I guess since proto guide says that it is better to use singular forms of words — this PR might be closed. @grimadas please confirm,2017-10-08 13:29:36,2017-10-08 13:29:36
https://api.github.com/repos/hyperledger/iroha/issues/604,https://api.github.com/repos/hyperledger/iroha/issues/comments/336119144,https://github.com/hyperledger/iroha/pull/604#issuecomment-336119144,Warchant,"I agree. In code it will be like

```
Transaction tx;
auto signature = tx.add_signatures(); // plural form, which is not good.
signature->set_pubkey(...);
signature->set_signature(...);
```",2017-10-12 12:35:48,2017-10-12 12:35:48
https://api.github.com/repos/hyperledger/iroha/issues/604,https://api.github.com/repos/hyperledger/iroha/issues/comments/336644727,https://github.com/hyperledger/iroha/pull/604#issuecomment-336644727,neewy,"I guess we should refactor our protofiles and use only singular forms in fields. Task is in the backlog, this PR is closed. ",2017-10-14 16:03:08,2017-10-14 16:03:08
https://api.github.com/repos/hyperledger/iroha/issues/603,https://api.github.com/repos/hyperledger/iroha/issues/comments/333677514,https://github.com/hyperledger/iroha/pull/603#issuecomment-333677514,sorabot,"SonarQube analysis reported 57 issues
* ![MINOR][MINOR] 10 minor
* ![INFO][INFO] 47 info

#### Top 10 issues

1. ![MINOR][MINOR] [operators.hpp#L43](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/libs/common/operators.hpp#L43): Missing curly brace. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingCurlyBraces)
1. ![MINOR][MINOR] [types.hpp#L83](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/libs/common/types.hpp#L83): The scope of the variable 'front' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)
1. ![MINOR][MINOR] [types.hpp#L83](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/libs/common/types.hpp#L83): The scope of the variable 'back' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)
1. ![MINOR][MINOR] [types.hpp#L259](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/libs/common/types.hpp#L259): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [result_test.cpp#L98](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/test/module/libs/result_test.cpp#L98): Same expression on both sides of '|'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplicateExpression)
1. ![MINOR][MINOR] [result_test.cpp#L104](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/test/module/libs/result_test.cpp#L104): Same expression on both sides of '|'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplicateExpression)
1. ![MINOR][MINOR] [result_test.cpp#L161](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/test/module/libs/result_test.cpp#L161): Variable 'a6' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [result_test.cpp#L165](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/test/module/libs/result_test.cpp#L165): Variable 'a7' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [result_test.cpp#L181](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/test/module/libs/result_test.cpp#L181): Variable 'b6' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [result_test.cpp#L185](https://github.com/hyperledger/iroha/blob/3714cd6fb31cb3c74d947f1b060de7551da145aa/test/module/libs/result_test.cpp#L185): Variable 'b7' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-02 21:59:34,2017-10-02 21:59:34
https://api.github.com/repos/hyperledger/iroha/issues/603,https://api.github.com/repos/hyperledger/iroha/issues/comments/333678966,https://github.com/hyperledger/iroha/pull/603#issuecomment-333678966,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=h1) Report
> Merging [#603](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1b32bc5ff83ce461d1941961a772ba7afc54c652?src=pr&el=desc) will **decrease** coverage by `0.46%`.
> The diff coverage is `31.55%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/603/graphs/tree.svg?height=150&src=pr&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #603      +/-   ##
===========================================
- Coverage     45.1%   44.63%   -0.47%     
===========================================
  Files          290      275      -15     
  Lines        11631    11383     -248     
  Branches      6110     6036      -74     
===========================================
- Hits          5246     5081     -165     
+ Misses         765      752      -13     
+ Partials      5620     5550      -70
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `61.53% <ø> (+0.66%)` | :arrow_up: |
| [libs/common/visitor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-bGlicy9jb21tb24vdmlzaXRvci5ocHA=) | `100% <100%> (ø)` | |
| [test/module/libs/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9yZXN1bHRfdGVzdC5jcHA=) | `2.38% <2.38%> (ø)` | |
| [libs/common/operators.hpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-bGlicy9jb21tb24vb3BlcmF0b3JzLmhwcA==) | `66.66% <66.66%> (ø)` | |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | `92.45% <92.45%> (ø)` | |
| [irohad/ametsuchi/temporary\_wsv.hpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS90ZW1wb3Jhcnlfd3N2LmhwcA==) | `0% <0%> (-50%)` | :arrow_down: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `0% <0%> (-38.16%)` | :arrow_down: |
| [test/module/irohad/model/model\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL21vZGVsX21vY2tzLmhwcA==) | `25% <0%> (-35%)` | :arrow_down: |
| [irohad/ametsuchi/impl/temporary\_wsv\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3RlbXBvcmFyeV93c3ZfaW1wbC5jcHA=) | `0% <0%> (-34.79%)` | :arrow_down: |
| [irohad/model/commands/add\_asset\_quantity.hpp](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2FkZF9hc3NldF9xdWFudGl0eS5ocHA=) | `0% <0%> (-25%)` | :arrow_down: |
| ... and [64 more](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=footer). Last update [1b32bc5...3714cd6](https://codecov.io/gh/hyperledger/iroha/pull/603?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-02 22:06:20,2017-10-02 22:06:20
https://api.github.com/repos/hyperledger/iroha/issues/603,https://api.github.com/repos/hyperledger/iroha/issues/comments/336929081,https://github.com/hyperledger/iroha/pull/603#issuecomment-336929081,Warchant,Probably it would be easier to reuse nonstd::expected.,2017-10-16 15:46:07,2017-10-16 15:46:07
https://api.github.com/repos/hyperledger/iroha/issues/602,https://api.github.com/repos/hyperledger/iroha/issues/comments/334374838,https://github.com/hyperledger/iroha/pull/602#issuecomment-334374838,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=h1) Report
> Merging [#602](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=desc) into [feature/permissions](https://codecov.io/gh/hyperledger/iroha/commit/5a05e8a26998178a1dfbdd12510106dcee4c17e7?src=pr&el=desc) will **decrease** coverage by `0.05%`.
> The diff coverage is `20.71%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/602/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree)

```diff
@@                   Coverage Diff                   @@
##           feature/permissions     #602      +/-   ##
=======================================================
- Coverage                43.62%   43.56%   -0.06%     
=======================================================
  Files                      292      292              
  Lines                    11699    11761      +62     
  Branches                  6325     6362      +37     
=======================================================
+ Hits                      5104     5124      +20     
- Misses                     757      762       +5     
- Partials                  5838     5875      +37
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/ametsuchi/ametsuchi\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfbW9ja3MuaHBw) | `72.91% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `85.71% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZF9mYWN0b3J5LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfY29tbWFuZC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/command\_generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvY29tbWFuZF9nZW5lcmF0b3IuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/impl/block\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9ibG9ja19nZW5lcmF0b3IuY3Bw) | `63.63% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/create\_role.hpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9yb2xlLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...odel/converters/impl/pb\_query\_response\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9yZXNwb25zZV9mYWN0b3J5LmNwcA==) | `42.77% <ø> (ø)` | :arrow_up: |
| [...ule/irohad/model/converters/json\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kc190ZXN0LmNwcA==) | `2.75% <0%> (ø)` | :arrow_up: |
| ... and [13 more](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=footer). Last update [5a05e8a...17fbcf9](https://codecov.io/gh/hyperledger/iroha/pull/602?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-05 06:51:04,2017-10-06 07:26:06
https://api.github.com/repos/hyperledger/iroha/issues/602,https://api.github.com/repos/hyperledger/iroha/issues/comments/334679459,https://github.com/hyperledger/iroha/pull/602#issuecomment-334679459,sorabot,"SonarQube analysis reported 178 issues
* ![MAJOR][MAJOR] 4 major
* ![MINOR][MINOR] 60 minor
* ![INFO][INFO] 114 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [interactive_transaction_cli.cpp#L184](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L184): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MAJOR][MAJOR] [storage_impl.hpp#L78](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/irohad/ametsuchi/impl/storage_impl.hpp#L78): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [pb_command_factory.cpp#L479](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/irohad/model/converters/impl/pb_command_factory.cpp#L479): The Cyclomatic Complexity of this function is 14 which is greater than 10 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MAJOR][MAJOR] [pb_query_response_factory.cpp#L280](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/irohad/model/converters/impl/pb_query_response_factory.cpp#L280): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L168](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L168): Variable 'creator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L288](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L288): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.cpp#L35](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/irohad/ametsuchi/impl/postgres_wsv_command.cpp#L35): Define a constant instead of duplicating this literal false 16 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L72](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L72): Define a constant instead of duplicating this literal ""role_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L148](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L148): Define a constant instead of duplicating this literal ""public_key"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [json_command_factory.cpp#L46](https://github.com/hyperledger/iroha/blob/17fbcf9918e95c48ecd4bcdb713a3b2170336c1a/irohad/model/converters/impl/json_command_factory.cpp#L46): Define a constant instead of duplicating this literal ""value"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-06 07:25:38,2017-10-06 07:25:38
https://api.github.com/repos/hyperledger/iroha/issues/601,https://api.github.com/repos/hyperledger/iroha/issues/comments/333447366,https://github.com/hyperledger/iroha/pull/601#issuecomment-333447366,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=h1) Report
> Merging [#601](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7e5a61939a3dc837b80f4ed7375e2c5787718bcf?src=pr&el=desc) will **decrease** coverage by `0.18%`.
> The diff coverage is `50.79%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/601/graphs/tree.svg?token=VEvywEmaef&height=150&width=650&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #601      +/-   ##
===========================================
- Coverage     45.2%   45.01%   -0.19%     
===========================================
  Files          289      290       +1     
  Lines        11598    11569      -29     
  Branches      6080     6088       +8     
===========================================
- Hits          5243     5208      -35     
+ Misses         765      763       -2     
- Partials      5590     5598       +8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/integration/consensus/consensus\_sunny\_day.cpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jb25zZW5zdXMvY29uc2Vuc3VzX3N1bm55X2RheS5jcHA=) | `41.66% <ø> (+0.1%)` | :arrow_up: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `35.21% <ø> (-2.46%)` | :arrow_down: |
| [irohad/main/impl/consensus\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9jb25zZW5zdXNfaW5pdC5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/main/server\_runner.cpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-aXJvaGFkL21haW4vc2VydmVyX3J1bm5lci5jcHA=) | `52.38% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/timer\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC90aW1lcl9pbXBsLmhwcA==) | `0% <0%> (ø)` | |
| [test/module/irohad/consensus/yac/timer\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvdGltZXJfdGVzdC5jcHA=) | `29.16% <100%> (-7.51%)` | :arrow_down: |
| [...ule/irohad/ordering/ordering\_gate\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfc2VydmljZV90ZXN0LmNwcA==) | `37.33% <100%> (-0.65%)` | :arrow_down: |
| [irohad/consensus/yac/impl/timer\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC90aW1lcl9pbXBsLmNwcA==) | `50% <20%> (-25%)` | :arrow_down: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `55.3% <33.33%> (-1.44%)` | :arrow_down: |
| ... and [7 more](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=footer). Last update [7e5a619...aa0c8bf](https://codecov.io/gh/hyperledger/iroha/pull/601?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-02 06:01:51,2017-10-04 11:25:00
https://api.github.com/repos/hyperledger/iroha/issues/601,https://api.github.com/repos/hyperledger/iroha/issues/comments/334125308,https://github.com/hyperledger/iroha/pull/601#issuecomment-334125308,sorabot,"SonarQube analysis reported 67 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 2 major
* ![MINOR][MINOR] 3 minor
* ![INFO][INFO] 61 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L243](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/irohad/main/application.cpp#L243): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [application.cpp#L51](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/irohad/main/application.cpp#L51): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.hpp#L60](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/irohad/main/application.hpp#L60): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [tx_pipeline_integration_test.cpp#L67](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/test/integration/pipeline/tx_pipeline_integration_test.cpp#L67): Member variable 'TxPipelineIntegrationTest::genesis_block' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [tx_pipeline_integration_test.cpp#L67](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/test/integration/pipeline/tx_pipeline_integration_test.cpp#L67): Member variable 'TxPipelineIntegrationTest::expected_block' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [ordering_gate_service_test.cpp#L37](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/test/module/irohad/ordering/ordering_gate_service_test.cpp#L37): Variable 'gate_impl' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![INFO][INFO] [timer_impl.hpp#L27](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/irohad/consensus/yac/impl/timer_impl.hpp#L27): Undocumented API: TimerImpl [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [application.cpp#L35](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/irohad/main/application.cpp#L35): Class 'MockCryptoProvider' has a constructor with 1 argument that is not explicit. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AnoExplicitConstructor)
1. ![INFO][INFO] [application.hpp#L58](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/irohad/main/application.hpp#L58): Complete the task associated to this TODO comment. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATodoTagPresence)
1. ![INFO][INFO] [application.hpp#L77](https://github.com/hyperledger/iroha/blob/aa0c8bf73d01bf8c6ec4d8bae9eef704413ed9a3/irohad/main/application.hpp#L77): Undocumented API: ~ [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-04 11:22:30,2017-10-04 11:22:30
https://api.github.com/repos/hyperledger/iroha/issues/600,https://api.github.com/repos/hyperledger/iroha/issues/comments/340066995,https://github.com/hyperledger/iroha/pull/600#issuecomment-340066995,neewy,"No activity for more that 14 days. PR is closed since architecture owner, scientific researcher and community manager made a following decision:
workshop materials won't be updated or maintained after it is merged, so it is better to create a fork of repository with these changes",2017-10-27 19:41:19,2017-10-27 19:41:19
https://api.github.com/repos/hyperledger/iroha/issues/599,https://api.github.com/repos/hyperledger/iroha/issues/comments/333371230,https://github.com/hyperledger/iroha/pull/599#issuecomment-333371230,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=h1) Report
> Merging [#599](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=desc) into [feature/mst-trunk](https://codecov.io/gh/hyperledger/iroha/commit/68392fef4eb27dd9574bf380fb8cae5f47c900bf?src=pr&el=desc) will **decrease** coverage by `0.05%`.
> The diff coverage is `37.37%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/599/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree)

```diff
@@                  Coverage Diff                  @@
##           feature/mst-trunk     #599      +/-   ##
=====================================================
- Coverage              44.54%   44.49%   -0.06%     
=====================================================
  Files                    277      282       +5     
  Lines                  11411    11507      +96     
  Branches                6060     6118      +58     
=====================================================
+ Hits                    5083     5120      +37     
- Misses                   755      756       +1     
- Partials                5573     5631      +58
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...had/multi\_sig\_transactions/storage/mst\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9tc3Rfc3RvcmFnZS5ocHA=) | `0% <ø> (ø)` | |
| [irohad/multi\_sig\_transactions/state/mst\_state.hpp](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGUvbXN0X3N0YXRlLmhwcA==) | `50% <ø> (-10%)` | :arrow_down: |
| [...ulti\_sig\_transactions/storage/mst\_storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9tc3Rfc3RvcmFnZV9pbXBsLmhwcA==) | `0% <0%> (ø)` | |
| [...odule/irohad/multi\_sig\_transactions/state\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGVfdGVzdC5jcHA=) | `9.48% <18.75%> (+1.35%)` | :arrow_up: |
| [...ulti\_sig\_transactions/storage/impl/mst\_storage.cpp](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9pbXBsL21zdF9zdG9yYWdlLmNwcA==) | `35.71% <35.71%> (ø)` | |
| [...ule/irohad/multi\_sig\_transactions/storage\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZV90ZXN0LmNwcA==) | `36.11% <36.11%> (ø)` | |
| [...sig\_transactions/storage/impl/mst\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9pbXBsL21zdF9zdG9yYWdlX2ltcGwuY3Bw) | `45.45% <45.45%> (ø)` | |
| [irohad/model/operators/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL29wZXJhdG9ycy9oYXNoLmhwcA==) | `77.77% <50%> (-7.94%)` | :arrow_down: |
| [...ad/multi\_sig\_transactions/state/impl/mst\_state.cpp](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGUvaW1wbC9tc3Rfc3RhdGUuY3Bw) | `58.13% <62.5%> (+5.75%)` | :arrow_up: |
| ... and [7 more](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=footer). Last update [68392fe...6c6adf4](https://codecov.io/gh/hyperledger/iroha/pull/599?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-01 11:48:07,2017-10-08 15:15:25
https://api.github.com/repos/hyperledger/iroha/issues/599,https://api.github.com/repos/hyperledger/iroha/issues/comments/335013325,https://github.com/hyperledger/iroha/pull/599#issuecomment-335013325,sorabot,"SonarQube analysis reported 19 issues
* ![INFO][INFO] 19 info

#### Top 10 issues

1. ![INFO][INFO] [hash.hpp#L32](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/model/operators/hash.hpp#L32): Undocumented API: TxType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L33](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/model/operators/hash.hpp#L33): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L47](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/model/operators/hash.hpp#L47): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L62](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/model/operators/hash.hpp#L62): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_types.hpp#L26](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/multi_sig_transactions/mst_types.hpp#L26): Undocumented API: TransactionType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_types.hpp#L27](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/multi_sig_transactions/mst_types.hpp#L27): Undocumented API: ConstPeer [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_types.hpp#L28](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/multi_sig_transactions/mst_types.hpp#L28): Undocumented API: TimeType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_state.hpp#L32](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/multi_sig_transactions/state/mst_state.hpp#L32): Undocumented API: DataType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_state.hpp#L74](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/multi_sig_transactions/state/mst_state.hpp#L74): Undocumented API: CompleterType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [mst_state.hpp#L76](https://github.com/hyperledger/iroha/blob/6c6adf41b7ef4e920e23ec3f6fb14c9189c871ea/irohad/multi_sig_transactions/state/mst_state.hpp#L76): Undocumented API: MstState [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'",2017-10-08 15:14:29,2017-10-08 15:14:29
https://api.github.com/repos/hyperledger/iroha/issues/598,https://api.github.com/repos/hyperledger/iroha/issues/comments/333393786,https://github.com/hyperledger/iroha/pull/598#issuecomment-333393786,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=h1) Report
> Merging [#598](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/3251cbeffa78744697f63d562905fce664b11fc4?src=pr&el=desc) will **increase** coverage by `0.22%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/598/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #598      +/-   ##
===========================================
+ Coverage    44.63%   44.85%   +0.22%     
===========================================
  Files          275      271       -4     
  Lines        11383    11200     -183     
  Branches      6036     5909     -127     
===========================================
- Hits          5081     5024      -57     
+ Misses         752      750       -2     
+ Partials      5550     5426     -124
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `60.86% <0%> (-0.67%)` | :arrow_down: |
| [libs/common/operators.hpp](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=tree#diff-bGlicy9jb21tb24vb3BlcmF0b3JzLmhwcA==) | | |
| [test/module/libs/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9yZXN1bHRfdGVzdC5jcHA=) | | |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | | |
| [libs/common/visitor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=tree#diff-bGlicy9jb21tb24vdmlzaXRvci5ocHA=) | | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=footer). Last update [3251cbe...87ee73a](https://codecov.io/gh/hyperledger/iroha/pull/598?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-01 17:48:56,2017-10-01 17:48:56
https://api.github.com/repos/hyperledger/iroha/issues/597,https://api.github.com/repos/hyperledger/iroha/issues/comments/333340900,https://github.com/hyperledger/iroha/pull/597#issuecomment-333340900,Warchant,"I  guess it would be wise to create a file `commands.hpp` which includes all commands instead of doing [this](https://github.com/hyperledger/iroha/blob/b6bbd350187576401303c3aa4c3f14547e7a67ce/irohad/model/impl/model_operators.cpp#L18-L31).


if command set is changed, there will be only one place where you have to add new command",2017-09-30 22:46:41,2017-09-30 22:47:23
https://api.github.com/repos/hyperledger/iroha/issues/597,https://api.github.com/repos/hyperledger/iroha/issues/comments/333350444,https://github.com/hyperledger/iroha/pull/597#issuecomment-333350444,grimadas,"@Warchant 
> I guess it would be wise to create a file commands.hpp which includes all commands instead of doing this.

Good point, but definitely outside this pr. Better create another pr with such refactoring 
",2017-10-01 03:16:40,2017-10-01 03:16:40
https://api.github.com/repos/hyperledger/iroha/issues/597,https://api.github.com/repos/hyperledger/iroha/issues/comments/333370999,https://github.com/hyperledger/iroha/pull/597#issuecomment-333370999,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=h1) Report
> Merging [#597](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0d4fa0b619731e58635b95354126e08fb87e4aa3?src=pr&el=desc) will **decrease** coverage by `0.15%`.
> The diff coverage is `32.11%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/597/graphs/tree.svg?src=pr&token=VEvywEmaef&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #597      +/-   ##
===========================================
- Coverage    44.85%   44.69%   -0.16%     
===========================================
  Files          271      275       +4     
  Lines        11200    11334     +134     
  Branches      5909     6003      +94     
===========================================
+ Hits          5024     5066      +42     
- Misses         750      753       +3     
- Partials      5426     5515      +89
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3RyYW5zYWN0aW9uLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [...le/irohad/model/operators/model\_operators\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL29wZXJhdG9ycy9tb2RlbF9vcGVyYXRvcnNfdGVzdC5jcHA=) | `26.82% <0%> (ø)` | :arrow_up: |
| [irohad/model/impl/model\_operators.cpp](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvbW9kZWxfb3BlcmF0b3JzLmNwcA==) | `37.38% <0%> (-2.24%)` | :arrow_down: |
| [...rohad/multi\_sig\_transactions/storage/mst\_state.hpp](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9tc3Rfc3RhdGUuaHBw) | `100% <100%> (ø)` | |
| [...odule/irohad/multi\_sig\_transactions/state\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RhdGVfdGVzdC5jcHA=) | `13.15% <13.15%> (ø)` | |
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `60.52% <50%> (-0.35%)` | :arrow_down: |
| [.../multi\_sig\_transactions/storage/impl/mst\_state.cpp](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree#diff-aXJvaGFkL211bHRpX3NpZ190cmFuc2FjdGlvbnMvc3RvcmFnZS9pbXBsL21zdF9zdGF0ZS5jcHA=) | `54.76% <54.76%> (ø)` | |
| [irohad/model/operators/hash.hpp](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL29wZXJhdG9ycy9oYXNoLmhwcA==) | `85.71% <85.71%> (ø)` | |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=footer). Last update [0d4fa0b...10f1dda](https://codecov.io/gh/hyperledger/iroha/pull/597?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-10-01 11:44:07,2017-10-02 12:43:05
https://api.github.com/repos/hyperledger/iroha/issues/597,https://api.github.com/repos/hyperledger/iroha/issues/comments/333522104,https://github.com/hyperledger/iroha/pull/597#issuecomment-333522104,sorabot,"SonarQube analysis reported 48 issues
* ![MINOR][MINOR] 4 minor
* ![INFO][INFO] 44 info

#### Top 10 issues

1. ![MINOR][MINOR] [transaction.hpp#L4](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/irohad/model/transaction.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [types.hpp#L82](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/libs/common/types.hpp#L82): The scope of the variable 'front' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)
1. ![MINOR][MINOR] [types.hpp#L82](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/libs/common/types.hpp#L82): The scope of the variable 'back' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)
1. ![MINOR][MINOR] [types.hpp#L294](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/libs/common/types.hpp#L294): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![INFO][INFO] [hash.hpp#L32](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/irohad/model/operators/hash.hpp#L32): Undocumented API: TxType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L33](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/irohad/model/operators/hash.hpp#L33): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [hash.hpp#L47](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/irohad/model/operators/hash.hpp#L47): Undocumented API: operator() [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [transaction.hpp#L1](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/irohad/model/transaction.hpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![INFO][INFO] [transaction.hpp#L72](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/irohad/model/transaction.hpp#L72): Undocumented API: HashType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [transaction.hpp#L87](https://github.com/hyperledger/iroha/blob/10f1dda70659bc20df601349c805b5d6c0e196e4/irohad/model/transaction.hpp#L87): Undocumented API: CommandsType [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-02 12:39:51,2017-10-02 12:39:51
https://api.github.com/repos/hyperledger/iroha/issues/596,https://api.github.com/repos/hyperledger/iroha/issues/comments/333309451,https://github.com/hyperledger/iroha/pull/596#issuecomment-333309451,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/596?src=pr&el=h1) Report
> Merging [#596](https://codecov.io/gh/hyperledger/iroha/pull/596?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1f66688ed6c9a6b3725e642791ebdf836d2b94d2?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/596/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/596?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #596   +/-   ##
========================================
  Coverage    44.85%   44.85%           
========================================
  Files          271      271           
  Lines        11198    11198           
  Branches      5908     5908           
========================================
  Hits          5023     5023           
  Misses         750      750           
  Partials      5425     5425
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/596?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/596?src=pr&el=footer). Last update [1f66688...9bab6c9](https://codecov.io/gh/hyperledger/iroha/pull/596?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-30 13:43:37,2017-09-30 13:46:21
https://api.github.com/repos/hyperledger/iroha/issues/595,https://api.github.com/repos/hyperledger/iroha/issues/comments/333300946,https://github.com/hyperledger/iroha/pull/595#issuecomment-333300946,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=h1) Report
> Merging [#595](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1f66688ed6c9a6b3725e642791ebdf836d2b94d2?src=pr&el=desc) will **increase** coverage by `0.21%`.
> The diff coverage is `33.33%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/595/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #595      +/-   ##
===========================================
+ Coverage    44.85%   45.07%   +0.21%     
===========================================
  Files          271      270       -1     
  Lines        11198    11031     -167     
  Branches      5908     5782     -126     
===========================================
- Hits          5023     4972      -51     
+ Misses         750      735      -15     
+ Partials      5425     5324     -101
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/commands/add\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2FkZF9zaWduYXRvcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/remove\_signatory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL3JlbW92ZV9zaWduYXRvcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/impl/model\_operators.cpp](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvbW9kZWxfb3BlcmF0b3JzLmNwcA==) | `39.62% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9hY2NvdW50LmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [libs/amount/amount.cpp](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmNwcA==) | `70.4% <0%> (-0.73%)` | :arrow_down: |
| [irohad/model/execution/impl/command\_executor.cpp](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3IuY3Bw) | `43.01% <100%> (+0.21%)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `23.23% <0%> (-8.99%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `26% <0%> (-2.06%)` | :arrow_down: |
| [test/module/irohad/ametsuchi/ametsuchi\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfZml4dHVyZS5ocHA=) | `36.36% <0%> (ø)` | :arrow_up: |
| ... and [4 more](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=footer). Last update [1f66688...d5f324a](https://codecov.io/gh/hyperledger/iroha/pull/595?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-30 10:57:13,2017-09-30 15:09:39
https://api.github.com/repos/hyperledger/iroha/issues/595,https://api.github.com/repos/hyperledger/iroha/issues/comments/333315816,https://github.com/hyperledger/iroha/pull/595#issuecomment-333315816,sorabot,"SonarQube analysis reported 45 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 16 minor
* ![INFO][INFO] 27 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L53](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/main.cpp#L53): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [interactive_transaction_cli.cpp#L158](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L158): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L142](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L142): Variable 'creator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L215](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L215): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L307](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L307): Define a constant instead of duplicating this literal ""Not implemented"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L42](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/main.cpp#L42): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L44](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/main.cpp#L44): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L45](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/main.cpp#L45): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L47](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/main.cpp#L47): Define a constant instead of duplicating this literal false 5 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L48](https://github.com/hyperledger/iroha/blob/edcb811f063016e62288447e7fddebb7855304ec/iroha-cli/main.cpp#L48): Define a constant instead of duplicating this literal ""Name of the account"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-09-30 15:28:06,2017-09-30 15:28:06
https://api.github.com/repos/hyperledger/iroha/issues/594,https://api.github.com/repos/hyperledger/iroha/issues/comments/333247065,https://github.com/hyperledger/iroha/pull/594#issuecomment-333247065,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/594?src=pr&el=h1) Report
> Merging [#594](https://codecov.io/gh/hyperledger/iroha/pull/594?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1f66688ed6c9a6b3725e642791ebdf836d2b94d2?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/594/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/594?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #594   +/-   ##
========================================
  Coverage    44.85%   44.85%           
========================================
  Files          271      271           
  Lines        11198    11198           
  Branches      5908     5908           
========================================
  Hits          5023     5023           
  Misses         750      750           
  Partials      5425     5425
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/594?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/594?src=pr&el=footer). Last update [1f66688...218177b](https://codecov.io/gh/hyperledger/iroha/pull/594?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-29 21:48:33,2017-09-30 11:57:59
https://api.github.com/repos/hyperledger/iroha/issues/593,https://api.github.com/repos/hyperledger/iroha/issues/comments/333180530,https://github.com/hyperledger/iroha/pull/593#issuecomment-333180530,sorabot,"SonarQube analysis reported 1 issue

1. ![MINOR][MINOR] [postgres_wsv_command.cpp#L35](https://github.com/hyperledger/iroha/blob/e540d390b31c38320a8953b231a69ff561a02ce4/irohad/ametsuchi/impl/postgres_wsv_command.cpp#L35): Define a constant instead of duplicating this literal false 16 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-09-29 16:56:43,2017-09-29 16:56:43
https://api.github.com/repos/hyperledger/iroha/issues/593,https://api.github.com/repos/hyperledger/iroha/issues/comments/333180640,https://github.com/hyperledger/iroha/pull/593#issuecomment-333180640,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/593?src=pr&el=h1) Report
> Merging [#593](https://codecov.io/gh/hyperledger/iroha/pull/593?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/22771648c6d94080a638f36fde18d89a5b23cd39?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/593/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/593?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #593   +/-   ##
========================================
  Coverage    44.85%   44.85%           
========================================
  Files          271      271           
  Lines        11198    11198           
  Branches      5908     5908           
========================================
  Hits          5023     5023           
  Misses         750      750           
  Partials      5425     5425
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/593?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/593?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `32.22% <ø> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/593?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/593?src=pr&el=footer). Last update [2277164...e540d39](https://codecov.io/gh/hyperledger/iroha/pull/593?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-29 16:57:12,2017-09-29 16:57:12
https://api.github.com/repos/hyperledger/iroha/issues/592,https://api.github.com/repos/hyperledger/iroha/issues/comments/333099910,https://github.com/hyperledger/iroha/pull/592#issuecomment-333099910,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=h1) Report
> Merging [#592](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0d4fa0b619731e58635b95354126e08fb87e4aa3?src=pr&el=desc) will **increase** coverage by `0.27%`.
> The diff coverage is `39.27%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/592/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #592      +/-   ##
===========================================
+ Coverage    44.85%   45.12%   +0.27%     
===========================================
  Files          271      290      +19     
  Lines        11200    11631     +431     
  Branches      5909     6110     +201     
===========================================
+ Hits          5024     5249     +225     
- Misses         750      762      +12     
- Partials      5426     5620     +194
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/proposal.hpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3Byb3Bvc2FsLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [...ohad/consensus/yac/transport/impl/network\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L2ltcGwvbmV0d29ya19pbXBsLmhwcA==) | `0% <ø> (ø)` | |
| [irohad/simulator/impl/simulator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-aXJvaGFkL3NpbXVsYXRvci9pbXBsL3NpbXVsYXRvci5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/model\_crypto\_provider.hpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL21vZGVsX2NyeXB0b19wcm92aWRlci5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/yac.hpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMveWFjLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/validation/stateless\_validator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVsZXNzX3ZhbGlkYXRvci5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/consensus\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9jb25zZW5zdXNfaW5pdC5ocHA=) | `100% <ø> (ø)` | |
| [test/module/irohad/consensus/yac/network\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbnNlbnN1cy95YWMvbmV0d29ya190ZXN0LmNwcA==) | `7.4% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/yac\_hash\_provider.hpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMveWFjX2hhc2hfcHJvdmlkZXIuaHBw) | `83.33% <ø> (ø)` | :arrow_up: |
| [.../consensus/yac/transport/yac\_network\_interface.hpp](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvdHJhbnNwb3J0L3lhY19uZXR3b3JrX2ludGVyZmFjZS5ocHA=) | `50% <ø> (ø)` | |
| ... and [63 more](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=footer). Last update [0d4fa0b...9a0c482](https://codecov.io/gh/hyperledger/iroha/pull/592?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-29 11:16:02,2017-10-02 13:15:55
https://api.github.com/repos/hyperledger/iroha/issues/592,https://api.github.com/repos/hyperledger/iroha/issues/comments/333235807,https://github.com/hyperledger/iroha/pull/592#issuecomment-333235807,Warchant,"In [your test](http://upsource.soramitsu.co.jp/iroha/file/9026c34fcf4b8ffec21a926f8913e062ebb9c241/test/integration/pipeline/tx_pipeline_integration_test.cpp?nav=3177:3177:focused) -- specifically [here](http://upsource.soramitsu.co.jp/iroha/file/e540d390b31c38320a8953b231a69ff561a02ce4/irohad/main/impl/raw_block_insertion.cpp?nav=1445:1445:focused) a `SEGFAULT` happens, because `factory_` is `nullptr`.
",2017-09-29 20:50:13,2017-09-29 20:50:13
https://api.github.com/repos/hyperledger/iroha/issues/592,https://api.github.com/repos/hyperledger/iroha/issues/comments/333530415,https://github.com/hyperledger/iroha/pull/592#issuecomment-333530415,sorabot,"SonarQube analysis reported 123 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MAJOR][MAJOR] 7 major
* ![MINOR][MINOR] 9 minor
* ![INFO][INFO] 106 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [application.cpp#L259](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/main/application.cpp#L259): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [yac.cpp#L27](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/consensus/yac/impl/yac.cpp#L27): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.cpp#L41](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/consensus/yac/impl/yac.cpp#L41): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac_gate_impl.cpp#L27](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/consensus/yac/impl/yac_gate_impl.cpp#L27): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.hpp#L47](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/consensus/yac/yac.hpp#L47): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [yac.hpp#L54](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/consensus/yac/yac.hpp#L54): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.cpp#L51](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/main/application.cpp#L51): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [application.hpp#L63](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/main/application.hpp#L63): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [network_impl.cpp#L51](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/consensus/yac/transport/impl/network_impl.cpp#L51): Define a constant instead of duplicating this literal ""address"" 6 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [network_impl.cpp#L109](https://github.com/hyperledger/iroha/blob/9a0c482c2cd53578f2c5c5feff14f04833c60bdd/irohad/consensus/yac/transport/impl/network_impl.cpp#L109): Define a constant instead of duplicating this literal ""Missing source address"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-02 13:14:02,2017-10-02 13:14:02
https://api.github.com/repos/hyperledger/iroha/issues/591,https://api.github.com/repos/hyperledger/iroha/issues/comments/333097847,https://github.com/hyperledger/iroha/pull/591#issuecomment-333097847,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/591?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@ee0ae34`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/591/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/591?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #591   +/-   ##
==========================================
  Coverage           ?   44.85%           
==========================================
  Files              ?      271           
  Lines              ?    11198           
  Branches           ?     5908           
==========================================
  Hits               ?     5023           
  Misses             ?      750           
  Partials           ?     5425
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/591?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/591?src=pr&el=footer). Last update [ee0ae34...a006e53](https://codecov.io/gh/hyperledger/iroha/pull/591?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-29 11:04:11,2017-09-29 11:04:11
https://api.github.com/repos/hyperledger/iroha/issues/587,https://api.github.com/repos/hyperledger/iroha/issues/comments/332564666,https://github.com/hyperledger/iroha/pull/587#issuecomment-332564666,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=h1) Report
> Merging [#587](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/505d452194865522aadacfcec6b1cfdecadbfc37?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/587/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #587      +/-   ##
===========================================
+ Coverage     45.1%   45.11%   +0.01%     
===========================================
  Files          270      274       +4     
  Lines        11035    11142     +107     
  Branches      5781     5828      +47     
===========================================
+ Hits          4977     5027      +50     
- Misses         735      746      +11     
- Partials      5323     5369      +46
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/crypto/ed25519\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOV9pbXBsLmNwcA==) | `76.92% <0%> (-8.8%)` | :arrow_down: |
| [irohad/model/converters/impl/pb\_query\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9mYWN0b3J5LmNwcA==) | `31.29% <0%> (-6.04%)` | :arrow_down: |
| [irohad/model/generators/impl/query\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC9xdWVyeV9nZW5lcmF0b3IuY3Bw) | `53.52% <0%> (-5.81%)` | :arrow_down: |
| [irohad/model/impl/model\_operators.cpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2ltcGwvbW9kZWxfb3BlcmF0b3JzLmNwcA==) | `37.5% <0%> (-5.36%)` | :arrow_down: |
| [...orii/processor/impl/transaction\_processor\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9pbXBsL3RyYW5zYWN0aW9uX3Byb2Nlc3Nvcl9pbXBsLmNwcA==) | `40.35% <0%> (-3.51%)` | :arrow_down: |
| [irohad/model/converters/impl/pb\_block\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9ibG9ja19mYWN0b3J5LmNwcA==) | `45.45% <0%> (-1.77%)` | :arrow_down: |
| [...alidation/stateless/transaction\_validator\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vc3RhdGVsZXNzL3RyYW5zYWN0aW9uX3ZhbGlkYXRvcl90ZXN0LmNwcA==) | `29.62% <0%> (-0.99%)` | :arrow_down: |
| [test/module/libs/crypto/signature\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9jcnlwdG8vc2lnbmF0dXJlX3Rlc3QuY3Bw) | `2.04% <0%> (-0.09%)` | :arrow_down: |
| [irohad/model/query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJ5LmhwcA==) | `50% <0%> (ø)` | :arrow_up: |
| [irohad/model/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9hY2NvdW50LmhwcA==) | `50% <0%> (ø)` | :arrow_up: |
| ... and [40 more](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=footer). Last update [505d452...b520606](https://codecov.io/gh/hyperledger/iroha/pull/587?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-27 15:42:58,2017-09-27 15:42:58
https://api.github.com/repos/hyperledger/iroha/issues/586,https://api.github.com/repos/hyperledger/iroha/issues/comments/332744152,https://github.com/hyperledger/iroha/pull/586#issuecomment-332744152,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=h1) Report
> Merging [#586](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/b00fb4224e6ec923f06d911eda0da38aa4eb08a6?src=pr&el=desc) will **decrease** coverage by `2.05%`.
> The diff coverage is `27.16%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/586/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #586      +/-   ##
===========================================
- Coverage    49.95%   47.89%   -2.06%     
===========================================
  Files          298      300       +2     
  Lines        10754    10957     +203     
  Branches      5314     5638     +324     
===========================================
- Hits          5372     5248     -124     
+ Misses         488      484       -4     
- Partials      4894     5225     +331
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/generators/command\_generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvY29tbWFuZF9nZW5lcmF0b3IuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2RvbWFpbi5ocHA=) | `0% <ø> (-100%)` | :arrow_down: |
| [irohad/model/converters/json\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kX2ZhY3RvcnkuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfY29tbWFuZC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [.../model/execution/impl/command\_executor\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3JfZmFjdG9yeS5jcHA=) | `84.61% <ø> (-1.1%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZF9mYWN0b3J5LmhwcA==) | `100% <ø> (ø)` | |
| ... and [44 more](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=footer). Last update [b00fb42...de009bf](https://codecov.io/gh/hyperledger/iroha/pull/586?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-28 06:49:49,2017-10-17 09:31:11
https://api.github.com/repos/hyperledger/iroha/issues/586,https://api.github.com/repos/hyperledger/iroha/issues/comments/336636439,https://github.com/hyperledger/iroha/pull/586#issuecomment-336636439,neewy,Did you do https://soramitsu.atlassian.net/browse/IR-416 in this PR?,2017-10-14 13:56:17,2017-10-14 13:56:17
https://api.github.com/repos/hyperledger/iroha/issues/586,https://api.github.com/repos/hyperledger/iroha/issues/comments/337174237,https://github.com/hyperledger/iroha/pull/586#issuecomment-337174237,sorabot,"SonarQube analysis reported 250 issues
* ![MAJOR][MAJOR] 3 major
* ![MINOR][MINOR] 61 minor
* ![INFO][INFO] 186 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [storage_impl.hpp#L78](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/irohad/ametsuchi/impl/storage_impl.hpp#L78): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [pb_command_factory.cpp#L479](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/irohad/model/converters/impl/pb_command_factory.cpp#L479): The Cyclomatic Complexity of this function is 14 which is greater than 10 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFunctionComplexity)
1. ![MAJOR][MAJOR] [pb_query_response_factory.cpp#L264](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/irohad/model/converters/impl/pb_query_response_factory.cpp#L264): Add a default case to this switch. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ASwitchLastCaseIsDefault)
1. ![MINOR][MINOR] [query_response_handler.cpp#L99](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/iroha-cli/impl/query_response_handler.cpp#L99): Define a constant instead of duplicating this literal "" {} "" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [query_response_handler.cpp#L115](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/iroha-cli/impl/query_response_handler.cpp#L115): Define a constant instead of duplicating this literal ""-Asset Id- {}"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L199](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L199): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L298](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L298): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_transaction_cli.hpp#L131](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/iroha-cli/interactive/interactive_transaction_cli.hpp#L131): Unused private function: 'InteractiveTransactionCli::parseRevokePermission' [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedPrivateFunction)
1. ![MINOR][MINOR] [postgres_wsv_command.cpp#L35](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/irohad/ametsuchi/impl/postgres_wsv_command.cpp#L35): Define a constant instead of duplicating this literal false 16 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L72](https://github.com/hyperledger/iroha/blob/de009bfea45ba7d8737bd35d7699639ff6b4e523/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L72): Define a constant instead of duplicating this literal ""role_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-17 09:30:44,2017-10-17 09:30:44
https://api.github.com/repos/hyperledger/iroha/issues/585,https://api.github.com/repos/hyperledger/iroha/issues/comments/332165362,https://github.com/hyperledger/iroha/pull/585#issuecomment-332165362,motxx,Fixed in https://github.com/hyperledger/iroha/pull/582,2017-09-26 11:10:00,2017-09-26 11:10:08
https://api.github.com/repos/hyperledger/iroha/issues/584,https://api.github.com/repos/hyperledger/iroha/issues/comments/332115538,https://github.com/hyperledger/iroha/pull/584#issuecomment-332115538,Warchant,"Sorry, we are currently playing with travis-ci, so it may not work now.

Regarding Circle CI - sometimes g++ throws ""internal C++ error"".
Whenever it happens -- just press ""rebuild"" on Circle CI. 
We will investigate why it happens.",2017-09-26 07:49:13,2017-09-26 07:49:13
https://api.github.com/repos/hyperledger/iroha/issues/584,https://api.github.com/repos/hyperledger/iroha/issues/comments/332141803,https://github.com/hyperledger/iroha/pull/584#issuecomment-332141803,cimadai,"I understood. I'm waiting for completion for travis ci.
By the way, I cannot push ""rebuild"" button due to lack of my permissions. 
CircleCI shows `You need write permissions to trigger builds.`.",2017-09-26 09:30:30,2017-09-26 09:30:30
https://api.github.com/repos/hyperledger/iroha/issues/584,https://api.github.com/repos/hyperledger/iroha/issues/comments/332142716,https://github.com/hyperledger/iroha/pull/584#issuecomment-332142716,cimadai,"I'm sorry.
The reason was that I'm not connected to GitHub account in CircleCI.",2017-09-26 09:33:58,2017-09-26 09:33:58
https://api.github.com/repos/hyperledger/iroha/issues/584,https://api.github.com/repos/hyperledger/iroha/issues/comments/334991665,https://github.com/hyperledger/iroha/pull/584#issuecomment-334991665,l4l,Seems ci [liked it](https://circleci.com/gh/hyperledger/iroha/4775),2017-10-08 08:34:32,2017-10-08 08:34:39
https://api.github.com/repos/hyperledger/iroha/issues/584,https://api.github.com/repos/hyperledger/iroha/issues/comments/339538160,https://github.com/hyperledger/iroha/pull/584#issuecomment-339538160,takemiyamakoto,What is the status of this PR?,2017-10-26 03:12:25,2017-10-26 03:12:25
https://api.github.com/repos/hyperledger/iroha/issues/584,https://api.github.com/repos/hyperledger/iroha/issues/comments/340067836,https://github.com/hyperledger/iroha/pull/584#issuecomment-340067836,neewy,"After review, community manager, architecture owner and scientific researcher made a following decision:
tests are duplicated, a non-existent method is mocked. This pull request is closed.",2017-10-27 19:45:11,2017-10-27 19:45:11
https://api.github.com/repos/hyperledger/iroha/issues/582,https://api.github.com/repos/hyperledger/iroha/issues/comments/331951389,https://github.com/hyperledger/iroha/pull/582#issuecomment-331951389,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/582?src=pr&el=h1) Report
> Merging [#582](https://codecov.io/gh/hyperledger/iroha/pull/582?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/0f026fd1dc6693d9b76e2a5d8a890581dbd20dc0?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/582/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/582?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #582   +/-   ##
=======================================
  Coverage     46.1%   46.1%           
=======================================
  Files          265     265           
  Lines        10480   10480           
  Branches      5414    5414           
=======================================
  Hits          4832    4832           
  Misses         676     676           
  Partials      4972    4972
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/582?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/582?src=pr&el=footer). Last update [0f026fd...ec2a5a8](https://codecov.io/gh/hyperledger/iroha/pull/582?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-25 17:21:23,2017-09-25 17:21:23
https://api.github.com/repos/hyperledger/iroha/issues/582,https://api.github.com/repos/hyperledger/iroha/issues/comments/332154617,https://github.com/hyperledger/iroha/pull/582#issuecomment-332154617,sorabot,"SonarQube analysis reported 6 issues

Note: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:

1. ![BLOCKER][BLOCKER] [application.cpp#L1](https://github.com/hyperledger/iroha/blob/963585c002cf0052934a9bc0aafa3637d96076b6/irohad/main/application.cpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![BLOCKER][BLOCKER] [irohad.cpp#L1](https://github.com/hyperledger/iroha/blob/963585c002cf0052934a9bc0aafa3637d96076b6/irohad/main/irohad.cpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)
1. ![CRITICAL][CRITICAL] [application.cpp#L249](https://github.com/hyperledger/iroha/blob/963585c002cf0052934a9bc0aafa3637d96076b6/irohad/main/application.cpp#L249): Make this IP ""0.0.0.0:"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MAJOR][MAJOR] [application.cpp#L39](https://github.com/hyperledger/iroha/blob/963585c002cf0052934a9bc0aafa3637d96076b6/irohad/main/application.cpp#L39): parameter list has 6 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [application.cpp#L4](https://github.com/hyperledger/iroha/blob/963585c002cf0052934a9bc0aafa3637d96076b6/irohad/main/application.cpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [irohad.cpp#L4](https://github.com/hyperledger/iroha/blob/963585c002cf0052934a9bc0aafa3637d96076b6/irohad/main/irohad.cpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)

[BLOCKER]: https://sonarsource.github.io/sonar-github/severity-blocker.png 'Severity: BLOCKER'
[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-09-26 10:21:31,2017-09-26 10:21:31
https://api.github.com/repos/hyperledger/iroha/issues/581,https://api.github.com/repos/hyperledger/iroha/issues/comments/331935024,https://github.com/hyperledger/iroha/pull/581#issuecomment-331935024,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/581?src=pr&el=h1) Report
> Merging [#581](https://codecov.io/gh/hyperledger/iroha/pull/581?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/898eae1b402b164e421fdc481d99cf750310c05b?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/581/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/581?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #581   +/-   ##
=======================================
  Coverage     46.1%   46.1%           
=======================================
  Files          265     265           
  Lines        10480   10480           
  Branches      5414    5414           
=======================================
  Hits          4832    4832           
  Misses         676     676           
  Partials      4972    4972
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/581?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/581?src=pr&el=footer). Last update [898eae1...6a94e64](https://codecov.io/gh/hyperledger/iroha/pull/581?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-25 16:22:04,2017-09-25 16:22:04
https://api.github.com/repos/hyperledger/iroha/issues/580,https://api.github.com/repos/hyperledger/iroha/issues/comments/331918364,https://github.com/hyperledger/iroha/pull/580#issuecomment-331918364,sorabot,"SonarQube analysis reported 1 issue

Note: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:

1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-09-25 15:29:43,2017-09-25 15:29:43
https://api.github.com/repos/hyperledger/iroha/issues/580,https://api.github.com/repos/hyperledger/iroha/issues/comments/331918631,https://github.com/hyperledger/iroha/pull/580#issuecomment-331918631,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/580?src=pr&el=h1) Report
> Merging [#580](https://codecov.io/gh/hyperledger/iroha/pull/580?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/898eae1b402b164e421fdc481d99cf750310c05b?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/580/graphs/tree.svg?token=VEvywEmaef&src=pr&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/580?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #580   +/-   ##
=======================================
  Coverage     46.1%   46.1%           
=======================================
  Files          265     265           
  Lines        10480   10480           
  Branches      5414    5414           
=======================================
  Hits          4832    4832           
  Misses         676     676           
  Partials      4972    4972
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/580?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/580?src=pr&el=footer). Last update [898eae1...8fc7aa9](https://codecov.io/gh/hyperledger/iroha/pull/580?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-25 15:30:32,2017-09-25 15:30:32
https://api.github.com/repos/hyperledger/iroha/issues/579,https://api.github.com/repos/hyperledger/iroha/issues/comments/331708346,https://github.com/hyperledger/iroha/pull/579#issuecomment-331708346,sorabot,"SonarQube analysis reported 1 issue

Note: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:

1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-09-24 12:56:47,2017-09-24 12:56:47
https://api.github.com/repos/hyperledger/iroha/issues/579,https://api.github.com/repos/hyperledger/iroha/issues/comments/331708370,https://github.com/hyperledger/iroha/pull/579#issuecomment-331708370,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/579?src=pr&el=h1) Report
> Merging [#579](https://codecov.io/gh/hyperledger/iroha/pull/579?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/80fea56dcb3b0138678581aca523270a31b90a8a?src=pr&el=desc) will **increase** coverage by `0.02%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/579/graphs/tree.svg?src=pr&height=150&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/579?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #579      +/-   ##
===========================================
+ Coverage    47.49%   47.51%   +0.02%     
===========================================
  Files          264      264              
  Lines        10230    10232       +2     
  Branches      5126     5128       +2     
===========================================
+ Hits          4859     4862       +3     
+ Misses         720      717       -3     
- Partials      4651     4653       +2
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/579?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/579?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5jcHA=) | `26.47% <0%> (-0.53%)` | :arrow_down: |
| [libs/crypto/ed25519/ge.c](https://codecov.io/gh/hyperledger/iroha/pull/579?src=pr&el=tree#diff-bGlicy9jcnlwdG8vZWQyNTUxOS9nZS5j) | `98.4% <0%> (+1.2%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/579?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/579?src=pr&el=footer). Last update [80fea56...b4b4921](https://codecov.io/gh/hyperledger/iroha/pull/579?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-24 12:57:07,2017-09-24 12:57:07
https://api.github.com/repos/hyperledger/iroha/issues/578,https://api.github.com/repos/hyperledger/iroha/issues/comments/331702132,https://github.com/hyperledger/iroha/pull/578#issuecomment-331702132,Warchant,"Example is not very nice. It would be good to create ""standard"" file with default data, something like 
`env.sh` in project root.
Whenever you  want to run iroha, you write 
```
# source env.sh
# irohad
```",2017-09-24 10:54:39,2017-09-24 10:54:39
https://api.github.com/repos/hyperledger/iroha/issues/578,https://api.github.com/repos/hyperledger/iroha/issues/comments/334932702,https://github.com/hyperledger/iroha/pull/578#issuecomment-334932702,Warchant,Conflicts with https://github.com/hyperledger/iroha/pull/610,2017-10-07 12:45:40,2017-10-07 12:45:40
https://api.github.com/repos/hyperledger/iroha/issues/577,https://api.github.com/repos/hyperledger/iroha/issues/comments/331588283,https://github.com/hyperledger/iroha/pull/577#issuecomment-331588283,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=h1) Report
> Merging [#577](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/a072171d1744ace003e86df9ee62ac91eef5aed8?src=pr&el=desc) will **decrease** coverage by `0.22%`.
> The diff coverage is `31.55%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/577/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #577      +/-   ##
===========================================
- Coverage    44.85%   44.63%   -0.23%     
===========================================
  Files          271      275       +4     
  Lines        11200    11383     +183     
  Branches      5909     6036     +127     
===========================================
+ Hits          5024     5081      +57     
- Misses         750      752       +2     
- Partials      5426     5550     +124
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `61.53% <ø> (+0.66%)` | :arrow_up: |
| [libs/common/visitor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=tree#diff-bGlicy9jb21tb24vdmlzaXRvci5ocHA=) | `100% <100%> (ø)` | |
| [test/module/libs/result\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9yZXN1bHRfdGVzdC5jcHA=) | `2.38% <2.38%> (ø)` | |
| [libs/common/operators.hpp](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=tree#diff-bGlicy9jb21tb24vb3BlcmF0b3JzLmhwcA==) | `66.66% <66.66%> (ø)` | |
| [libs/common/result.hpp](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=tree#diff-bGlicy9jb21tb24vcmVzdWx0LmhwcA==) | `92.45% <92.45%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=footer). Last update [a072171...eb4d15e](https://codecov.io/gh/hyperledger/iroha/pull/577?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-23 00:24:06,2017-10-01 00:02:05
https://api.github.com/repos/hyperledger/iroha/issues/577,https://api.github.com/repos/hyperledger/iroha/issues/comments/333344177,https://github.com/hyperledger/iroha/pull/577#issuecomment-333344177,sorabot,"SonarQube analysis reported 57 issues
* ![MINOR][MINOR] 10 minor
* ![INFO][INFO] 47 info

#### Top 10 issues

1. ![MINOR][MINOR] [operators.hpp#L42](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/libs/common/operators.hpp#L42): Missing curly brace. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMissingCurlyBraces)
1. ![MINOR][MINOR] [types.hpp#L83](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/libs/common/types.hpp#L83): The scope of the variable 'front' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)
1. ![MINOR][MINOR] [types.hpp#L83](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/libs/common/types.hpp#L83): The scope of the variable 'back' can be reduced. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AvariableScope)
1. ![MINOR][MINOR] [types.hpp#L259](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/libs/common/types.hpp#L259): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [result_test.cpp#L98](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/test/module/libs/result_test.cpp#L98): Same expression on both sides of '|'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplicateExpression)
1. ![MINOR][MINOR] [result_test.cpp#L104](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/test/module/libs/result_test.cpp#L104): Same expression on both sides of '|'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AduplicateExpression)
1. ![MINOR][MINOR] [result_test.cpp#L161](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/test/module/libs/result_test.cpp#L161): Variable 'a6' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [result_test.cpp#L165](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/test/module/libs/result_test.cpp#L165): Variable 'a7' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [result_test.cpp#L181](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/test/module/libs/result_test.cpp#L181): Variable 'b6' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)
1. ![MINOR][MINOR] [result_test.cpp#L185](https://github.com/hyperledger/iroha/blob/eb4d15ea4826f1241fd048dfbfabe1386047100e/test/module/libs/result_test.cpp#L185): Variable 'b7' is reassigned a value before the old one has been used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AredundantAssignment)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-10-01 00:01:38,2017-10-01 00:01:38
https://api.github.com/repos/hyperledger/iroha/issues/576,https://api.github.com/repos/hyperledger/iroha/issues/comments/331625760,https://github.com/hyperledger/iroha/pull/576#issuecomment-331625760,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=h1) Report
> Merging [#576](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/db579d376beaa5f38e637bf2b15bde4d905d248f?src=pr&el=desc) will **decrease** coverage by `32.63%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/576/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##           develop     #576       +/-   ##
============================================
- Coverage    80.17%   47.53%   -32.64%     
============================================
  Files          313      261       -52     
  Lines        12302    10203     -2099     
  Branches         0     5111     +5111     
============================================
- Hits          9863     4850     -5013     
+ Misses        2439      713     -1726     
- Partials         0     4640     +4640
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/irohad/common/blob\_converter\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2NvbW1vbi9ibG9iX2NvbnZlcnRlcl90ZXN0LmNwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/model/asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2Fzc2V0LmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/model/queries/get\_signatories.hpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X3NpZ25hdG9yaWVzLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/torii/processor/query\_processor\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3Byb2Nlc3Nvci9xdWVyeV9wcm9jZXNzb3JfaW1wbC5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [test/module/vendor/uvw\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvdmVuZG9yL3V2d190ZXN0LmNwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/consensus/yac/impl/network\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9uZXR3b3JrX2ltcGwuaHBw) | `0% <0%> (-100%)` | :arrow_down: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [test/module/libs/amount/amount\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9hbW91bnQvYW1vdW50X3Rlc3QuY3Bw) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/ametsuchi/impl/test\_storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Rlc3Rfc3RvcmFnZV9pbXBsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| ... and [278 more](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=footer). Last update [db579d3...97cbaed](https://codecov.io/gh/hyperledger/iroha/pull/576?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-23 10:39:31,2017-09-23 10:39:31
https://api.github.com/repos/hyperledger/iroha/issues/575,https://api.github.com/repos/hyperledger/iroha/issues/comments/331490500,https://github.com/hyperledger/iroha/pull/575#issuecomment-331490500,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/575?src=pr&el=h1) Report
> Merging [#575](https://codecov.io/gh/hyperledger/iroha/pull/575?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/18c2e4e97bba233ec99e1d4041f9f06267e5407d?src=pr&el=desc) will **increase** coverage by `0.07%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/575/graphs/tree.svg?src=pr&width=650&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/575?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           develop    #575      +/-   ##
==========================================
+ Coverage    47.52%   47.6%   +0.07%     
==========================================
  Files          264     263       -1     
  Lines        10230   10151      -79     
  Branches      5126    5073      -53     
==========================================
- Hits          4862    4832      -30     
  Misses         717     717              
+ Partials      4651    4602      -49
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/575?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...ule/irohad/ordering/ordering\_gate\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/575?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfc2VydmljZV90ZXN0LmNwcA==) | | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/575?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/575?src=pr&el=footer). Last update [18c2e4e...3f9580f](https://codecov.io/gh/hyperledger/iroha/pull/575?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-22 16:09:10,2017-09-22 16:09:10
https://api.github.com/repos/hyperledger/iroha/issues/574,https://api.github.com/repos/hyperledger/iroha/issues/comments/331446493,https://github.com/hyperledger/iroha/pull/574#issuecomment-331446493,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=h1) Report
> Merging [#574](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/653cb8c19ed07c2274a8abb77324ed79272874f3?src=pr&el=desc) will **increase** coverage by `32.7%`.
> The diff coverage is `83.05%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/574/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #574      +/-   ##
===========================================
+ Coverage    47.52%   80.22%   +32.7%     
===========================================
  Files          264      311      +47     
  Lines        10230    12321    +2091     
  Branches      5126        0    -5126     
===========================================
+ Hits          4862     9885    +5023     
- Misses         717     2436    +1719     
+ Partials      4651        0    -4651
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/commands/add\_asset\_quantity.hpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2FkZF9hc3NldF9xdWFudGl0eS5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [libs/amount/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmhwcA==) | `69.23% <ø> (+53.84%)` | :arrow_up: |
| [irohad/model/generators/command\_generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvY29tbWFuZF9nZW5lcmF0b3IuaHBw) | `0% <ø> (ø)` | |
| [irohad/model/account\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2FjY291bnRfYXNzZXQuaHBw) | `100% <ø> (+100%)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `100% <ø> (+14.28%)` | :arrow_up: |
| [libs/common/types.hpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-bGlicy9jb21tb24vdHlwZXMuaHBw) | `83.33% <ø> (+13.21%)` | :arrow_up: |
| [iroha-cli/impl/query\_response\_handler.cpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-aXJvaGEtY2xpL2ltcGwvcXVlcnlfcmVzcG9uc2VfaGFuZGxlci5jcHA=) | `0% <0%> (ø)` | |
| [libs/parser/parser.cpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-bGlicy9wYXJzZXIvcGFyc2VyLmNwcA==) | `0% <0%> (ø)` | |
| [...i/interactive/impl/interactive\_transaction\_cli.cpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-aXJvaGEtY2xpL2ludGVyYWN0aXZlL2ltcGwvaW50ZXJhY3RpdmVfdHJhbnNhY3Rpb25fY2xpLmNwcA==) | `0% <0%> (ø)` | |
| [libs/parser/parser.hpp](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree#diff-bGlicy9wYXJzZXIvcGFyc2VyLmhwcA==) | `0% <0%> (ø)` | |
| ... and [306 more](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=footer). Last update [653cb8c...3025701](https://codecov.io/gh/hyperledger/iroha/pull/574?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-22 13:28:19,2017-09-24 13:15:07
https://api.github.com/repos/hyperledger/iroha/issues/574,https://api.github.com/repos/hyperledger/iroha/issues/comments/331815996,https://github.com/hyperledger/iroha/pull/574#issuecomment-331815996,sorabot,"SonarQube analysis reported 10 issues

Note: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:

1. ![MAJOR][MAJOR] [ametsuchi_test.cpp#L81](https://github.com/hyperledger/iroha/blob/5c7a862fa37c0bf481b4daa07972456d4dbcb5b9/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L81): Uninitialized struct member: block.txs_number [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitStructMember)
1. ![MAJOR][MAJOR] [ametsuchi_test.cpp#L267](https://github.com/hyperledger/iroha/blob/5c7a862fa37c0bf481b4daa07972456d4dbcb5b9/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L267): Uninitialized struct member: block.txs_number [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitStructMember)
1. ![MAJOR][MAJOR] [ametsuchi_test.cpp#L459](https://github.com/hyperledger/iroha/blob/5c7a862fa37c0bf481b4daa07972456d4dbcb5b9/test/module/irohad/ametsuchi/ametsuchi_test.cpp#L459): Uninitialized struct member: block.txs_number [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitStructMember)
1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L124](https://github.com/hyperledger/iroha/blob/5c7a862fa37c0bf481b4daa07972456d4dbcb5b9/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L124): Variable 'creator_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [json_command_factory.cpp#L64](https://github.com/hyperledger/iroha/blob/5c7a862fa37c0bf481b4daa07972456d4dbcb5b9/irohad/model/converters/impl/json_command_factory.cpp#L64): Variable 'serializers_' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L28](https://github.com/hyperledger/iroha/blob/5c7a862fa37c0bf481b4daa07972456d4dbcb5b9/irohad/model/converters/impl/pb_query_response_factory.cpp#L28): Function parameter 'query_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [pb_query_response_factory.cpp#L124](https://github.com/hyperledger/iroha/blob/5c7a862fa37c0bf481b4daa07972456d4dbcb5b9/irohad/model/converters/impl/pb_query_response_factory.cpp#L124): Function parameter 'pb_response' should be passed by reference. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3ApassedByValue)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L44](https://github.com/hyperledger/iroha/blob/5c7a862fa37c0bf481b4daa07972456d4dbcb5b9/test/module/irohad/model/command_validate_execute_test.cpp#L44): Member variable 'CommandValidateExecuteTest::creator' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)
1. ![MINOR][MINOR] [command_validate_execute_test.cpp#L44](https://github.com/hyperledger/iroha/blob/5c7a862fa37c0bf481b4daa07972456d4dbcb5b9/test/module/irohad/model/command_validate_execute_test.cpp#L44): Member variable 'CommandValidateExecuteTest::account' is not initialized in the constructor. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuninitMemberVar)

[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-09-25 08:44:35,2017-09-25 08:44:35
https://api.github.com/repos/hyperledger/iroha/issues/573,https://api.github.com/repos/hyperledger/iroha/issues/comments/331698502,https://github.com/hyperledger/iroha/pull/573#issuecomment-331698502,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/573?src=pr&el=h1) Report
> Merging [#573](https://codecov.io/gh/hyperledger/iroha/pull/573?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/ab882dc2f2a78f48128440a653c1391d8b4259ec?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/573/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/573?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #573      +/-   ##
===========================================
- Coverage    47.52%   47.51%   -0.01%     
===========================================
  Files          264      264              
  Lines        10230    10230              
  Branches      5126     5126              
===========================================
- Hits          4862     4861       -1     
  Misses         717      717              
- Partials      4651     4652       +1
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/573?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/573?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3BlZXIuaHBw) | `77.77% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/torii/torii\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/573?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3RvcmlpL3RvcmlpX3NlcnZpY2VfdGVzdC5jcHA=) | `27.87% <0%> (-0.61%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/573?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/573?src=pr&el=footer). Last update [ab882dc...875868c](https://codecov.io/gh/hyperledger/iroha/pull/573?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-24 09:34:04,2017-09-24 12:18:07
https://api.github.com/repos/hyperledger/iroha/issues/573,https://api.github.com/repos/hyperledger/iroha/issues/comments/331706242,https://github.com/hyperledger/iroha/pull/573#issuecomment-331706242,sorabot,"SonarQube analysis reported 1 issue

Note: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:

1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-09-24 12:17:42,2017-09-24 12:17:42
https://api.github.com/repos/hyperledger/iroha/issues/572,https://api.github.com/repos/hyperledger/iroha/issues/comments/331125412,https://github.com/hyperledger/iroha/pull/572#issuecomment-331125412,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=h1) Report
> Merging [#572](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/d272f6481a24bb6774b450d4c38b1f17292b4b53?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `78.21%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/572/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #572      +/-   ##
===========================================
- Coverage    80.18%   80.17%   -0.02%     
===========================================
  Files          310      313       +3     
  Lines        12270    12302      +32     
===========================================
+ Hits          9839     9863      +24     
- Misses        2431     2439       +8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ordering/impl/ordering\_gate\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV9pbXBsLmhwcA==) | `0% <ø> (-100%)` | :arrow_down: |
| [irohad/main/impl/ordering\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `0% <0%> (ø)` | :arrow_up: |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.hpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5ocHA=) | `0% <0%> (ø)` | |
| [...ule/irohad/ordering/ordering\_gate\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfc2VydmljZV90ZXN0LmNwcA==) | `100% <100%> (ø)` | :arrow_up: |
| [test/module/irohad/ordering/ordering\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfdGVzdC5jcHA=) | `100% <100%> (ø)` | :arrow_up: |
| [irohad/ordering/impl/ordering\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV9pbXBsLmNwcA==) | `100% <100%> (ø)` | :arrow_up: |
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `98.24% <100%> (+0.03%)` | :arrow_up: |
| [...had/ordering/impl/ordering\_gate\_transport\_grpc.cpp](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnRfZ3JwYy5jcHA=) | `100% <100%> (ø)` | |
| ... and [6 more](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=footer). Last update [d272f64...daab9cb](https://codecov.io/gh/hyperledger/iroha/pull/572?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-21 11:07:48,2017-09-22 12:36:59
https://api.github.com/repos/hyperledger/iroha/issues/571,https://api.github.com/repos/hyperledger/iroha/issues/comments/331376541,https://github.com/hyperledger/iroha/pull/571#issuecomment-331376541,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=h1) Report
> Merging [#571](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/23a91e0aee9d649b8cac45fd06c85c7f1be101c5?src=pr&el=desc) will **decrease** coverage by `0.21%`.
> The diff coverage is `21.72%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/571/graphs/tree.svg?height=150&token=VEvywEmaef&src=pr&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #571      +/-   ##
===========================================
- Coverage    45.07%   44.85%   -0.22%     
===========================================
  Files          270      271       +1     
  Lines        11029    11198     +169     
  Branches      5781     5908     +127     
===========================================
+ Hits          4971     5023      +52     
- Misses         735      750      +15     
- Partials      5323     5425     +102
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2FjY291bnQuaHBw) | `91.66% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3N0b3JhZ2VfaW1wbC5ocHA=) | `85.71% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.hpp](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/ametsuchi/ametsuchi\_fixture.hpp](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS9hbWV0c3VjaGlfZml4dHVyZS5ocHA=) | `36.36% <100%> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/test\_storage\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Rlc3Rfc3RvcmFnZV9pbXBsLmNwcA==) | `27.65% <100%> (ø)` | :arrow_up: |
| [...module/irohad/ametsuchi/wsv\_query\_command\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnlfY29tbWFuZF90ZXN0LmNwcA==) | `15.21% <15.21%> (ø)` | |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.cpp](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5jcHA=) | `28.05% <19.67%> (+2.05%)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_command.cpp](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9jb21tYW5kLmNwcA==) | `32.22% <28.08%> (+8.98%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=footer). Last update [23a91e0...378b570](https://codecov.io/gh/hyperledger/iroha/pull/571?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-22 07:48:34,2017-09-29 09:28:49
https://api.github.com/repos/hyperledger/iroha/issues/571,https://api.github.com/repos/hyperledger/iroha/issues/comments/333078560,https://github.com/hyperledger/iroha/pull/571#issuecomment-333078560,sorabot,"SonarQube analysis reported 31 issues
* ![MAJOR][MAJOR] 2 major
* ![MINOR][MINOR] 6 minor
* ![INFO][INFO] 23 info

#### Top 10 issues

1. ![MAJOR][MAJOR] [storage_impl.hpp#L78](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/irohad/ametsuchi/impl/storage_impl.hpp#L78): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MAJOR][MAJOR] [test_storage_impl.cpp#L47](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/irohad/ametsuchi/impl/test_storage_impl.cpp#L47): parameter list has 8 parameters, which is greater than the 5 authorized. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ATooManyParameters)
1. ![MINOR][MINOR] [postgres_wsv_command.cpp#L34](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/irohad/ametsuchi/impl/postgres_wsv_command.cpp#L34): Define a constant instead of duplicating this literal false 16 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L66](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L66): Define a constant instead of duplicating this literal ""role_id"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [postgres_wsv_query.cpp#L151](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/irohad/ametsuchi/impl/postgres_wsv_query.cpp#L151): Define a constant instead of duplicating this literal ""public_key"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [account.hpp#L4](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/irohad/model/account.hpp#L4): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [account.hpp#L31](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/irohad/model/account.hpp#L31): Define a constant instead of duplicating this literal false 10 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [wsv_query_command_test.cpp#L208](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/test/module/irohad/ametsuchi/wsv_query_command_test.cpp#L208): Variable 'permittee_account' is assigned in constructor body. Consider performing initialization in initialization list. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AuseInitializationList)
1. ![INFO][INFO] [postgres_wsv_command.hpp#L29](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L29): Undocumented API: PostgresWsvCommand [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)
1. ![INFO][INFO] [postgres_wsv_command.hpp#L31](https://github.com/hyperledger/iroha/blob/378b5700501a9ca925c19a987860014d3c464455/irohad/ametsuchi/impl/postgres_wsv_command.hpp#L31): Undocumented API: PostgresWsvCommand [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AUndocumentedApi)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-09-29 09:28:13,2017-09-29 09:28:13
https://api.github.com/repos/hyperledger/iroha/issues/570,https://api.github.com/repos/hyperledger/iroha/issues/comments/337510763,https://github.com/hyperledger/iroha/issues/570#issuecomment-337510763,Warchant,outdated,2017-10-18 08:53:37,2017-10-18 08:53:37
https://api.github.com/repos/hyperledger/iroha/issues/569,https://api.github.com/repos/hyperledger/iroha/issues/comments/330983282,https://github.com/hyperledger/iroha/pull/569#issuecomment-330983282,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=h1) Report
> Merging [#569](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/52fa7d38b9fff49291f134bce18c11fea39c6ca5?src=pr&el=desc) will **decrease** coverage by `32.63%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/569/graphs/tree.svg?width=650&height=150&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##           develop     #569       +/-   ##
============================================
- Coverage    80.17%   47.53%   -32.64%     
============================================
  Files          313      261       -52     
  Lines        12302    10203     -2099     
  Branches         0     5111     +5111     
============================================
- Hits          9863     4850     -5013     
+ Misses        2439      713     -1726     
- Partials         0     4640     +4640
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ametsuchi/impl/test\_storage\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Rlc3Rfc3RvcmFnZV9pbXBsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [...had/consensus/yac/storage/yac\_proposal\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfcHJvcG9zYWxfc3RvcmFnZS5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/synchronizer/impl/synchronizer\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-aXJvaGFkL3N5bmNocm9uaXplci9pbXBsL3N5bmNocm9uaXplcl9pbXBsLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/model/queries/get\_account\_assets.hpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvZ2V0X2FjY291bnRfYXNzZXRzLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [test/module/vendor/tbb\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvdmVuZG9yL3RiYl90ZXN0LmNwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/model/queries/responses/error\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcmVzcG9uc2VzL2Vycm9yX3Jlc3BvbnNlLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/consensus/yac/storage/yac\_vote\_storage.hpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvc3RvcmFnZS95YWNfdm90ZV9zdG9yYWdlLmhwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/network/impl/block\_loader\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvaW1wbC9ibG9ja19sb2FkZXJfc2VydmljZS5ocHA=) | `0% <0%> (-100%)` | :arrow_down: |
| [...egration/pipeline/tx\_pipeline\_integration\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9waXBlbGluZS90eF9waXBlbGluZV9pbnRlZ3JhdGlvbl90ZXN0LmNwcA==) | `0% <0%> (-100%)` | :arrow_down: |
| [irohad/consensus/yac/impl/network\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC9uZXR3b3JrX2ltcGwuaHBw) | `0% <0%> (-100%)` | :arrow_down: |
| ... and [278 more](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=footer). Last update [52fa7d3...7861e1e](https://codecov.io/gh/hyperledger/iroha/pull/569?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-20 21:15:29,2017-09-22 13:52:53
https://api.github.com/repos/hyperledger/iroha/issues/569,https://api.github.com/repos/hyperledger/iroha/issues/comments/331218527,https://github.com/hyperledger/iroha/pull/569#issuecomment-331218527,sorabot,"SonarQube analysis reported 1 issue

Note: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:

1. ![MINOR][MINOR] hyperledger:iroha: Cppcheck cannot find all the include files (use --check-config for details) [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AmissingInclude)

[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-09-21 16:59:14,2017-09-21 16:59:14
https://api.github.com/repos/hyperledger/iroha/issues/568,https://api.github.com/repos/hyperledger/iroha/issues/comments/330882761,https://github.com/hyperledger/iroha/pull/568#issuecomment-330882761,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=h1) Report
> Merging [#568](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/96d439ffd8e7f11a6912437fee6fab217f7e3267?src=pr&el=desc) will **increase** coverage by `0.95%`.
> The diff coverage is `29.68%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/568/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #568      +/-   ##
===========================================
+ Coverage    45.11%   46.07%   +0.95%     
===========================================
  Files          274      262      -12     
  Lines        11142    10375     -767     
  Branches      5828     5364     -464     
===========================================
- Hits          5027     4780     -247     
+ Misses         746      666      -80     
+ Partials      5369     4929     -440
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/commands/add\_peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2FkZF9wZWVyLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [...rohad/model/converters/pb\_query\_responses\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfcmVzcG9uc2VzX3Rlc3QuY3Bw) | `17.39% <ø> (+0.37%)` | :arrow_up: |
| [irohad/model/block.hpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2Jsb2NrLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/transaction.hpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3RyYW5zYWN0aW9uLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/model\_crypto\_provider\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL21vZGVsX2NyeXB0b19wcm92aWRlcl9pbXBsLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3BlZXIuaHBw) | `77.77% <ø> (ø)` | :arrow_up: |
| [test/integration/client\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-dGVzdC9pbnRlZ3JhdGlvbi9jbGllbnRfdGVzdC5jcHA=) | `12.6% <ø> (-0.62%)` | :arrow_down: |
| [...odel/converters/impl/pb\_query\_response\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9yZXNwb25zZV9mYWN0b3J5LmNwcA==) | `57.24% <ø> (+8.31%)` | :arrow_up: |
| [...ule/irohad/model/command\_validate\_execute\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbW1hbmRfdmFsaWRhdGVfZXhlY3V0ZV90ZXN0LmNwcA==) | `28.76% <ø> (-1.22%)` | :arrow_down: |
| ... and [101 more](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=footer). Last update [96d439f...d4ee098](https://codecov.io/gh/hyperledger/iroha/pull/568?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-20 15:09:55,2017-09-27 09:00:37
https://api.github.com/repos/hyperledger/iroha/issues/567,https://api.github.com/repos/hyperledger/iroha/issues/comments/337510840,https://github.com/hyperledger/iroha/issues/567#issuecomment-337510840,Warchant,outdated,2017-10-18 08:53:50,2017-10-18 08:53:50
https://api.github.com/repos/hyperledger/iroha/issues/566,https://api.github.com/repos/hyperledger/iroha/issues/comments/330537999,https://github.com/hyperledger/iroha/pull/566#issuecomment-330537999,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/566?src=pr&el=h1) Report
> Merging [#566](https://codecov.io/gh/hyperledger/iroha/pull/566?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/7a5fd9d6294087aacb670d8bb3dc3c54a6fba95c?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/566/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/566?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           develop    #566   +/-   ##
=======================================
  Coverage     80.2%   80.2%           
=======================================
  Files          310     310           
  Lines        12276   12276           
=======================================
  Hits          9846    9846           
  Misses        2430    2430
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/566?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/566?src=pr&el=footer). Last update [7a5fd9d...b77b20f](https://codecov.io/gh/hyperledger/iroha/pull/566?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-19 13:25:19,2017-09-19 13:25:19
https://api.github.com/repos/hyperledger/iroha/issues/565,https://api.github.com/repos/hyperledger/iroha/issues/comments/330138392,https://github.com/hyperledger/iroha/pull/565#issuecomment-330138392,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=h1) Report
> Merging [#565](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/19bf9927efb07006ded186f11127d16a87ddc288?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/565/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #565      +/-   ##
===========================================
- Coverage    80.19%   80.18%   -0.02%     
===========================================
  Files          310      310              
  Lines        12277    12270       -7     
===========================================
- Hits          9846     9839       -7     
  Misses        2431     2431
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/consensus/yac/impl/yac\_gate\_impl.hpp](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/json\_common.hpp](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tb24uaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [test/framework/test\_subscriber.hpp](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=tree#diff-dGVzdC9mcmFtZXdvcmsvdGVzdF9zdWJzY3JpYmVyLmhwcA==) | `87.75% <ø> (ø)` | :arrow_up: |
| [irohad/consensus/yac/impl/yac\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=tree#diff-aXJvaGFkL2NvbnNlbnN1cy95YWMvaW1wbC95YWNfZ2F0ZV9pbXBsLmNwcA==) | `90.16% <100%> (-0.16%)` | :arrow_down: |
| [libs/datetime/time.hpp](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=tree#diff-bGlicy9kYXRldGltZS90aW1lLmhwcA==) | `100% <100%> (ø)` | :arrow_up: |
| [irohad/model/converters/impl/json\_common.cpp](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2NvbW1vbi5jcHA=) | `95% <100%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=footer). Last update [19bf992...9db884c](https://codecov.io/gh/hyperledger/iroha/pull/565?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-18 06:36:03,2017-09-20 08:25:15
https://api.github.com/repos/hyperledger/iroha/issues/565,https://api.github.com/repos/hyperledger/iroha/issues/comments/330155840,https://github.com/hyperledger/iroha/pull/565#issuecomment-330155840,l4l,Fixes build on archlinux :+1: ,2017-09-18 08:23:56,2017-09-18 08:23:56
https://api.github.com/repos/hyperledger/iroha/issues/565,https://api.github.com/repos/hyperledger/iroha/issues/comments/330160489,https://github.com/hyperledger/iroha/pull/565#issuecomment-330160489,neewy,Also fixes protobuf 3.4.0 compatibility issues 👍 ,2017-09-18 08:47:20,2017-09-18 08:47:20
https://api.github.com/repos/hyperledger/iroha/issues/565,https://api.github.com/repos/hyperledger/iroha/issues/comments/330165016,https://github.com/hyperledger/iroha/pull/565#issuecomment-330165016,grimadas,"Also add that protobuf, grpc  are downloaded by default",2017-09-18 09:08:59,2017-09-18 09:08:59
https://api.github.com/repos/hyperledger/iroha/issues/564,https://api.github.com/repos/hyperledger/iroha/issues/comments/329582221,https://github.com/hyperledger/iroha/pull/564#issuecomment-329582221,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/564?src=pr&el=h1) Report
> Merging [#564](https://codecov.io/gh/hyperledger/iroha/pull/564?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/a42cad0d00396e205a61e7e135497071a8f91129?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/564/graphs/tree.svg?src=pr&token=VEvywEmaef&height=150&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/564?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #564   +/-   ##
========================================
  Coverage    80.17%   80.17%           
========================================
  Files          307      307           
  Lines        12177    12177           
========================================
  Hits          9763     9763           
  Misses        2414     2414
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/564?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/564?src=pr&el=footer). Last update [a42cad0...07cb823](https://codecov.io/gh/hyperledger/iroha/pull/564?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-14 19:17:24,2017-09-14 21:10:56
https://api.github.com/repos/hyperledger/iroha/issues/563,https://api.github.com/repos/hyperledger/iroha/issues/comments/330067479,https://github.com/hyperledger/iroha/pull/563#issuecomment-330067479,l4l,Rebase plz,2017-09-17 18:20:30,2017-09-17 18:20:30
https://api.github.com/repos/hyperledger/iroha/issues/563,https://api.github.com/repos/hyperledger/iroha/issues/comments/330136515,https://github.com/hyperledger/iroha/pull/563#issuecomment-330136515,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=h1) Report
> Merging [#563](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/898eae1b402b164e421fdc481d99cf750310c05b?src=pr&el=desc) will **decrease** coverage by `1.03%`.
> The diff coverage is `31.12%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/563/graphs/tree.svg?src=pr&width=650&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #563      +/-   ##
===========================================
- Coverage     46.1%   45.07%   -1.04%     
===========================================
  Files          265      274       +9     
  Lines        10480    11153     +673     
  Branches      5414     5839     +425     
===========================================
+ Hits          4832     5027     +195     
- Misses         676      746      +70     
- Partials      4972     5380     +408
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/model/queries/responses/error\_response.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL3F1ZXJpZXMvcmVzcG9uc2VzL2Vycm9yX3Jlc3BvbnNlLmhwcA==) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/create\_domain.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9kb21haW4uaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS93c3ZfcXVlcnkuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/generators/query\_generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvcXVlcnlfZ2VuZXJhdG9yLmhwcA==) | `100% <ø> (ø)` | |
| [irohad/model/commands/create\_asset.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9hc3NldC5ocHA=) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/add\_peer.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2FkZF9wZWVyLmhwcA==) | `50% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/impl/postgres\_wsv\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9pbXBsL3Bvc3RncmVzX3dzdl9xdWVyeS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/commands/add\_asset\_quantity.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2FkZF9hc3NldF9xdWFudGl0eS5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/pb\_query\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfcXVlcnlfZmFjdG9yeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/model/converters/json\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kX2ZhY3RvcnkuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| ... and [62 more](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=footer). Last update [898eae1...876a690](https://codecov.io/gh/hyperledger/iroha/pull/563?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-18 06:19:02,2017-09-25 15:24:34
https://api.github.com/repos/hyperledger/iroha/issues/563,https://api.github.com/repos/hyperledger/iroha/issues/comments/331109335,https://github.com/hyperledger/iroha/pull/563#issuecomment-331109335,l4l,Add plz a checklist with (not) written tests for this commands,2017-09-21 09:52:52,2017-09-21 09:52:52
https://api.github.com/repos/hyperledger/iroha/issues/562,https://api.github.com/repos/hyperledger/iroha/issues/comments/330070333,https://github.com/hyperledger/iroha/pull/562#issuecomment-330070333,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=h1) Report
> Merging [#562](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/ec67da882ee8e2e250c15fd0602a7330ca85bd3f?src=pr&el=desc) will **decrease** coverage by `0.03%`.
> The diff coverage is `76.14%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/562/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #562      +/-   ##
===========================================
- Coverage    80.27%   80.23%   -0.04%     
===========================================
  Files          302      305       +3     
  Lines        12096    12205     +109     
===========================================
+ Hits          9710     9793      +83     
- Misses        2386     2412      +26
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [test/module/libs/amount/amount\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvbGlicy9hbW91bnQvYW1vdW50X3Rlc3QuY3Bw) | `100% <100%> (ø)` | |
| [libs/amount/amount.cpp](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmNwcA==) | `69.01% <69.01%> (ø)` | |
| [libs/amount/amount.hpp](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=tree#diff-bGlicy9hbW91bnQvYW1vdW50LmhwcA==) | `69.23% <69.23%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=footer). Last update [ec67da8...283fd29](https://codecov.io/gh/hyperledger/iroha/pull/562?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-17 18:45:57,2017-09-17 18:45:57
https://api.github.com/repos/hyperledger/iroha/issues/561,https://api.github.com/repos/hyperledger/iroha/issues/comments/329457297,https://github.com/hyperledger/iroha/pull/561#issuecomment-329457297,Warchant,Consider using `Ansible` for deploy automation.,2017-09-14 11:45:03,2017-09-14 11:45:03
https://api.github.com/repos/hyperledger/iroha/issues/560,https://api.github.com/repos/hyperledger/iroha/issues/comments/328914596,https://github.com/hyperledger/iroha/pull/560#issuecomment-328914596,tkyonezu,May be this pull request is better for develop branch.,2017-09-12 16:50:59,2017-09-12 16:50:59
https://api.github.com/repos/hyperledger/iroha/issues/560,https://api.github.com/repos/hyperledger/iroha/issues/comments/330557724,https://github.com/hyperledger/iroha/pull/560#issuecomment-330557724,neewy,"Thank you for your contribution, Yonezu-san.
Please, can you correct hardcoded values in Makefile?",2017-09-19 14:28:35,2017-09-19 14:28:35
https://api.github.com/repos/hyperledger/iroha/issues/560,https://api.github.com/repos/hyperledger/iroha/issues/comments/331633159,https://github.com/hyperledger/iroha/pull/560#issuecomment-331633159,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=h1) Report
> Merging [#560](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/db579d376beaa5f38e637bf2b15bde4d905d248f?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/560/graphs/tree.svg?src=pr&height=150&token=VEvywEmaef&width=650)](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #560      +/-   ##
===========================================
+ Coverage    80.17%   80.18%   +0.01%     
===========================================
  Files          313      310       -3     
  Lines        12302    12270      -32     
===========================================
- Hits          9863     9839      -24     
+ Misses        2439     2431       -8
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/ordering/impl/ordering\_service\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfc2VydmljZV9pbXBsLmNwcA==) | `98.21% <0%> (-0.04%)` | :arrow_down: |
| [...ule/irohad/ordering/ordering\_gate\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfc2VydmljZV90ZXN0LmNwcA==) | `100% <0%> (ø)` | :arrow_up: |
| [...t/module/irohad/ordering/ordering\_service\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX3NlcnZpY2VfdGVzdC5jcHA=) | `100% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/ordering/ordering\_gate\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX2dhdGVfdGVzdC5jcHA=) | `100% <0%> (ø)` | :arrow_up: |
| [irohad/ordering/impl/ordering\_gate\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-aXJvaGFkL29yZGVyaW5nL2ltcGwvb3JkZXJpbmdfZ2F0ZV9pbXBsLmNwcA==) | `100% <0%> (ø)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.hpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmhwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [irohad/main/application.cpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-aXJvaGFkL21haW4vYXBwbGljYXRpb24uY3Bw) | `0% <0%> (ø)` | :arrow_up: |
| [irohad/main/impl/ordering\_init.cpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-aXJvaGFkL21haW4vaW1wbC9vcmRlcmluZ19pbml0LmNwcA==) | `0% <0%> (ø)` | :arrow_up: |
| [test/module/irohad/ordering/ordering\_mocks.hpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL29yZGVyaW5nL29yZGVyaW5nX21vY2tzLmhwcA==) | `100% <0%> (ø)` | :arrow_up: |
| [irohad/network/ordering\_gate\_transport.hpp](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree#diff-aXJvaGFkL25ldHdvcmsvb3JkZXJpbmdfZ2F0ZV90cmFuc3BvcnQuaHBw) | | |
| ... and [3 more](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=footer). Last update [db579d3...2222c40](https://codecov.io/gh/hyperledger/iroha/pull/560?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-23 13:02:15,2017-09-24 11:29:55
https://api.github.com/repos/hyperledger/iroha/issues/560,https://api.github.com/repos/hyperledger/iroha/issues/comments/340066251,https://github.com/hyperledger/iroha/pull/560#issuecomment-340066251,neewy,"@tkyonezu there is no activity for 20 days, regarding the suggested changes of reviewer (@Warchant). According to Iroha working agreement 4.10.4 https://github.com/hyperledger/iroha/wiki/Iroha-working-agreement the person, who opened pull request should clarify whether review fixes will be implemented or not in period of 24 hours.",2017-10-27 19:37:58,2017-10-27 19:37:58
https://api.github.com/repos/hyperledger/iroha/issues/560,https://api.github.com/repos/hyperledger/iroha/issues/comments/340360180,https://github.com/hyperledger/iroha/pull/560#issuecomment-340360180,tkyonezu,"@neewy I already closed this PR and this is superseeded by PR #605, as I said to you before. 
And I've rewite IP address to hostname on PR #605.  Thank you for your comment.",2017-10-30 07:07:38,2017-10-30 07:07:38
https://api.github.com/repos/hyperledger/iroha/issues/559,https://api.github.com/repos/hyperledger/iroha/issues/comments/328910075,https://github.com/hyperledger/iroha/pull/559#issuecomment-328910075,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/559?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@71e1bc9`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/559/graphs/tree.svg?height=150&width=650&src=pr&token=VEvywEmaef)](https://codecov.io/gh/hyperledger/iroha/pull/559?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #559   +/-   ##
==========================================
  Coverage           ?   82.07%           
==========================================
  Files              ?      303           
  Lines              ?    12158           
  Branches           ?        0           
==========================================
  Hits               ?     9979           
  Misses             ?     2179           
  Partials           ?        0
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/559?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/559?src=pr&el=footer). Last update [71e1bc9...d46f47d](https://codecov.io/gh/hyperledger/iroha/pull/559?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-12 16:36:06,2017-09-13 02:12:21
https://api.github.com/repos/hyperledger/iroha/issues/558,https://api.github.com/repos/hyperledger/iroha/issues/comments/329888411,https://github.com/hyperledger/iroha/issues/558#issuecomment-329888411,l4l,"We are actually using ctest, so you can use it instead
```
mkdir build && cd build
cmake .. && make # building
ctest . # running tests
```

But agree about the docs, thanks!",2017-09-15 20:04:35,2017-09-15 20:04:35
https://api.github.com/repos/hyperledger/iroha/issues/558,https://api.github.com/repos/hyperledger/iroha/issues/comments/330556828,https://github.com/hyperledger/iroha/issues/558#issuecomment-330556828,neewy,"Thank you for being interested in Iroha project. It is a real need for us to keep level of documentation that may easily explain to newcomers how to accomplish basic things: building, testing project, etc.

We are going to start weekly meetings with developers since this sprint, so that we can talk directly about issues community members are having. It would be nice if you participate. 

For now, I will copy this snippet to GitHub pare here: https://github.com/hyperledger/iroha/wiki/How-to-test-Iroha ",2017-09-19 14:25:28,2017-09-19 14:25:28
https://api.github.com/repos/hyperledger/iroha/issues/558,https://api.github.com/repos/hyperledger/iroha/issues/comments/332225703,https://github.com/hyperledger/iroha/issues/558#issuecomment-332225703,neewy,@sudheesh001 https://hyperledger.github.io/iroha-api/ ,2017-09-26 14:55:43,2017-09-26 14:55:43
https://api.github.com/repos/hyperledger/iroha/issues/557,https://api.github.com/repos/hyperledger/iroha/issues/comments/328746875,https://github.com/hyperledger/iroha/pull/557#issuecomment-328746875,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=557) <br/>All committers have signed the CLA.,2017-09-12 06:04:36,2017-09-12 06:05:24
https://api.github.com/repos/hyperledger/iroha/issues/557,https://api.github.com/repos/hyperledger/iroha/issues/comments/328889460,https://github.com/hyperledger/iroha/pull/557#issuecomment-328889460,neewy,"Thank you for your contribution! @sudheesh001, can you please change target branch to develop?",2017-09-12 15:30:32,2017-09-12 15:30:32
https://api.github.com/repos/hyperledger/iroha/issues/557,https://api.github.com/repos/hyperledger/iroha/issues/comments/328906732,https://github.com/hyperledger/iroha/pull/557#issuecomment-328906732,sudheesh001,@neewy Just changed it 👍 ,2017-09-12 16:25:21,2017-09-12 16:25:21
https://api.github.com/repos/hyperledger/iroha/issues/557,https://api.github.com/repos/hyperledger/iroha/issues/comments/329130298,https://github.com/hyperledger/iroha/pull/557#issuecomment-329130298,l4l,"cmake is intended to make out-of-source builds, the point of that pr is not really clear for me",2017-09-13 10:45:30,2017-09-13 10:45:30
https://api.github.com/repos/hyperledger/iroha/issues/557,https://api.github.com/repos/hyperledger/iroha/issues/comments/329136368,https://github.com/hyperledger/iroha/pull/557#issuecomment-329136368,Warchant,"@l4l  it is useful when you don't do `mkdir build`, and do `cmake .` directly in source folder.",2017-09-13 11:15:13,2017-09-13 11:15:13
https://api.github.com/repos/hyperledger/iroha/issues/557,https://api.github.com/repos/hyperledger/iroha/issues/comments/330558054,https://github.com/hyperledger/iroha/pull/557#issuecomment-330558054,neewy,@lebdron is kindly requested to rebase this PR 😄 ,2017-09-19 14:29:36,2017-09-19 14:29:36
https://api.github.com/repos/hyperledger/iroha/issues/556,https://api.github.com/repos/hyperledger/iroha/issues/comments/328005023,https://github.com/hyperledger/iroha/issues/556#issuecomment-328005023,neewy,"Hi! Thank you for your interest in the project.
It seems we are having issues with building Iroha using new version of protobuf (3.4.0).
We are going to fix that soon, but before that please use older version (protobuf 3.3.0):
```
git clone https://github.com/google/protobuf /tmp/protobuf-3.3.0; \
    (cd /tmp/protobuf-3.3.0 ; git checkout a6189acd18b00611c1dc7042299ad75486f08a1a); \
    (cd /tmp/protobuf-3.3.0/ ; /tmp/protobuf-3.3.0/autogen.sh); \
    (cd /tmp/protobuf-3.3.0/ ; /tmp/protobuf-3.3.0/configure); \
    make -C /tmp/protobuf-3.3.0; \
    make -C /tmp/protobuf-3.3.0 install; \
    ldconfig; \
    rm -rf /tmp/protobuf-3.3.0
```
Report if you are having problems with that please",2017-09-08 05:46:37,2017-09-08 05:46:37
https://api.github.com/repos/hyperledger/iroha/issues/556,https://api.github.com/repos/hyperledger/iroha/issues/comments/328044766,https://github.com/hyperledger/iroha/issues/556#issuecomment-328044766,sudheesh001,"I removed the `libprotoc 3.4.0` and rebuilt and installed `libprotoc 3.3.0`
However, I receive the same error.

```make
Scanning dependencies of target irohad
[ 65%] Building CXX object irohad/main/CMakeFiles/irohad.dir/irohad.o
[ 65%] Linking CXX executable ../../bin/irohad
../consensus/yac/libyac.a(network_impl.o): In function `iroha::network::AsyncGrpcClient<google::protobuf::Empty>::AsyncClientCall::AsyncClientCall()':
~/iroha/irohad/network/impl/async_grpc_client.hpp:63: undefined reference to `google::protobuf::Empty::Empty()'
~/iroha/irohad/network/impl/async_grpc_client.hpp:63: undefined reference to `google::protobuf::Empty::~Empty()'
../consensus/yac/libyac.a(network_impl.o): In function `iroha::network::AsyncGrpcClient<google::protobuf::Empty>::AsyncClientCall::~AsyncClientCall()':
~/iroha/irohad/network/impl/async_grpc_client.hpp:63: undefined reference to `google::protobuf::Empty::~Empty()'
../../schema/libendpoint.a(endpoint.pb.o): In function `iroha::protocol::protobuf_endpoint_2eproto::TableStruct::InitDefaultsImpl()':
~/iroha/schema/endpoint.pb.cc:113: undefined reference to `google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults()'
../../schema/libendpoint.a(endpoint.pb.o): In function `iroha::protocol::protobuf_endpoint_2eproto::AddDescriptorsImpl()':
~/iroha/schema/endpoint.pb.cc:153: undefined reference to `google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors()'
../../schema/libendpoint.a(endpoint.grpc.pb.o): In function `grpc::RpcMethodHandler<iroha::protocol::GenesisBlockService::Service, iroha::protocol::Block, google::protobuf::Empty>::RunHandler(grpc::MethodHandler::HandlerParameter const&)':
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
../../schema/libyacproto_h.a(yac.pb.o): In function `iroha::consensus::yac::proto::protobuf_yac_2eproto::TableStruct::InitDefaultsImpl()':
~/iroha/schema/yac.pb.cc:154: undefined reference to `google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults()'
../../schema/libyacproto_h.a(yac.pb.o): In function `iroha::consensus::yac::proto::protobuf_yac_2eproto::AddDescriptorsImpl()':
~/iroha/schema/yac.pb.cc:194: undefined reference to `google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors()'
../../schema/libyacproto_h.a(yac.grpc.pb.o): In function `grpc::RpcMethodHandler<iroha::consensus::yac::proto::Yac::Service, iroha::consensus::yac::proto::Reject, google::protobuf::Empty>::RunHandler(grpc::MethodHandler::HandlerParameter const&)':
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
../../schema/libyacproto_h.a(yac.grpc.pb.o): In function `grpc::RpcMethodHandler<iroha::consensus::yac::proto::Yac::Service, iroha::consensus::yac::proto::Commit, google::protobuf::Empty>::RunHandler(grpc::MethodHandler::HandlerParameter const&)':
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
../../schema/libyacproto_h.a(yac.grpc.pb.o): In function `grpc::RpcMethodHandler<iroha::consensus::yac::proto::Yac::Service, iroha::consensus::yac::proto::Vote, google::protobuf::Empty>::RunHandler(grpc::MethodHandler::HandlerParameter const&)':
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
../../schema/liborderingproto_h.a(ordering.pb.o): In function `iroha::ordering::proto::protobuf_ordering_2eproto::TableStruct::InitDefaultsImpl()':
~/iroha/schema/ordering.pb.cc:100: undefined reference to `google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults()'
../../schema/liborderingproto_h.a(ordering.pb.o): In function `iroha::ordering::proto::protobuf_ordering_2eproto::AddDescriptorsImpl()':
~/iroha/schema/ordering.pb.cc:126: undefined reference to `google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors()'
../../schema/liborderingproto_h.a(ordering.grpc.pb.o): In function `grpc::RpcMethodHandler<iroha::ordering::proto::OrderingService::Service, iroha::protocol::Transaction, google::protobuf::Empty>::RunHandler(grpc::MethodHandler::HandlerParameter const&)':
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
../../schema/liborderingproto_h.a(ordering.grpc.pb.o): In function `grpc::RpcMethodHandler<iroha::ordering::proto::OrderingGate::Service, iroha::ordering::proto::Proposal, google::protobuf::Empty>::RunHandler(grpc::MethodHandler::HandlerParameter const&)':
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
/usr/local/include/grpc++/impl/codegen/method_handler_impl.h:57: undefined reference to `google::protobuf::Empty::~Empty()'
collect2: error: ld returned 1 exit status
irohad/main/CMakeFiles/irohad.dir/build.make:142: recipe for target 'bin/irohad' failed
make[2]: *** [bin/irohad] Error 1
CMakeFiles/Makefile2:2059: recipe for target 'irohad/main/CMakeFiles/irohad.dir/all' failed
make[1]: *** [irohad/main/CMakeFiles/irohad.dir/all] Error 2
Makefile:94: recipe for target 'all' failed
make: *** [all] Error 2
```

Is there any other way to fix the build error.",2017-09-08 08:54:54,2017-09-08 08:54:54
https://api.github.com/repos/hyperledger/iroha/issues/556,https://api.github.com/repos/hyperledger/iroha/issues/comments/328423081,https://github.com/hyperledger/iroha/issues/556#issuecomment-328423081,sushantdm,Please confirm grpc was rebuilt for the new protobuf,2017-09-11 05:52:30,2017-09-11 05:52:30
https://api.github.com/repos/hyperledger/iroha/issues/556,https://api.github.com/repos/hyperledger/iroha/issues/comments/328426732,https://github.com/hyperledger/iroha/issues/556#issuecomment-328426732,sudheesh001,Yes I rebuilt `grpc` with the new protobuf and ran the iroha build again. Same error.,2017-09-11 06:13:47,2017-09-11 06:13:47
https://api.github.com/repos/hyperledger/iroha/issues/556,https://api.github.com/repos/hyperledger/iroha/issues/comments/328427179,https://github.com/hyperledger/iroha/issues/556#issuecomment-328427179,neewy,"Please, clean your build folder with this script https://github.com/hyperledger/iroha/blob/develop/clean.sh and try again. I need to know now it this problem remains with 3.3.0",2017-09-11 06:16:21,2017-09-11 06:16:21
https://api.github.com/repos/hyperledger/iroha/issues/556,https://api.github.com/repos/hyperledger/iroha/issues/comments/328430066,https://github.com/hyperledger/iroha/issues/556#issuecomment-328430066,sudheesh001,"Great, I ran the cleanup as mentioned with
```sh
rm schema/*.{cc,h}
rm -rf external
rm -rf build
```
I could successfully build `iroha`. Thank you! @neewy and @sushantdm ",2017-09-11 06:33:48,2017-09-11 06:33:48
https://api.github.com/repos/hyperledger/iroha/issues/556,https://api.github.com/repos/hyperledger/iroha/issues/comments/328431689,https://github.com/hyperledger/iroha/issues/556#issuecomment-328431689,neewy,You are welcome! We will change protobuf to 3.4.0 in future and announce this in our channels in prior,2017-09-11 06:42:13,2017-09-11 06:42:13
https://api.github.com/repos/hyperledger/iroha/issues/554,https://api.github.com/repos/hyperledger/iroha/issues/comments/327249010,https://github.com/hyperledger/iroha/pull/554#issuecomment-327249010,neewy,Removed codacy warnings,2017-09-05 17:34:05,2017-09-05 17:34:05
https://api.github.com/repos/hyperledger/iroha/issues/553,https://api.github.com/repos/hyperledger/iroha/issues/comments/327141460,https://github.com/hyperledger/iroha/pull/553#issuecomment-327141460,neewy,Thanks! Will review this ASAP,2017-09-05 10:53:47,2017-09-05 10:53:47
https://api.github.com/repos/hyperledger/iroha/issues/553,https://api.github.com/repos/hyperledger/iroha/issues/comments/327526077,https://github.com/hyperledger/iroha/pull/553#issuecomment-327526077,lebdron,Merged: https://github.com/hyperledger/iroha/commit/28c9228669b1d0b81a66cbbcfab5516982942b1d,2017-09-06 15:44:33,2017-09-06 15:44:33
https://api.github.com/repos/hyperledger/iroha/issues/552,https://api.github.com/repos/hyperledger/iroha/issues/comments/328785698,https://github.com/hyperledger/iroha/pull/552#issuecomment-328785698,neewy,"@muratovv is pending to review PR, we need @Warchant to check the code",2017-09-12 08:45:45,2017-09-12 08:45:45
https://api.github.com/repos/hyperledger/iroha/issues/550,https://api.github.com/repos/hyperledger/iroha/issues/comments/327005477,https://github.com/hyperledger/iroha/pull/550#issuecomment-327005477,muratovv,"No reason to start review before we are not discussing, how model will looks like. I guess better to provide draft of model interface and after it make changes in code. Short review demonstrate that code now very dirty: changes not obvious and come pieces looks horrible. Another problem is no reason to review 4+k loc changes, separate pr to atomic parts - new model, crypto, etc.",2017-09-04 17:25:30,2017-09-04 17:25:30
https://api.github.com/repos/hyperledger/iroha/issues/549,https://api.github.com/repos/hyperledger/iroha/issues/comments/327136559,https://github.com/hyperledger/iroha/pull/549#issuecomment-327136559,neewy,"Since it is valid only for develop branch, we won't update main page (README.md in master branch) until next release",2017-09-05 10:29:24,2017-09-05 10:29:24
https://api.github.com/repos/hyperledger/iroha/issues/544,https://api.github.com/repos/hyperledger/iroha/issues/comments/326295405,https://github.com/hyperledger/iroha/pull/544#issuecomment-326295405,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/544?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`develop@8e6582a`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/544/graphs/tree.svg?height=150&width=650&token=VEvywEmaef&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/544?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #544   +/-   ##
==========================================
  Coverage           ?   87.76%           
==========================================
  Files              ?      180           
  Lines              ?     3759           
  Branches           ?        0           
==========================================
  Hits               ?     3299           
  Misses             ?      460           
  Partials           ?        0
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/544?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/544?src=pr&el=footer). Last update [8e6582a...9bcfa2c](https://codecov.io/gh/hyperledger/iroha/pull/544?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-08-31 13:29:37,2017-09-05 16:33:21
https://api.github.com/repos/hyperledger/iroha/issues/544,https://api.github.com/repos/hyperledger/iroha/issues/comments/326301296,https://github.com/hyperledger/iroha/pull/544#issuecomment-326301296,lebdron,"https://codecov.io/gh/hyperledger/iroha/tree/561fb4d7f68c1ba527313036fab7c7f1893e3111/irohad/validation/impl
does not include stateful validator
https://github.com/hyperledger/iroha/tree/feature/codecov/irohad/validation/impl",2017-08-31 13:50:25,2017-08-31 13:50:25
https://api.github.com/repos/hyperledger/iroha/issues/544,https://api.github.com/repos/hyperledger/iroha/issues/comments/326726284,https://github.com/hyperledger/iroha/pull/544#issuecomment-326726284,neewy,@a-r-g-v https://codecov.io/gh/hyperledger/iroha/tree/9bcfa2c9403befb32c8a2e2507c1264265782fe0/irohad/validation/impl still some files are missed. Can you check lcov report so that we can understand where the problem is?,2017-09-02 06:41:16,2017-09-02 06:41:16
https://api.github.com/repos/hyperledger/iroha/issues/544,https://api.github.com/repos/hyperledger/iroha/issues/comments/329041189,https://github.com/hyperledger/iroha/pull/544#issuecomment-329041189,lebdron,https://github.com/hyperledger/iroha/pull/559,2017-09-13 02:43:31,2017-09-13 02:43:31
https://api.github.com/repos/hyperledger/iroha/issues/543,https://api.github.com/repos/hyperledger/iroha/issues/comments/326293243,https://github.com/hyperledger/iroha/pull/543#issuecomment-326293243,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/543?src=pr&el=h1) Report
> Merging [#543](https://codecov.io/gh/hyperledger/iroha/pull/543?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/1289c3d9fa502fcd28c0e8afd3f09ec192d6c6e9?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/543/graphs/tree.svg?width=650&src=pr&token=VEvywEmaef&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/543?src=pr&el=tree)

```diff
@@           Coverage Diff            @@
##           develop     #543   +/-   ##
========================================
  Coverage    43.17%   43.17%           
========================================
  Files          301      301           
  Lines        12267    12267           
  Branches      6785     6785           
========================================
  Hits          5296     5296           
  Misses         713      713           
  Partials      6258     6258
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/543?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/543?src=pr&el=footer). Last update [1289c3d...9c995a2](https://codecov.io/gh/hyperledger/iroha/pull/543?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-08-31 13:21:19,2017-11-07 08:48:33
https://api.github.com/repos/hyperledger/iroha/issues/543,https://api.github.com/repos/hyperledger/iroha/issues/comments/330151560,https://github.com/hyperledger/iroha/pull/543#issuecomment-330151560,neewy,"It was proposed to introduce mechanism of handling critical situations both in irohad, iroha-cli. Consider changing this PR after we will decide on that ",2017-09-18 08:00:16,2017-09-18 08:00:16
https://api.github.com/repos/hyperledger/iroha/issues/543,https://api.github.com/repos/hyperledger/iroha/issues/comments/342414301,https://github.com/hyperledger/iroha/pull/543#issuecomment-342414301,sorabot,"SonarQube analysis reported 11 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 8 minor
* ![INFO][INFO] 2 info

#### Top 10 issues

1. ![CRITICAL][CRITICAL] [main.cpp#L52](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L52): Make this IP ""0.0.0.0"" address configurable. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AHardcodedIp)
1. ![MINOR][MINOR] [main.cpp#L40](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L40): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L42](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L42): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L43](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L43): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L45](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L45): Define a constant instead of duplicating this literal false 5 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L46](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L46): Define a constant instead of duplicating this literal ""Name of the account"" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [main.cpp#L53](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L53): Extract this magic number '50051' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [main.cpp#L54](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L54): Remove this commented out code. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3ACommentedCode)
1. ![MINOR][MINOR] [main.cpp#L104](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L104): Define a constant instead of duplicating this literal ""Json has wrong format."" 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![INFO][INFO] [main.cpp#L1](https://github.com/hyperledger/iroha/blob/9c995a2b639347791ccd491a83657bf4387133a3/iroha-cli/main.cpp#L1): Add or update the header of this file. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AFileHeader)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",2017-11-07 08:47:54,2017-11-07 08:47:54
https://api.github.com/repos/hyperledger/iroha/issues/541,https://api.github.com/repos/hyperledger/iroha/issues/comments/325938734,https://github.com/hyperledger/iroha/pull/541#issuecomment-325938734,muratovv,Are u really want to merge it in master branch?,2017-08-30 09:38:10,2017-08-30 09:38:10
https://api.github.com/repos/hyperledger/iroha/issues/540,https://api.github.com/repos/hyperledger/iroha/issues/comments/325961737,https://github.com/hyperledger/iroha/pull/540#issuecomment-325961737,neewy,@muratovv should I also delete https://github.com/hyperledger/iroha/blob/86463eb8d5e5adffe55aac81d68d6385133cd181/irohad/model/account.hpp#L126?,2017-08-30 11:23:36,2017-08-30 11:23:36
https://api.github.com/repos/hyperledger/iroha/issues/540,https://api.github.com/repos/hyperledger/iroha/issues/comments/325971845,https://github.com/hyperledger/iroha/pull/540#issuecomment-325971845,neewy,"Consider using this code if needed, but I am stuck with master key wiping",2017-08-30 12:13:36,2017-08-30 12:13:36
https://api.github.com/repos/hyperledger/iroha/issues/540,https://api.github.com/repos/hyperledger/iroha/issues/comments/329092946,https://github.com/hyperledger/iroha/pull/540#issuecomment-329092946,neewy,"Made a mistake in changing status. Needs correction, I will change it a bit",2017-09-13 08:13:57,2017-09-13 08:13:57
https://api.github.com/repos/hyperledger/iroha/issues/540,https://api.github.com/repos/hyperledger/iroha/issues/comments/329106777,https://github.com/hyperledger/iroha/pull/540#issuecomment-329106777,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=h1) Report
> Merging [#540](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/9369761e7af478ed2b31bd48fce8876a8e0e772b?src=pr&el=desc) will **decrease** coverage by `0.24%`.
> The diff coverage is `88.88%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/540/graphs/tree.svg?width=650&token=VEvywEmaef&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #540      +/-   ##
===========================================
- Coverage    82.07%   81.83%   -0.25%     
===========================================
  Files          303      302       -1     
  Lines        12158    11964     -194     
===========================================
- Hits          9979     9791     -188     
+ Misses        2179     2173       -6
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...le/irohad/model/operators/model\_operators\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL29wZXJhdG9ycy9tb2RlbF9vcGVyYXRvcnNfdGVzdC5jcHA=) | `100% <ø> (ø)` | :arrow_up: |
| [...odel/converters/impl/pb\_query\_response\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9wYl9xdWVyeV9yZXNwb25zZV9mYWN0b3J5LmNwcA==) | `94.11% <ø> (-0.17%)` | :arrow_down: |
| [irohad/model/account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2FjY291bnQuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [...had/model/converters/impl/json\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2NvbW1hbmRfZmFjdG9yeS5jcHA=) | `99.21% <ø> (-0.06%)` | :arrow_down: |
| [irohad/model/converters/json\_command\_factory.hpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvanNvbl9jb21tYW5kX2ZhY3RvcnkuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [...t/module/irohad/model/converters/pb\_block\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfYmxvY2tfdGVzdC5jcHA=) | `100% <ø> (ø)` | :arrow_up: |
| [test/module/irohad/validation/query\_execution.cpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL3ZhbGlkYXRpb24vcXVlcnlfZXhlY3V0aW9uLmNwcA==) | `100% <ø> (ø)` | :arrow_up: |
| [...odule/irohad/model/converters/pb\_commands\_test.cpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-dGVzdC9tb2R1bGUvaXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvcGJfY29tbWFuZHNfdGVzdC5jcHA=) | `100% <ø> (ø)` | :arrow_up: |
| [.../model/execution/impl/command\_executor\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9pbXBsL2NvbW1hbmRfZXhlY3V0b3JfZmFjdG9yeS5jcHA=) | `96.29% <ø> (-0.26%)` | :arrow_down: |
| [irohad/model/execution/command\_executor.hpp](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2V4ZWN1dGlvbi9jb21tYW5kX2V4ZWN1dG9yLmhwcA==) | `100% <ø> (ø)` | :arrow_up: |
| ... and [14 more](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=footer). Last update [9369761...72a86e8](https://codecov.io/gh/hyperledger/iroha/pull/540?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-13 09:09:37,2017-09-13 09:09:37
https://api.github.com/repos/hyperledger/iroha/issues/537,https://api.github.com/repos/hyperledger/iroha/issues/comments/325893293,https://github.com/hyperledger/iroha/pull/537#issuecomment-325893293,neewy,"@lebdron @muratovv please, check review fixes ",2017-08-30 06:19:09,2017-08-30 06:19:09
https://api.github.com/repos/hyperledger/iroha/issues/536,https://api.github.com/repos/hyperledger/iroha/issues/comments/325890879,https://github.com/hyperledger/iroha/pull/536#issuecomment-325890879,neewy,"@cimadai thank you for your pull request. You've got failing tests, do you need help to pass them?",2017-08-30 06:04:08,2017-08-30 06:04:08
https://api.github.com/repos/hyperledger/iroha/issues/536,https://api.github.com/repos/hyperledger/iroha/issues/comments/325938531,https://github.com/hyperledger/iroha/pull/536#issuecomment-325938531,cimadai,"@neewy OK, I'm sorry. I'll check it.",2017-08-30 09:37:19,2017-08-30 09:37:19
https://api.github.com/repos/hyperledger/iroha/issues/536,https://api.github.com/repos/hyperledger/iroha/issues/comments/326054084,https://github.com/hyperledger/iroha/pull/536#issuecomment-326054084,cimadai,"@neewy I added some missing methods.
How can I run the circleci test?",2017-08-30 16:58:51,2017-08-30 16:58:51
https://api.github.com/repos/hyperledger/iroha/issues/536,https://api.github.com/repos/hyperledger/iroha/issues/comments/326737129,https://github.com/hyperledger/iroha/pull/536#issuecomment-326737129,neewy,"@cimadai unfortunately, I haven't figured out how to rerun CircleCI build. Maybe you can try doing that?

Anyway, your latest commit contains failed tests:

```
97% tests passed, 2 tests failed out of 60

Total Test time (real) =  22.20 sec

The following tests FAILED:
	 35 - command_validate_execute_test (Failed)
	 40 - static_map (Failed)

[  FAILED  ] RemoveSignatoryTest.ValidWhenCreatorHasPermissions
[  FAILED  ] AddSignatoryTest.ValidWhenCreatorHasPermissions
[  FAILED  ] AddSignatoryTest.ValidWhenSameAccount
[  FAILED  ] AddSignatoryTest.InvalidWhenNoKey
[  FAILED  ] AddSignatoryTest.InvalidWhenNoAccount
[  FAILED  ] AddSignatoryTest.InvalidWhenSameKey
[  FAILED  ] RemoveSignatoryTest.ValidWhenCreatorHasPermissions


[  FAILED  ] 1 test, listed below:
[  FAILED  ] HandlerTest.QueryRegistration
/opt/iroha/test/module/irohad/model/static_map.cpp:52: Failure
      Expected: 4
To be equal to: registry.query_handler.types().size()
      Which is: 5

```

Please, try to correct your code or tests, if this is needed. Also, can you split logic of signatory removal and GetAccountAssetTransactions query, please? So that we can merge them independently",2017-09-02 10:54:57,2017-09-02 10:57:54
https://api.github.com/repos/hyperledger/iroha/issues/536,https://api.github.com/repos/hyperledger/iroha/issues/comments/327140365,https://github.com/hyperledger/iroha/pull/536#issuecomment-327140365,cimadai,"@neewy @lebdron 
Re-created PR: https://github.com/hyperledger/iroha/pull/553 .",2017-09-05 10:48:17,2017-09-05 10:48:17
https://api.github.com/repos/hyperledger/iroha/issues/532,https://api.github.com/repos/hyperledger/iroha/issues/comments/325890452,https://github.com/hyperledger/iroha/pull/532#issuecomment-325890452,neewy,"@Warchant please, can you help with:
```
We need to add the CODECOV_TOKEN in CircleCI environment variable list.
The token can be obtained from the following. -> https://codecov.io/gh/hyperledger/iroha",2017-08-30 06:01:33,2017-08-30 06:02:04
https://api.github.com/repos/hyperledger/iroha/issues/529,https://api.github.com/repos/hyperledger/iroha/issues/comments/324888384,https://github.com/hyperledger/iroha/issues/529#issuecomment-324888384,Warchant,"UPD:  I reinstalled libuv and tried to reproduce bug, but seems it can not be reproduced in that way. ",2017-08-25 11:02:52,2017-08-25 11:02:52
https://api.github.com/repos/hyperledger/iroha/issues/525,https://api.github.com/repos/hyperledger/iroha/issues/comments/325187215,https://github.com/hyperledger/iroha/pull/525#issuecomment-325187215,cimadai,"Thank you. I added unit test.
https://github.com/hyperledger/iroha/pull/525/commits/8cea78b989351b2afce7cbc43abaf60eb98ab604#diff-0a1c32c54c6e21e4a383fcf97ed4d4fcR199",2017-08-27 09:26:36,2017-08-27 09:26:41
https://api.github.com/repos/hyperledger/iroha/issues/525,https://api.github.com/repos/hyperledger/iroha/issues/comments/325891092,https://github.com/hyperledger/iroha/pull/525#issuecomment-325891092,neewy,@cimadai thank you for your contribution. We will rebase&merge it ASAP,2017-08-30 06:05:35,2017-08-30 06:05:35
https://api.github.com/repos/hyperledger/iroha/issues/525,https://api.github.com/repos/hyperledger/iroha/issues/comments/327004359,https://github.com/hyperledger/iroha/pull/525#issuecomment-327004359,cimadai,"@neewy I fixed it and added some test.
please check it.",2017-09-04 17:15:12,2017-09-04 17:15:12
https://api.github.com/repos/hyperledger/iroha/issues/525,https://api.github.com/repos/hyperledger/iroha/issues/comments/327519375,https://github.com/hyperledger/iroha/pull/525#issuecomment-327519375,cimadai,@lebdron Thanks! Added it and some tests.,2017-09-06 15:24:02,2017-09-06 15:24:02
https://api.github.com/repos/hyperledger/iroha/issues/525,https://api.github.com/repos/hyperledger/iroha/issues/comments/327669007,https://github.com/hyperledger/iroha/pull/525#issuecomment-327669007,cimadai,fixed conflict.,2017-09-07 02:54:30,2017-09-07 02:54:30
https://api.github.com/repos/hyperledger/iroha/issues/525,https://api.github.com/repos/hyperledger/iroha/issues/comments/328025449,https://github.com/hyperledger/iroha/pull/525#issuecomment-328025449,lebdron,"@cimadai Is it possible to add it exactly to `RemoveSignatoryExecutor::isValid` method? Adding it to both `RemoveSignatoryExecutor::execute` and previous method seems redundant.
Also, is it possible to make many short simple test for each case instead of adding everything to `AddSignatoryTest`? That seems to be more readable.",2017-09-08 07:36:07,2017-09-08 07:36:07
https://api.github.com/repos/hyperledger/iroha/issues/525,https://api.github.com/repos/hyperledger/iroha/issues/comments/328758657,https://github.com/hyperledger/iroha/pull/525#issuecomment-328758657,neewy,"@cimadai Shimada-san, have you checked comment of @lebdron? What do you think about that?
",2017-09-12 07:00:31,2017-09-12 07:00:31
https://api.github.com/repos/hyperledger/iroha/issues/525,https://api.github.com/repos/hyperledger/iroha/issues/comments/328768823,https://github.com/hyperledger/iroha/pull/525#issuecomment-328768823,cimadai,"@lebdron @neewy OK, I'll change it.",2017-09-12 07:43:32,2017-09-12 07:43:32
https://api.github.com/repos/hyperledger/iroha/issues/525,https://api.github.com/repos/hyperledger/iroha/issues/comments/331630437,https://github.com/hyperledger/iroha/pull/525#issuecomment-331630437,neewy,"@cimadai Shimada-san, hi! Is there any progress on the suggestion of @lebdron ?",2017-09-23 12:21:26,2017-09-23 12:21:26
https://api.github.com/repos/hyperledger/iroha/issues/524,https://api.github.com/repos/hyperledger/iroha/issues/comments/329133380,https://github.com/hyperledger/iroha/pull/524#issuecomment-329133380,codecov-io,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=h1) Report
> Merging [#524](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=desc) into [develop](https://codecov.io/gh/hyperledger/iroha/commit/9369761e7af478ed2b31bd48fce8876a8e0e772b?src=pr&el=desc) will **decrease** coverage by `3.08%`.
> The diff coverage is `9.01%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/524/graphs/tree.svg?token=VEvywEmaef&width=650&height=150&src=pr)](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop     #524      +/-   ##
===========================================
- Coverage    82.07%   78.98%   -3.09%     
===========================================
  Files          303      314      +11     
  Lines        12158    12646     +488     
===========================================
+ Hits          9979     9989      +10     
- Misses        2179     2657     +478
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [irohad/torii/query\_service.hpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGFkL3RvcmlpL3F1ZXJ5X3NlcnZpY2UuaHBw) | `100% <ø> (ø)` | :arrow_up: |
| [irohad/validation/impl/stateful\_validator\_impl.cpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGFkL3ZhbGlkYXRpb24vaW1wbC9zdGF0ZWZ1bF92YWxpZGF0b3JfaW1wbC5jcHA=) | `0% <ø> (ø)` | :arrow_up: |
| [iroha-cli/impl/transaction\_response\_handler.cpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGEtY2xpL2ltcGwvdHJhbnNhY3Rpb25fcmVzcG9uc2VfaGFuZGxlci5jcHA=) | `0% <ø> (ø)` | :arrow_up: |
| [irohad/ametsuchi/block\_query.hpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGFkL2FtZXRzdWNoaS9ibG9ja19xdWVyeS5ocHA=) | `100% <ø> (ø)` | :arrow_up: |
| [iroha-cli/grpc\_response\_handler.hpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGEtY2xpL2dycGNfcmVzcG9uc2VfaGFuZGxlci5ocHA=) | `0% <ø> (ø)` | :arrow_up: |
| [...ad/model/generators/impl/transaction\_generator.cpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvaW1wbC90cmFuc2FjdGlvbl9nZW5lcmF0b3IuY3Bw) | `0% <0%> (ø)` | :arrow_up: |
| [iroha-cli/interactive/impl/interactive\_cli.cpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGEtY2xpL2ludGVyYWN0aXZlL2ltcGwvaW50ZXJhY3RpdmVfY2xpLmNwcA==) | `0% <0%> (ø)` | |
| [iroha-cli/query\_response\_handler.hpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGEtY2xpL3F1ZXJ5X3Jlc3BvbnNlX2hhbmRsZXIuaHBw) | `0% <0%> (ø)` | :arrow_up: |
| [iroha-cli/interactive/interactive\_common\_cli.hpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGEtY2xpL2ludGVyYWN0aXZlL2ludGVyYWN0aXZlX2NvbW1vbl9jbGkuaHBw) | `0% <0%> (ø)` | |
| [irohad/model/generators/command\_generator.hpp](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2dlbmVyYXRvcnMvY29tbWFuZF9nZW5lcmF0b3IuaHBw) | `0% <0%> (ø)` | |
| ... and [38 more](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=footer). Last update [9369761...251aeb8](https://codecov.io/gh/hyperledger/iroha/pull/524?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",2017-09-13 11:00:26,2017-09-13 14:22:48
https://api.github.com/repos/hyperledger/iroha/issues/518,https://api.github.com/repos/hyperledger/iroha/issues/comments/323612747,https://github.com/hyperledger/iroha/pull/518#issuecomment-323612747,grimadas,Also I think it is reasonable to add logger to impl/command_executor.cpp where appropriate (there are comments in file).,2017-08-20 21:19:52,2017-08-20 21:20:05
https://api.github.com/repos/hyperledger/iroha/issues/513,https://api.github.com/repos/hyperledger/iroha/issues/comments/322677933,https://github.com/hyperledger/iroha/pull/513#issuecomment-322677933,neewy,"Minor question:
if I run `sh compose-run.sh` I get following:
`ERROR: .IOError: [Errno 2] No such file or directory: u'././docker/docker-compose.yml'`
If I run it from Iroha folder it runs fine, like `sh scripts/compose-run.sh`
Will we leave it as it is, or this could be corrected?",2017-08-16 06:25:23,2017-08-16 06:26:08
https://api.github.com/repos/hyperledger/iroha/issues/513,https://api.github.com/repos/hyperledger/iroha/issues/comments/322679594,https://github.com/hyperledger/iroha/pull/513#issuecomment-322679594,tkyonezu,"I think the reason become with below environment variables.

  SOURCE=$(dirname $(dirname “$0”))

But, I think ${IROHA_HOME} is more useful rather than this.

  SOURCE=${IROHA_HOME}

And, I think Makefile is more useful for building docker and so on, which I
wrote it previously.

> 2017/08/16 15:25、Nikolay Yushkevich <notifications@github.com>のメール:
> 
> Minor question:
> if I run sh compose-run.sh I get following:
> ERROR: .IOError: [Errno 2] No such file or directory: u'././docker/docker-compose.yml'
> If I run it from Iroha folder it runs fine, like sh scripts/compose-run.sh
> 
> —
> You are receiving this because your review was requested.
> Reply to this email directly, view it on GitHub <https://github.com/hyperledger/iroha/pull/513#issuecomment-322677933>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AU_yHjcHwgytqLE4GLznuAd5WqzAK2Nnks5sYotUgaJpZM4O3ru0>.
> 

",2017-08-16 06:34:50,2017-08-16 06:34:50
https://api.github.com/repos/hyperledger/iroha/issues/512,https://api.github.com/repos/hyperledger/iroha/issues/comments/322443354,https://github.com/hyperledger/iroha/pull/512#issuecomment-322443354,takemiyamakoto,I don't understand how using the timestamp is the correct solution.,2017-08-15 11:29:36,2017-08-15 11:29:36
https://api.github.com/repos/hyperledger/iroha/issues/508,https://api.github.com/repos/hyperledger/iroha/issues/comments/321985346,https://github.com/hyperledger/iroha/pull/508#issuecomment-321985346,Warchant,"TODO: please, review tests once more. 

Some of them are broken after my update.
The reason is that public keys are created from strings of incorrect lengths, thus tests fail with exceltion `std::invalid_argument`

Going to fix this.",2017-08-12 14:38:56,2017-08-12 15:43:33
https://api.github.com/repos/hyperledger/iroha/issues/508,https://api.github.com/repos/hyperledger/iroha/issues/comments/327076231,https://github.com/hyperledger/iroha/pull/508#issuecomment-327076231,neewy,We have agreed to use optional type + monads for error handling instead of catching exceptions,2017-09-05 05:39:37,2017-09-05 05:39:37
https://api.github.com/repos/hyperledger/iroha/issues/508,https://api.github.com/repos/hyperledger/iroha/issues/comments/327802224,https://github.com/hyperledger/iroha/pull/508#issuecomment-327802224,neewy,"please, use monads the same way as in https://github.com/hyperledger/iroha/pull/552 @Warchant ",2017-09-07 13:39:48,2017-09-07 13:39:48
https://api.github.com/repos/hyperledger/iroha/issues/508,https://api.github.com/repos/hyperledger/iroha/issues/comments/329451914,https://github.com/hyperledger/iroha/pull/508#issuecomment-329451914,neewy,"Assigned ""candidate for closing"" since https://github.com/hyperledger/iroha/pull/552 was accepted",2017-09-14 11:18:28,2017-09-14 11:18:28
https://api.github.com/repos/hyperledger/iroha/issues/508,https://api.github.com/repos/hyperledger/iroha/issues/comments/329451953,https://github.com/hyperledger/iroha/pull/508#issuecomment-329451953,neewy,@Warchant is requested to review https://github.com/hyperledger/iroha/pull/552,2017-09-14 11:18:41,2017-09-14 11:18:41
https://api.github.com/repos/hyperledger/iroha/issues/508,https://api.github.com/repos/hyperledger/iroha/issues/comments/330151654,https://github.com/hyperledger/iroha/pull/508#issuecomment-330151654,neewy,@Warchant please review this PR,2017-09-18 08:00:43,2017-09-18 08:00:43
https://api.github.com/repos/hyperledger/iroha/issues/505,https://api.github.com/repos/hyperledger/iroha/issues/comments/322058835,https://github.com/hyperledger/iroha/pull/505#issuecomment-322058835,muratovv,Merged into develop. [commit](https://github.com/hyperledger/iroha/commit/14e535c5b79d0dddf4af56fe1b888fdc5255f783),2017-08-13 18:34:00,2017-08-13 18:34:00
https://api.github.com/repos/hyperledger/iroha/issues/504,https://api.github.com/repos/hyperledger/iroha/issues/comments/321755200,https://github.com/hyperledger/iroha/issues/504#issuecomment-321755200,neewy,"Hi! Thanks for your interest to Iroha. Can tell me what would you like to debug so that we can tell you more?
Logs are not stored now, we log internal events in standard output. If you'd like to contribute, please check libs/logger/logger.cpp and its log() method - https://github.com/hyperledger/iroha/blob/master/libs/logger/logger.cpp#L47
Soon we will post an updated version of docker-based scripts, which will run multiple Iroha instances if this may help with your issues. ",2017-08-11 08:19:46,2017-08-11 08:19:46
https://api.github.com/repos/hyperledger/iroha/issues/504,https://api.github.com/repos/hyperledger/iroha/issues/comments/322335880,https://github.com/hyperledger/iroha/issues/504#issuecomment-322335880,developersteve,@neewy having some issues getting it running in an env and more particular to being able to do transactions (registration of users is working just cant do a transaction). Thank you will check it out and see if i can help 😄  ,2017-08-14 23:19:40,2017-08-14 23:19:40
https://api.github.com/repos/hyperledger/iroha/issues/504,https://api.github.com/repos/hyperledger/iroha/issues/comments/327406147,https://github.com/hyperledger/iroha/issues/504#issuecomment-327406147,neewy,"Hi Steve,
are you still having problems with transactions?

Please, check how to form a transaction here https://soramitsu.atlassian.net/wiki/spaces/IS/pages/8650823/External+Interface+Control+Document",2017-09-06 07:58:22,2017-09-06 07:58:22
https://api.github.com/repos/hyperledger/iroha/issues/504,https://api.github.com/repos/hyperledger/iroha/issues/comments/327406628,https://github.com/hyperledger/iroha/issues/504#issuecomment-327406628,neewy,"also, please run Iroha node in docker container using script in develop branch: `sh scripts/run-iroha-dev.sh`",2017-09-06 08:00:18,2017-09-06 08:00:18
https://api.github.com/repos/hyperledger/iroha/issues/504,https://api.github.com/repos/hyperledger/iroha/issues/comments/328431840,https://github.com/hyperledger/iroha/issues/504#issuecomment-328431840,neewy,"Please, reopen issue if it remains",2017-09-11 06:43:06,2017-09-11 06:43:06
https://api.github.com/repos/hyperledger/iroha/issues/503,https://api.github.com/repos/hyperledger/iroha/issues/comments/321579270,https://github.com/hyperledger/iroha/pull/503#issuecomment-321579270,muratovv,How to pass public keys of peers to genesis block generator?,2017-08-10 15:05:57,2017-08-10 15:06:08
https://api.github.com/repos/hyperledger/iroha/issues/503,https://api.github.com/repos/hyperledger/iroha/issues/comments/321986524,https://github.com/hyperledger/iroha/pull/503#issuecomment-321986524,lebdron,">`--peers_num 4 --peers_address ./peers.list`

Can we infer number of peers from list size?",2017-08-12 14:59:54,2017-08-12 14:59:54
https://api.github.com/repos/hyperledger/iroha/issues/498,https://api.github.com/repos/hyperledger/iroha/issues/comments/320457173,https://github.com/hyperledger/iroha/pull/498#issuecomment-320457173,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=498) <br/>All committers have signed the CLA.,2017-08-05 17:37:36,2017-08-05 17:38:08
https://api.github.com/repos/hyperledger/iroha/issues/491,https://api.github.com/repos/hyperledger/iroha/issues/comments/319841639,https://github.com/hyperledger/iroha/pull/491#issuecomment-319841639,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=491) <br/>All committers have signed the CLA.,2017-08-03 01:21:42,2017-08-03 02:01:00
https://api.github.com/repos/hyperledger/iroha/issues/491,https://api.github.com/repos/hyperledger/iroha/issues/comments/320513075,https://github.com/hyperledger/iroha/pull/491#issuecomment-320513075,lebdron,https://github.com/hyperledger/iroha/commit/bfef0994319e3816be2af80d43f3a753e15ef03c,2017-08-06 15:15:05,2017-08-06 15:15:29
https://api.github.com/repos/hyperledger/iroha/issues/490,https://api.github.com/repos/hyperledger/iroha/issues/comments/319841517,https://github.com/hyperledger/iroha/pull/490#issuecomment-319841517,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=490) <br/>All committers have signed the CLA.,2017-08-03 01:20:42,2017-08-03 02:01:00
https://api.github.com/repos/hyperledger/iroha/issues/490,https://api.github.com/repos/hyperledger/iroha/issues/comments/320513121,https://github.com/hyperledger/iroha/pull/490#issuecomment-320513121,lebdron,https://github.com/hyperledger/iroha/commit/50e74a5ccdfc1d9808c0e0dcbd7881adf0e58151,2017-08-06 15:15:49,2017-08-06 15:15:49
https://api.github.com/repos/hyperledger/iroha/issues/489,https://api.github.com/repos/hyperledger/iroha/issues/comments/319832613,https://github.com/hyperledger/iroha/pull/489#issuecomment-319832613,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=489) <br/>All committers have signed the CLA.,2017-08-03 00:13:26,2017-08-03 02:01:00
https://api.github.com/repos/hyperledger/iroha/issues/489,https://api.github.com/repos/hyperledger/iroha/issues/comments/320513152,https://github.com/hyperledger/iroha/pull/489#issuecomment-320513152,lebdron,https://github.com/hyperledger/iroha/commit/17ecfb296c26ecc4ba9564d33dda011751945b1a,2017-08-06 15:16:14,2017-08-06 15:16:14
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/319842854,https://github.com/hyperledger/iroha/issues/486#issuecomment-319842854,zeroarst,Have the same issue. Please help. No responses from our built server...not sure what we are missing...,2017-08-03 01:30:54,2017-08-03 01:30:54
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/319879008,https://github.com/hyperledger/iroha/issues/486#issuecomment-319879008,grimadas,We are working now to fix this issue. In the meanwhile you can use one the development environments : For example:  `sh run-ametsuchi-dev.sh`,2017-08-03 06:21:30,2017-08-03 06:21:30
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/320142130,https://github.com/hyperledger/iroha/issues/486#issuecomment-320142130,zeroarst,"Thanks for tip. It is running. We can send money to others, it says OK. But no transactions actually came out. Totally have no idea whats going on...",2017-08-04 02:47:20,2017-08-07 01:47:28
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/321436371,https://github.com/hyperledger/iroha/issues/486#issuecomment-321436371,eizoefoer,"Any progress on this @grimadas ?

It seems to register fine, however no transactions get stored in the wallet. I have checked the postgres and redis containers that get launched as well and neither of contain the data.

Is there any other config file we are missing here? `sumeragi.json` is created with localhost ip (127.0.0.1) automatically when running `sh run-ametsuchi-dev.sh` but the containers ip is 192.168.9.2 would that be an issue?

Where exactly are the transactions that appear in the wallet meant to be stored? so far the only place with data is `/tmp/iroha_ledger`",2017-08-10 02:52:27,2017-08-10 02:52:27
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/321786483,https://github.com/hyperledger/iroha/issues/486#issuecomment-321786483,neewy,"@eizoefoer hi!

There is a problem with pipeline now, the hotfix is ready, please wait until we review and merge it. It is possible that transactions can freeze on the stage of simulator.

https://github.com/hyperledger/iroha/wiki/How-to-start-Iroha https://github.com/hyperledger/iroha/wiki/How-to-use-Iroha-client
follow these to startup the system right after hotfix would be merged.

Transactions are stored in blocks, while blocks are stored in flat files. In config file you specify the place for your flat files in `""block_store_path""`.

Thank you for your interest and contribution to the project!",2017-08-11 11:16:28,2017-08-11 11:16:28
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/322346530,https://github.com/hyperledger/iroha/issues/486#issuecomment-322346530,eizoefoer,"Hi @neewy, thanks for the info. It seems the hotfix has been merged now, however, I am getting the below image, any ideas? It seems like it isn't finding any peers. As I understand the server needs to run first to add peers, or is this incorrect?

Also do you have an idea of when the iroha-docker image will be updated?
Cheers.

![image](https://user-images.githubusercontent.com/20200388/29297636-b79b808a-81a5-11e7-93a4-6daf92b9630d.png)

",2017-08-15 00:36:54,2017-08-17 03:37:26
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/323624822,https://github.com/hyperledger/iroha/issues/486#issuecomment-323624822,eizoefoer,"Quick update @neewy @grimadas , building it from the new docker image, I get the image below.  It seems iroha-main is not being called anymore therefore only port 50051 is hosted which doesn't allow the app to access it (since it uses port 1204 as the http port). 

Is it possible to get the exact repo or image used to create the demo app? Since that is the functionality we need to integrate it in the project we are currently working on.

Cheers

![image](https://user-images.githubusercontent.com/20200388/29500153-3c3ad66e-8661-11e7-8e8d-cdc20aca91ff.png)


",2017-08-21 01:10:49,2017-08-21 01:11:05
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/323642084,https://github.com/hyperledger/iroha/issues/486#issuecomment-323642084,developersteve,I 2nd that @neewy @grimadas a copy of the image of the demo server would be great to be able to compare things against. ,2017-08-21 04:07:09,2017-08-21 04:07:09
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/327407494,https://github.com/hyperledger/iroha/issues/486#issuecomment-327407494,neewy,"Please run Iroha node in docker container using script in develop branch: `sh scripts/run-iroha-dev.sh`

Also, we have a demo server, deployed by @lebdron. Tell me if you need to know how to use it, we can give you credentials",2017-09-06 08:03:54,2017-09-06 08:03:54
https://api.github.com/repos/hyperledger/iroha/issues/486,https://api.github.com/repos/hyperledger/iroha/issues/comments/328432273,https://github.com/hyperledger/iroha/issues/486#issuecomment-328432273,neewy,"Please, reopen issue if it remains",2017-09-11 06:45:13,2017-09-11 06:45:13
https://api.github.com/repos/hyperledger/iroha/issues/484,https://api.github.com/repos/hyperledger/iroha/issues/comments/319745421,https://github.com/hyperledger/iroha/pull/484#issuecomment-319745421,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/client.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/ametsuchi/block_serializer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_storage.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_crypto_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 4/ 4) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (25/25) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% (26/26) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (41/41) /opt/iroha/test/module/iroha-cli/client_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 68.97% (140/203) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 98.84% (85/86) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 93.33% (84/90) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 78.35% (76/97) /opt/iroha/test/module/irohad/validation/chain_validation_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  94.71%


",2017-08-02 17:41:38,2017-08-02 17:41:38
https://api.github.com/repos/hyperledger/iroha/issues/482,https://api.github.com/repos/hyperledger/iroha/issues/comments/319303440,https://github.com/hyperledger/iroha/pull/482#issuecomment-319303440,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/ametsuchi/block_serializer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_storage.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_crypto_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 4/ 4) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 96.30% (26/27) /opt/iroha/libs/common/test_subscriber.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (25/25) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% (26/26) /opt/iroha/schema/responses.pb.h
100.00% (29/29) /opt/iroha/test/libs/common/test_subscriber_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 68.97% (140/203) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 98.72% (77/78) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 92.77% (77/83) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 78.35% (76/97) /opt/iroha/test/module/irohad/validation/chain_validation_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  94.67%


",2017-08-01 08:25:12,2017-08-01 08:25:12
https://api.github.com/repos/hyperledger/iroha/issues/480,https://api.github.com/repos/hyperledger/iroha/issues/comments/319155646,https://github.com/hyperledger/iroha/pull/480#issuecomment-319155646,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/ametsuchi/block_serializer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_storage.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_crypto_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 4/ 4) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (25/25) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% (26/26) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 68.97% (140/203) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 98.84% (85/86) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 93.33% (84/90) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 78.35% (76/97) /opt/iroha/test/module/irohad/validation/chain_validation_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  94.63%


",2017-07-31 18:29:21,2017-07-31 18:29:21
https://api.github.com/repos/hyperledger/iroha/issues/480,https://api.github.com/repos/hyperledger/iroha/issues/comments/319290918,https://github.com/hyperledger/iroha/pull/480#issuecomment-319290918,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/ametsuchi/block_serializer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_storage.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_crypto_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 4/ 4) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (25/25) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% (26/26) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 68.97% (140/203) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 98.84% (85/86) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 93.33% (84/90) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 78.35% (76/97) /opt/iroha/test/module/irohad/validation/chain_validation_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  94.63%


",2017-08-01 07:27:18,2017-08-01 07:27:18
https://api.github.com/repos/hyperledger/iroha/issues/479,https://api.github.com/repos/hyperledger/iroha/issues/comments/319402721,https://github.com/hyperledger/iroha/pull/479#issuecomment-319402721,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_storage.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 7/ 7) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (27/27) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% (75/75) /opt/iroha/schema/queries.pb.h
100.00% (55/55) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.81% (182/188) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 98.84% (85/86) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 93.33% (84/90) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 68.75% (11/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (206/206) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (61/61) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.66%


",2017-08-01 15:18:44,2017-08-01 15:18:44
https://api.github.com/repos/hyperledger/iroha/issues/479,https://api.github.com/repos/hyperledger/iroha/issues/comments/319598225,https://github.com/hyperledger/iroha/pull/479#issuecomment-319598225,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_storage.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 7/ 7) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (27/27) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% (75/75) /opt/iroha/schema/queries.pb.h
100.00% (55/55) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.81% (182/188) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 98.84% (85/86) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 93.33% (84/90) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 68.75% (11/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (205/205) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (64/64) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.67%


",2017-08-02 07:59:35,2017-08-02 07:59:35
https://api.github.com/repos/hyperledger/iroha/issues/479,https://api.github.com/repos/hyperledger/iroha/issues/comments/319677290,https://github.com/hyperledger/iroha/pull/479#issuecomment-319677290,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_storage.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 7/ 7) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (27/27) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% (75/75) /opt/iroha/schema/queries.pb.h
100.00% (55/55) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.81% (182/188) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 98.84% (85/86) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 93.33% (84/90) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 68.75% (11/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (205/205) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (64/64) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.60% (142/147) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.66%


",2017-08-02 13:48:10,2017-08-02 13:48:10
https://api.github.com/repos/hyperledger/iroha/issues/479,https://api.github.com/repos/hyperledger/iroha/issues/comments/319681143,https://github.com/hyperledger/iroha/pull/479#issuecomment-319681143,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_storage.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 7/ 7) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (27/27) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% (75/75) /opt/iroha/schema/queries.pb.h
100.00% (55/55) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.81% (182/188) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 98.84% (85/86) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 93.33% (84/90) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 68.75% (11/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (205/205) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (64/64) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.60% (142/147) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.66%


",2017-08-02 14:01:00,2017-08-02 14:01:00
https://api.github.com/repos/hyperledger/iroha/issues/478,https://api.github.com/repos/hyperledger/iroha/issues/comments/318871445,https://github.com/hyperledger/iroha/pull/478#issuecomment-318871445,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor_impl.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 97.47% (77/79) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_block_processor_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.96%


",2017-07-30 01:40:20,2017-07-30 01:40:20
https://api.github.com/repos/hyperledger/iroha/issues/478,https://api.github.com/repos/hyperledger/iroha/issues/comments/318877585,https://github.com/hyperledger/iroha/pull/478#issuecomment-318877585,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor_impl.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 97.78% (88/90) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_block_processor_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.97%


",2017-07-30 04:30:09,2017-07-30 04:30:09
https://api.github.com/repos/hyperledger/iroha/issues/478,https://api.github.com/repos/hyperledger/iroha/issues/comments/318883165,https://github.com/hyperledger/iroha/pull/478#issuecomment-318883165,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor_impl.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_block_processor_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.00%


",2017-07-30 07:00:22,2017-07-30 07:00:22
https://api.github.com/repos/hyperledger/iroha/issues/478,https://api.github.com/repos/hyperledger/iroha/issues/comments/318884977,https://github.com/hyperledger/iroha/pull/478#issuecomment-318884977,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor_impl.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_block_processor_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.00%


",2017-07-30 07:44:07,2017-07-30 07:44:07
https://api.github.com/repos/hyperledger/iroha/issues/478,https://api.github.com/repos/hyperledger/iroha/issues/comments/318886442,https://github.com/hyperledger/iroha/pull/478#issuecomment-318886442,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_block_processor_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.99%


",2017-07-30 08:19:19,2017-07-30 08:19:19
https://api.github.com/repos/hyperledger/iroha/issues/478,https://api.github.com/repos/hyperledger/iroha/issues/comments/318891303,https://github.com/hyperledger/iroha/pull/478#issuecomment-318891303,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.99%


",2017-07-30 10:03:42,2017-07-30 10:03:42
https://api.github.com/repos/hyperledger/iroha/issues/478,https://api.github.com/repos/hyperledger/iroha/issues/comments/318902065,https://github.com/hyperledger/iroha/pull/478#issuecomment-318902065,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.99%


",2017-07-30 13:30:28,2017-07-30 13:30:28
https://api.github.com/repos/hyperledger/iroha/issues/476,https://api.github.com/repos/hyperledger/iroha/issues/comments/318707116,https://github.com/hyperledger/iroha/pull/476#issuecomment-318707116,MizukiSonoko,"Is the reason for you use TBB?
You want to use Bounded MPMC queue?
",2017-07-28 16:57:11,2017-07-28 16:57:11
https://api.github.com/repos/hyperledger/iroha/issues/476,https://api.github.com/repos/hyperledger/iroha/issues/comments/318812580,https://github.com/hyperledger/iroha/pull/476#issuecomment-318812580,lebdron,@MizukiSonoko yes,2017-07-29 08:05:02,2017-07-29 08:05:02
https://api.github.com/repos/hyperledger/iroha/issues/476,https://api.github.com/repos/hyperledger/iroha/issues/comments/318816486,https://github.com/hyperledger/iroha/pull/476#issuecomment-318816486,MizukiSonoko,"Ok so what is best way? Do you think?
- use this library
- implements like this
http://www.1024cores.net/home/lock-free-algorithms/queues/bounded-mpmc-queue

In my opinion, I don't want to add new library as possible ",2017-07-29 09:26:17,2017-07-29 09:26:17
https://api.github.com/repos/hyperledger/iroha/issues/476,https://api.github.com/repos/hyperledger/iroha/issues/comments/318978628,https://github.com/hyperledger/iroha/pull/476#issuecomment-318978628,lebdron,@MizukiSonoko The good part of using third-party library that we don't have to write extensive tests for it. We can change it to something lightweight later.,2017-07-31 06:19:47,2017-07-31 06:19:47
https://api.github.com/repos/hyperledger/iroha/issues/476,https://api.github.com/repos/hyperledger/iroha/issues/comments/319493062,https://github.com/hyperledger/iroha/pull/476#issuecomment-319493062,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/ametsuchi/block_serializer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_storage.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_crypto_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 4/ 4) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/ordering_gate.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 96.30% (26/27) /opt/iroha/libs/common/test_subscriber.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (25/25) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/ordering.grpc.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% (26/26) /opt/iroha/schema/responses.pb.h
100.00% (29/29) /opt/iroha/test/libs/common/test_subscriber_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 68.97% (140/203) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/ordering/ordering_gate_service_test.cpp
100.00% (21/21) /opt/iroha/test/module/irohad/ordering/ordering_gate_test.cpp
 94.87% (37/39) /opt/iroha/test/module/irohad/ordering/ordering_mocks.hpp
100.00% (40/40) /opt/iroha/test/module/irohad/ordering/ordering_service_test.cpp
 98.72% (77/78) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 92.77% (77/83) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 78.35% (76/97) /opt/iroha/test/module/irohad/validation/chain_validation_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 7/ 7) /opt/iroha/test/module/vendor/tbb_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  94.91%


",2017-08-01 20:51:21,2017-08-01 20:51:21
https://api.github.com/repos/hyperledger/iroha/issues/475,https://api.github.com/repos/hyperledger/iroha/issues/comments/318333802,https://github.com/hyperledger/iroha/pull/475#issuecomment-318333802,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (18/18) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% ( 9/ 9) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (31/31) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.71%


",2017-07-27 11:18:23,2017-07-27 11:18:23
https://api.github.com/repos/hyperledger/iroha/issues/475,https://api.github.com/repos/hyperledger/iroha/issues/comments/318609507,https://github.com/hyperledger/iroha/pull/475#issuecomment-318609507,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (18/18) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% ( 9/ 9) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (31/31) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.71%


",2017-07-28 09:43:35,2017-07-28 09:43:35
https://api.github.com/repos/hyperledger/iroha/issues/475,https://api.github.com/repos/hyperledger/iroha/issues/comments/318638900,https://github.com/hyperledger/iroha/pull/475#issuecomment-318638900,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (18/18) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% ( 9/ 9) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (31/31) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.71%


",2017-07-28 12:26:28,2017-07-28 12:26:28
https://api.github.com/repos/hyperledger/iroha/issues/475,https://api.github.com/repos/hyperledger/iroha/issues/comments/318679648,https://github.com/hyperledger/iroha/pull/475#issuecomment-318679648,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (18/18) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% (19/19) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.76%


",2017-07-28 15:13:40,2017-07-28 15:13:40
https://api.github.com/repos/hyperledger/iroha/issues/475,https://api.github.com/repos/hyperledger/iroha/issues/comments/318916121,https://github.com/hyperledger/iroha/pull/475#issuecomment-318916121,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 4/ 4) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (25/25) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% (26/26) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.80%


",2017-07-30 17:22:24,2017-07-30 17:22:24
https://api.github.com/repos/hyperledger/iroha/issues/475,https://api.github.com/repos/hyperledger/iroha/issues/comments/318917951,https://github.com/hyperledger/iroha/pull/475#issuecomment-318917951,coverage-bot,"
Code Coverage Results:

100.00% ( 1/ 1) /opt/iroha/iroha-cli/bootstrap_network.hpp
100.00% ( 1/ 1) /opt/iroha/iroha-cli/genesis_block_client.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/common/config.hpp
100.00% ( 3/ 3) /opt/iroha/irohad/main/genesis_block_server/genesis_block_processor.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_assets_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/account_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/error_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/signatories_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/responses/transactions_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 4/ 4) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/command_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/query_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% (25/25) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 5/ 5) /opt/iroha/schema/endpoint.pb.h
100.00% (24/24) /opt/iroha/schema/queries.pb.h
100.00% (26/26) /opt/iroha/schema/responses.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
 98.20% (109/111) /opt/iroha/test/module/iroha-cli/bootstrap_network_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (27/27) /opt/iroha/test/module/irohad/common/config_loader_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (56/56) /opt/iroha/test/module/irohad/main/genesis_block_server/genesis_proc_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
100.00% (68/68) /opt/iroha/test/module/irohad/model/converters/pb_query_responses_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 43.75% ( 7/16) /opt/iroha/test/module/irohad/torii/mock_classes.hpp
 63.33% (19/30) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (43/43) /opt/iroha/test/module/irohad/torii/torii_queries_test.cpp
100.00% (52/52) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.97%


",2017-07-30 17:53:18,2017-07-30 17:53:18
https://api.github.com/repos/hyperledger/iroha/issues/473,https://api.github.com/repos/hyperledger/iroha/issues/comments/327409593,https://github.com/hyperledger/iroha/issues/473#issuecomment-327409593,neewy,"We will create C++ library, which will calculate hash, put timestamp and increment tx_counter. I will close this issue, as this task now in backlog here: https://soramitsu.atlassian.net/browse/IR-360",2017-09-06 08:12:35,2017-09-06 08:12:35
https://api.github.com/repos/hyperledger/iroha/issues/471,https://api.github.com/repos/hyperledger/iroha/issues/comments/317440555,https://github.com/hyperledger/iroha/pull/471#issuecomment-317440555,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 6/ 6) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (61/61) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.27%


",2017-07-24 14:29:21,2017-07-24 14:29:21
https://api.github.com/repos/hyperledger/iroha/issues/470,https://api.github.com/repos/hyperledger/iroha/issues/comments/318586032,https://github.com/hyperledger/iroha/pull/470#issuecomment-318586032,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (57/57) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.81%


",2017-07-28 07:49:22,2017-07-28 07:49:22
https://api.github.com/repos/hyperledger/iroha/issues/470,https://api.github.com/repos/hyperledger/iroha/issues/comments/320373563,https://github.com/hyperledger/iroha/pull/470#issuecomment-320373563,lebdron,Covered in https://github.com/hyperledger/iroha/pull/493,2017-08-04 23:23:42,2017-08-04 23:23:42
https://api.github.com/repos/hyperledger/iroha/issues/468,https://api.github.com/repos/hyperledger/iroha/issues/comments/317339043,https://github.com/hyperledger/iroha/pull/468#issuecomment-317339043,CLAassistant,"[![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=468) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla-assistant.io/hyperledger/iroha?pullRequest=468) before we can accept your contribution.<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/hyperledger/iroha?pullRequest=468) it.</sub>",2017-07-24 07:18:03,2017-07-24 07:18:03
https://api.github.com/repos/hyperledger/iroha/issues/468,https://api.github.com/repos/hyperledger/iroha/issues/comments/317339396,https://github.com/hyperledger/iroha/pull/468#issuecomment-317339396,neewy,Сodacy-badger did not sign the CLA,2017-07-24 07:19:59,2017-07-24 07:19:59
https://api.github.com/repos/hyperledger/iroha/issues/467,https://api.github.com/repos/hyperledger/iroha/issues/comments/317278035,https://github.com/hyperledger/iroha/pull/467#issuecomment-317278035,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=467) <br/>All committers have signed the CLA.,2017-07-23 20:01:22,2017-07-23 20:03:29
https://api.github.com/repos/hyperledger/iroha/issues/467,https://api.github.com/repos/hyperledger/iroha/issues/comments/317344470,https://github.com/hyperledger/iroha/pull/467#issuecomment-317344470,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateless/validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless/validator_impl.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (25/25) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 6/ 6) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 93.75% (30/32) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (61/61) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.87%


",2017-07-24 07:45:11,2017-07-24 07:45:11
https://api.github.com/repos/hyperledger/iroha/issues/466,https://api.github.com/repos/hyperledger/iroha/issues/comments/317354939,https://github.com/hyperledger/iroha/pull/466#issuecomment-317354939,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateless/validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless/validator_impl.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
100.00% (25/25) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 6/ 6) /opt/iroha/schema/endpoint.pb.h
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 93.75% (30/32) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (61/61) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.63%


",2017-07-24 08:32:46,2017-07-24 08:32:46
https://api.github.com/repos/hyperledger/iroha/issues/466,https://api.github.com/repos/hyperledger/iroha/issues/comments/317436357,https://github.com/hyperledger/iroha/pull/466#issuecomment-317436357,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateless/validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless/validator_impl.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
100.00% (25/25) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 6/ 6) /opt/iroha/schema/endpoint.pb.h
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 93.75% (30/32) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (61/61) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.63%


",2017-07-24 14:16:16,2017-07-24 14:16:16
https://api.github.com/repos/hyperledger/iroha/issues/466,https://api.github.com/repos/hyperledger/iroha/issues/comments/317496560,https://github.com/hyperledger/iroha/pull/466#issuecomment-317496560,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/mutable_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/temporary_factory.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/query_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/tx_responses/stateless_response.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/network/block_loader.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/peer_communication_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/block_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/impl/simulator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/simulator/verified_proposal_creator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/impl/synchronizer_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/synchronizer/synchronizer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/torii/processor/query_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/query_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/chain_validator.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateful_validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless_validator.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (27/27) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 6/ 6) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 88.24% (30/34) /opt/iroha/test/module/irohad/simulator/simulator_test.cpp
 73.33% (22/30) /opt/iroha/test/module/irohad/synchronizer/synchronizer_test.cpp
 70.83% (34/48) /opt/iroha/test/module/irohad/torii/processor/query_processor_test.cpp
 94.12% (32/34) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (61/61) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  96.82%


",2017-07-24 17:32:53,2017-07-24 17:32:53
https://api.github.com/repos/hyperledger/iroha/issues/465,https://api.github.com/repos/hyperledger/iroha/issues/comments/317268287,https://github.com/hyperledger/iroha/pull/465#issuecomment-317268287,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/network_api.h
100.00% ( 1/ 1) /opt/iroha/irohad/ordering/ordering_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateless/validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless/validator_impl.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (25/25) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 1/ 1) /opt/iroha/libs/model/tx_responses/stateless_response.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 6/ 6) /opt/iroha/schema/endpoint.pb.h
 92.86% (26/28) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 91.67% (33/36) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (61/61) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.82%


",2017-07-23 17:22:43,2017-07-23 17:22:43
https://api.github.com/repos/hyperledger/iroha/issues/465,https://api.github.com/repos/hyperledger/iroha/issues/comments/317333887,https://github.com/hyperledger/iroha/pull/465#issuecomment-317333887,coverage-bot,"
Code Coverage Results:

100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/block_query.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_command.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/ametsuchi/wsv_query.hpp
100.00% (13/13) /opt/iroha/irohad/model/account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/account_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/block.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/command.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_asset_quantity.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_peer.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/add_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/assign_master_key.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/create_domain.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/remove_signatory.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_permissions.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/set_quorum.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/commands/transfer_asset.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/model_hash_provider_impl.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/peer.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/proposal.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/queries/get_account_assets.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/query.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/model/transaction.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/model/transaction_response.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/network/network_api.h
100.00% ( 1/ 1) /opt/iroha/irohad/ordering/ordering_service.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/torii/processor/transaction_processor_impl.hpp
100.00% ( 2/ 2) /opt/iroha/irohad/validation/stateless/validator.hpp
100.00% ( 1/ 1) /opt/iroha/irohad/validation/stateless/validator_impl.hpp
100.00% ( 4/ 4) /opt/iroha/libs/common/byteutils.hpp
 94.87% (37/39) /opt/iroha/libs/common/test_observable.hpp
100.00% (25/25) /opt/iroha/libs/common/types.hpp
100.00% (57/57) /opt/iroha/libs/crypto/base64.hpp
100.00% (10/10) /opt/iroha/libs/datetime/time.hpp
100.00% ( 7/ 7) /opt/iroha/libs/logger/logger.hpp
 83.33% (30/36) /opt/iroha/libs/map_queue/map_queue.hpp
100.00% ( 1/ 1) /opt/iroha/libs/model/tx_responses/stateless_response.hpp
100.00% ( 7/ 7) /opt/iroha/schema/block.pb.h
100.00% ( 2/ 2) /opt/iroha/schema/commands.pb.h
100.00% ( 6/ 6) /opt/iroha/schema/endpoint.pb.h
 94.44% (34/36) /opt/iroha/test/libs/common/test_observable_testing.cpp
100.00% (25/25) /opt/iroha/test/libs/model/model_crypto_provider_test.cpp
100.00% (48/48) /opt/iroha/test/libs/model/model_hash_provider_test.cpp
100.00% (161/161) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test.cpp
 86.67% (13/15) /opt/iroha/test/module/irohad/ametsuchi/ametsuchi_test_common.hpp
 96.70% (176/182) /opt/iroha/test/module/irohad/ametsuchi/block_serializer_test.cpp
100.00% (39/39) /opt/iroha/test/module/irohad/ametsuchi/flat_file_test.cpp
100.00% (15/15) /opt/iroha/test/module/irohad/logger/logger_test.cpp
100.00% (44/44) /opt/iroha/test/module/irohad/model/converters/pb_block_test.cpp
100.00% (102/102) /opt/iroha/test/module/irohad/model/converters/pb_commands_test.cpp
 72.50% (29/40) /opt/iroha/test/module/irohad/model/converters/pb_transaction_test.cpp
100.00% (199/199) /opt/iroha/test/module/irohad/model/operators/model_operators_test.cpp
 91.67% (33/36) /opt/iroha/test/module/irohad/torii/processor/transaction_processor_test.cpp
100.00% (61/61) /opt/iroha/test/module/irohad/torii/torii_service_test.cpp
 96.73% (148/153) /opt/iroha/test/module/irohad/validation/query_execution.cpp
 98.70% (304/308) /opt/iroha/test/module/irohad/validation/stateful_validation_test.cpp
100.00% (55/55) /opt/iroha/test/module/irohad/validation/stateless/transaction_validator_test.cpp
100.00% (72/72) /opt/iroha/test/module/libs/crypto/base64_test.cpp
 94.44% (68/72) /opt/iroha/test/module/libs/crypto/hash_test.cpp
100.00% (47/47) /opt/iroha/test/module/libs/crypto/signature_test.cpp
100.00% (11/11) /opt/iroha/test/module/libs/datetime/time_test.cpp
100.00% (27/27) /opt/iroha/test/module/libs/map_queue/map_queue_test.cpp
100.00% (15/15) /opt/iroha/test/module/vendor/rxcpp_subject_usage.cpp
100.00% (57/57) /opt/iroha/test/module/vendor/rxcpp_test.cpp
100.00% ( 4/ 4) /opt/iroha/test/module/vendor/uvw_test.cpp

Total Coverage:  97.83%


",2017-07-24 06:48:10,2017-07-24 06:48:10
https://api.github.com/repos/hyperledger/iroha/issues/464,https://api.github.com/repos/hyperledger/iroha/issues/comments/317254841,https://github.com/hyperledger/iroha/pull/464#issuecomment-317254841,neewy,I request to merge this PR since we need to move on to use current architecture and deliver components implementation,2017-07-23 13:57:55,2017-07-23 13:57:55
https://api.github.com/repos/hyperledger/iroha/issues/460,https://api.github.com/repos/hyperledger/iroha/issues/comments/317201886,https://github.com/hyperledger/iroha/pull/460#issuecomment-317201886,motxx,"Thanks for your reviewing.
1. Sync clients use blocking request. I think the terminology of blocking and sync have no difference, but I think `ToriiBlockingClient` and `ToriiNonBlockingClient` are also ok. (a bit long?)
Implementing grpc sync server is ok, but I failed to mix async and sync server in the same port. To use grpc sync server, I should use another port, event-loop and completion queue. So I didn't implement sync service (so is sync client) this time.

2. query_client is not Iroha's module. I think it's used by tests, so it's in `libs/`. On the other hand, command_client will be used by Iroha when sending something like AddPeer (but currently not used), so it's out of `libs/`.",2017-07-22 18:32:13,2017-07-22 18:36:08
https://api.github.com/repos/hyperledger/iroha/issues/460,https://api.github.com/repos/hyperledger/iroha/issues/comments/317216587,https://github.com/hyperledger/iroha/pull/460#issuecomment-317216587,luckychess,"Oh, I see your idea now. Looks good for me.",2017-07-22 23:13:00,2017-07-22 23:13:00
https://api.github.com/repos/hyperledger/iroha/issues/459,https://api.github.com/repos/hyperledger/iroha/issues/comments/317191568,https://github.com/hyperledger/iroha/pull/459#issuecomment-317191568,neewy,"For some reason develop stopped building after merging this commit. I am reverting changes
",2017-07-22 15:41:34,2017-07-22 15:41:34
https://api.github.com/repos/hyperledger/iroha/issues/458,https://api.github.com/repos/hyperledger/iroha/issues/comments/316692003,https://github.com/hyperledger/iroha/pull/458#issuecomment-316692003,motxx,"I found some bug as following:
In this branch, not develop,
torii_async_test sometimes enter into an infinite loop.",2017-07-20 12:47:05,2017-07-20 21:41:20
https://api.github.com/repos/hyperledger/iroha/issues/458,https://api.github.com/repos/hyperledger/iroha/issues/comments/316839667,https://github.com/hyperledger/iroha/pull/458#issuecomment-316839667,motxx,"The bug is fixed by merging event-loop about CommandService and QueryService that are using same port.
Now, **QueryService is async**. If clients want to use sync, they should request with async and block their thread.

If we have to make QueryService *grpc sync only*, maybe ports of CommandService and QueryService have to be different.

And it's better that we'll create a test that runs many processes (clients) and one server, then calculates how many requests can be resolved.",2017-07-20 21:48:35,2017-07-21 01:48:07
https://api.github.com/repos/hyperledger/iroha/issues/452,https://api.github.com/repos/hyperledger/iroha/issues/comments/317233140,https://github.com/hyperledger/iroha/pull/452#issuecomment-317233140,lebdron,"Closing this PR, since code in `feature/consensus` was replaced by force push",2017-07-23 06:46:24,2017-07-23 06:46:24
https://api.github.com/repos/hyperledger/iroha/issues/451,https://api.github.com/repos/hyperledger/iroha/issues/comments/315957833,https://github.com/hyperledger/iroha/pull/451#issuecomment-315957833,takemiyamakoto,"Yes, because modern compilers are nice 👍 ",2017-07-18 04:54:04,2017-07-18 04:54:04
https://api.github.com/repos/hyperledger/iroha/issues/451,https://api.github.com/repos/hyperledger/iroha/issues/comments/316074663,https://github.com/hyperledger/iroha/pull/451#issuecomment-316074663,Warchant,"This branch is still in *WIP*, because there is a bug (in `peerservice_peer`) with public key parsing. 

How to test it:
1. `make peerservice_peer`
2. ```
    // in different terminals
    test_bin/peerservice_peer 4 0
    test_bin/peerservice_peer 4 1
    test_bin/peerservice_peer 4 2
    test_bin/peerservice_peer 4 3
    ```",2017-07-18 14:06:57,2017-07-18 14:06:57
https://api.github.com/repos/hyperledger/iroha/issues/451,https://api.github.com/repos/hyperledger/iroha/issues/comments/316093191,https://github.com/hyperledger/iroha/pull/451#issuecomment-316093191,Warchant,"TODO: there is a bug with long timer. 

Consider a system of 4 peers:
1. When we run 1 peer, wait until all timers show that peers are dead. Long timer will be started.
2. Then, one by one, run other peers.
3. First peer does not print anything (blocked at some point.) -- it is a bug and shoulf be fixed.

Working on this.",2017-07-18 15:03:54,2017-07-18 15:03:54
https://api.github.com/repos/hyperledger/iroha/issues/451,https://api.github.com/repos/hyperledger/iroha/issues/comments/316124851,https://github.com/hyperledger/iroha/pull/451#issuecomment-316124851,Warchant,It is ready for review.,2017-07-18 16:45:27,2017-07-18 16:45:27
https://api.github.com/repos/hyperledger/iroha/issues/451,https://api.github.com/repos/hyperledger/iroha/issues/comments/316321806,https://github.com/hyperledger/iroha/pull/451#issuecomment-316321806,motxx,Is this PeerService Raft? Is it used by sumeragi for electing leader?,2017-07-19 09:07:07,2017-07-19 09:07:07
https://api.github.com/repos/hyperledger/iroha/issues/451,https://api.github.com/repos/hyperledger/iroha/issues/comments/316340049,https://github.com/hyperledger/iroha/pull/451#issuecomment-316340049,Warchant,"It is not raft. Sumeragi relies on order and availability of peers. This peer service does not provide the ordering, because it is consensus-dependent part (order). But availability + some extra info (useful for synchronization).

The reason why I can't start implementing sumeragi without peer service is the following:
1. consider you run N nodes. at the very beginning you don't have any leader or common order.
2. each of them has its current state (ametsuchi)
3. some nodes may have one state, other may have another. It means, that there is no common order.
4. peer A thinks that peer B is the leader, peer B thinks that peer C is the leader, and peer C is dead. 

It results in ""deadlock"", because nobody is sending proposals. 

To prevent this every node pings every other node (in future -- subset of all peers, ""neighbourhood"") and fetches their state (ledger height). And, eventually we will elect the leader who is going to share his ""view"" on a cluster.",2017-07-19 10:16:51,2017-07-19 10:28:19
https://api.github.com/repos/hyperledger/iroha/issues/451,https://api.github.com/repos/hyperledger/iroha/issues/comments/316355479,https://github.com/hyperledger/iroha/pull/451#issuecomment-316355479,muratovv,Why bChain ordering is not applicable here?,2017-07-19 11:25:28,2017-07-19 11:26:12
https://api.github.com/repos/hyperledger/iroha/issues/450,https://api.github.com/repos/hyperledger/iroha/issues/comments/317356247,https://github.com/hyperledger/iroha/pull/450#issuecomment-317356247,l4l,merged to #469,2017-07-24 08:38:22,2017-07-24 08:38:22
https://api.github.com/repos/hyperledger/iroha/issues/449,https://api.github.com/repos/hyperledger/iroha/issues/comments/317246994,https://github.com/hyperledger/iroha/pull/449#issuecomment-317246994,neewy,https://hackmd.io/GwRmwQ2BmCFoCsAGARtOAWBIBMcAcS0GcAZjhNNPvpAKZIDGQA== how this relate to the document?,2017-07-23 11:37:52,2017-07-23 11:37:52
https://api.github.com/repos/hyperledger/iroha/issues/449,https://api.github.com/repos/hyperledger/iroha/issues/comments/317361729,https://github.com/hyperledger/iroha/pull/449#issuecomment-317361729,l4l,merged to #469,2017-07-24 09:00:38,2017-07-24 09:00:38
https://api.github.com/repos/hyperledger/iroha/issues/448,https://api.github.com/repos/hyperledger/iroha/issues/comments/321786837,https://github.com/hyperledger/iroha/issues/448#issuecomment-321786837,neewy,Hi! Can you tell me what might look overflowed?,2017-08-11 11:18:48,2017-08-11 11:18:48
https://api.github.com/repos/hyperledger/iroha/issues/448,https://api.github.com/repos/hyperledger/iroha/issues/comments/322027133,https://github.com/hyperledger/iroha/issues/448#issuecomment-322027133,l4l,I mean redundant files (that should be deleted) and files with one statement (that should be merged to other ones),2017-08-13 07:38:29,2017-08-13 07:38:29
https://api.github.com/repos/hyperledger/iroha/issues/448,https://api.github.com/repos/hyperledger/iroha/issues/comments/327410412,https://github.com/hyperledger/iroha/issues/448#issuecomment-327410412,neewy,"https://github.com/hyperledger/iroha/blob/master/schema/api_service.proto
and 
https://github.com/hyperledger/iroha/blob/master/schema/api.proto
are deleted. Close this issue if this is satisfactory or specify otherwise what correction is needed",2017-09-06 08:16:07,2017-09-06 08:16:07
https://api.github.com/repos/hyperledger/iroha/issues/448,https://api.github.com/repos/hyperledger/iroha/issues/comments/327749038,https://github.com/hyperledger/iroha/issues/448#issuecomment-327749038,l4l,"Good, thanks!
Maybe a good idea will be merge of **{loader,block}.proto**, what do you think?",2017-09-07 09:41:18,2017-09-07 09:41:18
https://api.github.com/repos/hyperledger/iroha/issues/448,https://api.github.com/repos/hyperledger/iroha/issues/comments/328432701,https://github.com/hyperledger/iroha/issues/448#issuecomment-328432701,neewy,I think they serve different purpose. We can discuss it in chat — redundant files are removed now anyway,2017-09-11 06:47:25,2017-09-11 06:47:25
https://api.github.com/repos/hyperledger/iroha/issues/446,https://api.github.com/repos/hyperledger/iroha/issues/comments/315521578,https://github.com/hyperledger/iroha/pull/446#issuecomment-315521578,motxx,"Already merged. I'll close PR.
Dependency is here: https://github.com/hyperledger/iroha/pull/447",2017-07-15 09:15:35,2017-07-15 09:16:37
https://api.github.com/repos/hyperledger/iroha/issues/445,https://api.github.com/repos/hyperledger/iroha/issues/comments/315525162,https://github.com/hyperledger/iroha/pull/445#issuecomment-315525162,l4l,That's fine with building but there's some undefined behavior in __torii_async_test__,2017-07-15 10:25:37,2017-07-15 10:25:37
https://api.github.com/repos/hyperledger/iroha/issues/445,https://api.github.com/repos/hyperledger/iroha/issues/comments/315534468,https://github.com/hyperledger/iroha/pull/445#issuecomment-315534468,Warchant,Consensus is not yet done ,2017-07-15 13:37:58,2017-07-15 13:37:58
https://api.github.com/repos/hyperledger/iroha/issues/445,https://api.github.com/repos/hyperledger/iroha/issues/comments/315685295,https://github.com/hyperledger/iroha/pull/445#issuecomment-315685295,neewy,Fix commit name please,2017-07-17 07:34:27,2017-07-17 07:34:27
https://api.github.com/repos/hyperledger/iroha/issues/445,https://api.github.com/repos/hyperledger/iroha/issues/comments/316687688,https://github.com/hyperledger/iroha/pull/445#issuecomment-316687688,lebdron,"- `feature/consensus` was removed since it is outdated.
- transaction processor map is already in develop.
- logger will be added later.",2017-07-20 12:27:47,2017-07-20 12:27:58
https://api.github.com/repos/hyperledger/iroha/issues/442,https://api.github.com/repos/hyperledger/iroha/issues/comments/315270766,https://github.com/hyperledger/iroha/pull/442#issuecomment-315270766,muratovv,What about reasoning?,2017-07-14 05:04:29,2017-07-14 05:04:29
https://api.github.com/repos/hyperledger/iroha/issues/442,https://api.github.com/repos/hyperledger/iroha/issues/comments/315271964,https://github.com/hyperledger/iroha/pull/442#issuecomment-315271964,satellitex,"We have decided the design drawing.
There is no Transaction Processor there.",2017-07-14 05:14:50,2017-07-14 05:14:50
https://api.github.com/repos/hyperledger/iroha/issues/442,https://api.github.com/repos/hyperledger/iroha/issues/comments/315276805,https://github.com/hyperledger/iroha/pull/442#issuecomment-315276805,takemiyamakoto,"It looks like there's a tx processor to me.

![image](https://user-images.githubusercontent.com/20982317/28199945-35591e58-68a4-11e7-99ba-f8918c9bb805.png)
",2017-07-14 05:53:56,2017-07-14 05:53:56
https://api.github.com/repos/hyperledger/iroha/issues/442,https://api.github.com/repos/hyperledger/iroha/issues/comments/315279857,https://github.com/hyperledger/iroha/pull/442#issuecomment-315279857,neewy,"we definitely need to draw something meaningful as components diagram, this is my fault. Please remind about this in sprint review when we will discuss issues and in case I may forget to say about it",2017-07-14 06:15:52,2017-07-14 06:15:52
https://api.github.com/repos/hyperledger/iroha/issues/442,https://api.github.com/repos/hyperledger/iroha/issues/comments/315533255,https://github.com/hyperledger/iroha/pull/442#issuecomment-315533255,takemiyamakoto,Transaction Processor proposed to be renamed to TransactionHandler I think.,2017-07-15 13:13:30,2017-07-15 13:13:30
https://api.github.com/repos/hyperledger/iroha/issues/441,https://api.github.com/repos/hyperledger/iroha/issues/comments/315071124,https://github.com/hyperledger/iroha/pull/441#issuecomment-315071124,neewy," Can someone who has access to CircleCI communicate do the following:
""set the GitHub token to the environment variable GITHUB_TOKEN in CircleCI""",2017-07-13 13:02:31,2017-07-13 13:02:37
https://api.github.com/repos/hyperledger/iroha/issues/441,https://api.github.com/repos/hyperledger/iroha/issues/comments/315075087,https://github.com/hyperledger/iroha/pull/441#issuecomment-315075087,neewy,@Warchant added environmental variable. Can be merged,2017-07-13 13:18:35,2017-07-13 13:18:35
https://api.github.com/repos/hyperledger/iroha/issues/441,https://api.github.com/repos/hyperledger/iroha/issues/comments/315079985,https://github.com/hyperledger/iroha/pull/441#issuecomment-315079985,takemiyamakoto,Looks good.,2017-07-13 13:37:32,2017-07-13 13:37:32
https://api.github.com/repos/hyperledger/iroha/issues/441,https://api.github.com/repos/hyperledger/iroha/issues/comments/315082894,https://github.com/hyperledger/iroha/pull/441#issuecomment-315082894,neewy,"We will merge feature/refactor-model first, and then this branch to test coverage",2017-07-13 13:48:11,2017-07-13 13:48:11
https://api.github.com/repos/hyperledger/iroha/issues/440,https://api.github.com/repos/hyperledger/iroha/issues/comments/315064819,https://github.com/hyperledger/iroha/pull/440#issuecomment-315064819,neewy,"Why do you want to revert revert? We don't want to get rid of your code, but this is not compliant currently with codebase and it needs some adjustment
Can you please discuss it with the team in chat?",2017-07-13 12:36:27,2017-07-13 12:36:27
https://api.github.com/repos/hyperledger/iroha/issues/437,https://api.github.com/repos/hyperledger/iroha/issues/comments/315338707,https://github.com/hyperledger/iroha/pull/437#issuecomment-315338707,motxx,"After merging this PR, I'll rename some filename in this PR to more applicable names, command_service_handler.hpp/cpp and so on.
And I'll create hotfix to solve a problem of `ToriiNonBlocking()`",2017-07-14 11:37:00,2017-07-14 11:37:00
https://api.github.com/repos/hyperledger/iroha/issues/434,https://api.github.com/repos/hyperledger/iroha/issues/comments/314739427,https://github.com/hyperledger/iroha/pull/434#issuecomment-314739427,Warchant,"I have a feeling that peer service should store this info about peers:

```
struct NetworkNode {
    std::string ip;
    uint16_t port;
    ed25519::pubkey_t pubkey;
  };

  struct PeerService {
    std::vector<NetworkNode> peers;
    ...
```",2017-07-12 11:17:42,2017-07-12 11:17:42
https://api.github.com/repos/hyperledger/iroha/issues/434,https://api.github.com/repos/hyperledger/iroha/issues/comments/314951276,https://github.com/hyperledger/iroha/pull/434#issuecomment-314951276,satellitex,"@Warchant 
I thought `ip` is included by `port`. (e.g: ip = ""0.0.0.0:8080"")
If we need `uint16_t port` in another, we should add `port` to `model::peer` and `protocol::peer`.",2017-07-13 02:21:36,2017-07-13 02:21:36
https://api.github.com/repos/hyperledger/iroha/issues/433,https://api.github.com/repos/hyperledger/iroha/issues/comments/314998693,https://github.com/hyperledger/iroha/pull/433#issuecomment-314998693,grimadas,"I updated schema of proto files, and removed confusing nesting. ",2017-07-13 07:43:29,2017-07-13 07:43:29
https://api.github.com/repos/hyperledger/iroha/issues/431,https://api.github.com/repos/hyperledger/iroha/issues/comments/314680686,https://github.com/hyperledger/iroha/pull/431#issuecomment-314680686,neewy,"In general this is not what should be defined as an interface between Iroha and external clients in my opinion. We should decide on something more concise to return, like a model object or a specific wrapper for a command. Why should we return block? It will involve parsing logic on the client",2017-07-12 07:32:46,2017-07-12 07:32:46
https://api.github.com/repos/hyperledger/iroha/issues/431,https://api.github.com/repos/hyperledger/iroha/issues/comments/314681115,https://github.com/hyperledger/iroha/pull/431#issuecomment-314681115,neewy,"![screen shot 2017-07-12 at 10 33 38](https://user-images.githubusercontent.com/11841667/28106737-a9d918a4-66ed-11e7-8890-5eacacbb029b.png)
Do we need a thin or somewhat thicker client?",2017-07-12 07:34:52,2017-07-12 07:34:52
https://api.github.com/repos/hyperledger/iroha/issues/431,https://api.github.com/repos/hyperledger/iroha/issues/comments/314685433,https://github.com/hyperledger/iroha/pull/431#issuecomment-314685433,neewy,"Another comment is that in open ledger blocks as a transport unit is acceptable, but we have ledger with permissions systems, so the client may receive block which potentially has transactions which are not allowed for the client to view, but the client can get the data in it no matter what its permissions are. What do you think about this?",2017-07-12 07:54:38,2017-07-12 07:54:38
https://api.github.com/repos/hyperledger/iroha/issues/431,https://api.github.com/repos/hyperledger/iroha/issues/comments/314692369,https://github.com/hyperledger/iroha/pull/431#issuecomment-314692369,MizukiSonoko,"In my opinion
In now, Iroha does not support transaction hidden by domain so all transaction send to API server
but Iroha will support it
- Server Send `AddNotify( address )` with my address, my publicKey and signatures
- After consensus formed, filtering transaction using tx creator publicKey and make filtered tx list
",2017-07-12 08:24:17,2017-07-12 08:24:17
https://api.github.com/repos/hyperledger/iroha/issues/430,https://api.github.com/repos/hyperledger/iroha/issues/comments/315506054,https://github.com/hyperledger/iroha/pull/430#issuecomment-315506054,takemiyamakoto,This is the design for this task: https://hackmd.io/MwUwZgnAbALARgRgLQFZEGMk2OgTEgDhjGQEMEQFSR1gUEcg?view,2017-07-15 03:24:07,2017-07-15 03:24:07
https://api.github.com/repos/hyperledger/iroha/issues/429,https://api.github.com/repos/hyperledger/iroha/issues/comments/314413237,https://github.com/hyperledger/iroha/pull/429#issuecomment-314413237,Warchant,Thanks. I am going to extend this. Merge this ASAP,2017-07-11 11:19:41,2017-07-11 11:19:54
https://api.github.com/repos/hyperledger/iroha/issues/426,https://api.github.com/repos/hyperledger/iroha/issues/comments/314087282,https://github.com/hyperledger/iroha/pull/426#issuecomment-314087282,motxx,"I don't know whether validator should be func or class, but other changes that I've not commented look good for me.",2017-07-10 12:10:56,2017-07-10 12:10:56
https://api.github.com/repos/hyperledger/iroha/issues/425,https://api.github.com/repos/hyperledger/iroha/issues/comments/314302961,https://github.com/hyperledger/iroha/issues/425#issuecomment-314302961,takemiyamakoto,IP concerns should be forwarded to legal@hyperledger.org,2017-07-11 02:13:51,2017-07-11 02:13:51
https://api.github.com/repos/hyperledger/iroha/issues/423,https://api.github.com/repos/hyperledger/iroha/issues/comments/313452410,https://github.com/hyperledger/iroha/pull/423#issuecomment-313452410,grimadas,Why is this PR into master ? ,2017-07-06 16:43:53,2017-07-06 16:43:53
https://api.github.com/repos/hyperledger/iroha/issues/422,https://api.github.com/repos/hyperledger/iroha/issues/comments/313650200,https://github.com/hyperledger/iroha/pull/422#issuecomment-313650200,kamilsa,"@MizukiSonoko The dao was renamed to model, please review",2017-07-07 10:50:08,2017-07-07 10:50:08
https://api.github.com/repos/hyperledger/iroha/issues/421,https://api.github.com/repos/hyperledger/iroha/issues/comments/313411827,https://github.com/hyperledger/iroha/pull/421#issuecomment-313411827,MizukiSonoko,Really we need to merge this commit?,2017-07-06 14:25:15,2017-07-06 14:25:15
https://api.github.com/repos/hyperledger/iroha/issues/421,https://api.github.com/repos/hyperledger/iroha/issues/comments/313412257,https://github.com/hyperledger/iroha/pull/421#issuecomment-313412257,grimadas,"Thanks everyone, we don't need to merge this. I'll close this PR",2017-07-06 14:26:42,2017-07-06 14:26:42
https://api.github.com/repos/hyperledger/iroha/issues/418,https://api.github.com/repos/hyperledger/iroha/issues/comments/312599695,https://github.com/hyperledger/iroha/pull/418#issuecomment-312599695,muratovv,"This is good point that dao is misleading. For now we need focus on https://github.com/hyperledger/iroha/pull/417, because it create general pipeline of transactions, proposals and blocks. After adoption this PR we may discuss changing name from dao to another one.",2017-07-03 09:42:54,2017-07-03 09:42:54
https://api.github.com/repos/hyperledger/iroha/issues/412,https://api.github.com/repos/hyperledger/iroha/issues/comments/314308632,https://github.com/hyperledger/iroha/issues/412#issuecomment-314308632,takemiyamakoto,This is being refactored for v0.95. This should be somewhat usable next week in the develop branch.,2017-07-11 02:54:11,2017-07-11 02:54:11
https://api.github.com/repos/hyperledger/iroha/issues/412,https://api.github.com/repos/hyperledger/iroha/issues/comments/314309915,https://github.com/hyperledger/iroha/issues/412#issuecomment-314309915,rchatsiri,I waiting the new source codes upload to upstream.,2017-07-11 03:04:20,2017-07-11 03:04:20
https://api.github.com/repos/hyperledger/iroha/issues/412,https://api.github.com/repos/hyperledger/iroha/issues/comments/327410665,https://github.com/hyperledger/iroha/issues/412#issuecomment-327410665,neewy,"Please, check new code base in develop branch. Thank you for your interest to the project!",2017-09-06 08:17:15,2017-09-06 08:17:15
https://api.github.com/repos/hyperledger/iroha/issues/405,https://api.github.com/repos/hyperledger/iroha/issues/comments/311954754,https://github.com/hyperledger/iroha/pull/405#issuecomment-311954754,motxx,Looks nice.,2017-06-29 12:42:52,2017-06-29 12:42:52
https://api.github.com/repos/hyperledger/iroha/issues/402,https://api.github.com/repos/hyperledger/iroha/issues/comments/311874137,https://github.com/hyperledger/iroha/pull/402#issuecomment-311874137,motxx,"This is some discussion about `executor()` and dao in our slack.
```
motxx
I think any solution is ok if it works correctly.

For CommandExecutor, my solution is here (but I don’t know it meets the design)
https://wandbox.org/permlink/xdjAMGCbX9QtGweJ

More simple, but I don’t know why it works:
https://wandbox.org/permlink/AStApdaGTLvM0ui3 (edited)

mizuki
Where will command's main logic be in ? (edited)

motxx
What is main logic? Maybe execute() or executeAddPeer() in CommandExecutor.

motxx
dao::Command can have method but, dao seems to have only data more like struct than class.

mizuki
I think main logic is in two place,
- variable declaration ( int z = 333 )
- executor()

motxx
If this should have only data (variables), executor() is ok. But If so, I want to change all dao::Hoge class -> struct.
https://github.com/hyperledger/iroha/blob/develop/libs/dao/commands/add_peer.hpp

But It may be confusing OOP or data oriented architecture.

mizuki
So I propose

class Command{
   virtual void executor() = 0;
}
```
Continue again in this PR.
**UPD** I added my impl at the top of the discussion for only clarifying the context.",2017-06-29 06:25:53,2017-06-29 08:28:48
https://api.github.com/repos/hyperledger/iroha/issues/402,https://api.github.com/repos/hyperledger/iroha/issues/comments/311875652,https://github.com/hyperledger/iroha/pull/402#issuecomment-311875652,MizukiSonoko,"I propose 
https://wandbox.org/permlink/Ge9TnAoQ9DGVtp5n
instead of @motxx 's propose",2017-06-29 06:35:26,2017-06-29 06:42:32
https://api.github.com/repos/hyperledger/iroha/issues/402,https://api.github.com/repos/hyperledger/iroha/issues/comments/311876906,https://github.com/hyperledger/iroha/pull/402#issuecomment-311876906,muratovv,"@motxx 
In current architecture, where dao is only structures without business logic. Dao _inpedenden_ from other parts. In your proposal connectedness increase because dao should know about business logic (wsv executions).

Think about internal changes in ametsuchi, for example internal scheme of indexes changed. In your proposal we should change two parts: indexes and dao. But in current architecture only indexes.

Also, unfortunately, in c++ not available parametric polymorphism. For make polymorphic behaviour on parameters Andrey write [library](https://github.com/hyperledger/iroha/pull/401) for it.",2017-06-29 06:43:04,2017-06-29 06:43:04
https://api.github.com/repos/hyperledger/iroha/issues/400,https://api.github.com/repos/hyperledger/iroha/issues/comments/311798155,https://github.com/hyperledger/iroha/pull/400#issuecomment-311798155,Warchant,"I started to work on consensus algorithm. 
To get rid of all code iroha, I started to write it at https://github.com/warchant/sumeragi",2017-06-28 21:31:35,2017-06-28 21:31:35
https://api.github.com/repos/hyperledger/iroha/issues/400,https://api.github.com/repos/hyperledger/iroha/issues/comments/311865163,https://github.com/hyperledger/iroha/pull/400#issuecomment-311865163,motxx,"@Warchant  I see. If completed to create simulator, can it be replaced with consensus stub? (Do they have same interfaces?)",2017-06-29 05:20:54,2017-06-29 05:21:53
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311610827,https://github.com/hyperledger/iroha/pull/399#issuecomment-311610827,muratovv,"@MizukiSonoko 
>I want to make best structure about
>* network/
>* torii/
>* processor/

As i correct understand ""network"" folder is about peer-to-peer communication, ""torii"" is only about server, and ""processor"" is about interaction with client?",2017-06-28 09:44:21,2017-06-28 09:44:21
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311618711,https://github.com/hyperledger/iroha/pull/399#issuecomment-311618711,MizukiSonoko,"I think ""network"" folder is a little fat,
but other is correct.
""torii"" is only about server(grpc + protobuf + dao),
""processor"" is about interaction with client ( invoke stateless, sent tx to ordering service...)",2017-06-28 10:18:07,2017-06-28 10:18:07
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311624710,https://github.com/hyperledger/iroha/pull/399#issuecomment-311624710,muratovv,"In terms of irohad ""processor"" folder looks very confusing, isn't it? I suppose that processor is a part of peer-client interaction.",2017-06-28 10:47:02,2017-06-28 10:47:02
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311633049,https://github.com/hyperledger/iroha/pull/399#issuecomment-311633049,MizukiSonoko,"> In terms of irohad ""processor"" folder looks very confusing, isn't it?  

I think so

> I suppose that processor is a part of peer-client interaction.  

What's peer-client interaction? 
It's like Torii(Interface) or ClientProcessor(Implemets)? 
",2017-06-28 11:29:51,2017-06-28 11:30:07
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311634318,https://github.com/hyperledger/iroha/pull/399#issuecomment-311634318,muratovv,">What's peer-client interaction?

All stuff that related to receive intents from user (queries and transactions) and provide response (notify from command/tx processors).

>It's like Torii(Interface) or ClientProcessor(Implemets)?

I suppose torii get this interface as own dependency. Like this:
`auto torii = Torii(ClientProcessor &processor)`",2017-06-28 11:36:09,2017-06-28 11:36:09
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311642435,https://github.com/hyperledger/iroha/pull/399#issuecomment-311642435,MizukiSonoko,"Ok, I understand it...
And I will change processor folder name before merging this pull req.",2017-06-28 12:16:49,2017-06-28 12:16:49
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311643312,https://github.com/hyperledger/iroha/pull/399#issuecomment-311643312,muratovv,May we should stay processors inside torii folder?  This will be more convenient with other modules and current understanding of irohad architecture.,2017-06-28 12:20:56,2017-06-28 12:20:56
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311643725,https://github.com/hyperledger/iroha/pull/399#issuecomment-311643725,MizukiSonoko,"If some processors is not used by other module. It's ok but
If other module uses some processors, we should separate processors from torii.
",2017-06-28 12:22:47,2017-06-28 12:22:47
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311644179,https://github.com/hyperledger/iroha/pull/399#issuecomment-311644179,muratovv,Processors currently use only in torii,2017-06-28 12:24:53,2017-06-28 12:24:53
https://api.github.com/repos/hyperledger/iroha/issues/399,https://api.github.com/repos/hyperledger/iroha/issues/comments/311644522,https://github.com/hyperledger/iroha/pull/399#issuecomment-311644522,MizukiSonoko,ok I will keep it,2017-06-28 12:26:21,2017-06-28 12:26:21
https://api.github.com/repos/hyperledger/iroha/issues/397,https://api.github.com/repos/hyperledger/iroha/issues/comments/311324553,https://github.com/hyperledger/iroha/pull/397#issuecomment-311324553,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=397) <br/>All committers have signed the CLA.,2017-06-27 10:57:17,2017-06-27 10:57:50
https://api.github.com/repos/hyperledger/iroha/issues/396,https://api.github.com/repos/hyperledger/iroha/issues/comments/311331503,https://github.com/hyperledger/iroha/pull/396#issuecomment-311331503,motxx,"Will `Application` be expected to consist of other all modules?
I'm concerned about regressions on peer service, synchronize and other components.",2017-06-27 11:32:42,2017-06-27 11:37:16
https://api.github.com/repos/hyperledger/iroha/issues/396,https://api.github.com/repos/hyperledger/iroha/issues/comments/311411782,https://github.com/hyperledger/iroha/pull/396#issuecomment-311411782,muratovv,"@motxx idea is global modules knows about other modules. Each module by itself separate services by responsibilities  and provide only part of interface.

For example, stateful validation should know about ametsuchi?
`Proposal validate(Proposal, Ametsuchi)`
But this is bad interface. For performing validation you should use only temporary database state (without affecting on blockstore) - interface will be:
`Proposal validate(Proposal, TemporaryWsv)`

We reduce responsibility of validate interface.

For using it in business logic you should invoke like this:
`// peer communication class`
`auto verified_proposal = validate(proposal, ametsuchi.getTemporaryWsv())`

So, what happens? Global module PeerCommunicationService know about ametsuchi, but parts like stateful validation works only with small part of it.",2017-06-27 16:27:27,2017-06-27 16:27:27
https://api.github.com/repos/hyperledger/iroha/issues/396,https://api.github.com/repos/hyperledger/iroha/issues/comments/311499819,https://github.com/hyperledger/iroha/pull/396#issuecomment-311499819,motxx,"I'm sorry, I pushed the close button by mistake.

@muratovv
Thanks, I understand. This interface looks nice for me.",2017-06-27 22:05:50,2017-06-28 00:58:58
https://api.github.com/repos/hyperledger/iroha/issues/396,https://api.github.com/repos/hyperledger/iroha/issues/comments/311528147,https://github.com/hyperledger/iroha/pull/396#issuecomment-311528147,MizukiSonoko,"In my opinion, and 
**-- In the future iroha, this is only memo --**
If there is application in hyperledger/iroha, There is `class Application` in libs/application. and it has
```
virtual void initialize();
virtual void commandParser(int argc,char* argv);
virtual void run();
...
```

and There is `class Irohad : private Application{}` in irohad/main/irohad.hpp.

I think Application is separated from irohad/main is better. 
but, Is it complex?
**-- --**
or 
I propose we use name `class Irohad` instead of `class Application` ",2017-06-28 01:06:59,2017-06-28 01:06:59
https://api.github.com/repos/hyperledger/iroha/issues/396,https://api.github.com/repos/hyperledger/iroha/issues/comments/311580508,https://github.com/hyperledger/iroha/pull/396#issuecomment-311580508,muratovv,"@MizukiSonoko 
I don't mind for renaming. Pls, commit changes in this branch.",2017-06-28 07:31:38,2017-06-28 07:31:38
https://api.github.com/repos/hyperledger/iroha/issues/396,https://api.github.com/repos/hyperledger/iroha/issues/comments/311581015,https://github.com/hyperledger/iroha/pull/396#issuecomment-311581015,MizukiSonoko,"Ok 
Can I rename like this?
`class Irohad` instead of `class Application`",2017-06-28 07:34:12,2017-06-28 07:34:12
https://api.github.com/repos/hyperledger/iroha/issues/396,https://api.github.com/repos/hyperledger/iroha/issues/comments/311581206,https://github.com/hyperledger/iroha/pull/396#issuecomment-311581206,muratovv,"Yes, u are.",2017-06-28 07:35:11,2017-06-28 07:35:11
https://api.github.com/repos/hyperledger/iroha/issues/396,https://api.github.com/repos/hyperledger/iroha/issues/comments/311584919,https://github.com/hyperledger/iroha/pull/396#issuecomment-311584919,muratovv,"@motxx 
Could you review and merge it?",2017-06-28 07:52:46,2017-06-28 07:52:46
https://api.github.com/repos/hyperledger/iroha/issues/394,https://api.github.com/repos/hyperledger/iroha/issues/comments/311387109,https://github.com/hyperledger/iroha/pull/394#issuecomment-311387109,MizukiSonoko,"We should mind it, but not at that time....",2017-06-27 15:03:53,2017-06-27 15:03:53
https://api.github.com/repos/hyperledger/iroha/issues/393,https://api.github.com/repos/hyperledger/iroha/issues/comments/311387102,https://github.com/hyperledger/iroha/pull/393#issuecomment-311387102,satellitex,"Do we use `rx` after all?
",2017-06-27 15:03:52,2017-06-27 15:03:52
https://api.github.com/repos/hyperledger/iroha/issues/393,https://api.github.com/repos/hyperledger/iroha/issues/comments/311398216,https://github.com/hyperledger/iroha/pull/393#issuecomment-311398216,muratovv,"I see event driven architecture. I guess we will use rx, but may be change rxcpp with other implementation.",2017-06-27 15:40:10,2017-06-27 15:40:10
https://api.github.com/repos/hyperledger/iroha/issues/393,https://api.github.com/repos/hyperledger/iroha/issues/comments/311519153,https://github.com/hyperledger/iroha/pull/393#issuecomment-311519153,motxx,"Rx is convenient for event-driven application so I like it.
But I'm wondering if there are some problems like followings:
1. Does it have the same functions as other rx libraries (like RxJava)?
2. Is there something easy to mistake for developers who are the first time user of rx?
3. If we mistake to use it, does much compile-error that we hardly to read occurs?",2017-06-28 00:01:59,2017-06-28 00:30:12
https://api.github.com/repos/hyperledger/iroha/issues/393,https://api.github.com/repos/hyperledger/iroha/issues/comments/311581853,https://github.com/hyperledger/iroha/pull/393#issuecomment-311581853,muratovv,"@motxx 
Yes, rxcpp is risky. My current vision of architecture don't imply using rx.operators (like map, fmap, filter). Now we use observable - subscriber model with error and complete propagation (onError(), onComplete()).",2017-06-28 07:38:20,2017-06-28 07:38:20
https://api.github.com/repos/hyperledger/iroha/issues/391,https://api.github.com/repos/hyperledger/iroha/issues/comments/310997248,https://github.com/hyperledger/iroha/pull/391#issuecomment-310997248,muratovv,"@MizukiSonoko 
> Torii should invoke stateless-validator

Yes, you are totally correct.
But interfaces it is about usage, but not behaviour. Implementation of transaction processor will be invoke stateful validation. After validation it push in notify() observable response (transaction send to network or stateless validation broken).

>Torii should send valid tx to ordering service.

It is totally correct too. But also, it is about behaviour. After validation transaction processor implementation will be share it to instance of class called ""PeerCommunicationService"" for invoke method ""propagate_transaction"".

>so QueryProcessor and TransactionProcessor is not torii's knowledge.

As i know before torii was only grpc, but organization of pipeline processing is very important. Class TransactionProcessor is start point of transaction pipeline., and QueryProcessor is start point of query pipeline, accordingly.",2017-06-26 08:36:14,2017-06-26 08:37:28
https://api.github.com/repos/hyperledger/iroha/issues/391,https://api.github.com/repos/hyperledger/iroha/issues/comments/311003102,https://github.com/hyperledger/iroha/pull/391#issuecomment-311003102,MizukiSonoko,"@muratovv 
Ok, I see.
but I think Torii receive tx as can change Iroha's database. so a query is not in Torii
and I propose this architecture/
```
torii/processor.cpp <= prev torii/impl/processor.cpp
pipeline/query_processor.hpp <= prev torii/query_processor.hpp
pipeline/transaction_processor.hpp <= prev torii/transaction_processor.hpp
```

Torii's behaviour is in torii/processor.cpp.
pipeline processing component is in pipeline/
pipeline function is too fat and important, so I want to make it one module",2017-06-26 09:02:21,2017-06-26 09:55:19
https://api.github.com/repos/hyperledger/iroha/issues/391,https://api.github.com/repos/hyperledger/iroha/issues/comments/311011292,https://github.com/hyperledger/iroha/pull/391#issuecomment-311011292,muratovv,"@MizukiSonoko 
For me not clear what is responsibility of torii in your case?",2017-06-26 09:38:24,2017-06-26 09:38:24
https://api.github.com/repos/hyperledger/iroha/issues/391,https://api.github.com/repos/hyperledger/iroha/issues/comments/311015718,https://github.com/hyperledger/iroha/pull/391#issuecomment-311015718,MizukiSonoko,"I think responsibility of Torii is 
- receive tx as can change Iroha's database
- if they received valid tx, they reply `ok`
- if they received invalid tx, they reply `reject`

Torii is consist of TransactionProcessor
but TransactionProcessor, QueryProcessor is not Torii's knowledge",2017-06-26 09:57:57,2017-06-26 09:57:57
https://api.github.com/repos/hyperledger/iroha/issues/391,https://api.github.com/repos/hyperledger/iroha/issues/comments/311029658,https://github.com/hyperledger/iroha/pull/391#issuecomment-311029658,muratovv,"@MizukiSonoko 
>receive tx as can change Iroha's database

Torii can't change database. It may say for system process transaction. What should do system not own responsibility.

>if they received valid tx, they reply ok
>if they received invalid tx, they reply reject

It is responsibility of transaction processor.

In my opinion torii (as grpc or client server) _use_ client processor for starting pipeline. How deserialize byte stream in dao it own deal. But organization pipeline and response on Transaction/Query interface",2017-06-26 11:08:35,2017-06-26 11:08:35
https://api.github.com/repos/hyperledger/iroha/issues/391,https://api.github.com/repos/hyperledger/iroha/issues/comments/311031094,https://github.com/hyperledger/iroha/pull/391#issuecomment-311031094,MizukiSonoko,"Torii is an interface.
TransactionProcessor changes Iroha database.
",2017-06-26 11:16:37,2017-06-26 11:16:37
https://api.github.com/repos/hyperledger/iroha/issues/391,https://api.github.com/repos/hyperledger/iroha/issues/comments/311125278,https://github.com/hyperledger/iroha/pull/391#issuecomment-311125278,muratovv,"> TransactionProcessor changes Iroha database.

Tx processor hide what should system do. But in fact there is no directly affecting on database. Transaction processor use stateful validation and pass tx to PeerCommuniationService.",2017-06-26 17:22:15,2017-06-26 17:22:15
https://api.github.com/repos/hyperledger/iroha/issues/390,https://api.github.com/repos/hyperledger/iroha/issues/comments/310842329,https://github.com/hyperledger/iroha/pull/390#issuecomment-310842329,Warchant,"We propose the following solution:
```C++
types.h:

template <size_t size>
using bytes_t = std::array<uint8_t, size>;

namespace ed25519{
  using pubkey_t = bytes_t <32>;
  using sig_t = bytes_t <64>; 
  using privkey_t = bytes_t <64>;
}

// and we define utils, to work with these objects

// because to_string is in std::
namespace iroha {
  template <size_t size>
  std::string to_string(const bytes_t<size> & b){
    return std::string{b.begin(), b.end()};
  }
}
```

And then, we write just *functions* which receive public key, private key, whatever.

Then it can be used as:
```C++
ed25519::pubkey_t pub = <...>;
std::string str = iroha::to_string(pub);
```

UPD: we will write this",2017-06-24 14:38:12,2017-06-24 14:42:47
https://api.github.com/repos/hyperledger/iroha/issues/390,https://api.github.com/repos/hyperledger/iroha/issues/comments/310860113,https://github.com/hyperledger/iroha/pull/390#issuecomment-310860113,Warchant,"I added `types.h` but unfortunately I  can't check if it compiles or not, I have some problems with `libcurl` and it does not want to download gflags...

I added type `blob_t` which can be used as:
```C++
blob_t <32> b; // fixed blob of 32 bytes

using hash256_t = blob_t<32>;

// blob_t is actually std::array<uint8_t, size>
// but it is extended with the following functions:

blob_t<4> a{50,51,52,53};

std::cout << blob_t<4>::size(); // 4, because size is 4. std::array has no static size function
std::cout << a::size(); // 4
std::cout << a.size(); // 4. static function is needed to get the size of type, not of array instance
std::cout << a.to_string(); // 2345
std::cout << a.to_hexstr(); // 50515253
std::cout << a.to_base64(); // MTIzNA==

// also there is another function, to_blob:
std::string z = ""1234"";
hash256_t hash = to_blob <hash256_t::size()> (z); // throws runtime_error, because to_blob expects string with length 32 bytes

blob_t<4> x = to_blob<4>(z); // z will be casted to blob_t<4>, because z.size is 4 

```

`blob_t` should be used to represent blobs of fixed size:
- hash lengths
- signatures
- keys
- etc

and all fixed-size types should be placed in `libs/common/types.h`

",2017-06-24 19:12:30,2017-06-24 19:23:59
https://api.github.com/repos/hyperledger/iroha/issues/390,https://api.github.com/repos/hyperledger/iroha/issues/comments/310870831,https://github.com/hyperledger/iroha/pull/390#issuecomment-310870831,motxx,"What is the purpose of BOOST SML lib?
I propose that we separate it from this PR and create new PR to introduce boost.sml library (with PR template).

Other changes about crypto seem good to me.",2017-06-24 23:02:24,2017-06-24 23:39:15
https://api.github.com/repos/hyperledger/iroha/issues/390,https://api.github.com/repos/hyperledger/iroha/issues/comments/310897288,https://github.com/hyperledger/iroha/pull/390#issuecomment-310897288,Warchant,"@motxx I was playing with state machines and forgot to remove sml from libs, sorry. it is not necessary (at least now)",2017-06-25 11:27:33,2017-06-25 11:27:33
https://api.github.com/repos/hyperledger/iroha/issues/390,https://api.github.com/repos/hyperledger/iroha/issues/comments/310963935,https://github.com/hyperledger/iroha/pull/390#issuecomment-310963935,MizukiSonoko,"Maybe not important, This is memo
 I confused Microsoft/GSL and GNU/GSL...  😭 
https://www.gnu.org/software/gsl/",2017-06-26 04:58:38,2017-06-26 04:58:38
https://api.github.com/repos/hyperledger/iroha/issues/390,https://api.github.com/repos/hyperledger/iroha/issues/comments/311516466,https://github.com/hyperledger/iroha/pull/390#issuecomment-311516466,motxx,"I don't know whether we should introduce Microsoft/GSL for now.
`array_view` and `span` seems convenient, but is it needed in current implementation?
Actually, for now I think it is sufficient to use `blob_t`, `pubkey_t`, ... based of `std::array`.",2017-06-27 23:43:40,2017-06-28 01:20:13
https://api.github.com/repos/hyperledger/iroha/issues/390,https://api.github.com/repos/hyperledger/iroha/issues/comments/311672034,https://github.com/hyperledger/iroha/pull/390#issuecomment-311672034,motxx,"Now, this PR can be merged.",2017-06-28 14:12:18,2017-06-28 14:12:18
https://api.github.com/repos/hyperledger/iroha/issues/390,https://api.github.com/repos/hyperledger/iroha/issues/comments/311797843,https://github.com/hyperledger/iroha/pull/390#issuecomment-311797843,Warchant,":+1: 
",2017-06-28 21:30:17,2017-06-28 21:30:17
https://api.github.com/repos/hyperledger/iroha/issues/388,https://api.github.com/repos/hyperledger/iroha/issues/comments/310793224,https://github.com/hyperledger/iroha/pull/388#issuecomment-310793224,MizukiSonoko,Nice!,2017-06-23 23:20:19,2017-06-23 23:20:19
https://api.github.com/repos/hyperledger/iroha/issues/388,https://api.github.com/repos/hyperledger/iroha/issues/comments/310809971,https://github.com/hyperledger/iroha/pull/388#issuecomment-310809971,takemiyamakoto,I think it is okay to merge.,2017-06-24 03:11:38,2017-06-24 03:11:38
https://api.github.com/repos/hyperledger/iroha/issues/388,https://api.github.com/repos/hyperledger/iroha/issues/comments/310917725,https://github.com/hyperledger/iroha/pull/388#issuecomment-310917725,MizukiSonoko,Thanks! @lebdron !,2017-06-25 17:58:14,2017-06-25 17:58:14
https://api.github.com/repos/hyperledger/iroha/issues/387,https://api.github.com/repos/hyperledger/iroha/issues/comments/310976201,https://github.com/hyperledger/iroha/pull/387#issuecomment-310976201,MizukiSonoko,@motxx Is this pull red needed?  (maybe duplicated),2017-06-26 06:43:14,2017-06-26 06:43:14
https://api.github.com/repos/hyperledger/iroha/issues/386,https://api.github.com/repos/hyperledger/iroha/issues/comments/311592199,https://github.com/hyperledger/iroha/pull/386#issuecomment-311592199,MizukiSonoko,"In now, It's not needed... 😢 ",2017-06-28 08:26:17,2017-06-28 08:26:17
https://api.github.com/repos/hyperledger/iroha/issues/386,https://api.github.com/repos/hyperledger/iroha/issues/comments/311592729,https://github.com/hyperledger/iroha/pull/386#issuecomment-311592729,motxx,Please do not delete this branch. The parts of this PR will be used in a few days.,2017-06-28 08:28:31,2017-06-28 08:30:24
https://api.github.com/repos/hyperledger/iroha/issues/386,https://api.github.com/repos/hyperledger/iroha/issues/comments/311593691,https://github.com/hyperledger/iroha/pull/386#issuecomment-311593691,MizukiSonoko,"Of course, I will use it 
I'll be back......

 ⛓  👍  ⛓
🔥🔥🔥🔥🔥",2017-06-28 08:32:41,2017-06-28 08:32:49
https://api.github.com/repos/hyperledger/iroha/issues/385,https://api.github.com/repos/hyperledger/iroha/issues/comments/310966642,https://github.com/hyperledger/iroha/pull/385#issuecomment-310966642,MizukiSonoko,"In my opinion, 
I want to use `.` instead of `|`
like
```
    rx::observable<>::create<int>([](rx::subscriber<int> dest) {
        dest.on_next(1);
        dest.on_next(10);
        dest.on_next(100);
    }).filter([](int i) {
        return i != 10;
    }).map(/* Selector s */[](int i) {
        std::cout << i << std::endl;
        return i * 2;
    }).subscribe([](int i) {
        std::cout << i << std::endl;
    });
```

Because other languages like ruby and scala use `.`.",2017-06-26 05:25:44,2017-06-26 05:26:47
https://api.github.com/repos/hyperledger/iroha/issues/385,https://api.github.com/repos/hyperledger/iroha/issues/comments/311002682,https://github.com/hyperledger/iroha/pull/385#issuecomment-311002682,muratovv,">I want to use . instead of |

Looks nice. We can use it.",2017-06-26 09:00:35,2017-06-26 09:00:35
https://api.github.com/repos/hyperledger/iroha/issues/384,https://api.github.com/repos/hyperledger/iroha/issues/comments/310463315,https://github.com/hyperledger/iroha/pull/384#issuecomment-310463315,MizukiSonoko,Why we use `rx c++` instead of `observable`? ,2017-06-22 18:26:56,2017-06-22 18:26:56
https://api.github.com/repos/hyperledger/iroha/issues/382,https://api.github.com/repos/hyperledger/iroha/issues/comments/310392165,https://github.com/hyperledger/iroha/pull/382#issuecomment-310392165,motxx,"There remains still ordering service's server. But PR is a little fat, so I'll stop.
Also, suddenly `block_index_test` failed. (sometimes it happens) The cause is unclear.
https://circleci.com/gh/hyperledger/iroha/2615",2017-06-22 14:12:01,2017-06-22 14:17:12
https://api.github.com/repos/hyperledger/iroha/issues/378,https://api.github.com/repos/hyperledger/iroha/issues/comments/310046941,https://github.com/hyperledger/iroha/pull/378#issuecomment-310046941,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=378) <br/>All committers have signed the CLA.,2017-06-21 11:15:29,2017-06-21 11:15:43
https://api.github.com/repos/hyperledger/iroha/issues/376,https://api.github.com/repos/hyperledger/iroha/issues/comments/309975634,https://github.com/hyperledger/iroha/pull/376#issuecomment-309975634,CLAassistant,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/hyperledger/iroha?pullRequest=376) <br/>All committers have signed the CLA.,2017-06-21 06:24:12,2017-06-21 06:25:22
https://api.github.com/repos/hyperledger/iroha/issues/368,https://api.github.com/repos/hyperledger/iroha/issues/comments/309201487,https://github.com/hyperledger/iroha/pull/368#issuecomment-309201487,rjones-lf,"this should be better, no?",2017-06-17 08:22:12,2017-06-17 08:22:12
https://api.github.com/repos/hyperledger/iroha/issues/364,https://api.github.com/repos/hyperledger/iroha/issues/comments/308094584,https://github.com/hyperledger/iroha/pull/364#issuecomment-308094584,Warchant,"Ok I will merge, but I will fix schema in some places",2017-06-13 12:04:06,2017-06-13 12:04:06
https://api.github.com/repos/hyperledger/iroha/issues/362,https://api.github.com/repos/hyperledger/iroha/issues/comments/309194274,https://github.com/hyperledger/iroha/issues/362#issuecomment-309194274,takemiyamakoto,@l4l Can you get this working in the new develop branch?,2017-06-17 05:15:38,2017-06-17 05:15:38
https://api.github.com/repos/hyperledger/iroha/issues/362,https://api.github.com/repos/hyperledger/iroha/issues/comments/327411063,https://github.com/hyperledger/iroha/issues/362#issuecomment-327411063,neewy,Transferred to JIRA: https://soramitsu.atlassian.net/browse/IR-370,2017-09-06 08:18:47,2017-09-06 08:18:47
https://api.github.com/repos/hyperledger/iroha/issues/361,https://api.github.com/repos/hyperledger/iroha/issues/comments/306993351,https://github.com/hyperledger/iroha/issues/361#issuecomment-306993351,MizukiSonoko,"Ok thanks 
In now, WIP in this pull request.  but It happens ci-error
https://github.com/hyperledger/iroha/pull/349",2017-06-08 04:13:07,2017-06-08 04:15:36
https://api.github.com/repos/hyperledger/iroha/issues/361,https://api.github.com/repos/hyperledger/iroha/issues/comments/310873687,https://github.com/hyperledger/iroha/issues/361#issuecomment-310873687,takemiyamakoto,"This scan should probably be run again on the develop branch, as a lot has changed.",2017-06-25 00:16:14,2017-06-25 00:16:14
https://api.github.com/repos/hyperledger/iroha/issues/361,https://api.github.com/repos/hyperledger/iroha/issues/comments/314276868,https://github.com/hyperledger/iroha/issues/361#issuecomment-314276868,tkuhrt,"@takemiyamakoto : is this true for all Iroha repositories or just this one? Meaning, if I pulled the develop branch for all Iroha repositories listed above would that be the right scan to do?",2017-07-10 23:19:16,2017-07-10 23:19:16
https://api.github.com/repos/hyperledger/iroha/issues/361,https://api.github.com/repos/hyperledger/iroha/issues/comments/314624305,https://github.com/hyperledger/iroha/issues/361#issuecomment-314624305,takemiyamakoto,Just this repository.,2017-07-12 02:11:27,2017-07-12 02:11:27
https://api.github.com/repos/hyperledger/iroha/issues/361,https://api.github.com/repos/hyperledger/iroha/issues/comments/321964038,https://github.com/hyperledger/iroha/issues/361#issuecomment-321964038,neewy,"Tracy @tkuhrt, can you please help us and run this scan once again? Thanks",2017-08-12 07:36:07,2017-08-12 07:36:17
https://api.github.com/repos/hyperledger/iroha/issues/361,https://api.github.com/repos/hyperledger/iroha/issues/comments/327411454,https://github.com/hyperledger/iroha/issues/361#issuecomment-327411454,neewy,"Tracy, if this problem remains, please reopen this issue. I will close it since there was no answer for a month 😃 ",2017-09-06 08:20:27,2017-09-06 08:20:27
https://api.github.com/repos/hyperledger/iroha/issues/360,https://api.github.com/repos/hyperledger/iroha/issues/comments/307032294,https://github.com/hyperledger/iroha/pull/360#issuecomment-307032294,MizukiSonoko,SO we should use clang++ instead of g++ ? ,2017-06-08 08:14:03,2017-06-08 08:14:03
https://api.github.com/repos/hyperledger/iroha/issues/360,https://api.github.com/repos/hyperledger/iroha/issues/comments/307087739,https://github.com/hyperledger/iroha/pull/360#issuecomment-307087739,l4l,"The fuzzer is highly depends on the sanitizers and I don't really sure that gcc have required ones, I'll give it a look
**upd:** As I guess yes, the gcc in that case [less powerful](https://clang.llvm.org/docs/SanitizerCoverage.html). In few words: gcc worse in tracing for sanitizer (e.g no data trace at all)
But yeah, the gcc still can be used (after my commit) but in inefficient way",2017-06-08 12:25:43,2017-06-08 12:58:24
https://api.github.com/repos/hyperledger/iroha/issues/360,https://api.github.com/repos/hyperledger/iroha/issues/comments/307105743,https://github.com/hyperledger/iroha/pull/360#issuecomment-307105743,MizukiSonoko,"Ok
fuzzier test is optional, I saw
And we should support macOS
So we will support clang++",2017-06-08 13:37:50,2017-06-08 13:37:50
https://api.github.com/repos/hyperledger/iroha/issues/359,https://api.github.com/repos/hyperledger/iroha/issues/comments/321964124,https://github.com/hyperledger/iroha/issues/359#issuecomment-321964124,neewy,"Sure, we need to resolve impediments related to libraries first. Please, follow the updates, as we want to build Iroha in osx environment.",2017-08-12 07:37:50,2017-08-12 07:37:50
https://api.github.com/repos/hyperledger/iroha/issues/359,https://api.github.com/repos/hyperledger/iroha/issues/comments/321964260,https://github.com/hyperledger/iroha/issues/359#issuecomment-321964260,djKooks,@neewy Thanks!,2017-08-12 07:41:29,2017-08-12 07:41:29
https://api.github.com/repos/hyperledger/iroha/issues/358,https://api.github.com/repos/hyperledger/iroha/issues/comments/306620709,https://github.com/hyperledger/iroha/issues/358#issuecomment-306620709,motxx,"Sorry for late reply. I updated wiki. Please try this.
`docker run -it --rm  hyperledger/iroha-docker sh -c ""/usr/local/iroha/bin/test_sumeragi $TARGET""`",2017-06-06 21:20:05,2017-06-06 21:20:05
https://api.github.com/repos/hyperledger/iroha/issues/358,https://api.github.com/repos/hyperledger/iroha/issues/comments/308930944,https://github.com/hyperledger/iroha/issues/358#issuecomment-308930944,takemiyamakoto,This will be updated once we have a stable base version.,2017-06-16 04:35:54,2017-06-16 04:35:54
https://api.github.com/repos/hyperledger/iroha/issues/353,https://api.github.com/repos/hyperledger/iroha/issues/comments/304182371,https://github.com/hyperledger/iroha/issues/353#issuecomment-304182371,Warchant,"Correct is `hyperledger/iroha-dev`, thanks. 

UPD:
I don't have access to push this image. Lets wait until I get it :1234: ",2017-05-26 03:34:22,2017-05-26 05:20:05
https://api.github.com/repos/hyperledger/iroha/issues/353,https://api.github.com/repos/hyperledger/iroha/issues/comments/304227212,https://github.com/hyperledger/iroha/issues/353#issuecomment-304227212,oimou,"Thanks for your quick reply! Should I close this issue after the image is pushed, or leave it open until these are fixed?",2017-05-26 08:45:31,2017-05-26 08:45:31
https://api.github.com/repos/hyperledger/iroha/issues/353,https://api.github.com/repos/hyperledger/iroha/issues/comments/327411755,https://github.com/hyperledger/iroha/issues/353#issuecomment-327411755,neewy,Fixed. Check `sh scripts/run-iroha-dev.sh` in develop branch,2017-09-06 08:21:48,2017-09-06 08:21:48
https://api.github.com/repos/hyperledger/iroha/issues/351,https://api.github.com/repos/hyperledger/iroha/issues/comments/303457767,https://github.com/hyperledger/iroha/pull/351#issuecomment-303457767,tkyonezu,"I'll copy sonar-scanner to /opt directory in docker/tiny container, and add change to JAVA_HOME environment variable. So, this pull request close and I'll make new pull request again.",2017-05-23 16:29:36,2017-05-23 16:29:36
https://api.github.com/repos/hyperledger/iroha/issues/350,https://api.github.com/repos/hyperledger/iroha/issues/comments/302894667,https://github.com/hyperledger/iroha/issues/350#issuecomment-302894667,l4l,"I guess, this can be an issue with the flatbuffers either than grpc
nevertheless we should check their versions

Also would be good to honor installed fbs, if present",2017-05-20 19:47:02,2017-05-20 20:02:57
https://api.github.com/repos/hyperledger/iroha/issues/350,https://api.github.com/repos/hyperledger/iroha/issues/comments/302914446,https://github.com/hyperledger/iroha/issues/350#issuecomment-302914446,motxx,"I guess, this is problem with flatbufers, too.

grpc latest release version is v1.3.2: http://grpc.io/release
In latest version, grpc uses `ClientAsyncResponseReader ctor`
  - https://github.com/grpc/grpc/blob/v1.3.2/include/grpc++/impl/codegen/async_unary_call.h#L62

In master version, grpc uses `ClientAsyncResponseReader::Create`
  - https://github.com/grpc/grpc/blob/master/include/grpc++/impl/codegen/async_unary_call.h#L94

flatbuffers support grpc master branch in this commit:
  - https://github.com/google/flatbuffers/commit/9aeeddf5ac31c36cd5cf0e8b56f387eb942cd1ab

grpc master branch is being hard committed. I think it is better to use grpc released version.

To solve this problem, I'm using following cherry-picked flatbuffer master branch:
https://github.com/google/flatbuffers/commit/c7bfe06c54bcd43312ff017e8ca32bc54833d524
",2017-05-21 04:27:08,2017-05-22 05:04:32
https://api.github.com/repos/hyperledger/iroha/issues/348,https://api.github.com/repos/hyperledger/iroha/issues/comments/302634452,https://github.com/hyperledger/iroha/pull/348#issuecomment-302634452,MizukiSonoko,I was stupid as don't know how to write CMakeLists command 🙇 🙇 🙇 ,2017-05-19 07:49:41,2017-05-19 07:49:41
https://api.github.com/repos/hyperledger/iroha/issues/333,https://api.github.com/repos/hyperledger/iroha/issues/comments/300987384,https://github.com/hyperledger/iroha/pull/333#issuecomment-300987384,motxx,Thank you for your contribution!,2017-05-12 05:29:07,2017-05-12 05:29:07
https://api.github.com/repos/hyperledger/iroha/issues/332,https://api.github.com/repos/hyperledger/iroha/issues/comments/300964811,https://github.com/hyperledger/iroha/pull/332#issuecomment-300964811,motxx,Thanks!,2017-05-12 02:08:32,2017-05-12 02:08:32
https://api.github.com/repos/hyperledger/iroha/issues/328,https://api.github.com/repos/hyperledger/iroha/issues/comments/300414674,https://github.com/hyperledger/iroha/pull/328#issuecomment-300414674,motxx,Thanks! Could you sign CLAHub?,2017-05-10 08:38:12,2017-05-10 08:38:12
https://api.github.com/repos/hyperledger/iroha/issues/328,https://api.github.com/repos/hyperledger/iroha/issues/comments/300420267,https://github.com/hyperledger/iroha/pull/328#issuecomment-300420267,SasagawaHiroshi,Sorry. I signed CLAHub.,2017-05-10 09:00:25,2017-05-10 09:00:25
https://api.github.com/repos/hyperledger/iroha/issues/328,https://api.github.com/repos/hyperledger/iroha/issues/comments/300427887,https://github.com/hyperledger/iroha/pull/328#issuecomment-300427887,motxx,"It looks good to me. Thanks, appreciate!",2017-05-10 09:29:19,2017-05-10 09:29:19
https://api.github.com/repos/hyperledger/iroha/issues/327,https://api.github.com/repos/hyperledger/iroha/issues/comments/300388518,https://github.com/hyperledger/iroha/issues/327#issuecomment-300388518,motxx,"Thanks for your finding!

`detail::LOG_LEVEL` is set by `logger::setLogLevel()` but suppressing debug log doesn't work because `detail::LOG_LEVEL` is in the header file(`logger.hpp`).
https://github.com/hyperledger/iroha/blob/develop/core/utils/logger.hpp#L29-L36

It works correctly if `detail::LOG_LEVEL` and `void setLogLevel(LogLevel)` are moved to `logger.cpp`. 

```diff
--- a/core/utils/logger.hpp
+++ b/core/utils/logger.hpp
-namespace detail {
-static LogLevel LOG_LEVEL = LogLevel::Debug;
-}
-
-inline void setLogLevel(LogLevel lv) {
-  detail::LOG_LEVEL = lv;
-  spdlog::set_level((spdlog::level::level_enum)lv);
-}
+void setLogLevel(LogLevel);
```

```diff
--- a/core/utils/logger.cpp
+++ b/core/utils/logger.cpp
+namespace detail {
+LogLevel LOG_LEVEL = LogLevel::Debug;
+}
+
+void setLogLevel(LogLevel lv) {
+  detail::LOG_LEVEL = lv;
+  spdlog::set_level((spdlog::level::level_enum)lv);
+}
```

If possible, could you create PR for develop branch?",2017-05-10 06:31:20,2017-05-10 06:35:57
https://api.github.com/repos/hyperledger/iroha/issues/327,https://api.github.com/repos/hyperledger/iroha/issues/comments/300399911,https://github.com/hyperledger/iroha/issues/327#issuecomment-300399911,SasagawaHiroshi,OK! I'll try.,2017-05-10 07:31:43,2017-05-10 07:31:43
https://api.github.com/repos/hyperledger/iroha/issues/320,https://api.github.com/repos/hyperledger/iroha/issues/comments/298860299,https://github.com/hyperledger/iroha/pull/320#issuecomment-298860299,takemiyamakoto,💮,2017-05-03 09:14:24,2017-05-03 09:14:24
https://api.github.com/repos/hyperledger/iroha/issues/320,https://api.github.com/repos/hyperledger/iroha/issues/comments/298936924,https://github.com/hyperledger/iroha/pull/320#issuecomment-298936924,MizukiSonoko,========== Pause ========== ,2017-05-03 14:58:53,2017-05-03 14:59:36
https://api.github.com/repos/hyperledger/iroha/issues/320,https://api.github.com/repos/hyperledger/iroha/issues/comments/299071231,https://github.com/hyperledger/iroha/pull/320#issuecomment-299071231,takemiyamakoto,"I think if we go with 1.0.0 versioning, the correct term is *beta*. Which is fine. Other projects have been in *beta* stage for months. I think the code base can benefit from a merge, as the current master has been greatly improved upon.",2017-05-04 00:23:19,2017-05-04 00:24:36
https://api.github.com/repos/hyperledger/iroha/issues/320,https://api.github.com/repos/hyperledger/iroha/issues/comments/299093080,https://github.com/hyperledger/iroha/pull/320#issuecomment-299093080,MizukiSonoko,"This marge's benefit is many developer can develop with flatbuffers. So, we should decide best name v1.0 or beta or ...
And I want many people to develop iroha.",2017-05-04 04:09:56,2017-05-04 04:34:21
https://api.github.com/repos/hyperledger/iroha/issues/320,https://api.github.com/repos/hyperledger/iroha/issues/comments/299552354,https://github.com/hyperledger/iroha/pull/320#issuecomment-299552354,l4l,logs: https://gist.github.com/l4l/8c13236c715c56d711b70e4978db57f1,2017-05-05 19:16:21,2017-05-05 19:48:25
https://api.github.com/repos/hyperledger/iroha/issues/320,https://api.github.com/repos/hyperledger/iroha/issues/comments/299595862,https://github.com/hyperledger/iroha/pull/320#issuecomment-299595862,motxx,@l4l  Is gRPC latest release version?,2017-05-05 23:11:19,2017-05-05 23:11:19
https://api.github.com/repos/hyperledger/iroha/issues/320,https://api.github.com/repos/hyperledger/iroha/issues/comments/299666801,https://github.com/hyperledger/iroha/pull/320#issuecomment-299666801,l4l,"@motxx hm, that can be a problem, right
There's a trouble that in arch linux they've updated openssl, so grpc [became incompatible](https://github.com/grpc/grpc/issues/8801) -_-. Trying to fix that issue",2017-05-06 21:24:11,2017-05-06 21:24:11
https://api.github.com/repos/hyperledger/iroha/issues/320,https://api.github.com/repos/hyperledger/iroha/issues/comments/299682995,https://github.com/hyperledger/iroha/pull/320#issuecomment-299682995,tkyonezu,"@l4l @motxx I also aply patch on gRPC following to #8801 of gRPC's OpenSSL Issue, which commented by @l4l. For previous version of Iroha, I'm using [this patch](https://github.com/tkyonezu/iroha-docker-rpi/blob/master/rpi-iroha-dev/Dockerfile) aply to gRPC.
",2017-05-07 05:14:05,2017-05-07 05:14:05
https://api.github.com/repos/hyperledger/iroha/issues/317,https://api.github.com/repos/hyperledger/iroha/issues/comments/298842144,https://github.com/hyperledger/iroha/pull/317#issuecomment-298842144,MizukiSonoko,"Sorry, I miss",2017-05-03 07:37:47,2017-05-03 07:37:47
https://api.github.com/repos/hyperledger/iroha/issues/316,https://api.github.com/repos/hyperledger/iroha/issues/comments/298826005,https://github.com/hyperledger/iroha/pull/316#issuecomment-298826005,satellitex,****,2017-05-03 05:29:20,2017-05-03 05:29:20
https://api.github.com/repos/hyperledger/iroha/issues/309,https://api.github.com/repos/hyperledger/iroha/issues/comments/298598689,https://github.com/hyperledger/iroha/pull/309#issuecomment-298598689,MizukiSonoko,Sorry I miss pull request. not master ;),2017-05-02 10:33:29,2017-05-02 10:33:29
https://api.github.com/repos/hyperledger/iroha/issues/300,https://api.github.com/repos/hyperledger/iroha/issues/comments/327415534,https://github.com/hyperledger/iroha/issues/300#issuecomment-327415534,neewy,As part of this user story https://soramitsu.atlassian.net/browse/IR-358 we plan to check the state of network.,2017-09-06 08:37:13,2017-09-06 08:37:13
https://api.github.com/repos/hyperledger/iroha/issues/292,https://api.github.com/repos/hyperledger/iroha/issues/comments/298841497,https://github.com/hyperledger/iroha/pull/292#issuecomment-298841497,satellitex,"TODO
 - Ametsuchi 's function `getTransaction( index )`
 -  `rpc_service getTx( ip, index ) : TransactionRespone;` ",2017-05-03 07:34:03,2017-05-03 07:45:26
https://api.github.com/repos/hyperledger/iroha/issues/285,https://api.github.com/repos/hyperledger/iroha/issues/comments/299095571,https://github.com/hyperledger/iroha/issues/285#issuecomment-299095571,motxx,Finihsed,2017-05-04 04:39:33,2017-05-04 04:39:33
https://api.github.com/repos/hyperledger/iroha/issues/281,https://api.github.com/repos/hyperledger/iroha/issues/comments/298846516,https://github.com/hyperledger/iroha/issues/281#issuecomment-298846516,motxx,Library assumes fixed length. This issue seems no problem.,2017-05-03 08:03:59,2017-05-03 08:03:59
https://api.github.com/repos/hyperledger/iroha/issues/280,https://api.github.com/repos/hyperledger/iroha/issues/comments/296464934,https://github.com/hyperledger/iroha/pull/280#issuecomment-296464934,satellitex,Please review it.,2017-04-23 17:42:15,2017-04-23 17:42:15
https://api.github.com/repos/hyperledger/iroha/issues/278,https://api.github.com/repos/hyperledger/iroha/issues/comments/296669048,https://github.com/hyperledger/iroha/issues/278#issuecomment-296669048,nothingcosmos,"JAVA_HOME setting required

ex)
$ echo $JAVA_HOPME
/usr/lib/jvm/default-java",2017-04-24 13:31:16,2017-04-24 13:31:16
https://api.github.com/repos/hyperledger/iroha/issues/278,https://api.github.com/repos/hyperledger/iroha/issues/comments/297452209,https://github.com/hyperledger/iroha/issues/278#issuecomment-297452209,motxx,"Thank you for this issue. It might be something wrong with configure setting program, but I still haven't check the details yet...
By the way, current master branch will be replaced with develop branch, which is new archtecture, sometime soon. And java smart contracts in current master branch will be completely removed. (actually, it's unstable for use)
I'm very sorry to trouble you, but I recommend to use next version.",2017-04-26 15:40:57,2017-04-28 02:04:54
https://api.github.com/repos/hyperledger/iroha/issues/278,https://api.github.com/repos/hyperledger/iroha/issues/comments/308931117,https://github.com/hyperledger/iroha/issues/278#issuecomment-308931117,takemiyamakoto,"We don't use Java any more, so this should be fixed.",2017-06-16 04:37:19,2017-06-16 04:37:19
https://api.github.com/repos/hyperledger/iroha/issues/277,https://api.github.com/repos/hyperledger/iroha/issues/comments/296419638,https://github.com/hyperledger/iroha/issues/277#issuecomment-296419638,luckychess,"It was a problem with old gRPC. Fixed it in a next way:
```
$ git clone -b $(curl -L http://grpc.io/release) https://github.com/grpc/grpc
$ cd grpc
$ git submodule update --init
$ make
$ [sudo] make install
```",2017-04-23 04:53:49,2017-04-23 04:53:49
https://api.github.com/repos/hyperledger/iroha/issues/274,https://api.github.com/repos/hyperledger/iroha/issues/comments/296367848,https://github.com/hyperledger/iroha/pull/274#issuecomment-296367848,Warchant,"Also it is possible to setup **SonarLint** -- linter for C++, it exists for any IDE.
1. login with your github account in sonar.innoctf.com
2. create new token in your profile
3. setup in ide:
  - server: https://sonar.innoctf.com
  - token: token from step 2",2017-04-22 11:47:09,2017-04-22 11:47:09
https://api.github.com/repos/hyperledger/iroha/issues/273,https://api.github.com/repos/hyperledger/iroha/issues/comments/296204310,https://github.com/hyperledger/iroha/pull/273#issuecomment-296204310,MizukiSonoko,"This is only interface (  dependencies / directory )
Todo 
- to access ametsuchi implementation.",2017-04-21 14:22:19,2017-04-21 14:22:19
https://api.github.com/repos/hyperledger/iroha/issues/272,https://api.github.com/repos/hyperledger/iroha/issues/comments/296177438,https://github.com/hyperledger/iroha/pull/272#issuecomment-296177438,MizukiSonoko,"# ToDo 

- Move peer service implemention.
",2017-04-21 12:27:46,2017-04-21 12:27:46
https://api.github.com/repos/hyperledger/iroha/issues/271,https://api.github.com/repos/hyperledger/iroha/issues/comments/296326361,https://github.com/hyperledger/iroha/issues/271#issuecomment-296326361,Warchant,"It is something unusual. 
Share your environment please:
 - OS (+version)
 - compiler (+version)
 - branch",2017-04-21 23:18:06,2017-04-21 23:18:06
https://api.github.com/repos/hyperledger/iroha/issues/271,https://api.github.com/repos/hyperledger/iroha/issues/comments/308931071,https://github.com/hyperledger/iroha/issues/271#issuecomment-308931071,takemiyamakoto,This will be fixed in the new stable version.,2017-06-16 04:37:01,2017-06-16 04:37:01
https://api.github.com/repos/hyperledger/iroha/issues/268,https://api.github.com/repos/hyperledger/iroha/issues/comments/296348458,https://github.com/hyperledger/iroha/pull/268#issuecomment-296348458,cimadai,"@Warchant
Thank you for your comment.
But why don't you use ""hyperledger/iroha-dev"" ?

Following https://github.com/hyperledger/iroha/blob/master/docker/dev/README.md,
I think ""hyperledger/iroha-dev"" is right.
IMO, if ""hyperledger/iroha-dev"" is outdated, we should update it.",2017-04-22 05:12:30,2017-04-22 05:12:30
https://api.github.com/repos/hyperledger/iroha/issues/268,https://api.github.com/repos/hyperledger/iroha/issues/comments/296366777,https://github.com/hyperledger/iroha/pull/268#issuecomment-296366777,Warchant,"@cimadai yes, [it outdated](https://github.com/hyperledger/iroha/blob/master/docker/dev/README.md). Could you change it to `warchantua/iroha-dev` ?

And then I will merge PR",2017-04-22 11:24:41,2017-04-22 11:24:51
https://api.github.com/repos/hyperledger/iroha/issues/268,https://api.github.com/repos/hyperledger/iroha/issues/comments/296423031,https://github.com/hyperledger/iroha/pull/268#issuecomment-296423031,tkyonezu,"All! Excuse me, now I don’t have much time to attend this
conversation.
 
Previously, after IROHA v0.75 was released. I’ve been write
a building script for our co-leagues which use dev containers,
in my repository.

https://github.com/tkyonezu/build-iroha <https://github.com/tkyonezu/build-iroha>

Sorry, this README.md is fully write in Japanese.

-- 
Takeshi Yonezu

> 2017/04/22 20:24、Bogdan <notifications@github.com>のメール:
> 
> @cimadai <https://github.com/cimadai> yes, it outdated <https://github.com/hyperledger/iroha/blob/master/docker/dev/README.md>. Could you change it to warchantua/iroha-dev ?
> 
> —
> You are receiving this because your review was requested.
> Reply to this email directly, view it on GitHub <https://github.com/hyperledger/iroha/pull/268#issuecomment-296366777>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AU_yHp8oAao3teVDhqBAL4fjsZ25O1HTks5ryeN6gaJpZM4NCyIR>.
> 

",2017-04-23 06:33:21,2017-04-23 06:33:21
https://api.github.com/repos/hyperledger/iroha/issues/266,https://api.github.com/repos/hyperledger/iroha/issues/comments/294275977,https://github.com/hyperledger/iroha/pull/266#issuecomment-294275977,motxx,"Thank you for your fixing! It looks good to me.

> Not sure what other exception types we need

Sorry for confusing. This task urges people, other than members, **feel free to contribute** Hyperledger Iroha. They might wonder which feature to fix. Easy tasks may help.

Ofcourse, **redundant exceptions should be removed.** I'll add this task to the list! Thanks!",2017-04-15 06:39:15,2017-04-15 07:12:52
https://api.github.com/repos/hyperledger/iroha/issues/266,https://api.github.com/repos/hyperledger/iroha/issues/comments/294316517,https://github.com/hyperledger/iroha/pull/266#issuecomment-294316517,luckychess,"Oops, next time I will pay my attention on a bit more challenging tasks.
But now it's done )",2017-04-15 20:37:00,2017-04-15 20:37:00
https://api.github.com/repos/hyperledger/iroha/issues/265,https://api.github.com/repos/hyperledger/iroha/issues/comments/294936733,https://github.com/hyperledger/iroha/pull/265#issuecomment-294936733,luckychess,Looks good for me.,2017-04-18 18:23:50,2017-04-18 18:23:50
https://api.github.com/repos/hyperledger/iroha/issues/263,https://api.github.com/repos/hyperledger/iroha/issues/comments/293782937,https://github.com/hyperledger/iroha/issues/263#issuecomment-293782937,takemiyamakoto,"For verify: there is stateless validation and stateful validation, so that distinction should be made.",2017-04-13 05:08:40,2017-04-13 05:08:40
https://api.github.com/repos/hyperledger/iroha/issues/263,https://api.github.com/repos/hyperledger/iroha/issues/comments/296588471,https://github.com/hyperledger/iroha/issues/263#issuecomment-296588471,motxx,This is obsolete.,2017-04-24 09:10:00,2017-04-24 09:10:00
https://api.github.com/repos/hyperledger/iroha/issues/262,https://api.github.com/repos/hyperledger/iroha/issues/comments/295884827,https://github.com/hyperledger/iroha/pull/262#issuecomment-295884827,MizukiSonoko,"It's tremendous fat branch, I will merge it with develop for now.
We should write more test, function and fix some bug.
but we have to use develop branch.

I will merge it with develop without review. 🙇 ",2017-04-20 20:04:18,2017-04-20 20:04:18
https://api.github.com/repos/hyperledger/iroha/issues/260,https://api.github.com/repos/hyperledger/iroha/issues/comments/306962493,https://github.com/hyperledger/iroha/issues/260#issuecomment-306962493,TomokoY,I heard that it will be solved with the new version.,2017-06-08 00:18:36,2017-06-08 00:18:36
https://api.github.com/repos/hyperledger/iroha/issues/258,https://api.github.com/repos/hyperledger/iroha/issues/comments/293062899,https://github.com/hyperledger/iroha/pull/258#issuecomment-293062899,luckychess,@motxx thank you!,2017-04-10 20:04:15,2017-04-10 20:04:15
https://api.github.com/repos/hyperledger/iroha/issues/257,https://api.github.com/repos/hyperledger/iroha/issues/comments/292523629,https://github.com/hyperledger/iroha/issues/257#issuecomment-292523629,grimadas,"I have just tested on macOS Sierra. Having trouble with openssl 

`
/Users/bulat/iroha/core/infra/service/http_client.cpp:26:10: fatal error:
      'openssl/ssl.h' file not found
#include <openssl/ssl.h>
`

It seems that Apple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries",2017-04-07 12:29:47,2017-04-07 12:29:47
https://api.github.com/repos/hyperledger/iroha/issues/257,https://api.github.com/repos/hyperledger/iroha/issues/comments/292806239,https://github.com/hyperledger/iroha/issues/257#issuecomment-292806239,lebdron,spdlog integration https://github.com/hyperledger/iroha/tree/feature/spdlog https://github.com/hyperledger/iroha/pull/264,2017-04-09 19:16:04,2017-04-15 20:24:32
https://api.github.com/repos/hyperledger/iroha/issues/257,https://api.github.com/repos/hyperledger/iroha/issues/comments/292810445,https://github.com/hyperledger/iroha/issues/257#issuecomment-292810445,luckychess,Started working on abstract_config_manager,2017-04-09 20:24:56,2017-04-09 23:36:26
https://api.github.com/repos/hyperledger/iroha/issues/257,https://api.github.com/repos/hyperledger/iroha/issues/comments/292821825,https://github.com/hyperledger/iroha/issues/257#issuecomment-292821825,luckychess,I decided to make abstract_config_manager hierarchical. Implementation was a bit tricky so please somebody review before merging.,2017-04-09 23:40:12,2017-04-09 23:40:12
https://api.github.com/repos/hyperledger/iroha/issues/257,https://api.github.com/repos/hyperledger/iroha/issues/comments/292965726,https://github.com/hyperledger/iroha/issues/257#issuecomment-292965726,luckychess,Just started utils refactoring.,2017-04-10 14:26:51,2017-04-10 14:26:51
https://api.github.com/repos/hyperledger/iroha/issues/257,https://api.github.com/repos/hyperledger/iroha/issues/comments/293061043,https://github.com/hyperledger/iroha/issues/257#issuecomment-293061043,luckychess,"Done with utils. Merged without a review since all changed are pretty simple.

Anybody wants to review https://github.com/hyperledger/iroha/pull/258? ) (done by @motxx )",2017-04-10 19:57:22,2017-04-10 20:05:32
https://api.github.com/repos/hyperledger/iroha/issues/257,https://api.github.com/repos/hyperledger/iroha/issues/comments/294303005,https://github.com/hyperledger/iroha/issues/257#issuecomment-294303005,kamilsa,Could you check out pull request? https://github.com/hyperledger/iroha/pull/265,2017-04-15 16:18:15,2017-04-15 16:18:15
https://api.github.com/repos/hyperledger/iroha/issues/256,https://api.github.com/repos/hyperledger/iroha/issues/comments/295655415,https://github.com/hyperledger/iroha/issues/256#issuecomment-295655415,cimadai,"@shangmacun
I solved this problem.
https://github.com/hyperledger/iroha/pull/268

I think you can build iroha inside iroha-dev container using above pr's script.

This script is for current develop branch.",2017-04-20 09:44:07,2017-04-20 09:44:07
https://api.github.com/repos/hyperledger/iroha/issues/256,https://api.github.com/repos/hyperledger/iroha/issues/comments/327411959,https://github.com/hyperledger/iroha/issues/256#issuecomment-327411959,neewy,Fixed. Check `sh scripts/run-iroha-dev.sh` in develop branch,2017-09-06 08:22:42,2017-09-06 08:22:42
https://api.github.com/repos/hyperledger/iroha/issues/255,https://api.github.com/repos/hyperledger/iroha/issues/comments/290680236,https://github.com/hyperledger/iroha/pull/255#issuecomment-290680236,luckychess,"Now user can pass file name to save discovered nodes as a command line parameter.
@Warchant merge please if you think all is okay.",2017-03-31 10:42:43,2017-03-31 10:42:43
https://api.github.com/repos/hyperledger/iroha/issues/254,https://api.github.com/repos/hyperledger/iroha/issues/comments/289268187,https://github.com/hyperledger/iroha/issues/254#issuecomment-289268187,takemiyamakoto,Shouldn't there be public keys associated with IPs in the config.json?,2017-03-26 09:16:49,2017-03-26 09:16:49
https://api.github.com/repos/hyperledger/iroha/issues/254,https://api.github.com/repos/hyperledger/iroha/issues/comments/289268455,https://github.com/hyperledger/iroha/issues/254#issuecomment-289268455,luckychess,@takemiyamakoto I think IPs are enough. We can get public keys from the nodes which are actually alive at the time of request. And it can work in case of node IP can be changed.,2017-03-26 09:23:04,2017-03-26 09:23:04
https://api.github.com/repos/hyperledger/iroha/issues/254,https://api.github.com/repos/hyperledger/iroha/issues/comments/289273308,https://github.com/hyperledger/iroha/issues/254#issuecomment-289273308,Warchant,@luckychess correct. At the startup we know only a range of IPs where **probably** peers can be running. But we don't know their public key and exact IPs.,2017-03-26 11:12:43,2017-03-26 11:12:43
https://api.github.com/repos/hyperledger/iroha/issues/254,https://api.github.com/repos/hyperledger/iroha/issues/comments/289304251,https://github.com/hyperledger/iroha/issues/254#issuecomment-289304251,luckychess,First version. Does not work with network masks at the moment.,2017-03-26 18:25:50,2017-03-26 18:25:50
https://api.github.com/repos/hyperledger/iroha/issues/254,https://api.github.com/repos/hyperledger/iroha/issues/comments/291930026,https://github.com/hyperledger/iroha/issues/254#issuecomment-291930026,techiecircle,Would you consider additional layer of trust using Digital Certificates.,2017-04-05 17:09:15,2017-04-05 17:09:15
https://api.github.com/repos/hyperledger/iroha/issues/254,https://api.github.com/repos/hyperledger/iroha/issues/comments/327412372,https://github.com/hyperledger/iroha/issues/254#issuecomment-327412372,neewy,"Check solution in https://soramitsu.atlassian.net/wiki/spaces/IS/pages/12517377/Create+swarm+network+of+Iroha+nodes

If needed, reopen issue or create JIRA task",2017-09-06 08:24:21,2017-09-06 08:24:21
https://api.github.com/repos/hyperledger/iroha/issues/250,https://api.github.com/repos/hyperledger/iroha/issues/comments/327414928,https://github.com/hyperledger/iroha/issues/250#issuecomment-327414928,neewy,https://soramitsu.atlassian.net/wiki/spaces/IS/pages/12517377/Create+swarm+network+of+Iroha+nodes,2017-09-06 08:34:48,2017-09-06 08:34:48
https://api.github.com/repos/hyperledger/iroha/issues/249,https://api.github.com/repos/hyperledger/iroha/issues/comments/289265141,https://github.com/hyperledger/iroha/issues/249#issuecomment-289265141,Warchant,"I propose the following solution:
1. we create unprivileged lxc container with preinstalled *any language* interpretator/compiler and restrictions on disk/networking/memory/syscalls. Underlying FS should be BTRFS (B-Tree FS)
2. when new job arrives (new code execution), we clone original container and start it.
3. we execute smart contract inside lxc-container as unprivileged user.
4. after execution we delete the lxc-container. 

the reason why I selected btrfs is that copying of the container becomes almost free, due to copy-on-write feature of that FS.

in comparison to XFS or EXT4, BTRFS is 2x faster for random writes and 2x slower for random reads.
But I don't think it is a problem, because users will not have (many) disk IO operations in smart contracts.

Thus starting new job becomes free, new containers will not take the disk space and sandboxing level can be manipulated easily.",2017-03-26 08:04:08,2017-03-26 08:04:08
https://api.github.com/repos/hyperledger/iroha/issues/249,https://api.github.com/repos/hyperledger/iroha/issues/comments/289282314,https://github.com/hyperledger/iroha/issues/249#issuecomment-289282314,takemiyamakoto,"If we made our own language, I am thinking something like this:

```
var a = 2 + 3;

var transactionsForAcct = ametsuchi.getTx(""38a....."");
var myAssets = ametsuchi.getAssets(""3899...."");

var totalSent = sum([tx.value for tx in transactionsForAcct]);

return txBuilder.createTransfer('a563453..."", myAssets[0], 100);
```",2017-03-26 13:09:48,2017-03-26 13:11:17
https://api.github.com/repos/hyperledger/iroha/issues/249,https://api.github.com/repos/hyperledger/iroha/issues/comments/289282654,https://github.com/hyperledger/iroha/issues/249#issuecomment-289282654,Warchant,It looks like Scala :full_moon_with_face: ,2017-03-26 13:13:35,2017-03-26 13:13:35
https://api.github.com/repos/hyperledger/iroha/issues/249,https://api.github.com/repos/hyperledger/iroha/issues/comments/289394474,https://github.com/hyperledger/iroha/issues/249#issuecomment-289394474,tkyonezu,"IMO in the smart contracts which environment should be strictly limited. So, It should not handle any disk storage and network. It should only can handle data in ledger.",2017-03-27 09:00:53,2017-03-27 09:00:53
https://api.github.com/repos/hyperledger/iroha/issues/249,https://api.github.com/repos/hyperledger/iroha/issues/comments/426981279,https://github.com/hyperledger/iroha/issues/249#issuecomment-426981279,l4l,"In slow development, eventually there will be some update, probably not that soon",2018-10-04 11:17:19,2018-10-04 11:17:19
https://api.github.com/repos/hyperledger/iroha/issues/247,https://api.github.com/repos/hyperledger/iroha/issues/comments/288304267,https://github.com/hyperledger/iroha/pull/247#issuecomment-288304267,MizukiSonoko,"Ok thanks! 
sorry, why it uses `-d` and `-it` all together?",2017-03-22 05:43:46,2017-03-22 05:43:46
https://api.github.com/repos/hyperledger/iroha/issues/246,https://api.github.com/repos/hyperledger/iroha/issues/comments/288290129,https://github.com/hyperledger/iroha/pull/246#issuecomment-288290129,takemiyamakoto,"ご貢献ありがとうございます！

基本的にdevelopのブランチにマージして、それからマスターにするフローにしたいかなと思います。

",2017-03-22 03:42:46,2017-03-22 03:42:46
https://api.github.com/repos/hyperledger/iroha/issues/246,https://api.github.com/repos/hyperledger/iroha/issues/comments/288303231,https://github.com/hyperledger/iroha/pull/246#issuecomment-288303231,hidehigo,I see~,2017-03-22 05:34:54,2017-03-22 05:34:54
https://api.github.com/repos/hyperledger/iroha/issues/244,https://api.github.com/repos/hyperledger/iroha/issues/comments/310460734,https://github.com/hyperledger/iroha/issues/244#issuecomment-310460734,dumblob,Any ideas on it except for closing the Issue?,2017-06-22 18:17:17,2017-06-22 18:17:17
https://api.github.com/repos/hyperledger/iroha/issues/243,https://api.github.com/repos/hyperledger/iroha/issues/comments/288092484,https://github.com/hyperledger/iroha/issues/243#issuecomment-288092484,l4l,as continuation of #222,2017-03-21 14:19:15,2017-03-21 14:19:15
https://api.github.com/repos/hyperledger/iroha/issues/243,https://api.github.com/repos/hyperledger/iroha/issues/comments/288308182,https://github.com/hyperledger/iroha/issues/243#issuecomment-288308182,MizukiSonoko,"Ok, I had better new branch or reopen #222 ?",2017-03-22 06:13:28,2017-03-22 06:14:39
https://api.github.com/repos/hyperledger/iroha/issues/243,https://api.github.com/repos/hyperledger/iroha/issues/comments/288341377,https://github.com/hyperledger/iroha/issues/243#issuecomment-288341377,l4l,"Firstly let's finalize (more or less) the structure of fb, I have a few proposals before",2017-03-22 09:20:50,2017-03-22 09:20:50
https://api.github.com/repos/hyperledger/iroha/issues/243,https://api.github.com/repos/hyperledger/iroha/issues/comments/288369858,https://github.com/hyperledger/iroha/issues/243#issuecomment-288369858,MizukiSonoko,"I think https://gist.github.com/Warchant/b7049e2f0653bd30c78f06b283c30bf0 is good.
And is there other proposals?",2017-03-22 11:23:11,2017-03-22 11:23:11
https://api.github.com/repos/hyperledger/iroha/issues/242,https://api.github.com/repos/hyperledger/iroha/issues/comments/287961347,https://github.com/hyperledger/iroha/pull/242#issuecomment-287961347,takemiyamakoto,"The .rst docs are pretty old :/
I think we will just get rid of them and use the wiki: https://github.com/hyperledger/iroha/wiki

I will go ahead and merge this though.",2017-03-21 02:50:15,2017-03-21 02:50:15
https://api.github.com/repos/hyperledger/iroha/issues/241,https://api.github.com/repos/hyperledger/iroha/issues/comments/287742663,https://github.com/hyperledger/iroha/pull/241#issuecomment-287742663,l4l,Do you mind if I squash that?,2017-03-20 12:14:44,2017-03-20 12:14:44
https://api.github.com/repos/hyperledger/iroha/issues/241,https://api.github.com/repos/hyperledger/iroha/issues/comments/287742826,https://github.com/hyperledger/iroha/pull/241#issuecomment-287742826,MizukiSonoko,No ,2017-03-20 12:15:32,2017-03-20 12:17:43
https://api.github.com/repos/hyperledger/iroha/issues/240,https://api.github.com/repos/hyperledger/iroha/issues/comments/287746571,https://github.com/hyperledger/iroha/issues/240#issuecomment-287746571,motxx,Current smart contracts for java in Iroha v0.75 are no more used. I'll apply junit in smart contracts of Iroha v1.0. We still use this issue until smart contracts in Iroha v1.0 are created. Thank you.,2017-03-20 12:35:12,2017-03-20 12:40:28
https://api.github.com/repos/hyperledger/iroha/issues/239,https://api.github.com/repos/hyperledger/iroha/issues/comments/287721962,https://github.com/hyperledger/iroha/pull/239#issuecomment-287721962,l4l,Could you please reformat code according to [.clang-format](https://github.com/hyperledger/iroha/blob/master/.clang-format)?,2017-03-20 10:26:39,2017-03-20 10:26:39
https://api.github.com/repos/hyperledger/iroha/issues/238,https://api.github.com/repos/hyperledger/iroha/issues/comments/287621812,https://github.com/hyperledger/iroha/pull/238#issuecomment-287621812,motxx,"That's nice. And it's better to prepare unified format like ametsuchi `.clang-format`.
https://github.com/hyperledger/iroha-ametsuchi/blob/master/.clang-format",2017-03-19 14:52:11,2017-03-19 14:52:11
https://api.github.com/repos/hyperledger/iroha/issues/238,https://api.github.com/repos/hyperledger/iroha/issues/comments/287643579,https://github.com/hyperledger/iroha/pull/238#issuecomment-287643579,l4l,"Sorry I cannot merge because this commit:
1. is too big
2. doesn't actually fix indentations to 2 spaces
3. contains fixes that don't need to be fixed, e.g `auto& e` -> `auto &e`

I just going to commit `.clang-format` from ametsuchi and just assume that everyone will stick this style in future development",2017-03-19 20:07:45,2017-03-19 20:07:45
https://api.github.com/repos/hyperledger/iroha/issues/235,https://api.github.com/repos/hyperledger/iroha/issues/comments/287418981,https://github.com/hyperledger/iroha/pull/235#issuecomment-287418981,Warchant,"@l4l 
```
1489771498 DEBUG [config] load json is {
  ""group"": {
    ""ip"": ""172.17.0.3"",
    ""name"": ""82ed218c77f7"",
    ""publicKey"": ""BKges18NwuIi3OO3b0k+4aV6zfgW1dHkX+HuN9khLnc=""
  },
  ""me"": {
    ""ip"": ""172.17.0.3"",
    ""name"": ""82ed218c77f7"",
    ""privateKey"": ""EB1xqzIpXPD6z+3sNkbw5N/fOzXyv96zpctTTO0T+WT5b9UnepLcvq0Es/7jOHzBIUKs14LIiofw/XXwqcUsag=="",
    ""publicKey"": ""BKges18NwuIi3OO3b0k+4aV6zfgW1dHkX+HuN9khLnc=""
  }
}

1489771498 WARNING [peer service with json] type must be 2, but is 1
1489771498 WARNING [peer service config] ParseFromStringException in config/sumeragi.json
1489771498 WARNING [peer service config] config/sumeragi.json is set to be default.
terminate called after throwing an instance of 'std::domain_error'
  what():  cannot use value() with null
Aborted (core dumped)
```",2017-03-17 17:26:22,2017-03-17 17:26:22
https://api.github.com/repos/hyperledger/iroha/issues/233,https://api.github.com/repos/hyperledger/iroha/issues/comments/287360037,https://github.com/hyperledger/iroha/pull/233#issuecomment-287360037,l4l,why?,2017-03-17 13:56:15,2017-03-17 13:56:15
https://api.github.com/repos/hyperledger/iroha/issues/232,https://api.github.com/repos/hyperledger/iroha/issues/comments/287579505,https://github.com/hyperledger/iroha/pull/232#issuecomment-287579505,l4l,I'm going to resolve conflict,2017-03-18 22:28:22,2017-03-18 22:28:22
https://api.github.com/repos/hyperledger/iroha/issues/231,https://api.github.com/repos/hyperledger/iroha/issues/comments/287382794,https://github.com/hyperledger/iroha/issues/231#issuecomment-287382794,Warchant,"I am working on migrating to circle 2.0, I will add this test there. Don't worry :)",2017-03-17 15:17:16,2017-03-17 15:17:16
https://api.github.com/repos/hyperledger/iroha/issues/231,https://api.github.com/repos/hyperledger/iroha/issues/comments/287459726,https://github.com/hyperledger/iroha/issues/231#issuecomment-287459726,Warchant,"iroha1:
```
1489781423 DEBUG [config] load json is { 
  ""database_path"":""/tmp/iroha_ledger"",
  ""java_class_path"":""java_tests"",
  ""java_class_path_local"":""smart_contract/java_tests"",
  ""java_library_path"":""lib"",
  ""java_library_path_local"":""build/lib"",
  ""java_policy_path"":""jvm/java.policy.txt"",
  ""concurrency"": 0,
  ""max_faulty_peers"" : 1,
  ""pool_worker_queue_size"": 1024,
  ""http_port"": 1204,
  ""grpc_port"": 50051,
  ""active_start"": false
}

1489781423 INFO [main] process is :10
1489781423[sumeragi] +==ーーーーーーーーー==+
1489781423[sumeragi] |+-ーーーーーーーーー-+|
1489781423[sumeragi] || 　　　　　　　　　 ||
1489781423[sumeragi] || いろは合意形成機構 ||
1489781423[sumeragi] || 　　　すめらぎ　　 ||
1489781423[sumeragi] || 　　　　　　　　　 ||
1489781423[sumeragi] |+-ーーーーーーーーー-+|
1489781423[sumeragi] +==ーーーーーーーーー==+
1489781423[sumeragi] - 起動/setup
1489781423[sumeragi] - 初期設定/initialize
1489781423 DEBUG [config] load json is {
  ""group"": [
    {
      ""ip"": ""172.20.0.2"",
      ""name"": ""ce5f541db764"",
      ""publicKey"": ""foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=""
    }
  ],
  ""me"": {
    ""ip"": ""172.20.0.2"",
    ""name"": ""ce5f541db764"",
    ""privateKey"": ""aHTWrIey5sA8/VHo3DWkG25yOsD9LSQDAZf4SDIUH0blU4KnwC2ylXKlBOmGl1izgu9Wy6c1ydKuhVFNIdpULA=="",
    ""publicKey"": ""foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=""
  }
}

1489781423 INFO [sumeragi] My key is 172.20.0.2
1489781423 INFO [sumeragi] Sumeragi setted
1489781423 INFO [sumeragi] set number of validatingPeer
1489781423 DEBUG [sumeragi] Context update!
1489781423 DEBUG [getPeerList] 1
1489781423 DEBUG [getPeerList] ip: 172.20.0.2
1489781423 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781423 DEBUG [getPeerList] 1
1489781423 DEBUG [getPeerList] ip: 172.20.0.2
1489781423 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781423 INFO [sumeragi] initialize numValidatingPeers :1
1489781423 INFO [sumeragi] initialize maxFaulty :0
1489781423 INFO [sumeragi] initialize proxyTailNdx :0
1489781423 INFO [sumeragi] initialize panicCount :0
1489781423 INFO [sumeragi] initialize myPublicKey :foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781423 INFO [sumeragi] initialize is sumeragi :1
1489781423 INFO [sumeragi] initialize.....  complete!
1489781423[izanami] startIzanami
1489781423[izanami] +==ーーーーーーーーーー==+
1489781423[izanami] |+-ーーーーーーーーーー-+|
1489781423[izanami] ||  　　　　　　　　　 ||
1489781423[izanami] ||初回取引履歴構築機構 ||
1489781423[izanami] ||　　　イザナミ　　　　||
1489781423[izanami] || 　　　　　　 　　　 ||
1489781423[izanami] |+-ーーーーーーーーーー-+|
1489781423[izanami] +==ーーーーーーーーーー==+
1489781423[izanami] - 起動/setup
1489781423 INFO [izanami] My PublicKey is foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781423 INFO [izanami] My key is 172.20.0.2
1489781423 INFO [server] initialize server!
1489781423 INFO [server] start server!
1489781524 INFO [sumeragi] receive! Torii
1489781524 DEBUG [sumeragi] Context update!
1489781524 DEBUG [getPeerList] 1
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 DEBUG [getPeerList] 1
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 INFO [sumeragi] processTransaction
1489781524 INFO [sumeragi] valid
1489781524 INFO [sumeragi] Add my signature...
1489781524 INFO [sumeragi] hash:a1341d86eeffb7f3450481b6db7998fb89c8881b9b504852daa73e032e8aabc8
1489781524 INFO [sumeragi] pub: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 INFO [sumeragi] priv:aHTWrIey5sA8/VHo3DWkG25yOsD9LSQDAZf4SDIUH0blU4KnwC2ylXKlBOmGl1izgu9Wy6c1ydKuhVFNIdpULA==
1489781524 INFO [sumeragi] sig: eqmswAbslxd356HDmm0XXb0C/ApTx99jafbJ6nKry1OtLJFvBzwn/osc3CORhCOZekdOakKaD+pUKNxPkxKDCg==
1489781524 INFO [sumeragi] Signature exists
1489781524[sumeragi] 0--------------------------0
1489781524[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1489781524[sumeragi] |Would you agree with this?|
1489781524[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1489781524[sumeragi] 0================================================================0
1489781524[sumeragi] 0a1341d86eeffb7f3450481b6db7998fb89c8881b9b504852daa73e032e8aabc80
1489781524[sumeragi] 0================================================================0
1489781524[sumeragi] +-ー-+
1489781524[sumeragi] | 　 |
1489781524[sumeragi] |-承-|
1489781524[sumeragi] | 　 |
1489781524[sumeragi] +-＝-+
1489781524[sumeragi] ==＝==
1489781524[sumeragi] numValidSignatures:1 faulty:1
1489781524[sumeragi] +==ーー==+
1489781524[sumeragi] |+-ーー-+|
1489781524[sumeragi] || 承認 ||
1489781524[sumeragi] |+-ーー-+|
1489781524[sumeragi] +==ーー==+
1489781524[sumeragi] commit
1489781524[sumeragi] commit count:1
1489781524 INFO [WorldStateRepositoryWithLeveldb] LoadDB
1489781524 INFO [WorldStateRepositoryWithLeveldb] NotFound: 
1489781524 DEBUG [getPeerList] 1
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 DEBUG [getPeerList] 1
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 INFO [connection] Operation
1489781524 INFO [connection] size: 1
1489781524 INFO [connection] name: 
1489781524 INFO [connection] size: 1
1489781524 INFO [sumeragi] receive!
1489781524 INFO [sumeragi] received message! sig:[1]
1489781524 INFO [sumeragi] received message! status:[commited]
1489781524 INFO [WorldStateRepositoryWithLeveldb] Add
1489781524 INFO [executor] Executor
1489781524 INFO [executor] DebugString:type: ""Add""
senderPubkey: ""foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=""
peer {
  publicKey: ""6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=""
  address: ""172.20.0.3""
  trust {
    value: 1
    isOk: true
  }
}

1489781524 INFO [executor] tx type(): Add
1489781524 INFO [executor] tx has peer?yes
1489781524 INFO [executor] add peer
1489781524 DEBUG [peer-service] in sendAllTransactionToNewPeer
1489781524 DEBUG [peer-service] send all peer infomation
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 INFO [connection] Operation
1489781524 INFO [connection] size: 2
1489781524 INFO [connection] message: Initilize send now Active PeerList info
1489781524 INFO [connection] response: OK
1489781524 DEBUG [peer-service] send end-point
1489781524 INFO [connection] Operation
1489781524 INFO [connection] size: 0
1489781524 INFO [connection] message: Finished send Transactions
1489781524 INFO [connection] response: OK
1489781524 INFO [connection] response: OK
1489781524 INFO [connection] size: 1
1489781524 INFO [sumeragi] receive!
1489781524 INFO [sumeragi] received message! sig:[1]
1489781524 INFO [sumeragi] received message! status:[commited]
1489781524 INFO [WorldStateRepositoryWithLeveldb] Add
1489781524 INFO [executor] Executor
1489781524 INFO [executor] DebugString:type: ""Update""
senderPubkey: ""6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=""
peer {
  publicKey: ""6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=""
  address: ""172.20.0.3""
  trust {
    isOk: true
  }
}

1489781524 INFO [executor] tx type(): Update
```


iroha2
```
1489781425 DEBUG [config] load json is { 
  ""database_path"":""/tmp/iroha_ledger"",
  ""java_class_path"":""java_tests"",
  ""java_class_path_local"":""smart_contract/java_tests"",
  ""java_library_path"":""lib"",
  ""java_library_path_local"":""build/lib"",
  ""java_policy_path"":""jvm/java.policy.txt"",
  ""concurrency"": 0,
  ""max_faulty_peers"" : 1,
  ""pool_worker_queue_size"": 1024,
  ""http_port"": 1204,
  ""grpc_port"": 50051,
  ""active_start"": false
}

1489781425 INFO [main] process is :10
1489781425[sumeragi] +==ーーーーーーーーー==+
1489781425[sumeragi] |+-ーーーーーーーーー-+|
1489781425[sumeragi] || 　　　　　　　　　 ||
1489781425[sumeragi] || いろは合意形成機構 ||
1489781425[sumeragi] || 　　　すめらぎ　　 ||
1489781425[sumeragi] || 　　　　　　　　　 ||
1489781425[sumeragi] |+-ーーーーーーーーー-+|
1489781425[sumeragi] +==ーーーーーーーーー==+
1489781425[sumeragi] - 起動/setup
1489781425[sumeragi] - 初期設定/initialize
1489781425 DEBUG [config] load json is {
  ""group"": [
    {
      ""ip"": ""172.20.0.3"",
      ""name"": ""53228e02d0af"",
      ""publicKey"": ""6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=""
    }
  ],
  ""me"": {
    ""ip"": ""172.20.0.3"",
    ""name"": ""53228e02d0af"",
    ""privateKey"": ""AI+9Tpw8TUfrHKMOJVFcYF4SG9AetUroFONnIOKimkr/SK6ljLMkFAHXpWJXXGCFOYchyXqT9mWGSW8ras3FnA=="",
    ""publicKey"": ""6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=""
  }
}

1489781425 INFO [sumeragi] My key is 172.20.0.3
1489781425 INFO [sumeragi] Sumeragi setted
1489781425 INFO [sumeragi] set number of validatingPeer
1489781425 DEBUG [sumeragi] Context update!
1489781425 DEBUG [getPeerList] 1
1489781425 DEBUG [getPeerList] ip: 172.20.0.3
1489781425 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781425 DEBUG [getPeerList] 1
1489781425 DEBUG [getPeerList] ip: 172.20.0.3
1489781425 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781425 INFO [sumeragi] initialize numValidatingPeers :1
1489781425 INFO [sumeragi] initialize maxFaulty :0
1489781425 INFO [sumeragi] initialize proxyTailNdx :0
1489781425 INFO [sumeragi] initialize panicCount :0
1489781425 INFO [sumeragi] initialize myPublicKey :6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781425 INFO [sumeragi] initialize is sumeragi :1
1489781425 INFO [sumeragi] initialize.....  complete!
1489781425[izanami] startIzanami
1489781425[izanami] +==ーーーーーーーーーー==+
1489781425[izanami] |+-ーーーーーーーーーー-+|
1489781425[izanami] ||  　　　　　　　　　 ||
1489781425[izanami] ||初回取引履歴構築機構 ||
1489781425[izanami] ||　　　イザナミ　　　　||
1489781425[izanami] || 　　　　　　 　　　 ||
1489781425[izanami] |+-ーーーーーーーーーー-+|
1489781425[izanami] +==ーーーーーーーーーー==+
1489781425[izanami] - 起動/setup
1489781425 INFO [izanami] My PublicKey is 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781425 INFO [izanami] My key is 172.20.0.3
1489781425 INFO [server] initialize server!
1489781425 INFO [server] start server!
1489781524 INFO [connection] size: 2
1489781524 INFO [izanami] receive! Transactions!!
1489781524 INFO [izanami] Initilize send now Active PeerList info
1489781524 DEBUG [izanami] in receiveTransactionResponse event = 0
1489781524 DEBUG [izanami] evet is not finished
1489781524 DEBUG [getPeerList] 1
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [izanami] is finished receive
1489781524 DEBUG [getPeerList] 1
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] 1
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 INFO [executor] Executor
1489781524 INFO [executor] DebugString:type: ""Add""
senderPubkey: ""foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=""
peer {
  publicKey: ""foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=""
  address: ""172.20.0.2""
  trust {
    value: 10
    isOk: true
  }
}

1489781524 INFO [executor] tx type(): Add
1489781524 INFO [executor] tx has peer?yes
1489781524 INFO [executor] add peer
1489781524 INFO [executor] Executor
1489781524 INFO [executor] DebugString:type: ""Add""
senderPubkey: ""foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=""
peer {
  publicKey: ""6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=""
  address: ""172.20.0.3""
  trust {
    value: 10
    isOk: true
  }
}

1489781524 INFO [executor] tx type(): Add
1489781524 INFO [executor] tx has peer?yes
1489781524 INFO [executor] add peer
1489781524 WARNING [addPeer] DuplicationIPException : IP = 172.20.0.3

1489781524 INFO [connection] size: 0
1489781524 INFO [izanami] receive! Transactions!!
1489781524 INFO [izanami] Finished send Transactions
1489781524 DEBUG [izanami] next_progress : 0
1489781524 DEBUG [izanami] txResponses erase
1489781524 DEBUG [izanami] nexted : 1
1489781524 DEBUG [izanami] in receiveTransactionResponse event = 1
1489781524 DEBUG [izanami] evet is not finished
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 DEBUG [izanami] is finished receive
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 DEBUG [izanami] is finished receive all
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 INFO [sumeragi] receive! Torii
1489781524 DEBUG [sumeragi] Context update!
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 INFO [sumeragi] processTransaction
1489781524 INFO [sumeragi] valid
1489781524 INFO [sumeragi] Add my signature...
1489781524 INFO [sumeragi] hash:07f48aed7f782c977afa306b30313885b04ea1cdbd17672dc124eaedf78abae2
1489781524 INFO [sumeragi] pub: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 INFO [sumeragi] priv:AI+9Tpw8TUfrHKMOJVFcYF4SG9AetUroFONnIOKimkr/SK6ljLMkFAHXpWJXXGCFOYchyXqT9mWGSW8ras3FnA==
1489781524 INFO [connection] response: OK
1489781524 INFO [sumeragi] sig: 5kafhObr89XjZwTGFcKAKrHOzEV5vpds2pCdyLW07JkJ3qnHnR5NzUaF0DxfyljqjR0HXzYnzPYlJfR8CrJMCw==
1489781524[izanami] Finished Receive ALl Transaction
1489781524[izanami] Closed Izanami
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524[izanami] ip: 172.20.0.3
1489781524[izanami] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524[izanami] trust: 10.000000
1489781524[izanami] ip: 172.20.0.2
1489781524[izanami] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524[izanami] trust: 10.000000
1489781524 INFO [sumeragi] Signature exists
1489781524[sumeragi] 0--------------------------0
1489781524[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1489781524[sumeragi] |Would you agree with this?|
1489781524[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1489781524[sumeragi] 0================================================================0
1489781524[sumeragi] 007f48aed7f782c977afa306b30313885b04ea1cdbd17672dc124eaedf78abae20
1489781524[sumeragi] 0================================================================0
1489781524[sumeragi] +-ー-++-ー-+
1489781524[sumeragi] | 　 || 　 |
1489781524[sumeragi] |-承-|| 否 |
1489781524[sumeragi] | 　 || 　 |
1489781524[sumeragi] +-＝-++-＝-+
1489781524[sumeragi] ==＝====＝==
1489781524[sumeragi] numValidSignatures:1 faulty:1
1489781524[sumeragi] +==ーー==+
1489781524[sumeragi] |+-ーー-+|
1489781524[sumeragi] || 承認 ||
1489781524[sumeragi] |+-ーー-+|
1489781524[sumeragi] +==ーー==+
1489781524[sumeragi] commit
1489781524[sumeragi] commit count:1
1489781524 INFO [WorldStateRepositoryWithLeveldb] LoadDB
1489781524 INFO [WorldStateRepositoryWithLeveldb] NotFound: 
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 INFO [connection] Operation
1489781524 INFO [connection] size: 1
1489781524 INFO [connection] name: 
1489781524 INFO [connection] size: 1
1489781524 INFO [sumeragi] receive!
1489781524 INFO [sumeragi] received message! sig:[1]
1489781524 INFO [sumeragi] received message! status:[commited]
1489781524 INFO [WorldStateRepositoryWithLeveldb] Add
1489781524 INFO [executor] Executor
1489781524 INFO [executor] DebugString:type: ""Update""
senderPubkey: ""6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=""
peer {
  publicKey: ""6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=""
  address: ""172.20.0.3""
  trust {
    isOk: true
  }
}

1489781524 INFO [executor] tx type(): Update
1489781524 INFO [connection] response: OK
1489781524 DEBUG [getPeerList] 2
1489781524 DEBUG [getPeerList] ip: 172.20.0.3
1489781524 DEBUG [getPeerList] pubkey: 6Pf4WuHcMOpMM9VDXZGS2yDA/Fl/ALHUN3azwd6V/zk=
1489781524 DEBUG [getPeerList] ip: 172.20.0.2
1489781524 DEBUG [getPeerList] pubkey: foPrM/NvFcq7TQnbREyQEtY0xiekutfoqMhTW+ar/Xc=
1489781524 INFO [connection] Operation
1489781524 INFO [connection] size: 1
1489781524 INFO [connection] name: 
1489781524 INFO [connection] response: OK
```",2017-03-17 20:14:30,2017-03-17 20:14:30
https://api.github.com/repos/hyperledger/iroha/issues/231,https://api.github.com/repos/hyperledger/iroha/issues/comments/287469739,https://github.com/hyperledger/iroha/issues/231#issuecomment-287469739,Warchant,"Looks like it works :+1: 
Test will be in new docker-compose.yml file in few days",2017-03-17 20:59:44,2017-03-17 20:59:54
https://api.github.com/repos/hyperledger/iroha/issues/231,https://api.github.com/repos/hyperledger/iroha/issues/comments/288371677,https://github.com/hyperledger/iroha/issues/231#issuecomment-288371677,MizukiSonoko,"Finished?
May I close this?",2017-03-22 11:31:36,2017-03-22 11:31:36
https://api.github.com/repos/hyperledger/iroha/issues/230,https://api.github.com/repos/hyperledger/iroha/issues/comments/287320866,https://github.com/hyperledger/iroha/issues/230#issuecomment-287320866,MizukiSonoko,"Could you try to it?
```
cd $IROHA_HOME; mkdir build; cd build; cmake ..
```

In this command, generates api.pb.h.
```
cmake ..
```


And  could you tell me your environment( OS, branch, docker container... )
thanks
",2017-03-17 10:35:38,2017-03-17 10:36:55
https://api.github.com/repos/hyperledger/iroha/issues/230,https://api.github.com/repos/hyperledger/iroha/issues/comments/287363966,https://github.com/hyperledger/iroha/issues/230#issuecomment-287363966,viettienbk,"I have installed it on ubuntu 16.04, branch: master.

When I post: `curl -X POST http://172.31.28.237:1204/account/register -d '{""publicKey"":""WdvM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmAgw="",""alias"":""yonezu"",""timestamp"":1482053586}'`
Iroha log:
```
1489759618[sumeragi] 0--------------------------0
1489759618[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1489759618[sumeragi] |Would you agree with this?|
1489759618[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1489759618[sumeragi] 0================================================================0
1489759618[sumeragi] 0958857657e077431b5914f3d4b9ebf55d5233161ddc4d3a9bd5e815fb64443ad0
1489759618[sumeragi] 0================================================================0
1489759618[sumeragi] +-ー-++-ー-++-ー-+
1489759618[sumeragi] | 　 || 　 || 　 |
1489759618[sumeragi] |-承-|| 否 || 否 |
1489759618[sumeragi] | 　 || 　 || 　 |
1489759618[sumeragi] +-＝-++-＝-++-＝-+
1489759618[sumeragi] ==＝====＝====＝==
1489759618[sumeragi] numValidSignatures:1 faulty:1
1489759618[sumeragi] +==ーー==+
1489759618[sumeragi] |+-ーー-+|
1489759618[sumeragi] || 承認 ||
1489759618[sumeragi] |+-ーー-+|
1489759618[sumeragi] +==ーー==+
1489759618[sumeragi] commit
1489759618[sumeragi] commit count:1
1489759618 INFO [WorldStateRepositoryWithLeveldb] LoadDB
1489759618 INFO [WorldStateRepositoryWithLeveldb] NotFound: 
Killed
```",2017-03-17 14:11:10,2017-03-17 14:54:15
https://api.github.com/repos/hyperledger/iroha/issues/230,https://api.github.com/repos/hyperledger/iroha/issues/comments/287376804,https://github.com/hyperledger/iroha/issues/230#issuecomment-287376804,MizukiSonoko,"Ok, I understand reason.
Maybe config is not setted.
so could you wait I write about config? ",2017-03-17 14:56:28,2017-03-17 14:56:54
https://api.github.com/repos/hyperledger/iroha/issues/230,https://api.github.com/repos/hyperledger/iroha/issues/comments/287380373,https://github.com/hyperledger/iroha/issues/230#issuecomment-287380373,viettienbk,"Yepp.
When will you finish it?",2017-03-17 15:08:35,2017-03-17 15:08:35
https://api.github.com/repos/hyperledger/iroha/issues/230,https://api.github.com/repos/hyperledger/iroha/issues/comments/287381425,https://github.com/hyperledger/iroha/issues/230#issuecomment-287381425,MizukiSonoko,"In first, 
Could you tell me result of
```
echo $IROHA_HOME
```
and 
Is there config.json in $IROHA_HOME/config/ ?
config.json is 
https://github.com/hyperledger/iroha/blob/master/config/config.json

",2017-03-17 15:12:12,2017-03-17 15:12:12
https://api.github.com/repos/hyperledger/iroha/issues/230,https://api.github.com/repos/hyperledger/iroha/issues/comments/287383188,https://github.com/hyperledger/iroha/issues/230#issuecomment-287383188,viettienbk,"```
echo $IROHA_HOME
/home/ubuntu/iroha
```

```
nano $IROHA_HOME/config/config.json
{
  ""database_path"":""/tmp/iroha_ledger"",
  ""java_class_path"":""java_tests"",
  ""java_class_path_local"":""smart_contract/java_tests"",
  ""java_library_path"":""lib"",
  ""java_library_path_local"":""build/lib"",
  ""java_policy_path"":""jvm/java.policy.txt"",
  ""concurrency"": 0,
  ""max_faulty_peers"" : 1,
  ""pool_worker_queue_size"": 1024,
  ""http_port"": 1204,
  ""grpc_port"": 50051
}
```",2017-03-17 15:18:39,2017-03-17 15:21:33
https://api.github.com/repos/hyperledger/iroha/issues/225,https://api.github.com/repos/hyperledger/iroha/issues/comments/286932945,https://github.com/hyperledger/iroha/pull/225#issuecomment-286932945,satellitex,"Plesase check `core/service/peer_service.hpp` and `core/service/hijiri.hpp`
Is `peer_service.hpp` too fat?

I think
- Peer :: Node should be written in a separate file.
- directory structure have to  change to that
```
core - peer - hijiri
                    L izanami
                    L service
                    L node
                    L etc..
```",2017-03-16 01:43:48,2017-03-16 01:43:48
https://api.github.com/repos/hyperledger/iroha/issues/225,https://api.github.com/repos/hyperledger/iroha/issues/comments/286957537,https://github.com/hyperledger/iroha/pull/225#issuecomment-286957537,takemiyamakoto,circle-ciを通れるようにしたらいい,2017-03-16 04:52:13,2017-03-16 04:52:13
https://api.github.com/repos/hyperledger/iroha/issues/225,https://api.github.com/repos/hyperledger/iroha/issues/comments/287041507,https://github.com/hyperledger/iroha/pull/225#issuecomment-287041507,l4l,"that pretty hard to review, lets merge #209 before
then apply your fixes to the top of the branch",2017-03-16 12:25:22,2017-03-16 12:59:46
https://api.github.com/repos/hyperledger/iroha/issues/225,https://api.github.com/repos/hyperledger/iroha/issues/comments/287340545,https://github.com/hyperledger/iroha/pull/225#issuecomment-287340545,l4l,"Could you please save your fixes and recreate this branch from current develop branch?
There's lots of conflicts
ping me in pm if you need help on that",2017-03-17 12:23:16,2017-03-17 12:23:53
https://api.github.com/repos/hyperledger/iroha/issues/225,https://api.github.com/repos/hyperledger/iroha/issues/comments/287508070,https://github.com/hyperledger/iroha/pull/225#issuecomment-287508070,motxx,"I've got some trouble when merging develop branch. I don't know why this error occurs in circle-ci.
```
invalid argument ""hyperledger/iroha-docker:refactor/develop"" for t: Error parsing reference: ""hyperledger/iroha-docker:refactor/develop"" is not a valid repository/tag: invalid reference format
```

Circle-CI link is:
https://circleci.com/gh/hyperledger/iroha/1860?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link

@Warchant 
Could you look through circle-ci-link?
",2017-03-18 01:47:27,2017-03-18 05:06:29
https://api.github.com/repos/hyperledger/iroha/issues/225,https://api.github.com/repos/hyperledger/iroha/issues/comments/287532449,https://github.com/hyperledger/iroha/pull/225#issuecomment-287532449,Warchant,"@motxx sorry, new circle 2.0 pushes each branch to docker hub as hyperledger/iroha-docker:branch_name.

Branch names typically have / inside (like `refactor/something`). But / is invalid character for docker image tag. 

So, as a solution -- I replace all invalid characters with dots (`refactor.something`)

Sorry again. Now it should work.",2017-03-18 10:12:52,2017-03-18 10:30:41
https://api.github.com/repos/hyperledger/iroha/issues/225,https://api.github.com/repos/hyperledger/iroha/issues/comments/287534096,https://github.com/hyperledger/iroha/pull/225#issuecomment-287534096,motxx,Thanks for your fixing!,2017-03-18 10:35:55,2017-03-18 10:35:55
https://api.github.com/repos/hyperledger/iroha/issues/225,https://api.github.com/repos/hyperledger/iroha/issues/comments/287534708,https://github.com/hyperledger/iroha/pull/225#issuecomment-287534708,Warchant,"*UPD*, please pull again, there is one more fix.",2017-03-18 10:43:56,2017-03-18 10:43:56
https://api.github.com/repos/hyperledger/iroha/issues/224,https://api.github.com/repos/hyperledger/iroha/issues/comments/286771787,https://github.com/hyperledger/iroha/pull/224#issuecomment-286771787,MizukiSonoko,Ok thanks!,2017-03-15 15:09:10,2017-03-15 15:09:10
https://api.github.com/repos/hyperledger/iroha/issues/223,https://api.github.com/repos/hyperledger/iroha/issues/comments/286763529,https://github.com/hyperledger/iroha/issues/223#issuecomment-286763529,Warchant,UPD: This is for develop branch also. ,2017-03-15 14:44:07,2017-03-15 14:44:07
https://api.github.com/repos/hyperledger/iroha/issues/223,https://api.github.com/repos/hyperledger/iroha/issues/comments/286904012,https://github.com/hyperledger/iroha/issues/223#issuecomment-286904012,l4l,"[This](https://github.com/hyperledger/iroha/blob/master/core/repository/consensus/merkle_transaction_repository.cpp#L94) loop is endless, that is the problem
ping @takemiyamakoto ",2017-03-15 22:48:36,2017-03-15 22:48:36
https://api.github.com/repos/hyperledger/iroha/issues/223,https://api.github.com/repos/hyperledger/iroha/issues/comments/286931486,https://github.com/hyperledger/iroha/issues/223#issuecomment-286931486,takemiyamakoto,@l4l That code shouldn't even be used right now because we are moving all the Merkle root code to ametsuchi. ,2017-03-16 01:34:14,2017-03-16 01:34:14
https://api.github.com/repos/hyperledger/iroha/issues/223,https://api.github.com/repos/hyperledger/iroha/issues/comments/287048805,https://github.com/hyperledger/iroha/issues/223#issuecomment-287048805,l4l,look fine now,2017-03-16 12:58:10,2017-03-16 12:58:10
https://api.github.com/repos/hyperledger/iroha/issues/222,https://api.github.com/repos/hyperledger/iroha/issues/comments/286462139,https://github.com/hyperledger/iroha/pull/222#issuecomment-286462139,emilmelnikov,"Unfortunately, when I've suggested replacing commands with enums, I didn't think of command parameters (e.g. the _transfer_ command should have the _receiver_ parameter).
The solution with the `CommandOption` table doesn't look nice and complicates the ledger storage.

Maybe revert back to command tables/structs, but define them separately for each object type?

Example API sketch:

```
table Transaction {
  object: Object;
}

union Object { Currency, Peer }

table Currency {
  value: ulong;
  command: CurrencyCommand;
}

union CurrencyCommand { CurrencyAdd, CurrencyRemove, CurrencyTransfer }

struct CurrencyTransfer {
  receiver: string;
}
```

The downside of this approach is a lot of object-command tables.",2017-03-14 15:41:49,2017-03-14 15:41:49
https://api.github.com/repos/hyperledger/iroha/issues/222,https://api.github.com/repos/hyperledger/iroha/issues/comments/286751317,https://github.com/hyperledger/iroha/pull/222#issuecomment-286751317,emilmelnikov,"The better option is to remove command/object nesting altogether:

```
table Transaction {
  command: Command;
}

union Command { CurrencyAdd, CurrencyRemove, CurrencyTransfer, PeerAdd, PeerRemove };

table CurrencyAdd {
  currency: Currency;
}

table CurrencyRemove {
  currency: Currency;
  // The alternative way is to list the ""primary key"" of the object:
  // name: string;
  // domain: Domain;
  // ledgerID: string;
}

table CurrencyTransfer {
  currency: Currency;
  // The ""alternative way"" also applies here.
  receiver: string;
}
```

In code, it will be handled with a one giant switch command, but one can hide it in some kind of factory:

```
class Command {
  virtual ~Command() {};
  // Common command interface...
}

class CurrencyAddCommand : Command {
  virtual ~CurrencyAddCommand() override {};
  // Implementation of the command interface...
}

class CurrencyRemoveCommand : Command {
  virtual ~CurrencyRemoveCommand() override {};
  // Implementation of the command interface...
}

class TransactionFactory {
  Command getCommand(const uint8_t* buffer);
}

Command TransactionFactory::getCommand(const uint8_t* buffer) {
  uint8_t* buf;
  auto transaction = GetTransaction(buffer);
  switch (transaction->command_type()) {
    case (Command_CurrencyAdd):
      // Handle CurrencyAdd
      return CurrencyAddCommand(params);
    case (Command_CurrencyRemove):
      // Handle CurrencyRemove
      return CurrencyRemoveCommand(params);
  }
}
```",2017-03-15 14:05:51,2017-03-15 14:05:51
https://api.github.com/repos/hyperledger/iroha/issues/222,https://api.github.com/repos/hyperledger/iroha/issues/comments/286759748,https://github.com/hyperledger/iroha/pull/222#issuecomment-286759748,MizukiSonoko,"Ok thanks, I understanded it
I think code increase on large scale...
But, 

I think If there is auto generating code, it is best solution.
",2017-03-15 14:32:24,2017-03-15 14:35:40
https://api.github.com/repos/hyperledger/iroha/issues/222,https://api.github.com/repos/hyperledger/iroha/issues/comments/286797438,https://github.com/hyperledger/iroha/pull/222#issuecomment-286797438,Warchant,"My proposal:
https://gist.github.com/Warchant/b7049e2f0653bd30c78f06b283c30bf0

Sorry, there are lots of files, probably some can be combined.
Also, don't worry about lots of includes:
> include automatically ensures each file is parsed just once, even when referred to more than once., -- Google

Root fbs is `main.fbs`",2017-03-15 16:25:42,2017-03-15 16:29:30
https://api.github.com/repos/hyperledger/iroha/issues/222,https://api.github.com/repos/hyperledger/iroha/issues/comments/287511203,https://github.com/hyperledger/iroha/pull/222#issuecomment-287511203,takemiyamakoto,Meeting tonight at 19:00 JST to discuss the data format some more.,2017-03-18 02:46:06,2017-03-18 02:46:06
https://api.github.com/repos/hyperledger/iroha/issues/222,https://api.github.com/repos/hyperledger/iroha/issues/comments/287631235,https://github.com/hyperledger/iroha/pull/222#issuecomment-287631235,MizukiSonoko,**Unnessecarry**,2017-03-19 17:11:13,2017-03-19 17:11:13
https://api.github.com/repos/hyperledger/iroha/issues/220,https://api.github.com/repos/hyperledger/iroha/issues/comments/286240766,https://github.com/hyperledger/iroha/issues/220#issuecomment-286240766,Warchant,"Also, it looks like it spawns new threads with each POST request
```
curl -X POST http://127.0.0.1:1204/account/register -d '{""publicKey"":""e3IrRuiebs78YDdxrve6ZSp3rFbGvJB5fnGcRdVKTrw="",""alias"":""bogdan"",""timestamp"":1485182435}'
```",2017-03-13 20:55:22,2017-03-13 20:55:48
https://api.github.com/repos/hyperledger/iroha/issues/220,https://api.github.com/repos/hyperledger/iroha/issues/comments/286251008,https://github.com/hyperledger/iroha/issues/220#issuecomment-286251008,Warchant,"@MizukiSonoko 
https://github.com/MizukiSonoko/Cappuccino/blob/featue/asio/cappuccino.hpp#L572
change to 
```
std::string request = std::string{buf.data(), buf.data() + len};
```

and remove unsafe `buf_to_string` ",2017-03-13 21:34:17,2017-03-13 21:34:54
https://api.github.com/repos/hyperledger/iroha/issues/220,https://api.github.com/repos/hyperledger/iroha/issues/comments/286283410,https://github.com/hyperledger/iroha/issues/220#issuecomment-286283410,MizukiSonoko,Ok 🙇  I fixed,2017-03-14 00:15:32,2017-03-14 00:36:56
https://api.github.com/repos/hyperledger/iroha/issues/214,https://api.github.com/repos/hyperledger/iroha/issues/comments/285915123,https://github.com/hyperledger/iroha/issues/214#issuecomment-285915123,MizukiSonoko,Move chat sorry,2017-03-12 01:51:42,2017-03-12 01:51:42
https://api.github.com/repos/hyperledger/iroha/issues/213,https://api.github.com/repos/hyperledger/iroha/issues/comments/285896446,https://github.com/hyperledger/iroha/pull/213#issuecomment-285896446,luckychess,@MizukiSonoko may be solution from https://github.com/hyperledger/iroha/pull/210 will be better?,2017-03-11 20:09:37,2017-03-11 20:09:37
https://api.github.com/repos/hyperledger/iroha/issues/210,https://api.github.com/repos/hyperledger/iroha/issues/comments/285805498,https://github.com/hyperledger/iroha/pull/210#issuecomment-285805498,luckychess,"SetUpTestCase and TearDownTestCase functions are what we need here.
@l4l I think everything is good now.",2017-03-10 22:43:38,2017-03-10 22:44:33
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/285951240,https://github.com/hyperledger/iroha/pull/209#issuecomment-285951240,satellitex,"## Test add peer
### Manual
`$IROHA_HOME/docker/build.sh -f`
`docker-compose up`
`docker-compose scale iroha=4`

`docker exec -it iroha_iroha_1 sh -c ""/usr/local/iroha/bin/issue_transaction add peer [ip] [publicKey] 0.0 false""`

But, circle.yml happened error.
Pelase check someone. circle.yml.
( notes: I overwrite config-server.py )",2017-03-12 15:16:01,2017-03-12 15:16:01
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/285961109,https://github.com/hyperledger/iroha/pull/209#issuecomment-285961109,Warchant,WIP,2017-03-12 17:48:02,2017-03-12 17:48:02
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286206393,https://github.com/hyperledger/iroha/pull/209#issuecomment-286206393,Warchant,"@satellitex 
```
docker exec -it iroha_iroha_1 sh -c ""/usr/local/iroha/bin/issue_transaction add peer [ip] [publicKey] 0.0 false""
```

This means that node `iroha_iroha_1` (which is already in a network), invite peer with ip=`[ip]` and public key = `[publicKey]`?

0.0 is a trusted score? 
What is `false` in the end?
",2017-03-13 18:50:16,2017-03-13 18:50:25
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286304683,https://github.com/hyperledger/iroha/pull/209#issuecomment-286304683,satellitex,"@Warchant 
Yes. 
`iroha_iroha_1` is already in a network. ( In other words, `iroha_iroha_1` is master peer.)
invite peer with ip=`[ip]` and public key = `[publicKey]` is correct. 
In particular, [ip] = `iroha_iroha_i`'s ip , [publicKey] = `ioroha_iroha_i`'s publickey. ( ""i"" is integer that is upper than 1. )

`0.0` is trustScore. But, it is not used.
`false` is which active? or non active? but, it is not used.
So, `0.0` and `false` is dummy data.",2017-03-14 02:37:40,2017-03-14 02:37:40
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286308109,https://github.com/hyperledger/iroha/pull/209#issuecomment-286308109,takemiyamakoto,"The trustScore will be part of *Hijiri*, the reputation system, once it is done.",2017-03-14 03:00:47,2017-03-14 03:00:47
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286308431,https://github.com/hyperledger/iroha/pull/209#issuecomment-286308431,satellitex,"`trustScore` is fixed value when add peer.
In other words, every peer has the same trustScore at the beginning.",2017-03-14 03:03:16,2017-03-14 03:03:16
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286378831,https://github.com/hyperledger/iroha/pull/209#issuecomment-286378831,Warchant,"How do I know that new node is connected? 
I tried this with 2 and 3 nodes, only master node reacts on `issue_command`, slave node (which I am trying to connect) says nothing",2017-03-14 10:18:58,2017-03-14 10:18:58
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286394220,https://github.com/hyperledger/iroha/pull/209#issuecomment-286394220,satellitex,"@Warchant 
Currently under investigation.
Happened my case.
```
iroha_1            | 1489490450[sumeragi] commit
iroha_1            | 1489490450[sumeragi] commit count:1
iroha_1            | 1489490450 INFO [WorldStateRepositoryWithLeveldb] LoadDB
iroha_1            | 1489490450 INFO [WorldStateRepositoryWithLeveldb] NotFound:
```
After this, Verify sendall should be called. However, the program does not seem to call this.",2017-03-14 11:29:10,2017-03-14 11:29:10
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286434950,https://github.com/hyperledger/iroha/pull/209#issuecomment-286434950,Warchant,"To simplify your development:

1. create iroha network `docker network create --subnet=172.20.0.0/16 iroha-network` (you should do it only once)
2. prepare sumeragi.json for 2 nodes (for each node separate config)
3. run 
    ```
    docker run -dit \
    --network=iroha-network \
    --ip=172.20.0.1 \
    --name iroha1 \
    -v sumeragi1.json:/usr/local/iroha/config/sumeragi.json \
    hyperledger/iroha-docker
    ```
for each node (change iroha1 to iroha2 and sumeragi1.json to sumeragi2.json, ip from 172.20.0.1 to 172.20.0.2)

at this step you have two separate fully configured nodes

4. then, attach to 'master' peer `docker exec -it iroha1 bash`
5. issue necessary commands",2017-03-14 14:18:15,2017-03-14 14:19:32
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286511647,https://github.com/hyperledger/iroha/pull/209#issuecomment-286511647,satellitex,"https://github.com/hyperledger/iroha/pull/209#issuecomment-286394220
Correct this problem.
`sendAll` method don't send my peer.
However, Sumeragi do to issue `sendAll` after get consensus. Then, Sumeragi don't exec execute function.  Sumeragi execute transaction in `Verify` after get consensus.
So, `sendAll` method must send mine.

https://github.com/hyperledger/iroha/pull/209/commits/2b91bd06c2f3a46841e9d098620e5e22ef9dcf21
",2017-03-14 18:12:35,2017-03-14 18:12:35
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286613961,https://github.com/hyperledger/iroha/pull/209#issuecomment-286613961,satellitex,"In ssh circleci.
```
(venv-system) ubuntu@box791:~/iroha$ sudo docker exec -it iroha1 /bin/bash
open /proc/self/oom_score_adj: no such file or directory
(venv-system) ubuntu@box791:~/iroha$ docker exec -it iroha1 /bin/bash
open /proc/self/oom_score_adj: no such file or directory
(venv-system) ubuntu@box791:~/iroha$ docker ps
CONTAINER ID        IMAGE                      COMMAND             CREATED             STATUS              PORTS               NAMES
9b3f740176e2        hyperledger/iroha-docker   ""/run.sh""           11 minutes ago      Up 11 minutes                           iroha2
57e5946dfbc2        hyperledger/iroha-docker   ""/run.sh""           11 minutes ago      Up 11 minutes                           iroha1
```

Is `docker exec * *` unused in circleci?
I got an error. `open /proc/self/oom_score_adj: no such file or directory`",2017-03-15 01:32:15,2017-03-15 01:32:59
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/286749925,https://github.com/hyperledger/iroha/pull/209#issuecomment-286749925,satellitex,"Correct Local Test.
## How to 
```
$ docker network create --subnet=172.20.0.0/16 iroha-network
$ docker run -dit \
--net=iroha-network \
--ip=172.20.0.2 \
--name iroha1 \
-v $IROHA_HOME/config/sumeragi1.json:/usr/local/iroha/config/sumeragi.json \
hyperledger/iroha-docker
$ docker run -dit \
--net=iroha-network \
--ip=172.20.0.3 \
--name iroha2 \
-v $IROHA_HOME/config/sumeragi2.json:/usr/local/iroha/config/sumeragi.json \
hyperledger/iroha-docker
$ docker exec -it iroha1 sh -c '/usr/local/iroha/bin/issue_transaction add peer yUAFTYNh6qkhBMiNgNdg45Wk/XHOGYanuIroY9skfPQ= 172.20.0.3 1.0 true'
```",2017-03-15 14:01:17,2017-03-15 14:01:17
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/287311464,https://github.com/hyperledger/iroha/pull/209#issuecomment-287311464,satellitex,"Could you merge this branch?
Could you check review.
`issue_transaction.cpp`  can use `add peer` or `add domain`. Now, other than that is no compatible. But, it is don't use  urgent. So, please ignore `tools/helper/*`.",2017-03-17 09:50:31,2017-03-17 09:50:31
https://api.github.com/repos/hyperledger/iroha/issues/209,https://api.github.com/repos/hyperledger/iroha/issues/comments/287314179,https://github.com/hyperledger/iroha/pull/209#issuecomment-287314179,l4l,"I've removed redundant commits
D: but a bit missed with commit hash at rebasing so all commits' hashes have been changed, so either push old branch(_that would be better_) so I can properly remove those, or just download new branch",2017-03-17 10:02:53,2017-03-17 10:03:19
https://api.github.com/repos/hyperledger/iroha/issues/208,https://api.github.com/repos/hyperledger/iroha/issues/comments/285542497,https://github.com/hyperledger/iroha/pull/208#issuecomment-285542497,motxx,@Warchant Thanks for your review. :),2017-03-10 01:11:13,2017-03-10 01:11:13
https://api.github.com/repos/hyperledger/iroha/issues/207,https://api.github.com/repos/hyperledger/iroha/issues/comments/289687271,https://github.com/hyperledger/iroha/issues/207#issuecomment-289687271,satellitex,"# Synchronize Blocks Flow ( WIP )
https://docs.google.com/a/soramitsu.co.jp/presentation/d/1Yz5_CZ8osPLY6NpGE6SrlXFXQLv6vWIeEjqjjDb21e8/edit?usp=sharing

Please review it.

",2017-03-28 07:31:34,2017-03-28 07:31:34
https://api.github.com/repos/hyperledger/iroha/issues/207,https://api.github.com/repos/hyperledger/iroha/issues/comments/289727537,https://github.com/hyperledger/iroha/issues/207#issuecomment-289727537,satellitex,"# Synchoronize Blocks FlowChart ( Preliminary version )
https://drive.google.com/file/d/0BzrYBcd0oxJOT0VNZVNRS1pJVmc/view?usp=sharing
↑ use draw.io 

## Description
- Synchornize peer main
  - main method.
  - Start synchornize start ledger
- Check broken root
  - Check root-hash is different another peer.
- Search broken point
  - Search where hash to broken.
- fetch transaction
  - This is called by each fetch transaction ( streaming ).
- send transactoin
  - Peer that receive fetch request execute method.
- Finish Fetch
  - This is called by finish fetch or error fetch.
  - It checked valid root-hash. If invalid restart sync-operation.
- Call Fetch Transaction ( id )
  - This call streaming fetch all transaction after transaction's identify >= `id`",2017-03-28 10:23:22,2017-03-28 11:22:51
https://api.github.com/repos/hyperledger/iroha/issues/207,https://api.github.com/repos/hyperledger/iroha/issues/comments/290978428,https://github.com/hyperledger/iroha/issues/207#issuecomment-290978428,Warchant,What if a difference in a leftmost leaf?,2017-04-02 10:46:29,2017-04-02 10:46:35
https://api.github.com/repos/hyperledger/iroha/issues/207,https://api.github.com/repos/hyperledger/iroha/issues/comments/290991560,https://github.com/hyperledger/iroha/issues/207#issuecomment-290991560,satellitex,"I think node of merkle has accumulation hash. ( e.g, i-th hash has [0..i] hash )
So, Can do alike binary search.",2017-04-02 14:57:28,2017-04-02 14:57:28
https://api.github.com/repos/hyperledger/iroha/issues/207,https://api.github.com/repos/hyperledger/iroha/issues/comments/327414741,https://github.com/hyperledger/iroha/issues/207#issuecomment-327414741,neewy,Peer synchronisation is implemented now,2017-09-06 08:33:58,2017-09-06 08:33:58
https://api.github.com/repos/hyperledger/iroha/issues/206,https://api.github.com/repos/hyperledger/iroha/issues/comments/285023493,https://github.com/hyperledger/iroha/pull/206#issuecomment-285023493,motxx,"This branch was deleted. If there is something wrong, I'll checkout new branch from develop.",2017-03-08 12:03:14,2017-03-08 12:03:27
https://api.github.com/repos/hyperledger/iroha/issues/205,https://api.github.com/repos/hyperledger/iroha/issues/comments/284986577,https://github.com/hyperledger/iroha/pull/205#issuecomment-284986577,takemiyamakoto,"As this PR fixes a lot of problems that exist in the current master, I am going to go ahead and merge.",2017-03-08 09:07:14,2017-03-08 09:07:14
https://api.github.com/repos/hyperledger/iroha/issues/204,https://api.github.com/repos/hyperledger/iroha/issues/comments/284914390,https://github.com/hyperledger/iroha/issues/204#issuecomment-284914390,motxx,"Thanks, I'm fixing now.",2017-03-08 01:13:15,2017-03-08 01:13:15
https://api.github.com/repos/hyperledger/iroha/issues/204,https://api.github.com/repos/hyperledger/iroha/issues/comments/285003963,https://github.com/hyperledger/iroha/issues/204#issuecomment-285003963,luckychess,@Warchant  My initial config implementation was exactly the same as you want it now but was rejected on code review.,2017-03-08 10:24:23,2017-03-08 10:24:23
https://api.github.com/repos/hyperledger/iroha/issues/204,https://api.github.com/repos/hyperledger/iroha/issues/comments/285006892,https://github.com/hyperledger/iroha/issues/204#issuecomment-285006892,motxx,"@Warchant @luckychess Sorry for my late. I fixed at #206, but please tell me if something wrong or awful.",2017-03-08 10:37:52,2017-03-08 10:37:52
https://api.github.com/repos/hyperledger/iroha/issues/203,https://api.github.com/repos/hyperledger/iroha/issues/comments/284949301,https://github.com/hyperledger/iroha/pull/203#issuecomment-284949301,Warchant,"For some reason both cappuccino (asio) and grpc are binded onto ipv6 socket:
```
root@e80412b5ad30:~# netstat -ntulp
(No info could be read for ""-p"": geteuid()=0 but you should be root.)
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp6       0      0 :::50051                :::*                    LISTEN      -               
tcp6       0      0 ::1:1204                :::*                    LISTEN      -
```

And any attempts to connect fail. This is why test on circle-ci does not work.",2017-03-08 05:15:54,2017-03-08 05:15:54
https://api.github.com/repos/hyperledger/iroha/issues/202,https://api.github.com/repos/hyperledger/iroha/issues/comments/284905376,https://github.com/hyperledger/iroha/issues/202#issuecomment-284905376,Warchant,"Please, if you add code temporarily, add some comments, like this:
```
// TODO: this is temporary solution
```",2017-03-08 00:23:25,2017-03-08 00:23:34
https://api.github.com/repos/hyperledger/iroha/issues/201,https://api.github.com/repos/hyperledger/iroha/issues/comments/284889865,https://github.com/hyperledger/iroha/issues/201#issuecomment-284889865,Warchant,"1. Again I run a network of 4 nodes
2. make curl
3. and receive this:
    `{""message"":""successful"",""status"":200,""uuid"":""""}`


Here is the output of 3 nodes.
```
iroha2_1           | 1488927248 INFO [connection] size: 2
iroha2_1           | 1488927248 INFO [sumeragi] receive!
iroha2_1           | 1488927248 INFO [sumeragi] received message! sig:[2]
iroha2_1           | 1488927248 INFO [sumeragi] received message! status:[uncommit]
iroha4_1           | 1488927248 INFO [connection] size: 2
iroha4_1           | 1488927248 INFO [sumeragi] receive!
iroha4_1           | 1488927248 INFO [sumeragi] received message! sig:[2]
iroha4_1           | 1488927248 INFO [sumeragi] received message! status:[uncommit]
iroha3_1           | 1488927248 INFO [connection] size: 2
iroha3_1           | 1488927248 INFO [sumeragi] receive!
iroha3_1           | 1488927248 INFO [sumeragi] received message! sig:[2]
iroha3_1           | 1488927248 INFO [sumeragi] received message! status:[uncommit]
```

And (4th) node to which I sent account registration query:
```
1488927248 INFO [sumeragi] receive!
1488927248 INFO [connection] response: OK
1488927248 INFO [sumeragi] processTransaction
1488927248 INFO [sumeragi] valid
1488927248 INFO [sumeragi] Add my signature...
1488927248 INFO [sumeragi] hash:958857657e077431b5914f3d4b9ebf55d5233161ddc4d3a9bd5e815fb64443ad
1488927248 INFO [sumeragi] pub: gg0/lKLetw+v8co6X2iY3tvTCL1Z7dVzleYfR78mcmM=
1488927248 INFO [sumeragi] priv:SKR0QUG8ICvtEJD0arZcQhmKOT8AZh8fMTodXn0U5nlijTl3mfX9S7dwT8jCn8s4jOxWEZtgEE6atNsp9IKbEw==
1488927248 INFO [sumeragi] sig: HbE0kMintySpmzNxsym6LRqlz1TCJANUnRiFQJXopjBeN80YZ7E4EapM+wcKXKtjJ3J33Xs+873oSUVAkqApDQ==
1488927248 INFO [sumeragi] tail public key is eRAoOIIIuom32dwizwiw0euX0ENiBywS6bb8gPzxkXM=
1488927248 INFO [sumeragi] tail is 3
1488927248 INFO [sumeragi] my public key is gg0/lKLetw+v8co6X2iY3tvTCL1Z7dVzleYfR78mcmM=
1488927248 INFO [sumeragi] Send All! sig:[2]
1488927248 INFO [connection] Operation
1488927248 INFO [connection] size: 2
1488927248 INFO [connection] name: 
1488927248 ERROR (-A-) [connection] 14: {""created"":""@1488927248.582244076"",""description"":""EOF"",""file"":""src/core/lib/iomgr/tcp_posix.c"",""file_line"":235,""grpc_status"":14}
1488927248 INFO [connection] Operation
1488927248 INFO [connection] size: 2
1488927248 INFO [connection] name: 
1488927248 ERROR (-A-) [connection] 14: {""created"":""@1488927248.675784172"",""description"":""EOF"",""file"":""src/core/lib/iomgr/tcp_posix.c"",""file_line"":235,""grpc_status"":14}
1488927248 INFO [connection] Operation
1488927248 INFO [connection] size: 2
1488927248 INFO [connection] name: 
1488927248 ERROR (-A-) [connection] 14: {""created"":""@1488927248.773697576"",""description"":""EOF"",""file"":""src/core/lib/iomgr/tcp_posix.c"",""file_line"":235,""grpc_status"":14}
1488927251 INFO [WorldStateRepositoryWithLeveldb] NotFound: 
1488927251 INFO [sumeragi] broadcastEnd:3
1488927251 INFO [sumeragi] broadcastStart:3
```

```
$ netstat -ntulp
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 127.0.0.11:36319        0.0.0.0:*               LISTEN      -
tcp        0      0 0.0.0.0:1204            0.0.0.0:*               LISTEN      3560/iroha-main
tcp6       0      0 :::50051                :::*                    LISTEN      3560/iroha-main
udp        0      0 127.0.0.11:39627        0.0.0.0:*                           -

```
",2017-03-07 23:05:09,2017-03-07 23:05:34
https://api.github.com/repos/hyperledger/iroha/issues/201,https://api.github.com/repos/hyperledger/iroha/issues/comments/284950239,https://github.com/hyperledger/iroha/issues/201#issuecomment-284950239,Warchant,"Docker image has default `/etc/hosts`:
```
127.0.0.1	localhost
::1	localhost ip6-localhost ip6-loopback
fe00::0	ip6-localnet
ff00::0	ip6-mcastprefix
ff02::1	ip6-allnodes
ff02::2	ip6-allrouters
172.17.0.2	dc51b342c6d4
```

See this? 
```
127.0.0.1	localhost
::1	localhost ip6-localhost ip6-loopback
-------^^^^^^^^
```

Now cappuccino listens on `localhost` by default, this makes docker think that it should listen on `::1` (which is not 127.0.0.1 or something else)

. That should be changed to `0.0.0.0` or host address should be passed as a parameter to cappuccino.

",2017-03-08 05:23:19,2017-03-08 05:25:29
https://api.github.com/repos/hyperledger/iroha/issues/201,https://api.github.com/repos/hyperledger/iroha/issues/comments/284950828,https://github.com/hyperledger/iroha/issues/201#issuecomment-284950828,Warchant,Seems fixed by https://github.com/MizukiSonoko/Cappuccino/commit/4314871055fa1ddae78e4693b9d68819eb0cc842,2017-03-08 05:28:05,2017-03-08 05:28:20
https://api.github.com/repos/hyperledger/iroha/issues/201,https://api.github.com/repos/hyperledger/iroha/issues/comments/284951634,https://github.com/hyperledger/iroha/issues/201#issuecomment-284951634,takemiyamakoto,ʕ•̫͡•ʕ•̫͡•ʔ•̫͡•ʔ•̫͡•ʕ•̫͡•ʔ•̫͡•ʕ•̫͡•ʕ•̫͡•ʔ•̫͡•ʔ•̫͡•ʕ•̫͡•ʔ•̫͡•ʔ,2017-03-08 05:34:44,2017-03-08 05:34:44
https://api.github.com/repos/hyperledger/iroha/issues/201,https://api.github.com/repos/hyperledger/iroha/issues/comments/285502503,https://github.com/hyperledger/iroha/issues/201#issuecomment-285502503,Warchant,"Not fixed for GRPC
```
tcp        0      0 0.0.0.0:1204            0.0.0.0:*               LISTEN      3560/iroha-main
tcp6       0      0 :::50051                :::*                    LISTEN      3560/iroha-main
```

@MizukiSonoko ",2017-03-09 22:21:42,2017-03-09 22:21:51
https://api.github.com/repos/hyperledger/iroha/issues/201,https://api.github.com/repos/hyperledger/iroha/issues/comments/286986583,https://github.com/hyperledger/iroha/issues/201#issuecomment-286986583,Warchant,Seems it is a problem with docker. ,2017-03-16 08:15:49,2017-03-16 08:15:49
https://api.github.com/repos/hyperledger/iroha/issues/201,https://api.github.com/repos/hyperledger/iroha/issues/comments/287273709,https://github.com/hyperledger/iroha/issues/201#issuecomment-287273709,MizukiSonoko,"I think so 
https://github.com/hyperledger/iroha/blob/77d2f0965c6e34c9f87bfd7cbbbde7dc6842b7e2/core/infra/connection/connection_with_grpc.cpp#L607
",2017-03-17 05:56:15,2017-03-17 05:56:15
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284795825,https://github.com/hyperledger/iroha/issues/198#issuecomment-284795825,MizukiSonoko,"It's mystery...
There is no difference between Master's http_server_with_cappuccino and Develop's it.
https://github.com/hyperledger/iroha/compare/master...develop
",2017-03-07 17:30:35,2017-03-07 17:30:35
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284853549,https://github.com/hyperledger/iroha/issues/198#issuecomment-284853549,luckychess,"Master behaves exactly the same as develop (at least on my machine).
Interesting fact - after some switches from master->develop->master->develop I got another error:
```
luckychess[develop *] bin $ ./iroha-main 
1488918804 DEBUG [config] load json is { 
  ""database_path"":""/tmp/iroha_ledger"",
  ""java_class_path"":""java_tests"",
  ""java_class_path_local"":""smart_contract/java_tests"",
  ""java_library_path"":""lib"",
  ""java_library_path_local"":""build/lib"",
  ""java_policy_path"":""jvm/java.policy.txt"",
  ""concurrency"": 0,
  ""max_faulty_peers"" : 1,
  ""pool_worker_queue_size"": 1024,
  ""http_port"": 1204,
  ""grpc_port"": 50051
}

1488918804 INFO [main] process is :10419
1488918804[sumeragi] +==ーーーーーーーーー==+
1488918804[sumeragi] |+-ーーーーーーーーー-+|
1488918804[sumeragi] || 　　　　　　　　　 ||
1488918804[sumeragi] || いろは合意形成機構 ||
1488918804[sumeragi] || 　　　すめらぎ　　 ||
1488918804[sumeragi] || 　　　　　　　　　 ||
1488918804[sumeragi] |+-ーーーーーーーーー-+|
1488918804[sumeragi] +==ーーーーーーーーー==+
1488918804[sumeragi] - 起動/setup
1488918804[sumeragi] - 初期設定/initialize
1488918804 DEBUG [config] load json is {
  ""group"": [
    {
      ""ip"": ""127.0.0.1"",
      ""name"": ""da77880a3da4"",
      ""publicKey"": ""u7X/zQ/Dq21WW7YH4rbkpiCYJXjPxk5t3qNDKiVwBx8=""
    }
  ],
  ""me"": {
    ""ip"": ""127.0.0.1"",
    ""name"": ""da77880a3da4"",
    ""privateKey"": ""cPY84e0BXGUHBjT4QdlPI0LI3BPIfUfSZjB8jdWURkNQ+pEagT/ysrewbt2YUo/Qbfd5vczW5oDooGSNUBTj9g=="",
    ""publicKey"": ""u7X/zQ/Dq21WW7YH4rbkpiCYJXjPxk5t3qNDKiVwBx8=""
  }
}


1488918804 INFO [sumeragi] My key is 127.0.0.1
1488918804 INFO [sumeragi] Sumeragi setted
1488918804 INFO [sumeragi] set number of validatingPeer
1488918804 INFO [sumeragi] initialize numValidatingPeers :1
1488918804 INFO [sumeragi] initialize maxFaulty :1
1488918804 INFO [sumeragi] initialize proxyTailNdx :0
1488918804 INFO [sumeragi] initialize panicCount :0
1488918804 INFO [sumeragi] initialize myPublicKey :u7X/zQ/Dq21WW7YH4rbkpiCYJXjPxk5t3qNDKiVwBx8=
1488918804 INFO [sumeragi] initialize is sumeragi :1
1488918804 INFO [sumeragi] initialize.....  complete!
1488918804 INFO [server] initialize server!
1488918804 INFO [server] start server!
1488918808 INFO [sumeragi] receive!
Segmentation fault
```
Answer is empty:
```
luckychess iroha $ curl -X POST http://127.0.0.1:1204/account/register -d '{""publicKey"":""e3IrRuiebs78YDdxrve6ZSp3rFbGvJB5fnGcRdVKTrw="",""alias"":""bogdan"",""timestamp"":1485182435}'
curl: (52) Empty reply from server
```
I'm not sure are these 2 crashes have same origin or they are completely independent. Going to go deeper.",2017-03-07 20:46:37,2017-03-07 20:46:37
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284859119,https://github.com/hyperledger/iroha/issues/198#issuecomment-284859119,Warchant,"@MizukiSonoko @luckychess 
1. I started a network of 4 nodes
2. sent register curl
    ```
    curl -X POST http://172.18.0.3:1204/account/register -d '{""publicKey"":""e3IrRuiebs78YDdxrve6ZSp3rFbGvJB5fnGcRdVKTrw="",""alias"":""bogdan"",""timestamp"":1485182435}'
    ```
3. logs: https://gist.github.com/Warchant/f8754433b2e1125c9951389eb2119645
4. result: 
    ```
    {""message"":""successful"",""status"":200,""uuid"":""""}
    ````
5. node 172.18.0.3 died",2017-03-07 21:06:57,2017-03-07 21:08:46
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284861181,https://github.com/hyperledger/iroha/issues/198#issuecomment-284861181,luckychess,"@Warchant what branch is it? As I can see from your logs nodes use older config.json files than both current develop and master.
Oh, nevermind, I see you edit now.",2017-03-07 21:14:13,2017-03-07 21:18:43
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284863964,https://github.com/hyperledger/iroha/issues/198#issuecomment-284863964,Warchant,"It is `develop` branch.

After relaunch of failed node and sending again
```
1488921801 INFO [sumeragi] receive!
1488921801 INFO [connection] response: OK
1488921801 INFO [sumeragi] processTransaction
1488921801 INFO [sumeragi] valid
1488921801 INFO [sumeragi] Add my signature...
1488921801 INFO [sumeragi] hash:958857657e077431b5914f3d4b9ebf55d5233161ddc4d3a9bd5e815fb64443ad
1488921801 INFO [sumeragi] pub: e60a4JbK4iTn1WF2EusOWImZ6TMnDZeGPiimeBOOPgo=
1488921801 INFO [sumeragi] priv:8FaaealKc9/4n6zOVVP6L14SrWfaN6+go2Z8rQrvWHHewTW82FPCcsz8BUb++HNJeeim+KB2Rl60p88fnm2CkA==
1488921801 INFO [sumeragi] sig: LXmybmTqE7WgT02fCkskor0MUJphemaZCdouuVIZQSsxkbLdqHlH8Ocw65eJprW8Qz6ZZiUGQt0y5D8XnZy5Cg==
1488921801 INFO [sumeragi] tail public key is Gy6S+tbFoYB6vvk6ZxoqL1/+jhPbHJE/lOEcmW4FEuI=
1488921801 INFO [sumeragi] tail is 3
1488921801 INFO [sumeragi] my public key is e60a4JbK4iTn1WF2EusOWImZ6TMnDZeGPiimeBOOPgo=
1488921801 INFO [sumeragi] Send All! sig:[2]
1488921801 INFO [connection] Operation
1488921801 INFO [connection] size: 2
1488921801 INFO [connection] name: 
1488921801 INFO [connection] response: OK
1488921801 INFO [connection] Operation
1488921801 INFO [connection] size: 2
1488921801 INFO [connection] name: 
1488921801 INFO [connection] response: OK
1488921801 INFO [connection] Operation
1488921801 INFO [connection] size: 2
1488921801 INFO [connection] name: 1488921801 INFO [connection] size: 3
1488921801 INFO [sumeragi] receive!
1488921801 INFO [sumeragi] received message! sig:[3]
1488921801 INFO [sumeragi] received message! status:[commited]
Executor

DebugString:type: ""Remove""
senderPubkey: ""karin""
domain {
  ownerPublicKey: ""pubkey1""
  name: ""name""
}

1488921801 INFO [connection] response: OK
terminate called without an active exception
During startup program terminated with signal SIGABRT, Aborted.
```


```
iroha3_1           | 1488921801 ERROR (-A-) [connection] 14: {""created"":""@1488921801.349039072"",""description"":""OS Error"",""errno"":104,""file"":""src/core/lib/iomgr/tcp_posix.c"",""file_line"":229,""grpc_status"":14,""os_error"":""Connection reset by peer"",""syscall"":""recvmsg""}
```",2017-03-07 21:24:33,2017-03-07 21:26:49
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284865790,https://github.com/hyperledger/iroha/issues/198#issuecomment-284865790,l4l,"There's also some awful memory leak, takes all available memory. We can not reproduce after first crash.",2017-03-07 21:31:11,2017-03-07 23:46:09
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284869308,https://github.com/hyperledger/iroha/issues/198#issuecomment-284869308,luckychess,"A transaction received looks really strange - it does not contain a hash (and it's an actual reason of a ""my"" crash), it has a ""remove"" type and its public key is strange also.",2017-03-07 21:44:25,2017-03-07 21:44:25
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284869531,https://github.com/hyperledger/iroha/issues/198#issuecomment-284869531,Warchant,"Send it here @luckychess 
",2017-03-07 21:45:19,2017-03-07 21:45:24
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284870407,https://github.com/hyperledger/iroha/issues/198#issuecomment-284870407,luckychess,"![image](https://cloud.githubusercontent.com/assets/3829208/23679418/eb43c810-0398-11e7-954c-ab984110ba0b.png)
",2017-03-07 21:48:27,2017-03-07 21:48:27
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284870597,https://github.com/hyperledger/iroha/issues/198#issuecomment-284870597,luckychess,Sorry for such weird screen ),2017-03-07 21:49:05,2017-03-07 21:49:05
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284871395,https://github.com/hyperledger/iroha/issues/198#issuecomment-284871395,Warchant,"Backtrace to the previous fail:

```
#0  0x00007ffff69ba428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54
#1  0x00007ffff69bc02a in __GI_abort () at abort.c:89
#2  0x00007ffff6ff384d in __gnu_cxx::__verbose_terminate_handler() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#3  0x00007ffff6ff16b6 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#4  0x00007ffff6ff1701 in std::terminate() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6
#5  0x00000000005d5a1b in std::thread::~thread (this=0x7ffff59002a0, __in_chrg=<optimized out>)
    at /usr/include/c++/5/thread:151
#6  0x00000000005dc9c6 in sumeragi::setAwkTimer(int, std::function<void ()>) (sleepMillisecs=3000, action=...)
    at /opt/iroha/core/consensus/sumeragi.cpp:426
#7  0x00000000005dbd8f in sumeragi::processTransaction (event=...) at /opt/iroha/core/consensus/sumeragi.cpp:379
#8  0x00000000005e9c50 in std::_Bind<void (*(Api::ConsensusEvent))(Api::ConsensusEvent&)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) (this=0x7fffe4007540, 
    __args=<unknown type in /usr/local/iroha/bin/iroha-main, CU 0x24701, DIE 0x7a181>)
    at /usr/include/c++/5/functional:1074
#9  0x00000000005e81cb in std::_Bind<void (*(Api::ConsensusEvent))(Api::ConsensusEvent&)>::operator()<, void>() (
    this=0x7fffe4007540) at /usr/include/c++/5/functional:1133
#10 0x00000000005e5ea0 in std::_Function_handler<void (), std::_Bind<void (*(Api::ConsensusEvent))(Api::ConsensusEvent&)> >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/5/functional:1871
#11 0x00000000005e3f54 in std::function<void ()>::operator()() const (this=0x7fffe40073b8)
    at /usr/include/c++/5/functional:2267
#12 0x00000000005e34a7 in std::future<void> ThreadPool::process<std::function<void ()>, void>(std::function<void ()>&&)::{lambda()#1}::operator()() const (__closure=0x7fffe40073b8)
    at /opt/iroha/external/src/warchant_thread_pool/thread_pool/thread_pool.hpp:119
#13 0x00000000005ee565 in std::__invoke<std::future<void> ThreadPool::process<std::function<void ()>, void>(std::function<void ()>&&)::{lambda()#1}> (__f=...) at /usr/include/c++/5/functional:201
#14 0x00000000005ee53a in std::reference_wrapper<std::future<void> ThreadPool::process<std::function<void ()>, void>(std::function<void ()>&&)::{lambda()#1}>::operator()<> (this=0x7ffff5900ad0) at /usr/include/c++/5/functional:428
#15 0x00000000005ee518 in std::_Bind_simple<std::reference_wrapper<std::future<void> ThreadPool::process<std::function<void ()>, void>(std::function<void ()>&&)::{lambda()#1}> ()>::_M_invoke<>(std::_Index_tuple<>) (
    this=0x7ffff5900ad0) at /usr/include/c++/5/functional:1531
#16 0x00000000005ee488 in std::_Bind_simple<std::reference_wrapper<std::future<void> ThreadPool::process<std::function<void ()>, void>(std::function<void ()>&&)::{lambda()#1}> ()>::operator()() (this=0x7ffff5900ad0)
    at /usr/include/c++/5/functional:1520
#17 0x00000000005ee252 in std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<std::future<void> ThreadPool::process<std::function<void ()>, void>(std::function<void ()>&&)::{lambda()#1}> ()>, void>::operator()() const (
    this=0x7ffff5900af0) at /usr/include/c++/5/future:1342
#18 0x00000000005edf31 in std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::_Bind_simple<std::reference_wrapper<std::future<void> ThreadPool::process<std::function<void ()>, void>(std::function<void ()>&&)::{lambda()#1}> ()>, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /usr/include/c++/5/functional:1857
#19 0x00000000005e1d14 in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=0x7ffff5900af0) at /usr/include/c++/5/functional:2267
#20 0x00000000005dfc4c in std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x7fffe4007390, 
    __f=0x7ffff5900af0, __did_set=0x7ffff5900a3f) at /usr/include/c++/5/future:527
#21 0x00000000005ea562 in std::_Mem_fn_base<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), true>::operator()<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*, void>(std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) const (this=0x7ffff59009c8, __object=0x7fffe4007390)
    at /usr/include/c++/5/functional:600
#22 0x00000000005e94cb in std::_Bind_simple<std::_Mem_fn<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)> (std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::_M_invoke<0ul, 1ul, 2ul>(std::_Index_tuple<0ul, 1ul, 2ul>) (this=0x7ffff59009b0)
    at /usr/include/c++/5/functional:1531
#23 0x00000000005e757a in std::_Bind_simple<std::_Mem_fn<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)> (std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::operator()() (this=0x7ffff59009b0) at /usr/include/c++/5/functional:1520
#24 0x00000000005e49db in std::__once_call_impl<std::_Bind_simple<std::_Mem_fn<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)> (std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)> >() () at /usr/include/c++/5/mutex:706
```",2017-03-07 21:52:07,2017-03-07 21:52:07
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284873031,https://github.com/hyperledger/iroha/issues/198#issuecomment-284873031,luckychess,"https://github.com/hyperledger/iroha/blob/develop/core/infra/server/http_server_with_cappuccino.cpp#L117
Is it all OK here?",2017-03-07 21:57:59,2017-03-07 21:57:59
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284878780,https://github.com/hyperledger/iroha/issues/198#issuecomment-284878780,l4l,"We've also found an issue: there's some troubles with ip version choosing.
It can choose IPv6 if it exists",2017-03-07 22:19:35,2017-03-07 22:19:35
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284879851,https://github.com/hyperledger/iroha/issues/198#issuecomment-284879851,luckychess,@l4l just had this issue and could solve it only by complete removing Iroha and cloning it back (that was a background reason of my whining for a build time ) ).,2017-03-07 22:23:39,2017-03-07 22:23:39
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284885751,https://github.com/hyperledger/iroha/issues/198#issuecomment-284885751,l4l,"@luckychess as a quick solution you can remove ipv6 address from network config, e.g:
```
$ ip a #find your ipv6 and iface here
$ sudo ip a d ~your-ipv6~ dev ~your-iface~
```
we'll fix in some time

There's a trouble in cappuccino, it use by default `localhost` as ip, so it can be resolved to ipv6",2017-03-07 22:47:20,2017-03-07 22:51:16
https://api.github.com/repos/hyperledger/iroha/issues/198,https://api.github.com/repos/hyperledger/iroha/issues/comments/284887579,https://github.com/hyperledger/iroha/issues/198#issuecomment-284887579,l4l,[Here's](https://github.com/hyperledger/iroha/commit/a846c5a097320354601117c806af938ef63cd5c4) the fix for SIGSEGV at tx sending,2017-03-07 22:54:46,2017-03-07 22:54:46
https://api.github.com/repos/hyperledger/iroha/issues/197,https://api.github.com/repos/hyperledger/iroha/issues/comments/285247660,https://github.com/hyperledger/iroha/issues/197#issuecomment-285247660,takemiyamakoto,"This was reopened, but is it fixed in master from the latest merges?",2017-03-09 03:55:14,2017-03-09 03:55:14
https://api.github.com/repos/hyperledger/iroha/issues/197,https://api.github.com/repos/hyperledger/iroha/issues/comments/285323563,https://github.com/hyperledger/iroha/issues/197#issuecomment-285323563,l4l,"Interesting, but can't reproduce so I guess that fixed",2017-03-09 11:10:42,2017-03-09 11:10:42
https://api.github.com/repos/hyperledger/iroha/issues/196,https://api.github.com/repos/hyperledger/iroha/issues/comments/314420392,https://github.com/hyperledger/iroha/issues/196#issuecomment-314420392,l4l,outdated,2017-07-11 11:54:27,2017-07-11 11:54:27
https://api.github.com/repos/hyperledger/iroha/issues/194,https://api.github.com/repos/hyperledger/iroha/issues/comments/284182986,https://github.com/hyperledger/iroha/pull/194#issuecomment-284182986,satellitex,"https://github.com/hyperledger/iroha/issues/146#issuecomment-284165541
[WIP]izanami",2017-03-04 21:22:55,2017-03-04 21:23:11
https://api.github.com/repos/hyperledger/iroha/issues/194,https://api.github.com/repos/hyperledger/iroha/issues/comments/284202818,https://github.com/hyperledger/iroha/pull/194#issuecomment-284202818,satellitex,"Izanami doc
https://github.com/hyperledger/iroha/issues/146#issuecomment-284202717

Peer Service doc
https://github.com/hyperledger/iroha/issues/146#issuecomment-284169389

I will change Peer service module, becouse now desgin is not cool. ",2017-03-05 03:37:32,2017-03-05 03:37:32
https://api.github.com/repos/hyperledger/iroha/issues/194,https://api.github.com/repos/hyperledger/iroha/issues/comments/284958149,https://github.com/hyperledger/iroha/pull/194#issuecomment-284958149,satellitex,"Create ALL logic making up Izanami.
But, I don't writeTEST. ( becouse it need to multiple peer. )
 -> TODO make TEST for docker-compose

And Unresolve Problem.
## UnSynchronize Transactions
 1. Initialize Peer receive all Transaction from another peer.
 2. When initializing peer, another peer execute other transaction A.
 3. Initialize Peer don't receive this transaction A.

## How to resolve
 - Make logic that lock Transaction?
 - Stream Connection?",2017-03-08 06:23:45,2017-03-08 07:25:11
https://api.github.com/repos/hyperledger/iroha/issues/194,https://api.github.com/repos/hyperledger/iroha/issues/comments/285022811,https://github.com/hyperledger/iroha/pull/194#issuecomment-285022811,takemiyamakoto,Can the conflicts with this branch be resolved and then this branch merged?,2017-03-08 11:59:25,2017-03-08 11:59:25
https://api.github.com/repos/hyperledger/iroha/issues/194,https://api.github.com/repos/hyperledger/iroha/issues/comments/285053903,https://github.com/hyperledger/iroha/pull/194#issuecomment-285053903,satellitex,"Yes it can.
Could you review @Warchant ? ",2017-03-08 14:25:00,2017-03-08 14:25:00
https://api.github.com/repos/hyperledger/iroha/issues/194,https://api.github.com/repos/hyperledger/iroha/issues/comments/285248315,https://github.com/hyperledger/iroha/pull/194#issuecomment-285248315,takemiyamakoto,Tests should be added using docker compose.,2017-03-09 04:00:38,2017-03-09 04:00:38
https://api.github.com/repos/hyperledger/iroha/issues/193,https://api.github.com/repos/hyperledger/iroha/issues/comments/284173108,https://github.com/hyperledger/iroha/pull/193#issuecomment-284173108,Warchant,"I believe copying of peer list can be done in more effective way
https://github.com/hyperledger/iroha/blob/3a8a7f378c94c5d589e9f1a50210aa424a12dc78/core/infra/config/peer_service_with_json.cpp#L103-L111",2017-03-04 19:00:45,2017-03-04 19:00:45
https://api.github.com/repos/hyperledger/iroha/issues/193,https://api.github.com/repos/hyperledger/iroha/issues/comments/284174823,https://github.com/hyperledger/iroha/pull/193#issuecomment-284174823,MizukiSonoko,"Thanks for your review.  
What is your comment about?",2017-03-04 19:26:34,2017-03-04 19:26:34
https://api.github.com/repos/hyperledger/iroha/issues/193,https://api.github.com/repos/hyperledger/iroha/issues/comments/284175330,https://github.com/hyperledger/iroha/pull/193#issuecomment-284175330,Warchant,At each call of that function new copy of peerList is returned. It is some kind of deep copy. It can be performed in more elegant way :) I will look tomorrow how it can be changed,2017-03-04 19:33:52,2017-03-04 19:33:52
https://api.github.com/repos/hyperledger/iroha/issues/193,https://api.github.com/repos/hyperledger/iroha/issues/comments/284490266,https://github.com/hyperledger/iroha/pull/193#issuecomment-284490266,Warchant,"I understand why you make deep copy of every field in this code:
```
std::vector<std::unique_ptr<peer::Node>> PeerServiceConfig::getPeerList() {
  initialziePeerList_from_json();

  std::vector<std::unique_ptr<peer::Node>> nodes(peerList.begin(), peerList.end());
  for (auto&& node : peerList)
    nodes.push_back(std::make_unique<peer::Node>(
        node.getIP(), node.getPublicKey(), node.getTrustScore()));
  sort(nodes.begin(), nodes.end(), [](const std::unique_ptr<peer::Node>& a,
                                      const std::unique_ptr<peer::Node>& b) {
    return a->getTrustScore() > b->getTrustScore();
  });
  return nodes;
}
```

But why we can't just sort `peerList` (which is in the same file?)
```
std::vector<peer::Node> PeerServiceConfig::peerList;

std::vector<std::unique_ptr<peer::Node>> PeerServiceConfig::getPeerList() {
  initialziePeerList_from_json();
  sort(peerList.begin(), peerList.end(), [](const std::unique_ptr<peer::Node>& a,
                                      const std::unique_ptr<peer::Node>& b) {
    return a->getTrustScore() > b->getTrustScore();
  });
  return peerList;
}
```

Or maintain `std::multimap` (which is red-black tree, keeps all items sorted, allows to multiple elements share the same key) instead of std::vector

```
// maps trust score -> peer
std::multimap<double, std::unique_ptr<peer::Node>> peerList;

std::vector<std::unique_ptr<peer::Node>> PeerServiceConfig::getPeerList() {
    return std::vector<std::unique_ptr<peer::Node>>(peerList.begin(), peerList.end());
}
```

something like this",2017-03-06 18:41:16,2017-03-06 18:49:59
https://api.github.com/repos/hyperledger/iroha/issues/193,https://api.github.com/repos/hyperledger/iroha/issues/comments/284591803,https://github.com/hyperledger/iroha/pull/193#issuecomment-284591803,satellitex,"```
// maps trust score -> peer
std::multimap<double, std::unique_ptr<peer::Node>> peerList;

std::vector<std::unique_ptr<peer::Node>> PeerServiceConfig::getPeerList() {
    return std::vector<std::unique_ptr<peer::Node>>(peerList.begin(), peerList.end());
}
```
I think it has problem.
`getPeerList` is accessed by `sumeragi` and `connection_with_grpc` from  multi thread.
When this, is it dangerous to use unique_ptr ?
Would you think how to this problem ?",2017-03-07 01:30:01,2017-03-07 01:30:01
https://api.github.com/repos/hyperledger/iroha/issues/191,https://api.github.com/repos/hyperledger/iroha/issues/comments/287583399,https://github.com/hyperledger/iroha/issues/191#issuecomment-287583399,l4l,"that looks pretty weird, here's the profiler output:
```
Total: 32553160 B
31966432  98.2%  98.2% 31974512  98.2% JVM_FindSignal
  368832   1.1%  99.3%   368960   1.1% Java_java_util_zip_ZipFile_getZipMessage
   81920   0.3%  99.6% 11477888  35.3% SUNWprivate_1.1
   81920   0.3%  99.8%    81920   0.3% pool (inline)
   10592   0.0%  99.9%    10592   0.0% _dl_new_object
    9280   0.0%  99.9%     9280   0.0% __gnu_cxx::new_allocator::allocate (inline)
    6912   0.0%  99.9%     6912   0.0% allocate_dtv
    3616   0.0%  99.9%     3616   0.0% _nl_intern_locale_data
    2848   0.0%  99.9%     2848   0.0% std::__cxx11::basic_string::_M_construct
    2352   0.0%  99.9%     4928   0.0% google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto
```
Enforcing VM destroying didn't help. Also full valgrind logs don't look suspicious so I guess there's no problem
Feel free to open the issue if required",2017-03-18 23:46:52,2017-03-18 23:46:52
https://api.github.com/repos/hyperledger/iroha/issues/190,https://api.github.com/repos/hyperledger/iroha/issues/comments/284222804,https://github.com/hyperledger/iroha/issues/190#issuecomment-284222804,satellitex,"I can correct peer_service_with_json_test segmentation fault.
could you wait me.

pull request: peer-service branch",2017-03-05 11:52:49,2017-03-05 12:00:12
https://api.github.com/repos/hyperledger/iroha/issues/190,https://api.github.com/repos/hyperledger/iroha/issues/comments/284267371,https://github.com/hyperledger/iroha/issues/190#issuecomment-284267371,l4l,"I downgrade the grpc to 1.0.x from 1.1.x and now it's fine (just [this](https://github.com/hyperledger/iroha/blob/develop/core/infra/connection/connection_with_grpc.cpp#L356) cause compile error)
Are we considering support of newer grpc branch?",2017-03-05 22:11:59,2017-03-05 22:11:59
https://api.github.com/repos/hyperledger/iroha/issues/190,https://api.github.com/repos/hyperledger/iroha/issues/comments/284278551,https://github.com/hyperledger/iroha/issues/190#issuecomment-284278551,l4l,Reopen plz if occur again,2017-03-06 00:53:46,2017-03-06 00:53:46
https://api.github.com/repos/hyperledger/iroha/issues/190,https://api.github.com/repos/hyperledger/iroha/issues/comments/285524972,https://github.com/hyperledger/iroha/issues/190#issuecomment-285524972,luckychess,"Just got this problem again on my fix/peer-service-config branch (it is exactly the same as develop, only few tests were added for now). It happens not every time so if all tests are OK on your system just try to run them again.",2017-03-09 23:58:45,2017-03-09 23:58:45
https://api.github.com/repos/hyperledger/iroha/issues/190,https://api.github.com/repos/hyperledger/iroha/issues/comments/285533549,https://github.com/hyperledger/iroha/issues/190#issuecomment-285533549,l4l,"What's about master?

Add a compiling flag `-fsanitize=address` (or smth similar to your
compiler) and if crash happens again report the trace


On 03/10/17 02:58, Konstantin Munichev wrote:
>
> Just got this problem again on my fix/peer-service-config branch (it
> is exactly the same as develop, only few tests were added for now). It
> happens not every time so if all tests are OK on your system just try
> to run them again.
>
> —
> You are receiving this because you modified the open/close state.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/iroha/issues/190#issuecomment-285524972>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AFZW43KBPDVSoKQl1I69KL3rJWVtbMSeks5rkJI2gaJpZM4MTDsO>.
>

",2017-03-10 00:34:40,2017-03-10 00:34:40
https://api.github.com/repos/hyperledger/iroha/issues/190,https://api.github.com/repos/hyperledger/iroha/issues/comments/285665586,https://github.com/hyperledger/iroha/issues/190#issuecomment-285665586,luckychess,"@l4l Master is not affected.
Log with -fsanitize=address:
```
/home/luckychess/src/C++/iroha/iroha/cmake-build-debug/test_bin/connection_grpc_test --gtest_filter=* --gtest_color=no
Testing started at 4:03 PM ...
E0310 16:03:19.150921803   32664 server.c:1036]              duplicate registration for /Api.Sumeragi/Torii@*
ASAN:SIGSEGV
=================================================================
==32653==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000038 (pc 0x7f557d2a9a34 bp 0x7f5573266b90 sp 0x7f5573266aa0 T11)
    #0 0x7f557d2a9a33 in pthread_mutex_lock (/lib64/libpthread.so.0+0x9a33)
    #1 0x7f557db751d3 in grpc::Server::Wait() (/usr/local/lib64/libgrpc++.so.1+0x381d3)
    #2 0x5bdba2 in connection::run() /home/luckychess/src/C++/iroha/iroha/core/infra/connection/connection_with_grpc.cpp:599
    #3 0x5b358e in ConnectionWithGrpcTorii_Transaction_Add_Peer_Test::TestBody()::{lambda()#1}::operator()() const (/home/luckychess/src/C++/iroha/iroha/cmake-build-debug/test_bin/connection_grpc_test+0x5b358e)
    #4 0x5b713d in _M_invoke<> /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/include/g++-v5/functional:1531
    #5 0x5b6f95 in operator() /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/include/g++-v5/functional:1520
    #6 0x5b6ec5 in _M_run /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/include/g++-v5/thread:115
    #7 0x7f557cb763e1  (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libstdc++.so.6+0xdc3e1)
    #8 0x7f557d2a7443  (/lib64/libpthread.so.0+0x7443)
    #9 0x7f557c2d5abc in clone (/lib64/libc.so.6+0xe7abc)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV ??:0 pthread_mutex_lock
Thread T11 created by T0 here:
    #0 0x7f557ddf8603 in pthread_create (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libasan.so.2+0x36603)
    #1 0x7f557cb76542 in std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>, void (*)()) (/usr/lib/gcc/x86_64-pc-linux-gnu/5.4.0/libstdc++.so.6+0xdc542)

==32653==ABORTING
Running main() from gtest_main.cc1489150999 DEBUG [config] load json is { 
  ""database_path"":""/tmp/iroha_ledger"",
  ""java_class_path"":""java_tests"",
  ""java_class_path_local"":""smart_contract/java_tests"",
  ""java_library_path"":""lib"",
  ""java_library_path_local"":""build/lib"",
  ""java_policy_path"":""jvm/java.policy.txt"",
  ""concurrency"": 0,
  ""max_faulty_peers"" : 1,
  ""pool_worker_queue_size"": 1024,
  ""http_port"": 1204,
  ""grpc_port"": 50051
}

1489150999 DEBUG [config] load json is {
  ""group"": [
    {
      ""ip"": ""127.0.0.1"",
      ""name"": ""da77880a3da4"",
      ""publicKey"": ""u7X/zQ/Dq21WW7YH4rbkpiCYJXjPxk5t3qNDKiVwBx8=""
    }
  ],
  ""me"": {
    ""ip"": ""127.0.0.1"",
    ""name"": ""da77880a3da4"",
    ""privateKey"": ""cPY84e0BXGUHBjT4QdlPI0LI3BPIfUfSZjB8jdWURkNQ+pEagT/ysrewbt2YUo/Qbfd5vczW5oDooGSNUBTj9g=="",
    ""publicKey"": ""u7X/zQ/Dq21WW7YH4rbkpiCYJXjPxk5t3qNDKiVwBx8=""
  }
}
1489150999 INFO [connection] Operation
1489150999 INFO [connection] size: 0
1489150999 INFO [connection] name: 
1489150999 INFO [connection] size: 0
type: ""Add""
senderPubkey: ""karin""
domain {
  ownerPublicKey: ""pubkey1""
  name: ""name""
}

1489150999 INFO [connection] response: OK
Process finished with exit code 1

```",2017-03-10 13:11:46,2017-03-10 13:11:46
https://api.github.com/repos/hyperledger/iroha/issues/190,https://api.github.com/repos/hyperledger/iroha/issues/comments/285741232,https://github.com/hyperledger/iroha/issues/190#issuecomment-285741232,luckychess,"I think I got it finally: connection_grpc_test starts thread for grpc server for both test cases but after the first test case finished thread still remains alive. This usually leads to problems when the second test case starts. Unfortunately std::thread has no way to terminate it so I found a workaround: move second test case to another file to make it run in another process.
https://github.com/hyperledger/iroha/pull/210
@l4l Please check (or somebody else). May be better solutions exist.",2017-03-10 18:05:46,2017-03-10 18:10:18
https://api.github.com/repos/hyperledger/iroha/issues/190,https://api.github.com/repos/hyperledger/iroha/issues/comments/286453332,https://github.com/hyperledger/iroha/issues/190#issuecomment-286453332,l4l,fixed in #210,2017-03-14 15:15:21,2017-03-14 15:15:21
https://api.github.com/repos/hyperledger/iroha/issues/189,https://api.github.com/repos/hyperledger/iroha/issues/comments/284168937,https://github.com/hyperledger/iroha/pull/189#issuecomment-284168937,motxx,"Fixed. String arguments order were reversed. Problem was at following:
https://github.com/hyperledger/iroha/pull/189/commits/362259c977d062e5e8290d6ebb5e2c1910c93c3c#diff-d7c1742efe53093bccdb8ec71daab3f4R62
(Note: WeightedRateAttach.java was removed. Now, WeightedRate.java only)

It's error was not detected because object's (e.g. account, asset, ...) serialized string value cannot distinguish from each other. So I added prefix (e.g. ""Account::"") to each serialized strings before storing on DB. ",2017-03-04 18:01:06,2017-03-04 18:36:44
https://api.github.com/repos/hyperledger/iroha/issues/187,https://api.github.com/repos/hyperledger/iroha/issues/comments/308930998,https://github.com/hyperledger/iroha/issues/187#issuecomment-308930998,takemiyamakoto,This is handled in the new consensus algorithm.,2017-06-16 04:36:27,2017-06-16 04:36:27
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/284475712,https://github.com/hyperledger/iroha/issues/185#issuecomment-284475712,Warchant,Is this closed by #192 ?,2017-03-06 17:51:31,2017-03-06 17:51:31
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/285324119,https://github.com/hyperledger/iroha/issues/185#issuecomment-285324119,Warchant,Do not close this until we have tests.,2017-03-09 11:13:17,2017-03-09 15:25:46
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/285646324,https://github.com/hyperledger/iroha/issues/185#issuecomment-285646324,satellitex,"Test to connect 1 or N nodes to existing network.

1. Setup`iroha-main` in iroha-docker.
2. Any node setup iroha-1, iroha-2, ...iroha-N
3. Execute `./bin/issue_transaction add peer iroha2-key iroha2-pubkey 0.0 false` in iroha-1.
4. Similarly `3` add peer up to iroha-N.",2017-03-10 11:28:27,2017-03-10 11:28:27
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/285655069,https://github.com/hyperledger/iroha/issues/185#issuecomment-285655069,takemiyamakoto,Can you add this to circle-ci?,2017-03-10 12:17:39,2017-03-10 12:17:39
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/285705858,https://github.com/hyperledger/iroha/issues/185#issuecomment-285705858,satellitex,"I try it.
But I can be going to do after merge execute.",2017-03-10 15:55:44,2017-03-10 15:55:44
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/286291149,https://github.com/hyperledger/iroha/issues/185#issuecomment-286291149,takemiyamakoto,Is this done?,2017-03-14 01:05:45,2017-03-14 01:05:45
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/286461386,https://github.com/hyperledger/iroha/issues/185#issuecomment-286461386,l4l,"doesn't seem to be
at least blocked by #209",2017-03-14 15:39:44,2017-03-14 15:39:44
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/287585809,https://github.com/hyperledger/iroha/issues/185#issuecomment-287585809,takemiyamakoto,Is this done now?,2017-03-19 00:43:48,2017-03-19 00:43:48
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/287647075,https://github.com/hyperledger/iroha/issues/185#issuecomment-287647075,l4l,"Well it can be considered as completed **but** it still lack of tests and that is very bad. And it's an issue why it easily cannot be done.

Current structure of `connection_with_grpc` is enormous and doesn't allow to write proper tests.
steps so far to complete are:
- [ ] Remove any logic (also good to refactor as well) of signing/validating from `connection_with_grpc` and dedicate this task to its users
- [ ] Write & check tests

Actually this can be separated to the other issue because this one should work now",2017-03-19 20:59:52,2017-03-19 20:59:52
https://api.github.com/repos/hyperledger/iroha/issues/185,https://api.github.com/repos/hyperledger/iroha/issues/comments/287658271,https://github.com/hyperledger/iroha/issues/185#issuecomment-287658271,l4l,"ah, yeah
As we are planning to migrate to fbs in few days this will be fixed anyway, so i'm closing this one",2017-03-19 23:50:23,2017-03-19 23:50:23
https://api.github.com/repos/hyperledger/iroha/issues/181,https://api.github.com/repos/hyperledger/iroha/issues/comments/283302566,https://github.com/hyperledger/iroha/issues/181#issuecomment-283302566,MizukiSonoko,"thanks!
please do not worry. 
I will not erase REST (but it will be optional, sorry).
I am truly appreciate your contribution!",2017-03-01 10:25:31,2017-03-01 10:25:31
https://api.github.com/repos/hyperledger/iroha/issues/181,https://api.github.com/repos/hyperledger/iroha/issues/comments/283306428,https://github.com/hyperledger/iroha/issues/181#issuecomment-283306428,takemiyamakoto,Will you add CORS support?,2017-03-01 10:42:31,2017-03-01 10:42:31
https://api.github.com/repos/hyperledger/iroha/issues/179,https://api.github.com/repos/hyperledger/iroha/issues/comments/283672184,https://github.com/hyperledger/iroha/pull/179#issuecomment-283672184,motxx,"Now fixed.
@Warchant please final review if possible.",2017-03-02 14:45:23,2017-03-02 14:45:23
https://api.github.com/repos/hyperledger/iroha/issues/178,https://api.github.com/repos/hyperledger/iroha/issues/comments/283314314,https://github.com/hyperledger/iroha/pull/178#issuecomment-283314314,Warchant,"@MizukiSonoko to include `nlohman json` library it is enough to link it in `target_link_library`

```
target_link_library(target
json
)",2017-03-01 11:18:25,2017-03-01 11:18:25
https://api.github.com/repos/hyperledger/iroha/issues/178,https://api.github.com/repos/hyperledger/iroha/issues/comments/283314932,https://github.com/hyperledger/iroha/pull/178#issuecomment-283314932,l4l,Let's go towards pleasing CI and finally merging this branch otherwise it will be an endless pr,2017-03-01 11:21:17,2017-03-01 11:21:17
https://api.github.com/repos/hyperledger/iroha/issues/178,https://api.github.com/repos/hyperledger/iroha/issues/comments/283327587,https://github.com/hyperledger/iroha/pull/178#issuecomment-283327587,Warchant,"Don't forget to remove `core/vendor` folder, we don't use it anymore :)
https://github.com/hyperledger/iroha/tree/2c445515b378ae9ced06f3e623a02e2fbba6b4c6/core/vendor",2017-03-01 12:29:22,2017-03-01 12:29:22
https://api.github.com/repos/hyperledger/iroha/issues/178,https://api.github.com/repos/hyperledger/iroha/issues/comments/283327976,https://github.com/hyperledger/iroha/pull/178#issuecomment-283327976,MizukiSonoko,"Could you make final check?
 @Warchant @l4l @motxx
",2017-03-01 12:31:25,2017-03-02 00:52:05
https://api.github.com/repos/hyperledger/iroha/issues/178,https://api.github.com/repos/hyperledger/iroha/issues/comments/283357866,https://github.com/hyperledger/iroha/pull/178#issuecomment-283357866,l4l,That also would be awesome if you could squash negligible commits,2017-03-01 14:41:23,2017-03-01 22:27:12
https://api.github.com/repos/hyperledger/iroha/issues/177,https://api.github.com/repos/hyperledger/iroha/issues/comments/282562545,https://github.com/hyperledger/iroha/pull/177#issuecomment-282562545,Warchant,"Now I am going to implement CMakeLists.txt file, which downloads and builds all necessary dependencies.",2017-02-26 15:12:43,2017-02-26 15:12:43
https://api.github.com/repos/hyperledger/iroha/issues/177,https://api.github.com/repos/hyperledger/iroha/issues/comments/282868739,https://github.com/hyperledger/iroha/pull/177#issuecomment-282868739,Warchant,"Now all dependencies handled by cmake, not by submodules.
To include something, it is enough to link according target:
```
add_executable(hash_benchmark
  hash.cpp
)
target_link_libraries(hash_benchmark
  benchmark
  hash
)
```

",2017-02-27 21:56:34,2017-02-27 21:56:34
https://api.github.com/repos/hyperledger/iroha/issues/177,https://api.github.com/repos/hyperledger/iroha/issues/comments/282868843,https://github.com/hyperledger/iroha/pull/177#issuecomment-282868843,Warchant,"WIP: 
- fix circle.yml
- fix docker build
- fix documentation",2017-02-27 21:56:52,2017-02-27 21:56:52
https://api.github.com/repos/hyperledger/iroha/issues/177,https://api.github.com/repos/hyperledger/iroha/issues/comments/283082296,https://github.com/hyperledger/iroha/pull/177#issuecomment-283082296,Warchant," - [x] docs updated 
 - [x]  circle-ci updated
 - [x]  docker build updated
 - [x]  submodules removed, instead all dependencies are built and managed by cmake. They will be downloaded and built during `make` stage.

The last means, that you do not have to write 
```
set(LEVELDB_PATH, ""something/smth/lib"")
target_include_directories(something
${LEVELDB_PATH}/include
)
link_libraries(
${LEVELDB_PATH}/lib
)
```

But you write once this (headers and build symbols will be included automatically):
```
add_executable(connection_grpc_test
    connection_with_grpc_test.cpp
)
target_link_libraries(connection_grpc_test
    connection_with_grpc
    signature
    config_manager
    ed25519      # external
    gtest        # external. Links pthread and gtest_main also (transitively)
)
```

",2017-02-28 16:06:09,2017-02-28 16:16:54
https://api.github.com/repos/hyperledger/iroha/issues/177,https://api.github.com/repos/hyperledger/iroha/issues/comments/283083922,https://github.com/hyperledger/iroha/pull/177#issuecomment-283083922,Warchant,"The list of external modules:
- leveldb
- benchmark
- cappuccino
- gtest
- json
- thread_pool
- ed25519
- keccak

Just add required to `target_link_library`, headers and build symbols will be included.

To add new dependency, look at `dependencies.cmake`",2017-02-28 16:11:09,2017-02-28 16:12:01
https://api.github.com/repos/hyperledger/iroha/issues/175,https://api.github.com/repos/hyperledger/iroha/issues/comments/284072075,https://github.com/hyperledger/iroha/pull/175#issuecomment-284072075,Warchant,I will fix conflicts,2017-03-03 21:15:38,2017-03-03 21:15:38
https://api.github.com/repos/hyperledger/iroha/issues/175,https://api.github.com/repos/hyperledger/iroha/issues/comments/284112140,https://github.com/hyperledger/iroha/pull/175#issuecomment-284112140,Warchant,"Conflict is resolved, branch can be merged",2017-03-04 01:03:34,2017-03-04 01:03:34
https://api.github.com/repos/hyperledger/iroha/issues/174,https://api.github.com/repos/hyperledger/iroha/issues/comments/281610116,https://github.com/hyperledger/iroha/pull/174#issuecomment-281610116,MizukiSonoko,Right! thanks!,2017-02-22 09:05:22,2017-02-22 09:05:22
https://api.github.com/repos/hyperledger/iroha/issues/173,https://api.github.com/repos/hyperledger/iroha/issues/comments/281328325,https://github.com/hyperledger/iroha/pull/173#issuecomment-281328325,MizukiSonoko,"LGTM! 
no problem.",2017-02-21 12:15:30,2017-02-21 12:15:30
https://api.github.com/repos/hyperledger/iroha/issues/171,https://api.github.com/repos/hyperledger/iroha/issues/comments/281569854,https://github.com/hyperledger/iroha/pull/171#issuecomment-281569854,Warchant,:+1:,2017-02-22 05:00:31,2017-02-22 05:00:31
https://api.github.com/repos/hyperledger/iroha/issues/168,https://api.github.com/repos/hyperledger/iroha/issues/comments/281023254,https://github.com/hyperledger/iroha/issues/168#issuecomment-281023254,Warchant,Send link to build in circleci here.,2017-02-20 09:04:23,2017-02-20 09:04:23
https://api.github.com/repos/hyperledger/iroha/issues/168,https://api.github.com/repos/hyperledger/iroha/issues/comments/281025181,https://github.com/hyperledger/iroha/issues/168#issuecomment-281025181,motxx,"Oh, sorry....
this is circle ci link.
https://circleci.com/gh/hyperledger/iroha/1294?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link

I try to fix using ssh(circle ci).  
current branch: https://github.com/hyperledger/iroha/tree/feature/api",2017-02-20 09:13:34,2017-02-20 09:21:15
https://api.github.com/repos/hyperledger/iroha/issues/168,https://api.github.com/repos/hyperledger/iroha/issues/comments/281068476,https://github.com/hyperledger/iroha/issues/168#issuecomment-281068476,takemiyamakoto,Is this a problem with circle ci's cache?,2017-02-20 12:36:04,2017-02-20 12:36:04
https://api.github.com/repos/hyperledger/iroha/issues/168,https://api.github.com/repos/hyperledger/iroha/issues/comments/281069371,https://github.com/hyperledger/iroha/issues/168#issuecomment-281069371,motxx,Same result as building without cache.,2017-02-20 12:40:45,2017-02-20 12:40:45
https://api.github.com/repos/hyperledger/iroha/issues/168,https://api.github.com/repos/hyperledger/iroha/issues/comments/281117157,https://github.com/hyperledger/iroha/issues/168#issuecomment-281117157,satellitex,"c++: warning: /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64: linker input file unused because linking not done
compile 時に怪しいエラーがありました


---


`docker run -it --name iroha -v \'pwd\':/opt/iroha hyperledger/iroha-dev /bin/bash`
で入った後、 iroha を build して実行したところ
`/usr/local/iroha/test_bin/java_vm_test: error while loading shared libraries: libleveldb.so.1: cannot open shared object file: No such file or directory`
が出ない代わりに以下のエラーが発生しました。（ Test.class は作成されています )

````
root@9f7b1cd854e7:/opt/iroha/build# ./test_bin/java_vm_test
Running main() from gtest_main.cc
[==========] Running 7 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 7 tests from SmartContract
[ RUN      ] SmartContract.InitializeVM
-Djava.class.path=/opt/iroha/smart_contract -Djava.library.path=/opt/iroha/build/lib -Djava.security.policy=/opt/iroha/core/infra/smart_contract/jvm/java.policy.txt -Djava.security.manager test.Test
could not found class : test.Test
[       OK ] SmartContract.InitializeVM (70 ms)
[ RUN      ] SmartContract.Invoke_JAVA_function
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f86d0da6d9b, pid=1629, tid=0x00007f86d1221740
#
# JRE version: OpenJDK Runtime Environment (8.0_121-b13) (build 1.8.0_121-8u121-b13-0ubuntu1.16.04.2-b13)
# Java VM: OpenJDK 64-Bit Server VM (25.121-b13 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# C  [libDomainRepository.so+0x87d9b]  smart_contract::execFunction(std::unique_ptr<smart_contract::JavaContext, std::default_delete<smart_contract::JavaContext> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)+0x2e
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again
#
# An error report file with more information is saved as:
# /opt/iroha/build/hs_err_pid1629.log
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#
Aborted (core dumped)
````",2017-02-20 16:03:30,2017-02-20 16:07:10
https://api.github.com/repos/hyperledger/iroha/issues/168,https://api.github.com/repos/hyperledger/iroha/issues/comments/281123972,https://github.com/hyperledger/iroha/issues/168#issuecomment-281123972,motxx,"- Cannot load leveldb shared library in out-shared directory.
- In Dockerfile, 'ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64' I think Java version is no problem.
I would be highly appreciated if you kindly give me any solutions.",2017-02-20 16:29:51,2017-02-27 15:03:21
https://api.github.com/repos/hyperledger/iroha/issues/168,https://api.github.com/repos/hyperledger/iroha/issues/comments/283661742,https://github.com/hyperledger/iroha/issues/168#issuecomment-283661742,motxx,"Now, fixed. leveldb shared libraries used by JNI were not there in docker. **rsync** is required.",2017-03-02 14:05:46,2017-03-02 14:05:46
https://api.github.com/repos/hyperledger/iroha/issues/163,https://api.github.com/repos/hyperledger/iroha/issues/comments/280461221,https://github.com/hyperledger/iroha/pull/163#issuecomment-280461221,Warchant,"@MizukiSonoko do you need help with this? Do you have this error locally?
```
/opt/iroha/core/./vendor/Cappuccino/cappuccino.hpp:33:20: fatal error: asio.hpp: No such file or directory
```",2017-02-16 21:09:13,2017-02-16 21:09:13
https://api.github.com/repos/hyperledger/iroha/issues/163,https://api.github.com/repos/hyperledger/iroha/issues/comments/280542491,https://github.com/hyperledger/iroha/pull/163#issuecomment-280542491,MizukiSonoko,"Yes,

I will add 
```
    # install asio standalone
    cd /tmp; \
    git clone https://github.com/chriskohlhoff/asio.git; \
    cd asio/asio; \
    ./autogen.sh && \
    ./configure   --without-boost && \
    make && make install
```

to  docker/dev/Dockerfile
ref
https://github.com/hyperledger/iroha/pull/131/files#diff-d187d630242534e2ddc3aec11f37fd98

and unuse cache.",2017-02-17 03:46:40,2017-02-17 03:47:52
https://api.github.com/repos/hyperledger/iroha/issues/163,https://api.github.com/repos/hyperledger/iroha/issues/comments/280580578,https://github.com/hyperledger/iroha/pull/163#issuecomment-280580578,Warchant,"The thing is that `hyperledger/iroha-dev` is very big and slow to build, so we use cache for this image. 

To build iroha-dev image, you have to build **without cache**.",2017-02-17 07:57:06,2017-02-17 08:02:43
https://api.github.com/repos/hyperledger/iroha/issues/160,https://api.github.com/repos/hyperledger/iroha/issues/comments/280264891,https://github.com/hyperledger/iroha/pull/160#issuecomment-280264891,Warchant,"I propose my solution in commit below, it is more ""C++ way"" and throws no warnings.",2017-02-16 08:26:08,2017-02-16 08:39:12
https://api.github.com/repos/hyperledger/iroha/issues/159,https://api.github.com/repos/hyperledger/iroha/issues/comments/284859211,https://github.com/hyperledger/iroha/issues/159#issuecomment-284859211,adrianhopebailie,@takemiyamakoto you should look at the Interledger Protocol (https://interledger.org) it uses 2 phase commit to perform synchronised transfers on 2 (or more) ledgers to effect a multi-ledger transfer through a counter-party (connector) that has accounts on both ledgers.,2017-03-07 21:07:18,2017-03-07 21:07:18
https://api.github.com/repos/hyperledger/iroha/issues/158,https://api.github.com/repos/hyperledger/iroha/issues/comments/279736970,https://github.com/hyperledger/iroha/pull/158#issuecomment-279736970,MizukiSonoko,Ok Thanks  for your contribution!!,2017-02-14 15:21:58,2017-02-14 15:21:58
https://api.github.com/repos/hyperledger/iroha/issues/157,https://api.github.com/repos/hyperledger/iroha/issues/comments/279665654,https://github.com/hyperledger/iroha/issues/157#issuecomment-279665654,MizukiSonoko,"Ok
Maybe reason for it is libleveldb is not built.
Could you try it
```
cd $IROHA_HOME/core/vendor/leveldb
make 
```",2017-02-14 10:15:49,2017-02-14 10:15:49
https://api.github.com/repos/hyperledger/iroha/issues/157,https://api.github.com/repos/hyperledger/iroha/issues/comments/279668234,https://github.com/hyperledger/iroha/issues/157#issuecomment-279668234,phlamenco,"> cd $IROHA_HOME/core/vendor/leveldb
> make 
the build for leveldb is done. As I can get two output library folds: out-shared, out-static

I have tried to add this out-static path into sumeragi_test's CMakeLists.txt for link_directory, it introduce another link problem.",2017-02-14 10:26:10,2017-02-14 10:26:10
https://api.github.com/repos/hyperledger/iroha/issues/157,https://api.github.com/repos/hyperledger/iroha/issues/comments/279677175,https://github.com/hyperledger/iroha/issues/157#issuecomment-279677175,MizukiSonoko,Ok what is problem? ,2017-02-14 11:02:39,2017-02-14 11:02:39
https://api.github.com/repos/hyperledger/iroha/issues/157,https://api.github.com/repos/hyperledger/iroha/issues/comments/279679083,https://github.com/hyperledger/iroha/issues/157#issuecomment-279679083,phlamenco,"Problem solved, as I made such modification:
```
diff --git a/test/consensus/CMakeLists.txt b/test/consensus/CMakeLists.txt
```
<pre>
index 8eb6240..e6272f7 100644
--- a/test/consensus/CMakeLists.txt
+++ b/test/consensus/CMakeLists.txt
@@ -4,6 +4,7 @@ SET(CMAKE_CXX_FLAGS_DEBUG ""-g"")

 SET(KECCAK_PATH  ""${PROJECT_SOURCE_DIR}/core/vendor/KeccakCodePackage"")
 SET(ED25519_PATH ""${PROJECT_SOURCE_DIR}/core/vendor/ed25519"")
+SET(LEVELDB_PATH ""${PROJECT_SOURCE_DIR}/core/vendor/leveldb"")

 include_directories(
     ${PROJECT_SOURCE_DIR}/core
@@ -15,6 +16,7 @@ link_directories(
     ${KECCAK_PATH}/bin/generic64
     ${PROJECT_SOURCE_DIR}/core/infra/crypto
     ${AERON_PATH}/cppbuild/Release/lib
+   ${LEVELDB_PATH}/out-static
 )

 add_executable(sumeragi_test
@@ -23,6 +25,7 @@ add_executable(sumeragi_test


 target_link_libraries(sumeragi_test
+   leveldb
     snappy
     objects
     base64
</pre>
",2017-02-14 11:11:58,2017-02-14 11:11:58
https://api.github.com/repos/hyperledger/iroha/issues/157,https://api.github.com/repos/hyperledger/iroha/issues/comments/279679445,https://github.com/hyperledger/iroha/issues/157#issuecomment-279679445,MizukiSonoko,I'm sorry that it is confusing...,2017-02-14 11:13:48,2017-02-14 11:13:48
https://api.github.com/repos/hyperledger/iroha/issues/157,https://api.github.com/repos/hyperledger/iroha/issues/comments/279680336,https://github.com/hyperledger/iroha/issues/157#issuecomment-279680336,phlamenco,"sorry for confusing...

I did some modification for file: test/consensus/CMakeLists.txt
next figure shows the diff that I made:
![2017-02-14 7 17 52](https://cloud.githubusercontent.com/assets/19681098/22927071/51de5d8e-f2ea-11e6-835a-b72cf7410976.png)

to solve the problem that building sumeragi_test needs to link leveldb
",2017-02-14 11:18:28,2017-02-14 11:19:41
https://api.github.com/repos/hyperledger/iroha/issues/156,https://api.github.com/repos/hyperledger/iroha/issues/comments/281056088,https://github.com/hyperledger/iroha/pull/156#issuecomment-281056088,motxx,"This PR is for `feature/use-flatbuffer`. Currently we are using protocol buffers, so I temporarily close this PR.",2017-02-20 11:31:42,2017-03-04 01:52:47
https://api.github.com/repos/hyperledger/iroha/issues/156,https://api.github.com/repos/hyperledger/iroha/issues/comments/284070052,https://github.com/hyperledger/iroha/pull/156#issuecomment-284070052,Warchant,"Do not delete this branch, it will be reopened later. @motxx ",2017-03-03 21:06:32,2017-03-03 21:06:32
https://api.github.com/repos/hyperledger/iroha/issues/156,https://api.github.com/repos/hyperledger/iroha/issues/comments/284115679,https://github.com/hyperledger/iroha/pull/156#issuecomment-284115679,motxx,Sorry for my mistake.,2017-03-04 01:36:53,2017-03-04 01:36:53
https://api.github.com/repos/hyperledger/iroha/issues/156,https://api.github.com/repos/hyperledger/iroha/issues/comments/287679042,https://github.com/hyperledger/iroha/pull/156#issuecomment-287679042,motxx,"This branch is obsolete. Some unmerged commits exist, but we don't use them. So I'll delete this branch.",2017-03-20 04:58:04,2017-03-20 04:58:04
https://api.github.com/repos/hyperledger/iroha/issues/149,https://api.github.com/repos/hyperledger/iroha/issues/comments/276566863,https://github.com/hyperledger/iroha/pull/149#issuecomment-276566863,tkyonezu,"Thx motxxx for developing this features in IROHA.  In the not implemented features, unused key check is useful and need in IROHA. And, I think verify base64 strings will be done at later time in IROHA, in which IROHA nodes are verified by those public key.  So, it does'nt need in this time.",2017-02-01 04:01:37,2017-02-01 04:01:37
https://api.github.com/repos/hyperledger/iroha/issues/149,https://api.github.com/repos/hyperledger/iroha/issues/comments/276573034,https://github.com/hyperledger/iroha/pull/149#issuecomment-276573034,motxx,"Sorry, I think it's ugly that json format is hard coding. It's better to prepare a basic format JSON file and compare config files with it. Then, unused key check feature is also solved at the same time, I think.

- Sample of basic_sumeragi.json file
```
{
  ""me"":{
    ""ip"":""ip"",
    ""name"":""*"",
    ""publicKey"":""*"",
    ""privateKey"":""*""
  },
  ""group"":[
    {
      ""ip"":""ip"",
      ""name"":""*"",
      ""publicKey"":""*""
    }
  ]
}
```

- Sample of regex_def.json file
```
{
  ""ip"" : ""^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$""
}
```

And I'm rewriting the code using nlohmann/json features and IConfig now.",2017-02-01 05:00:54,2017-02-01 06:30:51
https://api.github.com/repos/hyperledger/iroha/issues/149,https://api.github.com/repos/hyperledger/iroha/issues/comments/276666846,https://github.com/hyperledger/iroha/pull/149#issuecomment-276666846,motxx,"> In the not implemented features, unused key check is useful and need in IROHA.

> to prepare a basic format JSON file and compare config files with it.

I dealt with these issues.

I could not deal with loading `regex_def.json` because nlohmann/json does not support to read symbols used in regular expression.",2017-02-01 14:13:14,2017-02-01 14:13:30
https://api.github.com/repos/hyperledger/iroha/issues/149,https://api.github.com/repos/hyperledger/iroha/issues/comments/277232812,https://github.com/hyperledger/iroha/pull/149#issuecomment-277232812,Warchant,">Sorry, I can't solve circle-ci error docker run -p 1204:1204 hyperledger/iroha-docker /test.sh

```
root@1e1e4c8c73a7:/usr/local/iroha/test_bin# ./ensure_sumeragi_json_format_test 
Running main() from gtest_main.cc
[==========] Running 5 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 5 tests from ensure_sumeragi_json_format
[ RUN      ] ensure_sumeragi_json_format.normal_sumeragi_json
1486124725 ERROR (-A-) [peer service with json] Bad json
```",2017-02-03 12:09:56,2017-02-03 12:26:00
https://api.github.com/repos/hyperledger/iroha/issues/149,https://api.github.com/repos/hyperledger/iroha/issues/comments/277243561,https://github.com/hyperledger/iroha/pull/149#issuecomment-277243561,motxx,"Thank you for looking. Sorry, I have missed the error.  My local test has passed. I suppose the program cannot read the test files. I will investigate it.",2017-02-03 13:12:31,2017-02-03 13:21:51
https://api.github.com/repos/hyperledger/iroha/issues/149,https://api.github.com/repos/hyperledger/iroha/issues/comments/277245444,https://github.com/hyperledger/iroha/pull/149#issuecomment-277245444,Warchant,"This is what I've got after local build:
```
bogdan@private ~/tools/iroha/build/test_bin $ ./ensure_sumeragi_json_format_test 
Running main() from gtest_main.cc
[==========] Running 5 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 5 tests from ensure_sumeragi_json_format
[ RUN      ] ensure_sumeragi_json_format.normal_sumeragi_json
1486128144 INFO [peer with json] load json is {
  ""me"":{
    ""ip"":""ip"",
    ""name"":""*"",
    ""publicKey"":""publicKey"",
    ""privateKey"":""privateKey""
  },
  ""group"":[
    {
      ""ip"":""ip"",
      ""name"":""*"",
      ""publicKey"":""publicKey""
    }
  ]
}
[       OK ] ensure_sumeragi_json_format.normal_sumeragi_json (30 ms)
[ RUN      ] ensure_sumeragi_json_format.bad_json
[       OK ] ensure_sumeragi_json_format.bad_json (2 ms)
[ RUN      ] ensure_sumeragi_json_format.bad_ip
1486128144 WARNING [peer service with json] IP 172.17.0.987 looks like not a valid ip.
1486128144 WARNING [peer service with json] IP 172.17.0.4. looks like not a valid ip.
[       OK ] ensure_sumeragi_json_format.bad_ip (25 ms)
[ RUN      ] ensure_sumeragi_json_format.missing_key

/home/bogdan/tools/iroha/test/infra/config/inputs/no_group_ip.json
1486128144 WARNING [peer service with json] Not found: ip

/home/bogdan/tools/iroha/test/infra/config/inputs/no_group_name.json
1486128144 WARNING [peer service with json] Not found: name

/home/bogdan/tools/iroha/test/infra/config/inputs/no_group_publicKey.json
1486128144 WARNING [peer service with json] Not found: publicKey

/home/bogdan/tools/iroha/test/infra/config/inputs/no_me_ip.json
1486128144 WARNING [peer service with json] Not found: ip

/home/bogdan/tools/iroha/test/infra/config/inputs/no_me_name.json
1486128144 WARNING [peer service with json] Not found: name

/home/bogdan/tools/iroha/test/infra/config/inputs/no_me_privateKey.json
1486128145 WARNING [peer service with json] Not found: privateKey

/home/bogdan/tools/iroha/test/infra/config/inputs/no_me_publicKey.json
1486128145 WARNING [peer service with json] Not found: publicKey
[       OK ] ensure_sumeragi_json_format.missing_key (90 ms)
[ RUN      ] ensure_sumeragi_json_format.useless_key

/home/bogdan/tools/iroha/test/infra/config/inputs/useless_me_key.json
1486128145 WARNING [peer service with json] Unused keys: aaaa

/home/bogdan/tools/iroha/test/infra/config/inputs/useless_group_key.json
1486128145 WARNING [peer service with json] Unused keys: key123456
[       OK ] ensure_sumeragi_json_format.useless_key (27 ms)
[----------] 5 tests from ensure_sumeragi_json_format (174 ms total)

[----------] Global test environment tear-down
[==========] 5 tests from 1 test case ran. (175 ms total)
[  PASSED  ] 5 tests.
```

Folder `${IROHA_HOME}/build/test/infra/config` has no folder `inputs`",2017-02-03 13:23:09,2017-02-03 13:26:23
https://api.github.com/repos/hyperledger/iroha/issues/149,https://api.github.com/repos/hyperledger/iroha/issues/comments/277246193,https://github.com/hyperledger/iroha/pull/149#issuecomment-277246193,motxx,Thank you. And this output is what I have expected.,2017-02-03 13:26:44,2017-02-03 13:26:44
https://api.github.com/repos/hyperledger/iroha/issues/149,https://api.github.com/repos/hyperledger/iroha/issues/comments/277247909,https://github.com/hyperledger/iroha/pull/149#issuecomment-277247909,Warchant,"`test.sh` uses return code to determine if test failed or not. 
Your code returns 1 (exit failure, bad json), so `test.sh` thinks that test has failed. 

If test completes with success, make sure you return 0.

Also, some of these files are changed in `feature/refactoring` branch, make sure you pull it before accepting pull request.",2017-02-03 13:36:05,2017-02-03 13:36:05
https://api.github.com/repos/hyperledger/iroha/issues/148,https://api.github.com/repos/hyperledger/iroha/issues/comments/275861727,https://github.com/hyperledger/iroha/pull/148#issuecomment-275861727,Warchant,"Don't merge this PR. I'll continue work. 

Also, members should review it.",2017-01-28 17:30:57,2017-01-28 17:30:57
https://api.github.com/repos/hyperledger/iroha/issues/147,https://api.github.com/repos/hyperledger/iroha/issues/comments/275828168,https://github.com/hyperledger/iroha/pull/147#issuecomment-275828168,takemiyamakoto,"We should merge changes like this into develop, first, and not master.
基本的にマージするフローは「マイブランチ→develop→master」なので、これからdevelopにしよう。",2017-01-28 05:12:36,2017-01-28 05:12:36
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/275987286,https://github.com/hyperledger/iroha/issues/146#issuecomment-275987286,MizukiSonoko,"problem : どちらの peer class を使いますか？（現在どちらも使っている）
```
objects::Peer
```
Iroha has objects::Peer only.

And no problem thanks.
",2017-01-30 06:14:37,2017-01-30 06:14:37
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/275991043,https://github.com/hyperledger/iroha/issues/146#issuecomment-275991043,satellitex,"sumeragi uses peer::Node.
It should replace peer::Node with objects::Peer?",2017-01-30 06:52:14,2017-01-30 06:52:14
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/282944903,https://github.com/hyperledger/iroha/issues/146#issuecomment-282944903,satellitex,"# peer service

### peer_service
 - addPeer ( peer::Node& peer )
   -  `peer` addes to `peerList`
 - removePeer ( peer::Node& peer )
   - find peer which same `peer.publicKey`, and remove this peer.
 - updatePeer ( peer::Node& peer )
   - find peer which same `peer.publicKey`, and update this peer.
   - `peer.ip` and `peer.trustScore` after updated.

 - getPeerList ()
   - peerService has peerList which is validating peerList.
     This method returns validating peerList with sorted trustScore.

## Sumeragi
 Sumeragi has `struct Context` which has validatingPeerList.

### Context has member names.
 - isSumeragi
 - maxFaulty
 - proxyTailNdx
 - panicCount
 - commitedCount
 - numValidatingPeers
 - myPublicKey
 - validatingPeers
 
### Context has method
 - update ()
   - This method update `validatingPeers` equal to `getPeerList` which in  PeerService has.
      and update the above member names. ( `panicCount` and `commitedCount` is another timing. )

### about peerList
 - peerList has unique `publicKey`
 - peerList has unique `ip`",2017-02-28 05:18:09,2017-02-28 07:28:15
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/283017972,https://github.com/hyperledger/iroha/issues/146#issuecomment-283017972,satellitex,"sorry, Japanese Only 
# This is memo
ピアが死亡した際に 新しいピアを自動的にチェンジする仕組み
→
削除について
合意形成後 全体で accept されたら、 reject したピアにマイナス評価を与える。（この時、rejectに理由を添える[嘘or死んでるor形成中]等 ）
全体が reject されたら、 accept したピアにマイナス評価を与える。 評価値がある一定値を下回ったらそのピアを削除するtransactionをブロードキャストする。

peer の削除の transaction が来たとき自分の持っているピアのリストを見て正誤判定をする。(?)
この流れで行くと、Remove<Peer> transaction は重複するがそれは特に構わない。

追加について
単体で iroha を起動
その後、何者かが起動したirohaの ip と publicKey を添えて 既に構成されているグループに add<Peer> 命令を送る。
合意形成をし終えたらリーダーピアが 追加するピアに対しデータを送る。
データを送り終えるまでこのピアは合意形成時にreject[理由：形成中]し続ける。

問題点として誰でもピアとして参加できてしまう。
許可するピアを予め設定しおくようにすると利便性が損なわれるが、どうしたらいいだろうか。",2017-02-28 11:44:00,2017-02-28 11:44:00
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/283057833,https://github.com/hyperledger/iroha/issues/146#issuecomment-283057833,MizukiSonoko,"Ok thanks!
I think transaction issuer is restricted, so no problem.
Andissuer should be restricted by permission.
What is your opinion?
",2017-02-28 14:45:28,2017-02-28 14:45:28
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/283182463,https://github.com/hyperledger/iroha/issues/146#issuecomment-283182463,luckychess,"Hi all! I recently started to work on this task and I have several questions:

1. Am I correct that sumeragi.json is going to be removed? If yes, should we save peers inside Ametsuchi or store them only in memory and do a peer discovery procedure every time Iroha starts?
2. Should Ametsuchi be ready to store peers same time as assets and accounts? Are all of them a part of world state repository?
3. Commands like Add, Delete and so on defined for independent (in my opinion) entities like Peers, Accounts and Assets. Add<object::Account> and Add <object::Peer> (just for example) code fragments do absolutely different work but located inside one class which is (again in my opinion) a little bit confusing.
4. There are 2 branches about this task (featrure/membership-service and feature/membership-service). I think the first one should be removed :)",2017-02-28 22:31:19,2017-02-28 22:31:19
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/283243859,https://github.com/hyperledger/iroha/issues/146#issuecomment-283243859,satellitex,"Hi luckychees.
I can answer question 4.
feature/peer-service branch is used now.
featrure/membership-service and feature/membership-service is old branch, so we may remove these branch. ( ""featrure"" is misstype ""feature""... sorry.. )",2017-03-01 04:46:57,2017-03-01 04:46:57
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/283564066,https://github.com/hyperledger/iroha/issues/146#issuecomment-283564066,satellitex,"# About  Auto Remove deaded Peer System.
## How to way
- Identify peer that timeout when do consensus. 
  - See response. Is that status.ok?
- Give minus evaluation to timeout peer. ( Issue update<Peer> transaction )
- When update Context in sumeragi, to issue transaction that remove peer whose trustScore is lower than base trustScore.
  ( Want to issue remove<Peer>/ update<Peer> transaction, but occur permission problem. 
    How do you to issue used iroha-root permission? ) 


## peer validator
- add Peer
  - Don't exist duplication IP in peerList after add Peer.
  - Don't exist duplication publicKey in peerList after add Peer.
- remove Peer
  - TrustScore of Removed peer must not be upper than base trust Rate and equal to one.
  - Exist removed peer in peerList before remove Peer.
- update Peer
  - Exist updated peer in peerList before update Peer.
  - Don't exist duplication IP in peerList after update Peer.
  - Don't exist duplication publicKey in peerList after update Peer.

## peer executor
- add Peer
  - do config::PeerService::getInstance().addPeer( peer );
- remove Peer
  - do config::PeerService::getInstance().removePeer( peer );
- update Peer
  - do config::PeerService::getInstance().updatePeer( peer );
- common 
  - store transaction to Ametsuchi.


# inJP ↓
## 死んでる ピアを自動的に殺すシステム
- 合意形成時に timeOut した ピアを特定する必要がある
    - response の status をみる
- timeOutしたピアについてマイナス評価を与える。
- sumeragi が ピア順列 の update をかけるときに、基準値を下回る評価のピアを削除する transaction を peer service が発行する。(このとき remove<Peer> transaction を発行したいが permission の問題はどうするか root に肩代わりして発行してもらう方法)


## peer validator ( ここにくるまでに permission filter にかかっているので発行元は信頼してよい )
	- add Peer
		- 追加後のピアリストのIPに重複があってはいけない
		- 追加後のピアリストのpublicKeyに重複があってはいけない
	-  remove Peer
		- 削除するピアの信頼度は基準値以上であってはいけない
		- 削除するピアが存在していなくてはいけない
	 - update Peer
		- 更新するピアが存在していなくてはいけない
		- 更新後のピアリストに重複があってはいけない
		- 更新後のピアリストのpublicKeyに重複があってはいけない 

## peer executor ( ここにくるまでに 合意形成を行っているためこの transaction を信頼してよい )
	- add Peer
		- addPeer( peer ) する。
	- remove Peer
		- removePeer( peer ) する。
	- update Peer
		- updatePeer( peer ) する。
	- common
		- ametsuchi に transaction を保存する。",2017-03-02 05:56:53,2017-03-02 08:52:19
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/283899694,https://github.com/hyperledger/iroha/issues/146#issuecomment-283899694,satellitex,"# Problem and Question about peer service Design
## Question
### about check trustScore system
 - Is it better for a system in which peers try to trust each other from Sumeragi ?
   - Solution, Create an entrance for a new receive separate from Verify / Torii, which will do everything.
## Problem
### about AddPeer
 - when Execute, if you are a leader node, pass all the data to that peer.
   - Want about Transfer<Transaction>.
### about peerOrder
 - The order of peers changes when adding, deleting, or updating peers.
    It is dangerous to change peers agreed during consensus building.
 - Solution, Use the order of consensusEvent. This will manage the version of the peer list. 
   Use the same peer list for the same consensusEvent.

↓in JP
# 問題 / 質問
## 質問
### ピアが互いを評価するシステムについて
 - ピアが互いに信頼度を図るシステムは Sumeragi から乖離したほうが良いか？
   - 上記の解決策として：Verify / Torii に次ぐ別の新たな receive の入り口を作り、それが全てをこなす。
## 問題
### Add Peer
 - Execute したとき、自身が リーダーノードであれば、そのピアにデータを全部渡す。
    - このとき、Transfer<Transaction>的なものがほしい。
### ピアの順序
 - ピアの追加、削除、更新した際にピアの順序が入れ替わる。
   合意形成中に合意を取るピアが変更されると危険です。
   - 解決策として、　consensusEvent の order を使う。 これでピアリストのバージョン管理を行う。
      同じ consensusEvent には同じピアリストを使うようにする。",2017-03-03 08:51:03,2017-03-03 08:53:33
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/284155701,https://github.com/hyperledger/iroha/issues/146#issuecomment-284155701,satellitex,"## Monitor dead peers
If there is a peer not returning Response, ask peer-service to investigate that peer.
When Peer-service receives a request, it skips ping to that peer.
  When there was no response,
     When the reliability of peer has already fallen below the reference value
         Issue the peer deletion transaction.   other than that
         Issue transaction to lower the reliability of peer.
When there is a response,
     Restore the reliability of peer.

## Monitor a lying peer
     Issue a transaction that reduces the reliability of nodes lying in consensus building

## About addPeer
Each peer sends a sequence of transactions in block units (example) to the initial peer in order from the front.
When the initializing peer receives 2f + 1 of the same block, it accepts it and stores it in ametuchi.
- Block requires id for processing in order
- Block requires a unique hash
- The size of each block should be kept to be okay if it gets a memory of * 2f + 1 even if it dies",2017-03-04 14:45:09,2017-03-04 14:45:21
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/284165541,https://github.com/hyperledger/iroha/issues/146#issuecomment-284165541,satellitex,"## About initializePeer
A peer currently forming iroha by addPeer will send a history of large transactions to this peer.
Once received, it will sequentially execute them and build PeerList. After finishing all Transaction data, send update <Peer> (myself, trust-> isok = true); to the leader node and let them also participate in peerList.

### Create initializePeer as a mechanism different from PeerService
### It named ""Izanami"" ( proposal )",2017-03-04 17:10:50,2017-03-04 17:11:20
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/284169389,https://github.com/hyperledger/iroha/issues/146#issuecomment-284169389,satellitex,"# Perservice Revised Hijiri Docment ( but It haven't rename yet now. )

# # Hijiri is a mechanism to manage peers (nodes) building iroha.
- Hijiri
    - Constructor
    - Build a list of peers from sumeragi.json
- static Hijiri & getInstance ();
    - Return Hijiri's Instance.
    - Usually call this method by connecting to it.
    - Example) config :: Hijiri :: getInstance (). GetPeerList ();
- std :: string getMyPublicKey ();
    - Return my pier's piblicKey
- std :: string getMyPrivateKey ();
    - Return privateKey of your peer
- std :: string getMyIp ();
    - Return ip of your peer
- double getMaxTrustScore ();
    - Get maximum value of reliability.
    - Increasing this will relax the failure judgment, making it smaller will make the failure judgment more severe.
    - Suppose the number of normal nodes is the maximum value.
- std :: vector <std :: unique_ptr <peer :: Node >> getPeerList ();
    - Returns a list of current running peers sorted in descending order of confidence.
- std :: vector <std :: string> getIpList ();
    - Returns a list sorted by the reliability descending order of ip of the current running peer.
- void checkBrokenPeer (const std :: string & ip);
    - During communication, invoke when a peer who does not return Response met.
    - It examines whether a certain peer is not broken and issues the transaction of update <peer> according to the result.
- void finishedInitializePeer ();
    - Invoke itself when the DB initialization for participating in the ledger as a new peer is finished.
    - Issue update <peer> to keep itself running.
- void toIssue_addPeer (const peer :: Node &);
    - Issue a transaction to add a new peer.
    - The ip and publicKey are specified, the initial value of the reliability is max, and add <peer> is issued with an inactive setting.
- void toIssue_distructPeer (const std :: string & publicKey);
    - Issue a transaction that specifies publicKey and lowers the reliability of Peer.
- void toIssue_removePeer (const std :: string & publicKey);
    - Call a transaction that deletes Peer by specifying publicKey.
- void toIssue_creditPeer (const std :: string & publicKey);
    - Issue a transaction that restores the reliability of peer by specifying publicKey
- bool addPeer (const peer :: Node &);
    - Add peer to peerList.
    - Send history of all transactions to that peer after that.
- bool removePeer (const std :: string & publicKey);
    - Delete peer from peerList, specifying publicKey.
- bool updatePeer (const std :: string & publicKey, const
- peer :: Node & peer);
    - Specify publicKey and update peer information.
    - Ip is not defaultIP, change ip.
    - If publicKey is not defaultPublicKey, change publicKey.
    - Increase trustScore by peer.trustScore (). (Decrease if negative value)
    - Update if there is a change in whether it is running or not running.
- bool validate_addPeer (const peer :: Node &);
    - validate whether to do addPeer.
    - Duplicate IP in peer list after adding
    - There must be no duplication in the public key of the added peer list
- bool validate_removePeer (const std :: string & publicKey);
    - validate whether to do removePeer
    - The reliability of the peer to be deleted must not be higher than the reference value
    - Peers to be deleted must exist
- bool validate_updatePeer (const std :: string & publicKey,
- const peer :: Node & peer);
    - validate whether to do updatePeer
    - Peers to be updated must exist
    - Do not have duplicates in updated peer list
    - There must be no duplication in the public key of the updated peer list
- bool isLeaderMyPeer ();
    - Determine if yourself is a leader peer
- std :: unique_ptr <peer :: Node> leaderPeer ();
    - Return a leader peer.
- virtual std :: string getConfigName ();
    - Returns the path where Config is written.

in JP ↓
# Perservice 改め Hijiri のDocment ( まだリネームしていません。 )
## Hijiri は iroha を構築するピア(ノード)達を管理する機構である。
- Hijiri
    - コンストラクタ
    - sumeragi.json からピアのリストを構築する
- static Hijiri &getInstance();
    - Hijiri の Instance を返す。
    - 通常これにつなげてメソッドを呼び出す。
    - 例) config::Hijiri::getInstance().getPeerList();
- std::string getMyPublicKey();
    - 自分のピアの piblicKey を返す
- std::string getMyPrivateKey();
    - 自分のピアの privateKey を返す
- std::string getMyIp();
    - 自分のピアの ip を返す
- double getMaxTrustScore();
    - 信頼度の最大値を取得する。
    - これを大きくすると故障判定が緩くなり、小さくすると故障判定が厳しくなる。
    - 通常ノードの数を最大値にするとする。
- std::vector<std::unique_ptr<peer::Node>> getPeerList();
    - 現在の稼働している peer を信頼度の降順でソートしたリストを返す。
- std::vector<std::string> getIpList();
    - 現在の稼働している peer の ip を信頼度の降順でソートしたリストを返す。
- void checkBrokenPeer( const std::string& ip );
    - 通信中, Response の帰ってこない peer が会った際に invoke する。
    - ある peer が故障していないか調べて、その結果により update<peer> の transaction を発行する。
- void finishedInitializePeer();
    - 自身が新しい peer として ledger に参加するためのDBの初期化が終了した際に invoke する。
    - 自身を稼働中にする update<peer> を発行する。
- void toIssue_addPeer( const peer::Node& );
    - 新しい peer  を追加する transaction を発行する。
    - ip と publicKey を指定し信頼度の初期値は max で, 未稼働の設定で add<peer> 発行する。
- void toIssue_distructPeer( const std::string &publicKey );
    - publicKey  を指定して Peer の信頼度を下げる transaction を発行する。
- void toIssue_removePeer( const std::string &publicKey );
    - publicKey を指定して Peer を削除する transaction を発呼する。
- void toIssue_creditPeer( const std::string &publicKey );
    - publicKey を指定してpeer の信頼度を回復させる transaction を発行する
- bool addPeer( const peer::Node& );
    - peer を peerList に追加する。
    - その後、その peer に全ての transaction の履歴を送る。
- bool removePeer( const std::string &publicKey );
    - publicKey を指定して、peer を peerList から削除する。
- bool updatePeer( const std::string& publicKey, const
- peer::Node& peer );
    - publicKey を指定して、peer の情報を更新する。
    - Ip が defaultIP でなければ、ip を変更する。
    - publicKey がdefaultPublicKey でなければ、publicKeyを変更する。
    - trustScore を peer.trustScore() 分だけ増加させる。（負の値の場合は減る）
    - 稼働か未稼働かに変更があれば更新する。
- bool validate_addPeer( const peer::Node& );
    - addPeer をしてよいか validate する。
    - 追加後のピアリストのIPに重複があってはいけない
    - 追加後のピアリストのpublicKeyに重複があってはいけない
- bool validate_removePeer( const std::string &publicKey );
    - removePeer をしてよいか validate する
    - 削除するピアの信頼度は基準値以上であってはいけない
    - 削除するピアが存在していなくてはいけない
- bool validate_updatePeer( const std::string& publicKey,
- const peer::Node& peer );
    - updatePeer　をしてよいか validate する
    - 更新するピアが存在していなくてはいけない
    - 更新後のピアリストに重複があってはいけない
    - 更新後のピアリストのpublicKeyに重複があってはいけない 
- bool isLeaderMyPeer();
    - 自身がリーダーピアがどうかを判定する
- std::unique_ptr<peer::Node> leaderPeer();
    - リーダーピアを返す。
- virtual std::string getConfigName();
    - Config の書いてあるパスを返す。 ",2017-03-04 18:07:10,2017-03-04 18:07:10
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/284202717,https://github.com/hyperledger/iroha/issues/146#issuecomment-284202717,satellitex,"# Izanami

Izanami is the mechanism for synchronizing the DB and peerList for peers that join an already running network.

### Izanami
- void receiveTransactionResponse (std :: unique_ptr <TransactionResponse>);
    - Invoke when receiving a transactionResponse for initial DB construction.

### class InitializeEvent
InitializeEvent is a class that manages transactionResponse sent from a peer that is already running for initial DB construction.
- InitializeEvent ();
    - Constructor of InitializeEvent class
    - Set the current progress block to 0
- void add_transactionResponse (std :: unique_ptr <TransactionResponse>);
    - Add transactionResponse
    - Generate a hash of transactionResponse and save the body in map with it as key.
- const std :: vector <std :: string> & getHashes (uint64_t);
    - Return a list of hashes of transactionResponse in a progress block. In the case of
- const std :: unique_ptr <TransactionResponse> getTransactionResponse (const std :: string &);
    - Specifying a hash returns the unique_ptr of the TransactionResponse pointed to by it.
- void next_progress ();
    - We will proceed with the progress block we are currently seeing.
- uint64_t now () const;
    - Return the progress block you are currently viewing.
- void storeTxResponse (const std :: string &);
    - Save the TransactionResponse that the hash points to the DB.
- void executeTxResponse (const std :: string &);
    - Perform all Transactions of TransactionResponse pointed to by hash.
- void clear ();
    - Discard all temporary data that was held. In the case of
### namespace detail
Functional function of ancillary functions.
- bool isFinishedReceiveAll (InitializeEvent & event);
    - Determine if all transactionResponse have been received.
    - [WIP: Currently unknown method]
- bool isFinishedReceive (InitializeEvent &);
    - Determine whether you have received the transactionResponse of the current progress block.
    Returns true if there is a transactionResponse of the same hash of the same progress block of 2f + 1.
- std :: string getCorrectHash (InitializeEvent &);
    - Return a hash of the transactionResponse of the current progress block.
- void storeTransactionResponse (InitializeEvent &);
    - Save the transaction of the specified progress block.

in JP ↓
# Izanami
Izanami は途中参加する peer の初期 DB / peerList 構築を行う機構です。
## Izanami
- void receiveTransactionResponse( std::unique_ptr<TransactionResponse> );
    - 初期 DB 構築のための transactionResponse を 受け取った時に invoke する。

### class InitializeEvent
InitializeEvent は初期 DB 構築のために既に稼働中の peer から送られてくる transactionResponse を管理する class です。
- InitializeEvent();
    - InitializeEvent class のコンスタラクタ
    - 現在の進捗ブロックを0にする
- void add_transactionResponse( std::unique_ptr<TransactionResponse> );
    - transactionResponse を追加する
    - transactionResponse のハッシュを生成しそれを key に map に本体を保存する。
- const std::vector<std::string>& getHashes( uint64_t );
    - ある 進捗ブロック における transactionResponse のハッシュのリストを返す。　
- const std::unique_ptr<TransactionResponse> getTransactionResponse( const std::string& );
    - ハッシュを指定するとそれが指す TransactionResponse のunique_ptr を返す。
- void next_progress();
    - 現在見ている進捗ブロックを次にすすめる。
- uint64_t now() const;
    - 現在見ていいる進捗ブロックを返す。
- void storeTxResponse( const std::string& );
    - DBに ハッシュが指す TransactionResponse を保存する。
- void executeTxResponse( const std::string& );
    - ハッシュが指す TransactionResponse が持つ Transaction を全て実行する。
- void clear();
    - 保持していた一時データを全て破棄する。 
### namespace detail
補助的な機能の関数郡。
- bool isFinishedReceiveAll(InitializeEvent &event);
    - 全ての transactionResponse を受け取り終えたかどうかを判定する。
    - [ WIP : 現在その方法が未定 ]
- bool isFinishedReceive(InitializeEvent &);
    - 現在の進捗ブロックの transactionResponse を受け取り終えたか判定する。
    - 2f+1 の同一進捗ブロックの同一ハッシュの transactionResponse があったとき true を返す。
- std::string getCorrectHash(InitializeEvent &);
    - 現在の進捗ブロックの transactionResponse のハッシュを返す。
- void storeTransactionResponse(InitializeEvent &);
    - 指定した進捗ブロックの transaction を保存する。

",2017-03-05 03:34:33,2017-03-05 08:55:53
https://api.github.com/repos/hyperledger/iroha/issues/146,https://api.github.com/repos/hyperledger/iroha/issues/comments/287583446,https://github.com/hyperledger/iroha/issues/146#issuecomment-287583446,l4l,Is it still active?,2017-03-18 23:47:55,2017-03-18 23:47:55
https://api.github.com/repos/hyperledger/iroha/issues/144,https://api.github.com/repos/hyperledger/iroha/issues/comments/275455720,https://github.com/hyperledger/iroha/pull/144#issuecomment-275455720,Warchant,Closes https://github.com/hyperledger/iroha/issues/141,2017-01-26 17:38:50,2017-01-26 17:38:50
https://api.github.com/repos/hyperledger/iroha/issues/141,https://api.github.com/repos/hyperledger/iroha/issues/comments/275307861,https://github.com/hyperledger/iroha/issues/141#issuecomment-275307861,MizukiSonoko,"Sorry for my late reply.
convertor_test, and connection_with_grpc is old to convert to Flatbuffer.
Thank you for removing test.
",2017-01-26 04:54:33,2017-01-26 04:54:33
https://api.github.com/repos/hyperledger/iroha/issues/141,https://api.github.com/repos/hyperledger/iroha/issues/comments/275456616,https://github.com/hyperledger/iroha/issues/141#issuecomment-275456616,Warchant,Solved by https://github.com/hyperledger/iroha/pull/144,2017-01-26 17:41:42,2017-01-26 17:41:42
https://api.github.com/repos/hyperledger/iroha/issues/137,https://api.github.com/repos/hyperledger/iroha/issues/comments/274320035,https://github.com/hyperledger/iroha/pull/137#issuecomment-274320035,motxx,Looks good to me.,2017-01-22 09:36:46,2017-01-22 09:36:46
https://api.github.com/repos/hyperledger/iroha/issues/131,https://api.github.com/repos/hyperledger/iroha/issues/comments/273991498,https://github.com/hyperledger/iroha/pull/131#issuecomment-273991498,takemiyamakoto,"
![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 4
- Added 20
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=485945&bid=4095525)
        ",2017-01-20 06:55:08,2017-01-20 06:55:08
https://api.github.com/repos/hyperledger/iroha/issues/131,https://api.github.com/repos/hyperledger/iroha/issues/comments/284141424,https://github.com/hyperledger/iroha/pull/131#issuecomment-284141424,Warchant,I'll resolve conflcts,2017-03-04 10:01:49,2017-03-04 10:01:49
https://api.github.com/repos/hyperledger/iroha/issues/131,https://api.github.com/repos/hyperledger/iroha/issues/comments/284149332,https://github.com/hyperledger/iroha/pull/131#issuecomment-284149332,Warchant,Now this PR can be merged. Review pls @MizukiSonoko @takemiyamakoto,2017-03-04 12:45:15,2017-03-04 12:45:31
https://api.github.com/repos/hyperledger/iroha/issues/123,https://api.github.com/repos/hyperledger/iroha/issues/comments/273549893,https://github.com/hyperledger/iroha/pull/123#issuecomment-273549893,Warchant,"Current `circle.yml`:
- builds `iroha-dev` and `iroha-docker` images
- caches `iroha-dev` image inside circleci
- runs `test.sh` inside `iroha-docker` container (the same as `ctest` in build directory)
- runs integration test (only one currently): 
   - runs a single node with predefined [sumeragi.json](https://github.com/hyperledger/iroha/blob/feature/docker-ci/docker/build/config/sumeragi.json)
   - runs `curl -X POST http://127.0.0.1:1204/account/register -d '{""publicKey"":""WdvM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmAgw="",""alias"":""yonezu"",""timestamp"":1482053586}'`
- adds deployment stage: 
   - if push to `master` branch is successful, if circleci build is successful, it pushes the latest version to docker hub under tag `hyperledger/iroha-docker`

If you have any questions or remarks, pls ask :)",2017-01-18 17:55:15,2017-01-18 18:04:59
https://api.github.com/repos/hyperledger/iroha/issues/111,https://api.github.com/repos/hyperledger/iroha/issues/comments/272997340,https://github.com/hyperledger/iroha/issues/111#issuecomment-272997340,shangmacun,how to add an asset for a account,2017-01-17 01:16:28,2017-01-17 01:16:28
https://api.github.com/repos/hyperledger/iroha/issues/111,https://api.github.com/repos/hyperledger/iroha/issues/comments/275596558,https://github.com/hyperledger/iroha/issues/111#issuecomment-275596558,takemiyamakoto,There also needs to be a API to get the current order of validators for sumeragi. This should be a **permissioned** API that not everyone has access to.,2017-01-27 06:14:11,2017-01-27 06:14:11
https://api.github.com/repos/hyperledger/iroha/issues/111,https://api.github.com/repos/hyperledger/iroha/issues/comments/286454040,https://github.com/hyperledger/iroha/issues/111#issuecomment-286454040,l4l,this goes to [wiki](https://github.com/hyperledger/iroha/wiki/API). Feel free to open new issue if you have ideas ,2017-03-14 15:17:41,2017-03-14 15:17:41
https://api.github.com/repos/hyperledger/iroha/issues/110,https://api.github.com/repos/hyperledger/iroha/issues/comments/270849981,https://github.com/hyperledger/iroha/issues/110#issuecomment-270849981,MizukiSonoko,"I try it 
```
root@2bf642df44b0:/opt/iroha/build# curl -X POST http://127.0.0.1:1204/account/register -d '{""publicKey"":""WdvM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmAgw="",""alias"":""yonezu"",""timestamp"":1482053586}'
{""message"":""successful"",""status"":200,""uuid"":""1b3cafcf870b43c74f5d918a180b27c896e9f08a29b73911d402d1dae6e90b6e""}
```
But, It is hard to reproduce...
I will try a little more. 
```
root@2bf642df44b0:~/workspace/iroha/build# ./bin/iroha-main
1483688221 INFO [main] process is :577
1483688221 INFO [peer with json] load json is {
  ""me"":{
    ""ip"":""172.17.0.2"",
    ""name"":""iorin"",
    ""publicKey"":""Sht5opDIxbyK+oNuEnXUs5rLbrvVgb2GjSPfqIYGFdU="",
    ""privateKey"":""aGIuSZRhnGfFyeoKNm/NbTylnAvRfMu3KumOEfyT2HPf36jSF22m2JXWrdCmKiDoshVqjFtZPX3WXaNuo9L8WA==""
  },
  ""group"":[
    {
      ""ip"":""172.17.0.2"",
      ""name"":""iorin"",
      ""publicKey"":""Sht5opDIxbyK+oNuEnXUs5rLbrvVgb2GjSPfqIYGFdU=""
    }
  ]
}

1483688221[sumeragi] +==ーーーーーーーーー==+
1483688221[sumeragi] |+-ーーーーーーーーー-+|
1483688221[sumeragi] || 　　　　　　　　　 ||
1483688221[sumeragi] || いろは合意形成機構 ||
1483688221[sumeragi] || 　　　すめらぎ　　 ||
1483688221[sumeragi] || 　　　　　　　　　 ||
1483688221[sumeragi] |+-ーーーーーーーーー-+|
1483688221[sumeragi] +==ーーーーーーーーー==+
1483688221[sumeragi] - 起動/setup
1483688221[sumeragi] - 初期設定/initialize
1483688221 INFO [sumeragi] My key is 172.17.0.2
1483688221 INFO [sumeragi] Sumeragi setted
1483688221 INFO [sumeragi] set number of validatingPeer
1483688221 INFO [sumeragi] initialize numValidatingPeers :1
1483688221 INFO [sumeragi] initialize maxFaulty :0
1483688221 INFO [sumeragi] initialize proxyTailNdx :0
1483688221 INFO [sumeragi] initialize panicCount :0
1483688221 INFO [sumeragi] initialize myPublicKey :Sht5opDIxbyK+oNuEnXUs5rLbrvVgb2GjSPfqIYGFdU=
1483688221 INFO [sumeragi] initialize is sumeragi :1
1483688221 INFO [sumeragi] initialize.....  complete!
1483688221 INFO [sumeragi] =+=
1483688221 INFO [sumeragi] start main loop
1483688221 INFO [server] initialize server!
1483688221 INFO [server] start server!
1483688331 INFO [WorldStateRepositoryWithLeveldb] NotFound:
1483688331 INFO [WorldStateRepositoryWithLeveldb] NotFound:
1483688331 DEBUG [AccountRepository]  data:
1483688331 INFO [connection] start send
1483688331 INFO [connection] create client
1483688331 INFO [connection] invoke client Operation
1483688331 INFO [connection] size 0
1483688331 INFO [connection] Operation
1483688331 INFO [connection] size: 0
1483688331 INFO [connection] name:
1483688331 INFO [connection] size: 0
1483688331 INFO [sumeragi] receive!
1483688331 INFO [sumeragi] received message! sig:[0]
1483688331 DEBUG [repo::event] event::add
1483688331 DEBUG [repo::event] events size = 1
1483688331 INFO [connection] response:OK
1483688331 INFO [sumeragi] event queue not empty
1483688331 DEBUG [repo::event] events size = 1
1483688331 INFO [sumeragi] sorted 1
1483688331 INFO [sumeragi] evens order:0
1483688331 INFO [sumeragi] processTransaction
1483688331 INFO [sumeragi] valied
1483688331 INFO [sumeragi] Add my signature...
1483688331 INFO [sumeragi] hash:19b031b951308a425390d4f0cd0df57583d96fa23533ee6757e45bc4a07c62fa
1483688331 INFO [sumeragi] pub:Sht5opDIxbyK+oNuEnXUs5rLbrvVgb2GjSPfqIYGFdU=
1483688331 INFO [sumeragi] pro:aGIuSZRhnGfFyeoKNm/NbTylnAvRfMu3KumOEfyT2HPf36jSF22m2JXWrdCmKiDoshVqjFtZPX3WXaNuo9L8WA==
1483688331 INFO [sumeragi] sog:b/g6cK8NK5DF3W/i8K6DfJIunggDLzT8ErLX0VZRemtczagxMGCrPtCPd3+wcaMUmi+0qz82J7P7CGPSAtHqDw==
1483688331 INFO [sumeragi] Signature exists
1483688331[sumeragi] 0--------------------------0
1483688331[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1483688331[sumeragi] |Would you agree with this?|
1483688331[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1483688331[sumeragi] 0================================================================0
1483688331[sumeragi] 019b031b951308a425390d4f0cd0df57583d96fa23533ee6757e45bc4a07c62fa0
1483688331[sumeragi] 0================================================================0
1483688331[sumeragi] +-ー-+
1483688331[sumeragi] | 　 |
1483688331[sumeragi] |-承-|
1483688331[sumeragi] | 　 |
1483688331[sumeragi] +-＝-+
1483688331[sumeragi] ==＝==
1483688331[sumeragi] numValidSignatures:1 faulty:1
1483688331[sumeragi] +==ーー==+
1483688331[sumeragi] |+-ーー-+|
1483688331[sumeragi] || 承認 ||
1483688331[sumeragi] |+-ーー-+|
1483688331[sumeragi] +==ーー==+
1483688331[sumeragi] commit
1483688331[sumeragi] commit count:1
1483688331 DEBUG [sumeragi] key[_1483688331]
+-ーーーーーーーーーーーー-+
1483688331 DEBUG [sumeragi] tx:Add
1483688331 DEBUG [sumeragi] exec <Add<Account>>
1483688331 DEBUG [Add<Account>] save publicKey:WdvM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmAgw= name:yonezu
1483688331 DEBUG [AccountRepository] Add publicKey:WdvM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmAgw= alias:yonezu
1483688331 DEBUG [AccountRepository] Save key:1b3cafcf870b43c74f5d918a180b27c896e9f08a29b73911d402d1dae6e90b6e alias:yonezu
```",2017-01-06 07:47:01,2017-01-06 07:47:01
https://api.github.com/repos/hyperledger/iroha/issues/110,https://api.github.com/repos/hyperledger/iroha/issues/comments/270855245,https://github.com/hyperledger/iroha/issues/110#issuecomment-270855245,luckychess,"```
{
  ""me"":{
    ""ip"": ""127.0.0.1"",
    ""name"": ""natori"",
    ""privateKey"": ""OD56uOAfOGQgYqy4eDpDaaZq66RsweVx/63Sr6jdCkmuTv2rSK0ny5V7SV4X2zf5MhlkcIC/xNvIhiVb8S8Azg=="",
    ""publicKey"": ""tT2rkwo/wX3dzzkFnY+vXmfCkWk6Z3nfqI/fTO+nfIs=""
  },
  ""group"":[
    {
      ""ip"":""127.0.0.1"",
      ""name"":""natori"",
      ""publicKey"":""tT2rkwo/wX3dzzkFnY+vXmfCkWk6Z3nfqI/fTO+nfIs=""
    }
  ]
}
```
Crashes on my machine with this sumeragi.json.",2017-01-06 08:26:58,2017-01-06 08:26:58
https://api.github.com/repos/hyperledger/iroha/issues/110,https://api.github.com/repos/hyperledger/iroha/issues/comments/270855966,https://github.com/hyperledger/iroha/issues/110#issuecomment-270855966,MizukiSonoko,"Sorry.... I can not reproduce... 🙇  

```
root@2bf642df44b0:~/workspace/iroha/build# ./bin/iroha-main
1483691385 INFO [main] process is :624
1483691385 INFO [peer with json] load json is {
  ""me"":{
    ""ip"": ""127.0.0.1"",
    ""name"": ""natori"",
    ""privateKey"": ""OD56uOAfOGQgYqy4eDpDaaZq66RsweVx/63Sr6jdCkmuTv2rSK0ny5V7SV4X2zf5MhlkcIC/xNvIhiVb8S8Azg=="",
    ""publicKey"": ""tT2rkwo/wX3dzzkFnY+vXmfCkWk6Z3nfqI/fTO+nfIs=""
  },
  ""group"":[
    {
      ""ip"":""127.0.0.1"",
      ""name"":""natori"",
      ""publicKey"":""tT2rkwo/wX3dzzkFnY+vXmfCkWk6Z3nfqI/fTO+nfIs=""
    }
  ]
}

1483691385[sumeragi] +==ーーーーーーーーー==+
1483691385[sumeragi] |+-ーーーーーーーーー-+|
1483691385[sumeragi] || 　　　　　　　　　 ||
1483691385[sumeragi] || いろは合意形成機構 ||
1483691385[sumeragi] || 　　　すめらぎ　　 ||
1483691385[sumeragi] || 　　　　　　　　　 ||
1483691385[sumeragi] |+-ーーーーーーーーー-+|
1483691385[sumeragi] +==ーーーーーーーーー==+
1483691385[sumeragi] - 起動/setup
1483691385[sumeragi] - 初期設定/initialize
1483691385 INFO [sumeragi] My key is 127.0.0.1
1483691385 INFO [sumeragi] Sumeragi setted
1483691385 INFO [sumeragi] set number of validatingPeer
1483691385 INFO [sumeragi] initialize numValidatingPeers :1
1483691385 INFO [sumeragi] initialize maxFaulty :0
1483691385 INFO [sumeragi] initialize proxyTailNdx :0
1483691385 INFO [sumeragi] initialize panicCount :0
1483691385 INFO [sumeragi] initialize myPublicKey :tT2rkwo/wX3dzzkFnY+vXmfCkWk6Z3nfqI/fTO+nfIs=
1483691385 INFO [sumeragi] initialize is sumeragi :1
1483691385 INFO [sumeragi] initialize.....  complete!
1483691385 INFO [sumeragi] =+=
1483691385 INFO [sumeragi] start main loop
1483691385 INFO [server] initialize server!
1483691385 INFO [server] start server!
1483691390 DEBUG [AccountRepository]  data:
)dM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmAgwyonezu
1483691399 INFO [WorldStateRepositoryWithLeveldb] NotFound:
1483691399 INFO [WorldStateRepositoryWithLeveldb] NotFound:
1483691399 DEBUG [AccountRepository]  data:
1483691399 INFO [connection] start send
1483691399 INFO [connection] create client
1483691399 INFO [connection] invoke client Operation
1483691399 INFO [connection] size 0
1483691399 INFO [connection] Operation
1483691399 INFO [connection] size: 0
1483691399 INFO [connection] name:
1483691399 INFO [connection] size: 0
1483691399 INFO [sumeragi] receive!
1483691399 INFO [sumeragi] received message! sig:[0]
1483691399 DEBUG [repo::event] event::add
1483691399 DEBUG [repo::event] events size = 1
1483691399 INFO [sumeragi] event queue not empty
1483691399 DEBUG [repo::event] events size = 1
1483691399 INFO [sumeragi] sorted 1
1483691399 INFO [sumeragi] evens order:0
1483691399 INFO [sumeragi] processTransaction
1483691399 INFO [sumeragi] valied
1483691399 INFO [sumeragi] Add my signature...
1483691399 INFO [sumeragi] hash:fc67820391dd20564b1745340ff09b70c94f61648447c3845659e96c5db63960
1483691399 INFO [sumeragi] pub:tT2rkwo/wX3dzzkFnY+vXmfCkWk6Z3nfqI/fTO+nfIs=
1483691399 INFO [sumeragi] pro:OD56uOAfOGQgYqy4eDpDaaZq66RsweVx/63Sr6jdCkmuTv2rSK0ny5V7SV4X2zf5MhlkcIC/xNvIhiVb8S8Azg==
1483691399 INFO [connection] response:OK
1483691399 INFO [sumeragi] sog:Q7FbYUars/UckwjNkBYpqqla/81Dh/On/2xDQCcI8llRpSWGKsNDuyKKFLCnEFH+K0yKdZE5ng+mTFtrX4oICQ==
1483691399 INFO [sumeragi] Signature exists
1483691399[sumeragi] 0--------------------------0
1483691399[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1483691399[sumeragi] |Would you agree with this?|
1483691399[sumeragi] +~~~~~~~~~~~~~~~~~~~~~~~~~~+
1483691399[sumeragi] 0================================================================0
1483691399[sumeragi] 0fc67820391dd20564b1745340ff09b70c94f61648447c3845659e96c5db639600
1483691399[sumeragi] 0================================================================0
1483691399[sumeragi] +-ー-+
1483691399[sumeragi] | 　 |
1483691399[sumeragi] |-承-|
1483691399[sumeragi] | 　 |
1483691399[sumeragi] +-＝-+
1483691399[sumeragi] ==＝==
1483691399[sumeragi] numValidSignatures:1 faulty:1
1483691399[sumeragi] +==ーー==+
1483691399[sumeragi] |+-ーー-+|
1483691399[sumeragi] || 承認 ||
1483691399[sumeragi] |+-ーー-+|
1483691399[sumeragi] +==ーー==+
1483691399[sumeragi] commit
1483691399[sumeragi] commit count:1
1483691399 DEBUG [sumeragi] key[_1483691399]
+-ーーーーーーーーーーーー-+
1483691399 DEBUG [sumeragi] tx:Add
1483691399 DEBUG [sumeragi] exec <Add<Account>>
1483691399 DEBUG [Add<Account>] save publicKey:dM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmA name:yonezu
1483691399 DEBUG [AccountRepository] Add publicKey:dM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmA alias:yonezu
1483691399 DEBUG [AccountRepository] Save key:53242f456800b439238e13390409e963fa3e635ebdbe7342340d57af87f96f48 alias:yonezu
1483691403 DEBUG [AccountRepository]  data:
'dM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmAyonezu
1483691404 DEBUG [AccountRepository]  data:
'dM/DPabapmtA7ISbTYPywbHxk8gWu2221LzmcmAyonezu
```",2017-01-06 08:32:17,2017-01-06 08:32:17
https://api.github.com/repos/hyperledger/iroha/issues/110,https://api.github.com/repos/hyperledger/iroha/issues/comments/270856374,https://github.com/hyperledger/iroha/issues/110#issuecomment-270856374,Warchant,"Build docker image using  `${IROHA_HOME}/docker/build.sh`

I believe build process has a bug related to grpc, but I can not find it ",2017-01-06 08:35:20,2017-01-06 08:35:20
https://api.github.com/repos/hyperledger/iroha/issues/110,https://api.github.com/repos/hyperledger/iroha/issues/comments/270856401,https://github.com/hyperledger/iroha/issues/110#issuecomment-270856401,MizukiSonoko,"But I thinks above bug
> Debugging says:
> event.transaction() = Couldn't find method Event::ConsensusEvent::transaction

So, I think I should add has_transaction() before event.transaction().",2017-01-06 08:35:29,2017-01-06 08:35:29
https://api.github.com/repos/hyperledger/iroha/issues/110,https://api.github.com/repos/hyperledger/iroha/issues/comments/270856685,https://github.com/hyperledger/iroha/issues/110#issuecomment-270856685,MizukiSonoko,Ok I try to it on docker image built ${IROHA_HOME}/docker/build.sh,2017-01-06 08:37:16,2017-01-06 08:37:16
https://api.github.com/repos/hyperledger/iroha/issues/110,https://api.github.com/repos/hyperledger/iroha/issues/comments/270943990,https://github.com/hyperledger/iroha/issues/110#issuecomment-270943990,luckychess,"I did a small investigation: if comment out this piece of code in the sumeragi.cpp:
```
connection::receive([](const std::string& from, Event::ConsensusEvent& event){
            logger::info(""sumeragi"", ""receive!"");
            logger::info(""sumeragi"", ""received message! sig:["" + std::to_string(event.eventsignatures_size()) +""]"");
        
            // send processTransaction(event) as a task to processing pool
            // this returns std::future<void> object
            // (std::future).get() method locks processing until result of processTransaction will be available
            // but processTransaction returns void, so we don't have to call it and wait
            std::function<void()> &&task = std::bind(processTransaction, std::ref(event));
            pool.process(std::move(task));
        });
```
all works although sumeragi_test still segfaults.
The problem is definitely inside grpc (or may be we work with it in a wrong way?). I reinstalled it but it did not help.",2017-01-06 16:36:48,2017-01-06 16:36:48
https://api.github.com/repos/hyperledger/iroha/issues/103,https://api.github.com/repos/hyperledger/iroha/issues/comments/269107503,https://github.com/hyperledger/iroha/issues/103#issuecomment-269107503,MizukiSonoko,"And This is protobuf's protocol
```
syntax = ""proto3"";

option cc_generic_services = false;

package Event;

service IrohaConnection {
  rpc Operation(ConsensusEvent) returns (StatusResponse) {}
}

message Asset {
  string domain = 1;
  string name = 2;
  uint64 value = 3;
  uint64 precision = 4;
}
message Domain {
  string ownerPublicKey = 1;
  string name = 2;
}
message Account {
  string publicKey = 1;
  string name = 2;
  repeated Asset assets = 3;
}


message TxSignatures {
  string publicKey = 1;
  string signature = 2;
}
message EventSignature {
  string publicKey = 1;
  string signature = 2;
}

message Transaction {
  repeated TxSignatures txSignatures = 1;
  string type = 2;
  string senderPubkey = 3;
  string hash = 4;

  uint64 timestamp = 5;

  Asset asset = 6;
  Domain domain = 7;
  Account account = 8;
  string receivePubkey = 9;
}

message ConsensusEvent {
  repeated EventSignature eventSignatures = 1;
  Transaction transaction = 2;
  uint64 order = 3;
}

message StatusResponse {
  string value = 1;
}
```",2016-12-25 02:17:43,2016-12-25 02:17:43
https://api.github.com/repos/hyperledger/iroha/issues/103,https://api.github.com/repos/hyperledger/iroha/issues/comments/269107569,https://github.com/hyperledger/iroha/issues/103#issuecomment-269107569,MizukiSonoko,Follow #99 and update.,2016-12-25 02:22:04,2016-12-25 02:22:15
https://api.github.com/repos/hyperledger/iroha/issues/103,https://api.github.com/repos/hyperledger/iroha/issues/comments/273842787,https://github.com/hyperledger/iroha/issues/103#issuecomment-273842787,MizukiSonoko,"I write it to sample.fbs.

ref: https://github.com/grpc/grpc/issues/5438

```sh
$ flatc --cpp --grpc --gen-object-api sample.fbs
# I wrote test code like https://github.com/google/flatbuffers/blob/master/grpc/tests/grpctest.cpp
$ g++ -std=c++14 sample.grpc.fb.cc test.cpp  -lgrpc++ -lgrpc++_reflection -lgpr  -pthread -o grpc_flatbuf
$ ./grpc_flatbuf
```

",2017-01-19 17:32:20,2017-01-20 05:34:25
https://api.github.com/repos/hyperledger/iroha/issues/99,https://api.github.com/repos/hyperledger/iroha/issues/comments/269107533,https://github.com/hyperledger/iroha/issues/99#issuecomment-269107533,MizukiSonoko,"- Domain,Assetにexpireを追加した方が良さそう。
- Domainの所有者は現在1つのアカウントのみ
- Message Objectを追加
",2016-12-25 02:19:48,2016-12-25 02:19:48
https://api.github.com/repos/hyperledger/iroha/issues/99,https://api.github.com/repos/hyperledger/iroha/issues/comments/270601286,https://github.com/hyperledger/iroha/issues/99#issuecomment-270601286,MizukiSonoko,"I would like to propose below architecture.

## Feature  

- API layer is separated from iroha core
- API layer can issue transaction and read ledger using repository 
- Default API layer can accept grpc.
- API layer will be made by some language SDK( python, node, go ...) ※ This is future work.

```
 Input (using flat buffer / http(optional)) from client like Android, iOS, Web...
   |(1)                          
   | 
   |
---+------------------------------
   | * User programable (Provide SDK / default grpc api) 
 +-┼-------------------+
 |     API Layor       | 
 +-┼--------------┼----+
---┼--------------┼----------------
   |              |
   |Transaction   |Query
   |   builder    |  repository
┌--┼----------┐   |    
|  | sumeragi |   |    * User programable     
|┌-V---------┐|(2)|   ┌-------------┐   
|| stateless ┼┼---┼---┼->           |    
|├-----------┤|(3)|   | chain code  |     
|| stateful <┼┼---┼---┼-            |     
|└-|-------|-┘|   |   └-┼----┼------┘    
└--┼-------┼--┘   |     |    |
   |       |      └-----┼----┼-----------┐
   |       └------------┼----┼------┐    |
   |                    |    |      |    |
   |consensus building  |    |      |(4) |
┌--┼---------┐          |  ┌-┼------V----v-┐     ┌-------┐
| connection |          |  |   repository  |------ model |
└-----┼------┘          |  └--------┼------┘     └-------┘
      |                 |           |
Infra=┼=================┼===========┼===========
      |implement        |implement  |implement
   ┌--┼---┐          ┌--┼---┐    ┌--┼--┐
   | grpc |          | JAVA |    | D B |
   └------┘          └------┘    └-----┘
```

## Exmple of python using iroha-SDK

Sorry... I am not familiar with Python 🙇 

```python
>> from iroha import Transaction, Repository, Asset
>> 
>> # This is option
>> Transaction.config( 
>>    sumeragi_ip = ""localhost"", 
>>    sumeragi_port = ""51051""
>> )
>> 
>> asset = Asset(name = ""Sample"", value = ""100"")
>> tx = Transaction.build(command = ""Add"", sender = ""publicKey"", object = asset)
>> Transaction.send(tx) # Send transaction to sumeragi.
>> 
>> sample = Repository.findByName(""Sample"") # Read data from ledger, at this time
>> print(sample.value)
>> 
```
",2017-01-05 09:33:14,2017-01-05 09:37:08
https://api.github.com/repos/hyperledger/iroha/issues/99,https://api.github.com/repos/hyperledger/iroha/issues/comments/271752887,https://github.com/hyperledger/iroha/issues/99#issuecomment-271752887,MizukiSonoko,"# This is Final draft I think

- Asset in Iroha  
- Operation
- Architecture   
  
# Asset in Iroha  
  
## Object
Object iroha can operate it. There is kind of Currency,  Asset,Domain,Account,Message and Peer. 
Associate SmartContract with Asset.
  
### Asset  
It has the most basic object, ""hash map"" as value.
#### Elements  
- domainId (stirng) // domain that is attached
- name  (string) 
- value (map<string,Object>)
  
### SimpleAsset
It is Asset that it has one value.
####  Elements
- domainId (string) domain that is attached
- name  (string)
- value (Object)

### Domain
The set of Asset.  
####  Elements 
- ownerPublicKey ([ string ])
- name (string) // length 255
  
### Account  
A user who can operate iroha's data. It has publicKey, name, Operable Asset as information.
#### Elements     
- ownerPublicKey (string) 
- name (string) // length 255
- assets ([string])
  
### Peer
Information on the peer making up sumeragi
#### Elements
  
- publicKey (string)
- address (string) 
- some value  // trust value
    

### Relation
```
+--------------+  has  +---------+
|    Domain    |<------| Account |
+--------------+       +---------+
    |       | belong
    v       v
+------+ +------+
|Asset1| |Asset2|
+------+ +------+
    |       |
====================    
    |       |       +-----------------+
    |       └─------| smart contract2 |
    |               +-----------------+
+-----------------+
| smart contract1 |
+-----------------+
```  

ex
```
domain:hyperledger
asset: mizuki
asset: iori
asset: toyama

mizuki.hyperledger
iori.hyperledger
toyama.hyperledger
```
  
# Operation
I plan to support the following commands:

- Add
- Transfer
- Update
- Remove
- Batch
- Unbatch

# Description
## Add
This does insertion, installation, creation, registration and addition.
EX)
```
Add<Account> = Account registration.
Add<Asset>   = Create asset.
Add<Asset, To<Account>> =  Tie asset to account.

=========
Add< Object >
Add< Object, To> = Tie< Object, To>
```
  
## Transfer
This does moving, migrating, and transferring.
EX)
```
Transfer<Asset>  = Transfer asset value.
Transfer<Account> =  Permissions migration
```
  
## Update
This does updating, and modification.
EX)
```
Update<Account>  = Update account information.
```

## Remove
This does do removing.
EX)
```
Remove<Account>  = Remove account
```

## Batch, Unbatch
This does batching of transactions.
under domain.
Suppert multi sig
EX)
```
Batch<Add<Account>,Transfer<Asset>,Remove<Account>>  = Account registration, Transferring asset and Removing account.
Unbatch = Unbatch
```

# Wrapper
I think Iroha will be support this tokens.

- To

# Architecture   

## Iroha Architecture (currently)

## API layor added iroha

```
 Input (using flat buffer / http(optional)) from client like Android, iOS, Web...
   |(1)                          
   | 
   |
---+------------------------------
   | * User programable (Provide SDK / default grpc api) 
 +-┼-------------------+
 |     API Layor       | 
 +-┼--------------┼----+
---┼--------------┼----------------
   |              |
   |Transaction   |Query
   |   builder    |  repository
┌--┼----------┐   |    
|  | sumeragi |   |    * User programable     
|┌-V---------┐|(2)|   ┌-------------┐   
|| stateless ┼┼---┼---┼->           |    
|├-----------┤|(3)|   | chain code  |     
|| stateful <┼┼---┼---┼-            |     
|└-|-------|-┘|   |   └-┼----┼------┘    
└--┼-------┼--┘   |     |    |
   |       |      └-----┼----┼-----------┐
   |       └------------┼----┼------┐    |
   |                    |    |      |    |
   |consensus building  |    |      |(4) |
┌--┼---------┐          |  ┌-┼------V----v-┐     ┌-------┐
| connection |          |  |   repository  |------ model |
└-----┼------┘          |  └--------┼------┘     └-------┘
      |                 |           |
Infra=┼=================┼===========┼===========
      |implement        |implement  |implement
   ┌--┼---┐          ┌--┼---┐    ┌--┼--┐
   | grpc |          | JAVA |    | D B |
   └------┘          └------┘    └-----┘
```

## SDK sample

### Python Sample 

preview
```python
>> from iroha import Transaction, Repository, Asset
>> 
>> # This is option
>> Transaction.config( 
>>    sumeragi_ip = ""localhost"", 
>>    sumeragi_port = ""51051""
>> )
>> 
>> asset = Asset(name = ""Sample"", value = ""100"")
>> tx = Transaction.build(command = ""Add"", sender = ""publicKey"", object = asset)
>> Transaction.send(tx) // Send transaction to sumeragi.
>> 
>> sample = Repository.findByName(""Sample"") // Read data from ledger, at this time
>> print(sample.value)
>> 
```
",2017-01-11 01:35:50,2017-02-13 10:16:26
https://api.github.com/repos/hyperledger/iroha/issues/99,https://api.github.com/repos/hyperledger/iroha/issues/comments/272062568,https://github.com/hyperledger/iroha/issues/99#issuecomment-272062568,MizukiSonoko,"ip (string) // IPv4,IPv6 -> use DNS like  alias",2017-01-12 02:56:34,2017-01-12 02:56:34
https://api.github.com/repos/hyperledger/iroha/issues/99,https://api.github.com/repos/hyperledger/iroha/issues/comments/272062579,https://github.com/hyperledger/iroha/issues/99#issuecomment-272062579,masterDev1985,"Some best practices for your Iroha net code:
- Use random backoffs for all connection retries.
- Never use static data to establish connections to your other peers.
- Include retries for every network-related task the peers perform.",2017-01-12 02:56:41,2017-01-12 02:56:41
https://api.github.com/repos/hyperledger/iroha/issues/99,https://api.github.com/repos/hyperledger/iroha/issues/comments/281271503,https://github.com/hyperledger/iroha/issues/99#issuecomment-281271503,takemiyamakoto,"Below is my proposal for the transaction API, adding multisignatory:

# Objects

- Asset
- Domain
- Peer
- SimpleAsset
- Signatory

# Commands

- Add
- Transfer
- Update
- Remove
- Batch
- Unbatch
- Multisig

# Architecture:

```
 Input (using flat buffer / http(optional)) from client like Android, iOS, Web...
   |(1)                          
   | 
   |
---+------------------------------
   | * User programable (Provide SDK / default grpc api) 
 +-┼-------------------+
 |     API Layer       | 
 +-┼--------------┼----+
---┼--------------┼----------------
   |              |
   |Transaction   |Query
   |   builder    |  repository
┌--┼----------┐   |    
|  | sumeragi |   |    * User programable     
|┌-V---------┐|(2)|   ┌-------------┐   
|| stateless ┼┼---┼---┼->           |    
|├-----------┤|(3)|   | chain code  |     
|| stateful <┼┼---┼---┼-            |     
|└-|-------|-┘|   |   └-┼----┼------┘    
└--┼-------┼--┘   |     |    |
   |       |      └-----┼----┼-----------┐
   |       └------------┼----┼------┐    |
   |                    |    |      |    |
   |consensus building  |    |      |(4) |
┌--┼---------┐          |  ┌-┼------V----v-┐     ┌-------┐
| connection |          |  |   repository  |-----| model |
└-----┼------┘          |  └--------┼------┘     └-------┘
      |                 |           |
Infra=┼=================┼===========┼===========
      |implement        |implement  |implement
   ┌--┼---┐          ┌--┼---┐    ┌--┼--┐
   | grpc |          | JAVA |    | D B |
   └------┘          └------┘    └-----┘
```",2017-02-21 08:02:57,2017-02-27 09:27:33
https://api.github.com/repos/hyperledger/iroha/issues/99,https://api.github.com/repos/hyperledger/iroha/issues/comments/282701453,https://github.com/hyperledger/iroha/issues/99#issuecomment-282701453,MizukiSonoko,"In addition, I think this command 

## Tie 
```
Link<Asset>( contractName, assetName); or 
Attach<Asset>( contractName, assetName);
```

## Annotate
```
Annotate<Asset>( assetName, text);
```
",2017-02-27 11:59:06,2017-02-27 11:59:06
https://api.github.com/repos/hyperledger/iroha/issues/99,https://api.github.com/repos/hyperledger/iroha/issues/comments/283539369,https://github.com/hyperledger/iroha/issues/99#issuecomment-283539369,MizukiSonoko,"This is my proposal for future asset management system.

## Asset
```
Asset
 ├── Datamodel
 └── Function
```

### Datamodel
It is written by flatbuffer scheme

#### Sample1
```
table Currency{
  name: string (required);
  value: int (required);
}
```

#### Sample2
```
table Message{
  name: string (required);
  message: string (required);
}
```

#### Sample2
```
table Account{
  name: string (required);
  publicKey: string (required);
  belong: string (required);
  permissions: [Permission] (required); 
}
```

### Function
asset's behavior

#### Sample1
```
Currency
 ├── Add
 └── Transfer
```
Add: Issueable
Transfer: remittable


#### Sample1
```
Message
 ├── Add
 ├── Remove
 └── Transfer
```
Add: Issueable
Remove: Removable
Transfer: remittable

# Permission
I think Iroha should have permission function.

## Domain
Domain is like Unix user group
```
┌---------------- Iroha -------------------┐
|              o Root                      |
|┌-- default -┐┌-- Domain1 -┐┌-- Domain2 -┐|
||   o user   ||   o root   ||   o root   ||
||   o user   ||   o user   ||   o user   ||
|| ┌ Asset1 ┐ || ┌ Asset1 ┐ || ┌ Asset1 ┐ ||
|| |        | || |        | || |        | ||
|| └--------┘ || └--------┘ || └--------┘ ||
|└------------┘└------------┘└------------┘|
└------------------------------------------┘
```
Iroha has more than one Iroha-root.
Iroha-root has all parmission for iroha-ledger (Add peer, Add user)

Only Iroha-root can create new domain firstly.
domain has more than one domain-root.
Iroha-root has all parmission for own domain (Add asset, Add user)
basically, user cannot access other domain.

Only Iroha-root can create new user firstly.
User created belongs default domain.

## Action(Iroha root)
- Add/Remove user
- Add/Remove domain
- Add/Remove peer
- Grant user

## Action(Domain root)
- Add/Remove user
- Invite user from other domain
- Grant user
- Add/Remove asset
- Read/Update asset
- Execute smart contract

## Action (Ordinary user)
- Read/Update asset",2017-03-02 02:41:51,2017-03-02 02:41:51
https://api.github.com/repos/hyperledger/iroha/issues/99,https://api.github.com/repos/hyperledger/iroha/issues/comments/289666461,https://github.com/hyperledger/iroha/issues/99#issuecomment-289666461,MizukiSonoko,"Ok, This finished own role",2017-03-28 05:24:05,2017-03-28 05:24:05
https://api.github.com/repos/hyperledger/iroha/issues/94,https://api.github.com/repos/hyperledger/iroha/issues/comments/267812128,https://github.com/hyperledger/iroha/issues/94#issuecomment-267812128,MizukiSonoko,"Ok Reason for this error is Cappuccino update
so I should command before make.

```
cd core/vendor/Cappuccino
git pull
```
(I want to automatically update some submodule....)

thanks",2016-12-18 09:47:01,2016-12-18 09:49:04
https://api.github.com/repos/hyperledger/iroha/issues/94,https://api.github.com/repos/hyperledger/iroha/issues/comments/267813383,https://github.com/hyperledger/iroha/issues/94#issuecomment-267813383,Warchant,"It should fetch master branch while using
```
git clone --recursive https://github.com/hyperledger/iroha
```

But it fetches not master, but something else. 

Trying to locate this bug and fix it",2016-12-18 10:18:43,2016-12-18 10:18:43
https://api.github.com/repos/hyperledger/iroha/issues/94,https://api.github.com/repos/hyperledger/iroha/issues/comments/267813833,https://github.com/hyperledger/iroha/issues/94#issuecomment-267813833,Warchant,"```
git submodule foreach --recursive git checkout master
```

it can be a solution. Run this after 
```
git clone --recursive https://github.com/hyperledger/iroha
```
and it will checkout master of each submodule.",2016-12-18 10:29:32,2016-12-18 10:29:32
https://api.github.com/repos/hyperledger/iroha/issues/88,https://api.github.com/repos/hyperledger/iroha/issues/comments/267486118,https://github.com/hyperledger/iroha/pull/88#issuecomment-267486118,Warchant,"Oops, I did something wrongly. Docker commit is also here",2016-12-16 00:34:54,2016-12-16 00:36:31
https://api.github.com/repos/hyperledger/iroha/issues/87,https://api.github.com/repos/hyperledger/iroha/issues/comments/267484791,https://github.com/hyperledger/iroha/pull/87#issuecomment-267484791,takemiyamakoto,"It's probably best to create PRs into the develop branch first, before going into master.",2016-12-16 00:26:18,2016-12-16 00:26:18
https://api.github.com/repos/hyperledger/iroha/issues/87,https://api.github.com/repos/hyperledger/iroha/issues/comments/267484996,https://github.com/hyperledger/iroha/pull/87#issuecomment-267484996,Warchant,"Ok, next time it will go into develop branch.
Should I change base branch to develop?",2016-12-16 00:27:33,2016-12-16 00:41:29
https://api.github.com/repos/hyperledger/iroha/issues/87,https://api.github.com/repos/hyperledger/iroha/issues/comments/267489240,https://github.com/hyperledger/iroha/pull/87#issuecomment-267489240,tkyonezu,"This morning I'm writing docker-compose.yml file as feature/compose branch. After I'll test it, I' commit and push to iroha-docker repository.",2016-12-16 00:56:24,2016-12-16 00:56:24
https://api.github.com/repos/hyperledger/iroha/issues/84,https://api.github.com/repos/hyperledger/iroha/issues/comments/266228717,https://github.com/hyperledger/iroha/issues/84#issuecomment-266228717,MizukiSonoko,"Oh sorry.

Could you wait while we implement callback?",2016-12-10 18:44:51,2016-12-10 18:44:51
https://api.github.com/repos/hyperledger/iroha/issues/84,https://api.github.com/repos/hyperledger/iroha/issues/comments/266229771,https://github.com/hyperledger/iroha/issues/84#issuecomment-266229771,kansi,"Yup, what option do I have  :-)",2016-12-10 19:00:51,2016-12-10 19:00:51
https://api.github.com/repos/hyperledger/iroha/issues/84,https://api.github.com/repos/hyperledger/iroha/issues/comments/266234208,https://github.com/hyperledger/iroha/issues/84#issuecomment-266234208,kansi,"@MizukiSonoko I wish to contribute to Iroha, are there any available docs which can help me understand the current design of the project like consensus protocols, ledger handling, events etc ?",2016-12-10 20:04:28,2016-12-10 20:04:28
https://api.github.com/repos/hyperledger/iroha/issues/84,https://api.github.com/repos/hyperledger/iroha/issues/comments/266235627,https://github.com/hyperledger/iroha/issues/84#issuecomment-266235627,MizukiSonoko,"Ok thanks!
I will publish descriptions as soon as possible.
and currently document is https://github.com/hyperledger/iroha/blob/master/docs/iroha_whitepaper.md

thanks",2016-12-10 20:28:13,2016-12-10 20:28:13
https://api.github.com/repos/hyperledger/iroha/issues/84,https://api.github.com/repos/hyperledger/iroha/issues/comments/274316723,https://github.com/hyperledger/iroha/issues/84#issuecomment-274316723,takemiyamakoto,Is this still a problem now that we changed the event model?,2017-01-22 08:23:59,2017-01-22 08:23:59
https://api.github.com/repos/hyperledger/iroha/issues/83,https://api.github.com/repos/hyperledger/iroha/issues/comments/267141076,https://github.com/hyperledger/iroha/issues/83#issuecomment-267141076,Warchant,"Confirmed.

I followed instruction from [iroha-docker repo](https://github.com/hyperledger/iroha-docker#2-iroha) and after `docker build -t hyperledger/iroha .` got this error:

```
[ 70%] Building CXX object core/infra/server/CMakeFiles/http_server_with_cappuccino.dir/http_server_with_cappuccino.cpp.o
/opt/iroha/core/infra/server/http_server_with_cappuccino.cpp: In function 'void http::server(std::map<std::__cxx11::basic_string<char>, std::function<int(json_parse::Object)> >)':
/opt/iroha/core/infra/server/http_server_with_cappuccino.cpp:89:10: error: no matching function for call to 'route(const std::__cxx11::basic_string<char>&, http::server(std::map<std::__cxx11::basic_string<char>, std::function<int(json_parse::Object)> >)::<lambda(std::shared_ptr<Cappuccino::Request>)>)'
         });
          ^
In file included from /opt/iroha/core/infra/server/http_server_with_cappuccino.cpp:20:0:
/opt/iroha/core/infra/server/../../vendor/Cappuccino/cappuccino.hpp:551:7: note: candidate: template<Cappuccino::Method m> void Cappuccino::route(const string&, std::function<Cappuccino::Response(std::shared_ptr<Cappuccino::Request>)>)
  void route(const string& path,std::function<Response(std::shared_ptr<Request>)> F){
       ^
/opt/iroha/core/infra/server/../../vendor/Cappuccino/cappuccino.hpp:551:7: note:   template argument deduction/substitution failed:
/opt/iroha/core/infra/server/http_server_with_cappuccino.cpp:89:10: note:   couldn't deduce template parameter 'm'
         });
          ^
In file included from /opt/iroha/core/infra/server/http_server_with_cappuccino.cpp:20:0:
/opt/iroha/core/infra/server/../../vendor/Cappuccino/cappuccino.hpp: At global scope:
/opt/iroha/core/infra/server/../../vendor/Cappuccino/cappuccino.hpp:110:15: warning: 'void Cappuccino::Log::info(const string&)' defined but not used [-Wunused-function]
   static void info(const string& msg){
               ^
core/infra/server/CMakeFiles/http_server_with_cappuccino.dir/build.make:62: recipe for target 'core/infra/server/CMakeFiles/http_server_with_cappuccino.dir/http_server_with_cappuccino.cpp.o' failed
make[2]: *** [core/infra/server/CMakeFiles/http_server_with_cappuccino.dir/http_server_with_cappuccino.cpp.o] Error 1
CMakeFiles/Makefile2:857: recipe for target 'core/infra/server/CMakeFiles/http_server_with_cappuccino.dir/all' failed
make[1]: *** [core/infra/server/CMakeFiles/http_server_with_cappuccino.dir/all] Error 2
Makefile:94: recipe for target 'all' failed
make: *** [all] Error 2
```

Also, `circleci` gets this error too:
https://circleci.com/gh/hyperledger/iroha/825

*UPD*: started fixing it

*UPD*: if you have this error, write this:
```
cd $IROHA_HOME
git submodule init
git submodule update
```

Writing pull-request to iroha-docker to fix this.",2016-12-14 20:04:58,2016-12-14 21:52:55
https://api.github.com/repos/hyperledger/iroha/issues/83,https://api.github.com/repos/hyperledger/iroha/issues/comments/267167902,https://github.com/hyperledger/iroha/issues/83#issuecomment-267167902,Warchant,Fixed in https://github.com/hyperledger/iroha-docker/pull/3,2016-12-14 21:51:09,2016-12-14 21:51:09
https://api.github.com/repos/hyperledger/iroha/issues/83,https://api.github.com/repos/hyperledger/iroha/issues/comments/267435393,https://github.com/hyperledger/iroha/issues/83#issuecomment-267435393,tkyonezu,"Hi! everybody.

Sorry, to late read this mail.

Yes, this code seems so cool for us.

Thank you for your suggestion for our code, and I fully agree to
merge your code in iroha-docker.

—
Takeshi

> 2016/12/15 19:48、誠 <notifications@github.com>のメール:
> 
> Closed #83 <https://github.com/hyperledger/iroha/issues/83> via hyperledger/iroha-docker@d4be2d5 <https://github.com/hyperledger/iroha-docker/commit/d4be2d5aa513460bf09a4db10c82803c9c869f35>.
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub <https://github.com/hyperledger/iroha/issues/83#event-895029663>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AU_yHiidUXOtUmtHP2k8t_TPVmoWfbhdks5rIRr7gaJpZM4LIgRd>.
> 

",2016-12-15 20:29:18,2016-12-15 20:29:18
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/265646951,https://github.com/hyperledger/iroha/issues/80#issuecomment-265646951,lirm,"A little extra information:

> cd ../core/infra/crypto/
> make
> g++   -std=c++0x -DKeccakP200_excluded -DKeccakP400_excluded -DKeccakP800_excluded -I../../vendor/KeccakCodePackage/bin/generic64/libkeccak.a.headers -c ../../vendor/KeccakCodePackage/SnP/KeccakP-1600/Optimized64/KeccakP-1600-opt64.c -o KeccakP-1600-opt64.o
clang: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated
../../vendor/KeccakCodePackage/SnP/KeccakP-1600/Optimized64/KeccakP-1600-opt64.c:18:10: fatal error: 'brg_endian.h' file not found
#include ""brg_endian.h""
         ^
1 error generated.
make: *** [KeccakP-1600-opt64.o] Error 1",2016-12-08 03:58:25,2016-12-08 03:58:25
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/265775001,https://github.com/hyperledger/iroha/issues/80#issuecomment-265775001,lirm,"Got this resolved. I think build process needs some updating. Here are the steps to build the dependencies:

>cd $IROHA_HOME/core/vendor/KeccakCodePackage
make generic64/libkeccak.a

>cd $IROHA_HOME/core/vendor/ed25519/
make

>cd $IROHA_HOME/core/vendor/json/
make

>cd $IROHA_HOME/core/infra/crypto/
make",2016-12-08 15:54:31,2016-12-08 15:54:31
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/265782810,https://github.com/hyperledger/iroha/issues/80#issuecomment-265782810,MizukiSonoko,"Oh sorry,

I should write document...
And we research why CMake doesn't run.",2016-12-08 16:22:26,2016-12-08 16:22:26
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/265803177,https://github.com/hyperledger/iroha/issues/80#issuecomment-265803177,kansi,"@lirm really thankful for your update here, I have been trying to get it work. Also, I don't see much documentation on how to run and use Iroha. Could you please point me to some resources on how to run the ledger and execute transacitons ?",2016-12-08 17:37:15,2016-12-08 17:37:15
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/265819776,https://github.com/hyperledger/iroha/issues/80#issuecomment-265819776,lirm,"@kansi No problem. I've been trying to build and run it on my machine raw. I believe that currently suggested path for testing is to use Docker.

I've gotten to the point that everything builds (I still had to copy some libraries: `cp $IROHA_HOME/core/vendor/ed25519/lib/libed25519.* $IROHA_HOME/build/lib/`).

Now the next error I get is:

>[12:38:02] (LCHI092978) build:  (master)$ export IROHA_HOME=$PWD
[12:38:15] (LCHI092978) build:  (master)$ ./bin/iroha-main
1481222299 INFO [main] process is :62800
Fileが見つかりません
Fileが見つかりません
Fileが見つかりません
1481222299[sumeragi] +==ーーーーーーーーー==+
1481222299[sumeragi] |+-ーーーーーーーーー-+|
1481222299[sumeragi] || 　　　　　　　　　 ||
1481222299[sumeragi] || いろは合意形成機構 ||
1481222299[sumeragi] || 　　　すめらぎ　　 ||
1481222299[sumeragi] || 　　　　　　　　　 ||
1481222299[sumeragi] |+-ーーーーーーーーー-+|
1481222299[sumeragi] +==ーーーーーーーーー==+
1481222299[sumeragi] - 起動/setup
1481222299[sumeragi] - 初期設定/initialize
Fileが見つかりません
1481222299 INFO [sumeragi] My key is
1481222299 INFO [sumeragi] Sumeragi setted
1481222299 INFO [sumeragi] set number of validatingPeer
libc++abi.dylib: terminating with uncaught exception of type std::out_of_range: deque
Abort trap: 6",2016-12-08 18:43:52,2016-12-08 18:43:52
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/265824505,https://github.com/hyperledger/iroha/issues/80#issuecomment-265824505,kansi,"@lirm I got it running.
You are missing the [config file](https://github.com/hyperledger/iroha/blob/master/core/infra/service/peer_service_with_json.cpp#L19) 

But I don't have a clue what to do with it ! do you know where to write contract and how to execute transactions. Moreover its eating all my cpu !",2016-12-08 19:01:41,2016-12-08 19:04:59
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/265840891,https://github.com/hyperledger/iroha/issues/80#issuecomment-265840891,lirm,"@kansi Thanks for the pointer!

A sample config file would be supremely helpful. I whipped the following by reading the code:

`
{
  ""me"": {
    ""publicKey"": ""1"",
    ""privateKey"": ""2"",
    ""ip"": ""127.0.0.1""
  },
  ""group"": [
    {
      ""ip"": ""127.0.0.1"",
      ""publicKey"": ""2""
    }
  ]
}
`

I then ran into a SEGFAULT with passing a null parameter list to Cappuccino server - parameter parsing exploded in getopt(). Apparently it doesn't expect null list - I've patched it up locally and that allowed me to, at least, bring up the process.

As far as examples of contracts and transactions - I'm waiting for documentation from the authors, but I'll poke around and see what I can figure out.

@MizukiSonoko I will close this one after the documentation is ready and I can do a clean build and run. Thank you. ",2016-12-08 20:05:39,2016-12-08 20:05:39
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/265929553,https://github.com/hyperledger/iroha/issues/80#issuecomment-265929553,kansi,"@lirm I used this [config file](https://github.com/hyperledger/iroha-docker/blob/master/iroha/config1/sumeragi.json) as referecence to create the following config file,
```
{
  ""me"":{
    ""ip"":""127.0.0.1"",
    ""name"":""iroha1"",
    ""publicKey"":""jDQTiJ1dnTSdGH+yuOaPPZIepUj1Xt3hYOvLQTME3V0="",
    ""privateKey"":""iJy2wzgM0Ffmur2xDNlnhYK7CiAYZoup/045JXJTbUzuE9c6HeUIf7hoqtppEsZQncC1EEw+gGhboLcbMNKadw==""
  },
  ""group"":[
    {
    ""ip"":""127.0.0.1"",
    ""name"":""iroha1"",
    ""publicKey"":""jDQTiJ1dnTSdGH+yuOaPPZIepUj1Xt3hYOvLQTME3V0="",
    ""privateKey"":""iJy2wzgM0Ffmur2xDNlnhYK7CiAYZoup/045JXJTbUzuE9c6HeUIf7hoqtppEsZQncC1EEw+gGhboLcbMNKadw==""
  }
  ]
}
```
I starts the processes but they hog all my cpu. I guess it gets stuck in an infinite loop somewhere ?",2016-12-09 04:15:01,2016-12-09 04:15:01
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/266046627,https://github.com/hyperledger/iroha/issues/80#issuecomment-266046627,lirm,"@kansi Thanks for the pointer! Looks like iroha-docker repo has a lot of information on build. https://github.com/hyperledger/iroha-docker/tree/master/iroha-build has a lot. Maybe some of it should be detailed and available on the main repo's README/Wiki.

",2016-12-09 15:50:13,2016-12-09 15:50:13
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/266218823,https://github.com/hyperledger/iroha/issues/80#issuecomment-266218823,kansi,@lirm Iroha's main repo's README/wiki needs much more details that this !,2016-12-10 16:09:18,2016-12-10 16:09:18
https://api.github.com/repos/hyperledger/iroha/issues/80,https://api.github.com/repos/hyperledger/iroha/issues/comments/267275714,https://github.com/hyperledger/iroha/issues/80#issuecomment-267275714,MizukiSonoko,"Currently how to build
https://github.com/hyperledger/iroha/blob/feature/add-how-to/docs/how_to_build.rst

Sorry for tha late...",2016-12-15 09:11:30,2016-12-15 09:11:30
https://api.github.com/repos/hyperledger/iroha/issues/79,https://api.github.com/repos/hyperledger/iroha/issues/comments/265647979,https://github.com/hyperledger/iroha/pull/79#issuecomment-265647979,lirm,Will reopen to refresh the DCA signoff check,2016-12-08 04:06:58,2016-12-08 04:06:58
https://api.github.com/repos/hyperledger/iroha/issues/77,https://api.github.com/repos/hyperledger/iroha/issues/comments/267515424,https://github.com/hyperledger/iroha/pull/77#issuecomment-267515424,takemiyamakoto,"In order to merge, all committers must sign the Developer Certificate of Origin: https://www.clahub.com/agreements/hyperledger/iroha",2016-12-16 04:38:22,2016-12-16 04:38:22
https://api.github.com/repos/hyperledger/iroha/issues/75,https://api.github.com/repos/hyperledger/iroha/issues/comments/264514276,https://github.com/hyperledger/iroha/issues/75#issuecomment-264514276,MizukiSonoko,"Sorry I have not done HowTo yet...

You need to install grpc and protobuf 
```sh
cd /tmp; git clone -b v3.0.0 https://github.com/google/protobuf.git
cd /tmp/protobuf;(git cherry-pick 1760feb621a913189b90fe8595fffb74bce84598; echo Force continue)
cd /tmp/protobuf; ./autogen.sh; ./configure --prefix=/usr; make -j 16; sudo make install
protoc --version
cd /tmp; git clone -b $(curl -L http://grpc.io/release) https://github.com/grpc/grpc
cd /tmp/grpc; git submodule update --init; make; sudo make install
which grpc_cpp_plugin
```

grpc, protobuf is installed separately from Iroha.
I think this will be helpful for the iroha's environment.
[iroha-docker](https://github.com/hyperledger/iroha-docker)",2016-12-02 17:40:22,2016-12-02 17:40:22
https://api.github.com/repos/hyperledger/iroha/issues/73,https://api.github.com/repos/hyperledger/iroha/issues/comments/264380607,https://github.com/hyperledger/iroha/pull/73#issuecomment-264380607,takemiyamakoto,"
![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
- Added 1
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=437645&bid=3957673)
        ",2016-12-02 06:03:04,2016-12-02 06:03:04
https://api.github.com/repos/hyperledger/iroha/issues/72,https://api.github.com/repos/hyperledger/iroha/issues/comments/264090883,https://github.com/hyperledger/iroha/issues/72#issuecomment-264090883,takemiyamakoto,"You need to run:

$ git submodule init
$ git submodule update

Then you should go into the submodule directors in core/vendor and make them.",2016-12-01 06:36:50,2016-12-02 13:32:33
https://api.github.com/repos/hyperledger/iroha/issues/72,https://api.github.com/repos/hyperledger/iroha/issues/comments/264454478,https://github.com/hyperledger/iroha/issues/72#issuecomment-264454478,takemiyamakoto,Any luck?,2016-12-02 13:32:44,2016-12-02 13:32:44
https://api.github.com/repos/hyperledger/iroha/issues/72,https://api.github.com/repos/hyperledger/iroha/issues/comments/264500922,https://github.com/hyperledger/iroha/issues/72#issuecomment-264500922,shangmacun,whether  all of submodules to make  ？ ,2016-12-02 16:45:45,2016-12-02 16:45:45
https://api.github.com/repos/hyperledger/iroha/issues/72,https://api.github.com/repos/hyperledger/iroha/issues/comments/264511373,https://github.com/hyperledger/iroha/issues/72#issuecomment-264511373,MizukiSonoko,"Sorry, submodule has been bugged....

In core/infra/service/CMakeLists.txt
```cmake
set(JSON_PATH ""${PROJECT_SOURCE_DIR}/core/vendor/json"")
include_directories(
        ${JSON_PATH}/src
)
ADD_LIBRARY(peer_service_with_json STATIC peer_service_with_json.cpp)
```

So, You need clone [json](https://github.com/nlohmann/json) to core/vendor/json.
```sh
$ git clone https://github.com/nlohmann/json core/vendor/json
```

sorry",2016-12-02 17:28:10,2016-12-02 17:28:10
https://api.github.com/repos/hyperledger/iroha/issues/70,https://api.github.com/repos/hyperledger/iroha/issues/comments/261898896,https://github.com/hyperledger/iroha/pull/70#issuecomment-261898896,davidebenato,git submodule update error is unrelated to my changes :),2016-11-21 10:23:22,2016-11-21 10:23:22
https://api.github.com/repos/hyperledger/iroha/issues/70,https://api.github.com/repos/hyperledger/iroha/issues/comments/261920246,https://github.com/hyperledger/iroha/pull/70#issuecomment-261920246,MizukiSonoko,"Thanks! I correct git submodule errors.
If I fixed it, I will create patch and merge.",2016-11-21 12:08:57,2016-11-21 12:08:57
https://api.github.com/repos/hyperledger/iroha/issues/70,https://api.github.com/repos/hyperledger/iroha/issues/comments/261927315,https://github.com/hyperledger/iroha/pull/70#issuecomment-261927315,MizukiSonoko,"I incorporated your commit into develop.
[develop](https://github.com/hyperledger/iroha/commits/develop)
  
( I think merging subbranch with master directly is danger. 
So first, merge it with develop. 
probably no problem, I will merge develop with master)

Thanks!!",2016-11-21 12:45:10,2016-11-21 12:45:10
https://api.github.com/repos/hyperledger/iroha/issues/68,https://api.github.com/repos/hyperledger/iroha/issues/comments/261923941,https://github.com/hyperledger/iroha/pull/68#issuecomment-261923941,takemiyamakoto,"
![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 5
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=425316&bid=3924487)
        ",2016-11-21 12:28:24,2016-11-21 12:28:24
https://api.github.com/repos/hyperledger/iroha/issues/67,https://api.github.com/repos/hyperledger/iroha/issues/comments/261827810,https://github.com/hyperledger/iroha/pull/67#issuecomment-261827810,takemiyamakoto,"
![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:


```diff

Issues
======
+ Solved 5
           
```


See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=425089&bid=3923843)
        ",2016-11-21 02:26:37,2016-11-21 02:26:37
https://api.github.com/repos/hyperledger/iroha/issues/65,https://api.github.com/repos/hyperledger/iroha/issues/comments/261778543,https://github.com/hyperledger/iroha/pull/65#issuecomment-261778543,MizukiSonoko,"miss retry. -> develop
",2016-11-20 13:31:16,2016-11-20 13:31:16
https://api.github.com/repos/hyperledger/iroha/issues/60,https://api.github.com/repos/hyperledger/iroha/issues/comments/260926972,https://github.com/hyperledger/iroha/issues/60#issuecomment-260926972,takemiyamakoto,"@bcamel is working on it: https://github.com/bcamel/Dockerfiles/tree/master/iroha
",2016-11-16 11:48:41,2016-11-16 11:48:41
https://api.github.com/repos/hyperledger/iroha/issues/60,https://api.github.com/repos/hyperledger/iroha/issues/comments/264186792,https://github.com/hyperledger/iroha/issues/60#issuecomment-264186792,tkyonezu,I've been make it on https://github.com/hyperledger/iroha-docker repository.,2016-12-01 14:29:50,2016-12-01 14:30:57
https://api.github.com/repos/hyperledger/iroha/issues/57,https://api.github.com/repos/hyperledger/iroha/issues/comments/327413259,https://github.com/hyperledger/iroha/issues/57#issuecomment-327413259,neewy,Transferred to https://soramitsu.atlassian.net/browse/IR-372,2017-09-06 08:27:56,2017-09-06 08:27:56
https://api.github.com/repos/hyperledger/iroha/issues/56,https://api.github.com/repos/hyperledger/iroha/issues/comments/258581583,https://github.com/hyperledger/iroha/pull/56#issuecomment-258581583,takemiyamakoto,"![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:

``` diff

Issues
======
- Added 4

```

See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=407858&bid=3879509)
",2016-11-05 01:14:30,2016-11-05 01:14:30
https://api.github.com/repos/hyperledger/iroha/issues/53,https://api.github.com/repos/hyperledger/iroha/issues/comments/257844145,https://github.com/hyperledger/iroha/pull/53#issuecomment-257844145,takemiyamakoto,"![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:

``` diff

Issues
======
+ Solved 2
- Added 19

```

See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=403746&bid=3870389)
",2016-11-02 11:55:32,2016-11-02 11:55:32
https://api.github.com/repos/hyperledger/iroha/issues/52,https://api.github.com/repos/hyperledger/iroha/issues/comments/257840346,https://github.com/hyperledger/iroha/pull/52#issuecomment-257840346,takemiyamakoto,"![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:

``` diff

Issues
======
+ Solved 2
- Added 19

```

See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=403736&bid=3870372)
",2016-11-02 11:34:43,2016-11-02 11:34:43
https://api.github.com/repos/hyperledger/iroha/issues/51,https://api.github.com/repos/hyperledger/iroha/issues/comments/257835641,https://github.com/hyperledger/iroha/pull/51#issuecomment-257835641,takemiyamakoto,"![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:

``` diff

Issues
======
+ Solved 1
- Added 19

```

See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=403708&bid=3870324)
",2016-11-02 11:09:49,2016-11-02 11:09:49
https://api.github.com/repos/hyperledger/iroha/issues/43,https://api.github.com/repos/hyperledger/iroha/issues/comments/256210734,https://github.com/hyperledger/iroha/pull/43#issuecomment-256210734,takemiyamakoto,"![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:

``` diff

Issues
======
- Added 2

```

See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=392577&bid=3837537)
",2016-10-25 23:42:36,2016-10-25 23:42:36
https://api.github.com/repos/hyperledger/iroha/issues/41,https://api.github.com/repos/hyperledger/iroha/issues/comments/255966119,https://github.com/hyperledger/iroha/pull/41#issuecomment-255966119,takemiyamakoto,"![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:

``` diff

Issues
======
+ Solved 2
- Added 3

```

See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=392439&bid=3837061)
",2016-10-25 08:06:52,2016-10-25 08:06:52
https://api.github.com/repos/hyperledger/iroha/issues/37,https://api.github.com/repos/hyperledger/iroha/issues/comments/255605992,https://github.com/hyperledger/iroha/pull/37#issuecomment-255605992,takemiyamakoto,"![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:

``` diff

Issues
======
- Added 1

```

See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=390089&bid=3831531)
",2016-10-23 18:42:00,2016-10-23 18:42:00
https://api.github.com/repos/hyperledger/iroha/issues/34,https://api.github.com/repos/hyperledger/iroha/issues/comments/257659145,https://github.com/hyperledger/iroha/issues/34#issuecomment-257659145,takemiyamakoto,"If anyone wants to work on this, it would help quite a lot to simplify the dev process.
",2016-11-01 18:52:56,2016-11-01 18:52:56
https://api.github.com/repos/hyperledger/iroha/issues/34,https://api.github.com/repos/hyperledger/iroha/issues/comments/267718596,https://github.com/hyperledger/iroha/issues/34#issuecomment-267718596,takemiyamakoto,"Aeron is gone, so I'm closing this.",2016-12-16 23:11:44,2016-12-16 23:11:44
https://api.github.com/repos/hyperledger/iroha/issues/32,https://api.github.com/repos/hyperledger/iroha/issues/comments/255583172,https://github.com/hyperledger/iroha/pull/32#issuecomment-255583172,MizukiSonoko,"I mistake .
",2016-10-23 11:23:38,2016-10-23 11:23:38
https://api.github.com/repos/hyperledger/iroha/issues/31,https://api.github.com/repos/hyperledger/iroha/issues/comments/255574634,https://github.com/hyperledger/iroha/pull/31#issuecomment-255574634,takemiyamakoto,"![Codacy](https://www.codacy.com/assets/images/favicon.png) Here is an overview of what got changed by this pull request:

``` diff

Issues
======
- Added 11


Clones added
============
- fabfile.py  2

```

See the complete overview on [Codacy](https://www.codacy.com/app/soramitsu/iroha/pullRequest?prid=389841&bid=3831026)
",2016-10-23 07:52:38,2016-10-23 07:52:38
https://api.github.com/repos/hyperledger/iroha/issues/30,https://api.github.com/repos/hyperledger/iroha/issues/comments/254477172,https://github.com/hyperledger/iroha/pull/30#issuecomment-254477172,MizukiSonoko,"- Running aeron
",2016-10-18 11:11:59,2016-10-18 11:11:59
https://api.github.com/repos/hyperledger/iroha/issues/25,https://api.github.com/repos/hyperledger/iroha/issues/comments/253472251,https://github.com/hyperledger/iroha/pull/25#issuecomment-253472251,MizukiSonoko,"とりあえずいらないかな？

```
getMy*Key()
```

は後ほど書き直す
",2016-10-13 10:09:54,2016-10-13 10:09:54
https://api.github.com/repos/hyperledger/iroha/issues/15,https://api.github.com/repos/hyperledger/iroha/issues/comments/249440862,https://github.com/hyperledger/iroha/issues/15#issuecomment-249440862,MizukiSonoko,"# Architecture (Draft)

### Directory tree

```
.
├── build (for cmake)
├── config
├── peer
├── core
│   ├── connection
│   ├── consensus
│   ├── crypto
│   ├── model
│   │   └── transactions
│   ├── infra
│   │   ├── connection
│   │   ├── crypto
│   │   ├── repository
│   │   ├── server
│   │   └── smart_contract
│   ├── repository
│   ├── server
│   ├── smart_contract
│   ├── util
│   ├── validation
│   └── vendor
├── doc
├── smart_contract
│   └── SampleCurrency_java
└── test
    ├── crypto
    └── smart_contract
```

#### config/

It contains config file. currently we use yaml, but JSON is good like as yaml.

#### peer/

It contains main.cpp

#### smart_contract/

It contains smart_contract logic what user defines.  
Currently use java virtual machine.

#### test/

There's few test for iroha. :bow:

#### core/

It contains main.

```
├── connection
├── consensus
├── crypto
├── domain
│   └── transactions
├── infra
│   ├── connection
│   ├── crypto
│   ├── repository
│   ├── server
│   └── smart_contract
│       └── jvm
├── repository
├── server
├── smart_contract
├── util
└── validation
```

I adopt a thought of **Domain Driven Development structure** as much as possible.

```
+--------------+
| web rest api |
|  (interface) |
+--------------+
      | 
+--------------+
|  controller  |--------+-----------------------------------------+
+--------------+        |                                         |
      |                 V                                         V
      |          +-------------+  +----------------+   +----------------------+
      |          | repository  |  | domain model   |   | service (interface)  |
      |          | (interface) |--|                |   |+---------++---------+|
      |          +-------------+  |+--------------+|   || crypto  ||validate ||
      |                 A         || transaction  ||   || base64  |+---------+|
      |                 |         |+--------------+|   || hash    |           |
      |                 |         || asset        ||   |+---------+           |
      |                 |         |+--------------+|   +----------------------+
      |                 |         |+--------------+|             
      |                 |         ||smart contract||              
+--------------+        |         |+--------------+|
|   consensus  |--------+         +----------------+
|   Algorithm  |
|              |   +------------+
|              |---|  messeging |
|              |   | (interface)|
|              |   +------------+
+--------------+

+----------------------------------------------------------------------------+
|infrastructure (Instance)                                                   |
|                                                                            |
|+------------++--------------++-------------++----------------++---------+  |
|| messaging  || web resr api || repository  || smart contract || crypto  |  |
||(use aeron )||  (use crow)  ||(use leveldb)|| (use java vm)  || ed25519 |  |
|+------------++--------------++-------------++----------------++---------+  |
+----------------------------------------------------------------------------+
```

#### core/connection (consensus layer)

It contains messaging function interface.

``` C
  void initialize_peer( std::unordered_map<std::string, std::string> config);

  bool sendAll(std::string message);
  bool send(std::string to,std::string message);
  bool receive(std::function<void(std::string from,std::string message)> callback);
```

#### core/consensus (consensus layer)

It contains consensus algorithm.

#### core/crypto (service)

It contains electronic signature, base64, hash function interface...

#### core/model (domain)

It contains asset model, transaction logic. independent of infra knowledge.

#### core/infra (infra layer)

It contains some source depend on vendor libraries.
If any source depends on vendor libraries, it should be in infra. 

##### filename

basically, filename is `""function""_with_""lib name"".cpp`

```
connection
 └── connection_with_aeron.cpp
repository
 └── world_state_repository_with_level_db.cpp
```

#### core/server (UI layer)

It contains server interface. currently

```
void server();
```

#### core/smart_contract (service)

It contains management virtual machine interface.

```
void initializeVM(std::string contractName);
void finishVM();    
void invokeFunction(
    std::string functionName,
      std::unordered_map<std::string, std::string> params);
```

#### core/util (other)

It contains logger, random, datetime, exception...
",2016-09-25 19:21:36,2016-10-08 10:13:14
https://api.github.com/repos/hyperledger/iroha/issues/11,https://api.github.com/repos/hyperledger/iroha/issues/comments/248698270,https://github.com/hyperledger/iroha/issues/11#issuecomment-248698270,MizukiSonoko,"```
SimpleFIPS202.c:(.text+0xf0): multiple definition of `SHA3_512'
../vendor/KeccakCodePackage/bin/.build/generic64/libkeccak.a/SimpleFIPS202.o:SimpleFIPS202.c:(.text+0xf0): first defined here
/tmp/ccc2Sffc.o:hash.cpp:(.text+0x0): first defined here /tmp/cceZogfg.o:
hash.cpp:(.text+0x26f): undefined reference to `SHA3_512(unsigned char*, unsigned char const*, unsigned long)'
collect2: error: ld returned 1 exit status
```

なぜ

```
multiple definition of `SHA3_512'
```

と

```
 undefined reference to `SHA3_512'
```

が同時に出てくるのか
",2016-09-21 18:20:37,2016-09-21 18:20:37
https://api.github.com/repos/hyperledger/iroha/issues/11,https://api.github.com/repos/hyperledger/iroha/issues/comments/249350075,https://github.com/hyperledger/iroha/issues/11#issuecomment-249350075,MizukiSonoko,"Very bad solution 😢 
Future work

CMakeLists.txt

```
# Bad solution (T A T)
execute_process(COMMAND ""cd ${PROJECT_SOURCE_DIR}/core/infra/crypto; make"")
```

and

Makefile

```
all: libhash.a

CC = g++
KECCAK_PATH = $(IROHA_HOME)/core/vendor/KeccakCodePackage

DEFINE  = -DKeccakP200_excluded -DKeccakP400_excluded -DKeccakP800_excluded

CFLAGS := $(CFLAGS) -std=c++0x
CFLAGS := $(CFLAGS) $(DEFINE)
CFLAGS := $(CFLAGS) -I$(KECCAK_PATH)/bin/generic64/libkeccak.a.headers

KeccakP-1600-opt64.o: $(KECCAK_PATH)/SnP/KeccakP-1600/Optimized64/KeccakP-1600-opt64.c
    $(CC) $(INCLUDES) $(CFLAGS) -c $< -o $@
OBJECTS := $(OBJECTS) KeccakP-1600-opt64.o

KeccakSponge.o: $(KECCAK_PATH)/Constructions/KeccakSponge.c
    $(CC) $(INCLUDES) $(CFLAGS) -c $< -o $@
OBJECTS := $(OBJECTS) KeccakSponge.o

SimpleFIPS202.o: $(KECCAK_PATH)/Modes/SimpleFIPS202.c
    $(CC) $(INCLUDES) $(CFLAGS) -c $< -o $@
OBJECTS := $(OBJECTS) SimpleFIPS202.o

libhash.a: $(OBJECTS)
    $(CC) $(CFLAGS) hash.cpp -c
    ar rcs libhash.a hash.o $(OBJECTS)

clean:
    rm -rf libhash.a *.o
```

But..., It's work.
",2016-09-24 07:12:19,2016-09-24 07:12:19
https://api.github.com/repos/hyperledger/iroha/issues/4,https://api.github.com/repos/hyperledger/iroha/issues/comments/327412903,https://github.com/hyperledger/iroha/issues/4#issuecomment-327412903,neewy,"If we will resolve an issue with MacOS build — we will surely do it 😄 
I added this to JIRA board: https://soramitsu.atlassian.net/browse/IR-371",2017-09-06 08:26:37,2017-09-06 08:26:45
https://api.github.com/repos/hyperledger/iroha/issues/3,https://api.github.com/repos/hyperledger/iroha/issues/comments/309393310,https://github.com/hyperledger/iroha/issues/3#issuecomment-309393310,amitkumarj441,"@takemiyamakoto I'm willing to take up this task.
Could you please tell me more about this issue( like where to add MSS)?",2017-06-19 09:53:46,2017-06-19 09:53:46
https://api.github.com/repos/hyperledger/iroha/issues/3,https://api.github.com/repos/hyperledger/iroha/issues/comments/309697802,https://github.com/hyperledger/iroha/issues/3#issuecomment-309697802,takemiyamakoto,Great! It should be implemented here: https://github.com/hyperledger/iroha/tree/develop/libs/crypto,2017-06-20 09:28:44,2017-06-20 09:28:44
https://api.github.com/repos/hyperledger/iroha/issues/3,https://api.github.com/repos/hyperledger/iroha/issues/comments/336628352,https://github.com/hyperledger/iroha/issues/3#issuecomment-336628352,Warchant,Is this still relevant issue?,2017-10-14 11:17:48,2017-10-14 11:17:48
https://api.github.com/repos/hyperledger/iroha/issues/3,https://api.github.com/repos/hyperledger/iroha/issues/comments/336628444,https://github.com/hyperledger/iroha/issues/3#issuecomment-336628444,amitkumarj441,"Thanks @Warchant for the reminder.
I think this feature is still pending, I'll start a PR for MSS based on Winternitz OTSS as suggested by @takemiyamakoto ",2017-10-14 11:19:36,2017-10-14 11:24:16
https://api.github.com/repos/hyperledger/iroha/issues/3,https://api.github.com/repos/hyperledger/iroha/issues/comments/356070289,https://github.com/hyperledger/iroha/issues/3#issuecomment-356070289,l4l,"Outdated, merkle tree is removed for now
New enhancement proposed in #774",2018-01-08 19:28:52,2018-01-08 19:28:52
https://api.github.com/repos/hyperledger/iroha/issues/2,https://api.github.com/repos/hyperledger/iroha/issues/comments/246127927,https://github.com/hyperledger/iroha/issues/2#issuecomment-246127927,MizukiSonoko,"### Makeできない

https://github.com/littlstar/b64.c

### Error起きる

open ssl
",2016-09-10 18:33:21,2016-09-10 18:33:21
https://api.github.com/repos/hyperledger/iroha/issues/2,https://api.github.com/repos/hyperledger/iroha/issues/comments/246178641,https://github.com/hyperledger/iroha/issues/2#issuecomment-246178641,tkyonezu,"とりあえずtest.cでincludeされてるok/ok.hが見あたらないので、ゴニョゴニョして（printf で書き換えて）走らせました。このtest.cに入っている内容では、encode/decodeともに成功していますね。
本当のテスト文字列でやってみましょう。
",2016-09-11 12:50:32,2016-09-11 12:50:32
https://api.github.com/repos/hyperledger/iroha/issues/2,https://api.github.com/repos/hyperledger/iroha/issues/comments/246181035,https://github.com/hyperledger/iroha/issues/2#issuecomment-246181035,tkyonezu,"まことさんが言うように、他のコードということでAppleのを使って試してみたんですけど。一応、エンコード/デコードもできているようです。ただし、引数が違うのでちょっと合わせる必要がありそうですけど。あと、ApacheのコードにAppleが手を入れているようで、Copyrightが長いんですけど、どうしましょう。
http://opensource.apple.com//source/QuickTimeStreamingServer/QuickTimeStreamingServer-452/CommonUtilitiesLib/base64.c

一応ですけど Apache のは、これでしょうか。
https://github.com/fobser/apache-httpd-openbsd/blob/master/src/ap/ap_base64.c
",2016-09-11 13:45:44,2016-09-11 14:12:45
https://api.github.com/repos/hyperledger/iroha/issues/2,https://api.github.com/repos/hyperledger/iroha/issues/comments/248234190,https://github.com/hyperledger/iroha/issues/2#issuecomment-248234190,MizukiSonoko,"### 解決

https://github.com/soramitsu/iroha/commit/df9f94612649584aef11817ed4de96b7f6a035b5

ed25519 のkaypair, signatureはunsigned charの配列なのに \0 が中に入る。
それによりstrlen, stringは全部正しく動かない
なので全てvector<unsinged char> に変更 👍 
",2016-09-20 08:12:40,2016-09-20 08:12:40
