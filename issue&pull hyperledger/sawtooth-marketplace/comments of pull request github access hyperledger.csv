pull request url html,pull request url,body,commit_id,create at,id,diff_hunk,position,update at,url,html url,user
https://github.com/hyperledger/sawtooth-marketplace/pull/77,https://github.com/hyperledger/sawtooth-marketplace/pull/77,"This leads to strange grammar for some offers. Would it be possible to just add the name of each asset over each dropdown, and have the name of the offer in the header?",ea8acedc2cd4174d5556cf2114c8bbfe754dd2e5,2017-12-27 15:55:22,158832345,"@@ -186,6 +186,8 @@ const AcceptOfferModal = {
       modals.header('Accept Offer', vnode.attrs.cancelFn),
       modals.body(
         m('.container', [
+          m('.text-muted.mb-2',
+            `Enter how much ${vnode.state.holding.asset} you would like`),",89,2017-12-27 15:55:22,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158832345,https://github.com/hyperledger/sawtooth-marketplace/pull/77#discussion_r158832345,dplumb94
https://github.com/hyperledger/sawtooth-marketplace/pull/77,https://github.com/hyperledger/sawtooth-marketplace/pull/77,Change this to `minicoin@minicoin.example`,ea8acedc2cd4174d5556cf2114c8bbfe754dd2e5,2017-12-27 21:43:38,158871561,"@@ -15,25 +15,25 @@
 
 ACCOUNTS:
 
-  - label: US Federal Reserve
-    description: The central banking system of the United States
-    email: fed@us.gov
+  - label: Minicoin Reserve
+    description: The sole issuing authoririty for Minicoins
+    email: minicoin@minicoin.net",9,2017-12-27 21:43:43,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158871561,https://github.com/hyperledger/sawtooth-marketplace/pull/77#discussion_r158871561,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/76,https://github.com/hyperledger/sawtooth-marketplace/pull/76,Good catch,0087ae40debc96d1e5615cc688c982deaaf72abe,2017-12-26 20:54:57,158739414,"@@ -68,7 +68,7 @@ const countSetter = state => inQuantity => {
   if (exchangeOnce) count = Math.min(count, 1)
 
   if (count * state.offer.targetQuantity > state.outMax) {
-    count = Math.floor(state.outMax / state.offer.sourceQuantity)
+    count = Math.floor(state.outMax / state.offer.targetQuantity)",5,2017-12-26 21:22:32,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158739414,https://github.com/hyperledger/sawtooth-marketplace/pull/76#discussion_r158739414,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/76,https://github.com/hyperledger/sawtooth-marketplace/pull/76,"This commit should be removed in favor of the fix implemented here:
https://github.com/hyperledger/sawtooth-marketplace/pull/77/commits/585cbe36cb5a5bc7e80c5753d66938b16bd6b8b1",0087ae40debc96d1e5615cc688c982deaaf72abe,2017-12-26 20:56:11,158739492,"@@ -138,13 +138,15 @@ const getAsset = (id, holdings) => {
 const AcceptOfferModal = {
   oninit (vnode) {
     vnode.state.holding = {}
-    vnode.state.acceptance = {}
+    vnode.state.acceptance = {'count': 1}",,2017-12-26 21:22:32,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158739492,https://github.com/hyperledger/sawtooth-marketplace/pull/76#discussion_r158739492,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/76,https://github.com/hyperledger/sawtooth-marketplace/pull/76,"Sounds good, ill delete the commit and rename the PR to reflect the bug fix",0087ae40debc96d1e5615cc688c982deaaf72abe,2017-12-26 21:20:46,158740893,"@@ -138,13 +138,15 @@ const getAsset = (id, holdings) => {
 const AcceptOfferModal = {
   oninit (vnode) {
     vnode.state.holding = {}
-    vnode.state.acceptance = {}
+    vnode.state.acceptance = {'count': 1}",,2017-12-26 21:22:32,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158740893,https://github.com/hyperledger/sawtooth-marketplace/pull/76#discussion_r158740893,dplumb94
https://github.com/hyperledger/sawtooth-marketplace/pull/74,https://github.com/hyperledger/sawtooth-marketplace/pull/74,This change fixes lint _and_ changes behavior.  Is that the correct course here?,ff22a334b75b53be546eab26d4ae42bf154bd8a0,2017-12-26 17:38:59,158725882,"@@ -141,5 +141,5 @@ def address_is(address):
 
     elif _contains(infix, OfferSpace):
         return AddressSpace.OFFER
-    else:
-        return AddressSpace.OTHER_FAMILY
+
+    raise ValueError",,2017-12-26 21:03:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158725882,https://github.com/hyperledger/sawtooth-marketplace/pull/74#discussion_r158725882,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/74,https://github.com/hyperledger/sawtooth-marketplace/pull/74,The raise ValueError shouldn't ever be hit and would be an exceptional case.,ff22a334b75b53be546eab26d4ae42bf154bd8a0,2017-12-26 17:42:29,158726157,"@@ -141,5 +141,5 @@ def address_is(address):
 
     elif _contains(infix, OfferSpace):
         return AddressSpace.OFFER
-    else:
-        return AddressSpace.OTHER_FAMILY
+
+    raise ValueError",,2017-12-26 21:03:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158726157,https://github.com/hyperledger/sawtooth-marketplace/pull/74#discussion_r158726157,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/74,https://github.com/hyperledger/sawtooth-marketplace/pull/74,I think I will change this one and make sure it doesn't change behavior.,ff22a334b75b53be546eab26d4ae42bf154bd8a0,2017-12-26 18:00:11,158727449,"@@ -141,5 +141,5 @@ def address_is(address):
 
     elif _contains(infix, OfferSpace):
         return AddressSpace.OFFER
-    else:
-        return AddressSpace.OTHER_FAMILY
+
+    raise ValueError",,2017-12-26 21:03:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158727449,https://github.com/hyperledger/sawtooth-marketplace/pull/74#discussion_r158727449,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/74,https://github.com/hyperledger/sawtooth-marketplace/pull/74,"The change is fine, just wanted to make sure there was awareness.",ff22a334b75b53be546eab26d4ae42bf154bd8a0,2017-12-26 18:25:27,158729485,"@@ -141,5 +141,5 @@ def address_is(address):
 
     elif _contains(infix, OfferSpace):
         return AddressSpace.OFFER
-    else:
-        return AddressSpace.OTHER_FAMILY
+
+    raise ValueError",,2017-12-26 21:03:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158729485,https://github.com/hyperledger/sawtooth-marketplace/pull/74#discussion_r158729485,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/74,https://github.com/hyperledger/sawtooth-marketplace/pull/74,This can be simplified to just a return statement,ff22a334b75b53be546eab26d4ae42bf154bd8a0,2017-12-26 21:54:47,158742841,"@@ -243,6 +253,19 @@ def _has_rule(rules, rule_type):
     return False
 
 
+def _accounts_limited_to(offer):
+    if _has_rule(offer.rules, rule_pb2.Rule.EXCHANGE_LIMITED_TO_ACCOUNTS):",29,2017-12-26 21:54:57,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158742841,https://github.com/hyperledger/sawtooth-marketplace/pull/74#discussion_r158742841,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/74,https://github.com/hyperledger/sawtooth-marketplace/pull/74,I'd guess this is the line causing the error.,ff22a334b75b53be546eab26d4ae42bf154bd8a0,2017-12-26 22:10:18,158743600,"@@ -243,6 +253,19 @@ def _has_rule(rules, rule_type):
     return False
 
 
+def _accounts_limited_to(offer):
+    if _has_rule(offer.rules, rule_pb2.Rule.EXCHANGE_LIMITED_TO_ACCOUNTS):
+        return True
+    return False
+
+
+def _accounts(offer):
+    return set.intersection(",35,2017-12-26 22:10:32,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158743600,https://github.com/hyperledger/sawtooth-marketplace/pull/74#discussion_r158743600,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/74,https://github.com/hyperledger/sawtooth-marketplace/pull/74,I was not able to reproduce. You may have been testing an old branch as this issue was fixed earlier in the day.,ff22a334b75b53be546eab26d4ae42bf154bd8a0,2017-12-27 16:16:19,158835796,"@@ -243,6 +253,19 @@ def _has_rule(rules, rule_type):
     return False
 
 
+def _accounts_limited_to(offer):
+    if _has_rule(offer.rules, rule_pb2.Rule.EXCHANGE_LIMITED_TO_ACCOUNTS):
+        return True
+    return False
+
+
+def _accounts(offer):
+    return set.intersection(",35,2017-12-27 16:16:19,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158835796,https://github.com/hyperledger/sawtooth-marketplace/pull/74#discussion_r158835796,dplumb94
https://github.com/hyperledger/sawtooth-marketplace/pull/72,https://github.com/hyperledger/sawtooth-marketplace/pull/72,And docker-compose,e626b3ea6b05a7fff7f975303fe26abe4e29aa65,2017-12-21 14:10:41,158285575,"@@ -5,84 +5,120 @@ Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
 other users on the blockchain. This repo contains a number of components which
 together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
 blockchain and provide a simple RESTful API to interact with it. The components
-in this repo will include:
+in this repo include:
 
-- a **rest api** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
+- a **rest api** which provides HTTP/JSON endpoints for querying blockchain data
+- a **transaction processor** which handles Marketplace transaction logic
 - a **ledger sync** which writes blockchain state changes to a local database
-- and an example **client** which uses Marketplace to create a loyalty point
-  program administered through a simple web app.
+- **SawbuckManager** and an example client which uses Marketplace to create a
+  loyalty point program that users can interact with through a simple web app
+- a **shell** for with all of the dependencies necessary to run support scripts
 
 ## Usage
 
-The easiest way to run these components is with
-[Docker](https://www.docker.com/what-docker). To start these components,
-first install Docker for your platform and clone this repo.
+This project utilizes [Docker](https://www.docker.com/what-docker) to simplify
+dependencies and deployment. To start the various Marketplace components,
+first install and run Docker for your platform, then clone this repo.",,2017-12-21 19:39:49,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158285575,https://github.com/hyperledger/sawtooth-marketplace/pull/72#discussion_r158285575,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/72,https://github.com/hyperledger/sawtooth-marketplace/pull/72,Does 'and run Docker' mean start the docker service? or test the installation?,e626b3ea6b05a7fff7f975303fe26abe4e29aa65,2017-12-21 14:11:24,158285723,"@@ -5,84 +5,120 @@ Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
 other users on the blockchain. This repo contains a number of components which
 together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
 blockchain and provide a simple RESTful API to interact with it. The components
-in this repo will include:
+in this repo include:
 
-- a **rest api** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
+- a **rest api** which provides HTTP/JSON endpoints for querying blockchain data
+- a **transaction processor** which handles Marketplace transaction logic
 - a **ledger sync** which writes blockchain state changes to a local database
-- and an example **client** which uses Marketplace to create a loyalty point
-  program administered through a simple web app.
+- **SawbuckManager** and an example client which uses Marketplace to create a
+  loyalty point program that users can interact with through a simple web app
+- a **shell** for with all of the dependencies necessary to run support scripts
 
 ## Usage
 
-The easiest way to run these components is with
-[Docker](https://www.docker.com/what-docker). To start these components,
-first install Docker for your platform and clone this repo.
+This project utilizes [Docker](https://www.docker.com/what-docker) to simplify
+dependencies and deployment. To start the various Marketplace components,
+first install and run Docker for your platform, then clone this repo.",,2017-12-21 19:39:49,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158285723,https://github.com/hyperledger/sawtooth-marketplace/pull/72#discussion_r158285723,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/72,https://github.com/hyperledger/sawtooth-marketplace/pull/72,"Some language that in order for changes to the source to take effect you must restart the the docker-compose session(?) and restart it, with a `ctrl-c` and then rerunning the `docker-compose up` command. ",e626b3ea6b05a7fff7f975303fe26abe4e29aa65,2017-12-21 14:22:37,158288328,"@@ -5,84 +5,120 @@ Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
 other users on the blockchain. This repo contains a number of components which
 together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
 blockchain and provide a simple RESTful API to interact with it. The components
-in this repo will include:
+in this repo include:
 
-- a **rest api** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
+- a **rest api** which provides HTTP/JSON endpoints for querying blockchain data
+- a **transaction processor** which handles Marketplace transaction logic
 - a **ledger sync** which writes blockchain state changes to a local database
-- and an example **client** which uses Marketplace to create a loyalty point
-  program administered through a simple web app.
+- **SawbuckManager** and an example client which uses Marketplace to create a
+  loyalty point program that users can interact with through a simple web app
+- a **shell** for with all of the dependencies necessary to run support scripts
 
 ## Usage
 
-The easiest way to run these components is with
-[Docker](https://www.docker.com/what-docker). To start these components,
-first install Docker for your platform and clone this repo.
+This project utilizes [Docker](https://www.docker.com/what-docker) to simplify
+dependencies and deployment. To start the various Marketplace components,
+first install and run Docker for your platform, then clone this repo.
 
-Then, generate Python versions of the Protobuf files for each component. From
-the sawtooth-marketplace directory:
+Before startup, the REST API requires a configuration file to be created at
+`rest_api/config.py` with sensitive security information and other settings.
+An example file is provided to illustrate what settings are available and how
+they should be used. To get started, you could simply copy this file into the
+appropriate location. Using `bash` from the root project directory, that would
+look like this:
 
 ```bash
-bin/dev-tools -p
+cp rest_api/config.py.example rest_api/config.py
 ```
 
-Next, build client files:
+Note that while this is fine for development purposes, the example secret keys
+provided are _not_ secure. These settings in particular should be changed
+before deployment.
+
+Now with your config file in place, Docker can take care of the rest. From the
+root project directory, simply run:
+
 ```bash
-bin/dev-tools -c
+docker-compose up
 ```
 
-Finally, use `docker-compose` to build and run each component:
+This will take awhile the first time it runs, but when complete will be running
+all required components in separate containers. Many of the components will be
+available through HTTP endpoints, including:
+- The Marketplace REST API will be at **http://localhost:8040**
+- The _SawbuckManager_ web app will be at **http://localhost:8041**.
+- RethinkDB's admin panel will be available at **http://localhost:8042**
+- Sawtooth's blockchain REST API will be available at **http://localhost:8043**
+
+In addition, you will likely want to run the `mktadm` CLI, which provides
+commands for interacting with _SawbuckManager_, like seeding initial data, or
+scheduling daily deals. This is simple using the provided shell container:
 
 ```bash
-docker-compose up
+docker exec -it market-shell bash
 ```
 
-This will create containers for all components with access to the local repo,
-and run them along with the necessary Sawtooth components. Once the process is
-complete a number of HTTP endpoints will be available:
-- The Marketplace REST API will be at **http://localhost:8000**
-- The SawbucksManager web app will be at **http://localhost:3000**.
-- Sawtooth's blockchain REST API will be available at **http://localhost:8008**
-- RethinkDB's admin panel will be available at **http://localhost:9090**
+This will open a bash terminal within the shell container, with the `bin/`
+directory in the PATH, and all dependencies installed. Now to seed
+_SawbuckManager_ with all the needed Offers and Assets run:
+
+```bash
+mktadm seed --url market-rest-api:8000 --data sawbuck_app/app_data.yaml
+```
 
-Note that some dependencies may need to be installed locally, including
-Sawtooth dependencies like the`sawtooth_sdk`, as well as some `pip3` modules.
+And if you would like to schedule daily deals using _cron_, run:
+
+```bash
+mktadm schedule --daily ""renew --url market-rest-api:8000 --data sawbuck_app/app_data.yaml""
+```
+
+Note that you _must_ leave this container running for it to submit new deals
+each day. If you want to simply exit the shell (this will not stop the
+container), you can simply run:
+
+```bash
+exit
+```
 ",,2017-12-21 19:39:49,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158288328,https://github.com/hyperledger/sawtooth-marketplace/pull/72#discussion_r158288328,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/72,https://github.com/hyperledger/sawtooth-marketplace/pull/72,"What conventions are contributors expected to follow prior to submitting pull request, `bin/market-integration-tests` from the host environment and `bin\market` lint?",e626b3ea6b05a7fff7f975303fe26abe4e29aa65,2017-12-21 14:37:29,158291858,"@@ -5,84 +5,120 @@ Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
 other users on the blockchain. This repo contains a number of components which
 together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
 blockchain and provide a simple RESTful API to interact with it. The components
-in this repo will include:
+in this repo include:
 
-- a **rest api** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
+- a **rest api** which provides HTTP/JSON endpoints for querying blockchain data
+- a **transaction processor** which handles Marketplace transaction logic
 - a **ledger sync** which writes blockchain state changes to a local database
-- and an example **client** which uses Marketplace to create a loyalty point
-  program administered through a simple web app.
+- **SawbuckManager** and an example client which uses Marketplace to create a
+  loyalty point program that users can interact with through a simple web app
+- a **shell** for with all of the dependencies necessary to run support scripts
 
 ## Usage
 
-The easiest way to run these components is with
-[Docker](https://www.docker.com/what-docker). To start these components,
-first install Docker for your platform and clone this repo.
+This project utilizes [Docker](https://www.docker.com/what-docker) to simplify
+dependencies and deployment. To start the various Marketplace components,
+first install and run Docker for your platform, then clone this repo.
 
-Then, generate Python versions of the Protobuf files for each component. From
-the sawtooth-marketplace directory:
+Before startup, the REST API requires a configuration file to be created at
+`rest_api/config.py` with sensitive security information and other settings.
+An example file is provided to illustrate what settings are available and how
+they should be used. To get started, you could simply copy this file into the
+appropriate location. Using `bash` from the root project directory, that would
+look like this:
 
 ```bash
-bin/dev-tools -p
+cp rest_api/config.py.example rest_api/config.py
 ```
 
-Next, build client files:
+Note that while this is fine for development purposes, the example secret keys
+provided are _not_ secure. These settings in particular should be changed
+before deployment.
+
+Now with your config file in place, Docker can take care of the rest. From the
+root project directory, simply run:
+
 ```bash
-bin/dev-tools -c
+docker-compose up
 ```
 
-Finally, use `docker-compose` to build and run each component:
+This will take awhile the first time it runs, but when complete will be running
+all required components in separate containers. Many of the components will be
+available through HTTP endpoints, including:
+- The Marketplace REST API will be at **http://localhost:8040**
+- The _SawbuckManager_ web app will be at **http://localhost:8041**.
+- RethinkDB's admin panel will be available at **http://localhost:8042**
+- Sawtooth's blockchain REST API will be available at **http://localhost:8043**
+
+In addition, you will likely want to run the `mktadm` CLI, which provides
+commands for interacting with _SawbuckManager_, like seeding initial data, or
+scheduling daily deals. This is simple using the provided shell container:
 
 ```bash
-docker-compose up
+docker exec -it market-shell bash
 ```
 
-This will create containers for all components with access to the local repo,
-and run them along with the necessary Sawtooth components. Once the process is
-complete a number of HTTP endpoints will be available:
-- The Marketplace REST API will be at **http://localhost:8000**
-- The SawbucksManager web app will be at **http://localhost:3000**.
-- Sawtooth's blockchain REST API will be available at **http://localhost:8008**
-- RethinkDB's admin panel will be available at **http://localhost:9090**
+This will open a bash terminal within the shell container, with the `bin/`
+directory in the PATH, and all dependencies installed. Now to seed
+_SawbuckManager_ with all the needed Offers and Assets run:
+
+```bash
+mktadm seed --url market-rest-api:8000 --data sawbuck_app/app_data.yaml
+```
 
-Note that some dependencies may need to be installed locally, including
-Sawtooth dependencies like the`sawtooth_sdk`, as well as some `pip3` modules.
+And if you would like to schedule daily deals using _cron_, run:
+
+```bash
+mktadm schedule --daily ""renew --url market-rest-api:8000 --data sawbuck_app/app_data.yaml""
+```
+
+Note that you _must_ leave this container running for it to submit new deals
+each day. If you want to simply exit the shell (this will not stop the
+container), you can simply run:
+
+```bash
+exit
+```
 
 ## Deployment
 
 Dockerfiles are also available to build images suitable for deployment, and are
-demarcated with a `-installed` tag. These will build the Protobufs and copy
-repo files at build time rather than referencing them locally. They can all be
-built individually, or built and run using `docker-compose`:
+demarcated with a `-installed` tag. These will include the source code in the
+image itself, rather than referencing what is on your local machine at runtime.
+This may be useful if you wish to distribute self-contained docker images which
+do not need the source code to run. They can be built individually using the
+`docker build` command, or all built and run together using `docker-compose`:
 
 ```bash
 docker-compose -f docker-compose-installed.yaml up
 ```
 
-Unlike the default Docker images, if the repo changes, those changes will not
-be reflected unless you rebuild them. To do that with `docker-compose`, use:
+Remember that unlike the default Docker images, if the repo changes, those
+changes will not be reflected unless the images are rebuilt. To do that with
+`docker-compose`, use:
 
 ```bash
 docker-compose -f docker-compose-installed.yaml up --build
 ```
 
-Note that this compose file only exposes the URL for the Marketplace REST API,
-not Sawtooth or RethinkDB.
+Note that this compose file only exposes the URL for _SawbuckManager_ and the
+Marketplace REST API, not Sawtooth or RethinkDB.
 
 ## Testing
 
-Integration tests can be run within docker containers using this command:
+Docker based integration tests are available. They can be built and run in one
+command:
 
 ```bash
-bin/run_integration_tests
+bin/market-integration-tests
 ```
 
 By default this command will run all tests in the `integration_tests/`
-directory. It is also possible to run a single set of tests by specifying a
+directory. It is also possible to run a single set of tests by specifying its
 sub-directory:
 
 ```bash
-bin/run_integration_tests rest_api
+bin/market-integration-tests rest_api",250,2017-12-21 19:39:49,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158291858,https://github.com/hyperledger/sawtooth-marketplace/pull/72#discussion_r158291858,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/72,https://github.com/hyperledger/sawtooth-marketplace/pull/72,"I am confused by this comment. `docker-compose` is a command which is specified later. In order for that command to work, the Docker application must be running, which is what this line is stipulating.",e626b3ea6b05a7fff7f975303fe26abe4e29aa65,2017-12-21 17:42:33,158337010,"@@ -5,84 +5,120 @@ Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
 other users on the blockchain. This repo contains a number of components which
 together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
 blockchain and provide a simple RESTful API to interact with it. The components
-in this repo will include:
+in this repo include:
 
-- a **rest api** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
+- a **rest api** which provides HTTP/JSON endpoints for querying blockchain data
+- a **transaction processor** which handles Marketplace transaction logic
 - a **ledger sync** which writes blockchain state changes to a local database
-- and an example **client** which uses Marketplace to create a loyalty point
-  program administered through a simple web app.
+- **SawbuckManager** and an example client which uses Marketplace to create a
+  loyalty point program that users can interact with through a simple web app
+- a **shell** for with all of the dependencies necessary to run support scripts
 
 ## Usage
 
-The easiest way to run these components is with
-[Docker](https://www.docker.com/what-docker). To start these components,
-first install Docker for your platform and clone this repo.
+This project utilizes [Docker](https://www.docker.com/what-docker) to simplify
+dependencies and deployment. To start the various Marketplace components,
+first install and run Docker for your platform, then clone this repo.",,2017-12-21 19:39:49,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158337010,https://github.com/hyperledger/sawtooth-marketplace/pull/72#discussion_r158337010,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/72,https://github.com/hyperledger/sawtooth-marketplace/pull/72,It means the Docker application/service. Whatever term we want to use for it. It is not referring to any particular commands.,e626b3ea6b05a7fff7f975303fe26abe4e29aa65,2017-12-21 17:43:27,158337179,"@@ -5,84 +5,120 @@ Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
 other users on the blockchain. This repo contains a number of components which
 together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
 blockchain and provide a simple RESTful API to interact with it. The components
-in this repo will include:
+in this repo include:
 
-- a **rest api** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
+- a **rest api** which provides HTTP/JSON endpoints for querying blockchain data
+- a **transaction processor** which handles Marketplace transaction logic
 - a **ledger sync** which writes blockchain state changes to a local database
-- and an example **client** which uses Marketplace to create a loyalty point
-  program administered through a simple web app.
+- **SawbuckManager** and an example client which uses Marketplace to create a
+  loyalty point program that users can interact with through a simple web app
+- a **shell** for with all of the dependencies necessary to run support scripts
 
 ## Usage
 
-The easiest way to run these components is with
-[Docker](https://www.docker.com/what-docker). To start these components,
-first install Docker for your platform and clone this repo.
+This project utilizes [Docker](https://www.docker.com/what-docker) to simplify
+dependencies and deployment. To start the various Marketplace components,
+first install and run Docker for your platform, then clone this repo.",,2017-12-21 19:39:49,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158337179,https://github.com/hyperledger/sawtooth-marketplace/pull/72#discussion_r158337179,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/72,https://github.com/hyperledger/sawtooth-marketplace/pull/72,"We don't have contribution guidelines, and the testing section of this README is not meant to be a substitute for that. If our goal is to solicit contributions, we should add some scope to do a proper CI process rather than relying on people to remember to run tests.",e626b3ea6b05a7fff7f975303fe26abe4e29aa65,2017-12-21 17:45:48,158337673,"@@ -5,84 +5,120 @@ Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
 other users on the blockchain. This repo contains a number of components which
 together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
 blockchain and provide a simple RESTful API to interact with it. The components
-in this repo will include:
+in this repo include:
 
-- a **rest api** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
+- a **rest api** which provides HTTP/JSON endpoints for querying blockchain data
+- a **transaction processor** which handles Marketplace transaction logic
 - a **ledger sync** which writes blockchain state changes to a local database
-- and an example **client** which uses Marketplace to create a loyalty point
-  program administered through a simple web app.
+- **SawbuckManager** and an example client which uses Marketplace to create a
+  loyalty point program that users can interact with through a simple web app
+- a **shell** for with all of the dependencies necessary to run support scripts
 
 ## Usage
 
-The easiest way to run these components is with
-[Docker](https://www.docker.com/what-docker). To start these components,
-first install Docker for your platform and clone this repo.
+This project utilizes [Docker](https://www.docker.com/what-docker) to simplify
+dependencies and deployment. To start the various Marketplace components,
+first install and run Docker for your platform, then clone this repo.
 
-Then, generate Python versions of the Protobuf files for each component. From
-the sawtooth-marketplace directory:
+Before startup, the REST API requires a configuration file to be created at
+`rest_api/config.py` with sensitive security information and other settings.
+An example file is provided to illustrate what settings are available and how
+they should be used. To get started, you could simply copy this file into the
+appropriate location. Using `bash` from the root project directory, that would
+look like this:
 
 ```bash
-bin/dev-tools -p
+cp rest_api/config.py.example rest_api/config.py
 ```
 
-Next, build client files:
+Note that while this is fine for development purposes, the example secret keys
+provided are _not_ secure. These settings in particular should be changed
+before deployment.
+
+Now with your config file in place, Docker can take care of the rest. From the
+root project directory, simply run:
+
 ```bash
-bin/dev-tools -c
+docker-compose up
 ```
 
-Finally, use `docker-compose` to build and run each component:
+This will take awhile the first time it runs, but when complete will be running
+all required components in separate containers. Many of the components will be
+available through HTTP endpoints, including:
+- The Marketplace REST API will be at **http://localhost:8040**
+- The _SawbuckManager_ web app will be at **http://localhost:8041**.
+- RethinkDB's admin panel will be available at **http://localhost:8042**
+- Sawtooth's blockchain REST API will be available at **http://localhost:8043**
+
+In addition, you will likely want to run the `mktadm` CLI, which provides
+commands for interacting with _SawbuckManager_, like seeding initial data, or
+scheduling daily deals. This is simple using the provided shell container:
 
 ```bash
-docker-compose up
+docker exec -it market-shell bash
 ```
 
-This will create containers for all components with access to the local repo,
-and run them along with the necessary Sawtooth components. Once the process is
-complete a number of HTTP endpoints will be available:
-- The Marketplace REST API will be at **http://localhost:8000**
-- The SawbucksManager web app will be at **http://localhost:3000**.
-- Sawtooth's blockchain REST API will be available at **http://localhost:8008**
-- RethinkDB's admin panel will be available at **http://localhost:9090**
+This will open a bash terminal within the shell container, with the `bin/`
+directory in the PATH, and all dependencies installed. Now to seed
+_SawbuckManager_ with all the needed Offers and Assets run:
+
+```bash
+mktadm seed --url market-rest-api:8000 --data sawbuck_app/app_data.yaml
+```
 
-Note that some dependencies may need to be installed locally, including
-Sawtooth dependencies like the`sawtooth_sdk`, as well as some `pip3` modules.
+And if you would like to schedule daily deals using _cron_, run:
+
+```bash
+mktadm schedule --daily ""renew --url market-rest-api:8000 --data sawbuck_app/app_data.yaml""
+```
+
+Note that you _must_ leave this container running for it to submit new deals
+each day. If you want to simply exit the shell (this will not stop the
+container), you can simply run:
+
+```bash
+exit
+```
 
 ## Deployment
 
 Dockerfiles are also available to build images suitable for deployment, and are
-demarcated with a `-installed` tag. These will build the Protobufs and copy
-repo files at build time rather than referencing them locally. They can all be
-built individually, or built and run using `docker-compose`:
+demarcated with a `-installed` tag. These will include the source code in the
+image itself, rather than referencing what is on your local machine at runtime.
+This may be useful if you wish to distribute self-contained docker images which
+do not need the source code to run. They can be built individually using the
+`docker build` command, or all built and run together using `docker-compose`:
 
 ```bash
 docker-compose -f docker-compose-installed.yaml up
 ```
 
-Unlike the default Docker images, if the repo changes, those changes will not
-be reflected unless you rebuild them. To do that with `docker-compose`, use:
+Remember that unlike the default Docker images, if the repo changes, those
+changes will not be reflected unless the images are rebuilt. To do that with
+`docker-compose`, use:
 
 ```bash
 docker-compose -f docker-compose-installed.yaml up --build
 ```
 
-Note that this compose file only exposes the URL for the Marketplace REST API,
-not Sawtooth or RethinkDB.
+Note that this compose file only exposes the URL for _SawbuckManager_ and the
+Marketplace REST API, not Sawtooth or RethinkDB.
 
 ## Testing
 
-Integration tests can be run within docker containers using this command:
+Docker based integration tests are available. They can be built and run in one
+command:
 
 ```bash
-bin/run_integration_tests
+bin/market-integration-tests
 ```
 
 By default this command will run all tests in the `integration_tests/`
-directory. It is also possible to run a single set of tests by specifying a
+directory. It is also possible to run a single set of tests by specifying its
 sub-directory:
 
 ```bash
-bin/run_integration_tests rest_api
+bin/market-integration-tests rest_api",250,2017-12-21 19:39:49,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158337673,https://github.com/hyperledger/sawtooth-marketplace/pull/72#discussion_r158337673,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/72,https://github.com/hyperledger/sawtooth-marketplace/pull/72,"Docker and docker compose are different components and install seperately on some platforms. These instructions require that both packages be installed, that should be called out. 
",e626b3ea6b05a7fff7f975303fe26abe4e29aa65,2017-12-21 19:08:59,158355117,"@@ -5,84 +5,120 @@ Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
 other users on the blockchain. This repo contains a number of components which
 together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
 blockchain and provide a simple RESTful API to interact with it. The components
-in this repo will include:
+in this repo include:
 
-- a **rest api** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
+- a **rest api** which provides HTTP/JSON endpoints for querying blockchain data
+- a **transaction processor** which handles Marketplace transaction logic
 - a **ledger sync** which writes blockchain state changes to a local database
-- and an example **client** which uses Marketplace to create a loyalty point
-  program administered through a simple web app.
+- **SawbuckManager** and an example client which uses Marketplace to create a
+  loyalty point program that users can interact with through a simple web app
+- a **shell** for with all of the dependencies necessary to run support scripts
 
 ## Usage
 
-The easiest way to run these components is with
-[Docker](https://www.docker.com/what-docker). To start these components,
-first install Docker for your platform and clone this repo.
+This project utilizes [Docker](https://www.docker.com/what-docker) to simplify
+dependencies and deployment. To start the various Marketplace components,
+first install and run Docker for your platform, then clone this repo.",,2017-12-21 19:39:49,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158355117,https://github.com/hyperledger/sawtooth-marketplace/pull/72#discussion_r158355117,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/72,https://github.com/hyperledger/sawtooth-marketplace/pull/72,"Suggestion: ""and make sure the Docker service is started on your platform""",e626b3ea6b05a7fff7f975303fe26abe4e29aa65,2017-12-21 19:10:22,158355398,"@@ -5,84 +5,120 @@ Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
 other users on the blockchain. This repo contains a number of components which
 together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
 blockchain and provide a simple RESTful API to interact with it. The components
-in this repo will include:
+in this repo include:
 
-- a **rest api** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
+- a **rest api** which provides HTTP/JSON endpoints for querying blockchain data
+- a **transaction processor** which handles Marketplace transaction logic
 - a **ledger sync** which writes blockchain state changes to a local database
-- and an example **client** which uses Marketplace to create a loyalty point
-  program administered through a simple web app.
+- **SawbuckManager** and an example client which uses Marketplace to create a
+  loyalty point program that users can interact with through a simple web app
+- a **shell** for with all of the dependencies necessary to run support scripts
 
 ## Usage
 
-The easiest way to run these components is with
-[Docker](https://www.docker.com/what-docker). To start these components,
-first install Docker for your platform and clone this repo.
+This project utilizes [Docker](https://www.docker.com/what-docker) to simplify
+dependencies and deployment. To start the various Marketplace components,
+first install and run Docker for your platform, then clone this repo.",,2017-12-21 19:39:49,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158355398,https://github.com/hyperledger/sawtooth-marketplace/pull/72#discussion_r158355398,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/68,https://github.com/hyperledger/sawtooth-marketplace/pull/68,This is unused,c7b576ef9c92b2729df0029ee7f17abe1ab1584f,2017-12-21 18:24:18,158345672,"@@ -93,87 +94,161 @@ def check_validity_of_offer(offer, accept_offer):
 
 class OfferAcceptance(object):
 
-    def __init__(self, offer, accept_offer, state):
+    def __init__(self, offer, accept_offer, header, state):
         self._offer = offer
         self._accept_offer = accept_offer
+        self._header = header",,2017-12-21 19:46:35,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158345672,https://github.com/hyperledger/sawtooth-marketplace/pull/68#discussion_r158345672,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/68,https://github.com/hyperledger/sawtooth-marketplace/pull/68,We could take it out here. It will be used in the EXCHANGE_ONCE and EXCHANGE_ONCE_PER_ACCOUNT PR. It is a pain though since it is my commit in @dplumb94's PR.,c7b576ef9c92b2729df0029ee7f17abe1ab1584f,2017-12-21 19:10:46,158355460,"@@ -93,87 +94,161 @@ def check_validity_of_offer(offer, accept_offer):
 
 class OfferAcceptance(object):
 
-    def __init__(self, offer, accept_offer, state):
+    def __init__(self, offer, accept_offer, header, state):
         self._offer = offer
         self._accept_offer = accept_offer
+        self._header = header",,2017-12-21 19:46:35,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158355460,https://github.com/hyperledger/sawtooth-marketplace/pull/68#discussion_r158355460,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/67,https://github.com/hyperledger/sawtooth-marketplace/pull/67,"Based on feedback from @boydjohnson, is there a condition where the holdings is null?",f92e6dece46e91e25e4c7b662b01078123848f7c,2017-12-20 18:46:06,158104406,"@@ -0,0 +1,206 @@
+/**
+ * Copyright 2017 Intel Corporation
+ *
+ * Licensed under the Apache License, Version 2.0 (the ""License"");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * ----------------------------------------------------------------------------
+ */
+'use strict'
+
+const m = require('mithril')
+const _ = require('lodash')
+
+const api = require('../services/api')
+const forms = require('../components/forms')
+const layout = require('../components/layout')
+const mkt = require('../components/marketplace')
+const modals = require('../components/modals')
+
+// Returns a label string, truncated if necessary
+const truncatedLabel = (value, defaultValue, max = 11) => {
+  const label = value || defaultValue
+  if (label.length <= max) return label
+  return `${label.slice(0, max - 3)}...`
+}
+
+// Returns a green check mark if visible
+const checkMark = (isVisible = true) => {
+  return m(`span.text-${isVisible ? 'success' : 'white'}`,
+           layout.icon('check'),
+           ' ')
+}
+
+// Small fields with placeholders rather than headers, for new holdings
+const holdingField = (placeholder, onValue) => {
+  return forms.field(onValue, { placeholder, required: false })
+}
+
+// Returns a function which sets id, label, and new for outgoing holdings
+const outSetter = (state, key = 'out') => (id, asset) => () => {
+  state.acceptance[key] = id
+  state[`${key}Label`] = asset
+}
+
+// Returns a function which sets id and label keys for the incoming holdings
+const inSetter = state => (id, asset, hasNew) => () => {
+  outSetter(state, 'in')(id, asset)()
+  state.hasNewHolding = hasNew
+}
+
+const countSetter = state => inQuantity => {
+  state.acceptance.count = Math.floor(inQuantity / state.offer.sourceQuantity)
+  state.inQuantity = state.acceptance.count * state.offer.sourceQuantity
+  state.outQuantity = state.acceptance.count * state.offer.targetQuantity
+}
+
+// Returns a function to map holding data to dropdown options
+const optionMapper = (state, key = 'in') => {
+  const setter = key !== 'out' ? inSetter(state) : outSetter(state)
+
+  return holding => ({
+    isSelected: () => state.acceptance[key] === holding.id,
+    text: `${holding.asset} (${holding.label || holding.id})`,
+    onclick: setter(holding.id, holding.asset)
+  })
+}
+
+// Returns a dropdown option which will trigger holding creation
+const newOption = state => ({
+  isSelected: () => !!state.hasNewHolding,
+  text: m('em', 'New Holding'),
+  onclick: inSetter(state)(null, 'New Holding', true)
+})
+
+// Adds a check mark to the appropriate holding option
+const checkMarkMapper = (state, key = 'in') => option => {
+  return _.assign({}, option, {
+    text: [
+      checkMark(option.isSelected()),
+      option.text
+    ]
+  })
+}
+
+// Returns true or false depending on whether or not the form is valid
+const isFormValid = state => !!state.acceptance.count
+
+// Returns a function which will submit a new offer, and holding if applicable
+const submitter = (state, onDone) => () => {
+  return Promise.resolve()
+    .then(() => {
+      if (state.hasNewHolding) {
+        const holdingKeys = ['label', 'description', 'asset']
+        return api.post('holdings', _.pick(state.holding, holdingKeys))
+      }
+    })
+    .then(holding => {
+      const acceptance = {
+        count: state.acceptance.count,
+        source: state.acceptance.out,
+        target: state.acceptance.in
+      }
+      if (holding) acceptance.target = holding.id
+      return api.patch(`offers/${state.offer.id}/accept`, acceptance)
+    })
+    .then(onDone)
+    .then(() => m.route.set('/'))
+}
+
+const getAsset = (id, holdings) => {
+  return holdings.find(holding => holding.id === id).asset
+}
+
+// A versatile modal allowing users to create new offers (and new holdings)
+const AcceptOfferModal = {
+  oninit (vnode) {
+    vnode.state.holding = {}
+    vnode.state.acceptance = {}
+    vnode.state.hasNewHolding = false
+
+    api.get(`offers/${vnode.attrs.offerId}`)
+      .then(offer => {
+        if (offer.error) return console.error(offer.error)
+        vnode.state.offer = offer
+
+        return Promise.all([
+          api.get(`accounts/${api.getPublicKey()}`),
+          api.get(`accounts/${offer.owners[0]}`)
+        ])
+      })
+      .then(([ user, owner ]) => {
+        const inAsset = getAsset(vnode.state.offer.source, owner.holdings)",154,2017-12-20 21:39:12,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158104406,https://github.com/hyperledger/sawtooth-marketplace/pull/67#discussion_r158104406,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/67,https://github.com/hyperledger/sawtooth-marketplace/pull/67,"Shouldn't be. Accounts should be sent back with `""holdings"": []` if they have no holdings.",f92e6dece46e91e25e4c7b662b01078123848f7c,2017-12-20 18:50:11,158105343,"@@ -0,0 +1,206 @@
+/**
+ * Copyright 2017 Intel Corporation
+ *
+ * Licensed under the Apache License, Version 2.0 (the ""License"");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * ----------------------------------------------------------------------------
+ */
+'use strict'
+
+const m = require('mithril')
+const _ = require('lodash')
+
+const api = require('../services/api')
+const forms = require('../components/forms')
+const layout = require('../components/layout')
+const mkt = require('../components/marketplace')
+const modals = require('../components/modals')
+
+// Returns a label string, truncated if necessary
+const truncatedLabel = (value, defaultValue, max = 11) => {
+  const label = value || defaultValue
+  if (label.length <= max) return label
+  return `${label.slice(0, max - 3)}...`
+}
+
+// Returns a green check mark if visible
+const checkMark = (isVisible = true) => {
+  return m(`span.text-${isVisible ? 'success' : 'white'}`,
+           layout.icon('check'),
+           ' ')
+}
+
+// Small fields with placeholders rather than headers, for new holdings
+const holdingField = (placeholder, onValue) => {
+  return forms.field(onValue, { placeholder, required: false })
+}
+
+// Returns a function which sets id, label, and new for outgoing holdings
+const outSetter = (state, key = 'out') => (id, asset) => () => {
+  state.acceptance[key] = id
+  state[`${key}Label`] = asset
+}
+
+// Returns a function which sets id and label keys for the incoming holdings
+const inSetter = state => (id, asset, hasNew) => () => {
+  outSetter(state, 'in')(id, asset)()
+  state.hasNewHolding = hasNew
+}
+
+const countSetter = state => inQuantity => {
+  state.acceptance.count = Math.floor(inQuantity / state.offer.sourceQuantity)
+  state.inQuantity = state.acceptance.count * state.offer.sourceQuantity
+  state.outQuantity = state.acceptance.count * state.offer.targetQuantity
+}
+
+// Returns a function to map holding data to dropdown options
+const optionMapper = (state, key = 'in') => {
+  const setter = key !== 'out' ? inSetter(state) : outSetter(state)
+
+  return holding => ({
+    isSelected: () => state.acceptance[key] === holding.id,
+    text: `${holding.asset} (${holding.label || holding.id})`,
+    onclick: setter(holding.id, holding.asset)
+  })
+}
+
+// Returns a dropdown option which will trigger holding creation
+const newOption = state => ({
+  isSelected: () => !!state.hasNewHolding,
+  text: m('em', 'New Holding'),
+  onclick: inSetter(state)(null, 'New Holding', true)
+})
+
+// Adds a check mark to the appropriate holding option
+const checkMarkMapper = (state, key = 'in') => option => {
+  return _.assign({}, option, {
+    text: [
+      checkMark(option.isSelected()),
+      option.text
+    ]
+  })
+}
+
+// Returns true or false depending on whether or not the form is valid
+const isFormValid = state => !!state.acceptance.count
+
+// Returns a function which will submit a new offer, and holding if applicable
+const submitter = (state, onDone) => () => {
+  return Promise.resolve()
+    .then(() => {
+      if (state.hasNewHolding) {
+        const holdingKeys = ['label', 'description', 'asset']
+        return api.post('holdings', _.pick(state.holding, holdingKeys))
+      }
+    })
+    .then(holding => {
+      const acceptance = {
+        count: state.acceptance.count,
+        source: state.acceptance.out,
+        target: state.acceptance.in
+      }
+      if (holding) acceptance.target = holding.id
+      return api.patch(`offers/${state.offer.id}/accept`, acceptance)
+    })
+    .then(onDone)
+    .then(() => m.route.set('/'))
+}
+
+const getAsset = (id, holdings) => {
+  return holdings.find(holding => holding.id === id).asset
+}
+
+// A versatile modal allowing users to create new offers (and new holdings)
+const AcceptOfferModal = {
+  oninit (vnode) {
+    vnode.state.holding = {}
+    vnode.state.acceptance = {}
+    vnode.state.hasNewHolding = false
+
+    api.get(`offers/${vnode.attrs.offerId}`)
+      .then(offer => {
+        if (offer.error) return console.error(offer.error)
+        vnode.state.offer = offer
+
+        return Promise.all([
+          api.get(`accounts/${api.getPublicKey()}`),
+          api.get(`accounts/${offer.owners[0]}`)
+        ])
+      })
+      .then(([ user, owner ]) => {
+        const inAsset = getAsset(vnode.state.offer.source, owner.holdings)",154,2017-12-20 21:39:12,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158105343,https://github.com/hyperledger/sawtooth-marketplace/pull/67#discussion_r158105343,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/65,https://github.com/hyperledger/sawtooth-marketplace/pull/65,"Is the `not isinstance(value, str)` necessary here? If the second part is True and value is a list or a tuple, then the first part is automatically also True.",68bc136418dd553197c65dfec3f5b9e6a29831ac,2017-12-19 22:21:08,157891742,"@@ -78,11 +78,21 @@ def proto_wrap_rules(rules):
         for rule in rules:
             try:
                 rule_proto = rule_pb2.Rule(type=rule['type'])
-                rule_protos.append(rule_proto)
             except IndexError:
                 raise ApiBadRequest(""Improper rule format"")
             except ValueError:
                 raise ApiBadRequest(""Invalid rule type"")
             except KeyError:
                 raise ApiBadRequest(""Rule type is required"")
+            if rule.get('value') is not None:
+                rule_proto.value = value_to_csv(rule['value'])
+        rule_protos.append(rule_proto)
     return rule_protos
+
+
+def value_to_csv(value):
+    if not isinstance(value, str) and isinstance(value, (list, tuple)):",,2017-12-21 00:26:52,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/157891742,https://github.com/hyperledger/sawtooth-marketplace/pull/65#discussion_r157891742,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/65,https://github.com/hyperledger/sawtooth-marketplace/pull/65,"Can these be simplified to `dict.get('some_key', None)` or the like?",68bc136418dd553197c65dfec3f5b9e6a29831ac,2017-12-20 14:43:07,158040866,"@@ -62,6 +62,9 @@
 
     await messaging.check_batch_status(request.app.config.VAL_CONN, batch_id)
 
+    if offer.get('rules') is not None:",,2017-12-21 00:26:52,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158040866,https://github.com/hyperledger/sawtooth-marketplace/pull/65#discussion_r158040866,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/65,https://github.com/hyperledger/sawtooth-marketplace/pull/65,"This should be:

```
type: array
items:
  type: string
  example: 02178c1bcdb25407394348f1ff5273adae287d8ea328184546837957e71c7de57a
```",68bc136418dd553197c65dfec3f5b9e6a29831ac,2017-12-20 22:44:17,158155826,"@@ -716,5 +716,5 @@ definitions:
         description: |
           An optional value that modifies the Rule
           (e.g. a list of Account ids for `EXCHANGE_LIMITED_TO_ACCOUNTS`)
-        type: string
-        example: 02178c1bcdb25407394348f1ff5273adae287d8ea328184546837957e71c7de57a
+        type: array
+        example: [""02178c1bcdb25407394348f1ff5273adae287d8ea328184546837957e71c7de57a""]",,2017-12-21 00:26:52,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158155826,https://github.com/hyperledger/sawtooth-marketplace/pull/65#discussion_r158155826,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/64,https://github.com/hyperledger/sawtooth-marketplace/pull/64,"You could catch the CalledProcessError that is raised here when `crontab -l` is run by a user that doesn't have a crontab set up, and set the crontab variable to the empty string.",fc08a45ce7e8a02140f9d14376cf62718c6f99b4,2017-12-19 19:01:22,157845533,"@@ -0,0 +1,94 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import re
+import logging
+import subprocess
+from os import path
+from marketplace_admin.services import api
+from marketplace_admin.services import data
+
+
+LOGGER = logging.getLogger(__name__)
+
+
+def init_schedule_parser(subparsers):
+    parser = subparsers.add_parser(
+        'schedule',
+        help='Uses cron to regularly call another mktadm command')
+    parser.add_argument(
+        '-H', '--hourly',
+        action='store_true',
+        help='Call the command every hour')
+    parser.add_argument(
+        '-D', '--daily',
+        action='store_true',
+        help='Call the command every day')
+    parser.add_argument(
+        '-W', '--weekly',
+        action='store_true',
+        help='Call the command once a week')
+    parser.add_argument(
+        '-M', '--monthly',
+        action='store_true',
+        help='Call the command once a month')
+    parser.add_argument(
+        '-r', '--remove',
+        action='store_true',
+        help='Removes the specified command from the schedule')
+    parser.add_argument(
+        'schedule_command',
+        type=str,
+        help='The mktadm command to schedule')
+
+    return parser
+
+
+def do_schedule(opts):
+    command = _get_command(opts)
+    crontab = subprocess.check_output(['crontab', '-l']).decode()",,2017-12-20 18:36:50,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/157845533,https://github.com/hyperledger/sawtooth-marketplace/pull/64#discussion_r157845533,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/64,https://github.com/hyperledger/sawtooth-marketplace/pull/64,"Not exactly the pythonic way, but interesting. Looks `functools.partial` would solve this",fc08a45ce7e8a02140f9d14376cf62718c6f99b4,2017-12-20 14:50:44,158042978,"@@ -0,0 +1,83 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from marketplace_admin.services import api
+from marketplace_admin.services import data
+
+
+LOGGER = logging.getLogger(__name__)
+
+
+def init_renew_parser(subparsers):
+    parser = subparsers.add_parser(
+        'renew',
+        help='Closes and reopens any ""renewable"" Offers',
+        parents=[api.get_parser(), data.get_parser()])
+    return parser
+
+
+def do_renew(opts):
+    LOGGER.info('Reading data: %s', opts.data)
+    renew_data = data.load(opts.data)
+
+    LOGGER.info('Submitting data to URL: %s', opts.url)
+    fetch = lambda path: api.get(opts.url, path)
+    submit = lambda p, b, a=None: api.post(opts.url, p, b, a)
+    update = lambda p, b, a: api.patch(opts.url, p, b, a)",,2017-12-20 18:36:50,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158042978,https://github.com/hyperledger/sawtooth-marketplace/pull/64#discussion_r158042978,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/64,https://github.com/hyperledger/sawtooth-marketplace/pull/64,Being pythonic is no longer something I am particularly concerned with. Switched to partial.,fc08a45ce7e8a02140f9d14376cf62718c6f99b4,2017-12-20 18:37:37,158102393,"@@ -0,0 +1,83 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from marketplace_admin.services import api
+from marketplace_admin.services import data
+
+
+LOGGER = logging.getLogger(__name__)
+
+
+def init_renew_parser(subparsers):
+    parser = subparsers.add_parser(
+        'renew',
+        help='Closes and reopens any ""renewable"" Offers',
+        parents=[api.get_parser(), data.get_parser()])
+    return parser
+
+
+def do_renew(opts):
+    LOGGER.info('Reading data: %s', opts.data)
+    renew_data = data.load(opts.data)
+
+    LOGGER.info('Submitting data to URL: %s', opts.url)
+    fetch = lambda path: api.get(opts.url, path)
+    submit = lambda p, b, a=None: api.post(opts.url, p, b, a)
+    update = lambda p, b, a: api.patch(opts.url, p, b, a)",,2017-12-20 18:37:37,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/158102393,https://github.com/hyperledger/sawtooth-marketplace/pull/64#discussion_r158102393,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/63,https://github.com/hyperledger/sawtooth-marketplace/pull/63,"Lint error:
`processor/marketplace_processor/offer/offer_closure.py:48:8: E713 test for membership should be 'not in'
    if not header.signer_public_key in offer.owners:
       ^
    Negative comparison should be done using ""not in"" and ""is not"".`",747f498fa3cefd037a32861952d1a83ba3dc9de7,2017-12-18 21:24:29,157604569,"@@ -0,0 +1,54 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+from marketplace_processor.protobuf import offer_pb2
+
+
+def handle_close_offer(close_offer, header, state):
+    """"""Handle Offer closure.
+
+    Args:
+        close_offer (CloseOffer): The transaction.
+        header (TransactionHeader): The TransactionHeader.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        - InvalidTransaction
+            - The Offer doesn't exist.
+            - The txn signer is not within the owners of the Offer.
+    """"""
+
+    offer = state.get_offer(close_offer.id)
+
+    if not offer:
+        raise InvalidTransaction(
+            ""Failed to close offer, the offer id {} ""
+            ""does not reference an Offer."".format(
+                close_offer.id))
+
+    if not offer.status == offer_pb2.Offer.OPEN:
+        raise InvalidTransaction(
+            ""Failed to close offer, the Offer {} is {} ""
+            ""not open"".format(offer.id, offer.status))
+
+    if not header.signer_public_key in offer.owners:",,2017-12-19 22:05:10,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/157604569,https://github.com/hyperledger/sawtooth-marketplace/pull/63#discussion_r157604569,dplumb94
https://github.com/hyperledger/sawtooth-marketplace/pull/60,https://github.com/hyperledger/sawtooth-marketplace/pull/60,"The API spec should be updated to match the way the protobuf now works, with a `count` of exchanges instead of a source quantity.",ebb29e2b747b16511b8d041c4adb09a2726b164b,2017-12-17 02:15:33,157356094,"@@ -183,6 +183,14 @@ def add_holding(txn):
             'targetQuantity': 1337
         })
 
+@hooks.before('/offers/{id}/accept > PATCH > 200 > application/json')
+def add_accept_info(txn):
+    patch_body(txn, {
+            'source': seeded_data['offer']['source'],
+            'sourceQuantity': seeded_data['offer']['sourceQuantity'],",,2017-12-18 22:13:46,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/157356094,https://github.com/hyperledger/sawtooth-marketplace/pull/60#discussion_r157356094,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/60,https://github.com/hyperledger/sawtooth-marketplace/pull/60,"The only reason this works is because the offer was set up with what happens to be same asset type for both the source and the target. Remember that these terms are relative to the resource they are attached to. An offer's source is where it will pay out from. An AcceptOffer's source is where _it_ will pay out from.

```
OFFER       ACCEPT OFFER
source  ->  target
target  <-  source
```

Part of the point of tests is to be a reference, so we should probably have two types of assets in four holdings under two accounts with everything lined up properly.

However, for now I would settle for now for just switching target and source around.",ebb29e2b747b16511b8d041c4adb09a2726b164b,2017-12-17 02:30:50,157356304,"@@ -183,6 +183,14 @@ def add_holding(txn):
             'targetQuantity': 1337
         })
 
+@hooks.before('/offers/{id}/accept > PATCH > 200 > application/json')
+def add_accept_info(txn):
+    patch_body(txn, {
+            'source': seeded_data['offer']['source'],
+            'sourceQuantity': seeded_data['offer']['sourceQuantity'],
+            'target': seeded_data['offer']['target']",,2017-12-18 22:13:46,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/157356304,https://github.com/hyperledger/sawtooth-marketplace/pull/60#discussion_r157356304,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/60,https://github.com/hyperledger/sawtooth-marketplace/pull/60,This should be `count` as well.,ebb29e2b747b16511b8d041c4adb09a2726b164b,2017-12-17 02:40:23,157356393,"@@ -88,14 +89,68 @@
 @authorized()
 async def accept_offer(request, offer_id):
     """"""Request for authorized Account to accept Offer""""""
-    raise ApiNotImplemented()
+    required_fields = ['sourceQuantity', 'target']",,2017-12-18 22:13:46,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/157356393,https://github.com/hyperledger/sawtooth-marketplace/pull/60#discussion_r157356393,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/54,https://github.com/hyperledger/sawtooth-marketplace/pull/54,"This probably doesn't matter, but do we want to seed two holdings so that source and target don't have to be the same id?",70742d0671d790d8e92e35c7ad7765485f405b31,2017-12-14 17:03:48,157003557,"@@ -132,6 +151,11 @@ def initialize_sample_resources(txns):
     seeded_data['auth_auth'] = auth_account_response['authorization']
     seeded_data['auth_account'] = auth_account_response['account']
 
+    # Create OFFER
+    OFFER['source'] = seeded_data['holding']['id']
+    OFFER['target'] = seeded_data['holding']['id']",,2017-12-14 19:25:13,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/157003557,https://github.com/hyperledger/sawtooth-marketplace/pull/54#discussion_r157003557,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/54,https://github.com/hyperledger/sawtooth-marketplace/pull/54,The query parameter filter should probably come after the block number filter. My assumption is the block number filter will typically reduce the size of the list more than the query parameters.,70742d0671d790d8e92e35c7ad7765485f405b31,2017-12-14 17:11:00,157005548,"@@ -18,6 +18,31 @@
 
 from api.errors import ApiBadRequest
 
+from db import blocks_query
+
+
+async def fetch_all_offer_resources(conn, query_params):
+    return await r.table('offers')\
+        .filter(query_params)\
+        .filter((blocks_query.latest_block_num() >= r.row['start_block_num'])",,2017-12-14 19:25:13,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/157005548,https://github.com/hyperledger/sawtooth-marketplace/pull/54#discussion_r157005548,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/51,https://github.com/hyperledger/sawtooth-marketplace/pull/51,"As per our discussion on Slack, the TP should also check:
- that the source_quantity is set
- that the target and target_quantity are both set or both unset",96abdb67d5ffc368c240a56aa2eb8176583f02e7,2017-12-12 23:50:50,156529923,"@@ -0,0 +1,67 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_offer_creation(create_offer, header, state):
+    """"""Handle Offer creation.
+
+    Args:
+        create_offer (CreateOffer): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already an Offer with the same identifier.
+            - The txn signer does not have an Account.
+            - The source is not a holding.
+            - THe target is not a holding.
+
+    """"""
+
+    if state.get_offer(identifier=create_offer.id):
+        raise InvalidTransaction(
+            ""Failed to create Offer, id {} already exists."".format(
+                create_offer.id))
+
+    if not state.get_account(public_key=header.signer_public_key):
+        raise InvalidTransaction(
+            ""Failed to create offer, transaction signer {} does ""
+            ""not have an Account."".format(header.signer_public_key))
+
+    if create_offer.source and \
+            not state.get_holding(identifier=create_offer.source):
+        raise InvalidTransaction(
+            ""Failed to create Offer, Holding id {} listed as source ""
+            ""does not refer to a Holding."".format(create_offer.source))
+
+    if create_offer.target and \",,2017-12-13 20:46:23,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156529923,https://github.com/hyperledger/sawtooth-marketplace/pull/51#discussion_r156529923,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/51,https://github.com/hyperledger/sawtooth-marketplace/pull/51,Sounds good.,96abdb67d5ffc368c240a56aa2eb8176583f02e7,2017-12-13 15:50:50,156697968,"@@ -0,0 +1,67 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_offer_creation(create_offer, header, state):
+    """"""Handle Offer creation.
+
+    Args:
+        create_offer (CreateOffer): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already an Offer with the same identifier.
+            - The txn signer does not have an Account.
+            - The source is not a holding.
+            - THe target is not a holding.
+
+    """"""
+
+    if state.get_offer(identifier=create_offer.id):
+        raise InvalidTransaction(
+            ""Failed to create Offer, id {} already exists."".format(
+                create_offer.id))
+
+    if not state.get_account(public_key=header.signer_public_key):
+        raise InvalidTransaction(
+            ""Failed to create offer, transaction signer {} does ""
+            ""not have an Account."".format(header.signer_public_key))
+
+    if create_offer.source and \
+            not state.get_holding(identifier=create_offer.source):
+        raise InvalidTransaction(
+            ""Failed to create Offer, Holding id {} listed as source ""
+            ""does not refer to a Holding."".format(create_offer.source))
+
+    if create_offer.target and \",,2017-12-13 20:46:23,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156697968,https://github.com/hyperledger/sawtooth-marketplace/pull/51#discussion_r156697968,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/50,https://github.com/hyperledger/sawtooth-marketplace/pull/50,"I don't think the Account is an output of the txn. Only the Offer will be created, and no holdings will be modified until the Offer is Accepted.",f92bbbe413651c039ce36782c2204f365a1c85bf,2017-12-12 19:59:03,156479166,"@@ -143,3 +143,58 @@ def create_holding(txn_key,
         outputs=outputs,
         txn_key=txn_key,
         batch_key=batch_key)
+
+
+def create_offer(txn_key, batch_key, identifier, label, description,
+                 source, source_quantity, target, target_quantity, rules):
+    """"""Create a CreateOffer txn and wrap it in a batch and list.
+
+    Args:
+        txn_key (sawtooth_signing.Signer): The Txn signer key pair.
+        batch_key (sawtooth_signing.Signer): The Batch signer key pair.
+        identifier (str): The identifier of the Offer.
+        label (str): The offer's label.
+        description (str): The description of the offer.
+        source (str): The id of a Holding from which resources will be drawn.
+        source_quantity (int): The quantity of resources to send.
+        target (str): The id of a Holding which will receive resources.
+        target_quantity (int): The quantity of resources to require.
+        rules (list): List of protobuf.rule_pb2.Rule
+
+
+    Returns:
+        tuple: List of Batch, signature tuple
+    """"""
+
+    inputs = [
+        addresser.make_account_address(
+            account_id=txn_key.get_public_key().as_hex()),
+        addresser.make_holding_address(holding_id=source),
+        addresser.make_holding_address(holding_id=target),
+        addresser.make_offer_address(offer_id=identifier)
+    ]
+
+    outputs = [addresser.make_offer_address(offer_id=identifier),
+               addresser.make_account_address(",,2017-12-13 17:16:56,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156479166,https://github.com/hyperledger/sawtooth-marketplace/pull/50#discussion_r156479166,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/50,https://github.com/hyperledger/sawtooth-marketplace/pull/50,"I'm not sure this correct given our recent Slack discussion. A source quantity of 0 is never valid, and a target quantity of 0 is only valid if target is also unspecified. I think it is probably best to leave these fields unset. In most cases, the validator will spit back an invalid transaction anyway. In the event that both target and targetQuantity are unset, leaving them unset in the response object seems sensible to me.",f92bbbe413651c039ce36782c2204f365a1c85bf,2017-12-12 23:43:26,156528646,"@@ -53,3 +85,21 @@
 async def close_offer(request, offer_id):
     """"""Request by owner of Offer to close it""""""
     raise ApiNotImplemented()
+
+
+def _create_offer_dict(body, public_key):
+    keys = ['label', 'description', 'source', 'rules',
+            'sourceQuantity', 'target', 'targetQuantity']
+
+    offer = {k: body[k] for k in keys if body.get(k) is not None}
+
+    if offer.get('sourceQuantity') is None:
+        offer['sourceQuantity'] = 0
+    if offer.get('targetQuantity') is None:
+        offer['targetQuantity'] = 0",,2017-12-13 17:16:56,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156528646,https://github.com/hyperledger/sawtooth-marketplace/pull/50#discussion_r156528646,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/50,https://github.com/hyperledger/sawtooth-marketplace/pull/50,"As per our recent Slack discussion, `target` and `targetQuantity` should be removed from the `required` field of `NewOfferBody`",f92bbbe413651c039ce36782c2204f365a1c85bf,2017-12-12 23:45:00,156528916,"@@ -696,6 +696,8 @@ definitions:
       A simple enum and with optional value, used to constrain and define the
       behavior of Assets or Offers
     type: object
+    required:
+      - type",30,2017-12-13 17:16:56,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156528916,https://github.com/hyperledger/sawtooth-marketplace/pull/50#discussion_r156528916,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/50,https://github.com/hyperledger/sawtooth-marketplace/pull/50,`target` and `targetQuantity` are not required.,f92bbbe413651c039ce36782c2204f365a1c85bf,2017-12-12 23:45:38,156529038,"@@ -26,7 +33,32 @@
 @authorized()
 async def create_offer(request):
     """"""Creates a new Offer in state""""""
-    raise ApiNotImplemented()
+    required_fields = ['source', 'sourceQuantity', 'target', 'targetQuantity']",,2017-12-13 17:16:56,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156529038,https://github.com/hyperledger/sawtooth-marketplace/pull/50#discussion_r156529038,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/42,https://github.com/hyperledger/sawtooth-marketplace/pull/42,Ha. This is awesome!,53a33be7a3d936e6780002386296599c74742e20,2017-12-11 16:30:35,156124924,"@@ -32,6 +36,28 @@
     'description': 'Susan\'s Account'
 }
 
+ASSET = {
+    'name': 'Suzebuck',
+    'description': 'The most valuable currency in the world!',
+    'rules': [
+        {
+            'type': 'OWNER_HOLDINGS_INFINITE'
+        },
+        {
+            'type': 'EXCHANGE_LIMITED_TO_ACCOUNTS',
+            'value': ('02178c1bcdb25407394348f1ff5273ada'
+                      'e287d8ea328184546837957e71c7de57a')
+        }
+    ]
+}
+
+HOLDING = {
+    ""label"": ""Suzebucket"",",35,2017-12-11 19:44:52,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156124924,https://github.com/hyperledger/sawtooth-marketplace/pull/42#discussion_r156124924,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/41,https://github.com/hyperledger/sawtooth-marketplace/pull/41,"It looks like command is required, so `subparsers.required = True` seems right.",ed3d1e4e5a48a632f48ebe7d34e809c655ce6c9e,2017-12-11 16:23:05,156122577,"@@ -0,0 +1,59 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import sys
+import argparse
+import logging
+
+from marketplace_admin import submit
+
+
+LOGGER = logging.getLogger(__name__)
+
+
+def parse_args(args):
+    parent_parser = argparse.ArgumentParser(add_help=False)
+    parent_parser.add_argument('-v', '--verbose',
+                        action='count',
+                        default=0,
+                        help='Increase level of output sent to stderr')
+
+    parser = argparse.ArgumentParser(parents=[parent_parser])
+    subparsers = parser.add_subparsers(title='subcommands', dest='command')",34,2017-12-11 19:50:31,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156122577,https://github.com/hyperledger/sawtooth-marketplace/pull/41#discussion_r156122577,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/41,https://github.com/hyperledger/sawtooth-marketplace/pull/41,Added,ed3d1e4e5a48a632f48ebe7d34e809c655ce6c9e,2017-12-11 19:50:38,156180568,"@@ -0,0 +1,59 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import sys
+import argparse
+import logging
+
+from marketplace_admin import submit
+
+
+LOGGER = logging.getLogger(__name__)
+
+
+def parse_args(args):
+    parent_parser = argparse.ArgumentParser(add_help=False)
+    parent_parser.add_argument('-v', '--verbose',
+                        action='count',
+                        default=0,
+                        help='Increase level of output sent to stderr')
+
+    parser = argparse.ArgumentParser(parents=[parent_parser])
+    subparsers = parser.add_subparsers(title='subcommands', dest='command')",34,2017-12-11 19:50:38,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156180568,https://github.com/hyperledger/sawtooth-marketplace/pull/41#discussion_r156180568,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/39,https://github.com/hyperledger/sawtooth-marketplace/pull/39,"Given that the name is a key, is it even possible to get into this situation where the default is returned?  If so, isn't that a development-time error?",26781e9c54046b967ba15d4ffd8473b8fe067050,2017-12-11 22:53:51,156224934,"@@ -0,0 +1,78 @@
+/**
+ * Copyright 2017 Intel Corporation
+ *
+ * Licensed under the Apache License, Version 2.0 (the ""License"");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * ----------------------------------------------------------------------------
+ */
+'use strict'
+
+const m = require('mithril')
+const _ = require('lodash')
+
+const api = require('../services/api')
+const layout = require('../components/layout')
+
+const ruleSection = ({ type, value }) => {
+  return m('.rule-section', [
+    m('span.text-success', layout.icon('check'), ' '),
+    type,
+    value ? m('span.text-muted', ' : ', value) : null
+  ])
+}
+
+const offerButton = (name, key = 'source') => {
+  const label = key === 'target' ? 'Request' : 'Offer'
+  const onclick = () => console.log(`Offering ${name} as ${key}...`)
+
+  return m('button.btn-lg.btn-outline-primary', { onclick }, label)
+}
+
+/**
+ * Displays information for a particular Account.
+ * The information can be edited if the user themself.
+ */
+const AssetDetailPage = {
+  oninit (vnode) {
+    const safeName = window.encodeURI(vnode.attrs.name)
+    api.get(`assets/${safeName}`)
+      .then(asset => {
+        vnode.state.asset = asset
+        if (asset.owners.length > 0) {
+          return api.get(`accounts/${asset.owners[0]}`)
+        }
+      })
+      .then(owner => { if (owner) vnode.state.owner = owner })
+  },
+
+  view (vnode) {
+    const rules = _.get(vnode.state, 'asset.rules', [])
+    const name = _.get(vnode.state, 'asset.name', '')",59,2017-12-11 23:14:45,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156224934,https://github.com/hyperledger/sawtooth-marketplace/pull/39#discussion_r156224934,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/39,https://github.com/hyperledger/sawtooth-marketplace/pull/39,"In this case the `_.get` is for before the API returns any results, preventing errors from `vnode.state.asset` being `undefined`. Once `asset` is defined, `.name` should be as well. If it were `''` it would probably indicate someone created an asset named that, which is not technically invalid.",26781e9c54046b967ba15d4ffd8473b8fe067050,2017-12-11 23:13:05,156229541,"@@ -0,0 +1,78 @@
+/**
+ * Copyright 2017 Intel Corporation
+ *
+ * Licensed under the Apache License, Version 2.0 (the ""License"");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * ----------------------------------------------------------------------------
+ */
+'use strict'
+
+const m = require('mithril')
+const _ = require('lodash')
+
+const api = require('../services/api')
+const layout = require('../components/layout')
+
+const ruleSection = ({ type, value }) => {
+  return m('.rule-section', [
+    m('span.text-success', layout.icon('check'), ' '),
+    type,
+    value ? m('span.text-muted', ' : ', value) : null
+  ])
+}
+
+const offerButton = (name, key = 'source') => {
+  const label = key === 'target' ? 'Request' : 'Offer'
+  const onclick = () => console.log(`Offering ${name} as ${key}...`)
+
+  return m('button.btn-lg.btn-outline-primary', { onclick }, label)
+}
+
+/**
+ * Displays information for a particular Account.
+ * The information can be edited if the user themself.
+ */
+const AssetDetailPage = {
+  oninit (vnode) {
+    const safeName = window.encodeURI(vnode.attrs.name)
+    api.get(`assets/${safeName}`)
+      .then(asset => {
+        vnode.state.asset = asset
+        if (asset.owners.length > 0) {
+          return api.get(`accounts/${asset.owners[0]}`)
+        }
+      })
+      .then(owner => { if (owner) vnode.state.owner = owner })
+  },
+
+  view (vnode) {
+    const rules = _.get(vnode.state, 'asset.rules', [])
+    const name = _.get(vnode.state, 'asset.name', '')",59,2017-12-11 23:14:45,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156229541,https://github.com/hyperledger/sawtooth-marketplace/pull/39#discussion_r156229541,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/38,https://github.com/hyperledger/sawtooth-marketplace/pull/38,"`name` might come in as a url encoded string (i.e. `'Gold%20Status'`). You'll need to decode that string before using it.

Add this import:
```
from urllib.parse import unquote
```

And then call:
```
decoded_name = unquote(name)
```

This would yield `'Gold Status'`, in the example above. You can then use `decoded_name` in place of `name`.",87a808d918cab67df240fa6c755e3f522cf941cb,2017-12-11 20:29:44,156190129,"@@ -53,13 +54,17 @@
 @ASSETS_BP.get('assets')
 async def get_all_assets(request):
     """"""Fetches complete details of all Assets in state""""""
-    raise ApiNotImplemented()
+    asset_resources = await assets_query.fetch_all_asset_resources(
+        request.app.config.DB_CONN)
+    return json(asset_resources)
 
 
 @ASSETS_BP.get('assets/<name>')
 async def get_asset(request, name):",30,2017-12-11 22:17:02,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156190129,https://github.com/hyperledger/sawtooth-marketplace/pull/38#discussion_r156190129,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/38,https://github.com/hyperledger/sawtooth-marketplace/pull/38,Seems to me this commit could be squashed with the original commit that added this code.,87a808d918cab67df240fa6c755e3f522cf941cb,2017-12-11 22:50:07,156224036,"@@ -62,8 +64,9 @@
 @ASSETS_BP.get('assets/<name>')
 async def get_asset(request, name):
     """"""Fetches the details of particular Asset in state""""""
+    decoded_name = unquote(name)",,2017-12-11 22:50:56,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156224036,https://github.com/hyperledger/sawtooth-marketplace/pull/38#discussion_r156224036,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/35,https://github.com/hyperledger/sawtooth-marketplace/pull/35,"Use
```
TYPE_UNSET = 0;
```
And then start `CREATE_ACCOUNT` at `1`.",653f3240bcc8085765cb3cd286e145d7a9ea0462,2017-12-08 18:08:56,155838462,"@@ -18,10 +18,22 @@ syntax = ""proto3"";
 import ""rule.proto"";
 
 message TransactionPayload {
-    CreateAccount create_account = 1;
-    CreateAsset create_asset = 2;
-    CreateHolding create_holding = 3;
-    CreateOffer create_offer = 4;
+
+    enum PayloadType {
+        CREATE_ACCOUNT = 0;",,2017-12-08 18:43:45,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155838462,https://github.com/hyperledger/sawtooth-marketplace/pull/35#discussion_r155838462,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/35,https://github.com/hyperledger/sawtooth-marketplace/pull/35,What is the need for TYPE_UNSET?,653f3240bcc8085765cb3cd286e145d7a9ea0462,2017-12-08 18:22:19,155841291,"@@ -18,10 +18,22 @@ syntax = ""proto3"";
 import ""rule.proto"";
 
 message TransactionPayload {
-    CreateAccount create_account = 1;
-    CreateAsset create_asset = 2;
-    CreateHolding create_holding = 3;
-    CreateOffer create_offer = 4;
+
+    enum PayloadType {
+        CREATE_ACCOUNT = 0;",,2017-12-08 18:43:45,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155841291,https://github.com/hyperledger/sawtooth-marketplace/pull/35#discussion_r155841291,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/34,https://github.com/hyperledger/sawtooth-marketplace/pull/34,Is asset name something that is URL safe?,320d9a11de776f7d9eddbe9c329d92fa30907de6,2017-12-08 17:15:46,155827882,"@@ -0,0 +1,72 @@
+/**
+ * Copyright 2017 Intel Corporation
+ *
+ * Licensed under the Apache License, Version 2.0 (the ""License"");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * ----------------------------------------------------------------------------
+ */
+'use strict'
+
+const m = require('mithril')
+const _ = require('lodash')
+
+const layout = require('../components/layout')
+const api = require('../services/api')
+
+const offerButton = (name, key = 'source') => {
+  const label = key === 'target' ? 'Request' : 'Offer'
+  const onclick = () => console.log(`Offering ${name} as ${key}...`)
+
+  return m('button.btn.btn-outline-primary.mr-3', { onclick }, label)
+}
+
+const assetRow = asset => {
+  return m('.row.mb-5', [
+    m('.col-md-8', [
+      layout.row(m('a.h5', {
+        href: `/assets/${asset.name}`,",,2017-12-11 20:15:16,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155827882,https://github.com/hyperledger/sawtooth-marketplace/pull/34#discussion_r155827882,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/34,https://github.com/hyperledger/sawtooth-marketplace/pull/34,"Typically yes. And for the purposes of this demo (and this UI), yes. Asset creation is not possible through the UI, and will only happen in an admin script. In theory someone could submit a new Asset directly to the API with the name `%&<^!"" screw)your?url..../`",320d9a11de776f7d9eddbe9c329d92fa30907de6,2017-12-08 17:24:03,155829479,"@@ -0,0 +1,72 @@
+/**
+ * Copyright 2017 Intel Corporation
+ *
+ * Licensed under the Apache License, Version 2.0 (the ""License"");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * ----------------------------------------------------------------------------
+ */
+'use strict'
+
+const m = require('mithril')
+const _ = require('lodash')
+
+const layout = require('../components/layout')
+const api = require('../services/api')
+
+const offerButton = (name, key = 'source') => {
+  const label = key === 'target' ? 'Request' : 'Offer'
+  const onclick = () => console.log(`Offering ${name} as ${key}...`)
+
+  return m('button.btn.btn-outline-primary.mr-3', { onclick }, label)
+}
+
+const assetRow = asset => {
+  return m('.row.mb-5', [
+    m('.col-md-8', [
+      layout.row(m('a.h5', {
+        href: `/assets/${asset.name}`,",,2017-12-11 20:15:16,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155829479,https://github.com/hyperledger/sawtooth-marketplace/pull/34#discussion_r155829479,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/34,https://github.com/hyperledger/sawtooth-marketplace/pull/34,"Looks like Mithril handles converting URL encoding on its own most places. It is necessary when constructing URLs though. Added it here, as well as in the Asset Detail page in #39.",320d9a11de776f7d9eddbe9c329d92fa30907de6,2017-12-11 20:16:00,156186843,"@@ -0,0 +1,72 @@
+/**
+ * Copyright 2017 Intel Corporation
+ *
+ * Licensed under the Apache License, Version 2.0 (the ""License"");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ * ----------------------------------------------------------------------------
+ */
+'use strict'
+
+const m = require('mithril')
+const _ = require('lodash')
+
+const layout = require('../components/layout')
+const api = require('../services/api')
+
+const offerButton = (name, key = 'source') => {
+  const label = key === 'target' ? 'Request' : 'Offer'
+  const onclick = () => console.log(`Offering ${name} as ${key}...`)
+
+  return m('button.btn.btn-outline-primary.mr-3', { onclick }, label)
+}
+
+const assetRow = asset => {
+  return m('.row.mb-5', [
+    m('.col-md-8', [
+      layout.row(m('a.h5', {
+        href: `/assets/${asset.name}`,",,2017-12-11 20:36:25,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/156186843,https://github.com/hyperledger/sawtooth-marketplace/pull/34#discussion_r156186843,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,is _not_ the transaction signer?,1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 17:49:56,155834623,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155834623,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155834623,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,the asset/_account_ does not exist?,1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 17:50:34,155834744,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.
+            - The asset/holding does not exist.",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155834744,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155834744,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,"This wording is confusing. Maybe `If the quantity is not 0, the Asset owner . . .`",1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 17:54:57,155835582,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.
+            - The asset/holding does not exist.
+            - The quantity is not 0 and the Asset owner doesn't match the
+              transaction signer public key.",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155835582,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155835582,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,"We should update the `CreateHolding` proto to remove account. That can just be pulled from the header. Adding it was an oversight, and removing it should simplify some of these checks.

Looks like there is also a typo in the proto. It should be changed from this:
```
message CreateHolding {
    string id = 1;
    string label = 2;
    string description = 3;
    string account = 4;
    string holding = 5;
    sint64 quantity = 6;
}
```
To this:
```
message CreateHolding {
    string id = 1;
    string label = 2;
    string description = 3;
    string asset = 4;
    sint64 quantity = 5;
}
```",1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 17:57:22,155836027,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.
+            - The asset/holding does not exist.
+            - The quantity is not 0 and the Asset owner doesn't match the
+              transaction signer public key.
+    """"""
+
+    if state.get_holding(identifier=create_holding.id):
+        raise InvalidTransaction(""Failed to create Holding, id {} already ""
+                                 ""exists."".format(create_holding.id))
+
+    account = state.get_account(public_key=create_holding.account)",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155836027,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155836027,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,"Quantity could be negative, and non-asset-owners should not be able to create that. The check should be `!= 0`.",1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 18:02:24,155837030,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.
+            - The asset/holding does not exist.
+            - The quantity is not 0 and the Asset owner doesn't match the
+              transaction signer public key.
+    """"""
+
+    if state.get_holding(identifier=create_holding.id):
+        raise InvalidTransaction(""Failed to create Holding, id {} already ""
+                                 ""exists."".format(create_holding.id))
+
+    account = state.get_account(public_key=create_holding.account)
+    if not account:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not exist."".format(
+                create_holding.account))
+
+    if account.public_key != header.signer_public_key:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not belong to ""
+            ""txn signer {}"".format(account.public_key,
+                                   header.signer_public_key))
+
+    asset = state.get_asset(name=create_holding.holding)
+    if not asset:
+        raise InvalidTransaction(
+            ""Failed to create Holding, asset {} does not ""
+            ""exist."".format(create_holding.holding))
+
+    if create_holding.quantity > 0 and \",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155837030,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155837030,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,See typo comment above.,1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 18:03:37,155837273,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.
+            - The asset/holding does not exist.
+            - The quantity is not 0 and the Asset owner doesn't match the
+              transaction signer public key.
+    """"""
+
+    if state.get_holding(identifier=create_holding.id):
+        raise InvalidTransaction(""Failed to create Holding, id {} already ""
+                                 ""exists."".format(create_holding.id))
+
+    account = state.get_account(public_key=create_holding.account)
+    if not account:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not exist."".format(
+                create_holding.account))
+
+    if account.public_key != header.signer_public_key:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not belong to ""
+            ""txn signer {}"".format(account.public_key,
+                                   header.signer_public_key))
+
+    asset = state.get_asset(name=create_holding.holding)",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155837273,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155837273,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,In CreateHolding it is called holding but in Holding it is asset.,1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 18:23:20,155841477,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.
+            - The asset/holding does not exist.",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155841477,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155841477,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,Sounds good.,1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 18:24:43,155841753,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.
+            - The asset/holding does not exist.
+            - The quantity is not 0 and the Asset owner doesn't match the
+              transaction signer public key.
+    """"""
+
+    if state.get_holding(identifier=create_holding.id):
+        raise InvalidTransaction(""Failed to create Holding, id {} already ""
+                                 ""exists."".format(create_holding.id))
+
+    account = state.get_account(public_key=create_holding.account)
+    if not account:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not exist."".format(
+                create_holding.account))
+
+    if account.public_key != header.signer_public_key:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not belong to ""
+            ""txn signer {}"".format(account.public_key,
+                                   header.signer_public_key))
+
+    asset = state.get_asset(name=create_holding.holding)
+    if not asset:
+        raise InvalidTransaction(
+            ""Failed to create Holding, asset {} does not ""
+            ""exist."".format(create_holding.holding))
+
+    if create_holding.quantity > 0 and \",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155841753,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155841753,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,"I will update the CreateHolding proto. It is assumed the the txn signer is creating the Holding for their account, right?",1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 18:28:28,155842536,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.
+            - The asset/holding does not exist.
+            - The quantity is not 0 and the Asset owner doesn't match the
+              transaction signer public key.
+    """"""
+
+    if state.get_holding(identifier=create_holding.id):
+        raise InvalidTransaction(""Failed to create Holding, id {} already ""
+                                 ""exists."".format(create_holding.id))
+
+    account = state.get_account(public_key=create_holding.account)
+    if not account:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not exist."".format(
+                create_holding.account))
+
+    if account.public_key != header.signer_public_key:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not belong to ""
+            ""txn signer {}"".format(account.public_key,
+                                   header.signer_public_key))
+
+    asset = state.get_asset(name=create_holding.holding)",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155842536,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155842536,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/33,https://github.com/hyperledger/sawtooth-marketplace/pull/33,Yes. They will always be creating holdings for their own account.,1a9a06b12caf3a02daa0709ff321044e8a62a242,2017-12-08 18:38:47,155844778,"@@ -0,0 +1,78 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_holding_creation(create_holding, header, state):
+    """"""
+
+    Args:
+        create_holding (CreateHolding): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - There is already a Holding with the same identifier.
+            - The account does not exist.
+            - The account holder is the Txn signer.
+            - The asset/holding does not exist.
+            - The quantity is not 0 and the Asset owner doesn't match the
+              transaction signer public key.
+    """"""
+
+    if state.get_holding(identifier=create_holding.id):
+        raise InvalidTransaction(""Failed to create Holding, id {} already ""
+                                 ""exists."".format(create_holding.id))
+
+    account = state.get_account(public_key=create_holding.account)
+    if not account:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not exist."".format(
+                create_holding.account))
+
+    if account.public_key != header.signer_public_key:
+        raise InvalidTransaction(
+            ""Failed to create Holding, account {} does not belong to ""
+            ""txn signer {}"".format(account.public_key,
+                                   header.signer_public_key))
+
+    asset = state.get_asset(name=create_holding.holding)",,2017-12-08 19:11:47,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155844778,https://github.com/hyperledger/sawtooth-marketplace/pull/33#discussion_r155844778,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/27,https://github.com/hyperledger/sawtooth-marketplace/pull/27,"We should consider email (and any other auth info) to be semi-private, and not send it back with `GET /accounts`. I will submit a PR to update the spec to clarify this.",0703e90e7fbb32acb227c1835ee57841e189c8c3,2017-12-07 17:23:27,155586885,"@@ -0,0 +1,63 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import rethinkdb as r
+from rethinkdb.errors import ReqlNonExistenceError
+
+from api.errors import ApiBadRequest
+
+from db import auth_query
+from db import blocks_query
+
+
+async def fetch_all_account_resources(conn):
+    return await r.table('accounts')\
+        .filter((blocks_query.latest_block_num() >= r.row['start_block_num'])
+                & (blocks_query.latest_block_num() < r.row['end_block_num']))\
+        .map(lambda account: account.merge(
+            {
+                'publicKey': account['public_key'],
+                'email': auth_query.fetch_email(account['public_key'])",,2017-12-07 19:32:12,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155586885,https://github.com/hyperledger/sawtooth-marketplace/pull/27#discussion_r155586885,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/27,https://github.com/hyperledger/sawtooth-marketplace/pull/27,Auth info should only get sent back with `GET /accounts/{key}` if the user is authorized and fetching info for themselves.,0703e90e7fbb32acb227c1835ee57841e189c8c3,2017-12-07 17:24:18,155587082,"@@ -0,0 +1,63 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import rethinkdb as r
+from rethinkdb.errors import ReqlNonExistenceError
+
+from api.errors import ApiBadRequest
+
+from db import auth_query
+from db import blocks_query
+
+
+async def fetch_all_account_resources(conn):
+    return await r.table('accounts')\
+        .filter((blocks_query.latest_block_num() >= r.row['start_block_num'])
+                & (blocks_query.latest_block_num() < r.row['end_block_num']))\
+        .map(lambda account: account.merge(
+            {
+                'publicKey': account['public_key'],
+                'email': auth_query.fetch_email(account['public_key'])
+            }))\
+        .map(lambda account: (account['label'] == """").branch(
+            account.without('label'), account))\
+        .map(lambda account: (account['description'] == """").branch(
+            account.without('description'), account))\
+        .without('public_key', 'delta_id',
+                 'start_block_num', 'end_block_num')\
+        .coerce_to('array').run(conn)
+
+
+async def fetch_account_resource(conn, key):
+    try:
+        return await r.table('accounts')\
+            .get_all(key, index='public_key')\
+            .max('start_block_num')\
+            .merge(
+                {
+                    'publicKey': r.row['public_key'],
+                    'email': auth_query.fetch_email(key)",,2017-12-07 19:32:12,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155587082,https://github.com/hyperledger/sawtooth-marketplace/pull/27#discussion_r155587082,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/26,https://github.com/hyperledger/sawtooth-marketplace/pull/26,This should probably be renamed to `batches` since it is no longer a BatchList.,06ee23de5eefc2cc663935b960083a2946b8ca6b,2017-12-06 20:02:08,155345429,"@@ -39,30 +41,32 @@
     common.validate_fields(required_fields, request.json)
     private_key = request.app.config.CONTEXT.new_random_private_key()
     signer = CryptoFactory(request.app.config.CONTEXT).new_signer(private_key)
-    batch_list, _ = transaction_creation.create_account(
-        signer,
-        request.app.config.SIGNER,
-        request.json.get('label'),
-        request.json.get('description'))
-    await messaging.send(
-        request.app.config.VAL_CONN,
-        request.app.config.TIMEOUT,
-        batch_list)
     public_key = signer.get_public_key().as_hex()
     encrypted_private_key = common.encrypt_private_key(
-        request.app.config.AES_KEY,
-        public_key,
-        private_key.as_hex())
+        request.app.config.AES_KEY, public_key, private_key.as_hex())
     hashed_password = bcrypt.hashpw(
-        bytes(request.json.get('password'), 'utf-8'),
-        bcrypt.gensalt())
+        bytes(request.json.get('password'), 'utf-8'), bcrypt.gensalt())
     auth_entry = {
         'public_key': public_key,
         'hashed_password': hashed_password,
         'encrypted_private_key': encrypted_private_key,
         'email': request.json.get('email')
     }
     await auth_query.create_auth_entry(request.app.config.DB_CONN, auth_entry)
+    batch_list, _ = transaction_creation.create_account(",,2017-12-06 22:06:36,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155345429,https://github.com/hyperledger/sawtooth-marketplace/pull/26#discussion_r155345429,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/24,https://github.com/hyperledger/sawtooth-marketplace/pull/24,"How about `""Unable to create asset, signing key has no Account: {}""`?

This wording feels unclear.",f8b69d5db6e302624f0db1b35a09b0df4a50a12e,2017-12-06 19:46:13,155341172,"@@ -0,0 +1,45 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+
+
+def handle_asset_creation(create_asset, header, state):
+    """"""Handles creating an Asset.
+
+    Args:
+        create_asset (CreateAsset): The transaction.
+        header (TransactionHeader): The header of the Transaction.
+        state (MarketplaceState): The wrapper around the context.
+
+    Raises:
+        InvalidTransaction
+            - The name already exists for an Asset.
+            - The txn signer has an account
+    """"""
+
+    if not state.get_account(public_key=header.signer_public_key):
+        raise InvalidTransaction(""Creating asset but have no account""",,2017-12-06 20:05:13,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155341172,https://github.com/hyperledger/sawtooth-marketplace/pull/24#discussion_r155341172,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/17,https://github.com/hyperledger/sawtooth-marketplace/pull/17,"This is not really a correct name. ""APIKey"" refers to something else. Auth token is more correct.

Also, you should underscore each word: `generate_auth_token` (not authtoken or apikey)",aa5c8350a60c9e828ba87d6968d458e220103e07,2017-12-05 21:09:12,155076324,"@@ -13,8 +13,34 @@
 # limitations under the License.
 # ------------------------------------------------------------------------------
 
+from Crypto.Cipher import AES
+
 from itsdangerous import TimedJSONWebSignatureSerializer as Serializer
 
+from api.errors import ApiBadRequest
+
+
+def validate_fields(required_fields, request_json):
+    try:
+        for field in required_fields:
+            if request_json.get(field) is None:
+                raise ApiBadRequest(
+                    ""Bad Request: {} is required"".format(field))
+    except ValueError:
+        raise ApiBadRequest(""Bad Request: Improper JSON format"")
+
+
+def encrypt_private_key(aes_key, public_key, private_key):
+    init_vector = bytes.fromhex(public_key[:32])
+    cipher = AES.new(bytes.fromhex(aes_key), AES.MODE_CBC, init_vector)
+    return cipher.encrypt(private_key)
+
+
+def generate_apikey(secret_key, public_key):",,2017-12-06 17:16:11,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155076324,https://github.com/hyperledger/sawtooth-marketplace/pull/17#discussion_r155076324,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/17,https://github.com/hyperledger/sawtooth-marketplace/pull/17,"We should write future transaction creation methods to return lists of Batches, not BatchLists. `transaction_creation.create_account` should also be refactored eventually, but not necessarily in this PR.",aa5c8350a60c9e828ba87d6968d458e220103e07,2017-12-05 21:23:30,155079730,"@@ -0,0 +1,46 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+from sawtooth_rest_api.protobuf import client_batch_submit_pb2
+from sawtooth_rest_api.protobuf import validator_pb2
+
+from api.errors import ApiBadRequest
+from api.errors import ApiInternalError
+
+
+async def send(conn, timeout, batch_list):
+    batch_request = client_batch_submit_pb2.ClientBatchSubmitRequest()
+    batch_request.batches.extend(list(batch_list.batches))",25,2017-12-06 17:16:11,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155079730,https://github.com/hyperledger/sawtooth-marketplace/pull/17#discussion_r155079730,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/17,https://github.com/hyperledger/sawtooth-marketplace/pull/17,`label` and `description` are not required fields,aa5c8350a60c9e828ba87d6968d458e220103e07,2017-12-05 21:52:01,155086869,"@@ -13,18 +13,59 @@
 # limitations under the License.
 # ------------------------------------------------------------------------------
 
+import bcrypt
+
 from sanic import Blueprint
+from sanic.response import json
+
+from sawtooth_signing import create_context
+from sawtooth_signing import CryptoFactory
 
+from api import common
+from api import messaging
 from api.errors import ApiNotImplemented
 
+from db import auth_query
+
+from marketplace_transaction import transaction_creation
+
 
 ACCOUNTS_BP = Blueprint('accounts')
 
 
 @ACCOUNTS_BP.post('accounts')
 async def create_account(request):
     """"""Creates a new Account and corresponding authorization token""""""
-    raise ApiNotImplemented()
+    required_fields = ['label', 'description', 'email', 'password']",,2017-12-06 17:16:11,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155086869,https://github.com/hyperledger/sawtooth-marketplace/pull/17#discussion_r155086869,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/17,https://github.com/hyperledger/sawtooth-marketplace/pull/17,This context should be created once for the application.,aa5c8350a60c9e828ba87d6968d458e220103e07,2017-12-06 11:17:58,155208592,"@@ -13,18 +13,59 @@
 # limitations under the License.
 # ------------------------------------------------------------------------------
 
+import bcrypt
+
 from sanic import Blueprint
+from sanic.response import json
+
+from sawtooth_signing import create_context
+from sawtooth_signing import CryptoFactory
 
+from api import common
+from api import messaging
 from api.errors import ApiNotImplemented
 
+from db import auth_query
+
+from marketplace_transaction import transaction_creation
+
 
 ACCOUNTS_BP = Blueprint('accounts')
 
 
 @ACCOUNTS_BP.post('accounts')
 async def create_account(request):
     """"""Creates a new Account and corresponding authorization token""""""
-    raise ApiNotImplemented()
+    required_fields = ['label', 'description', 'email', 'password']
+    common.validate_fields(required_fields, request.json)
+    context = create_context('secp256k1')",,2017-12-06 17:16:11,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/155208592,https://github.com/hyperledger/sawtooth-marketplace/pull/17#discussion_r155208592,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/14,https://github.com/hyperledger/sawtooth-marketplace/pull/14,You don't need to create this Key class.  You should use the sawtooth_signing.Signer class instead.  It encapsulates the context and the private key.  You can access the public key via `signer.get_public_key().as_hex()` for use in the headers.  See the updated [developer's guide](https://sawtooth.hyperledger.org/docs/core/releases/1.0.0rc3/_autogen/sdk_submit_tutorial_python.html) on this.,7e25835ac864616aa2c0f1aa9100a3b96e341093,2017-12-04 08:58:03,154587943,"@@ -0,0 +1,110 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import hashlib
+from uuid import uuid4
+
+from sawtooth_rest_api.protobuf import batch_pb2
+from sawtooth_rest_api.protobuf import transaction_pb2
+
+from sawtooth_signing import create_context
+
+from marketplace_addressing import addresser
+
+
+context = create_context('secp256k1')
+
+
+def wrap_payload_in_txn_batch(txn_key, payload, header, batch_key):
+    """"""Takes the serialized RBACPayload and creates a batch_list, batch
+    signature tuple.
+    Args:
+        txn_key (Key): The txn signer's public/private key pair.
+        payload (bytes): The serialized RBACPayload.
+        header (bytes): The serialized TransactionHeader.
+        batch_key (Key): The batch signer's public/private key pair.
+    Returns:
+        tuple
+            The zeroth element is a BatchList, and the first element is
+            the batch header_signature.
+    """"""
+
+    transaction = transaction_pb2.Transaction(
+        payload=payload,
+        header=header,
+        header_signature=context.sign(header, txn_key.private_key))
+
+    batch_header = batch_pb2.BatchHeader(
+        signer_public_key=batch_key.public_key,
+        transaction_ids=[transaction.header_signature]).SerializeToString()
+
+    batch = batch_pb2.Batch(
+        header=batch_header,
+        header_signature=context.sign(batch_header, batch_key.private_key),
+        transactions=[transaction])
+
+    batch_list = batch_pb2.BatchList(
+        batches=[batch])
+    return batch_list, batch.header_signature
+
+
+def make_header_and_batch(payload, inputs, outputs, txn_key, batch_key):
+
+    header = make_header(
+        inputs=inputs,
+        outputs=outputs,
+        payload_sha512=hashlib.sha512(
+            payload.SerializeToString()).hexdigest(),
+        signer_pubkey=txn_key.public_key,
+        batcher_pubkey=batch_key.public_key)
+
+    return wrap_payload_in_txn_batch(
+        txn_key=txn_key,
+        payload=payload.SerializeToString(),
+        header=header.SerializeToString(),
+        batch_key=batch_key)
+
+
+def make_header(inputs,
+                outputs,
+                payload_sha512,
+                signer_pubkey,
+                batcher_pubkey):
+    header = transaction_pb2.TransactionHeader(
+        inputs=inputs,
+        outputs=outputs,
+        batcher_public_key=batcher_pubkey,
+        dependencies=[],
+        family_name=addresser.FAMILY_NAME,
+        family_version='1.0',
+        nonce=uuid4().hex,
+        signer_public_key=signer_pubkey,
+        payload_sha512=payload_sha512)
+    return header
+
+
+class Key(object):",,2017-12-04 21:26:14,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154587943,https://github.com/hyperledger/sawtooth-marketplace/pull/14#discussion_r154587943,peterschwarz
https://github.com/hyperledger/sawtooth-marketplace/pull/14,https://github.com/hyperledger/sawtooth-marketplace/pull/14,Thanks @peterschwarz . I will look into that.,7e25835ac864616aa2c0f1aa9100a3b96e341093,2017-12-04 15:55:16,154688657,"@@ -0,0 +1,110 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import hashlib
+from uuid import uuid4
+
+from sawtooth_rest_api.protobuf import batch_pb2
+from sawtooth_rest_api.protobuf import transaction_pb2
+
+from sawtooth_signing import create_context
+
+from marketplace_addressing import addresser
+
+
+context = create_context('secp256k1')
+
+
+def wrap_payload_in_txn_batch(txn_key, payload, header, batch_key):
+    """"""Takes the serialized RBACPayload and creates a batch_list, batch
+    signature tuple.
+    Args:
+        txn_key (Key): The txn signer's public/private key pair.
+        payload (bytes): The serialized RBACPayload.
+        header (bytes): The serialized TransactionHeader.
+        batch_key (Key): The batch signer's public/private key pair.
+    Returns:
+        tuple
+            The zeroth element is a BatchList, and the first element is
+            the batch header_signature.
+    """"""
+
+    transaction = transaction_pb2.Transaction(
+        payload=payload,
+        header=header,
+        header_signature=context.sign(header, txn_key.private_key))
+
+    batch_header = batch_pb2.BatchHeader(
+        signer_public_key=batch_key.public_key,
+        transaction_ids=[transaction.header_signature]).SerializeToString()
+
+    batch = batch_pb2.Batch(
+        header=batch_header,
+        header_signature=context.sign(batch_header, batch_key.private_key),
+        transactions=[transaction])
+
+    batch_list = batch_pb2.BatchList(
+        batches=[batch])
+    return batch_list, batch.header_signature
+
+
+def make_header_and_batch(payload, inputs, outputs, txn_key, batch_key):
+
+    header = make_header(
+        inputs=inputs,
+        outputs=outputs,
+        payload_sha512=hashlib.sha512(
+            payload.SerializeToString()).hexdigest(),
+        signer_pubkey=txn_key.public_key,
+        batcher_pubkey=batch_key.public_key)
+
+    return wrap_payload_in_txn_batch(
+        txn_key=txn_key,
+        payload=payload.SerializeToString(),
+        header=header.SerializeToString(),
+        batch_key=batch_key)
+
+
+def make_header(inputs,
+                outputs,
+                payload_sha512,
+                signer_pubkey,
+                batcher_pubkey):
+    header = transaction_pb2.TransactionHeader(
+        inputs=inputs,
+        outputs=outputs,
+        batcher_public_key=batcher_pubkey,
+        dependencies=[],
+        family_name=addresser.FAMILY_NAME,
+        family_version='1.0',
+        nonce=uuid4().hex,
+        signer_public_key=signer_pubkey,
+        payload_sha512=payload_sha512)
+    return header
+
+
+class Key(object):",,2017-12-04 21:26:14,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154688657,https://github.com/hyperledger/sawtooth-marketplace/pull/14#discussion_r154688657,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/14,https://github.com/hyperledger/sawtooth-marketplace/pull/14,"FWIW, `\` after `&&` is unnecessary here.",7e25835ac864616aa2c0f1aa9100a3b96e341093,2017-12-04 19:25:13,154749745,"@@ -0,0 +1,65 @@
+# Copyright 2017 Intel Corpora# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  market-processor:
+    build:
+      context: ../..
+      dockerfile: ./processor/Dockerfile
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    volumes:
+      - '../..:/project/sawtooth-marketplace'
+    command: ./bin/marketplace-tp -vv -C tcp://validator:4004
+
+  settings-tp:
+    image: hyperledger/sawtooth-settings-tp:1.0
+    depends_on:
+      - validator
+    command: settings-tp -vv --connect tcp://validator:4004
+
+  validator:
+    image: hyperledger/sawtooth-validator:1.0
+    expose:
+      - 4004
+    command: |
+      bash -c ""
+        sawadm keygen && \",,2017-12-04 21:26:14,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154749745,https://github.com/hyperledger/sawtooth-marketplace/pull/14#discussion_r154749745,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/14,https://github.com/hyperledger/sawtooth-marketplace/pull/14,Is this file necessary? What does it do that the existing `bin/run_integration_tests` does not? I would rather add a feature or two to that script than add a bunch of cruft we don't need and don't understand to the repo.,7e25835ac864616aa2c0f1aa9100a3b96e341093,2017-12-04 19:28:50,154750729,"@@ -0,0 +1,400 @@
+#!/usr/bin/env python3",,2017-12-04 21:26:14,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154750729,https://github.com/hyperledger/sawtooth-marketplace/pull/14#discussion_r154750729,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/13,https://github.com/hyperledger/sawtooth-marketplace/pull/13,Can this be linted without adding it to the PYTHONPATH?,c1cdf05cfd8d38d417c9bc40d871c4a99be58c93,2017-12-04 19:14:39,154746676,"@@ -32,7 +32,13 @@ lint() {
 
 ret_val=0
 
+
 lint addressing/marketplace_addressing || ret_val=1
+lint marketplace_transaction/transaction_creation || ret_val=1",,2017-12-04 22:06:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154746676,https://github.com/hyperledger/sawtooth-marketplace/pull/13#discussion_r154746676,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/13,https://github.com/hyperledger/sawtooth-marketplace/pull/13,Let's name this `marketplace-rest-api`,c1cdf05cfd8d38d417c9bc40d871c4a99be58c93,2017-12-04 19:15:44,154747077,"@@ -44,7 +44,14 @@ services:
       - market-ledger-sync
       - rethink
       - validator
-    command: echo ""No REST API command set""
+    command: |
+      bash -c ""
+        sleep 1 &&
+        ./bin/rest-api \",,2017-12-04 22:06:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154747077,https://github.com/hyperledger/sawtooth-marketplace/pull/13#discussion_r154747077,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/13,https://github.com/hyperledger/sawtooth-marketplace/pull/13,The ideal way to handle this is write it so it gracefully attempts to reconnect if the db or validator are unavailable. I will see if I can add this to a later PR for both ledger-sync and the rest-api.,c1cdf05cfd8d38d417c9bc40d871c4a99be58c93,2017-12-04 19:18:05,154747701,"@@ -46,7 +46,11 @@ services:
       - market-ledger-sync
       - rethink
       - validator
-    command: echo ""No REST API command set""
+    command: |
+      bash -c ""
+        sleep 3 &&",7,2017-12-04 22:06:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154747701,https://github.com/hyperledger/sawtooth-marketplace/pull/13#discussion_r154747701,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/13,https://github.com/hyperledger/sawtooth-marketplace/pull/13,"I believe this is being removed from Boyd's PR. You may need to rebase, or also remove it here.",c1cdf05cfd8d38d417c9bc40d871c4a99be58c93,2017-12-04 19:19:01,154747946,"@@ -0,0 +1,29 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+
+class Key(object):",,2017-12-04 22:06:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154747946,https://github.com/hyperledger/sawtooth-marketplace/pull/13#discussion_r154747946,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/13,https://github.com/hyperledger/sawtooth-marketplace/pull/13,Add a space after `#` . . . it will bug me.,c1cdf05cfd8d38d417c9bc40d871c4a99be58c93,2017-12-04 19:21:30,154748630,"@@ -0,0 +1,23 @@
+# Networking settings
+HOST = 'localhost'
+PORT = 8000
+TIMEOUT = 500
+KEEP_ALIVE = False
+
+# Validator settings
+VALIDATOR_HOST = 'localhost'
+VALIDATOR_PORT = 4004
+
+# Database settings
+DB_HOST = 'localhost'
+DB_PORT = 28015
+DB_NAME = 'marketplace'
+
+# Runtime settings
+DEBUG = True
+
+# Secret keys
+# WARNING! These defaults are insecure, and should be changed for deployment
+SECRET_KEY = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'  # any string
+AES_KEY = 'ffffffffffffffffffffffffffffffff'  # 32 character hex string
+BATCHER_PRIVATE_KEY = '1111111111111111111111111111111111111111111111111111111111111111'  #64 character hex string",,2017-12-04 22:06:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154748630,https://github.com/hyperledger/sawtooth-marketplace/pull/13#discussion_r154748630,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/13,https://github.com/hyperledger/sawtooth-marketplace/pull/13,It looks like the bin is called `marketplace-rest-api`.,c1cdf05cfd8d38d417c9bc40d871c4a99be58c93,2017-12-04 20:46:23,154770313,"@@ -33,4 +34,4 @@ WORKDIR /project/sawtooth-marketplace
 
 EXPOSE 8000/tcp
 
-CMD [""echo \""No server command set\""""]
+CMD [""./bin/rest-api""]",,2017-12-04 22:06:51,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154770313,https://github.com/hyperledger/sawtooth-marketplace/pull/13#discussion_r154770313,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/11,https://github.com/hyperledger/sawtooth-marketplace/pull/11,Missing blank line,75ecc2d79bbb624a16903ebe745af93300aa7693,2017-12-01 20:15:23,154438842,"@@ -0,0 +1,74 @@
+#!/usr/bin/env python3
+
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import sys
+import argparse
+
+import rethinkdb as r
+from rethinkdb.errors import RqlRuntimeError
+
+
+def parse_args(args):
+    parser = argparse.ArgumentParser()
+    parser.add_argument('--host',
+                        help='The host for the database',
+                        default='localhost')
+    parser.add_argument('--port',
+                        help='The port for the database',
+                        default='28015')
+    parser.add_argument('--name',
+                        help='The name of the database',
+                        default='marketplace')
+    return parser.parse_args(args)
+
+
+def setup_db(host, port, name):
+    conn = r.connect(host=host, port=port)
+    print('Connection opened')
+    try:
+        print('Creating database:', name)
+        r.db_create(name).run(conn)
+
+        print('Creating table: accounts')
+        r.db(name).table_create('accounts').run(conn)
+        r.db(name).table('accounts').index_create('account_id').run(conn)
+
+        print('Creating table: assets')
+        r.db(name).table_create('assets').run(conn)
+        r.db(name).table('assets').index_create('asset_id').run(conn)
+
+        print('Creating table: auth')
+        r.db(name).table_create('auth', primary_key='public_key').run(conn)
+
+        print('Creating table: offers')
+        r.db(name).table_create('offers').run(conn)
+        r.db(name).table('offers').index_create('offer_id').run(conn)
+
+        print('Creating table: holdings')
+        r.db(name).table_create('holdings').run(conn)
+        r.db(name).table('holdings').index_create('holding_id').run(conn)
+    except RqlRuntimeError:
+        print('Database already exists:', name)
+
+    finally:
+        conn.close()
+        print('Connection closed')
+
+
+if __name__ == '__main__':
+    opts = parse_args(sys.argv[1:])
+    setup_db(opts.host, opts.port, opts.name)",75,2017-12-01 21:17:54,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154438842,https://github.com/hyperledger/sawtooth-marketplace/pull/11#discussion_r154438842,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/11,https://github.com/hyperledger/sawtooth-marketplace/pull/11,"Below this line, add email as a secondary index:
```
r.db(name).table('auth').index_create('email').run(conn)
```",75ecc2d79bbb624a16903ebe745af93300aa7693,2017-12-01 20:16:57,154439129,"@@ -0,0 +1,74 @@
+#!/usr/bin/env python3
+
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import sys
+import argparse
+
+import rethinkdb as r
+from rethinkdb.errors import RqlRuntimeError
+
+
+def parse_args(args):
+    parser = argparse.ArgumentParser()
+    parser.add_argument('--host',
+                        help='The host for the database',
+                        default='localhost')
+    parser.add_argument('--port',
+                        help='The port for the database',
+                        default='28015')
+    parser.add_argument('--name',
+                        help='The name of the database',
+                        default='marketplace')
+    return parser.parse_args(args)
+
+
+def setup_db(host, port, name):
+    conn = r.connect(host=host, port=port)
+    print('Connection opened')
+    try:
+        print('Creating database:', name)
+        r.db_create(name).run(conn)
+
+        print('Creating table: accounts')
+        r.db(name).table_create('accounts').run(conn)
+        r.db(name).table('accounts').index_create('account_id').run(conn)
+
+        print('Creating table: assets')
+        r.db(name).table_create('assets').run(conn)
+        r.db(name).table('assets').index_create('asset_id').run(conn)
+
+        print('Creating table: auth')
+        r.db(name).table_create('auth', primary_key='public_key').run(conn)",55,2017-12-01 21:17:54,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154439129,https://github.com/hyperledger/sawtooth-marketplace/pull/11#discussion_r154439129,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/11,https://github.com/hyperledger/sawtooth-marketplace/pull/11,fixed,75ecc2d79bbb624a16903ebe745af93300aa7693,2017-12-01 21:18:57,154450835,"@@ -0,0 +1,74 @@
+#!/usr/bin/env python3
+
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import sys
+import argparse
+
+import rethinkdb as r
+from rethinkdb.errors import RqlRuntimeError
+
+
+def parse_args(args):
+    parser = argparse.ArgumentParser()
+    parser.add_argument('--host',
+                        help='The host for the database',
+                        default='localhost')
+    parser.add_argument('--port',
+                        help='The port for the database',
+                        default='28015')
+    parser.add_argument('--name',
+                        help='The name of the database',
+                        default='marketplace')
+    return parser.parse_args(args)
+
+
+def setup_db(host, port, name):
+    conn = r.connect(host=host, port=port)
+    print('Connection opened')
+    try:
+        print('Creating database:', name)
+        r.db_create(name).run(conn)
+
+        print('Creating table: accounts')
+        r.db(name).table_create('accounts').run(conn)
+        r.db(name).table('accounts').index_create('account_id').run(conn)
+
+        print('Creating table: assets')
+        r.db(name).table_create('assets').run(conn)
+        r.db(name).table('assets').index_create('asset_id').run(conn)
+
+        print('Creating table: auth')
+        r.db(name).table_create('auth', primary_key='public_key').run(conn)
+
+        print('Creating table: offers')
+        r.db(name).table_create('offers').run(conn)
+        r.db(name).table('offers').index_create('offer_id').run(conn)
+
+        print('Creating table: holdings')
+        r.db(name).table_create('holdings').run(conn)
+        r.db(name).table('holdings').index_create('holding_id').run(conn)
+    except RqlRuntimeError:
+        print('Database already exists:', name)
+
+    finally:
+        conn.close()
+        print('Connection closed')
+
+
+if __name__ == '__main__':
+    opts = parse_args(sys.argv[1:])
+    setup_db(opts.host, opts.port, opts.name)",75,2017-12-01 21:18:57,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154450835,https://github.com/hyperledger/sawtooth-marketplace/pull/11#discussion_r154450835,dplumb94
https://github.com/hyperledger/sawtooth-marketplace/pull/11,https://github.com/hyperledger/sawtooth-marketplace/pull/11,added,75ecc2d79bbb624a16903ebe745af93300aa7693,2017-12-01 21:19:16,154450891,"@@ -0,0 +1,74 @@
+#!/usr/bin/env python3
+
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import sys
+import argparse
+
+import rethinkdb as r
+from rethinkdb.errors import RqlRuntimeError
+
+
+def parse_args(args):
+    parser = argparse.ArgumentParser()
+    parser.add_argument('--host',
+                        help='The host for the database',
+                        default='localhost')
+    parser.add_argument('--port',
+                        help='The port for the database',
+                        default='28015')
+    parser.add_argument('--name',
+                        help='The name of the database',
+                        default='marketplace')
+    return parser.parse_args(args)
+
+
+def setup_db(host, port, name):
+    conn = r.connect(host=host, port=port)
+    print('Connection opened')
+    try:
+        print('Creating database:', name)
+        r.db_create(name).run(conn)
+
+        print('Creating table: accounts')
+        r.db(name).table_create('accounts').run(conn)
+        r.db(name).table('accounts').index_create('account_id').run(conn)
+
+        print('Creating table: assets')
+        r.db(name).table_create('assets').run(conn)
+        r.db(name).table('assets').index_create('asset_id').run(conn)
+
+        print('Creating table: auth')
+        r.db(name).table_create('auth', primary_key='public_key').run(conn)",55,2017-12-01 21:19:16,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154450891,https://github.com/hyperledger/sawtooth-marketplace/pull/11#discussion_r154450891,dplumb94
https://github.com/hyperledger/sawtooth-marketplace/pull/3,https://github.com/hyperledger/sawtooth-marketplace/pull/3,`bin/build` seems like a silly name since it mostly doesn't build. `bin/dev-tools` maybe?,4dabb5f9fa5cf4e72bf8fe007c21ae1301c2261f,2017-11-30 21:52:45,154212454,"@@ -0,0 +1,93 @@
+#!/usr/bin/env bash",,2017-11-30 22:01:58,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154212454,https://github.com/hyperledger/sawtooth-marketplace/pull/3#discussion_r154212454,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/3,https://github.com/hyperledger/sawtooth-marketplace/pull/3,Missing blank line at the end,4dabb5f9fa5cf4e72bf8fe007c21ae1301c2261f,2017-11-30 21:53:17,154212580,"@@ -0,0 +1,37 @@
+#!/usr/bin/env bash
+
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+set -e
+
+TOP_DIR=$(cd $(dirname $(dirname $0)) && pwd)
+
+
+lint() {
+
+    files=""`find $1 -name \*.py | grep -v protobuf`""
+    echo ""$1""
+    pycodestyle $files || error=1
+    python3 -m pylint --rcfile .pylintrc $files || error=1
+    return $error
+
+}
+
+ret_val=0
+
+lint addressing/marketplace_addressing || ret_val=1
+
+exit $ret_val",37,2017-11-30 22:01:58,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154212580,https://github.com/hyperledger/sawtooth-marketplace/pull/3#discussion_r154212580,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/3,https://github.com/hyperledger/sawtooth-marketplace/pull/3,`dev-tools/Dockerfile`?,4dabb5f9fa5cf4e72bf8fe007c21ae1301c2261f,2017-11-30 21:53:55,154212714,"@@ -0,0 +1,26 @@
+# Copyright 2017 Intel Corporation",,2017-11-30 22:01:58,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154212714,https://github.com/hyperledger/sawtooth-marketplace/pull/3#discussion_r154212714,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,duplicate line,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 13:58:12,154080901,"@@ -0,0 +1,36 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb http://repo.sawtooth.me/ubuntu/ci xenial universe"" >> /etc/apt/sources.list && \
+    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD && \
+    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD && \",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154080901,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154080901,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,isn't `sleep infinity` a better choice?,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 14:00:50,154081618,"@@ -0,0 +1,120 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-dev
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    ports:
+      - '8000:8000'
+    depends_on:
+      - ledger-sync
+      - rethink
+      - validator
+    command: echo ""No server command set""
+
+  ledger-sync:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-ledger-sync-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    depends_on:
+      - rethink
+      - validator
+    command: echo ""No ledger sync command set""
+
+  rethink:
+    image: rethinkdb:2.3
+    ports:
+      - '9090:8080'
+    expose:
+      - 8080
+      - 28015
+
+  rest-api:
+    image: hyperledger/sawtooth-rest-api:0.8
+    container_name: sawtooth-rest-api
+    expose:
+      - 8008
+    ports:
+      - '8008:8008'
+    depends_on:
+      - validator
+    entrypoint: sawtooth-rest-api --connect tcp://validator:4004 --bind rest-api:8008 -vv
+
+  shell:
+    image: hyperledger/sawtooth-shell:0.8
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    working_dir: /project/sawtooth-marketplace
+    container_name: sawtooth-shell
+    depends_on:
+      - rest-api
+    entrypoint: |
+      bash -c ""
+        sawtooth keygen &&
+        tail -f /dev/null",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154081618,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154081618,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Not clear what the project is; is ledger_synch the project or sawtooth-marketplace?,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 14:05:42,154082797,"@@ -0,0 +1,35 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD"" && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \
+    apt-get update && \
+    apt-get install -y --allow-unauthenticated -q python3-grpcio-tools=1.1.3-1 \
+        python3-pip \
+        python3-sawtooth-sdk
+
+RUN pip3 install rethinkdb
+
+WORKDIR /project/sawtooth-marketplace
+
+# Note that the context must be set to the project's root directory",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154082797,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154082797,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,"The /dev/null approach is more portable and is a very common approach.  Not sure if sleep infinity works in busybox-based images, for example.",5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:02:08,154099394,"@@ -0,0 +1,120 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-dev
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    ports:
+      - '8000:8000'
+    depends_on:
+      - ledger-sync
+      - rethink
+      - validator
+    command: echo ""No server command set""
+
+  ledger-sync:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-ledger-sync-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    depends_on:
+      - rethink
+      - validator
+    command: echo ""No ledger sync command set""
+
+  rethink:
+    image: rethinkdb:2.3
+    ports:
+      - '9090:8080'
+    expose:
+      - 8080
+      - 28015
+
+  rest-api:
+    image: hyperledger/sawtooth-rest-api:0.8
+    container_name: sawtooth-rest-api
+    expose:
+      - 8008
+    ports:
+      - '8008:8008'
+    depends_on:
+      - validator
+    entrypoint: sawtooth-rest-api --connect tcp://validator:4004 --bind rest-api:8008 -vv
+
+  shell:
+    image: hyperledger/sawtooth-shell:0.8
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    working_dir: /project/sawtooth-marketplace
+    container_name: sawtooth-shell
+    depends_on:
+      - rest-api
+    entrypoint: |
+      bash -c ""
+        sawtooth keygen &&
+        tail -f /dev/null",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154099394,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154099394,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Default compose and docker files should be for development.  Compose/docker files for installing should be geared toward generating images suitable for publishing in dockerhub.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:03:29,154099937,"@@ -0,0 +1,120 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile-dev",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154099937,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154099937,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,"All ports exposed to the host, and all docker container names generated should be distinct and separate from any other docker compose file we use, so it can be used in parallel.  For example, it should be easy to run supply chain and mktplace at the same time without any user modification to the docker compose file.",5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:05:19,154100481,"@@ -0,0 +1,120 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-dev
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    ports:",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154100481,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154100481,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Remove my_key here and on the line below. The defaults should be used.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:06:10,154100733,"@@ -0,0 +1,120 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-dev
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    ports:
+      - '8000:8000'
+    depends_on:
+      - ledger-sync
+      - rethink
+      - validator
+    command: echo ""No server command set""
+
+  ledger-sync:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-ledger-sync-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    depends_on:
+      - rethink
+      - validator
+    command: echo ""No ledger sync command set""
+
+  rethink:
+    image: rethinkdb:2.3
+    ports:
+      - '9090:8080'
+    expose:
+      - 8080
+      - 28015
+
+  rest-api:
+    image: hyperledger/sawtooth-rest-api:0.8
+    container_name: sawtooth-rest-api
+    expose:
+      - 8008
+    ports:
+      - '8008:8008'
+    depends_on:
+      - validator
+    entrypoint: sawtooth-rest-api --connect tcp://validator:4004 --bind rest-api:8008 -vv
+
+  shell:
+    image: hyperledger/sawtooth-shell:0.8
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    working_dir: /project/sawtooth-marketplace
+    container_name: sawtooth-shell
+    depends_on:
+      - rest-api
+    entrypoint: |
+      bash -c ""
+        sawtooth keygen &&
+        tail -f /dev/null
+      ""
+  settings-tp:
+    image: hyperledger/sawtooth-settings-tp:0.8
+    depends_on:
+      - validator
+    command: settings-tp -vv tcp://validator:4004
+
+  validator:
+    image: hyperledger/sawtooth-validator:0.8
+    expose:
+      - 4004
+    command: |
+      bash -c ""
+        sawtooth admin keygen &&
+        sawtooth keygen my_key &&",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154100733,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154100733,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Use the default scheduler.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:06:26,154100822,"@@ -0,0 +1,120 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-dev
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    ports:
+      - '8000:8000'
+    depends_on:
+      - ledger-sync
+      - rethink
+      - validator
+    command: echo ""No server command set""
+
+  ledger-sync:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-ledger-sync-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    depends_on:
+      - rethink
+      - validator
+    command: echo ""No ledger sync command set""
+
+  rethink:
+    image: rethinkdb:2.3
+    ports:
+      - '9090:8080'
+    expose:
+      - 8080
+      - 28015
+
+  rest-api:
+    image: hyperledger/sawtooth-rest-api:0.8
+    container_name: sawtooth-rest-api
+    expose:
+      - 8008
+    ports:
+      - '8008:8008'
+    depends_on:
+      - validator
+    entrypoint: sawtooth-rest-api --connect tcp://validator:4004 --bind rest-api:8008 -vv
+
+  shell:
+    image: hyperledger/sawtooth-shell:0.8
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    working_dir: /project/sawtooth-marketplace
+    container_name: sawtooth-shell
+    depends_on:
+      - rest-api
+    entrypoint: |
+      bash -c ""
+        sawtooth keygen &&
+        tail -f /dev/null
+      ""
+  settings-tp:
+    image: hyperledger/sawtooth-settings-tp:0.8
+    depends_on:
+      - validator
+    command: settings-tp -vv tcp://validator:4004
+
+  validator:
+    image: hyperledger/sawtooth-validator:0.8
+    expose:
+      - 4004
+    command: |
+      bash -c ""
+        sawtooth admin keygen &&
+        sawtooth keygen my_key &&
+        sawtooth config genesis -k /root/.sawtooth/keys/my_key.priv &&
+        sawtooth admin genesis config-genesis.batch &&
+        sawtooth-validator -vv \
+          --endpoint tcp://validator:8800 \
+          --bind component:tcp://eth0:4004 \
+          --bind network:tcp://eth0:8800 \
+          --scheduler parallel",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154100822,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154100822,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Use Sawtooth 1.0 for marketplace.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:06:42,154100917,"@@ -0,0 +1,120 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-dev
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    ports:
+      - '8000:8000'
+    depends_on:
+      - ledger-sync
+      - rethink
+      - validator
+    command: echo ""No server command set""
+
+  ledger-sync:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-ledger-sync-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    depends_on:
+      - rethink
+      - validator
+    command: echo ""No ledger sync command set""
+
+  rethink:
+    image: rethinkdb:2.3
+    ports:
+      - '9090:8080'
+    expose:
+      - 8080
+      - 28015
+
+  rest-api:
+    image: hyperledger/sawtooth-rest-api:0.8",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154100917,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154100917,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Use default scheduler,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:07:58,154101292,"@@ -0,0 +1,87 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-production
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-production
+    ports:
+      - '8000:8000'
+    depends_on:
+      - ledger-sync
+      - rethink
+      - validator
+    command: echo ""No server command set""
+
+  ledger-sync:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-ledger-sync-production
+    depends_on:
+      - rethink
+      - validator
+    command: echo ""No ledger sync command set""
+
+  rethink:
+    image: rethinkdb:2.3
+    expose:
+      - 28015
+
+  settings-tp:
+    image: hyperledger/sawtooth-settings-tp:0.8
+    depends_on:
+      - validator
+    command: settings-tp -v tcp://validator:4004
+
+  validator:
+    image: hyperledger/sawtooth-validator:0.8
+    expose:
+      - 4004
+    command: |
+      bash -c ""
+        sawtooth admin keygen &&
+        sawtooth keygen my_key &&
+        sawtooth config genesis -k /root/.sawtooth/keys/my_key.priv &&
+        sawtooth admin genesis config-genesis.batch &&
+        sawtooth-validator -v \
+          --endpoint tcp://validator:8800 \
+          --bind component:tcp://eth0:4004 \
+          --bind network:tcp://eth0:8800 \
+          --scheduler parallel",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154101292,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154101292,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Remove my_key argument.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:08:09,154101346,"@@ -0,0 +1,87 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-production
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-production
+    ports:
+      - '8000:8000'
+    depends_on:
+      - ledger-sync
+      - rethink
+      - validator
+    command: echo ""No server command set""
+
+  ledger-sync:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-ledger-sync-production
+    depends_on:
+      - rethink
+      - validator
+    command: echo ""No ledger sync command set""
+
+  rethink:
+    image: rethinkdb:2.3
+    expose:
+      - 28015
+
+  settings-tp:
+    image: hyperledger/sawtooth-settings-tp:0.8
+    depends_on:
+      - validator
+    command: settings-tp -v tcp://validator:4004
+
+  validator:
+    image: hyperledger/sawtooth-validator:0.8
+    expose:
+      - 4004
+    command: |
+      bash -c ""
+        sawtooth admin keygen &&
+        sawtooth keygen my_key &&",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154101346,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154101346,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Is --allow-unauthenticated necessary here?,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:09:22,154101714,"@@ -0,0 +1,29 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD"" && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \
+    apt-get update && \
+    apt-get install -y --allow-unauthenticated -q python3-grpcio-tools=1.1.3-1 \",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154101714,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154101714,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,"The whole marketplace project. It is likely different components will share utility classes (like addressing), and so will all need access to the whole directory.",5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:49:14,154114662,"@@ -0,0 +1,35 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD"" && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \
+    apt-get update && \
+    apt-get install -y --allow-unauthenticated -q python3-grpcio-tools=1.1.3-1 \
+        python3-pip \
+        python3-sawtooth-sdk
+
+RUN pip3 install rethinkdb
+
+WORKDIR /project/sawtooth-marketplace
+
+# Note that the context must be set to the project's root directory",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154114662,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154114662,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Does catch-up work properly in the new Events system? I am very worried we end spinning our wheels trying to replicate 0.8 features that haven't made it to 1.0.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:56:48,154117165,"@@ -0,0 +1,120 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-dev
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    ports:
+      - '8000:8000'
+    depends_on:
+      - ledger-sync
+      - rethink
+      - validator
+    command: echo ""No server command set""
+
+  ledger-sync:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-ledger-sync-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    depends_on:
+      - rethink
+      - validator
+    command: echo ""No ledger sync command set""
+
+  rethink:
+    image: rethinkdb:2.3
+    ports:
+      - '9090:8080'
+    expose:
+      - 8080
+      - 28015
+
+  rest-api:
+    image: hyperledger/sawtooth-rest-api:0.8",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154117165,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154117165,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,I don't know. This code is inherited from past Sawtooth dockerfiles. I will remove it if it is.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 15:58:29,154117756,"@@ -0,0 +1,29 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD"" && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \
+    apt-get update && \
+    apt-get install -y --allow-unauthenticated -q python3-grpcio-tools=1.1.3-1 \",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154117756,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154117756,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,When do we build busybox  based images?,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 17:14:41,154142025,"@@ -0,0 +1,120 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+version: '2.1'
+
+services:
+  processor:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-tp-dev
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    command: echo ""No transaction processor command set""
+
+  server:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-server-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    ports:
+      - '8000:8000'
+    depends_on:
+      - ledger-sync
+      - rethink
+      - validator
+    command: echo ""No server command set""
+
+  ledger-sync:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile-dev
+      args:
+        - http_proxy
+        - https_proxy
+        - no_proxy
+    image: marketplace-ledger-sync-dev
+    volumes:
+      - .:/project/sawtooth-marketplace
+    depends_on:
+      - rethink
+      - validator
+    command: echo ""No ledger sync command set""
+
+  rethink:
+    image: rethinkdb:2.3
+    ports:
+      - '9090:8080'
+    expose:
+      - 8080
+      - 28015
+
+  rest-api:
+    image: hyperledger/sawtooth-rest-api:0.8
+    container_name: sawtooth-rest-api
+    expose:
+      - 8008
+    ports:
+      - '8008:8008'
+    depends_on:
+      - validator
+    entrypoint: sawtooth-rest-api --connect tcp://validator:4004 --bind rest-api:8008 -vv
+
+  shell:
+    image: hyperledger/sawtooth-shell:0.8
+    volumes:
+      - '.:/project/sawtooth-marketplace'
+    working_dir: /project/sawtooth-marketplace
+    container_name: sawtooth-shell
+    depends_on:
+      - rest-api
+    entrypoint: |
+      bash -c ""
+        sawtooth keygen &&
+        tail -f /dev/null",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154142025,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154142025,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Can we update the comment to say that the context should be set to the sawtooth-marketplace root?,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 17:15:35,154142264,"@@ -0,0 +1,35 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD"" && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \
+    apt-get update && \
+    apt-get install -y --allow-unauthenticated -q python3-grpcio-tools=1.1.3-1 \
+        python3-pip \
+        python3-sawtooth-sdk
+
+RUN pip3 install rethinkdb
+
+WORKDIR /project/sawtooth-marketplace
+
+# Note that the context must be set to the project's root directory",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154142264,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154142264,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,.../ubuntu/1.0/stable is what I would expect.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 18:26:49,154160489,"@@ -0,0 +1,35 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb http://repo.sawtooth.me/ubuntu/ci xenial universe"" >> /etc/apt/sources.list && \
+    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154160489,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154160489,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,.../ubuntu/1.0/stable...,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 18:27:12,154160569,"@@ -0,0 +1,26 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154160569,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154160569,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,.../ubuntu/1.0/stable ...,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 18:27:31,154160657,"@@ -0,0 +1,35 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD"" && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154160657,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154160657,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,.../ubuntu/1.0/stable....,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 18:27:48,154160772,"@@ -0,0 +1,29 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD"" && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154160772,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154160772,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Thanks Boyd.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 18:40:23,154164188,"@@ -0,0 +1,35 @@
+# Copyright 2017 Intel Corporation
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+FROM ubuntu:16.04
+
+RUN echo ""deb http://repo.sawtooth.me/ubuntu/ci xenial universe"" >> /etc/apt/sources.list && \
+    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD && \
+    echo 'deb http://repo.sawtooth.me/ubuntu/0.8/stable xenial universe' >> /etc/apt/sources.list && \",,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154164188,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154164188,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,Should this be run in a docker container or what software needs to be installed on the host to do this?,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 18:58:39,154169131,"@@ -1 +1,69 @@
-# sawtooth-mktplace
\ No newline at end of file
+# Sawtooth Marketplace
+
+_Sawtooth Marketplace_ is a blockchain application built on Hyperledger
+Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
+other users on the blockchain. This repo contains a number of components which
+together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
+blockchain and provide a simple RESTful API to interact with it. The components
+in this repo will include:
+
+- a **rest api** which provides a REST API for querying blockchain data
+- a **transaction processor** which handles RBAC-specific transaction logic
+- a **ledger sync** which writes blockchain state changes to a local database
+- and an example **client** which uses Marketplace to create a loyalty point
+  program administered through a simple web app.
+
+## Usage
+
+The easiest way to run these components is with
+[Docker](https://www.docker.com/what-docker). To start these components,
+first install Docker for your platform and clone this repo.
+
+Then, generate Python versions of the Protobuf files for each component, by
+running the `protogen` command from the root project directory:
+
+```bash
+bin/protogen",28,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154169131,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154169131,cianx
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,"I'm not a big fan of spinning up docker containers to run one script. I also have not tracked down all the dependencies to run it locally. If we need to tidy up the developer tools, I think that should happen in a later PR, rather than holding up getting this structure into the repo.",5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 19:25:55,154176243,"@@ -1 +1,69 @@
-# sawtooth-mktplace
\ No newline at end of file
+# Sawtooth Marketplace
+
+_Sawtooth Marketplace_ is a blockchain application built on Hyperledger
+Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
+other users on the blockchain. This repo contains a number of components which
+together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
+blockchain and provide a simple RESTful API to interact with it. The components
+in this repo will include:
+
+- a **rest api** which provides a REST API for querying blockchain data
+- a **transaction processor** which handles RBAC-specific transaction logic
+- a **ledger sync** which writes blockchain state changes to a local database
+- and an example **client** which uses Marketplace to create a loyalty point
+  program administered through a simple web app.
+
+## Usage
+
+The easiest way to run these components is with
+[Docker](https://www.docker.com/what-docker). To start these components,
+first install Docker for your platform and clone this repo.
+
+Then, generate Python versions of the Protobuf files for each component, by
+running the `protogen` command from the root project directory:
+
+```bash
+bin/protogen",28,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154176243,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154176243,delventhalz
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,"Absolutely everything needs to be done in docker containers, but I'd be fine with that in a separate PR.",5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 19:56:02,154184274,"@@ -1 +1,69 @@
-# sawtooth-mktplace
\ No newline at end of file
+# Sawtooth Marketplace
+
+_Sawtooth Marketplace_ is a blockchain application built on Hyperledger
+Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
+other users on the blockchain. This repo contains a number of components which
+together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
+blockchain and provide a simple RESTful API to interact with it. The components
+in this repo will include:
+
+- a **rest api** which provides a REST API for querying blockchain data
+- a **transaction processor** which handles RBAC-specific transaction logic
+- a **ledger sync** which writes blockchain state changes to a local database
+- and an example **client** which uses Marketplace to create a loyalty point
+  program administered through a simple web app.
+
+## Usage
+
+The easiest way to run these components is with
+[Docker](https://www.docker.com/what-docker). To start these components,
+first install Docker for your platform and clone this repo.
+
+Then, generate Python versions of the Protobuf files for each component, by
+running the `protogen` command from the root project directory:
+
+```bash
+bin/protogen",28,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154184274,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154184274,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,"In a future PR, most of this should move to sphinx-doc so it can be published.",5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 19:59:35,154185123,"@@ -1 +1,69 @@
-# sawtooth-mktplace
\ No newline at end of file
+# Sawtooth Marketplace",3,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154185123,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154185123,vaporos
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,"I have a branch built off of this one that adds a script to run protogen, lint, and unit tests in docker containers.",5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 20:11:30,154187984,"@@ -1 +1,69 @@
-# sawtooth-mktplace
\ No newline at end of file
+# Sawtooth Marketplace
+
+_Sawtooth Marketplace_ is a blockchain application built on Hyperledger
+Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
+other users on the blockchain. This repo contains a number of components which
+together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
+blockchain and provide a simple RESTful API to interact with it. The components
+in this repo will include:
+
+- a **rest api** which provides a REST API for querying blockchain data
+- a **transaction processor** which handles RBAC-specific transaction logic
+- a **ledger sync** which writes blockchain state changes to a local database
+- and an example **client** which uses Marketplace to create a loyalty point
+  program administered through a simple web app.
+
+## Usage
+
+The easiest way to run these components is with
+[Docker](https://www.docker.com/what-docker). To start these components,
+first install Docker for your platform and clone this repo.
+
+Then, generate Python versions of the Protobuf files for each component, by
+running the `protogen` command from the root project directory:
+
+```bash
+bin/protogen",28,2017-11-30 20:25:18,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154187984,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154187984,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,#3 Adds scripts and updates the README.md for protogen in a docker container.,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-11-30 20:26:28,154191366,"@@ -1 +1,69 @@
-# sawtooth-mktplace
\ No newline at end of file
+# Sawtooth Marketplace
+
+_Sawtooth Marketplace_ is a blockchain application built on Hyperledger
+Sawtooth, allowing users to exchange quantities of customized ""Assets"" with
+other users on the blockchain. This repo contains a number of components which
+together with a _Hyperledger Sawtooth_ validator, will run a Sawtooth
+blockchain and provide a simple RESTful API to interact with it. The components
+in this repo will include:
+
+- a **rest api** which provides a REST API for querying blockchain data
+- a **transaction processor** which handles RBAC-specific transaction logic
+- a **ledger sync** which writes blockchain state changes to a local database
+- and an example **client** which uses Marketplace to create a loyalty point
+  program administered through a simple web app.
+
+## Usage
+
+The easiest way to run these components is with
+[Docker](https://www.docker.com/what-docker). To start these components,
+first install Docker for your platform and clone this repo.
+
+Then, generate Python versions of the Protobuf files for each component, by
+running the `protogen` command from the root project directory:
+
+```bash
+bin/protogen",28,2017-11-30 20:26:28,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154191366,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154191366,boydjohnson
https://github.com/hyperledger/sawtooth-marketplace/pull/2,https://github.com/hyperledger/sawtooth-marketplace/pull/2,I don't see sphinx and published docs as a necessity for these self contained example apps that are intended to be cloned and modified. ,5417ec112381beb7fdcda7a0d319af4aee03705c,2017-12-01 16:34:28,154389217,"@@ -1 +1,69 @@
-# sawtooth-mktplace
\ No newline at end of file
+# Sawtooth Marketplace",3,2017-12-01 16:34:29,https://api.github.com/repos/hyperledger/sawtooth-marketplace/pulls/comments/154389217,https://github.com/hyperledger/sawtooth-marketplace/pull/2#discussion_r154389217,cianx
