name repository,url,url html,created by,title,body,assignees,# commit,created at,updated at,closed at,is merged,merged at,merged by,mergeable state,mergeable,state
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1085,https://github.com/hyperledger/burrow/pull/1085,gregdhill,add validator docs,"Signed-off-by: Gregory Hill <greg.hill@monax.io>

Resolves #1064",[],1,2019-04-04 10:31:24,2019-04-04 10:36:49,2019-04-04 11:01:21,True,2019-04-04 10:36:49,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1084,https://github.com/hyperledger/burrow/pull/1084,seanyoung,Add some documentation on dump and restore,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2019-04-04 09:36:36,2019-04-04 09:51:05,2019-04-04 09:51:05,True,2019-04-04 09:51:05,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1082,https://github.com/hyperledger/burrow/pull/1082,seanyoung,Upgrade to tendermint 0.31.2,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2019-04-01 12:31:09,2019-04-03 15:12:23,2019-04-03 15:12:23,True,2019-04-03 15:12:22,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1081,https://github.com/hyperledger/burrow/pull/1081,silasdavis,Fix NoConsensus Mode. Refactor tests. Test NoConsensus mode.,"No consensus mode was not resetting the checker which meant CallTxSim was not working.

This PR fixes this and also heavily refactors tests to avoid the use of main_test which leads to poor encapsulation and stops us from running tests over different kernel configurations.

Subtests can be used to achieve the same effect and also lead to easier parallelism. Reworked the integration test helpers to facilitate this.",[],2,2019-03-30 13:43:50,,2019-04-04 11:09:54,False,,,clean,True,open
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1080,https://github.com/hyperledger/burrow/pull/1080,gregdhill,add configurable dump timeout,Signed-off-by: Gregory Hill <greg.hill@monax.io>,[],1,2019-03-29 10:22:43,2019-03-29 10:30:54,2019-03-29 10:30:54,True,2019-03-29 10:30:54,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1079,https://github.com/hyperledger/burrow/pull/1079,seanyoung,Teach burrow deploy to execute multiple deploy jobs concurrently,burrow deploy can exe,[],6,2019-03-21 17:20:50,2019-04-03 16:24:14,2019-04-03 16:24:14,True,2019-04-03 16:24:14,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1078,https://github.com/hyperledger/burrow/pull/1078,seanyoung,Merge for v0.24.6 release,,[],12,2019-03-19 17:37:28,2019-03-19 17:37:48,2019-03-19 17:37:48,True,2019-03-19 17:37:48,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1077,https://github.com/hyperledger/burrow/pull/1077,seanyoung,Master,,[],2,2019-03-19 17:30:38,2019-03-19 17:30:57,2019-03-19 17:30:57,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1076,https://github.com/hyperledger/burrow/pull/1076,silasdavis,"Fix metrics, block time iota, and prepare release",Signed-off-by: Silas Davis <silas@monax.io>,[],1,2019-03-19 16:48:57,2019-03-19 17:00:04,2019-03-19 17:00:04,True,2019-03-19 17:00:04,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1075,https://github.com/hyperledger/burrow/pull/1075,seanyoung,Update multiple validators docs with new --test-burrow-configs,"Fixes #1055

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2019-03-19 09:41:42,2019-03-19 17:15:10,2019-03-19 17:15:10,True,2019-03-19 17:15:10,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1073,https://github.com/hyperledger/burrow/pull/1073,fastchain,Update README.md,url fix,[],1,2019-03-18 05:33:31,2019-04-03 15:20:00,2019-04-03 15:20:10,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1072,https://github.com/hyperledger/burrow/pull/1072,silasdavis,Release 0.24.5,,[],8,2019-03-14 12:18:30,2019-03-14 12:18:43,2019-03-14 12:18:43,True,2019-03-14 12:18:43,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1071,https://github.com/hyperledger/burrow/pull/1071,silasdavis,"Refactor metrics, fix a few issues, don't swallow errors, add tests","There were a couple of mistakes in the metrics exporter:

1. Previously we were using `ConstSummary` but without calculating quantiles it requries (a previous commit changed us to use `ConstHistogram` which was closer to the usage, but on closer inspection...

2. We were binning TxPerBlock and TimePerBlock into a map and passing this to `MustNewConstHistogram` but reading the docs (which could probably be a bit clearer) this is not what it requires - in fact it wants a cumulative frequency distribution (see https://prometheus.io/docs/concepts/metric_types/#histogram)

This also cleans up the code, adds tests, removes a swallowed error, avoid stringly typing, etc.

The significant change for 2 can be seen comparing `getTxBuckets` and `getBlockTimeBuckets` from old export.go and new exporter.go (unfortunately not detected as rename)",[],4,2019-03-14 07:56:20,2019-03-15 13:23:59,2019-03-15 13:23:59,True,2019-03-15 13:23:59,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1070,https://github.com/hyperledger/burrow/pull/1070,silasdavis,Consensus timings and logging defaults,"This adds a single configuration paramater of `TimeoutFactor` that allows scaling up or down of the Tendermint consensus timeouts. A setting of 1.0 gives the default Tendermint timeouts, a setting of 0.5 gives half the default timeouts. Burrow's default `TimeoutFactor` is 0.33 which waits 1 second (down from 3) for each proposal.

Some other operational niceties:
- Server-side transaction timeout can now be supplied by tx or otherwise capped at 1 hour
- SyncInfo includes the interval (block duration) between the last and one-before-last commits
- All log lines include height
- Default logging excludes trace (now inverted to `Trace`) and filters Tendermint logs for a much quieter default
- KeyStore has no logger and no longer complains about permissions
- Metrics time/tx per block are Histogram rather than Summary (for which they are missing quantile calculations required on our side)",[],1,2019-03-13 22:38:41,2019-03-14 09:15:41,2019-03-14 09:15:41,True,2019-03-14 09:15:41,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1069,https://github.com/hyperledger/burrow/pull/1069,silasdavis,Downgrade to Tendermint 0.29.1,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2019-03-12 15:44:45,2019-03-13 22:57:17,2019-03-13 22:57:20,False,,,clean,True,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1068,https://github.com/hyperledger/burrow/pull/1068,seanyoung,Generate burrow toml config for all validators,"See commit messages for detailed descriptions.

Signed-off-by: Sean Young <sean.young@monax.io>",[],2,2019-03-12 14:20:24,2019-03-18 10:34:28,2019-03-18 10:34:29,True,2019-03-18 10:34:28,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1067,https://github.com/hyperledger/burrow/pull/1067,silasdavis,Downgrade tendermint to 0.27.0,,[],3,2019-03-12 11:34:13,2019-03-12 11:42:07,2019-03-12 11:42:07,True,2019-03-12 11:42:07,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1066,https://github.com/hyperledger/burrow/pull/1066,silasdavis,Add height to all logs messages,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2019-03-12 11:09:09,2019-03-12 11:39:41,2019-03-12 11:39:41,True,2019-03-12 11:39:41,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1065,https://github.com/hyperledger/burrow/pull/1065,gregdhill,refactor kernel,"Signed-off-by: Gregory Hill <greg.hill@monax.io>

This PR makes the kernel structure more modular. When Tendermint isn't configured this enables non-consensus (closing #1026) with rapid transaction throughput.",[],4,2019-03-11 11:12:58,2019-03-22 10:14:17,2019-03-22 11:37:29,True,2019-03-22 10:14:17,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1062,https://github.com/hyperledger/burrow/pull/1062,silasdavis,Use modules,"Go has finally lost the plot and acknowledged software comes in chunks and has versions.

This PR migrates us to the new official go modules system:
- Vendor is no more - should make for cleaner PRs amongst other things
- I could not get protobuf to work properly without having it place files within the GOPATH (or at least a deeper path). Seemed like I was hitting some bugs in gogo, but for an easy life `make protobuf` currently relies upon us living in `$GOPATH/src/github.com/hyperledger/burrow` (nothing else does), but this also mean you need `export GOMODULE111=on` if you are using from a checkout in your GOPATH
- For versions 0 - as we are - we are not expected to create a new vN suffix for every breaking change so adopting modules shouldn't change are pre-1 approach to semver - i.e. breaking stuff on minor bumps. Post v1 (i.e. v2 and higher) breaking any exported API requires a version bump",[],3,2019-03-09 21:30:55,,2019-03-12 11:23:54,False,,,dirty,False,open
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1061,https://github.com/hyperledger/burrow/pull/1061,silasdavis,Remove errant test file,Fix tests,[],1,2019-03-08 17:29:20,2019-03-09 21:31:09,2019-03-09 21:31:10,True,2019-03-09 21:31:09,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1060,https://github.com/hyperledger/burrow/pull/1060,silasdavis,Refactor keys server test as integration test,"I noticed some intermittent failures with the keys go test, I think it was to do with timing issues and the keys server setup being done in `init()`. The right way to do this is with TestMain so I implemented it. While I was at it I also made the keys sever test an integration test since it binds to ports and touches the filesystem.",[],1,2019-03-08 16:04:42,2019-03-08 16:36:31,2019-03-08 16:36:31,True,2019-03-08 16:36:31,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1059,https://github.com/hyperledger/burrow/pull/1059,silasdavis,Release 0.24.4,,[],6,2019-03-08 15:35:46,2019-03-08 15:43:35,2019-03-08 15:43:36,True,2019-03-08 15:43:35,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1058,https://github.com/hyperledger/burrow/pull/1058,silasdavis,Add SequenceNonce utility function,"Downstream library users sometimes want to use sequence number based addresses for newly created accounts. This change exposes a helper in order to form such nonces.

Also preps these nonce related changes for a 0.24.4 release.

For context: https://github.com/hyperledger/fabric-chaincode-evm/pull/3/commits/77c3f7c1b0c2d5fb3bcde22e04d36f46f39c1175",[],2,2019-03-08 13:35:13,2019-03-08 15:34:40,2019-03-08 15:34:40,True,2019-03-08 15:34:40,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1057,https://github.com/hyperledger/burrow/pull/1057,silasdavis,Don't pull in Tx to EVM ,Be nicer to downstream.,[],1,2019-03-08 12:52:15,2019-03-08 13:26:29,2019-03-08 13:26:29,True,2019-03-08 13:26:29,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1053,https://github.com/hyperledger/burrow/pull/1053,silasdavis,Release 0.24.3,,[],9,2019-03-06 14:58:33,2019-03-06 14:58:49,2019-03-06 14:58:49,True,2019-03-06 14:58:49,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1052,https://github.com/hyperledger/burrow/pull/1052,silasdavis,Logging and error tweaks and fix of KVCache,"- Transactor reports the chain's SyncInfo when a tx times out (may shed light on issue with burrow deploy timing out)
- Burrow deploy timeout now 1.5 times transactor blocking timeout
- KVCache iterator updated to work as per latest DB interfaces making CacheDB work for replay/forensics (still not used in main runtime code).",[],6,2019-03-06 13:36:54,2019-03-06 14:02:32,2019-03-06 14:02:32,True,2019-03-06 14:02:32,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1051,https://github.com/hyperledger/burrow/pull/1051,silasdavis,Remove stack traces from errors that might make there way into,"TxExecutions and so merkle state causing non-determinism.

Signed-off-by: Silas Davis <silas@monax.io>",[],1,2019-03-06 09:02:33,2019-03-06 09:16:26,2019-03-06 09:16:26,True,2019-03-06 09:16:26,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1049,https://github.com/hyperledger/burrow/pull/1049,silasdavis,Re-release with docs,,[],5,2019-03-01 16:23:17,2019-03-01 16:31:07,2019-03-01 16:31:07,True,2019-03-01 16:31:07,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1048,https://github.com/hyperledger/burrow/pull/1048,silasdavis,Update docs,,[],3,2019-03-01 16:15:20,2019-03-01 16:22:42,2019-03-01 16:22:42,True,2019-03-01 16:22:42,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1047,https://github.com/hyperledger/burrow/pull/1047,silasdavis,Release 0.24.2,,[],13,2019-03-01 15:52:12,2019-03-01 15:59:43,2019-03-01 15:59:43,True,2019-03-01 15:59:43,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1046,https://github.com/hyperledger/burrow/pull/1046,silasdavis,0.24.2: stop vent from swallowing and use patched Tendermint,,[],9,2019-02-28 16:19:54,2019-03-01 15:33:16,2019-03-01 15:50:47,True,2019-03-01 15:33:16,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1045,https://github.com/hyperledger/burrow/pull/1045,seanyoung,Create bin directory for build jobs,"This fixes a regression in commit 71e3bfc7: create bin directory before
we try to read it.

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2019-02-28 15:18:33,2019-02-28 16:20:38,2019-02-28 16:20:38,True,2019-02-28 16:20:38,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1044,https://github.com/hyperledger/burrow/pull/1044,silasdavis,Print dirty checkout items,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2019-02-28 12:02:45,2019-02-28 16:20:25,2019-02-28 16:20:30,True,2019-02-28 16:20:25,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1043,https://github.com/hyperledger/burrow/pull/1043,silasdavis,Release 0.24.1,,[],6,2019-02-28 10:17:11,2019-02-28 10:17:23,2019-02-28 10:17:24,True,2019-02-28 10:17:23,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1042,https://github.com/hyperledger/burrow/pull/1042,silasdavis,0.24.1: fix abi and deploy library usage,This needs change log and to be release as 0.24.1 and is required by API,[],3,2019-02-27 22:27:05,2019-02-28 09:39:10,2019-02-28 09:39:10,True,2019-02-28 09:39:10,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1040,https://github.com/hyperledger/burrow/pull/1040,seanyoung,Atomically write solidity compiler output as bin file,"If we are running multiple burow deploy jobs concurrently, then one might compile a solidity contract and save the bin file. Another burrow deploy might want to use the bin file for that contract and might read it before it was completely written.
",[],1,2019-02-27 13:31:56,2019-02-27 18:12:13,2019-02-27 18:12:14,True,2019-02-27 18:12:13,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1039,https://github.com/hyperledger/burrow/pull/1039,silasdavis,Use consistent Signature message type,"Signatures in `Signatory` were being encoded as protobuf bytes of signature message rather than signature message itself via the use of gogoproto custom type dating from a time when `type Signature []byte`...

Signed-off-by: Silas Davis <silas@monax.io>",[],1,2019-02-27 11:06:58,2019-02-27 13:17:45,2019-02-27 13:19:55,True,2019-02-27 13:17:45,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1038,https://github.com/hyperledger/burrow/pull/1038,seanyoung,Concurrent test,,[],2,2019-02-27 10:14:49,2019-02-27 10:38:46,2019-02-27 10:38:46,True,2019-02-27 10:38:46,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1037,https://github.com/hyperledger/burrow/pull/1037,seanyoung,Improve performance of finding abi for events,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2019-02-26 20:28:26,2019-02-26 21:45:45,2019-02-26 21:45:46,True,2019-02-26 21:45:45,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1036,https://github.com/hyperledger/burrow/pull/1036,silasdavis,Fix dev builds,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2019-02-26 17:09:09,2019-02-26 17:10:16,2019-02-26 17:10:16,True,2019-02-26 17:10:16,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1035,https://github.com/hyperledger/burrow/pull/1035,silasdavis,Prepare for 0.24.0 release,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2019-02-26 14:37:22,2019-02-26 15:04:16,2019-02-26 15:04:16,True,2019-02-26 15:04:16,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1034,https://github.com/hyperledger/burrow/pull/1034,seanyoung,Dump,,[],2,2019-02-26 14:26:27,2019-02-26 14:34:41,2019-02-26 14:34:41,True,2019-02-26 14:34:41,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1033,https://github.com/hyperledger/burrow/pull/1033,silasdavis,Prepare for release,"My signoff is missing from https://github.com/hyperledger/burrow/pull/1033/commits/de870e3783d0c0e91fe8b25afddaf38a5de842f8 

I hereby sign off on it...",[],213,2019-02-26 13:05:32,2019-02-27 13:31:51,2019-02-27 13:31:52,True,2019-02-27 13:31:51,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1032,https://github.com/hyperledger/burrow/pull/1032,seanyoung,burrow depends on go 1.11,Signed-off-by: Sean Young <sean.young@monax.io>,[],2,2019-02-25 10:26:56,2019-02-25 16:52:27,2019-02-25 16:52:27,True,2019-02-25 16:52:27,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1030,https://github.com/hyperledger/burrow/pull/1030,silasdavis,Further streamify state event storage,"This gives us a reasonable expectation that we will not blow the GRPC message size limits.

It also seems to me to raise the status of execution events and lower the importance of blocks, hopefully lending us some flexibility in constructing projections over events, and executing in contexts where we may not be concerned with blocks (like restored chain events and state channels).",[],1,2019-02-22 17:19:41,2019-02-26 10:18:36,2019-02-26 10:18:36,True,2019-02-26 10:18:36,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1029,https://github.com/hyperledger/burrow/pull/1029,silasdavis,Upgrade to Tendermint 0.30.1,And upgrade other deps,[],4,2019-02-22 09:59:39,2019-02-22 13:38:01,2019-02-22 13:38:01,True,2019-02-22 13:38:01,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1028,https://github.com/hyperledger/burrow/pull/1028,seanyoung,Warn if call type job is used for constant function,Signed-off-by: Sean Young <sean.young@monax.io>,[],2,2019-02-20 15:09:44,2019-02-21 10:58:31,2019-02-21 10:58:31,True,2019-02-21 10:58:31,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1027,https://github.com/hyperledger/burrow/pull/1027,seanyoung,Testcase for EXTCODEHASH,Signed-off-by: Sean Young <sean.young@monax.io>,[],2,2019-02-20 10:15:50,2019-02-21 12:11:20,2019-02-21 12:11:20,True,2019-02-21 12:11:20,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1023,https://github.com/hyperledger/burrow/pull/1023,silasdavis,Fix vent command,I messed up making `burrow vent start` subcommand.,[],1,2019-02-19 16:17:32,2019-02-19 16:32:38,2019-02-19 16:32:38,True,2019-02-19 16:32:38,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1022,https://github.com/hyperledger/burrow/pull/1022,seanyoung,Make quickstart work in solidity 0.5,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2019-02-19 13:09:54,2019-02-19 13:16:15,2019-02-19 13:16:16,True,2019-02-19 13:16:15,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1020,https://github.com/hyperledger/burrow/pull/1020,phymbert,[EVM] Support EXTCODEHASH,"Fixes #996

Signed-off-by: phymbert <pierrick.hymbert@gmail.com>",[],4,2019-02-17 10:01:59,2019-02-19 17:43:52,2019-02-19 17:43:52,True,2019-02-19 17:43:52,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1018,https://github.com/hyperledger/burrow/pull/1018,phymbert,[DOCS] Rename BIPs to ADRs.,"BIP is confusing with Bitcoin Improvement Proposal.
Furthermore, we are looking for Architecture Decision more than design specification.

Signed-off-by: phymbert <pierrick.hymbert@gmail.com>",['silasdavis'],1,2019-02-17 08:30:21,2019-02-18 14:13:28,2019-02-18 14:13:28,True,2019-02-18 14:13:28,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1017,https://github.com/hyperledger/burrow/pull/1017,seanyoung,Solidity 0.5.4,Call forwarding and callling permissions contract is broken,[],2,2019-02-14 12:33:16,2019-02-21 11:56:23,2019-02-21 11:56:23,True,2019-02-21 11:56:23,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1016,https://github.com/hyperledger/burrow/pull/1016,seanyoung,Test case for static call,"Provided by @swetharepakula see:
	https://github.com/swetharepakula/burrow-deploy-test

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2019-02-14 10:29:57,2019-02-14 12:52:55,2019-02-14 12:52:55,True,2019-02-14 12:52:54,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1014,https://github.com/hyperledger/burrow/pull/1014,MHBauer,fix STATICCALL for cross contract query,"resolves #1011

there doesn't appear to be a test that exercises this.

Not sure how to prove anything, but the scenario in #1011 runs sucessfully with this change.",[],1,2019-02-13 08:24:31,2019-02-14 10:23:51,2019-02-14 10:24:08,True,2019-02-14 10:23:51,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1013,https://github.com/hyperledger/burrow/pull/1013,silasdavis,Vent triggers and projections refactor,"The primary purpose of this PR was to add the ability to specify event notification triggers using postgres' `LISTEN/NOTIFY` functionality. This is a core part of providing synchronised vent/burrow.js access and can also be used to build a resilient external event system.

In particular the log table now emits a `{""_height"": ""<the block height as string>""}` payload on the `height` channel for chain synchronisation purposes - wait for the height in a `TxExecution` and you know the database will be caught up with chain (for exact synchronisation with fields you can set a notification on a particular event table and subset of fields).

By specifying `Notify` channels as an array in the `EventClass` that table will register a row trigger that fires an event on each channel that is referenced in that event class/table spec. The payload sent by `NOTIFY` will be the JSON serialised collection of key values from `FieldMappings` for each mapping in which a particular channel is referenced.

```
  {
    ""TableName"": ""EventTest"",
    ""Filter"": ""EventType = 'LogEvent'"",
    ""DeleteMarkerField"": ""__DELETE__"",
    ""FieldMappings"": [
      {
        ""Field"": ""key"",
        ""ColumnName"": ""testkey"",
        ""Type"": ""bytes32"",
        ""Primary"": true,
        ""Notify"": [""keyed_meta""]
      },
      {
        ""Field"": ""name"",
        ""ColumnName"": ""testname"",
        ""Type"": ""bytes32"",
        ""Primary"": true,
        ""BytesToString"": true,
        ""Notify"": [""meta"", ""keyed_meta""]
      },
      {
        ""Field"": ""description"",
        ""ColumnName"": ""testdescription"",
        ""Type"": ""bytes32"",
        ""Primary"": false,
        ""Notify"": [""meta"", ""keyed_meta""]
      }
    ]
  },
```

In adding this functionality it was clear there were a number of problems with the structure being used to represent mappings, so included in this PR are various changes (including breaking changes that I will document with a subsequent commit), including:

- Case sensitive column names
- Clear separation between event field names and the columns to which they map
- Deletion marker made less busy just expecting a named field
- `burrow vent schema` now generates a JSON schema to check the event spec against
- EventSpecs can be merged together provided they agree on table definitions exactly
- Height is handled as a uint64 rather than a string (though still stored as varchar - we may want to use numeric but the way things work it doesn't hurt us as it is)
- A number of renames and restructuring to make the code more logical and easier to understand (e.g. `s/Parser/Projection` - parser was not a parser)",[],12,2019-02-07 15:11:27,2019-02-18 18:17:37,2019-02-18 19:02:13,True,2019-02-18 18:17:37,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1010,https://github.com/hyperledger/burrow/pull/1010,seanyoung,Dump restore fixes,"Various fixes to dump/restore:
 - dump contains chain id and blocktime (populate Origin)
 - benchmask for loading mock restore file
 - require AppHash on restore
 - works with t5 dump",[],7,2019-02-06 16:40:03,2019-02-07 19:00:24,2019-02-07 19:00:24,True,2019-02-07 19:00:24,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1009,https://github.com/hyperledger/burrow/pull/1009,silasdavis,Add GetBlockHeader to rpcquery,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2019-02-06 11:36:03,2019-02-06 12:26:53,2019-02-06 12:26:53,True,2019-02-06 12:26:53,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1008,https://github.com/hyperledger/burrow/pull/1008,compleatang,Fixes vent's behaviour when it cannot find ABIs,"Currently when vent fails to find an ABI for an event it reads from the
chain it just exit(1)'s. This is nonsensical behaviour on complex chains
which may evolve and especially on public or semi-public chains where
the operational unit running a single instance of vent may not be able
to control a given event type+filter. The way vent currently operates
it would be trivially easy to take down a system by deploying a contract
which it's ABIs are not registered with vent instances and have that
contract emit events which are filtered in other's vent instances.

This patch starts to change that behaviour by refusing to fail when an
event cannot be decoded (this happens in pretty much every case when
vent doesn't have the ABI for an event). Instead vent logs the _txhash
and error for further decoding by operators if they need to do so. Vent
still will fall over in the previously defined cases and will fall over
if it cannot save the error log in the table. So that behaviour is not
modified by this patch.

**Note**: this patch will require some tests; however due to other
obligations I do not have time to add those just now. I'll leave that to
another of the burrow maintainers for now.

Signed-off-by: Casey Kuhlman <casey@monax.io>",[],1,2019-02-06 02:41:29,2019-02-19 10:39:52,2019-02-19 10:41:01,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1007,https://github.com/hyperledger/burrow/pull/1007,silasdavis,Fix forest non-determinism and remove CacheDB,"@seanyoung discovered non-determinism when testing dump/restore. This was because we were iterating of a map when updating dirty trees. It felt like this would not matter but of course IAVL is order dependent and our commit tree is an IAVL tree.

`KVCache` was also soaking up tens of seconds as used by `CacheDB` because of excessive sorting. It could be sped up by maintaining a sorted list and performing sorted inserts but since keeping it was a marginal act of database sync paranoia I've opted to remove it.

We note there is a slight speed-up by using a single storage tree rather than one for acocunt, but since this was a major motivation behind introducing `MutableForest` and the speedup is modest compared to the above we avoid reverting that for now. Down the line we could probably do with a prefix tree (maybe https://github.com/monax/trieste will see the light of day...)",[],1,2019-02-05 17:49:07,2019-02-06 09:38:07,2019-02-18 19:02:13,True,2019-02-06 09:38:07,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1006,https://github.com/hyperledger/burrow/pull/1006,silasdavis,Change unit of aggregation in state to BlockEvent,"With the inclusion of dump/restore (in its current incarnation) we have the possibility of a very large zeroth block. Each time we dump/restore a chain we import all EVM log events into a zeroth pseudo-block. So this block can grow without bounds.

However GRPC has a relatively small message size limit of 4MB (https://github.com/grpc/grpc/issues/7927). The streaming RPC is designed to be used for large messages by breaking them into multiple parts. We have a natural batching with block and transaction but currently we store entire blocks in state. We would like to be able to naturally stream blocks in terms of the their transactions, however just streaming transactions makes it difficult to know when you have received the last transaction in a block. We work round this by introducing `BlockEvent` that can be either `BeginBlock`, `TxExecution`, or `EndBlock` (similar to the tendermint ABCI types). The block messages serve as delimiters.

This PR changes our fundamental execution event state to a stream of `BlockEvents`. Some remarks on this approach:

-  We can pull out a single transaction without decoding an entire (potentially very large) `BlockExecution`
- It relegates blocks (from the point of view of `State`) to being secondary to execution events (which kind of feels right given the separation we have between 'our state' and 'tendermint's state'. The aim is that state is only faintly aware it is running on a blockchain (whether this really makes sense is up for debate - but it does have some advantages for things like checkpointing and restore)
- We could go further and wrap `TxExecution` so we have a 'pure' event stream - for various reasons this seemed like going too far (would affect a lot of code and require a lot of reassembly). I decided in the end that `TxExecution` was a good unit to work with (indeed it is a transaction).
- However since block boundaries are our synchronisation markers, so when consuming a stream of transactions you often want to know when you have reached the end of a block (and code is nicer if you can still do this with a single stream).
- Consumers can still consume `BlockExecutions` with the function `rpcevents.ConsumeBlockExecutions` hiding the details of their reconstruction - so they just benefit from the streaming transport.

This PR also includes:
- KeyFormatStore construct to make sure we do not have colliding prefixes in state and improve readability
- Slight change to Vent - it chose to remain in an invite loop when receiving EOF (on non-streaming bounds) which did not seem like the right thing to do.

Signed-off-by: Silas Davis <silas@monax.io>",[],6,2019-02-04 14:29:09,2019-02-05 12:41:01,2019-02-18 19:02:12,True,2019-02-05 12:41:01,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1005,https://github.com/hyperledger/burrow/pull/1005,silasdavis,WIP: TxExecution based state,,[],3,2019-02-01 18:09:21,2019-02-04 14:29:31,2019-02-18 19:02:12,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1003,https://github.com/hyperledger/burrow/pull/1003,silasdavis,BlockHash improvements,"Based off: https://github.com/hyperledger/burrow/pull/1000 so make sure that is merged before reviewing this.

This PR:
- Provides `Blockchain` with access to Tendermint's `Blockstore`. I anticipate us needing this if we move to not duplicating tendermint information in our storage anyway and feels a bit cleaner than what we have.
- Fixes that current implementation uses `AppHash` - it is a little arguably but probably it should be using the tendermint block hash proper
- Fixes off-by-one with 256 lookback on `BLOCKHASH` opcode",[],2,2019-01-31 13:57:45,2019-02-01 18:08:15,2019-02-18 19:02:12,True,2019-02-01 18:08:15,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1002,https://github.com/hyperledger/burrow/pull/1002,seanyoung,WIP: Blocktime2,,[],2,2019-01-31 10:36:31,2019-02-07 17:41:40,2019-02-07 17:41:40,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1001,https://github.com/hyperledger/burrow/pull/1001,seanyoung,Fix restore bug,"When loading a dump during restore, the events are restored without their
transactions. The TxHash field is all 0s; however we added a txHash
reference, which also has the b prefix. Then when iterating over the blocks,
we find the TxHash reference which is then decoded as a block, which fails.

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2019-01-29 13:19:09,2019-01-31 09:50:28,2019-01-31 09:50:29,True,2019-01-31 09:50:28,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1000,https://github.com/hyperledger/burrow/pull/1000,silasdavis,Introduce forest of trees for state and move validator state to core state,"This manages a collection of trees rather than a single monolithic tree.

With IAVL this will allow us in the future to: 

- Independently version sub-trees
- Obtain storage, proposal, name, or account sub-state hashes
- Lazy load trees

This also move validator state into core state and whilst I was there I've split state into separate files and tried to introduce a clear split between read and write state.

Suggest to grab local checkout and examine:

- `MutableForest`
- `ImmutableForest`
- `RWTree`
- `Ring`
- `State`
- `Blockchain` (for a list of things to try and find elsewhere)
- `state/validators.go`
- `state/validators_test.go`
- `integration/core/kernel_test.go`

I think most other changes are 'slaves' to changes in those places... mostly.",[],9,2019-01-24 12:48:44,2019-02-01 14:29:37,2019-02-18 19:02:13,True,2019-02-01 14:29:37,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/998,https://github.com/hyperledger/burrow/pull/998,seanyoung,dump fixes,Signed-off-by: Sean Young <sean.young@monax.io>,[],5,2019-01-23 14:01:05,2019-01-24 13:31:28,2019-01-24 13:31:28,True,2019-01-24 13:31:28,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/997,https://github.com/hyperledger/burrow/pull/997,silasdavis,Ensure bytes sequences intended for storage as utf8 strings are valid utf8 bytes,Ported from: https://github.com/monax/bosmarmot/pull/194/files,[],1,2019-01-23 11:40:53,2019-01-23 12:36:40,2019-02-18 19:02:13,True,2019-01-23 12:36:40,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/994,https://github.com/hyperledger/burrow/pull/994,silasdavis,Ventilation,"This adds Vent into Burrow so we can release as a common unit with a common version. In the process we:

- Update Vent to longer TxHash (and remove our dependency on tmhash - though we match their current version for now)
- Integrate the vent command into the `burrow` command migrating it to mow.cli
- Separate out sqlite support with a build tag to avoid CGO for our default postgres build
- Fix up tests to run in docker-compose and on circle-ci
",[],8,2019-01-09 13:15:51,2019-01-15 14:36:23,2019-01-23 12:04:46,True,2019-01-15 14:36:23,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/993,https://github.com/hyperledger/burrow/pull/993,silasdavis,Make account tags/values nicer for querying,"The default tags created by `MustReflectTags` for accounts were not very nice for querying permissions or roles. This fixes that and also tries to produce query values from the `TextMarshaler` interface if it is available.

While I was in the query code I also realised that using `NewBuilder` for complete query strings was unnecessary and rather wasteful so removed that.",[],1,2019-01-07 22:09:16,2019-01-08 11:24:16,2019-01-08 11:24:16,True,2019-01-08 11:24:15,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/992,https://github.com/hyperledger/burrow/pull/992,silasdavis,Sync up with master,,[],10,2019-01-07 17:17:35,2019-01-07 17:33:07,2019-01-07 17:33:07,True,2019-01-07 17:33:07,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/991,https://github.com/hyperledger/burrow/pull/991,silasdavis,WIP: Trie implementation,"This is a prototype implementation of a space-efficient sparse trie structure based on compressed branching and a sparse child array at each branch.

As a trie it supports range queries and is lexicographically sorted. It also makes restricting to or iterating over a prefix straightforward. This has applications for our various caching layers that are currently map based and for state where if we extended it to form a merkle tree it would be easy to maintain hashes for any prefix (making it possible to have finer grain hashes for accounts and so on in a way not possible with IAVL).",[],2,2019-01-02 22:11:03,2019-01-08 12:14:27,2019-02-18 19:02:13,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/990,https://github.com/hyperledger/burrow/pull/990,silasdavis,Reinstate initial version save to maintain compatibility!,"Oops... 

Running against existing state will fail since we start on the wrong version offset. This _probably_ ought to be released over the top of v0.23.3 unless we want to be strict and bump again.",[],1,2018-12-19 21:44:56,2018-12-20 10:46:01,2019-01-04 11:42:54,True,2018-12-20 10:46:01,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/989,https://github.com/hyperledger/burrow/pull/989,silasdavis,Bring in changes for 0.23.2 and 0.23.3 onto develop,,[],4,2018-12-19 18:09:53,2018-12-20 10:15:06,2018-12-20 10:15:06,True,2018-12-20 10:15:06,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/988,https://github.com/hyperledger/burrow/pull/988,silasdavis,Ensure tree version is synchronised with height,"Since the version of the IAVL tree is written into the node structure with every write and contribute to hash we much ensure that it is consistent between reloads.

Currently if no writes are made between successive commits we have:

```
AppHash_A -> CommitID {Version: 100 } written at Height 99
AppHash_A -> CommitID {Version: 101} written at Height 100
```
But suppose we attempt to restore starting from height 99. Now we end up starting with version 101 - which we are _meant_ to be overwriting. This will lead to AppHash mismatch on the next write.

To make things less confusing this also synchronises height and tree version (and checks this each commit).

With IAVL 0.12.0 we can make the checkpointing/rollback work as really intended with `LoadVersionForOverwriting`",[],1,2018-12-19 15:17:03,2018-12-19 16:51:25,2018-12-19 17:43:33,True,2018-12-19 16:51:25,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/987,https://github.com/hyperledger/burrow/pull/987,silasdavis,Release checkpointing hotfix 0.23.2,,[],4,2018-12-18 13:00:21,2018-12-18 13:04:33,2018-12-19 13:46:13,True,2018-12-18 13:04:32,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/986,https://github.com/hyperledger/burrow/pull/986,silasdavis,Fix checkpointing with RWTree,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-12-18 11:50:11,2018-12-18 11:54:19,2019-01-04 11:42:54,True,2018-12-18 11:54:19,seanyoung,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/985,https://github.com/hyperledger/burrow/pull/985,silasdavis,Checkpoint fix,"This fixes the issue with checkpointing whereby when reloading state at a time when transactions are occurring we get an AppHash mismatch. The crux of the problem is that `RWTree` was loading its `readTree` from `version - 1`. Usually the read tree is one behind, apart from at the instant we save when the two trees should match!

This also introduces `LoadVersionForOverwriting` so we don't get any weirdness when loading a previous version - it will delete future versions from state.

The kernel tests now generate transactions as they are restarted and make sure the only errors we see are GRPC `Unavailable` coded errors - which should be a more solid test for this sort of thing.",[],4,2018-12-18 11:02:06,2018-12-18 11:40:48,2019-01-04 11:41:26,True,2018-12-18 11:40:48,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/980,https://github.com/hyperledger/burrow/pull/980,seanyoung,Allow KeyNames to be used in deploy yaml,Signed-off-by: Sean Young <sean.young@monax.io>,[],8,2018-12-15 13:46:27,2018-12-19 15:40:44,2018-12-19 15:40:44,True,2018-12-19 15:40:44,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/979,https://github.com/hyperledger/burrow/pull/979,phymbert,[P2P] Expose config p2p AddrBookStrict to allow local ip,,[],4,2018-12-14 14:22:15,2018-12-14 14:29:54,2018-12-14 14:29:54,True,2018-12-14 14:29:54,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/978,https://github.com/hyperledger/burrow/pull/978,seanyoung,Add missing GetStats() rpc query interface,Signed-off-by: Sean Young <sean.young@monax.io>,[],2,2018-12-12 10:03:46,2018-12-15 10:46:27,2018-12-15 10:46:27,True,2018-12-15 10:46:27,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/977,https://github.com/hyperledger/burrow/pull/977,seanyoung,Add dump interface,,[],16,2018-12-11 20:59:49,2019-01-22 14:14:45,2019-01-22 14:14:45,True,2019-01-22 14:14:45,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/975,https://github.com/hyperledger/burrow/pull/975,seanyoung,Report stats on accounts with and without code,Signed-off-by: Sean Young <sean.young@monax.io>,[],3,2018-12-07 14:20:06,2018-12-07 16:25:24,2018-12-07 16:25:24,True,2018-12-07 16:25:24,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/974,https://github.com/hyperledger/burrow/pull/974,silasdavis,Provide more efficient non-string parsing based query for TxExecution,This probably helps mitigate #973 - though it's not clear where the leak is what is happening now is manifestly inefficient.,[],1,2018-12-06 15:46:09,2018-12-06 16:09:17,2019-01-04 11:41:26,True,2018-12-06 16:09:17,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/972,https://github.com/hyperledger/burrow/pull/972,silasdavis,WIP: Fix checkpointing issue,This currently just extends the kernel tests to reproduce the issue which is that in the case of rollback but the issue is with rewind and overwrite for which we need new IAVL,[],1,2018-12-03 13:43:13,2018-12-18 15:48:55,2018-12-18 15:49:02,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/971,https://github.com/hyperledger/burrow/pull/971,devrajsinghrawat,Port Update for RPC.GRPC in .burrow_val0.toml,"According to standard documentation for Multiple validators - advanced consensus setup -> https://github.com/hyperledger/burrow/blob/develop/docs/quickstart/multiple-validators.md

while setting up RPC.GRPC address information in file .burrow_val0.toml, it is suggested to maintain ListenAddress = ""127.0.0.1:20002""
while it was found that the default port should be 10997 so it should be ListenAddress = ""127.0.0.1:10997""

[Tendermint]
  Seeds = """"
  SeedMode = false
  PersistentPeers = """"
  ListenAddress = ""tcp://0.0.0.0:20000""
  Moniker = ""val_node_0""
  TendermintRoot = "".burrow_node0""

[Execution]

[Keys]
  GRPCServiceEnabled = false
  AllowBadFilePermissions = true
  RemoteAddress = """"
  KeysDirectory = "".keys""

[RPC]
  [RPC.Info]
    Enabled = true
    ListenAddress = ""tcp://127.0.0.1:20001""
  [RPC.Profiler]
    Enabled = false
  [RPC.GRPC]
    Enabled = true
    ListenAddress = ""127.0.0.1:20002""   <------------ Change here
  [RPC.Metrics]
    Enabled = false

During this setup my peer node was not able to connect to node0, then I have checked and found that the default port should be 10997.After this change my issue was resolved.

Recently I had come across a documentation which also stat that the Default should be 10997.
",[],2,2018-11-27 08:50:18,2018-12-18 15:49:35,2018-12-18 15:49:35,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/969,https://github.com/hyperledger/burrow/pull/969,silasdavis,Contract creation nonce for predictable addresses,"This uses the TxHash along with an alternative sequence number within the VM to generate new contract addresses. The vm therefore no longer modifies input account sequence numbers which means the input account sequence number just always goes up by one as a result of: https://github.com/hyperledger/burrow/blob/develop/execution/execution.go#L414  and not every time a contract is created.

Provided the TxHash is unique with high probability then this still avoid collisions in generated addresses. It does mean that generated addresses are not predictable in the same way. We d not currently use this fact, but I am concerned that may be desirable (will look at other EVMs implementations).",[],1,2018-11-21 18:31:03,2018-11-23 16:26:55,2018-11-23 16:49:59,True,2018-11-23 16:26:55,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/968,https://github.com/hyperledger/burrow/pull/968,seanyoung,Proposal,,[],33,2018-11-20 14:48:09,2019-01-04 14:05:36,2019-01-04 14:05:36,True,2019-01-04 14:05:36,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/967,https://github.com/hyperledger/burrow/pull/967,phymbert, [evm] BLOCKHASH opcode,close #909 ,[],2,2018-11-16 14:02:31,2019-01-31 10:16:06,2019-01-31 10:16:06,True,2019-01-31 10:16:06,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/966,https://github.com/hyperledger/burrow/pull/966,seanyoung,Make debugging easier by printing event during deploy,"This debugging solidity much easier. For example, add the following to the contract:

 event Foo(string trace, address owner);

Now at any point you can do:
        emit Foo(""owner"", _owner);
        emit Foo(""ecosystem"", _ecosystem);

And borrow deploy -debug will say:
```shell
*****Executing Job*****
                    
Job Name                                    => testParticipantsManager
Type                                        => Call

                                           
Tried, not found                            abifile => /home/sean/git/blackstone/contracts/src/bin/ParticipantsManagerTest
Found ABI                                   abifile => /home/sean/git/blackstone/contracts/src/bin/ParticipantsManagerTest.bin
ABI Specification (Formulate)               => [{""constant"":false,""inputs"":[],""name"":""testUserAccountSecurity"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[],""name"":""testOrganizationAuthorization"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[],""name"":""testOrganizationsManagement"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[],""name"":""testParticipantsManager"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""}]
Packing Call via ABI                        function => testParticipantsManagerarguments => []
Calling                                     destination => E9C4EAC1CA456AB6C3E3A182191FCE3A62F0F040function => testParticipantsManagerdata => a0edd12c
CallTx                                      Sequence => Address => E9C4EAC1CA456AB6C3E3A182191FCE3A62F0F040Fee => 9999Gas => 1111111111Data => a0edd12cInput => B2736CA2E352761BB98B18CDDDF96E307709A007Amount => 9999
Using mempool signing                       
event LogSystemOwnerChanged                 previousOwner => EF7FBC22B794ADCA15C24B545A375AC973F72C94newOwner => EF7FBC22B794ADCA15C24B545A375AC973F72C94
event Foo                                   trace => ownerowner => 0000000000000000000000000000000000000000
event Foo                                   trace => ecosystemowner => C5CB681D4A97C3048D445F8A7F8888A60B18771F
event LogUserCreation                       id => 1446owner => 0000000000000000000000000000000000000000eventId => AN://user-accountsuser_account_address => D0EB5B19E1FEBF0A1648602762047D4AAAE64D16
event Foo                                   trace => ownerowner => 0000000000000000000000000000000000000000
event Foo                                   trace => ecosystemowner => C5CB681D4A97C3048D445F8A7F8888A60B18771F
event LogUserCreation                       eventId => AN://user-accountsuser_account_address => 1A568B75F0472E365724CA3E8E0430021A269948id => dummyIdowner => 0000000000000000000000000000000000000000
event Foo                                   trace => ownerowner => 0000000000000000000000000000000000000000
event Foo                                   trace => ecosystemowner => C5CB681D4A97C3048D445F8A7F8888A60B18771F
event Foo                                   trace => ownerowner => E9C4EAC1CA456AB6C3E3A182191FCE3A62F0F040
event Foo                                   owner => C5CB681D4A97C3048D445F8A7F8888A60B18771Ftrace => ecosystem
event LogUserCreation                       id => dummyId2owner => E9C4EAC1CA456AB6C3E3A182191FCE3A62F0F040eventId => AN://user-accountsuser_account_address => 5AB856A24F3136CB4E23A12BC64F79AFE1089734
[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 115 117 99 99 101 115 115 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Decoding Raw Result                         => 
Tried, not found                            abifile => /home/sean/git/blackstone/contracts/src/bin/ParticipantsManagerTest
Found ABI                                   abifile => /home/sean/git/blackstone/contracts/src/bin/ParticipantsManagerTest.bin
ABI Specification (Decode)                  => [{""constant"":false,""inputs"":[],""name"":""testUserAccountSecurity"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[],""name"":""testOrganizationAuthorization"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[],""name"":""testOrganizationsManagement"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""},{""constant"":false,""inputs"":[],""name"":""testParticipantsManager"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""}]
call variables:                             => [0xc4201c3da0]
Debugging: success                          
Return Value                                => success
Job Vars                                    => 0,success
Replacement Match Found                     match => $testParticipantsManager
Fixing Variables =>                         var => testParticipantsManagerres => success
```


Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2018-11-14 17:52:26,2018-11-20 12:46:49,2018-11-20 12:46:49,True,2018-11-20 12:46:49,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/965,https://github.com/hyperledger/burrow/pull/965,silasdavis,remove double added,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-11-14 17:51:51,2018-11-14 17:52:08,2018-11-14 17:52:08,True,2018-11-14 17:52:08,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/964,https://github.com/hyperledger/burrow/pull/964,silasdavis,Release 0.23.1,,[],13,2018-11-14 17:48:38,2018-11-14 18:14:59,2018-11-14 18:14:59,True,2018-11-14 18:14:59,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/963,https://github.com/hyperledger/burrow/pull/963,silasdavis,Add solc to docker container,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-11-14 16:14:26,2018-11-14 17:47:10,2018-11-14 17:47:10,True,2018-11-14 17:47:10,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/962,https://github.com/hyperledger/burrow/pull/962,seanyoung,Minors,,[],3,2018-11-14 14:53:04,2018-11-14 15:42:40,2018-11-14 15:42:40,True,2018-11-14 15:42:40,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/961,https://github.com/hyperledger/burrow/pull/961,silasdavis,Prevent SetStorage on non-existent accounts,"This prevents some subsequent errors observed in http://github.com/agreements-network/blackstone that arise from breaking the invariant of only writing storage after accounts have been created.

It also breaks some of our integration tests...",[],2,2018-11-14 12:25:49,2018-11-14 14:50:54,2018-11-14 14:50:54,True,2018-11-14 14:50:54,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/959,https://github.com/hyperledger/burrow/pull/959,silasdavis,Fix docker tagging 2,,[],2,2018-11-10 17:56:56,2018-11-10 19:06:40,2018-11-10 19:06:40,True,2018-11-10 19:06:40,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/958,https://github.com/hyperledger/burrow/pull/958,gregdhill,Fix docker latest release tag,,[],1,2018-11-09 22:07:42,2018-11-10 19:06:19,2018-11-10 19:06:19,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/957,https://github.com/hyperledger/burrow/pull/957,silasdavis,Release 0.23.0,,[],105,2018-11-09 16:52:31,2018-11-09 17:30:47,2018-11-09 17:30:47,True,2018-11-09 17:30:47,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/956,https://github.com/hyperledger/burrow/pull/956,silasdavis,Prepare for release,Signed-off-by: Silas Davis <silas@monax.io>,[],2,2018-11-09 16:41:23,2018-11-09 16:58:48,2018-11-09 16:58:55,True,2018-11-09 16:58:48,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/955,https://github.com/hyperledger/burrow/pull/955,silasdavis,Introuduce single error transmission mechanism,"- Fix various logical errors in EVM
- Deal with various errors previously swallowed in tests
- Upgrade go-hex
- Add unreleased changelog entries

Also: fixes #905 

Signed-off-by: Silas Davis <silas@monax.io>",[],1,2018-11-08 19:15:51,2018-11-09 10:13:49,2019-01-04 11:41:26,True,2018-11-09 10:13:48,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/953,https://github.com/hyperledger/burrow/pull/953,silasdavis,Add EVM state interface,"This change was motivated by issue with STATICCALL, which revealed deeper issues with the state inferfaces as they are used by the VM. Chiefly the fact that the mutable account objects act as yet another (unnecessary and confusing) layer of caching that requires synchronisation between call frames.

To make this clearer I have introduced a direct read/write interface for the EVM that captures the state freshness requirements of the EVM. This also allowed for simplification of the account model transferring some of the functionality of `MutableAccount` to this interface and removing the rather complicated nested accounts structure.",[],2,2018-11-07 13:19:51,2018-11-07 16:49:05,2018-11-07 16:49:05,True,2018-11-07 16:49:05,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/952,https://github.com/hyperledger/burrow/pull/952,seanyoung,Proposal,,[],13,2018-11-04 15:31:25,2018-11-09 15:18:26,2018-11-09 15:18:26,True,2018-11-09 15:18:26,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/951,https://github.com/hyperledger/burrow/pull/951,gregdhill,remaining staticcall tests & add call verification,"checks sync err against call value as edge case 

Signed-off-by: greg <greg.hill@monax.io>",[],1,2018-11-01 16:52:45,2018-11-07 13:21:20,2018-11-07 13:21:20,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/950,https://github.com/hyperledger/burrow/pull/950,siyopao,Fix some broken links,Signed-off-by: Craig Pastro <iamcap7@gmail.com>,[],3,2018-11-01 06:26:54,2018-11-09 16:43:30,2018-11-09 16:43:30,True,2018-11-09 16:43:30,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/949,https://github.com/hyperledger/burrow/pull/949,gregdhill,refactor staticcall tests,Signed-off-by: greg <greg.hill@monax.io>,[],1,2018-10-31 16:46:57,2018-10-31 16:51:13,2018-10-31 16:52:20,True,2018-10-31 16:51:13,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/948,https://github.com/hyperledger/burrow/pull/948,terasum,docs: fix installation instruction typo,,[],1,2018-10-31 03:09:27,2018-10-31 12:12:20,2018-10-31 12:12:20,True,2018-10-31 12:12:19,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/947,https://github.com/hyperledger/burrow/pull/947,seanyoung,Added .sol and .yaml files for test fixture app51-user-account-forwar…,"…d-proxy-pattern

Signed-off-by: Jan Hendrik Scheufen <j.h.scheufen@gmail.com>
Signed-off-by: Sean Young <sean.young@monax.io>",[],3,2018-10-29 11:32:03,2018-10-29 15:12:58,2018-10-29 15:12:58,True,2018-10-29 15:12:58,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/946,https://github.com/hyperledger/burrow/pull/946,gregdhill,tag master release with latest,"Signed-off-by: greg <greg.hill@monax.io>

Fixes #939 ",[],1,2018-10-26 19:53:28,2018-10-29 11:00:45,2018-10-29 12:44:32,True,2018-10-29 11:00:45,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/945,https://github.com/hyperledger/burrow/pull/945,gregdhill,tag master release with latest,"Signed-off-by: greg <greg.hill@monax.io>

Fix for #939",[],1,2018-10-26 19:49:06,2018-10-26 19:49:31,2018-10-26 19:51:52,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/944,https://github.com/hyperledger/burrow/pull/944,gregdhill,Create2 OpCode & Unit Tests,Includes basic support for the [CREATE2 opcode](https://eips.ethereum.org/EIPS/eip-1014).,[],5,2018-10-24 11:23:28,2018-12-04 17:48:40,2018-12-04 17:48:41,True,2018-12-04 17:48:40,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/943,https://github.com/hyperledger/burrow/pull/943,j-h-scheufen,Test fixture for problems with forward proxy pattern,"The implementation of a forward proxy pattern leads to `Error 5: Memory out of bounds` for functions returning a string (most likely this is a problem for all functions returning dynamic types).
This PR adds a test fixture to reproduce the problem.

Signed-off-by: Jan Hendrik Scheufen <j.h.scheufen@gmail.com>",[],1,2018-10-22 18:55:17,2018-10-29 13:00:30,2018-10-29 13:00:30,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/942,https://github.com/hyperledger/burrow/pull/942,silasdavis,Block header,This gets us the full block header in BlockExecution. Along with some tooling related code fixes and upgrade of protoc compiler.,[],5,2018-10-22 17:28:35,2018-10-29 13:19:14,2019-01-04 11:41:26,True,2018-10-29 13:19:13,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/941,https://github.com/hyperledger/burrow/pull/941,gregdhill,add staticall tests,Signed-off-by: greg <greg.hill@monax.io>,[],8,2018-10-22 12:27:23,2018-10-31 16:47:22,2018-10-31 16:48:02,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/940,https://github.com/hyperledger/burrow/pull/940,silasdavis,Implement staticcall and tidy up nested error handling,"This builds on @gregdhill's work and improves our handling of exceptions but catching them as events at the VM level and surfacing into a nested call error structure only later on when necessary. This means that traversing an error/call trace is more standardised and cleans up a few issues with testing this opcode.

The remaining piece of work is to fix up `TestStaticCall` so it generates valid bytecode sequence for the mutating opcodes (i.e. set up their arguments appropriately on the stack) so that the tests will run under the current implementation.

@gregdhill if you do this just PR into this feature branch and we will merge from here. Please also review this!",['gregdhill'],11,2018-10-20 14:25:07,2018-11-07 13:26:54,2018-11-07 13:27:00,True,2018-11-07 13:26:54,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/938,https://github.com/hyperledger/burrow/pull/938,seanyoung,Empty deploy,,[],2,2018-10-17 13:09:11,2018-10-19 15:03:20,2018-10-19 15:03:20,True,2018-10-19 15:03:20,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/937,https://github.com/hyperledger/burrow/pull/937,silasdavis,Fix issue with burrow killing,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-10-16 09:32:59,2018-10-16 09:37:49,2018-10-16 09:37:50,True,2018-10-16 09:37:49,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/936,https://github.com/hyperledger/burrow/pull/936,phymbert,[BIP] BIP2: Identify Transaction,"Initially discussed on Hyperledger Chat, Burrow Contributors channel

Address #933

Signed-off-by: phymbert <pierrick.hymbert@gmail.com>",[],4,2018-10-09 21:11:00,2018-10-29 13:01:23,2018-10-29 13:01:23,True,2018-10-29 13:01:23,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/935,https://github.com/hyperledger/burrow/pull/935,phymbert,[docs] Introduce the Burrow Improvment Proposals (BIPs),"Heavily derived from [Ethereum's EIP1]

Signed-off-by: phymbert <pierrick.hymbert@gmail.com>",[],3,2018-10-09 20:14:32,2018-10-11 18:18:59,2018-10-11 18:18:59,True,2018-10-11 18:18:59,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/934,https://github.com/hyperledger/burrow/pull/934,phymbert,[docs] Improve seed mode quick start,"Add precision on seed mode from @silasdavis.
Fix wrong config for validator #3. Configure a non-seed-mode as seed example.

Solidity highlight syntax in docs smart contract example.

Signed-off-by: phymbert <pierrick.hymbert@gmail.com>",[],1,2018-10-09 18:31:35,2018-10-09 21:01:46,2018-10-09 21:01:46,True,2018-10-09 21:01:46,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/932,https://github.com/hyperledger/burrow/pull/932,seanyoung,Allow reading abi from abi file or bin file and merging of abis,"This makes handling of abis simpler in vent.

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2018-10-08 10:19:06,2018-10-08 11:52:13,2018-10-08 11:52:14,True,2018-10-08 11:52:13,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/931,https://github.com/hyperledger/burrow/pull/931,phymbert,"[docs] Updating docs with multiple validators config, initialize docs folder structure","Hello, this PR to introduce documentation quick start and initiate documentation movement.

I took the liberty to move some part of the README.md to the docs folder (install, quick config and logging). Tell me if I have to revert.

I have also tried to add some goodies on the main page, maybe adding Line Of Code is not pertinent when dependencies are vendoring.

Move quick start steps in main README.md to docs folder.

Signed-off-by: phymbert <pierrick.hymbert@gmail.com>",['silasdavis'],5,2018-10-05 19:30:57,2018-10-08 21:19:57,2018-10-08 21:19:57,True,2018-10-08 21:19:57,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/930,https://github.com/hyperledger/burrow/pull/930,seanyoung,Record event name and allow fast lookup on eventid,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2018-10-05 14:38:34,2018-10-05 15:34:47,2018-10-05 15:34:47,True,2018-10-05 15:34:47,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/929,https://github.com/hyperledger/burrow/pull/929,gregdhill,STATICCALL,Provides EVM functionality for the `0xfa` opcode (#594) by way of a new vm flag `inStaticCall` to enforce read-only calls at runtime. This also contains unit tests for all state changing operations as defined in the [proposal](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-214.md).,[],11,2018-10-05 10:07:50,2018-10-20 14:25:51,2018-10-20 14:25:51,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/928,https://github.com/hyperledger/burrow/pull/928,seanyoung,abi: Ensure event signature ID is available as EventID member,"When reading the abi, calculate the signature ID and add test cases.

This is done so we can select the correct event abi based on event
signature id which is passed as log.Topics[0] as long the the event
is not declared anonymous.

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2018-10-05 09:35:33,2018-10-05 09:47:57,2018-10-05 09:47:57,True,2018-10-05 09:47:57,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/927,https://github.com/hyperledger/burrow/pull/927,phymbert,[consensus] Expose Tendermint config CreateEmptyBlocks and CreateEmptyBlocksInterval,"fix #923

Signed-off-by: phymbert <pierrick.hymbert@gmail.com>",[],3,2018-10-05 09:28:56,2018-10-17 15:22:02,2018-10-17 15:22:02,True,2018-10-17 15:22:02,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/926,https://github.com/hyperledger/burrow/pull/926,phymbert,"[EVM] dynamically allocate stack depth, enforce call stack depth similarly","fix #386 

Signed-off-by: phymbert <pierrick.hymbert@gmail.com>",[],8,2018-10-04 15:12:35,2018-10-16 10:52:21,2018-10-16 10:52:22,True,2018-10-16 10:52:21,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/925,https://github.com/hyperledger/burrow/pull/925,gregdhill,implement staticcall,"#594 

Signed-off-by: greg <greg.hill@monax.io>",[],1,2018-10-02 14:38:37,2018-10-02 14:39:34,2018-10-03 13:33:44,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/924,https://github.com/hyperledger/burrow/pull/924,phymbert,[consensus] Authorized only node sync / Peers filter support,"Ability to lock down a network syncing with unauthorized peers. Currently any node that can connect to the network will begin syncing and be able to pull the state. However, for a lot of use cases this is not desired and what is more desired is a network setup where validators only sync with validators/fullNodes that have been authorized.

Designed to support static configuration or dynamic peers ids/addresses provided at peer handkshaking time.

fix #669",[],2,2018-10-01 19:32:59,2018-10-03 13:49:42,2018-10-03 13:49:42,True,2018-10-03 13:49:42,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/922,https://github.com/hyperledger/burrow/pull/922,phymbert,[core] Expose kernel Transactor as public field,"Expose kernel Transactor as other interfaces (State, Node, Blockchain) to allow programmatic extension of the Kernel by other projects

fix #921 

Signed-off-by: phymbert <pierrick.hymbert@gmail.com>",[],4,2018-09-29 07:02:21,2018-10-15 17:22:19,2018-10-15 17:22:19,True,2018-10-15 17:22:19,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/920,https://github.com/hyperledger/burrow/pull/920,seanyoung,Do not open connection for each meta job,Signed-off-by: Sean Young <sean.young@monax.io>,[],4,2018-09-25 14:00:07,2018-09-26 11:48:12,2018-09-26 11:48:12,True,2018-09-26 11:48:12,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/918,https://github.com/hyperledger/burrow/pull/918,seanyoung,Merge for v0.22.0,,[],59,2018-09-21 16:45:32,2018-09-21 16:52:50,2018-09-21 16:52:50,True,2018-09-21 16:52:50,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/917,https://github.com/hyperledger/burrow/pull/917,seanyoung,Tm0.24,,[],5,2018-09-20 21:17:34,2018-09-21 16:25:52,2018-09-24 09:39:01,True,2018-09-21 16:25:52,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/916,https://github.com/hyperledger/burrow/pull/916,seanyoung,"An empty bytes32 literal can be written as """" or 0",Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2018-09-18 12:20:33,2018-09-19 13:39:29,2018-09-19 13:39:29,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/915,https://github.com/hyperledger/burrow/pull/915,seanyoung,nil pointer exception when name does not exist,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2018-09-17 16:06:34,2018-09-17 16:13:02,2018-09-17 16:13:02,True,2018-09-17 16:13:02,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/914,https://github.com/hyperledger/burrow/pull/914,phymbert,Minor typo fix in error message when account address is not found,Signed-off-by: phymbert <pierrick.hymbert@gmail.com>,[],1,2018-09-16 09:34:37,2018-09-17 14:06:19,2018-09-17 14:06:19,True,2018-09-17 14:06:19,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/913,https://github.com/hyperledger/burrow/pull/913,seanyoung,Reduce the number of concurrent solc's we run,"This is causing file systems errors on Mac.

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2018-09-14 12:34:01,2018-09-14 12:38:33,2018-09-14 12:38:33,True,2018-09-14 12:38:33,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/912,https://github.com/hyperledger/burrow/pull/912,silasdavis,Refactor state into refs and tree.,"This prepares the way for various state manipulations and introduces a top-level storage package that takes makes some steps towards Cosmos SDK compatibility. Changes included:

- `Prefix` and `KeyFormat` types for handling prefixed lexicographic keys consistently
- A `CacheDB` that wraps all changes within a block into a single DB transaction - i.e. Batch
- A separate 'tree' and 'refs' storage in state. The former describes those values that contribute to the state hash and the latter does not - this gives us more latitude in disabling, for example, block storage or running nodes that opt to store somewhat different derived data whilst agreeing the the core account state.
- Upgrade IAVL dependency to version including: https://github.com/tendermint/iavl/pull/107 

Some changes that may follow in a future PR:

- Content address account code for some deduplication
- Content address blocks to allow their hash to be stored in main tree for consistency (not sure about this one)
- Make block storage configurable
- Consider using a Trie implementation in various places including caches for some reduced string -> []byte copying.
 ",[],5,2018-09-14 10:33:10,2018-09-19 12:10:45,2019-01-04 11:42:14,True,2018-09-19 12:10:45,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/911,https://github.com/hyperledger/burrow/pull/911,seanyoung,Better support revert with no reason,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2018-09-12 16:21:00,2018-09-12 17:01:45,2018-09-12 17:01:46,True,2018-09-12 17:01:45,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/910,https://github.com/hyperledger/burrow/pull/910,seanyoung,Bigint,,[],3,2018-09-12 12:27:15,2018-09-12 12:44:29,2018-09-12 12:44:29,True,2018-09-12 12:44:29,gregdhill,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/907,https://github.com/hyperledger/burrow/pull/907,seanyoung,Fix abi decoding of bytes32,"Note that any indexed string or array will be stored as a hash, so
we need to make that clear. The new Hashed field marks that.

We might want to store strings in bytes32 so that it does not get
hashed. If this is the case then use code similar to the test
TestEventEmitterBytes32isString.

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2018-09-10 14:02:52,2018-09-10 14:16:06,2018-09-10 14:16:06,True,2018-09-10 14:16:06,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/906,https://github.com/hyperledger/burrow/pull/906,compleatang,Update README.md,"fix install burrow in readme

Signed-off-by: Casey Kuhlman <casey@monax.io>",[],1,2018-09-05 12:33:14,2018-09-05 13:49:11,2018-11-09 16:40:41,True,2018-09-05 13:49:11,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/904,https://github.com/hyperledger/burrow/pull/904,puneetverma05,Update command name | README.md,UPDATE: command name 'serve' to 'start'.,[],1,2018-09-04 08:25:47,2018-09-04 11:34:43,2018-09-04 11:34:43,True,2018-09-04 11:34:43,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/903,https://github.com/hyperledger/burrow/pull/903,puneetverma05,Update command name | README.md,"UPDATE: command name 'serve' to 'start'.
Severity: Low
Signed-off-by: Puneet Verma <puneet@saanvis.com>",[],1,2018-09-04 08:12:04,2018-09-04 08:13:24,2018-09-04 08:21:01,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/902,https://github.com/hyperledger/burrow/pull/902,puneetverma05,Update command name | README.md,"UPDATE: command name 'serve' to 'start'.
Severity: Low
Signed-off-by: Puneet Verma <puneet@saanvis.com>",[],1,2018-09-04 07:54:00,2018-09-04 08:04:28,2018-09-04 08:04:33,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/901,https://github.com/hyperledger/burrow/pull/901,seanyoung,burrow deploy should show revert message and fail job,"```
   *****Executing Job*****
                    
Job Name                                    => doRevert

                                           
transaction reverted                        Revert Message => arbeidsongeschiktheidsverzekeringsmaatschappij
Call error: Error 16: Execution reverted
```",[],1,2018-08-31 11:22:25,2018-08-31 12:20:33,2018-08-31 12:20:33,True,2018-08-31 12:20:33,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/900,https://github.com/hyperledger/burrow/pull/900,silasdavis,Minor cleanup of execution tests,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-08-29 14:38:58,2018-08-29 15:00:56,2018-08-29 15:00:56,True,2018-08-29 15:00:56,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/898,https://github.com/hyperledger/burrow/pull/898,seanyoung,"Fix solidity warnings, make tests use abi and add event/revert abi functionality",Signed-off-by: Sean Young <sean.young@monax.io>,[],4,2018-08-28 11:56:32,2018-08-30 16:19:08,2018-08-30 16:19:08,True,2018-08-30 16:19:08,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/897,https://github.com/hyperledger/burrow/pull/897,seanyoung,Limit the number of concurrent solidity compilers,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2018-08-24 17:36:26,2018-08-27 09:34:49,2018-08-27 09:34:49,True,2018-08-27 09:34:49,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/896,https://github.com/hyperledger/burrow/pull/896,seanyoung,Set storage to 0 does not work,"fixes #847 

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2018-08-24 12:29:18,2018-08-24 18:19:39,2018-08-24 18:19:39,True,2018-08-24 18:19:38,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/894,https://github.com/hyperledger/burrow/pull/894,compleatang,fix reference to local_version to properly source,Signed-off-by: Casey Kuhlman <casey@monax.io>,[],1,2018-08-23 13:51:54,2018-08-23 14:38:04,2019-02-06 12:14:31,True,2018-08-23 14:38:04,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/893,https://github.com/hyperledger/burrow/pull/893,compleatang,fix docker tagging,,[],1,2018-08-23 13:32:35,2018-08-23 13:42:23,2018-08-23 13:42:23,True,2018-08-23 13:42:23,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/892,https://github.com/hyperledger/burrow/pull/892,compleatang,fixup docker login to use dockers established paradigm and login to quay,,[],1,2018-08-23 13:08:17,2018-08-23 13:14:21,2018-08-23 13:14:21,True,2018-08-23 13:14:21,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/891,https://github.com/hyperledger/burrow/pull/891,seanyoung,Fix compiling solidity from a different directory,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2018-08-23 12:52:39,2018-08-23 12:56:48,2018-08-23 12:56:48,True,2018-08-23 12:56:48,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/890,https://github.com/hyperledger/burrow/pull/890,seanyoung,Early build,,[],4,2018-08-22 15:27:28,2018-08-23 09:36:54,2018-08-23 09:36:54,True,2018-08-23 09:36:54,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/889,https://github.com/hyperledger/burrow/pull/889,silasdavis,"Update dump to use amino, fix dev release, and stop non-deterministic GovTx execution","The biggest issue this addresses is using `KeyClient` -  which is entirely node depedent to change the outcome of a `GovTx` -- oops.

Also cleans up some stuff, improves logging, fixes dev release.",[],2,2018-08-22 11:09:26,2018-08-23 16:39:30,2018-08-23 16:39:30,True,2018-08-23 16:39:30,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/888,https://github.com/hyperledger/burrow/pull/888,silasdavis,Fix docker login,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-08-21 12:13:13,2018-08-21 12:18:48,2018-08-21 12:18:48,True,2018-08-21 12:18:48,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/887,https://github.com/hyperledger/burrow/pull/887,silasdavis,Try to release 0.21.0 again,,[],4,2018-08-21 11:47:31,2018-08-21 11:55:59,2018-08-21 11:55:59,True,2018-08-21 11:55:59,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/886,https://github.com/hyperledger/burrow/pull/886,silasdavis,Fix validation messages and circleci,Signed-off-by: Silas Davis <silas@monax.io>,[],4,2018-08-21 11:19:52,2018-08-21 11:47:10,2018-08-21 11:47:10,True,2018-08-21 11:47:10,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/885,https://github.com/hyperledger/burrow/pull/885,silasdavis,Upgrade to Tendermint 0.23.0,,[],3,2018-08-21 10:19:44,2018-08-21 10:37:12,2019-02-18 19:02:13,True,2018-08-21 10:37:12,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/884,https://github.com/hyperledger/burrow/pull/884,silasdavis,Rename RPC/TM and add safety to metrics,Supercedes #881 ,[],1,2018-08-21 08:12:00,2018-08-21 08:18:23,2018-08-21 08:18:23,True,2018-08-21 08:18:23,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/883,https://github.com/hyperledger/burrow/pull/883,silasdavis,Sort out docker release,,[],4,2018-08-20 20:30:56,2018-08-21 08:10:28,2018-08-21 08:10:28,True,2018-08-21 08:10:28,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/882,https://github.com/hyperledger/burrow/pull/882,compleatang,add proper docker labels per container label schema; s/monax/burrow/g on users,,[],1,2018-08-20 14:41:30,2018-08-21 07:46:38,2018-08-22 08:15:20,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/881,https://github.com/hyperledger/burrow/pull/881,compleatang,fix panic in metrics collector when no blocks have been formed in col…,…lection window,[],1,2018-08-20 14:23:57,2018-08-21 08:12:19,2018-08-22 08:15:35,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/880,https://github.com/hyperledger/burrow/pull/880,seanyoung,Changes to burrow deploy to generate devdocs,,[],3,2018-08-20 12:27:09,2018-08-20 20:36:07,2018-08-20 20:36:07,True,2018-08-20 20:36:07,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/879,https://github.com/hyperledger/burrow/pull/879,silasdavis,Release 0.21.0,,[],23,2018-08-20 11:35:47,2018-08-21 11:23:09,2018-08-21 11:23:09,True,2018-08-21 11:23:09,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/878,https://github.com/hyperledger/burrow/pull/878,silasdavis,Upgrade IAVL  for 0.20.2 release,"Previous versions of IAVL not only load previous version root references but also every node from disk. This ends up being a costly (and unnecessary) process that causes chain load times from a few weeks of state to take tens of minutes.

Updating to IAVL 0.10.0 fixes this by providing true lazy loading of roots - as well as some nice features around immutable trees and better performance with old verions. ",[],3,2018-08-20 10:59:45,2018-08-20 11:34:38,2018-08-20 11:34:39,True,2018-08-20 11:34:38,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/877,https://github.com/hyperledger/burrow/pull/877,silasdavis,Sync up release with master and don't push dev images,Currently have no way to delete image from Hyperledger repo so stop pushing dev ones.,[],4,2018-08-17 15:35:22,2018-08-20 19:39:48,2018-09-05 13:55:05,True,2018-08-20 19:39:48,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/876,https://github.com/hyperledger/burrow/pull/876,silasdavis,Remove docker push from release,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-08-17 13:46:42,2018-08-17 13:46:51,2018-08-17 13:46:51,True,2018-08-17 13:46:51,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/875,https://github.com/hyperledger/burrow/pull/875,silasdavis,Missing brackets on release,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-08-17 13:17:39,2018-08-17 13:17:48,2018-08-17 13:17:48,True,2018-08-17 13:17:48,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/874,https://github.com/hyperledger/burrow/pull/874,silasdavis,Master,,[],7,2018-08-17 13:17:21,2018-08-17 13:18:07,2018-08-17 13:18:07,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/873,https://github.com/hyperledger/burrow/pull/873,silasdavis,Release,,[],6,2018-08-17 13:17:13,2018-08-17 13:18:18,2018-08-17 13:18:18,True,2018-08-17 13:18:18,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/872,https://github.com/hyperledger/burrow/pull/872,silasdavis,Release 0.20.1,,[],2,2018-08-17 13:05:13,2018-08-17 13:05:24,2018-08-17 13:05:24,True,2018-08-17 13:05:24,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/871,https://github.com/hyperledger/burrow/pull/871,silasdavis,Missed checkout for release,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-08-17 13:04:41,2018-08-17 13:04:49,2018-08-17 13:04:49,True,2018-08-17 13:04:49,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/870,https://github.com/hyperledger/burrow/pull/870,silasdavis,Release 0.20.1,,[],65,2018-08-17 12:46:12,2018-08-17 12:55:26,2018-08-17 12:55:26,True,2018-08-17 12:55:26,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/869,https://github.com/hyperledger/burrow/pull/869,silasdavis,Added external-address option,"Also made various options available from configure and start.

Plus finalise for 0.20.1 release today.
",[],2,2018-08-17 12:08:37,2018-08-17 12:47:16,2018-08-17 12:47:16,True,2018-08-17 12:47:16,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/868,https://github.com/hyperledger/burrow/pull/868,silasdavis,Prepare 0.20.1 release,,[],2,2018-08-16 21:04:20,2018-08-16 21:21:35,2018-08-16 21:21:35,True,2018-08-16 21:21:35,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/867,https://github.com/hyperledger/burrow/pull/867,silasdavis,Use hyperledger/burrow and release binaries using goreleaser,,[],1,2018-08-16 15:10:04,2018-08-16 17:50:52,2018-08-16 17:50:52,True,2018-08-16 17:50:52,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/864,https://github.com/hyperledger/burrow/pull/864,silasdavis,Make simulated call use same path as call_context,"This means revert can be handled correctly by JS - should fix: https://github.com/monax/bosmarmot/pull/120 

Also remove bos integration test and just test burrow-js

also fixes #483 ",[],2,2018-08-16 12:35:53,2018-08-16 13:12:25,2018-08-16 13:12:25,True,2018-08-16 13:12:25,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/863,https://github.com/hyperledger/burrow/pull/863,silasdavis,Upgrade Tendermint to 0.22.8,"Also changed signature to carry around its `CurveType`

Standardised on `PublicKey.PublicKey` `PrivateKey.PrivateKey` `Signature.Signature` for the field containing the raw bytes. It's consistent across types and once you get over the stutter it makes sense. This did stop me from having a `PublicKey()` function on `PublicKey` which in turned stopped my from being able to treat it as an `Addressable` which I was mostly doing as a convenience in the validator package. I've reworked that to accept `PublicKey` directly but iterate over `Addressable` which achieves the same memoisation.

",[],2,2018-08-16 10:50:13,2018-08-16 11:26:18,2018-08-16 12:38:11,True,2018-08-16 11:26:18,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/862,https://github.com/hyperledger/burrow/pull/862,seanyoung,move snatives to burrow executable,Signed-off-by: Sean Young <sean.young@monax.io>,[],2,2018-08-16 10:39:58,2018-08-16 16:26:48,2018-08-16 16:26:48,True,2018-08-16 16:26:48,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/861,https://github.com/hyperledger/burrow/pull/861,silasdavis,Exclude events from TxExecutions that were exceptions,,[],1,2018-08-15 21:58:39,2018-08-16 09:35:53,2018-08-16 09:35:53,True,2018-08-16 09:35:53,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/860,https://github.com/hyperledger/burrow/pull/860,fulldecent,Add test 49 returndatacopy,https://github.com/hyperledger/burrow/pull/767#issuecomment-413200966,[],2,2018-08-15 20:31:08,2018-08-17 06:04:38,2018-08-17 06:04:38,True,2018-08-17 06:04:38,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/859,https://github.com/hyperledger/burrow/pull/859,silasdavis,Refactor rpc/tm to rpcinfo changing various names.,"Add more useful information to /status /network and /consensus
Blockchain now records when it last committed a block as well as the
block time itself. Status can be used for a liveness probed with
block_seen_time_within param and block_time_within  for readiness

fixes #809 ",[],1,2018-08-15 17:17:39,2018-08-15 18:03:24,2018-08-15 18:03:24,True,2018-08-15 18:03:23,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/856,https://github.com/hyperledger/burrow/pull/856,silasdavis,Update relic and add dates,"I updated relic to follow some recommendations from https://keepachangelog.com/en/1.0.0/: https://github.com/monax/relic/compare/v1.1.0...v2.0.0

This updates to that version adding some dates and github compare links between our versions. Going forward we can try and follow the keepachangelog style with the same headers of:

- Changed
- Deprecated
- Added
- Removed
- Fixed

This will help those running validators to keep up to date",[],2,2018-08-15 09:46:50,2018-08-15 09:52:15,2018-08-15 09:52:15,True,2018-08-15 09:52:15,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/855,https://github.com/hyperledger/burrow/pull/855,silasdavis,Support log capture dumping and stop keys writing to home dir,"This builds on the existing capture logger and logging signals to enable the ability to dump logs or when asked for by the appropriate unix signal. We have:

- `SIGUSR1` -> `SyncSignal` -> causes file and `CaptureLogger`s to flush and any stream loggers with `Sync() error`-able writers to sync
- `SIGHUP` -> `ReloadSignal` -> causes `FileLogger` to reload file (supporting log rotation)

Example configuration can be generated with:
```go
burrow configure -l capture,hello,10000,file,/dev/termination-log,json,top,include-any,info,stderr,json
```

Also adds a bit of logging and fixes a couple of potential logging race conditions.",[],2,2018-08-14 14:37:19,2018-08-14 16:22:18,2018-08-14 16:22:18,True,2018-08-14 16:22:18,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/854,https://github.com/hyperledger/burrow/pull/854,seanyoung,Move to new abi,Note that the breaking change is what causes the bosmarmot test to fail.,[],7,2018-08-14 13:48:41,2018-08-15 18:14:47,2018-08-15 18:14:47,True,2018-08-15 18:14:47,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/852,https://github.com/hyperledger/burrow/pull/852,seanyoung,Bos transplant,Move bos into burrow and rename to burrow deploy. Note that epm.yaml is also renamed to deploy.yaml.,[],4,2018-08-09 12:31:40,2018-08-14 14:25:59,2018-08-14 14:25:59,True,2018-08-14 14:25:59,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/849,https://github.com/hyperledger/burrow/pull/849,silasdavis,"Add test for revert, return nested errors, and convert non-revert errors","to actual GRPC error returns (execepting REVERT errors)

Signed-off-by: Silas Davis <silas@monax.io>",[],1,2018-08-07 14:57:41,2018-08-07 15:51:39,2018-08-07 15:51:39,True,2018-08-07 15:51:39,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/845,https://github.com/hyperledger/burrow/pull/845,silasdavis,"Return TxExecution when reverted error, fix logging non-errors",Signed-off-by: Silas Davis <silas@monax.io>,[],2,2018-07-30 17:04:34,2018-07-31 11:00:11,2019-01-04 11:41:26,True,2018-07-31 11:00:11,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/844,https://github.com/hyperledger/burrow/pull/844,seanyoung,Fix keys import to match keys export,Signed-off-by: Sean Young <sean.young@monax.io>,[],2,2018-07-30 08:15:47,2018-07-30 13:04:59,2018-07-30 13:04:59,True,2018-07-30 13:04:59,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/843,https://github.com/hyperledger/burrow/pull/843,silasdavis,Governance fixes and tweaks,"The biggest thing this addresses is the fact that sequence checking was omitted from `GovernanceContext` and as such there is no replay protection. In addressing this I've made it so that such an omission could not happen again by handling tx inputs and their sequence number generically at the `executor` rather than in each individual execution `Context`.

 This also reintroduces the lazy-loading/harvesting of public keys to associate with accounts as and when the chain receives txs signed by an account (and so first has access to its verifiable public key).",[],4,2018-07-28 16:11:11,2018-07-30 14:36:18,2018-07-30 14:36:28,True,2018-07-30 14:36:18,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/842,https://github.com/hyperledger/burrow/pull/842,silasdavis,Reintroduce public key setting and add protobuf for JS,,[],2,2018-07-27 14:28:22,2018-07-27 14:42:31,2018-07-27 14:42:31,True,2018-07-27 14:42:31,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/841,https://github.com/hyperledger/burrow/pull/841,silasdavis,Release lock earlier in BroadcastTxSync and support mempool signing in,"BroadcastTxAsync

Signed-off-by: Silas Davis <silas@monax.io>",[],1,2018-07-24 22:49:29,2018-07-25 11:06:11,2018-07-25 11:06:11,True,2018-07-25 11:06:11,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/840,https://github.com/hyperledger/burrow/pull/840,silasdavis,Slacken Resubscribe timeout for circle,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-07-24 13:04:44,2018-07-24 13:09:11,2018-07-24 13:09:11,True,2018-07-24 13:09:10,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/839,https://github.com/hyperledger/burrow/pull/839,silasdavis,Release 0.20.0,,[],43,2018-07-24 12:42:31,2018-07-24 12:56:21,2018-07-24 12:56:21,True,2018-07-24 12:56:21,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/838,https://github.com/hyperledger/burrow/pull/838,silasdavis,Fix duplicated docs,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-07-24 12:41:51,2018-07-24 12:48:41,2018-07-24 12:48:41,True,2018-07-24 12:48:41,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/837,https://github.com/hyperledger/burrow/pull/837,silasdavis,Prepare for 0.20.0 release,,[],1,2018-07-24 11:47:11,2018-07-24 12:32:34,2018-07-24 12:32:34,True,2018-07-24 12:32:34,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/836,https://github.com/hyperledger/burrow/pull/836,compleatang,upgrade bos version used for integration tests,,[],1,2018-07-24 09:12:13,2018-07-24 09:25:50,2018-07-24 09:56:51,True,2018-07-24 09:25:50,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/835,https://github.com/hyperledger/burrow/pull/835,silasdavis,Fix various test flakes,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-07-24 08:59:14,2018-07-24 09:51:21,2018-07-24 09:51:22,True,2018-07-24 09:51:21,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/834,https://github.com/hyperledger/burrow/pull/834,silasdavis,Tweaks for bos integration,"to QueryServer for use by both and others. Status now serves as
healthcheck with blockWithin parameter

Signed-off-by: Silas Davis <silas@monax.io>",[],4,2018-07-23 14:40:30,2018-07-24 08:44:33,2018-07-24 08:44:33,True,2018-07-24 08:44:33,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/833,https://github.com/hyperledger/burrow/pull/833,silasdavis,Check ChainID in Verify!,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-07-23 12:34:19,2018-07-23 12:40:05,2018-07-23 12:40:05,True,2018-07-23 12:40:05,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/832,https://github.com/hyperledger/burrow/pull/832,seanyoung,Add 0.20.0 changelog,Signed-off-by: Sean Young <sean.young@monax.io>,[],1,2018-07-23 12:26:40,2018-07-24 08:10:25,2018-07-24 08:10:25,True,2018-07-24 08:10:25,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/831,https://github.com/hyperledger/burrow/pull/831,silasdavis,Remove redundant validator from SendTx,Also code errors and improve sequence number error and prevent overpayment in SendTx,[],1,2018-07-20 09:29:09,2018-07-20 10:33:37,2018-09-05 13:55:05,True,2018-07-20 10:33:37,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/830,https://github.com/hyperledger/burrow/pull/830,silasdavis,Implemented GovTx,"This adds support and test for a `GovTx` which allows fairly arbitrary updates to be made to accounts by accounts with the (previously unused) `Root` permission. Currently it simply allows any account with `Root` to make the changes but it should be a relatively modest extension to make this based on a multi-sig threshold, and a further extension to build governance voting. This allows us to start using the dynamics of changing accounts post genesis. It allows you to change in bulk (i.e. you can supply multiple account updates):

- Account power balance (i.e. Tendermint voting power)
- Account native balance
- Account permissions
- Account roles

To follow will be the ability to update account code (bulk deploy) making way for a mechanism for network upgrades.

Related changes also included are:

- Upgrade to Tendermint 0.22.4
- Added mutliple typed account balances (currently only `Native` and `Power` type are implemented and currently only on `TemplateAccount`, but may make it to `Account` model proper
- Validator `Set` and `Ring` objects for modelling validator changes and bounding flow of power to less than one third. `Ring` holds a sliding window of deltas and cumulative powers that can be used to calculate a variety of rolling averages of validator power and availability which will be needed for fee calculation. It also serves as a cache/accumulator for validator power changes and gives us a history of validator changes for some consistency checks against Tendermint (checks are made in the ABCI App)
- Validator history method added to rpcquery service 

The next change will include command line tooling for building declarative 'make my chain this way' transactions via an extension to `burrow spec` and a new CLI command for submitting transactions from the command line (including and particularly for `GovTx`).

The next iteration of the the governance execution will be to provide an 'online' multisig whereby parties can submit candidate `GovTx` transactions signed by themselves that are only executed when other parties choose to also sign them. This will need a pending transaction service probably on rpcgovernance.

We also need to layer policies around bonding and unbonding on top of `GovTx`.

",[],5,2018-07-19 22:49:15,2018-07-23 12:16:56,2018-07-23 12:16:56,True,2018-07-23 12:16:56,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/829,https://github.com/hyperledger/burrow/pull/829,silasdavis,"Massively enhanced GRPC services including NameReg, transaction index, blocks service","This PR has at its core an extension and refactoring of our GRPC services. There are three associated decisions that mean it has ended up as large as it is:

1. I have integrated gogoproto protobuf types tightly with many of our major types - this means everything eats the same dogfood internally as our RPC and gives us consistent models for most things
2. I have eliminate v0 completely and tm methods for events and broadcast - which entailed porting tests over to the new structure
3. I have stripped much of the event system complexity AND pulled in Tendermint's pubsub with a change to make it non-blocking

All of the RPC now runs off execution events called `BlockExecution` and `TxExecution` that mirror the Tendermint objects but contain the full execution trace as burrow sees it. These objects are meant to be self-describing and contain most data useful to querier. 

Rather than moving broken or redundant code I have tried to clean it up with the aim of making our breaking RPC changes all at once.",[],5,2018-07-08 22:16:49,2018-07-19 18:30:06,2018-09-05 13:55:05,True,2018-07-19 18:30:05,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/828,https://github.com/hyperledger/burrow/pull/828,seanyoung,Add new yaml function to burrow configure templating,"Now the the genesis spec can be generated as yaml, or yaml as a string.

<< yaml .Config >>

This would would generate the genesis spec as yaml; alternatively, it
can be string escaped by using the json function:

<< json (yaml .Config) >>

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2018-07-04 15:11:22,2018-07-08 22:07:28,2018-07-08 22:07:28,True,2018-07-08 22:07:28,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/827,https://github.com/hyperledger/burrow/pull/827,compleatang,move dockerfile,,[],1,2018-07-02 22:37:25,2018-07-03 11:59:53,2018-07-03 12:05:33,True,2018-07-03 11:59:53,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/826,https://github.com/hyperledger/burrow/pull/826,silasdavis,Provide ability to set value to transfer in Transact* methods,,[],1,2018-07-02 11:18:44,2018-07-02 13:36:11,2018-07-02 13:36:11,True,2018-07-02 13:36:11,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/825,https://github.com/hyperledger/burrow/pull/825,silasdavis,Improve solidity fixture handling and fix off by one in execution events,Signed-off-by: Silas Davis <silas@monax.io>,[],2,2018-06-28 10:46:34,2018-06-28 11:28:04,2018-07-19 08:56:48,True,2018-06-28 11:28:04,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/823,https://github.com/hyperledger/burrow/pull/823,silasdavis,Don't panic on nil Bounds,Also tweak event test to be more useful documentation for events consumer,[],2,2018-06-26 21:39:53,2018-06-27 11:16:02,2018-06-27 11:16:02,True,2018-06-27 11:16:02,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/822,https://github.com/hyperledger/burrow/pull/822,silasdavis,Merge Burrow 0.19.0 to master for release,:tada: ,[],52,2018-06-26 18:31:58,2018-06-26 18:57:36,2018-06-26 18:57:36,True,2018-06-26 18:57:36,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/821,https://github.com/hyperledger/burrow/pull/821,silasdavis,Upgrade Tendemint to 0.21.0 add tests for EventsServer,This PR upgrade Tendermint to 0.21.0 along with other deps. Also adds tests for various events types emitted from `EventsServer`.,[],2,2018-06-26 17:33:45,2018-06-26 17:42:19,2018-06-26 17:42:19,True,2018-06-26 17:42:19,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/820,https://github.com/hyperledger/burrow/pull/820,silasdavis,Add healthcheck endpoint and prepare for release,"This PR primarily adds an endpoint suitable for implementing healthchecks, liveness probes, and readiness probes in rpc/TM as `last_block_info`. It reads data directly from memory and does not suffer from any possible database or lock contention like `status`. It also supports returning a 500 error if no blocks have been seen sufficiently recently.

When called bare it just returns the last block time, hash, and height: 
```javascript
http ""localhost:46657/last_block_info""                
HTTP/1.1 200 OK
Access-Control-Allow-Credentials: true
Access-Control-Allow-Origin: 
Access-Control-Expose-Headers: X-Server-Time
Content-Length: 196
Content-Type: application/json
Date: Tue, 26 Jun 2018 14:23:33 GMT
X-Server-Time: 1530023013

{
    ""id"": """",
    ""jsonrpc"": ""2.0"",
    ""result"": {
        ""LastBlockHash"": ""81B11B917B1C8F9858127743A0F72B76474AA263"",
        ""LastBlockHeight"": 3313,
        ""LastBlockTime"": ""2018-06-26T15:23:32+01:00""
    }
}
```
When called with the parameter `block_within` which takes a `time.ParseDuration()` parsesable string then this endpoint will return with the same result as above if the last block committed has a `BlockTime` that falls within that duration counting back from now. If it does then the status is 200:
```javascript
http "":46657/last_block_info?block_within=5s""
HTTP/1.1 200 OK
Access-Control-Allow-Credentials: true
Access-Control-Allow-Origin: 
Access-Control-Expose-Headers: X-Server-Time
Content-Length: 196
Content-Type: application/json
Date: Tue, 26 Jun 2018 14:21:47 GMT
X-Server-Time: 1530022907

{
    ""id"": """",
    ""jsonrpc"": ""2.0"",
    ""result"": {
        ""LastBlockHash"": ""C7E38544D8DEBD01B04A1E69C1FB75BA4CB538B2"",
        ""LastBlockHeight"": 3211,
        ""LastBlockTime"": ""2018-06-26T15:21:46+01:00""
    }
}
```
If not then it returns an error with status code 500. The last block info is embedded in the error (since we cannot return an error and result under the JSONRPC 2.0 spec:
```javascript
http ""localhost:46657/last_block_info?block_within=1ns""
HTTP/1.1 500 Internal Server Error
Access-Control-Allow-Credentials: true
Access-Control-Allow-Origin: 
Access-Control-Expose-Headers: X-Server-Time
Content-Length: 350
Content-Type: application/json
Date: Tue, 26 Jun 2018 14:28:45 GMT
X-Server-Time: 1530023325

{
    ""error"": {
        ""code"": -32603,
        ""data"": ""no block committed within the last 1ns (cutoff: 2018-06-26T15:28:45+01:00), last block info: {\""LastBlockHeight\"":3611,\""LastBlockTime\"":\""2018-06-26T15:28:44+01:00\"",\""LastBlockHash\"":\""197188B37FC8E5ABD0117B49F9C7180F35A43A4F\""}"",
        ""message"": ""Internal Error""
    },
    ""id"": """",
    ""jsonrpc"": ""2.0""
}
```
We used a 1 nanosecond `block_within` interval in the above but the idea is the network operator can set the parameter to whatever they deem reasonable to probe either liveness or readiness. For simple liveness the no parameter version can be used.

This also prepares for the burrow 0.19.0 release and:
- Don't store Tx in state for every EventDataTx 
- Update changelog
- Remove logging that reveals private key for input account",[],6,2018-06-26 14:22:32,2018-06-26 15:46:31,2018-07-19 08:56:49,True,2018-06-26 15:46:31,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/818,https://github.com/hyperledger/burrow/pull/818,seanyoung,Don't run protoc during regular build,"protoc might not be available.

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2018-06-25 17:02:59,2018-06-26 09:58:07,2018-06-26 09:58:07,True,2018-06-26 09:58:07,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/814,https://github.com/hyperledger/burrow/pull/814,seanyoung,Kubernetes secret,,[],7,2018-06-20 11:42:48,2018-06-21 15:56:02,2018-06-21 15:56:02,True,2018-06-21 15:56:02,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/813,https://github.com/hyperledger/burrow/pull/813,seanyoung,Export template,,[],2,2018-06-19 15:16:27,2018-06-25 12:47:39,2018-06-25 12:47:39,True,2018-06-25 12:47:39,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/812,https://github.com/hyperledger/burrow/pull/812,silasdavis,Use http.Server as Process to get graceful shutdown,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-06-19 09:30:37,2018-06-19 09:40:39,2018-06-19 10:11:27,True,2018-06-19 09:40:39,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/810,https://github.com/hyperledger/burrow/pull/810,compleatang,migrate burrow metrics exporter work into burrow proper,"close #790 and deprecates @monax/burrow-exporter

in process metrics are lightweight and give us a clean picture of the entire runtime profile for free. this will be crucial to monitor as we move forward toward production.",[],1,2018-06-19 00:29:20,2018-06-19 08:14:47,2018-06-19 08:42:30,True,2018-06-19 08:14:47,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/808,https://github.com/hyperledger/burrow/pull/808,silasdavis,Implement ExecutionEvents service in GRPC,"This change implements persisting events to state binary serialised under a 16 byte key of `height index` in big endian format meaning that we can iterate events in order using IAVL's range query (and get a proof of the result if we want - though this is not currently exposed).

This core function added to state is:

```go
GetEvents(startBlock, endBlock uint64, queryable query.Queryable) (<-chan *events.Event, error)
```
and a GRPC based on this is provided by `ExecutionServer` that allows dynamic ranges (relative to latest block) to be specified as well as for events to be streamed continuously as they are generated by new blocks.

We sync events to our state tree before also broadcasting them over pubsub so existing functionality is still preserved.

This PR also:

- Reorganises protobuf and generation from makefile
- Fixes keys service using non-pointer receiver
- Fixes keys command checking keys options for nil rather than default values
- Adds `EventsService implementing with `Subscriptions`
- Adds `ExecutionEventsService` service state persisted events
- Further refines state handling and safety following through with some earlier changes to interfaces
- Improves read/write lock on state by maintaining a previous tree version for reading
- Provides an event endpoint with a query string
- Adds timeout to `SubscribeCallback` to prevent from blocking subscribers from halting pubsub
- Make multiple `NewBlock` event subscriptions safe

",[],11,2018-06-18 21:57:30,2018-06-25 14:56:01,2018-07-19 08:56:48,True,2018-06-25 14:56:01,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/807,https://github.com/hyperledger/burrow/pull/807,pietv,Solve a few glitches for integration tests on Mac and Linux environment,"This PR adds a few fixes for the burrow integration tests for them to run on a development machine:
* a check for dependent binaries that might not be present in a Docker container (`jq`, `xxd`, ...)
* The Darwin `base64` doesn't support the `-d` flag: change to `openssl base64 -d`.
* The LibreSSL `openssl base64 -d` command produces an empty result without the `-A` flag.
* Use the `trap EXIT` Bash command to kill the `burrow keys server` (occasionally the server keeps running after the integration tests failure).",[],1,2018-06-18 16:09:07,2018-06-18 22:20:00,2018-06-18 22:20:00,True,2018-06-18 22:20:00,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/804,https://github.com/hyperledger/burrow/pull/804,silasdavis,Simplify account structure and use struct for MutableAccount,Based on the core idea of: https://github.com/hyperledger/burrow/pull/800 but more minimal and incremental,[],1,2018-06-15 22:10:59,2018-07-10 16:19:49,2018-07-10 17:32:06,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/803,https://github.com/hyperledger/burrow/pull/803,silasdavis,Add last block checkpointing and versioned state loading,"This reintroduces some of the logic around saving a version number but with some tweaks:

- The multiple writes to db are not atomic, but instead of this we can use a checkpoint on the _last_ block to get the same safety
- When we start we load application and blockchain state from the last hash -> state version we were _certain_ had been fully committed

This needs a long-running statistically evaluated test where we randomly kill burrow so we cover various intervals in the commit process to prove that it is robust, but that will have to wait.",[],1,2018-06-14 18:33:47,2018-06-15 08:55:46,2018-06-15 08:56:05,True,2018-06-15 08:55:46,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/802,https://github.com/hyperledger/burrow/pull/802,silasdavis,Add GRPC transaction service,"This:
- Adds GRPC transaction service
- Fixes a load broken deps relating to Tendermint
- Simplifies state loading
- Uses binary codec for txs, namereg
- kills go-wire DED
- Updates IAVL
- Errors on bad tx envelopes
- Respects launcher `Enabled` status",[],8,2018-06-13 22:38:46,2018-06-14 13:27:30,2018-07-24 12:29:06,True,2018-06-14 13:27:30,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/801,https://github.com/hyperledger/burrow/pull/801,silasdavis,Merge to master,"master currently is out-of-sync with bosmarmot, this addresses that and we can stabilise for a release",[],83,2018-06-13 11:35:57,2018-06-13 11:38:33,2018-06-13 11:38:33,True,2018-06-13 11:38:33,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/800,https://github.com/hyperledger/burrow/pull/800,b00f,Refactoring Account object,"In this change list, the `Account` object is refactored and the interfaces are removed. 
Also `state_cache` has minor changes in order to keep a copy of account structure not the pointer. It is more safe because any further changes in account object  won't affect the state cache unless it gets update again. ",[],3,2018-06-13 07:18:56,2018-07-19 22:23:59,2018-07-19 22:23:59,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/799,https://github.com/hyperledger/burrow/pull/799,silasdavis,Add GRPC transaction service,"This:
- Adds GRPC transaction service
- Fixes a load broken deps relating to Tendermint
- Simplifies state loading
- Uses binary codec for txs, namereg
- kills go-wire DED
- Updates IAVL
- Errors on bad tx envelopes
- Respects launcher `Enabled` status",[],5,2018-06-12 22:48:16,2018-06-13 22:38:14,2018-06-13 22:38:14,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/798,https://github.com/hyperledger/burrow/pull/798,silasdavis,Upgrade Tendermint to 0.20.0,Merge after: https://github.com/hyperledger/burrow/pull/797,[],5,2018-06-12 15:28:45,2018-06-13 11:02:52,2018-07-19 22:50:49,True,2018-06-13 11:02:52,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/797,https://github.com/hyperledger/burrow/pull/797,silasdavis,Refactor execution logic,"This PR:
- Adds coded exceptions to the execution layer (supporting REVERT amongst other things)
- Refactors the giant `Execute` function into some contextual `Executors` per transaction type (removing awful GOTO logic) - preparation for GovernanceTx
- Renames namereg to match events/state",[],3,2018-06-12 15:03:09,2018-06-13 10:50:18,2018-07-19 22:50:34,True,2018-06-13 10:50:18,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/796,https://github.com/hyperledger/burrow/pull/796,dennismckinnon,Add the first draft of grpc protobuf files,Signed-off-by: Dennis Mckinnon <dennis.r.mckinnon@gmail.com>,[],1,2018-06-11 16:33:11,2018-06-12 15:29:35,2018-06-12 15:29:40,True,2018-06-12 15:29:35,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/795,https://github.com/hyperledger/burrow/pull/795,silasdavis,Governance groundwork,"This PR includes various groundwork for GovernanceTx, chiefly making our Tx model a bit more sane and dropping go-wire serialisation. Included:
- Split crypto into multiple files
- Introduce `Envelope` as a container for a transaction and signatures, make Tx a wrapper struct, and describe existing txs with `Payload` interface. Remove all signatures and public keys from `Payloads`.
- Use standard JSON marshalling to generate `SignBytes` (with possibility to use something else down the road).
- Have `Tx` remember it's `ChainID` context rather than passing it around all over the place. Memoize `TxHash`
- Introduce `Validators` multiset that acts as a cache of validator set changes (for manipulation from GovernanceTx)
- Introduce `ValidatorsWindow` as a history of validator changes so that we can calculate rolling power changes needed for fee disbursement
- Remove `RebondTx`

",[],3,2018-06-11 10:44:39,2018-06-11 13:27:20,2018-06-11 13:27:20,True,2018-06-11 13:27:20,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/794,https://github.com/hyperledger/burrow/pull/794,compleatang,upgrade bos so tests will pass,,[],1,2018-06-09 10:35:13,2018-06-09 11:07:18,2018-06-09 11:15:34,True,2018-06-09 11:07:18,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/791,https://github.com/hyperledger/burrow/pull/791,seanyoung,Fixes,,[],2,2018-06-07 08:17:43,2018-06-07 08:58:51,2018-06-11 09:27:17,True,2018-06-07 08:58:51,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/788,https://github.com/hyperledger/burrow/pull/788,dennismckinnon,Add rpc proto-buf specs,,[],2,2018-06-06 00:35:41,2018-06-11 16:33:54,2018-06-11 16:34:04,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/787,https://github.com/hyperledger/burrow/pull/787,silasdavis,Update tendermint constraint,Signed-off-by: Silas Davis <silas@monax.io>,[],1,2018-06-05 14:23:10,2018-06-05 14:26:06,2018-06-05 14:26:06,True,2018-06-05 14:26:06,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/786,https://github.com/hyperledger/burrow/pull/786,compleatang,add logo to readme,"![screenshot-github com-2018 06 05-13-50-20](https://user-images.githubusercontent.com/590037/40976930-7523aab6-68c7-11e8-8de7-737f878d8db9.png)
",[],1,2018-06-05 12:47:50,2018-06-07 08:41:55,2018-06-09 10:32:56,True,2018-06-07 08:41:55,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/785,https://github.com/hyperledger/burrow/pull/785,seanyoung,local key client does not return curve type,"This breaks voting:

{""caller"":""state.go:836"",""component"":""Tendermint"",""err"":""invalid curve type"",""height"":1,""log_channel"":""Info"",""message"":""enterPropose: Error signing proposal"",""module"":""consensus"",""round"":0,""run_id"":""ae20372c-68ab-11e8-827b-6da5986ff0ad"",""scope"":""tendermint.NewNode"",""time"":""2018-06-05T10:32:03.568661284Z""}

Signed-off-by: Sean Young <sean.young@monax.io>",[],1,2018-06-05 11:04:54,2018-06-05 11:22:34,2018-06-05 11:22:34,True,2018-06-05 11:22:34,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/784,https://github.com/hyperledger/burrow/pull/784,silasdavis,Upgrade to Tendermint 0.20.0-rc2,"Because we like to bleed...

This PR:
- Updates us to Tendermint 0.20.0-rc2
- Add back in sign_info.go since Tendermint have removed it (want to make PR of this file back in)
- Pulls in Tendermint rpc lib so we stop chasing the numerous upstream changes AND purges go-amino from it
- Updates some RPC types",[],3,2018-06-05 10:09:06,2018-06-05 11:20:39,2018-07-19 08:56:48,True,2018-06-05 11:20:39,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/783,https://github.com/hyperledger/burrow/pull/783,compleatang,bring our log fields in line with tendermints on ABCI-App component,"currently our structured logging fields differ frustratingly slightly from tendermints. this adjusts the predomoninant logging output on our end to use the same fields as they do to avoid the overlap in the screenshot below.

![screenshot-logs cluster monax io-2018 06 04-18-35-41](https://user-images.githubusercontent.com/590037/40932532-8f38a948-6826-11e8-96c2-ce3014634282.png)
",[],1,2018-06-04 17:39:08,2018-06-04 18:23:33,2018-06-04 19:53:56,True,2018-06-04 18:23:33,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/782,https://github.com/hyperledger/burrow/pull/782,seanyoung,Permission check,Check that key files have the correct permission.,[],2,2018-06-04 11:45:53,2018-06-05 09:27:10,2018-06-05 09:27:10,True,2018-06-05 09:27:10,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/781,https://github.com/hyperledger/burrow/pull/781,silasdavis,Add burrow dump command,"Backed by new forensics package containing block explorer.

From directory containing `.burrow` and `burrow.toml` (or suitable config from `-c` flag) Provides:

```shell
# dump all block from 200 to last
burrow dump blocks 200:
# dump all tx from blocks 500 to 505
burrow dump txs 500:505
```",[],1,2018-06-01 13:45:49,2018-06-04 11:12:58,2018-06-04 11:13:19,True,2018-06-04 11:12:58,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/780,https://github.com/hyperledger/burrow/pull/780,silasdavis,[WIP] Examine Finterra Burrow extensions,,[],3,2018-05-29 12:59:05,2018-07-24 12:26:34,2018-07-25 03:03:03,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/779,https://github.com/hyperledger/burrow/pull/779,TheAlienMind,Updated GetData return value descriptor,Used a JSON returned via RPC to understand the structure of returned object.,[],9,2018-05-24 10:25:21,2018-05-29 11:18:41,2018-05-29 11:18:41,True,2018-05-29 11:18:41,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/778,https://github.com/hyperledger/burrow/pull/778,smblucker,Implementing revert opcode,"These changes implement the revert opcode as referenced here:

https://github.com/hyperledger/burrow/issues/600",[],1,2018-05-23 18:50:32,2018-05-29 11:17:23,2018-05-29 13:44:59,True,2018-05-29 11:17:23,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/777,https://github.com/hyperledger/burrow/pull/777,smblucker,Reintroducing ecrecover and implementing ed25519 signature verification,"These changes reintroduce functionality for ecrecover implement ed25519 signature verification as defined here:

https://github.com/ethereum/go-ethereum/pull/16453
",[],1,2018-05-22 17:38:07,2018-07-24 12:55:01,2018-07-24 12:55:02,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/776,https://github.com/hyperledger/burrow/pull/776,seanyoung,Merge monax-keys into burrow using grpc and consolidated crypto,This replaces the monax-keys service with a built-in keys service,[],7,2018-05-17 12:14:37,2018-06-02 16:50:45,2018-06-02 16:50:45,True,2018-06-02 16:50:45,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/775,https://github.com/hyperledger/burrow/pull/775,b00f,Update key.go,This method generated wrong address from public_key.,[],1,2018-05-17 08:19:23,2018-05-24 11:47:03,2018-05-24 11:47:03,True,2018-05-24 11:47:03,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/774,https://github.com/hyperledger/burrow/pull/774,silasdavis,Fix smoke test and typo,Also refactored CLI to take an output interface,[],1,2018-05-16 15:01:41,2018-05-16 16:18:02,2018-06-09 10:31:08,True,2018-05-16 16:18:02,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/773,https://github.com/hyperledger/burrow/pull/773,silasdavis,Reorganisation of mock keys and add deployment,"deployment package will provide a singular object to provide to
provisioning and orchestration systems like ansible, kubernetes,
terraform",[],2,2018-05-16 14:09:38,2018-05-16 14:36:16,2018-05-16 14:36:16,True,2018-05-16 14:36:16,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/772,https://github.com/hyperledger/burrow/pull/772,smblucker,Adding create2 opcode placeholder,"These changes provide a placeholder for the create2 opcode. This PR is meant to satisfy issue found here:

fixes https://github.com/hyperledger/burrow/issues/769",[],1,2018-05-15 16:28:28,2018-05-23 13:54:33,2018-05-23 13:54:34,True,2018-05-23 13:54:33,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/771,https://github.com/hyperledger/burrow/pull/771,smblucker,"Implementing shl, shr, and sar opcodes","These changes implement shl, shr, and sar opcodes.

",[],1,2018-05-14 20:46:09,2018-05-15 10:28:50,2018-05-15 15:01:42,True,2018-05-15 10:28:50,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/770,https://github.com/hyperledger/burrow/pull/770,silasdavis,Update bos dependency and expose persistent peers,,[],2,2018-05-14 19:38:04,2018-05-14 19:49:06,2018-05-14 19:49:06,True,2018-05-14 19:49:06,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/768,https://github.com/hyperledger/burrow/pull/768,silasdavis,Burrow deploy tweaks,"This is related to improving out kubernetes integration and includes:

- Splitting up of CLI for readability/maintainability
- `burrow spec` now takes multiple specs as variadic arg
- `burrow serve` rename `burrow start` to distinguish keys and other serve operations
- `MockKeyClient.DumpKeys` can now generate monax-keys keys files",[],4,2018-05-14 11:12:48,2018-05-14 11:35:06,2018-05-14 11:39:54,True,2018-05-14 11:35:06,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/767,https://github.com/hyperledger/burrow/pull/767,smblucker,returndatasize-returndatacopy implementation,"These changes implement retrundatasize and returndatacopy; these changes attempt to resolve issue found here:

fixes https://github.com/hyperledger/burrow/issues/705",[],1,2018-05-11 17:54:35,2018-05-14 20:09:35,2018-08-15 20:31:26,True,2018-05-14 20:09:35,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/766,https://github.com/hyperledger/burrow/pull/766,smblucker,retdatasize-retdatacopy-implementation,"These changes implement returndatasize and returndatacopy: changes are meant to resolve issue found here:

https://github.com/hyperledger/burrow/issues/705",[],8,2018-05-11 17:49:11,2018-05-11 17:49:55,2018-05-11 17:50:30,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/765,https://github.com/hyperledger/burrow/pull/765,silasdavis,Cleanup some subscription code on V0,"Increase reap threshold to 20 seconds

Signed-off-by: Silas Davis <silas@monax.io>",[],1,2018-05-11 12:26:39,2018-05-11 12:59:54,2018-07-19 08:56:49,True,2018-05-11 12:59:54,dennismckinnon,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/764,https://github.com/hyperledger/burrow/pull/764,silasdavis,Introduce InputAccount on param to simplify JS,,[],1,2018-05-10 20:07:13,2018-05-10 22:25:30,2018-05-10 22:25:30,True,2018-05-10 22:25:30,dennismckinnon,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/763,https://github.com/hyperledger/burrow/pull/763,silasdavis,Develop,,[],3,2018-05-10 20:04:02,2018-05-10 20:05:25,2018-05-10 20:05:25,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/762,https://github.com/hyperledger/burrow/pull/762,silasdavis,Use sed for indentation to not interpret shell characters,This now also contains a fix to what must have been a long-standing in principle test flake.,[],3,2018-05-08 23:34:07,2018-05-10 16:20:28,2018-05-10 17:51:21,True,2018-05-10 16:20:28,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/761,https://github.com/hyperledger/burrow/pull/761,smblucker,"Editing grammar, spelling and style in readme",Changes fix minor problems in readme.md,[],1,2018-05-08 18:39:38,2018-05-08 18:42:52,2018-05-08 18:46:58,True,2018-05-08 18:42:52,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/760,https://github.com/hyperledger/burrow/pull/760,silasdavis,Flush events after hashing to fix timing issue in test,"I've seen this on CI, and I think this may resolve it. An artefact of the way this `WSCallNoWait` works mean there is a race.",[],1,2018-05-08 18:26:20,2018-05-08 18:41:55,2018-05-08 18:41:55,True,2018-05-08 18:41:55,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/759,https://github.com/hyperledger/burrow/pull/759,silasdavis,Merge develop to master for release,merge first: https://github.com/hyperledger/burrow/pull/758,[],164,2018-05-08 17:21:30,2018-05-08 19:07:22,2018-05-08 19:07:22,True,2018-05-08 19:07:22,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/758,https://github.com/hyperledger/burrow/pull/758,silasdavis,"Update project history for 0.18.0 release, add moniker flag",This prepare develop for merge to master and 0.18.0 release,[],1,2018-05-08 17:19:15,2018-05-08 17:31:31,2018-05-08 17:31:31,True,2018-05-08 17:31:31,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/757,https://github.com/hyperledger/burrow/pull/757,smblucker,Implementing INVALID opcode,"These changes implement the invalid opcode; these changes attempt to resolve issue here:

https://github.com/hyperledger/burrow/issues/601

",[],1,2018-05-07 18:00:40,2018-05-08 21:56:52,2018-05-09 14:00:52,True,2018-05-08 21:56:52,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/756,https://github.com/hyperledger/burrow/pull/756,silasdavis,"Fix test issues, and reorganise CLI UX. Read validator address on startup.","This PR:

- Fixes broken test that slipped through broken CircleCI notification on a previous PR
- Updates docs to point at roadmap and get keys and burrow running
- (Re)introduces `burrow serve` replacing `burrow` since current usage was not ideal and broke some uses of `Spec`
- Adds a smoke test for the mow.cli app
- Moves setting the `ValidatorAddress` from `burrow configure` to `burrow serve`, i.e. boot time. This allows us to use identical configuration for each validator in a pool in many cases and just specify the validator address. We can also set this via an environment variable",[],1,2018-05-04 19:04:04,2018-05-04 20:53:15,2018-05-07 14:51:38,True,2018-05-04 20:53:15,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/755,https://github.com/hyperledger/burrow/pull/755,smblucker,Implementing RETURNDATASIZE and RETURNDATACOPY,"These changes implement the RETURNDATASIZE and RETURNDATACOPY opcodes as described here:

https://github.com/ethereum/EIPs/blob/dde2fe59532290f285a3ae79bd7347f0a7b69d6d/EIPS/eip-211.md

This implementation attempts to resolve issue here:

https://github.com/hyperledger/burrow/issues/705",[],31,2018-05-03 20:09:23,2018-05-11 15:44:03,2018-05-11 15:48:47,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/754,https://github.com/hyperledger/burrow/pull/754,b00f,Detect JSON from config file,"NOTE: Genesis file contains some JSON data (ex. crypto.PublicKey)
This patch is for detecting JSON format from TOML
",[],1,2018-05-03 08:19:50,2018-05-04 20:11:07,2018-05-04 20:11:07,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/753,https://github.com/hyperledger/burrow/pull/753,paulvi,#748 roadmap link in README,"#748 roadmap link in README

+Roadmap, future plans and other information about the project can be found at
+<https://wiki.hyperledger.org/projects/burrow>
+",[],1,2018-05-02 03:06:21,2018-05-04 20:07:53,2018-05-07 01:25:39,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/751,https://github.com/hyperledger/burrow/pull/751,smblucker,"Implementing SHL, SHR and SAR opcodes","These changes implement bitwise shifting operations (shift left, shift right, shift arithmetic right) as described in EIP here: 

https://github.com/ethereum/EIPs/blob/e451b058521ba6ccd5d3205456f755b1d2d52bb8/EIPS/eip-145.md

This implementation resolves Issue here:

fixes #705 ",[],1,2018-05-01 21:58:18,2018-05-08 09:33:07,2018-05-14 20:52:02,True,2018-05-08 09:33:07,seanyoung,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/750,https://github.com/hyperledger/burrow/pull/750,silasdavis,Network spec,"This PR:

- Allows ingestion of JSON or TOML without specifying by detecting the input format
- Allows you to provide base genesis specs to merge into a final spec
- Allows the generation and output of secret keys using `burrow congfigure`

so `burrow spec -p1 | burrow configure --genesis-spec=- --separate-genesis-doc genesis.json --generate-keys keys.json` now outputs separate genesis (from a previous PR) and this for `keys.json`:

```json
{
  ""Keys"": [
    {
      ""Name"": ""Full_0"",
      ""Address"": ""7432F2067106C6879615DA6E8F9CA014C9392828"",
      ""PublicKey"": ""52MU2qwSabiAlyoN2bVBGEPOQyYLeyw5xJjdJwOGIPY="",
      ""PrivateKey"": ""llI1W+K5QMz12HG/sYbvWcktFBmLncMh+YP0GLiutDDnYxTarBJpuICXKg3ZtUEYQ85DJgt7LDnEmN0nA4Yg9g==""
    },
    {
      ""Name"": ""Participant_0"",
      ""Address"": ""C0A4FC8E7968F9717F8530BD6126C52D3C183357"",
      ""PublicKey"": ""X9ImxdjsiEGfZtmMeWAHpVDG/LFgosPAwcot0bEpPX8="",
      ""PrivateKey"": ""bSH4OsspagMjTRTLr5ckVOSsC3OetO25IfvW9HeaVCtf0ibF2OyIQZ9m2Yx5YAelUMb8sWCiw8DByi3RsSk9fw==""
    }
  ]
}%
```

You can also provide a Go template for the keys output, the default would look like:

```shell
--keys-template '{\
  ""Keys"": [<< range $index, $key := . >><< if $index>>,<< end >>\
    {\
      ""Name"": ""<< $key.Name >>"",\
      ""Address"": ""<< $key.Address >>"",\
      ""PublicKey"": ""<< $key.PublicKeyBase64 >>"",\
      ""PrivateKey"": ""<< $key.PrivateKeyBase64 >>""\
    }<< end >>\
  ]\
}
```",[],2,2018-04-27 18:02:57,2018-05-01 13:51:04,2018-07-19 22:50:12,True,2018-05-01 13:51:04,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/747,https://github.com/hyperledger/burrow/pull/747,smblucker,Adding tests to state_cache_test.go,This PR completes the testing functions for state_cache.,[],1,2018-04-25 20:39:10,2018-04-25 21:40:24,2018-05-16 18:51:39,True,2018-04-25 21:40:24,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/746,https://github.com/hyperledger/burrow/pull/746,smblucker,Making substantive and cosmetic changes to api.md,This PR corrects errors concerning the function and handling of public (and private) keys and the statement of the appropriate HTTP method for GenPrivAccount. This PR also makes some cosmetic/grammatical changes.,[],1,2018-04-23 18:30:17,2018-04-27 13:28:18,2018-04-27 13:29:21,True,2018-04-27 13:28:18,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/744,https://github.com/hyperledger/burrow/pull/744,silasdavis,Ensure storing zero value removes the key rather than panics,"`SetStorage` with a zero value is meant to indicate removal but in new IAVL would cause a panic. This resolves that by calling remove on underlying tree when a nil value is passed to execution state

See: https://github.com/hyperledger/burrow/blob/develop/vendor/github.com/tendermint/iavl/tree.go#L92",[],1,2018-04-20 16:45:01,2018-04-27 13:30:24,2018-05-10 20:06:25,True,2018-04-27 13:30:24,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/743,https://github.com/hyperledger/burrow/pull/743,silasdavis,Add file and json logging instructions.,"With this change, running `burrow configure -l json,file,/tmp/foo.log` produces a burrow config containing:

```toml
[Logging]
  ExcludeTrace = false
  NonBlocking = false
  [Logging.RootSink]
    [Logging.RootSink.Output]
      OutputType = ""file""
      Format = ""json""
      Path = ""/tmp/foo.log""
```",[],1,2018-04-20 15:53:09,2018-04-27 14:04:46,2018-05-10 20:06:56,True,2018-04-27 14:04:46,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/742,https://github.com/hyperledger/burrow/pull/742,b00f,Better function naming,"Changes:
Rename `NewBlockChain` to `newBlockchain` and `LoadBlockchain` to `loadBlockchain`",[],2,2018-04-16 11:45:19,2018-04-19 20:37:35,2018-04-19 20:37:35,True,2018-04-19 20:37:35,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/741,https://github.com/hyperledger/burrow/pull/741,silasdavis,Disable authenticated peer connections ,"To preserve pre-Tendermint-0.16.0 behaviour in private validator pool.
",[],1,2018-04-15 20:28:28,2018-04-15 20:48:51,2018-05-10 20:06:56,True,2018-04-15 20:48:51,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/740,https://github.com/hyperledger/burrow/pull/740,silasdavis,Upgrade to Tendermint 0.18.0 (and other dependencies),"Stacked on: https://github.com/hyperledger/burrow/pull/739

Includes:
- Upgrade Tendermint to 0.18.0
- Upgrade IAVL to latest version
- Upgrade all other deps
- Add `burrow configure --separate-genesis-doc genesis.json` to create genesis.json
- Run bosmarmot integration tests including new JS tests
- Update docker file alpine and go versions and build burrow binary with full version coding (commit etc) ",[],7,2018-04-13 13:24:09,2018-04-13 18:12:49,2018-07-19 22:50:49,True,2018-04-13 18:12:49,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/739,https://github.com/hyperledger/burrow/pull/739,silasdavis,Ensure that the full tendermint commit phase has finished before accepting new transactions,"This PR uses a `RWMutex` on the `executor` (i.e. the checker) to make transactor calls wait until Tendermint's commit phase has ended. Our ABCI app acquires the mempool lock as a signal that the commit phase has ended.

The mechanism is as follows:

The `checker` (an `executor`) contains a `StateCache`. The `checker` is passed to the ABCI `App` and also to the `Service`. In the app `CheckTx` updates the checker's state via calls to `Execute`. The checker has a RWMutex and when the checkers `state.Reader` methods are called it acquires a read lock. The write lock however is controlled externally (this allows us to block reads while we update).

The app locks the checker during commit and schedule it to be unlocked as soon as we area able to acquire a lock on tendermint's mempool. The service wraps the checker in an `Accounts` object and the `Transactor` is passed this object. When the `Transactor` tries to sign a transaction it queries the checker it has been passed to get the sequence number. If the checker is locked then this call blocks and this is how we avoid transact calls concurrent with a mempool update (which would result in us signing with a previous sequence number).

Anything that wants to read synchronised mempool state should use the checker. 

",[],1,2018-04-11 18:59:06,2018-04-13 18:12:50,2018-05-10 20:06:56,True,2018-04-13 18:12:50,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/738,https://github.com/hyperledger/burrow/pull/738,b00f,Test ci,test,[],2,2018-04-10 11:17:10,2018-04-11 08:08:16,2018-04-11 08:08:16,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/737,https://github.com/hyperledger/burrow/pull/737,b00f,Upgrade to tendermint 18.0.0,"Changes:

* Upgrade to tendermint 18
* remove validators from blockchain object (it's needed to show validators per round)
* Rename Validator to GenValidator in genesis.go for better code understanding
* Remove vendor folder from project (it's not necessary)
* removing json tags
",[],1,2018-04-10 11:03:46,2018-04-12 07:45:45,2018-04-12 11:24:23,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/736,https://github.com/hyperledger/burrow/pull/736,silasdavis,WIP: add debug for mystery non-issue of the perfect mutual exclusion,,[],1,2018-04-10 09:20:28,2018-04-12 13:51:01,2018-09-05 13:55:26,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/735,https://github.com/hyperledger/burrow/pull/735,mandarvaze,Fixed link to DEVELOPER_CERTIFICATE_OF_ORIGIN.md,"an extra `.github` lead to https://github.com/hyperledger/burrow/blob/master/.github/.github/DEVELOPER_CERTIFICATE_OF_ORIGIN.md which was 404

Signed-off-by: Mandar Vaze <mandarvaze@gmail.com>",[],1,2018-04-06 15:17:16,2018-04-07 22:52:09,2018-04-08 12:40:45,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/734,https://github.com/hyperledger/burrow/pull/734,mandarvaze,Fixed URL for glide in the README,"Without https - the URL was resolved as https://github.com/hyperledger/burrow/blob/master/github.com/Masterminds/glide - which was 404

Signed-off-by: Mandar Vaze <mandarvaze@gmail.com>",[],1,2018-04-06 13:40:13,2018-04-07 22:51:59,2018-04-08 12:40:28,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/733,https://github.com/hyperledger/burrow/pull/733,seanyoung,State cache fixes,,[],3,2018-04-06 13:11:34,2018-04-06 23:29:20,2018-04-06 23:29:25,True,2018-04-06 23:29:20,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/732,https://github.com/hyperledger/burrow/pull/732,silasdavis,Add install_db target and dirty hash,"Add install_db make target and a hash summarising any tracked changes in
the working directory that will be added to burrow --version output when
burrow is build with a dirty working dir - useful for distinguishing
builds against uncommitted code.",[],1,2018-04-06 09:57:13,2018-04-06 13:03:33,2018-04-06 13:03:34,True,2018-04-06 13:03:33,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/731,https://github.com/hyperledger/burrow/pull/731,compleatang,fix key management on known accounts; add chain name flags,"this PR integrates two changes:

* the addition of a `--chain-name` flag to both `burrow configure` and `burrow spec`. since we write the output via both commands, it should be overwrite-able by both commands. if we want to only allow the flag to exist in one place it should go in `burrow configure` rather than in burrow spec.
* fixing of a problem when the genesisSpec was given known accounts. the result of those known account|pubKeys were not properly passed through the parser. ",[],1,2018-04-04 23:11:57,2018-04-06 09:55:12,2018-04-06 09:55:42,True,2018-04-06 09:55:12,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/730,https://github.com/hyperledger/burrow/pull/730,silasdavis,To be consistent with GenesisDoc GenesisSpec should use 'PublicKey' as,"field name

Signed-off-by: Silas Davis <silas@monax.io>",[],1,2018-04-04 20:12:56,2018-04-04 20:41:44,2018-04-06 09:56:22,True,2018-04-04 20:41:44,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/729,https://github.com/hyperledger/burrow/pull/729,silasdavis,Genesis spec public key,,[],106,2018-04-04 20:12:54,2018-04-06 09:56:19,2018-04-06 09:56:22,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/728,https://github.com/hyperledger/burrow/pull/728,silasdavis,Mempool sequence numbers and address based transact,"This PR introduces address-based signing for the Transactor initially exposed via the V0 RPC. It includes a number of refactorings along the way relating to transaction signing, mempool state, sequence numbers, and transaction formation, including:

- Use of `AddressableSigner` in most places `PrivateAccount` was used abstracting over key client based signing and private key signing
- Refactoring transactions to capture all signing under a single method that is added to the `Tx` interface (breaking out txs into their own files for clarity)
- Adds some additional state tests
- Factors out integration test logic and uses this to add sorely needed v0 integration tests similar to tm integration test and identically wrapped
- Adds simple benchmark for transact
- Fixes #715 ensuring transact handles recursive calls correctly
- Enables access to the mempool as a `state.AccountGetter` so that `Transactor` can optimistically assign sequence numbers as a delegated signer
- Enables address based signing via the `InputAddress` field on various of the v0 methods while maintaining backward-compatibility by keeping `PrivKey`. Both options share the same refactored `Transactor` by using the `InputAccount` abstraction.
- Ensures that a mempool backlog produced by the transactor spanning many blocks will succeed if the transactions are compatible by committing state before reseting check cache 
",[],16,2018-04-03 22:03:56,2018-04-09 18:08:17,2018-09-05 13:54:45,True,2018-04-09 18:08:17,seanyoung,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/727,https://github.com/hyperledger/burrow/pull/727,silasdavis,State refresh logging and debug,"This PR aims to stabilise Burrow on our large real-world set of contracts exercising a large portion of EVM and SNative functionality. In particular it:

- Implements EIP 150 so that EVM produced by recent (tested with solc 0.4.21) passes expected gas to child call frames
- Adds overflow safety checking when producing 64-bit integers from 256-bit EVM words
- Ensures that we refresh our mutable pointers to immutable account state after calls and creation (else we may not get latest snative permissions or other account state altered down the call stack)
- Massively optimises logging particularly providing a fast past for logging that does not dominate CPU usage
- Also refactors our `Logger` to be a somewhat simpler struct wrapper around two go-kit loggers
- Adds debug profiling server options and makes EVM-level debug accessible via an options system
- Various Go usage improves (e.g. dropping singleton interfaces)
- Adds a few more tests to `state.Cache` (more ought to be added)
- Adds git commit version to `burrow --version` when built with `make build_db` via `-ldflags ""-X ...""`",[],9,2018-04-03 15:03:18,2018-04-04 16:00:11,2018-05-25 17:31:50,True,2018-04-04 16:00:11,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/726,https://github.com/hyperledger/burrow/pull/726,silasdavis,T1 network stabilisation,This is stacked on: https://github.com/hyperledger/burrow/pull/721 so merge that first.,[],13,2018-04-02 18:42:37,2018-04-03 15:02:54,2018-04-03 15:06:36,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/725,https://github.com/hyperledger/burrow/pull/725,silasdavis,Awful stacked misc branch,,[],19,2018-03-29 15:29:06,2018-04-02 18:20:13,2018-04-15 20:27:59,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/723,https://github.com/hyperledger/burrow/pull/723,qpakzk,Fix the Table of Contents in README.md,PR again! Previous PR was #720 .,[],1,2018-03-17 04:58:28,2018-03-19 06:01:31,2018-03-19 06:01:31,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/722,https://github.com/hyperledger/burrow/pull/722,qpakzk,Fix the Table of Contents in README.md,"First, synchronize headers with contents' name.
Equalize uppercase or lowercase letters with headers. Add a question mark.

Second, fix the link of ""What is Burrow ?"", which didn't work.

Third, change the loction of  ""Future work"" and ""License"".
Because the text has a different order with the table of contents.",[],1,2018-03-16 15:38:29,2018-03-16 15:39:45,2018-03-16 15:39:45,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/721,https://github.com/hyperledger/burrow/pull/721,silasdavis,State improvements,"This PR provides a number of state-related fixes and improvements:

- Reintroduces the saving and loading on startup of Burrow state to disk via go-db with blockchain and execution state stored separately but synchronised by the state root hash
- Remove poorly implemented `BlockCache` and `TxCache` in favour of a unified `StateCache` that does not access database
- Provides a separate `NameRegCache`
- Localises database access to `execution/state.go`
- Implement state writes/reads through the `account/state.go` interfaces only
- Upgrades our merkle tree to the one being maintained in https://github.com/tendermint/iavl (though not the latest version because it depends on a newer tmlibs version than the one required by our version of Tendermint)
- Provides versioned snapshots of state for every block - laying groundwork for doing something similar for events. Currently we are not exposing this versioned access
- Fixes some issues with test timings by subscribing to the account input event instead of new block


**Currently outstanding**
- Unit tests for `StateCache`, `NameRegCache`, and `State`
- StorageRoot is no longer being set on `ConcreteAccount`. We are using a single tree and a safer mechanism for database access, but we are not storing a tree per account so don't have easy access to a storage root for _each_ account. We can either scrap this, store a multitude of trees, or compute it on demand
- Upgrading to the newest IAVL tree - possibly we should depend on our own fork where we can vendor (or remove) the problematic dependencies as well as add some useful features (like the ability to store a forest of trees in the same database and load the roots).
- Deal with intermittent failure affecting `TestWSCall*` tests

Hoping that @smblucker @seanyoung can take a look at these issues",[],4,2018-03-15 14:35:02,2018-04-03 14:48:13,2018-09-05 13:54:37,True,2018-04-03 14:48:13,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/720,https://github.com/hyperledger/burrow/pull/720,qpakzk,Fix the Table of Contents in README.md,"First, synchronize headers with contents' name.
Equalize uppercase or lowercase letters with headers. Add a question mark.

Second, fix the link of ""What is Burrow ?"", which didn't work.

Third, change the loction of  ""Future work"" and ""License"".
Because the text has a different order with the table of contents.",[],1,2018-03-15 11:04:26,2018-03-16 08:16:05,2018-03-16 08:16:05,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/718,https://github.com/hyperledger/burrow/pull/718,silasdavis,Hotfix BlockCache accumulating writes when it shouldn't,This is a near-term fix for #713. Rather than accumulating a cache across block we just maintain it while a single block of transactions are being applied. This does not logically effect the result of a block.,[],1,2018-03-14 12:31:16,2018-03-14 13:21:01,2018-05-01 14:05:43,True,2018-03-14 13:21:01,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/717,https://github.com/hyperledger/burrow/pull/717,silasdavis,Protect against panics in websocket process,"This is an updated version of: https://github.com/hyperledger/burrow/pull/625

We seem to be protected from panics on 1337 in the `JSONService` already",[],2,2018-03-08 19:26:37,2018-03-12 10:30:40,2018-05-10 20:06:56,True,2018-03-12 10:30:40,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/716,https://github.com/hyperledger/burrow/pull/716,silasdavis,Fix IAVL transitive dependency to make Burrow easier to depend on.,Also sync bos version,[],1,2018-03-08 12:47:13,2018-03-12 10:05:36,2018-03-12 10:05:37,True,2018-03-12 10:05:36,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/714,https://github.com/hyperledger/burrow/pull/714,silasdavis,Bump bos version to one that tests SIGNEXTEND,"and version bump to pre-release
",[],1,2018-03-07 23:09:00,2018-03-08 12:34:46,2018-03-08 12:34:46,True,2018-03-08 12:34:46,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/711,https://github.com/hyperledger/burrow/pull/711,silasdavis,Making case and naming conventions consistent,"for return types shared by the RPC - leaving v0 only one as they were
(for now). This is for integration in Bosmarmot.
",[],1,2018-03-06 18:41:51,2018-03-08 12:34:57,2018-03-08 12:35:02,True,2018-03-08 12:34:57,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/710,https://github.com/hyperledger/burrow/pull/710,silasdavis,Add some more useful comments in permissions.go ,Hardly perfection but better than being slapped in the face with a haddock.,[],1,2018-03-06 13:55:46,2018-03-06 14:41:25,2018-03-07 11:11:42,True,2018-03-06 14:41:24,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/709,https://github.com/hyperledger/burrow/pull/709,silasdavis,Constrain Tendermint dependency versions more tightly,"Needed for Bosmarmot to not upgrade deps inadvertently. This change does not effect the versions of the dependencies we have vendored.

I have also removed a dependency on fatih/set that was used by a single unused helper function `AnalyzeJumpDests` of historical origin by removing that function, since I don't consider that to be 'pulling its weight'",[],1,2018-03-05 21:37:45,2018-03-05 22:00:23,2018-03-05 22:03:17,True,2018-03-05 22:00:23,dennismckinnon,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/707,https://github.com/hyperledger/burrow/pull/707,phymbert,Support of embedded keys pair for tendermint private validator inside burrow instead of monax.keys,"This PR allows you to configure inmemory crypto validator if you do not want to depend on an external keys API to sign messages for private tendermint validator:

By API:
```go
        conf := config.DefaultBurrowConfig()
...
	conf.Crypto.KeysServer = nil // Disable external call to sign and load public key
        // Generate keys OR load your own pair programatically
	conf.Crypto.InMemoryCrypto, err = inmemory.DefaultInMemoryCryptoConfig() 
...
```

Or by Config (not **safest** approach to store private key in file) - example:
```toml
[Crypto]
  [Crypto.InMemoryCrypto]
     PrivateKey = ""{\""type\"":\""ed25519\"",\""data\"":\""YOUR PRIVATE KEY\""}""
     PublicKey = ""{\""type\"":\""ed25519\"",\""data\"":\""2e4bbbffad9325db4e18725c6f31234ee303ac43f8ff4bee167b6e83a4c49197\""}""
```

Fixes #702",[],3,2018-03-04 07:02:04,2018-06-04 18:28:52,2018-06-04 18:28:53,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/704,https://github.com/hyperledger/burrow/pull/704,silasdavis,Fix SIGNEXTEND EVM issue and harden execution layer,"This fixes an implementation bug in the `SIGNEXTEND` (https://github.com/hyperledger/burrow/blob/master/manager/burrow-mint/evm/vm.go#L355-L372) where the mask was added rather than anded: `numb.Add(numb, mask)` when it should have been: `numb.And(numb, mask)`

In fixing this I took the opportunity to centralise our logic for using `big.Int`, clean up our arithmetic code, and do a manual audit of other opcodes to see if there were any other issues on inspection. I didn't find anything else so the refactored code should function in a mostly identical way (we have some added safety around overflow by the use of big ints. This fixes #696. I have a full integration test coming in Bosmarmot.

This also removes a panic from memory fixing #697 and uses `big.Int` for bounds checking and future expansion (e.g. paging memory).

It also stops panics caused by a tx triggering a bug from taking down a chain by recovering from the panic and returning an error. 

",[],3,2018-03-02 18:52:47,2018-03-05 20:06:40,2018-03-05 20:12:51,True,2018-03-05 20:06:40,dennismckinnon,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/700,https://github.com/hyperledger/burrow/pull/700,zramsay,Update readme,,[],2,2018-02-27 03:23:42,2018-03-02 22:29:14,2018-03-02 23:44:12,True,2018-03-02 22:29:14,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/699,https://github.com/hyperledger/burrow/pull/699,silasdavis, Support creating contracts with Transact by accepting empty address,"This restores correct behaviour for JS libs, making this smoke test pass: https://github.com/monax/bosmarmot/blob/master/test/test.js.

This PR is stacked on top of: https://github.com/hyperledger/burrow/pull/695 so merge that first.",[],1,2018-02-26 22:12:55,2018-02-27 15:11:29,2018-03-24 18:31:35,True,2018-02-27 15:11:29,dennismckinnon,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/698,https://github.com/hyperledger/burrow/pull/698,smblucker,WIP: Implement Revert Opcode,"These changes represent a first attempt at implementing the REVERT opcode (0xFD) into burrow's EVM; this includes assigning its hex and string value, writing its case definition, writing checks in relevant case definitions, and writing a test.",[],1,2018-02-26 16:27:41,2018-03-08 12:48:46,2018-04-26 13:33:10,True,2018-03-08 12:48:46,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/695,https://github.com/hyperledger/burrow/pull/695,silasdavis,Run integration tests from Bosmarmot,"Runs integration tests from Bosmarmot pinned to a particular version

Signed-off-by: Silas Davis <silas@monax.io>",[],1,2018-02-26 12:54:34,2018-02-27 14:26:20,2018-03-01 12:21:18,True,2018-02-27 14:26:20,dennismckinnon,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/694,https://github.com/hyperledger/burrow/pull/694,silasdavis,Hotfix on config wal overwrite,This fixes a typo that was causing overwrite of WAL config by addrbook,[],1,2018-02-24 14:23:49,2018-02-24 14:26:28,2018-02-24 14:26:28,True,2018-02-24 14:26:28,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/693,https://github.com/hyperledger/burrow/pull/693,silasdavis,Adopt Relic for release infrastructure,"Imported Relic to control release process and versioning:
- Stores change notes and versions in a slice of structs as a single source of truth to generate runtime change information, print version, generate changelogs, and tag releases
- Enforces that versions numbers advance in semantic versioning increments
- Adds scripts to automate version tagging for releases (actual release triggered by CircleCI)

I didn't pull in Goreleaser for releasing binaries for Burrow just yet - will save that for a future PR when we review how docker image we are pushing as current 'release'
",[],1,2018-02-23 14:45:24,2018-02-24 13:45:25,2018-07-19 22:50:34,True,2018-02-24 13:45:25,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/692,https://github.com/hyperledger/burrow/pull/692,silasdavis,"More vendor pruning, more better",This adds pruning of non-go files in vendor.,[],1,2018-02-22 23:07:59,2018-02-23 01:38:58,2018-02-23 01:38:58,True,2018-02-23 01:38:58,dennismckinnon,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/691,https://github.com/hyperledger/burrow/pull/691,silasdavis,Merge back master and simplify CI,This gets us purely ahead of master anticipating merge and also exploits the fact we don' use glide any more to simplify our CircleCI script,[],4,2018-02-22 20:31:42,2018-02-22 21:12:46,2018-05-10 20:06:55,True,2018-02-22 21:12:45,dennismckinnon,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/690,https://github.com/hyperledger/burrow/pull/690,silasdavis,Fix permissioning related issues from Bosmarmot integration,"This PR all comes out of work integrating the Bosmarmot (EPM) tests. In a couple of places we previously swallowed errors that meant some issue have always been here but were not previously noticed.

It consists of three commits:
1. Some additional logging features I found I wanted when debugging (template format logging and some other serialisation cleanup)

2. Fixes and tidies up the Permissions method in client in Burrow which was dropping some fields from `PermArgs` (with corresponding changes in Bosmarmot to follow)

3. General clean up of permission checking - in particular to avoid unnecessary panics and support composite permissions checking - which I was surprised to find unsupported. Our tests seem to expect it but some swallowed errors allowed them to pass in the past.

Once merged to develop this can be vendored into Bosmarmot where the integration tests are now all passing.

Also fixes #667 - subslice function being able to panic with negative index",[],3,2018-02-21 23:51:46,2018-02-22 00:29:25,2018-07-19 22:51:09,True,2018-02-22 00:29:25,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/688,https://github.com/hyperledger/burrow/pull/688,silasdavis,Fix accidental compositing of logging config,We use the default config as a base (so you only need to set non-default values) but in the case of the recursive logging structure this means that when you explicitly set a logging config it gets merged into the default that just outputs unfiltered thus breaking custom logging config. This fixes that.,[],1,2018-02-18 14:17:29,2018-02-19 00:09:43,2018-02-19 00:09:50,True,2018-02-19 00:09:43,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/687,https://github.com/hyperledger/burrow/pull/687,silasdavis,Simplify SubscribeCallback and bump version,This will have us push an appropriately versioned docker base image,[],1,2018-02-15 09:38:22,2018-02-15 10:02:40,2018-02-15 10:02:41,True,2018-02-15 10:02:40,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/686,https://github.com/hyperledger/burrow/pull/686,silasdavis,Allow callbacks to close subscriptions.,"I noticed that we were accumulating subscriptions that were repeatedly trying to write their results to closed websockets. This is wasteful and leaks memory. This PR allows callbacks to signal they are finished even if the subscription is not explicitly closed when we fail to write a response to a websocket, which happens either when it is closed or the `writeChan` buffer is full - we can't tell which currently, but the buffer default is 1000 messages. It seems reasonable to drop a subscription if a subscriber is failing to keep up with this many messages.

Also since event types are now fired as pointers `ResultEvent` constructed needed to be changed.",[],2,2018-02-14 23:42:35,2018-02-15 08:39:06,2018-02-15 08:39:06,True,2018-02-15 08:39:06,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/685,https://github.com/hyperledger/burrow/pull/685,silasdavis,Upgrade dependencies and events system,"This PR upgrade all dependencies, in particular it:
- Takes Tendermint to v0.15.0
- Overhauls event system to use Tendermint pubsub - removing issues with blocking and adds query system
- Removes various instances of go-wire in favour of cleaner approach

The first commit is all vendor changes, review the latter commits.",[],5,2018-02-13 22:52:14,2018-02-14 13:07:00,2018-05-10 20:06:56,True,2018-02-14 13:07:00,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/683,https://github.com/hyperledger/burrow/pull/683,silasdavis,Add Bytecode lexer and remove panic from Splice,This adds to the `Bytecode` type to provide a opcode tokeniser which is useful for building test cases and printing human readable EVM code.,[],1,2018-02-09 21:28:40,2018-02-11 13:37:39,2018-02-11 13:37:43,True,2018-02-11 13:37:39,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/682,https://github.com/hyperledger/burrow/pull/682,silasdavis,Feature/vm testing,😺 ,[],3,2018-02-08 16:25:49,2018-02-09 14:29:37,2018-02-09 14:29:40,True,2018-02-09 14:29:37,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/681,https://github.com/hyperledger/burrow/pull/681,silasdavis,Add VM test to check return of msg.sender,Courtesy of @guoger (thanks) - with some updates to use initialised contract code,[],1,2018-02-07 17:13:49,2018-02-09 16:04:24,2018-02-09 16:04:29,True,2018-02-09 16:04:24,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/679,https://github.com/hyperledger/burrow/pull/679,silasdavis,Merge Hypermarmot refactor to develop,Now we have tests passing this is ready to be stabilised on develop,[],26,2018-01-31 14:22:08,2018-01-31 15:38:29,2018-02-09 14:30:12,True,2018-01-31 15:38:29,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/678,https://github.com/hyperledger/burrow/pull/678,smblucker,Compressing bytecode with Splice helper in vm_test.go,These fixes utilize the Splice helper function to convert raw byte values to opcode constants in testing functions. This simultaneously improves readability and understanding of what the functions accomplish at a bytecode level. ,[],2,2018-01-30 16:37:18,2018-02-08 16:25:15,2018-05-16 18:50:55,True,2018-02-08 16:25:15,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/677,https://github.com/hyperledger/burrow/pull/677,guoger,Format code by `make fmt`.,Signed-off-by: Jay Guo <guojiannan1101@gmail.com>,[],1,2018-01-30 02:06:22,2018-01-31 14:34:04,2018-01-31 14:34:04,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/676,https://github.com/hyperledger/burrow/pull/676,silasdavis,Reinstate RPC/V0,"This reinstates the V0 RPC; plugging it in to the new `Service` backend, with the intention of maintaining substantial wire-level compatibility (though since the case convention used for accounts has changed this may break the Javascript libraries downstream - the fix can be straight-forward but I will revisit when testing legacy-contracts).

This includes the following changes:
- Remove the restful URL interface to V0
- Drop `rpc.Result` and go-wire from the `Service` interface types and rpc/TM
- Improve the event subscriptions websocket code to make use of the JSON-RPC ID
- Drop the V0 mocked and 'scumbag' tests which were fragile and of limited usefulness
- Make use of the graceful `Shutdown(context.Context) error` supported by Go's `http.Server` since 1.8 in anticipation of replacing much of the hand-rolled server code (in particular when adding web3)
- Fixes tests for new vendored code

",[],3,2018-01-29 13:55:21,2018-01-31 10:18:16,2018-02-23 14:45:02,True,2018-01-31 10:18:16,compleatang,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/673,https://github.com/hyperledger/burrow/pull/673,silasdavis,[Hotfix] Fix Burrow build dependency on go-clist (develop),"This deals with deleted go-clist dependency by updating to use tmlibs version and also depending on a fork of tendermint with updated import.

Making as a hotfix since this will not be an issue once #666 is merged since we will vendor and won't rely on upstream immutability.

Credit to @tommling for getting this started: #662 but also relies on a patched Tendermint I have pushed here: https://github.com/monax/tendermint/tree/go-clist-hotfix-0.9.2",[],1,2018-01-24 12:12:09,2018-01-24 12:26:22,2018-01-24 12:26:22,True,2018-01-24 12:26:22,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/672,https://github.com/hyperledger/burrow/pull/672,silasdavis,[Hotfix] Fix Burrow build dependency on go-clist ,"This deals with deleted go-clist dependency by updating to use tmlibs version and also depending on a fork of tendermint with updated import.

Making as a hotfix since this will not be an issue once https://github.com/hyperledger/burrow/pull/666 is merged since we will vendor and won't rely on upstream immutability.

Credit to @tommling for getting this started: https://github.com/hyperledger/burrow/pull/662 but also relies on a patched Tendermint I have pushed here: https://github.com/monax/tendermint/tree/go-clist-hotfix-0.9.2  ",[],1,2018-01-24 11:55:55,2018-01-24 12:09:40,2018-01-29 20:35:01,True,2018-01-24 12:09:39,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/671,https://github.com/hyperledger/burrow/pull/671,robert-zaremba,Gofmt -s,"The repository contains some `gofmt -s`  issues. This changeset is an autofix of solve them and Makefile integration.

## Motivation and Context

For clarity in future pull-requests, the `gofmt -s` issues should be solved once and for all.

This change doesn't break the code, because it uses official `gofmt` to only do the code formatting.
",[],2,2018-01-18 14:17:33,2018-01-24 12:00:05,2018-01-24 12:01:33,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/666,https://github.com/hyperledger/burrow/pull/666,silasdavis,Hypermarmot refactor,"# Refactor Summary:
For background see: https://lists.hyperledger.org/pipermail/hyperledger-tsc/2017-October/001163.html

About this PR:
**Note: rpc/v0 is currently out of action, I will resolve this with a future commit (possibly future PR)**

The feature/hypermarmot branch is even with develop/master apart from it containing this large commit: https://github.com/hyperledger/burrow/pull/666/commits/3ba7d190c2ece6b2baefb11b7bf0064b8ea5680c that pulls in the new vendor directory on which these commits have been rebased. This is to avoid third party code that we were acquiring through glide polluting this PR.

Key themes:
- Be a better EVM/execution library; more interfaces for key data structures and clearer boundaries
- Try to be a good Tendermint App rather than fight against it
- More immutability and type safety - ask if you want a mutable type, use stronger typing, offer more specific mutations (e.g. `MutableAccount.IncSequence()`)
- Pull monax tool functionality and tests into Burrow
- Large amounts of residual cleanup dating from original split with Tendermint
- Vendor dependencies for better reproducibility of builds

## Code hygiene
- Unified `Account` notion and introduced interface to support 
- Introduce composable State interfaces
- Use appropriate unsigned types for non-negative quantities
- Default to immutable types
- Move types to where their core functionality is defined (e.g. drop core/types and other delocalisation of types)
- Dial back punning of Tendermint types - but maintain some separation between execution, serialisation, and display types (for the same logical construct) where necessary (i.e. when they may reasonably change for different reasons)
 
- Communication between `TxCache`, `BlockCache`, and `State` strictly through 'State' interfaces rather than database sharing (prepares way for Merkle tree refactor)

## Project infrastructure 
- Transitioned from Glide to Dep
- Vendored dependencies
- Upgraded all dependencies

## Technical debt
- Removed manually mapped config
- Dropped pluggable modules notion
- Removed independent module versioning
- Dropped 'Pipe' notion and lazy loading
- Removed some unnecessary layers of indirection (interfaces)

## Accounts
Replaced the following structs with interfaces to encapsulate and allow immutability:
- Account
- Validator
- PrivateAccount
- Added `Concrete*` serialisation type
- Added 20 byte `Address` type (as opposed to `[]byte`) with various conveniences

## State
- account/state interfaces provide boundary over which state is accessed uniformly
- Introduced `Blockchain`, `Tip`, and `Root` to represent 'our' side of the blockchain state - that which we track, keep synchronised, and use in execution

## Execution
- `BatchExecutor` and `BatchCommitter` wrap `BlockCache` preparing for improved implementation
- `TxEncoder` and `TxDecoder` introduced to make possible to migrate to different binary encoding

## RPC
- Introduce central unified service.go
- Serialisation of `Result` via go-wire data mapper

### tm
- Rename to 'tm' in an effort to forget its origins and avoid confusion with our consensus engine/modules

## Tendermint
- Upgraded to 0.12.0 (and counting)
- Provided read-only view of node
- Implemented monax-keys interface backed PrivValidator (having requested change in Tendermint)
- Provide GenesisDoc in memory - derived from our GenesisDoc rather than passing around file
- Stopped exposing all possible config - will expose the bare minimum and coordinate those values

## Genesis
- `GenesisSpec` provides genesis templating and `monax chains make` type functionality, e.g.
```shell
# Chain one-liner to create keys according to spec, formulate GenesisDoc and config
burrow spec --participant-accounts 2 --full-accounts 1 | burrow configure --genesis-spec=- --validator-index 0 | burrow -c-
```
- Burrow -> TM genesis closed in via AppHash
- Genesis account types made compatible and convertible to/from `Account`/`PrivateAccount`

## Config
- Mapped automatically to/from `BurrowConfig` struct
- sources package providers ability to chain `ConfigProviders` (e.g. environment, file, XDG) together, to use a single file, split across multiple, or read directly from stdin.

## Events
- Serialisation via go-wire data mapper
- Introduce `AnyEventData` sum type
- Separate EVM and execution events
- Fixed empty cache bug

## Tx
- Serialise via data-mapper

## Serialisation
- Drop unnecessary tags and support TOML/JSON
  
  ",[],20,2018-01-09 19:38:22,2018-01-29 12:14:27,2018-02-23 14:45:13,True,2018-01-29 12:14:27,compleatang,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/665,https://github.com/hyperledger/burrow/pull/665,smblucker,Magic bytes to opcodes and comments,"Convert magic byte values to constant opcode references and add comments in vm_test.go

[vm_test.go.zip](https://github.com/hyperledger/burrow/files/1612108/vm_test.go.zip)
",[],15,2018-01-08 15:42:46,2018-01-24 12:01:05,2018-01-24 12:01:05,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/664,https://github.com/hyperledger/burrow/pull/664,zitterbewegung,Fixed broken links in Contributing and README.md,"Addresses issue #663 where there was a broken link in README.md (monax link) and the Contributor Guidelines link
Signed-off-by: Joshua Jay Herman <zitterbewegung@gmail.com>
",[],1,2018-01-01 18:16:32,2018-01-01 18:20:30,2018-01-01 18:20:30,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/662,https://github.com/hyperledger/burrow/pull/662,tommling,Glide dev install patch 660,"**Summary:**
As per issue 660, fix the dependency missing issue when using glide-install. This is mainly a work around while burrow catches up to a slightly newer tendermint version.


**Why the pull request?**
Basically, v0.9.2 tries to pull
```
[WARN]	Unable to checkout github.com/tendermint/go-clist
[ERROR]	Error looking for github.com/tendermint/go-clist: Unable to get repository: Cloning into '/home/t/.glide/cache/src/https-github.com-tendermint-go-clist'...
ERROR: Repository not found.
```
but go-clist now lives in a subpackage of github.com/tendermint/tmlibz

Unfortunately, not all the packages were migrated so we have some issues with multiple versions i.e.:
```
[ERROR]	Unable to import from github.com/tendermint/go-p2p. Err: Import github.com/tendermint/tmlibs repeated with different versions '' and 'develop'
```

**What does it do?**
Simply points glide to package it needs.
",[],5,2017-12-29 18:22:11,2018-01-24 11:57:32,2018-01-24 11:57:33,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/661,https://github.com/hyperledger/burrow/pull/661,tommling,Glide dev install patch 660,"**Summary:**
As per issue 660, fix the dependency missing issue when using glide-install. This is mainly a work around while burrow catches up to a slightly newer tendermint version.


**Why the pull request?**
Basically, v0.9.2 tries to pull
```
[WARN]	Unable to checkout github.com/tendermint/go-clist
[ERROR]	Error looking for github.com/tendermint/go-clist: Unable to get repository: Cloning into '/home/t/.glide/cache/src/https-github.com-tendermint-go-clist'...
ERROR: Repository not found.
```
but go-clist now lives in a subpacjage of github.com/tendermint/tmlibz

Unfortunately, not all the packages were migrated so we have some issues with multiple versions i.e.:
```
[ERROR]	Unable to import from github.com/tendermint/go-p2p. Err: Import github.com/tendermint/tmlibs repeated with different versions '' and 'develop'
```

**What does it do?**
Simply points glide to package it needs.
",[],2,2017-12-29 18:18:35,2017-12-29 18:21:32,2017-12-29 18:21:32,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/657,https://github.com/hyperledger/burrow/pull/657,silasdavis,WIP: Hypermarmot refactor,"# WIP Refactor Summary:

**Please note the commits prefixed with `WIP:` will be rebased in the future, you may need to force pull in the future**

**This PR is offensively large, but I promise it is roughly 2/3 renames, comments, and tests**

For background see: https://lists.hyperledger.org/pipermail/hyperledger-tsc/2017-October/001163.html 

Key themes:
- Be a better EVM/execution library; more interfaces for key data structures and clearer boundaries
- Try to be a good Tendermint App rather than fight against it
- More immutability and type safety - ask if you want a mutable type, use stronger typing, offer more specific mutations (e.g. `MutableAccount.IncSequence()`)
- Pull monax tool functionality and tests into Burrow
- Large amounts of residual cleanup dating from original split with Tendermint

## Code hygiene
- Unified `Account` notion and introduced interface to support 
- Introduce composable State interfaces
- Use appropriate unsigned types for non-negative quantities
- Default to immutable types
- Move types to where their core functionality is defined (e.g. drop core/types and other delocalisation of types)
- Dial back punning of Tendermint types - but maintain some separation between execution, serialisation, and display types (for the same logical construct) where necessary (i.e. when they may reasonably change for different reasons)
 
- Communication between `TxCache`, `BlockCache`, and `State` strictly through 'State' interfaces rather than database sharing (prepares way for Merkle tree refactor)

## Project infrastructure 
- Transitioned from Glide to Dep
- Vendored dependencies
- Upgraded all dependencies

## Technical debt
- Removed manually mapped config
- Dropped pluggable modules notion
- Removed independent module versioning
- Dropped 'Pipe' notion and lazy loading
- Removed some unnecessary layers of indirection (interfaces)

## Accounts
Replaced the following structs with interfaces to encapsulate and allow immutability:
- Account
- Validator
- PrivateAccount
- Added `Concrete*` serialisation type
- Added 20 byte `Address` type (as opposed to `[]byte`) with various conveniences

## State
- account/state interfaces provide boundary over which state is accessed uniformly
- Introduced `Blockchain`, `Tip`, and `Root` to represent 'our' side of the blockchain state - that which we track, keep synchronised, and use in execution

## Execution
- `BatchExecutor` and `BatchCommitter` wrap `BlockCache` preparing for improved implementation
- `TxEncoder` and `TxDecoder` introduced to make possible to migrate to different binary encoding

## RPC
- Introduce central unified service.go
- Serialisation of `Result` via go-wire data mapper

### tm
- Rename to 'tm' in an effort to forget its origins and avoid confusion with our consensus engine/modules

## Tendermint
- Upgraded to 0.12.0 (and counting)
- Provided read-only view of node
- Implemented monax-keys interface backed PrivValidator (having requested change in Tendermint)
- Provide GenesisDoc in memory - derived from our GenesisDoc rather than passing around file
- Stopped exposing all possible config - will expose the bare minimum and coordinate those values

## Genesis
- `GenesisSpec` provides genesis templating and `monax chains make` type functionality, e.g.
```shell
# Chain one-liner to create keys according to spec, formulate GenesisDoc and config
burrow spec --participant-accounts 2 --full-accounts 1 | burrow configure --genesis-spec=- --validator-index 0 | burrow -c-
```
- Burrow -> TM genesis closed in via AppHash
- Genesis account types made compatible and convertible to/from `Account`/`PrivateAccount`

## Config
- Mapped automatically to/from `BurrowConfig` struct
- sources package providers ability to chain `ConfigProviders` (e.g. environment, file, XDG) together, to use a single file, split across multiple, or read directly from stdin.

## Events
- Serialisation via go-wire data mapper
- Introduce `AnyEventData` sum type
- Separate EVM and execution events
- Fixed empty cache bug

## Tx
- Serialise via data-mapper

## Serialisation
- Drop unnecessary tags and support TOML/JSON",[],12,2017-11-23 15:56:09,2018-01-09 19:39:26,2018-01-30 22:00:18,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/656,https://github.com/hyperledger/burrow/pull/656,ryjones,Create DCO,DO NOT MERGE,[],1,2017-10-03 21:27:59,2017-10-03 21:36:25,2017-10-03 21:36:25,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/653,https://github.com/hyperledger/burrow/pull/653,silasdavis,Fix 0.17.1,,[],2,2017-09-06 14:04:20,2017-09-06 15:34:10,2017-09-06 15:34:11,True,2017-09-06 15:34:10,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/652,https://github.com/hyperledger/burrow/pull/652,silasdavis,Make sure we check for presence of burrow binary and that build succeeds,This fixes the missing Burrow binary from v0.17.1 and adds a test of the docker container to ensure it doesn't happen again.,[],1,2017-09-06 13:21:09,2017-09-06 14:01:44,2018-01-08 11:44:53,True,2017-09-06 14:01:44,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/651,https://github.com/hyperledger/burrow/pull/651,silasdavis,Ensure check and build included in pre-release CI jobs,"Missing a check (gofmt etc) in our pre-develop branch CI, thus failure when PRing to master not spotted when PRing to develop. Fixed here.",[],1,2017-09-05 13:22:24,2017-09-05 13:31:44,2018-01-08 11:44:53,True,2017-09-05 13:31:44,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/650,https://github.com/hyperledger/burrow/pull/650,silasdavis,Slacken multiplex test timing,,[],1,2017-09-05 13:02:28,2017-09-05 13:12:21,2017-09-05 13:12:21,True,2017-09-05 13:12:21,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/649,https://github.com/hyperledger/burrow/pull/649,silasdavis,Release 0.17.1,,[],7,2017-09-05 12:53:31,2017-09-05 13:50:51,2017-09-05 13:50:51,True,2017-09-05 13:50:51,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/648,https://github.com/hyperledger/burrow/pull/648,silasdavis,Use arg in dockerfile and remove volume,Will push this shortly as a patch release,[],2,2017-09-05 10:39:30,2017-09-05 12:52:07,2017-09-05 12:52:07,True,2017-09-05 12:52:07,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/647,https://github.com/hyperledger/burrow/pull/647,compleatang,remove volume from dockerfile,"This negatively affects downstream images who will be locked into root ownership of `$MONAX_PATH`. Removing the `VOLUME` invocation allows for normal transfer of ownership of the `$MONAX_PATH` by downstream images, and within this image.",[],1,2017-09-04 22:42:30,2017-09-05 10:40:40,2017-09-05 10:40:40,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/646,https://github.com/hyperledger/burrow/pull/646,silasdavis,Release 0.17.0,"Prepare master to have commit tagged 0.17.0, triggering release.

## Changelog
This is a service release with some significant ethereum/solidity compatibility improvements and new logging features. It includes:

- [Upgrade to use Tendermint v0.9.2](https://github.com/hyperledger/burrow/pull/595)
- [Implemented dynamic memory](https://github.com/hyperledger/burrow/pull/607) assumed by the EVM bytecode produce by solidity, fixing various issues.
- Logging sinks and configuration - providing a flexible mechanism for configuring log flows and outputs see [logging section in readme](https://github.com/hyperledger/burrow#logging). Various other logging enhancements.
- Fix event unsubscription
- Remove module-specific versioning
- Rename suicide to selfdestruct
- SNative tweaks

Known issues:

- SELFDESTRUCT opcode causes a panic when an account is removed. A [fix](https://github.com/hyperledger/burrow/pull/605) was produced but was [reverted](https://github.com/hyperledger/burrow/pull/636) pending investigation of a possible regression.",[],72,2017-09-04 11:32:21,2017-09-04 15:40:25,2018-09-25 21:00:35,True,2017-09-04 15:40:25,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/645,https://github.com/hyperledger/burrow/pull/645,silasdavis,Fix various logging issues revealed by PaaS deployment,,[],1,2017-09-02 14:58:46,2017-09-02 22:30:55,2017-09-02 23:49:58,True,2017-09-02 22:30:55,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/644,https://github.com/hyperledger/burrow/pull/644,silasdavis,Upgrade our CI/CD process,"Initially motivated by wanting to upgrade our images to use alpine 3.6 I have streamlined and improved the build process in the following ways:

- Upgraded our base image to alpine 3.6 and go 1.9.0
- Upgraded to CircleCI 2.0 (mostly to get access to docker >= 17.05, but this will be the version they support going forward)
- Changed our two-step build process + script to a single multistage build (this gives us the same small build image without juggling artefacts
- Dropped out dependence on Monax build and base images (defined in https://github.com/monax/monax). We now just depend on our own Dockerfile and a well maintained external images, so it should be easier to upgrade and get security fixes. 
- Enhanced our immutability guarantees around released images by:
  - Not pushing a release unless code version and tag version match
  - Pushing a separate `db-dev-${time}-${commit}` images from develop to avoid accidentally depending on a 'mutable pre-release'

Note that in order to get branch and tag filtering on CircleCI 2.0 I had to use their 'workflow' feature. We could potentially use this for other things, but frankly it was a bit of a pain to get it to do something as obvious as this setup is. Still it's nice to watch the workflow graph when it works...

I have been testing and iterating the circle process on my own fork. A commit to develop will trigger a build like this:
https://circleci.com/workflow-run/02e47d4f-dac1-4380-bce0-07d794e52f99

A tag is similar, but the build tool would tag it with the version in version.go (provided it the tag version matches).

Any other commit just tests:
https://circleci.com/workflow-run/6f4c8d9a-b828-472c-b74b-fd0917fab1bd

I have run https://github.com/monax/monax/blob/master/tests/test_jobs.sh against a chain running the image built from this and the tests pass.",[],1,2017-08-31 15:06:02,2017-08-31 17:02:30,2017-09-06 06:36:05,True,2017-08-31 17:02:30,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/643,https://github.com/hyperledger/burrow/pull/643,silasdavis,Fix various data races in events tests,Various data races in events (some are still outstanding) that cause intermittent test failures removed. Events could just do with an overhaul but every little helps.,[],2,2017-08-30 13:49:34,2017-08-31 14:40:19,2018-01-08 11:44:53,True,2017-08-31 14:40:19,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/642,https://github.com/hyperledger/burrow/pull/642,silasdavis,Specify log15 time key,The absence of this was causing an empty string for time key in log output,[],1,2017-08-29 14:42:20,2017-08-29 14:51:49,2017-08-29 14:51:49,True,2017-08-29 14:51:49,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/641,https://github.com/hyperledger/burrow/pull/641,silasdavis,Release 0.17.0,,[],63,2017-08-25 21:20:24,2017-08-25 21:31:38,2017-08-25 21:31:38,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/640,https://github.com/hyperledger/burrow/pull/640,rjones-lf,trigger cla,don't merge,[],2,2017-08-25 21:04:45,2017-08-25 21:05:13,2017-08-25 21:05:13,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/639,https://github.com/hyperledger/burrow/pull/639,rjones-lf,Create cla,,[],1,2017-08-25 21:00:47,2017-08-25 21:04:02,2017-08-25 21:04:02,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/638,https://github.com/hyperledger/burrow/pull/638,silasdavis,Add documentation and changelog for 0.17.0,Prepares for merging develop to master for tagging and releasing 0.17.0 ,[],1,2017-08-25 19:20:21,2017-08-25 21:17:24,2018-07-19 22:50:34,True,2017-08-25 21:17:24,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/637,https://github.com/hyperledger/burrow/pull/637,silasdavis,Make sure we log somewhere if no config supplied,,[],1,2017-08-25 15:41:07,2017-08-25 17:20:01,2018-01-08 11:44:53,True,2017-08-25 17:20:01,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/636,https://github.com/hyperledger/burrow/pull/636,silasdavis,Revert SELFDESTRUCT fix,"This reverts commit 288737d6ebec0888d131897489de7deb69969831 due to a possible regression described in: https://github.com/hyperledger/burrow/issues/626.

We don't have a reproduction of issue yet but we'll release with broken SELFDESTRUCT instead of possible bug here.",[],1,2017-08-25 14:51:39,2017-08-25 14:58:18,2018-01-08 11:45:54,True,2017-08-25 14:58:18,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/635,https://github.com/hyperledger/burrow/pull/635,silasdavis,Only push tagged version to their quay.io label,"This PR:

- Only pushes to quay.io from a tagged version or from develop
- Adds the commit and date to the docker label if building from a commit that is not tagged like a version (e.g. v0.17.0)

So:

- tagged commits should build and push to: `quay.io/monax/db:0.17.0`
- later on, commits to develop will push to `quay.io/monax/db:0.17.0-dev-20172408-c4c4651` (and so on...)

This means we can drop the idea of a 'mutable docker image for pre-release versions' which has been problematic. It also means we do not need to defensively version bump (before we know what kind of bump we want to do) on master/develop and the various pain that comes with version bump commits ending up as unexpected ancestors on branches we did not expect. This should generally remove some busywork.

The big bang of doing a release should be pushing the version tag. Note that if the version tag disagrees with the version in version.go then `build_tool.sh` will fail noisily.",[],1,2017-08-24 16:42:28,2017-08-24 17:43:32,2018-01-08 11:45:54,True,2017-08-24 17:43:32,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/634,https://github.com/hyperledger/burrow/pull/634,silasdavis,Some missing commits from master needed for clean merge on develop,,[],28,2017-08-24 15:45:33,2017-08-24 15:53:46,2018-01-08 11:45:54,True,2017-08-24 15:53:46,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/633,https://github.com/hyperledger/burrow/pull/633,silasdavis,Port up,,[],28,2017-08-24 14:56:00,2017-08-24 14:59:43,2017-08-24 14:59:43,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/632,https://github.com/hyperledger/burrow/pull/632,silasdavis,Release 0.17.0,"*Merge first this: #629 to get develop upstream of maser. This PR is branched from the source of #629.*

This PR includes all changes currently on develop omitting 288737d6ebec0888d131897489de7deb69969831 due to suspicious over a regression that may have been introduced by that change (see here: https://github.com/hyperledger/burrow/issues/626)

Once merged to master, tagged, and released this will become fixed as the default Burrow version that the https://github.com/monax/monax 0.18.0 depends on. ",[],50,2017-08-24 13:39:15,2017-08-24 14:30:28,2017-08-24 14:30:28,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/631,https://github.com/hyperledger/burrow/pull/631,silasdavis,Port master to develop,"This is mostly to make the version bump to 0.16.1 and ancestor of changes on develop so develop is mergeable to master.

I've also taken opportunity to add goimports fix directive that is useful to have in Makefile",[],28,2017-08-24 13:31:33,2017-08-24 13:57:50,2017-08-24 13:57:54,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/629,https://github.com/hyperledger/burrow/pull/629,silasdavis,Port changes from master,"This is mostly to make the version bump to 0.16.1 and ancestor of changes on develop so develop is mergeable to master.

I've also taken opportunity to add goimports fix directive that is useful to have in Makefile",[],1,2017-08-04 15:55:53,2017-08-24 14:03:38,2017-08-24 14:03:38,True,2017-08-24 14:03:38,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/628,https://github.com/hyperledger/burrow/pull/628,ghimire,Fix incorrect link references in README.md,,[],1,2017-07-27 16:41:46,2017-08-24 13:55:52,2017-08-24 13:55:52,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/625,https://github.com/hyperledger/burrow/pull/625,ratranqu,Protect WS endpoint against PANIC,"Currently, any Panic encountered during a WS call will kill the burrow process. This is not the case with http as gin-gonic protects against Panic (recovery.go).

This PR implements the same behaviour. ",[],1,2017-07-15 20:12:45,2018-03-12 10:10:13,2018-03-12 10:10:13,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/624,https://github.com/hyperledger/burrow/pull/624,ratranqu,"Develop: fixed Tx&Hold bug, added Broadcast&Hold","1/ Fix TransactAndHold bug when the the contract called ends up calling itself (leading to a nested event subscribe before the correct event is fired). Added a check that the code called leading to the event is the same as the one we are waiting the event for.

2/ Added a BroadcastAndHold JSON-RPC call over HTTP. This is to bypass instability of the Websocket API.",[],4,2017-07-10 21:13:30,2018-03-08 12:45:46,2018-03-08 12:45:46,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/621,https://github.com/hyperledger/burrow/pull/621,zramsay,apply the megacheck code vet tool,"- applies _some_ of the recommendations from the `megacheck` tool, which itself runs `unused`, `gosimple`, and `staticcheck`. See https://github.com/dominikh/go-tools/tree/master/cmd/megacheck for more information.
- only the least controversial edits were made. Bulk removal of unused functions/variables left untouched as they may have a planned usage.
- introduces `make megacheck` to the Makefile with the eventual goal of adding it to the test sequence.",[],2,2017-05-31 04:03:03,2017-08-24 13:49:19,2017-08-24 13:49:19,True,2017-08-24 13:49:19,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/614,https://github.com/hyperledger/burrow/pull/614,silasdavis,Remove hell,Since factored out and improved on in https://github.com/silasdavis/glide-lock-transitive,[],1,2017-05-23 18:13:29,2017-06-02 14:31:38,2017-08-04 15:54:15,True,2017-06-02 14:31:38,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/613,https://github.com/hyperledger/burrow/pull/613,silasdavis,Step back from the notion of two independent logging channels,"When I first implemented the logger I wanted to encourage a high frequency of log messages to the trace channel with impunity. To do this their are two independent language-level channels in InfoTraceLogger. It seemed like a good idea at the time. But in fact it introduces a fair bit of accidental complexity and some odd corner cases (since you want Info and Trace messages to be strictly ordered and interlaced you need to send Info messages to both the Info and Trace output loggers, which then obscures the intent of the sender... it ends up a bit confused).

The desired effect can be achieved in a simpler way with sinks (just filter trace messages), and I will be introducing logging presets (that is preset LoggingConfigs, because it's too much to ask people to write these from scratch for common cases) which will make it even easier.

So putting this down to experience I've decided it was optimising the wrong thing, and too early. So I have:

- Kept the same InfoTraceLogger type definition and semantics (more or less)
- Simplified InfoTraceLogger to take single output logger (which makes InfoTraceLogger a simple wrapper on top of go-kit/log/logger)
- Upgraded to latest go-kit/log which makes a minor improvements (Tendermint are also basing their logging component around go-kit/log)

Non-blocking logging is maintained, which i still thing is a good idea.

Logging presets will follow this, which I hope to be the last 'user friendliness' element that is missing from the logging component. Once we are on Tendermint 0.10.0 we can also provide a better logging capturing experience for Tendermint logs. ",[],1,2017-05-21 17:09:56,2017-06-02 14:32:12,2017-06-02 14:32:12,True,2017-06-02 14:32:12,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/610,https://github.com/hyperledger/burrow/pull/610,zramsay,client websocket: add missing verb to error message,similar to #608 ,[],1,2017-05-15 15:51:13,2017-05-15 22:01:14,2017-05-16 13:39:05,True,2017-05-15 22:01:14,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/608,https://github.com/hyperledger/burrow/pull/608,zramsay,fix error formatting,the number of verbs should match the number of arguments in `fmt.Errorf`,[],1,2017-05-11 17:04:22,2017-05-11 17:46:59,2017-05-11 18:18:12,True,2017-05-11 17:46:59,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/607,https://github.com/hyperledger/burrow/pull/607,silasdavis,Implement dynamic memory and fix out of bounds issues,"This PR introduces a dynamic memory implementation that satisfies the assumption (by Solidity) that memory will be dynamically allocated at the memory boundary when an `MSTORE` writes to the memory boundary provided by `MSIZE`.

The Solidity compiler assumes that memory will be dynamically allocated at the current memory upper bounds (as reported by `MSIZE`) if an `MSTORE` operation tries to write to it. I believe the reason for this behaviour is that it is an easy way to guarantee that a portion a of memory will be unused (since it has not yet been allocated). Obviously this only works if the EVM environment will dynamically allocate that memory for you. This PR implements this in Burrow.

For reference, the Solidity assumption around object creation is encoded in the Solidity compiler here: https://github.com/ethereum/solidity/blob/develop/libsolidity/codegen/ExpressionCompiler.cpp#L842-L851

And you can see the dynamic memory allocation in go-ethereum here: https://github.com/ethereum/go-ethereum/blob/master/core/vm/interpreter.go#L152-L173 . Where the memory size is just the mstore offset + one word calculated here: https://github.com/ethereum/go-ethereum/blob/master/core/vm/memory_table.go#L49-L51.

I have taken a simpler approach of growing the memory on a `Write` operation up to a configurable bounds. I make use of the underlying slice implementation in Go to efficiently grow arrays. This PR includes:

- Simple `Memory` interface to encapsulate memory operations
- Adds a `memoryProvider` argument to `NewVM`
- Switches out memory slice for new `Memory` object 
- Fixes issues arising because the `subslice` function simply wasn't fit for purpose
- Adds a variety of tests, including on in the VM to test for the specific 'allocation on boundary' behaviour Solidity expects.

I have verified that this fixes the following issues:

fixes #474 
fixes #258 
fixes #300 (could not use exactly the same code)",[],1,2017-05-09 19:00:36,2017-05-15 19:22:47,2017-08-04 15:54:15,True,2017-05-15 19:22:47,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/606,https://github.com/hyperledger/burrow/pull/606,silasdavis,Change hasBase to return bool,"This change was inadvertently omitted from #500, it changes the return type of `hasBase` to bool to match the other predicate methods.

I've also added an error message if one attempts to call an snative directly (simulated call as in query-contract) which mirrors the error message given in execution.go when doing the same via a `CallTx`.",[],1,2017-05-06 21:17:03,2017-05-08 15:20:34,2017-08-04 15:54:15,True,2017-05-08 15:20:34,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/605,https://github.com/hyperledger/burrow/pull/605,silasdavis,Clean up storage and account tombstones from BlockCache ,"An issue occurs on block commit when  an account is removed from the `BlockCache`, for example (the only example I'm aware of) when `SELFDESTRUCT`/`SUICIDE` is called. This line in `BlockCache`.Sync is reached: https://github.com/hyperledger/burrow/blob/master/manager/burrow-mint/state/block_cache.go#L227 when Burrow attempts to remove an account from the merkle IAVL tree when it has already been removed. This happens one block after the block that _did_ successfully remove the account because the `BlockCache` holds an 'append only' cache of account and storage changes: https://github.com/hyperledger/burrow/blob/master/manager/burrow-mint/state/block_cache.go#L41-L42. It stores an account removal by setting a 'removed' flag so the account object becomes a tombstone object. But the `Sync` method does not clean up these objects so on the subsequent block it attempts to remove an account that has already been removed.

I'd like to think a bit more about where else we may be having a stale cache and see if there is a reasonable way to test the Sync method if that can be added in reasonably timely fashion.

fixes #542 

Resolves my test case that can be found here: https://gist.github.com/silasdavis/7f35cb31a255c18d2fc70eed1fa38211",[],1,2017-05-05 18:33:56,2017-05-11 14:37:06,2017-08-04 15:54:15,True,2017-05-11 14:37:06,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/604,https://github.com/hyperledger/burrow/pull/604,silasdavis,rename suicide to selfdestruct to match upstream,,[],1,2017-05-05 16:38:40,2017-05-08 13:15:41,2017-08-04 15:54:15,True,2017-05-08 13:15:41,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/603,https://github.com/hyperledger/burrow/pull/603,silasdavis,Don't capture time twice,Leads to vector-valued time that is unprintable. We are adding time to capture logs through `WithMetadata` already,[],1,2017-05-05 16:38:21,2017-05-08 10:55:30,2017-08-04 15:54:15,True,2017-05-08 10:55:30,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/599,https://github.com/hyperledger/burrow/pull/599,silasdavis,make multiline terminal output the default for cli,,[],1,2017-05-05 13:27:08,2017-05-05 13:31:02,2017-08-04 15:54:46,True,2017-05-05 13:31:02,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/598,https://github.com/hyperledger/burrow/pull/598,silasdavis,Fix broken unsubscribe…,"Also don't rely on go-rpc's definition of `Unsubscribe` and `Subscribe`, which even when it was compatible with ours was only 'by chance' (and history). So we:

- Use 'eventId' arg name for `Subscribe` consistently
- Use 'subscriptionId' arg name for `Unsubscribe` consistently
- Centralise subscribe/unsubsribe in `rpc/tendermint/client` package (used by tests and `NodeClient`) in a similar way as the non-websocket call-based methods are.

fixes #597 ",[],1,2017-05-04 12:51:27,2017-05-04 13:13:43,2017-08-04 15:54:15,True,2017-05-04 13:13:43,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/596,https://github.com/hyperledger/burrow/pull/596,silasdavis,Remove module versioning,"In the process of doing the Tendermint upgrade I came up against the slightly cumbersome process for updating our versioning. Since the upgrade touched this I have tried to address it here. I understand the legitimate motivations for the independent versioning of modules (from Burrow itself), and I am happy to rollback changes if this really goes too far. However I put forward the following arguments/principles that guided my work:

Burrow should continue to support the idea of 'modules' (consensus and manager), however it is down to a point release (that is specific compiled binary) of Burrow to ensure that the modules it bundles are compatible (with respect to versions). We do this through dependency management and versioning and therefore it is redundant to further assert on the versions of our modules. In reality it is not clear at all how we could support multiple versions of 'the same' manager. If we would like to support different compatibility-level versions of a manager or consensus engine then it is sufficient to give them separate names. For the purposes of Burrow's initialisation it does not need to know they they belong to the same lineage.

To determine compatibility between modules we should try and make use of the type system rather than hand-coded values (that we have to robotically have to upgrade in multiple places). We can extend the current 'dependency injection' of ConsensusEngine to help us with this. When a consensus module is loaded into a 'manager Pipe' (we load Manager first so we may as well consider the pipe to be manager-typed at that point) we can ask ConsensusEngine and Manager/Application to check Pipe for compatible implementations by trying to type convert interfaces: _, ok := pipe.ConsensusEngine.(BurrowMintCompatibleConsensusEngine). We can capture the actual functional requirements that a module may have by using this pattern. If we really need to be version specific (i.e. we have compatible interface signatures that belonging to logically incompatible versions) we can add a marker function func BurrowMint_0_18_4_Consensus() that captures that incompatible, but we can do so when we really need it rather than pre-emptively.

It is useful to error on being provided a configuration written by a different version of Burrow to the runtime version of Burrow. To do this we can continue to close the Burrow version into the generated config file. But as in 1 it is sufficient to just use the single over-arching version number.

The last commit introduces mechanisms to cover points 2 and 3",[],1,2017-05-02 12:00:00,2017-05-24 11:44:52,2017-05-24 11:46:33,True,2017-05-24 11:44:52,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/595,https://github.com/hyperledger/burrow/pull/595,silasdavis,Upgrade to Tendermint 0.9.2,"This PR:

- Makes changes necessary to support Tendermint 0.9.2 and upgrades our dependencies to match
- Adds attempt to gracefully shutdown ConsensusEngine
- Updates RPC tests to use genesis making and config generation rather than hard-coded values",[],3,2017-05-02 11:58:30,2017-05-02 12:16:50,2017-05-04 11:46:06,True,2017-05-02 12:16:50,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/593,https://github.com/hyperledger/burrow/pull/593,silasdavis,Tendermint 0.9.2 upgrade and rework versioning ,"This PR:
- Makes changes necessary to support Tendermint 0.9.2 and upgrades our dependencies to match
- Adds attempt to gracefully shutdown `ConsensusEngine`
- Updates RPC tests to use genesis making and config generation rather than hard-coded values

In the process of doing the upgrade I came up against the slightly cumbersome process for updating our versioning. Since the upgrade touched this I have tried to address it here. I understand the legitimate motivations for the independent versioning of modules (from Burrow itself), and I am happy to rollback changes if this really goes too far. However I put forward the following arguments/principles that guided my work:

1. Burrow should continue to support the idea of 'modules' (consensus and manager), however it is down to a point release (that is specific compiled binary) of Burrow to ensure that the modules it bundles are compatible (with respect to versions). We do this through dependency management and versioning and therefore it is redundant to further assert on the versions of our modules. In reality it is not clear at all how we could support multiple versions of 'the same' manager. If we would like to support different compatibility-level versions of a manager or consensus engine then it is sufficient to give them separate names. For the purposes of Burrow's initialisation it does not need to know they they belong to the same lineage.

2. To determine compatibility between modules we should try and make use of the type system rather than hand-coded values (that we have to robotically have to upgrade in multiple places). We can extend the current 'dependency injection' of `ConsensusEngine` to help us with this. When a consensus module is loaded into a 'manager `Pipe`' (we load `Manager` first so we may as well consider the pipe to be manager-typed at that point) we can ask `ConsensusEngine` and `Manager`/`Application` to check `Pipe` for compatible implementations by trying to type convert interfaces: `_, ok := pipe.ConsensusEngine.(BurrowMintCompatibleConsensusEngine)`. We can capture the actual functional requirements that a module may have by using this pattern. If we really need to be version specific (i.e. we have compatible interface signatures that belonging to logically incompatible versions) we can add a marker function `func BurrowMint_0_18_4_Consensus()` that captures that incompatible, but we can do so when we really need it rather than pre-emptively.

3. It is useful to error on being provided a configuration written by a different version of Burrow to the runtime version of Burrow. To do this we can continue to close the Burrow version into the generated config file. But as in 1 it is sufficient to just use the single over-arching version number.

The last commit introduces mechanisms to cover points 2 and 3",[],6,2017-04-29 15:49:26,2017-05-02 12:00:29,2017-08-04 15:54:46,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/592,https://github.com/hyperledger/burrow/pull/592,silasdavis,Upgrade to Tendermint 0.9.1,,[],1,2017-04-26 22:58:12,2017-04-27 10:39:28,2017-04-27 10:40:05,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/591,https://github.com/hyperledger/burrow/pull/591,silasdavis,Add extended tendermint config values to template and correct cs_wal_*,,[],1,2017-04-26 22:52:22,2017-04-27 10:40:54,2017-08-04 15:54:15,True,2017-04-27 10:40:54,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/590,https://github.com/hyperledger/burrow/pull/590,silasdavis,[release-0.16] bump version to 0.16.4,,[],3,2017-04-25 16:36:51,2017-04-25 16:58:12,2017-04-26 17:28:23,True,2017-04-25 16:58:12,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/589,https://github.com/hyperledger/burrow/pull/589,silasdavis,[master] bump version to 0.16.4,,[],1,2017-04-25 16:36:10,2017-04-25 16:58:27,2017-04-26 17:28:23,True,2017-04-25 16:58:27,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/587,https://github.com/hyperledger/burrow/pull/587,silasdavis,Release 0.16.3,,[],4,2017-04-25 14:51:26,2017-04-25 14:52:54,2017-04-25 14:52:58,True,2017-04-25 14:52:54,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/586,https://github.com/hyperledger/burrow/pull/586,silasdavis,Add transact fix,"This ensures that `Transact` never sends value, and if fee is passed as '0' it further ensures it will not leak tokens through the fee. The Javascript libraries should opt for '0' fee after this fix is incorporated (they have been hotfixed to send '1' as fee to get same effect against existing Burrow code).",[],2,2017-04-25 14:29:04,2017-04-25 14:49:51,2017-04-26 17:28:23,True,2017-04-25 14:49:51,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/585,https://github.com/hyperledger/burrow/pull/585,silasdavis,[release-0.16] V0.16.3 bump,"Also includes merge-back of docs typo fixes from master.

Also needed to cherry-pick circleci fixes.",[],9,2017-04-20 12:42:14,2017-04-20 13:55:14,2017-04-25 14:21:50,True,2017-04-20 13:55:14,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/584,https://github.com/hyperledger/burrow/pull/584,silasdavis,[master] Version bump to 0.16.3,Also needed to cherry-pick circleci fixes ,[],2,2017-04-20 12:40:28,2017-04-20 13:52:11,2017-04-25 14:21:50,True,2017-04-20 13:52:11,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/581,https://github.com/hyperledger/burrow/pull/581,bryant1410,Fix broken headings in Markdown files,"GitHub changed the way Markdown headings are parsed, so this change fixes it.

See [bryant1410/readmesfix](https://github.com/bryant1410/readmesfix) for more information.

Tackles bryant1410/readmesfix#1
",[],2,2017-04-18 04:26:35,2017-04-20 09:55:51,2017-04-20 09:55:51,True,2017-04-20 09:55:51,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/579,https://github.com/hyperledger/burrow/pull/579,silasdavis,Release 0.16,"This captures some changes around our genesis making utility functions and some readme cleanup.

The intention of this PR is to tag a release on the merge commit to master.",[],10,2017-04-14 13:37:04,2017-04-18 18:47:38,2017-04-18 18:47:38,True,2017-04-18 18:47:38,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/578,https://github.com/hyperledger/burrow/pull/578,benjaminbollen,Logging config and outputs (with latest develop),"merges silas:logging ( #484 ) into latest develop to assert that the CircleCI script is corrected or broken

(see https://github.com/hyperledger/burrow/pull/576/files#diff-29944324a3cbf9f4bd0162dfe3975d88R4)",[],14,2017-04-13 20:01:32,2017-04-13 20:06:40,2017-04-13 20:07:24,True,2017-04-13 20:06:40,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/577,https://github.com/hyperledger/burrow/pull/577,silasdavis,Retest buildtool,testing CI,[],2,2017-04-13 13:50:26,2017-04-13 14:55:11,2017-04-25 14:21:50,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/576,https://github.com/hyperledger/burrow/pull/576,silasdavis,Upgrade CI to docker 1.10.0 to fix remove image issue,"This PR:

- Upgrades to Circle approved docker 1.10.0
- Fixes issue where build image could not be removed
- Reintroduces removal of build image so it is not pushed
- Stops using repo username and instead hard codes hyperledger/burrow so CI will work against forks",[],1,2017-04-13 13:02:09,2017-04-13 15:58:54,2017-04-25 14:21:49,True,2017-04-13 15:58:54,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/575,https://github.com/hyperledger/burrow/pull/575,silasdavis,[release-0.16] apply hotfix from PR #571,Need this to make release-0.16 mergable to master,[],1,2017-04-13 10:15:59,2017-04-13 10:22:30,2017-04-13 11:11:58,True,2017-04-13 10:22:30,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/574,https://github.com/hyperledger/burrow/pull/574,silasdavis,[develop] Apply hotfix from PR #571,,[],1,2017-04-13 10:03:59,2017-04-13 10:21:55,2017-04-13 11:11:58,True,2017-04-13 10:21:55,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/573,https://github.com/hyperledger/burrow/pull/573,silasdavis,Pull in permissions util fix,Needed for 0.16.2,[],7,2017-04-13 09:57:37,2017-04-13 10:13:33,2017-04-13 10:13:33,True,2017-04-13 10:13:33,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/572,https://github.com/hyperledger/burrow/pull/572,silasdavis,Fix comments in permissions util,,[],1,2017-04-13 09:48:41,2017-04-13 09:54:02,2017-04-13 11:11:58,True,2017-04-13 09:54:02,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/571,https://github.com/hyperledger/burrow/pull/571,benjaminbollen,readme: correct CI build batches to direct to Hyperledger CI,,[],1,2017-04-13 09:39:21,2017-04-13 09:49:07,2017-04-13 09:50:39,True,2017-04-13 09:49:06,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/570,https://github.com/hyperledger/burrow/pull/570,silasdavis,Fix from int to bool,We need this to make it through to 0.16.2,[],4,2017-04-12 20:24:10,2017-04-13 09:56:45,2017-04-13 09:56:45,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/569,https://github.com/hyperledger/burrow/pull/569,VoR0220,change from uints to bools because it makes more sense,Signed-off-by: RJ Catalano <rj@monax.io>,[],1,2017-04-12 20:05:08,2017-04-12 20:23:01,2017-04-12 20:23:01,True,2017-04-12 20:23:01,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/568,https://github.com/hyperledger/burrow/pull/568,VoR0220,pull in vendor,Signed-off-by: RJ Catalano <rj@monax.io>,[],1,2017-04-12 18:30:41,2017-04-13 09:51:28,2017-04-19 15:41:20,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/566,https://github.com/hyperledger/burrow/pull/566,silasdavis,Remove accidental reference to 0.17 in config comment,,[],1,2017-04-12 10:23:38,2017-04-12 10:28:55,2017-04-13 11:12:13,True,2017-04-12 10:28:55,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/565,https://github.com/hyperledger/burrow/pull/565,silasdavis,Release 0.16,Merge for tagging release on master,[],33,2017-04-11 22:29:06,2017-04-12 18:09:22,2017-04-12 18:09:22,True,2017-04-12 18:09:22,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/564,https://github.com/hyperledger/burrow/pull/564,VoR0220,Capitalize beginning letters,was just beginning to bug me,[],2,2017-04-11 21:12:21,2017-04-12 14:55:38,2017-04-12 14:55:38,True,2017-04-12 14:55:38,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/563,https://github.com/hyperledger/burrow/pull/563,silasdavis,Attempting to fix docker build on push,,[],1,2017-04-11 18:27:50,2017-04-11 18:32:48,2017-04-13 11:11:59,True,2017-04-11 18:32:48,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/562,https://github.com/hyperledger/burrow/pull/562,silasdavis,Update Dockerfile to use hyperledger as repo,This is needed to fix the docker build,[],7,2017-04-11 16:09:15,2017-04-11 22:20:08,2017-04-11 22:20:08,True,2017-04-11 22:20:08,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/561,https://github.com/hyperledger/burrow/pull/561,silasdavis,Update Dockerfile to use hyperledger as repo,This is needed to fix the docker build,[],1,2017-04-11 16:09:05,2017-04-11 16:18:56,2017-04-11 16:18:56,True,2017-04-11 16:18:56,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/559,https://github.com/hyperledger/burrow/pull/559,silasdavis,[release-0.16] Move to github.com/hyperledger/burrow namespace and prepare for 0.16.2 release,Also prepares for v0.16.2 release with changelog update,[],25,2017-04-11 13:24:34,2017-04-11 15:29:11,2017-04-11 15:29:11,True,2017-04-11 15:29:10,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/558,https://github.com/hyperledger/burrow/pull/558,silasdavis,[develop] Move to github.com/hyperledger/burrow namespace,,[],2,2017-04-11 13:19:51,2017-04-11 15:27:48,2017-04-11 15:27:49,True,2017-04-11 15:27:48,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/557,https://github.com/hyperledger/burrow/pull/557,silasdavis,[master] Move to github.com/hyperledger/burrow namespace,This repo is now the canonical source and the monax (now) fork will be removed. ,[],1,2017-04-11 13:00:14,2017-04-11 13:30:46,2017-04-13 11:11:59,True,2017-04-11 13:30:46,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/556,https://github.com/hyperledger/burrow/pull/556,benjaminbollen,Merge master with renaming to Burrow up into develop,,[],34,2017-04-07 17:13:09,2017-04-07 17:15:44,2017-04-07 17:15:44,True,2017-04-07 17:15:44,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/555,https://github.com/hyperledger/burrow/pull/555,benjaminbollen,merge master into release-0.16,,[],5,2017-04-07 13:05:09,2017-04-07 13:09:59,2017-04-07 13:09:59,True,2017-04-07 13:09:59,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/554,https://github.com/hyperledger/burrow/pull/554,benjaminbollen,Patch v0.16.2: rename to Burrow,,[],13,2017-04-07 12:54:46,2017-04-07 13:11:48,2017-04-07 13:11:53,True,2017-04-07 13:11:48,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/553,https://github.com/hyperledger/burrow/pull/553,silasdavis,Rename to Burrow...,This omits some anticipated upstream changes to the location of our docker images on quay.io so another PR will be needed before we reach a commit we can actually release.,[],8,2017-04-04 18:25:25,2017-04-06 18:14:50,2017-04-10 11:27:13,True,2017-04-06 18:14:50,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/552,https://github.com/hyperledger/burrow/pull/552,benjaminbollen,Correct for tagged releases (breakage per name change),"- revert patch version number update on master back to v0.16.1
- correct docker tagging script to run correctly on CircleCi ",[],2,2017-04-04 17:16:01,2017-04-04 17:22:28,2017-04-04 17:22:28,True,2017-04-04 17:22:28,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/551,https://github.com/hyperledger/burrow/pull/551,silasdavis,Version bump,,[],3,2017-04-04 16:24:12,2017-04-04 16:30:51,2017-04-10 11:27:13,True,2017-04-04 16:30:51,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/550,https://github.com/hyperledger/burrow/pull/550,benjaminbollen,Pull hotfixes and name changes onto release-0.16,,[],24,2017-04-04 16:17:21,2017-04-04 16:20:47,2017-04-04 16:20:47,True,2017-04-04 16:20:47,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/549,https://github.com/hyperledger/burrow/pull/549,silasdavis,Added cluster/deployment scripts and templates,fixes #547 ,[],2,2017-04-04 15:53:23,2017-04-04 16:45:58,2017-04-10 11:27:12,True,2017-04-04 16:45:58,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/546,https://github.com/hyperledger/burrow/pull/546,benjaminbollen,client: correct yesterdays hotfix for event confirmation,correct yesterdays mistake in hotfix for e-db v0.16.0,[],1,2017-04-01 18:16:18,2017-04-01 19:22:57,2017-04-01 19:24:16,True,2017-04-01 19:22:57,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/545,https://github.com/hyperledger/burrow/pull/545,benjaminbollen,hotfix: new block events arrive late; causing missed return on waiting,"client: websocket waiting for result on call missed due to belated NewBlock event;
remove redundant check",[],1,2017-03-31 18:14:55,2017-03-31 18:17:37,2017-03-31 18:20:17,True,2017-03-31 18:17:37,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/544,https://github.com/hyperledger/burrow/pull/544,silasdavis,[Hotfix] Use debug flag,"Noticed the debug flag was not being respected. The EVM debug ought to be handled by the logging system, but this is still pending...",[],2,2017-03-29 18:10:18,2017-04-03 12:29:06,2017-04-10 11:27:12,True,2017-04-03 12:29:06,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/541,https://github.com/hyperledger/burrow/pull/541,benjaminbollen,contributing: add Developer Certificate of Origin for Apache 2.0,,[],1,2017-03-28 13:37:07,2017-03-28 14:13:52,2017-03-28 14:13:52,True,2017-03-28 14:13:52,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/538,https://github.com/hyperledger/burrow/pull/538,benjaminbollen,Merge master into develop,"- [x] pull up name change eris-ltd -> monax
- [x] license and docs hotfixes",[],17,2017-03-24 19:20:50,2017-03-24 19:44:56,2017-03-24 19:44:56,True,2017-03-24 19:44:56,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/537,https://github.com/hyperledger/burrow/pull/537,zramsay,Update circle.yml,,[],1,2017-03-24 19:19:05,2017-03-24 19:21:44,2017-03-24 19:21:49,True,2017-03-24 19:21:44,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/536,https://github.com/hyperledger/burrow/pull/536,benjaminbollen,Issue534 rename to monax,"fixes #534 

- [x] rename eris-ltd to monax
- [x] cut dependency on eris-keys for mock keys client; instead implement simple keys mock client
",[],5,2017-03-24 18:08:14,2017-03-24 18:55:35,2017-03-24 18:55:35,True,2017-03-24 18:55:35,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/535,https://github.com/hyperledger/burrow/pull/535,zramsay,rename all organization paths from 'eris-ltd' to 'monax' ,- closes #534 ,[],5,2017-03-22 23:14:27,2017-03-24 19:16:45,2017-03-24 19:16:49,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/533,https://github.com/hyperledger/burrow/pull/533,benjaminbollen,Pr531 test docs,tested #531 locally and added version patch update to v0.16.1,[],2,2017-03-22 11:30:48,2017-03-22 11:32:34,2017-03-22 11:32:34,True,2017-03-22 11:32:34,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/532,https://github.com/hyperledger/burrow/pull/532,VoR0220,Just vendor in the dependencies,"Reasons:

1. It makes our docker images smaller

2. It makes tooling's life a lot easier in importing dependencies.

3. It allows us to drop tools such as hell

I think these 3 succint reasons are more than enough to get rid of this paradigm. ",[],11,2017-03-21 21:54:04,2017-04-13 09:50:16,2017-04-13 09:50:16,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/531,https://github.com/hyperledger/burrow/pull/531,zramsay,docs: update harmonized links; remove generator,"- removes redundant generator files for docs generation
- updates links throughout to reflect new documentation paradigm
- merge only when we go live with the new docs on the website (shortly after release)",[],1,2017-03-21 13:55:31,2017-03-22 11:32:35,2017-03-22 11:32:35,True,2017-03-22 11:32:35,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/528,https://github.com/hyperledger/burrow/pull/528,benjaminbollen,bin: remove redundant shell script,"fixes #70 

- checked docker build; safe to remove deprecated script in `/bin`
- automatic gofmt change in `/test`
",[],1,2017-03-16 11:04:39,2017-03-16 17:30:35,2017-03-17 07:42:31,True,2017-03-16 17:30:35,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/525,https://github.com/hyperledger/burrow/pull/525,zramsay,strings.ToUpper(the-license-filename-prefix),"- the GitHub feature that displays the license type in repo header seems to require `LICENSE.md` and not `license.md` & it's also the default for a license filename; there's no reason to deviate.

cli (has it): 
![screenshot from 2017-03-03 21-32-02](https://cloud.githubusercontent.com/assets/8304391/23575369/dc22b32a-0058-11e7-8890-0ea9f533248f.png)

edb (doesn't have it): 
![screenshot from 2017-03-03 21-32-30](https://cloud.githubusercontent.com/assets/8304391/23575376/ebcc93ae-0058-11e7-899f-fbe8b2f61736.png)


",[],1,2017-03-04 02:33:15,2017-03-16 11:13:14,2017-03-16 11:13:14,True,2017-03-16 11:13:14,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/521,https://github.com/hyperledger/burrow/pull/521,benjaminbollen,Start develop on v0.17,,[],1,2017-02-28 16:54:36,2017-02-28 17:50:18,2017-02-28 17:50:18,True,2017-02-28 17:50:18,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/520,https://github.com/hyperledger/burrow/pull/520,silasdavis,Test for json_rpc_server BroadcastTx and refactor,"I was putting this together but unaware of: https://github.com/eris-ltd/eris-db/pull/516

Luckily although the changes did conflict they are kind of complementary. I've avoided extending the `Codec` interface to get the same effect. I've also move things around to more closely our naming elsewhere, or just name things as what they actually are.

mock_pipe is now used by the `json_server_test`",[],4,2017-02-28 15:30:54,2017-03-13 10:01:37,2017-03-15 14:19:43,True,2017-03-13 10:01:37,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/519,https://github.com/hyperledger/burrow/pull/519,benjaminbollen,Release eris-db v0.16.0,"Release eris-db v016.0:
Highlighted features and improvements :
- [pull-510](https://github.com/eris-ltd/eris-db/pull/510) upgrade consensus engine to Tendermint v0.8.0
- [pull-507](https://github.com/eris-ltd/eris-db/pull/507) use sha3 for snative addresses for future-proofing
- [pull-506](https://github.com/eris-ltd/eris-db/pull/506) alignment and consolidation for genesis and config between tooling and chains
- [pull-504](https://github.com/eris-ltd/eris-db/pull/504) relicense eris-db to Apache 2.0
- [pull-500](https://github.com/eris-ltd/eris-db/pull/500) introduce more strongly types secure native contracts
- full rework of the logging system to support different sinks, including syslog and graylog

Highlighted bugfixes: 
- [pull-453](https://github.com/eris-ltd/eris-db/pull/453) Fix deserialisation for BroadcastTx on rpc/v0
- [pull-465](https://github.com/eris-ltd/eris-db/pull/465) fix divergence from JSON-RPC spec for Response object",[],190,2017-02-28 04:01:17,2017-02-28 16:58:34,2017-02-28 16:58:35,True,2017-02-28 16:58:34,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/518,https://github.com/hyperledger/burrow/pull/518,benjaminbollen,Resolve merge conflicts with master on release-0.16,apologies for the triple white lines in the merge commit,[],6,2017-02-28 03:54:04,2017-02-28 16:11:53,2017-02-28 16:11:53,True,2017-02-28 16:11:53,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/517,https://github.com/hyperledger/burrow/pull/517,benjaminbollen,Changelog and Readme update for release v0.16.0,,[],3,2017-02-28 03:42:08,2017-02-28 15:45:15,2017-02-28 16:06:05,True,2017-02-28 15:45:15,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/516,https://github.com/hyperledger/burrow/pull/516,benjaminbollen,Fix for deserialisation of BroadcastTx which was missing a type byte.,"closes #453;
closes #511: it is necessary to explicitly use go-wire `DecodeBytesPtr`

- This should restore the `param` field to take a type byte for the Transaction type on a call to `erisdb.broadcastTx` on rpc/v0 as on v0.11; which lapsed in v0.12.
- Added minimal test to assert correct type recovery.
- move the test code that exist for rpc/v0 into `/eris-db/rpc/v0`; it was from lingering in `/test/...` from olden days.",[],5,2017-02-27 18:00:45,2017-02-27 19:28:07,2017-02-27 19:46:26,True,2017-02-27 19:28:07,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/515,https://github.com/hyperledger/burrow/pull/515,benjaminbollen,Review PR,This PR will collect the commits that I push directly to `release-0.16` branch to enable post-fact review as @silasdavis is on flight (and US sleeps),[],1,2017-02-27 10:36:23,2017-02-27 10:36:52,2017-02-27 10:36:52,True,2017-02-27 10:36:52,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/513,https://github.com/hyperledger/burrow/pull/513,VoR0220,fixes genesis so that tendermint consensus module lines up correctly,"This is a small oversight that causes Eris CLI to fail in working with chains with current docker images. 

Signed-off-by: RJ Catalano <rj@monax.io>",[],1,2017-02-26 21:22:42,2017-02-26 21:40:08,2017-02-26 21:40:08,True,2017-02-26 21:40:08,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/511,https://github.com/hyperledger/burrow/pull/511,silasdavis,Change BroadcastTx to use tx.Tx,"This should provide the same effect as: https://github.com/eris-ltd/eris-db/pull/453

The addition of the `DecodeBytesPtr` was unnecessary since go-wire will do the delegate to the correct function anyway.

To respond to @ratranqu, who said (in the PR linked above):

>It's a bit more than just a change from always assuming a CallTx to handling any types of Tx. The json representation of the asummed CallTx is also not consistent with how it's expected in the wire protocol (see txs/tx.go file, where the concrete type is defined for the wire protocol).

The reason this change should correct the expected formatting (even for a `CallTx`) is because the type byte is part of the default serialisation when we are decoding into a registered interface (as we are now with `tx.Tx`) but is not when decoding into a specific struct (as we were before with `&tx.CallTx`). 

I note that the `JsonRpcServer` methods are untested, and have always been. Still it feels a bit unpleasant to include this without a test. It should be possible to use `./test/mock` to put something together so I mark this as don't merge. (Incidentally `mock_web_api_test.go` really ought to be `rpc/v0/restServer_test.go`)...",[],1,2017-02-25 00:04:46,2017-02-27 19:50:07,2017-02-27 19:50:07,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/510,https://github.com/hyperledger/burrow/pull/510,benjaminbollen,Upgrade Tendermint to 0.8.0,"Mostly @silasdavis work, so Ill review and merge",[],21,2017-02-24 17:59:32,2017-02-24 18:20:26,2017-02-24 18:20:31,True,2017-02-24 18:20:26,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/509,https://github.com/hyperledger/burrow/pull/509,benjaminbollen,rpc/tendermint: fix TestBlockchainInfo,rpc/tendermint: fix TestBlockchainInfo as block metadata has restructured on tendermint 0.8,[],1,2017-02-24 17:31:14,2017-02-24 17:54:59,2017-02-24 17:55:05,True,2017-02-24 17:54:59,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/508,https://github.com/hyperledger/burrow/pull/508,silasdavis,Fix up consensus/tendermint config to match tendermint 0.8.0 ,"This allows the node to run. I think most rpc_client_tests are passing too, with the exception of the blockchain hash test.",[],1,2017-02-23 23:12:45,2017-02-23 23:30:18,2017-04-10 11:27:12,True,2017-02-23 23:30:18,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/507,https://github.com/hyperledger/burrow/pull/507,silasdavis,Use sha3 has for snative addresses for future-proofing,,[],3,2017-02-23 16:11:30,2017-02-23 21:18:07,2017-04-10 22:13:21,True,2017-02-23 21:18:07,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/506,https://github.com/hyperledger/burrow/pull/506,benjaminbollen,Release-0.16 alignment corrections into develop,,[],42,2017-02-23 12:59:33,2017-02-23 16:24:01,2017-02-23 16:24:02,True,2017-02-23 16:24:01,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/505,https://github.com/hyperledger/burrow/pull/505,VoR0220,added a quick fix for unmarshalling types problem in CLI,"

Signed-off-by: RJ Catalano <rj@monax.io>",[],1,2017-02-23 01:08:31,2017-02-23 01:17:53,2017-02-23 01:17:53,True,2017-02-23 01:17:53,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/504,https://github.com/hyperledger/burrow/pull/504,benjaminbollen,License eris-db to Apache2.0 for eris-db v0.16,Update the `license.md` and the license headers in the source code.,[],3,2017-02-22 16:24:40,2017-02-22 17:02:22,2017-02-22 17:02:22,True,2017-02-22 17:02:22,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/502,https://github.com/hyperledger/burrow/pull/502,silasdavis,Hacked away until buildable and runnable with Tendermint 0.8.0,"This gets feature-tendermint_0.8.0 to a state where:

- Tendermint and its transitive dependencies are upgraded 0.8.0
- All reference to tmsp have been converted to abci references
- Our partial support for out-of-process tmsp has been removed (we can add back in the abci server stuff if we want)
- EventSwitch has been changed to an interface throughout
- A Tendermint node can start but fails on making the `cs_wal_dir`

feature-tendermint_0.8.0 is a WIP branch with failing tests. So this is potentially mergeable despite failing tests. We may be able to find a way to divide work at this point, or it may be easier for me to try and get a bit further.


",[],4,2017-02-21 03:42:07,2017-02-23 18:23:37,2017-02-23 18:23:37,True,2017-02-23 18:23:37,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/501,https://github.com/hyperledger/burrow/pull/501,benjaminbollen,Release 0.16 - alignment with consolidated tooling wrt chain making,"After consolidation of eris-cm and eris-pm into eris tooling; some technical debt had to be resolved.  This PR is necessary for this re-alignment in eris https://github.com/eris-ltd/eris/pull/1235 to complete.

checklist:
- [x] clean up eris-db dependencies of `permissions`; merged in #499 
- [x] permissions utility to convert map[string]int into permissions type
- [x] genesis: define constructors for Genesis types to contain explicit dependency on tendermint/go-crypto into tooling; enabling us to inject our own crypto package without coordination with tooling.
- [x] genesis: introduce GenesisPrivateValidtor as an intermediary step to removing priv_validator logic from the stack
- [x] genesis: provide `genesis.GenerateGenesisFileBytes(chainName, []*GenesisAccount, []*GenesisValidator)` for tooling
- [x] final review",[],10,2017-02-19 23:52:51,2017-02-22 13:18:27,2017-02-27 20:15:05,True,2017-02-22 13:18:27,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/500,https://github.com/hyperledger/burrow/pull/500,silasdavis,Introduce more strongly typed SNatives and contract templates,"This PR aims to address the issue of having many versions of the permissions contract in different places. Since eris-db is responsible for interpreting SNative calls it seems sensible that eris-db holds the defintion for SNatives. This PR:

- Introduces a more strongly typed (the functions themselves are still not strongly typed) SNative and contract definition
- Allows you to generate a permissions contract with comments that compiles and can be exported to other projects like smart contract bundles
- Adds a test for the permissions contract

It doesn't change the fundamentals of how SNatives work.

The permissions contract structure is built from the libraries' team's version: https://github.com/eris-ltd/eris-contract-bundles/blob/master/src/commons-auth/contracts/SecureNativeAuthorizations.sol which Jason linked me too which is nicely commented.

Outstanding for this is:
- [x] Finalise what types we are going to use for the permissions function
- [x] Possibly take opportunity to change the naming conventions as in https://github.com/eris-ltd/eris-db/issues/417
- [x] Add a couple more unit tests

Once that is done then we can mechanical generate the solidity interface that we are advertising to clients and we can do this for any future SNatives (which is why I thought it was worth doing). By running:

```go
vm.SNativeContracts()[""permissions_contract""].Solidity()
```

Also note that the current version of snative.go on release-0.16 is missing a bracket in the signature.

fixes #498 
fixes #418 
fixes #417 ",[],8,2017-02-17 01:27:48,2017-02-22 12:51:20,2017-02-22 12:59:20,True,2017-02-22 12:51:20,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/499,https://github.com/hyperledger/burrow/pull/499,benjaminbollen,Cleanup: introduce word256 and remove dependency on tendermint/go-common,"While working on release-0.16, to have the eris-db definitions for Permissions to be a clean import into eris tooling, I removed the lingering dependency on `tendermint/go-common`; this saw me forced to pull this new type through the EVM and state as well; and finally there was then no need to preserve `tendermint/go-common` for sanity checks and random numbers for tests.

- introduces `eris-db/word256` for bytes32 and padding and conversion functions
- introduces `eris-db/common/sanity` for wrapping `PanicSanity` and `PanicCrisis`
- introduces `eris-db/common/random` for wrapping around `rand` and `crypto/rand`

- changes imports across `eris-db/manager` and `eris-db/permissions` ",[],4,2017-02-15 20:01:22,2017-02-16 22:26:09,2017-02-16 22:26:09,True,2017-02-16 22:26:09,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/494,https://github.com/hyperledger/burrow/pull/494,benjaminbollen,Issue434: cleanup comments with respect to internal time,"Improve comments with respect to impending work for internal time on v0.16
continues #434 
",[],1,2017-02-11 22:30:19,2017-02-12 00:05:58,2017-02-20 00:22:54,True,2017-02-12 00:05:58,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/493,https://github.com/hyperledger/burrow/pull/493,benjaminbollen,genesis: re-introduce GenesisTime in GenesisDoc,"continues #434 

- start the introduction of `GenesisTime` into the `GenesisDoc`",[],1,2017-02-11 19:51:56,2017-02-12 00:07:58,2017-02-20 00:22:55,True,2017-02-12 00:07:58,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/492,https://github.com/hyperledger/burrow/pull/492,benjaminbollen,circle: deploy version tagged image from develop,,[],1,2017-02-11 15:41:49,2017-02-12 00:05:38,2017-02-12 00:05:38,True,2017-02-12 00:05:38,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/491,https://github.com/hyperledger/burrow/pull/491,benjaminbollen,tests: add forced cleanup of :build tag,,[],2,2017-02-10 19:26:43,2017-02-10 19:28:20,2017-02-10 19:28:20,True,2017-02-10 19:28:20,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/490,https://github.com/hyperledger/burrow/pull/490,benjaminbollen,tests: add forced cleanup of :build tag,,[],1,2017-02-10 19:20:17,2017-02-10 19:27:58,2017-02-10 19:31:03,True,2017-02-10 19:27:58,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/486,https://github.com/hyperledger/burrow/pull/486,benjaminbollen,carry over hotfix: correct deployment from master and release,"circle: deploy artefacts from release and docs from master

master branch : push docker image with `:latest` + update documentation for `/latest`
release branch : push docker image with _mutable_ `v0.16.x` + update documentation
develop: don't push docker artefact or update documentation

for tagged commits of the form `v0.16.x` (or generalisations):
  push docker image with _immutable_ version tag + update documentation",[],2,2017-02-10 14:05:51,2017-02-10 18:46:46,2017-02-10 18:46:46,True,2017-02-10 18:46:46,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/485,https://github.com/hyperledger/burrow/pull/485,benjaminbollen,hotfix: correct deployment from master and release,"circle: deploy artefacts from release and docs from master

master branch : push docker image with `:latest` + update documentation for `/latest`
release branch : push docker image with _mutable_ `v0.16.x` + update documentation
develop: don't push docker artefact or update documentation

for tagged commits of the form `v0.16.x` (or generalisations):
  push docker image with _immutable_ version tag + update documentation",[],2,2017-02-10 14:02:15,2017-02-10 18:46:25,2017-02-10 18:46:25,True,2017-02-10 18:46:25,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/484,https://github.com/hyperledger/burrow/pull/484,silasdavis,Logging config and outputs,"Some refinement still on-going and writing some additional tests, but putting out for review now.

I need to tweak default configs for client and server and then verify a few things around capture.

Possibly we should provide some default verbosity filters for finer grain control than info and trace, but the LoggingConfig mechanism is pretty general.",[],13,2017-02-09 14:02:35,2017-04-13 20:06:41,2017-04-13 20:06:41,True,2017-04-13 20:06:41,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/480,https://github.com/hyperledger/burrow/pull/480,VoR0220,Function signatures automated and fix set global,Solves set_global portion and uint consistency on #417 . Also automates function identifier generation for a signature. ,[],4,2017-02-08 19:04:20,2017-02-16 12:33:23,2017-02-16 14:25:05,True,2017-02-16 12:33:23,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/479,https://github.com/hyperledger/burrow/pull/479,benjaminbollen,updating develop with intermediate fixes from release-0.16,,[],33,2017-02-08 18:15:10,2017-02-11 15:36:35,2017-02-11 15:36:35,True,2017-02-11 15:36:35,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/478,https://github.com/hyperledger/burrow/pull/478,VoR0220,fix snake case into camel case for permissions,"This is attempting to solve https://github.com/eris-ltd/eris-db/issues/417 but there are some breaking changes that come with it, and thus might be desirable to hold off on this. This can be updated and put into another branch. But this is the work to get it done. Let me know what you want to do with it. Feel free to copy. 

Signed-off-by: RJ Catalano <rj@monax.io>",[],1,2017-02-08 04:27:04,2017-02-08 15:45:31,2017-02-08 15:45:31,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/477,https://github.com/hyperledger/burrow/pull/477,VoR0220,Wip attempted fix at jump i,contains some bits from #476 but is attempting to solve the problem in #474 ... no more invalid jump dests but am not getting any output. Would love some insight and a fresh pair of eyes @silasdavis / @benjaminbollen . ,[],1,2017-02-08 04:23:22,2017-04-20 13:58:55,2017-04-20 23:09:31,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/476,https://github.com/hyperledger/burrow/pull/476,VoR0220,issue-476: return One256 for EXTCODESIZE on native contracts,"Fixes problem with not being able to get at the Snative contract. 

Signed-off-by: RJ Catalano <rj@monax.io>",[],4,2017-02-08 04:20:45,2017-02-08 17:48:34,2017-02-08 17:48:34,True,2017-02-08 17:48:34,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/472,https://github.com/hyperledger/burrow/pull/472,silasdavis,Target develop for v0.16.1,Since release-0.16 is now stabilising v0.16.0,[],3,2017-01-31 22:08:57,2017-02-02 13:58:40,2017-04-10 22:13:20,True,2017-02-02 13:58:40,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/471,https://github.com/hyperledger/burrow/pull/471,silasdavis,Target develop for v0.16.1,Since release-0.16 is now stabilising v0.16.0,[],1,2017-01-31 22:04:15,2017-01-31 22:05:47,2017-04-10 22:13:20,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/470,https://github.com/hyperledger/burrow/pull/470,silasdavis,Draft changelog,,[],1,2017-01-31 17:58:35,2017-01-31 22:01:58,2017-04-10 22:13:20,True,2017-01-31 22:01:58,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/469,https://github.com/hyperledger/burrow/pull/469,benjaminbollen, Begin stabilising v0.16.0 on release-0.16,"Changelog [TO BE MADE BEFORE MERGING]:

[Silas] Changelog can be copied in when we finally push to master.",[],93,2017-01-31 17:25:51,2017-01-31 22:01:03,2017-01-31 22:01:03,True,2017-01-31 22:01:03,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/468,https://github.com/hyperledger/burrow/pull/468,silasdavis,Add sub_id parameter,fixes #443 ,[],1,2017-01-31 14:16:30,2017-01-31 14:24:04,2017-01-31 22:11:13,True,2017-01-31 14:24:04,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/465,https://github.com/hyperledger/burrow/pull/465,benjaminbollen,update JSON-RPC codec to observe specification,"rpc: update JSON-RPC codec to follow the specification wrt Response object;
specifically the `result` and `error` member of the Response object are mutually exclusive per http://www.jsonrpc.org/specification#response_object

fixes #464 ",[],3,2017-01-30 16:57:46,2017-01-31 16:09:13,2017-01-31 16:09:13,True,2017-01-31 16:09:13,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/463,https://github.com/hyperledger/burrow/pull/463,benjaminbollen,Issue332 introduce makefile,,[],12,2017-01-28 22:52:50,2017-01-30 12:02:32,2017-01-30 12:02:32,True,2017-01-30 12:02:32,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/462,https://github.com/hyperledger/burrow/pull/462,benjaminbollen,Update version manager,pulls in #461; review afterwards,[],3,2017-01-27 14:04:50,2017-01-31 15:33:24,2017-01-31 15:33:24,True,2017-01-31 15:33:24,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/461,https://github.com/hyperledger/burrow/pull/461,benjaminbollen,Consolidation genesis make,,[],15,2017-01-27 13:21:33,2017-01-27 14:17:31,2017-01-27 14:18:58,True,2017-01-27 14:17:31,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/460,https://github.com/hyperledger/burrow/pull/460,silasdavis,"Include package in lock, and make sure everything installed",,[],1,2017-01-26 22:36:49,2017-01-26 23:02:15,2017-04-10 11:27:12,True,2017-01-26 23:02:15,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/459,https://github.com/hyperledger/burrow/pull/459,zramsay,[genesis] add maker command & import-ability by eris-cli,"- closes #434 
- needs additional work like #440 and the time bug fix",[],11,2017-01-26 14:24:14,2017-01-26 15:30:22,2017-01-26 15:30:22,True,2017-01-26 15:30:22,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/458,https://github.com/hyperledger/burrow/pull/458,silasdavis,goimports everything,,[],2,2017-01-26 13:30:01,2017-01-26 15:32:23,2017-04-10 11:27:12,True,2017-01-26 15:32:23,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/456,https://github.com/hyperledger/burrow/pull/456,silasdavis,Add back silencing of go-rpc output for client pending fix,,[],2,2017-01-25 16:24:08,2017-01-25 18:55:29,2017-01-25 18:55:47,True,2017-01-25 18:55:29,zramsay,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/455,https://github.com/hyperledger/burrow/pull/455,silasdavis,Feature logging,"Once we have https://github.com/eris-ltd/eris-db/pull/456

Suggest we merge the logging changes into develop. All of these changes have been reviewed.

The main thing missing at this stage is configuration which will be a subsequent pull request. Otherwise the logging works fine and people can base off this.

We _will_ have a slightly inconsistent logging output because we are not catching all of tendermint logs. Also all our logs will contain a rather long file-name trace, which will be configurable.",[],29,2017-01-25 16:13:25,2017-01-26 12:45:03,2017-01-26 12:45:11,True,2017-01-26 12:45:03,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/454,https://github.com/hyperledger/burrow/pull/454,silasdavis,Glide dependency updating tool,"We have a situation with the way glide currently works that mean we really rely on hand-editing the glide.lock file to upgrade dependencies. However glide does provide most of what we need. This is an effort to solve a common use face while we wait for glide to integrate the more full-featured GPS library (which should allow our use cases).

Hell allows you to upgrade a package using glide and simply absorb that package's glide.lock file into your own (as well as upgrading glide.yaml for future use).

It does what we wish `glide get` would (for our case). That is, it leaves all other dependencies alone and just pulls in first-level transitive dependencies specified in a dependency's glide.lock file.

The usage is something like:

`go run ./hell/cmd/hell/main.go get --interactive github.com/tendermint/tendermint`                     

This will use glide as library to get a version of tendermint (you can choose the release) and then tendermint's glide.lock into our own. This way we obtain the transitive dependencies that any glide-using project has specified.

It's a bit of a blunt instrument in that it will just overwrite conflicting dependencies. But most of the time this is what we want. It should tide us over until principled full-featured package management/conflict resolution lands in glide.",[],4,2017-01-25 14:08:07,2017-01-25 16:00:32,2017-03-14 18:16:12,True,2017-01-25 16:00:32,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/453,https://github.com/hyperledger/burrow/pull/453,ratranqu,Fix for deserialization of BroadcastTx which was missing the type byte.,"This fixes an issue when deserialising a BroadcastTx json-rpc request over websockets.

Until 0.11.4, such json would be valid:

```json
{
  ""id"": ""57EC1D39-7B3D-4F96-B286-8FC128177AFC4"",
  ""jsonrpc"": ""2.0"",
  ""method"": ""erisdb.broadcastTx"",
  ""params"": [
    2,
    {
      ""address"": ""5A9083BB0EFFE4C8EB2ADD29174994F73E77D418"",
      ""data"": ""2F2397A00000000000000000000000000000000000000000000000000000000000003132"",
      ""fee"": 1,
      ""gas_limit"": 1000000,
      ""input"": {
        ""address"": ""BE18FDCBF12BF99F4D75325E17FF2E78F1A35FE8"",
        ""amount"": 1,
        ""pub_key"": [
          1,
          ""8D1611925948DC2EDDF739FB65CE517757D286155A039B28441C3349BE9A8C38""
        ],
        ""sequence"": 2,
        ""signature"": [
          1,
          ""B090D622F143ECEDA9B9E7B15485CE7504453C05434951CF867B013D80ED1BD2A0CA32846FC175D234CDFB9D5C3D792759E8FE79FD4DB3006B24950EE3C37D00""
        ]
      }
    }
  ]
}
```

In 0.12.0, the ""params"" value is wrongly expected to be a dictionary instead of the correct [ type, {dict}].
  ",[],1,2017-01-24 22:05:47,2017-01-26 12:52:26,2017-01-26 12:58:00,True,2017-01-26 12:52:26,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/450,https://github.com/hyperledger/burrow/pull/450,silasdavis,Remove eris-logger from client,"This threads the logging through eris-client.

Mostly the same functionality (although there is a lack of tests in this repo so will need testing with eris-pm), but some slight behavioural changes possible where I have opted to exit fatally or removed some log output for failures of basic initialisation.

I've made lacking tcp:// or unix:// for node address fatal, but I think it should maybe just normalise/default to tcp://. Also we might want to parse it as a URL.",[],4,2017-01-18 15:34:44,2017-01-23 14:23:21,2017-01-23 14:23:21,True,2017-01-23 14:23:21,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/449,https://github.com/hyperledger/burrow/pull/449,silasdavis,Slight client package reorganisation,"I felt like a slight reorg would be useful before I add logging changes. I realise that naming and organisation is something of a matter of taste, but I feel changes similar to these make the intention of the code clearer and mirror what we have elsewhere. Happy to adjust (or even revert if there are real objections)

- Remove global vars (as in eris-db cmd)
- Move send and call to 'methods' package (seem to be natural bedfellows to 'status' taking a `ClientDo`)
- Rename `client/core` to `client/rpc` (open to other names but I'd rather avoid introducing another generic 'core' package and really everything in 'core' is actually just a RPC client implementation, so we can be more specific here)
- Rename `transaction_factory_*` to `client_*` (this doesn't feel like a factory building transactions (that happens in the 'txs' package) - it's a high-level thing - an implementation of an RPC client)",[],2,2017-01-18 11:07:16,2017-01-18 12:35:33,2017-04-10 11:27:12,True,2017-01-18 12:35:33,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/448,https://github.com/hyperledger/burrow/pull/448,pietv,"Revert ""Remove eris-logger references from eris-db server""",Reverts eris-ltd/eris-db#447,[],1,2017-01-18 09:20:39,2017-01-18 09:20:43,2017-01-26 12:54:10,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/447,https://github.com/hyperledger/burrow/pull/447,silasdavis,Remove eris-logger references from eris-db server,Little incremental refactor stripping out eris-logger,[],1,2017-01-17 19:12:12,2017-01-18 09:10:05,2017-01-18 12:33:46,True,2017-01-18 09:10:05,pietv,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/442,https://github.com/hyperledger/burrow/pull/442,silasdavis,Add documentation comment on lazy initialisation of account public keys,I thought this was a note-worthy piece of code.,[],1,2017-01-13 12:22:48,2017-01-13 12:37:54,2017-04-10 22:13:19,True,2017-01-13 12:37:54,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/440,https://github.com/hyperledger/burrow/pull/440,benjaminbollen,[WIP] db-434 genesis make,relates to #434 ,[],4,2017-01-12 15:29:40,2017-01-26 13:25:33,2017-01-26 13:25:33,True,2017-01-26 13:25:33,zramsay,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/433,https://github.com/hyperledger/burrow/pull/433,benjaminbollen,cmd: update company name to Monax,,[],2,2017-01-05 15:44:01,2017-01-25 16:02:08,2017-01-25 16:02:08,True,2017-01-25 16:02:08,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/428,https://github.com/hyperledger/burrow/pull/428,silasdavis,Logging conventions etc,,[],4,2016-12-20 15:03:39,2017-01-05 15:03:58,2017-01-05 15:03:58,True,2017-01-05 15:03:58,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/427,https://github.com/hyperledger/burrow/pull/427,zramsay,consolidate logging on unstable-develop,,[],6,2016-12-19 20:32:05,2016-12-19 20:34:11,2017-04-10 22:13:19,True,2016-12-19 20:34:11,VoR0220,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/426,https://github.com/hyperledger/burrow/pull/426,zramsay,consolidate little fixes / make-genesis on unstable-develop,,[],13,2016-12-19 20:31:28,2016-12-19 20:34:26,2017-04-10 22:13:19,True,2016-12-19 20:34:26,VoR0220,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/424,https://github.com/hyperledger/burrow/pull/424,benjaminbollen,apply gofmt,,[],1,2016-12-15 13:54:51,2016-12-20 17:46:18,2017-04-10 22:13:19,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/421,https://github.com/hyperledger/burrow/pull/421,silasdavis,Logging for preliminary review,"This WIP PR included the framework of the logging system I have written so far to implement ideas from https://github.com/eris-ltd/eris-db/pull/421. It also includes some changes that seemed apt to make as I introduce a non-global logger at the root level.

Guide to changes:

#### Housekeeping
- Convert global vars (like `do *definition.Do` and loggers) into functional dependencies:
  - better for testing
  - less action at a distance
- Safely wrapped Viper's subconfig
- Bit of gofmt and imports

#### Logging
- Opted for to use [go-kit log](https://github.com/go-kit/kit/tree/master/log) as the underlying interface (see below for discussion)
- Opted to support log15 both on input and output (to make use of its handlers)
- Introduced `InfoTraceLogger` as the main binary interface (choose just one level/channel) for our logging. Each channel can be routed separately
- Used `ChannelLogger` to have a non-blocking non-overflowing never-stop-the-caller execution
- Introduced `MultipleChannelLogger` and `MultipleOutputLogger` allowing composing of loggers roughly under 'OR' / 'AND' logic respectively. These will will allow for setting up arbitrary numbers of logging sinks (remote servers, syslog, stderr, files, etc).

####  go-kit log and log15
After various drafts of logging and flip-flopping between just using log15's interface as our main interface and wrapping it and just go-kit log I have opted for something of a mash-up between go-kit log and log15. Although I would argue (having read up quite a bit on the design intentions of go-kit log) that I am using go-kit log as intended: in that it is designed to be wrapped and composed. In some ways you might see go-kit log as a logging facade rather like slf4j (in Java land), but simpler.

go-kit is a thematically related collection of packages designed for 'microservice architectures'. You don't have to care about that in order for it to be relevant. But it is based around a generic structured logging interface `Log (keyvals... interface{}) error`. This is very similar to log15's handler, but by making it the single interface everything is built around it encourages logging to behave has a composable pipeline with a somewhat flexible, but structured, schema, that you can wrap for consumption (which is what `InfoTraceLogger` does). They also model `Context` as a struct that wraps a logger rather than a field within a `Record` as log15 does. This means that contexts are established external to loggers/records and that there are no 'preferred fields'.

My feeling is that this suits how we should come to think about logs: as data in their own right that drives other things. I also think that this kind of machinery might be a better way to think about events in general, though it needn't be.

I was also keen not to have too many log levels, because I think they rely on that a shared hierarchy exists between the mind of the log line emitter and the mind of log line consumer that does not generally exist. I also think that `Critical`, `Error`, and `Fatal` are somewhat misnomers: in that if you are logging something then by definition you have handled any error (this might be appropriate in other settings, but for us as a fault tolerant system I think most things should not be fatal). However it does seem useful to have a 'noisy' and a 'quiet' channel for logs, which I have designated as 'Trace' and 'Info' respectively. I prefer 'trace' from 'debug' because I like that it doesn't try to suggest the noisy log channel is only good for debugging, in fact it might be used to drive other systems. It would have be hard to wrap log15 to provide this interface.

However, since log15 has lots of nice handlers and since Tendermint uses log15 (their very slightly different fork) I have written an adapter that allows us to capture log15 logging and also allows use to use log15 handlers. I think this kind of wrapping is in the spirit of go-kit log, but wouldn't really be the other way around.",[],5,2016-12-12 17:19:29,2016-12-15 11:50:11,2016-12-15 11:50:22,True,2016-12-15 11:50:11,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/420,https://github.com/hyperledger/burrow/pull/420,benjaminbollen,consolidation;,"- move `genesis` to a top level namespace
- merge in develop, which also has config file templates introduced",[],10,2016-12-12 15:21:32,2016-12-14 16:47:59,2016-12-14 16:47:59,True,2016-12-14 16:47:59,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/416,https://github.com/hyperledger/burrow/pull/416,silasdavis,Pull in configuration templating from eris-cm,"When eris-cm is deprecated cli chould depend on eris-db to generate its config, so that eris-db becomes the source of truth on its own config.",[],1,2016-12-06 15:48:14,2016-12-06 15:58:51,2016-12-06 17:00:49,True,2016-12-06 15:58:51,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/415,https://github.com/hyperledger/burrow/pull/415,silasdavis,Tendermint upgrade attempt,,[],1,2016-12-05 22:52:29,2017-01-17 10:42:11,2017-04-10 11:27:13,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/414,https://github.com/hyperledger/burrow/pull/414,silasdavis,A more recent glide attempt,"An effort to improve the glide situation by updating the glide.yaml, which seems to cause some issues",[],1,2016-12-05 22:05:05,2016-12-05 22:52:06,2016-12-05 22:52:10,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/412,https://github.com/hyperledger/burrow/pull/412,benjaminbollen,Issue 411 structure build and test pipeline,"- introduce makefile for eris-db with 
`make check` : fails on gofmt
`make fmt` : applies gofmt
`make lint` : fails on golint
`make vet` : fails on go vet
`make erase_vendor` : deletes `/vendor`, as helper to ensure CI builds have clean vendor folder installed
`make install_vendor` : installs `/vendor` from `glide.lock`
`make build` : fail on check, build all targets
`make build_race` : fail on check, build all targets with check for race conditions
`make test` : fail on check, build and run go test (for all targets)
`make test_race` : as test, but with race conditions
`make build_docker_db` : build docker image for eris-db and tag with full version number
`make test_docker_db` : build docker image for eris-db and run go test inside the docker image

note: build also builds into `/target`

this set of instructions is not set in stone or incomplete, but it aims at providing a base-line to simplify the jenkins jobs needed to build, test, move artefacts, for multiple targets in a single repository as we consolidate the repositories.",[],7,2016-11-29 20:19:29,2016-12-02 11:01:01,2017-04-10 22:13:18,True,2016-12-02 11:01:01,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/410,https://github.com/hyperledger/burrow/pull/410,zramsay,genesis: cleanup old mintgen test & expose utility for importing as a package,"adds to/completes #375, closes #374 ",[],3,2016-11-29 18:12:31,2016-12-02 10:16:17,2017-04-10 22:13:18,True,2016-12-02 10:16:17,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/409,https://github.com/hyperledger/burrow/pull/409,zramsay,Update contributing file,"- syncs (mostly) the contributing file with eris-cli
- helps deprecate https://github.com/eris-ltd/coding
- closes #85
- may want to also consider adding the `PULL_REQUEST_TEMPLATE.md` (see cli's)
- issue template might need tuning per @silasdavis 's latest work. those changes should be ported to cli where applicable",[],3,2016-11-26 01:25:48,2016-11-28 12:32:29,2016-11-28 12:32:29,True,2016-11-28 12:32:29,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/408,https://github.com/hyperledger/burrow/pull/408,zramsay,fix a typo,shows up in logs regularly,[],1,2016-11-25 19:44:15,2016-12-05 22:06:41,2016-12-05 22:06:41,True,2016-12-05 22:06:41,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/385,https://github.com/hyperledger/burrow/pull/385,benjaminbollen,time: introduce marmot time,"patch for non-deteerministic `TIMESTAMP`

fixes #384 ",[],1,2016-11-18 06:27:40,2016-11-18 07:02:32,2016-11-21 11:36:11,True,2016-11-18 07:02:32,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/383,https://github.com/hyperledger/burrow/pull/383,benjaminbollen,[do not merge] galactica debug,"version, vm: shift version out of the release path; force evm executi…on log",[],3,2016-11-17 23:04:09,2017-02-08 11:46:05,2017-02-28 17:03:55,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/381,https://github.com/hyperledger/burrow/pull/381,benjaminbollen,client/core: fixes 378 patch exception error from chain,,[],1,2016-11-14 21:31:06,2016-11-15 16:17:45,2017-04-10 22:13:17,True,2016-11-15 16:17:45,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/380,https://github.com/hyperledger/burrow/pull/380,benjaminbollen,circle: add release-0.16 on develop,fixes #366 ,[],1,2016-11-14 21:17:45,2016-11-15 16:18:42,2017-04-10 22:13:18,True,2016-11-15 16:18:42,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/379,https://github.com/hyperledger/burrow/pull/379,benjaminbollen,"client/core: fixes 378 report exception, not error",fixes #378 ,[],1,2016-11-14 21:07:30,2016-11-14 21:25:12,2017-04-10 22:13:17,True,2016-11-14 21:25:12,VoR0220,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/376,https://github.com/hyperledger/burrow/pull/376,benjaminbollen,circle: correct name branch for deployment/release,,[],1,2016-11-14 11:50:12,2016-11-14 16:38:46,2016-11-14 16:38:46,True,2016-11-14 16:38:46,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/375,https://github.com/hyperledger/burrow/pull/375,zramsay,[WIP] add base mintgen functionality for generating genesis files,,[],5,2016-11-11 21:10:27,2016-11-22 18:39:49,2017-04-10 22:13:17,True,2016-11-22 18:39:49,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/372,https://github.com/hyperledger/burrow/pull/372,benjaminbollen,issue371: hotfix 0.12.1,"eris-mint/vm: issue371, hotfix silence event call for delegate call as no transaction can commence with delegatecall

is a hotfix for #371; but needs a more elegant solution:
```introduce event EventStringAccDelegateCall Acc/%X/DelegateCall```",[],1,2016-11-11 00:13:46,2016-11-11 00:16:58,2016-11-11 13:03:25,True,2016-11-11 00:16:58,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/369,https://github.com/hyperledger/burrow/pull/369,benjaminbollen,c. issue366 only deploy from branch `release-0.12` for RELEASE,fixes #366 ,[],1,2016-11-07 15:50:36,2016-11-14 10:30:53,2016-11-14 10:30:53,True,2016-11-14 10:30:53,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/368,https://github.com/hyperledger/burrow/pull/368,benjaminbollen,b. issue366 only deploy from branch `release-0.12` for MASTER,fixes #366 ,[],6,2016-11-07 15:48:55,2016-12-05 22:07:30,2016-12-05 22:07:30,True,2016-12-05 22:07:30,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/367,https://github.com/hyperledger/burrow/pull/367,benjaminbollen,a. issue366 only deploy from branch `release-0.12` for DEVELOP,fixes #366,[],1,2016-11-07 15:47:51,2016-11-14 16:38:25,2016-11-14 16:38:25,True,2016-11-14 16:38:25,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/365,https://github.com/hyperledger/burrow/pull/365,benjaminbollen,release v0.12.0,"CHANGELOG:
- no-operation after 0.12.0-rc3
- correction to build instruction, need to use glide as a dependency for eris-db
- silence rpc library for eris-client
",[],11,2016-11-03 13:59:11,2016-11-04 02:16:20,2016-11-04 02:16:21,True,2016-11-04 02:16:20,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/364,https://github.com/hyperledger/burrow/pull/364,benjaminbollen,Sync up develop after major rebase for rc3,,[],31,2016-11-03 13:50:26,2016-11-03 15:03:26,2016-11-03 15:03:26,True,2016-11-03 15:03:26,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/353,https://github.com/hyperledger/burrow/pull/353,benjaminbollen,readme: quick correction to build instructions,"resolves #346 
",[],1,2016-10-20 13:01:41,2016-11-02 13:14:57,2017-04-10 22:13:17,True,2016-11-02 13:14:57,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/351,https://github.com/hyperledger/burrow/pull/351,benjaminbollen,glide: update eris/common hash,"develop was broken on changes to git history of common
",[],1,2016-10-18 15:03:31,2016-10-18 15:27:21,2016-10-18 15:27:21,True,2016-10-18 15:27:21,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/349,https://github.com/hyperledger/burrow/pull/349,benjaminbollen,client: silence log output from go-rpc,"fixes #347 
",[],2,2016-10-18 11:48:08,2016-10-18 17:00:30,2017-04-10 22:13:17,True,2016-10-18 17:00:30,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/330,https://github.com/hyperledger/burrow/pull/330,benjaminbollen,release: correct version tag and remove lingering config file,,[],1,2016-10-11 19:02:21,2016-10-11 19:08:19,2016-10-11 19:08:19,True,2016-10-11 19:08:19,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/329,https://github.com/hyperledger/burrow/pull/329,silasdavis,Release 0.12.0-RC3,"# Eris-DB changelog
## 0.12.0-RC3

This release marks the start of Eris-DB as the full permissioned blockchain node
 of the Eris platform with the Tendermint permissioned consensus engine.
 This involved significant refactoring of almost all parts of the code,
 but provides a solid foundation to build the next generation of advanced
 permissioned smart contract blockchains.

 Many changes are under the hood but here are the main externally
 visible changes:
- Features and improvements
  - Upgrade to Tendermint 0.6.0 in-process consensus
  - Support DELEGATECALL opcode in Ethereum Virtual Machine (important for solidity library calls)
  - ARM support
  - Docker image size reduced
  - Introduction of eris-client companion library for interacting with
    eris:db
  - Improved single configuration file for all components written by eris-cm
  - Allow multiple event subscriptions from same host under rpc/tendermint
- Tool changes  
  - Use glide instead of godeps for dependencies
- Testing
  - integration tests over simulated RPC calls
  - significantly improved unit tests
  - the ethereum virtual machine and the consensus engine are now top-level
    components and are exposed to continuous integration tests
- Bugfixes (incomplete list)
  - [EVM] Fix calculation of child CALL gaslimit (allowing solidity library calls to work properly)
  - [RPC/v0] Fix blocking event subscription in transactAndHold (preventing return in Javascript libraries)
  - [Blockchain] Fix getBlocks to respect block height cap
",[],421,2016-10-11 17:33:34,2016-10-11 18:40:48,2017-04-10 11:27:12,True,2016-10-11 18:40:48,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/328,https://github.com/hyperledger/burrow/pull/328,benjaminbollen,"Revert ""Bump version, but label as development version""","Reverts eris-ltd/eris-db#325
",[],1,2016-10-11 17:32:39,2016-10-11 17:35:21,2016-10-11 19:32:44,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/327,https://github.com/hyperledger/burrow/pull/327,benjaminbollen,docs: suggest corrections to initial changelog,,[],1,2016-10-11 17:25:08,2016-10-11 17:29:05,2016-10-11 17:29:05,True,2016-10-11 17:29:05,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/326,https://github.com/hyperledger/burrow/pull/326,benjaminbollen,gofmt: full sweep on develop,,[],1,2016-10-11 17:12:36,2016-10-11 17:17:39,2016-10-11 17:17:39,True,2016-10-11 17:17:39,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/325,https://github.com/hyperledger/burrow/pull/325,silasdavis,"Bump version, but label as development version","Suggest that we merge this before the 0.12.0-RC3 PR to avoid accidentally releasing over the top of the quay image in future. Also suggest that we adopt the convention of sufficing our version on the develop branch with `-develop` so that we never push to a quay tag that ought to be reserved for a real non-development version.
",[],1,2016-10-11 17:02:21,2016-10-11 17:14:00,2017-04-10 11:23:42,True,2016-10-11 17:14:00,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/324,https://github.com/hyperledger/burrow/pull/324,silasdavis,Release 0.12.0-RC3,,[],412,2016-10-11 16:15:40,2016-10-11 17:33:00,2016-10-11 17:33:04,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/323,https://github.com/hyperledger/burrow/pull/323,silasdavis,Filled in changelog,,[],1,2016-10-11 15:33:53,2016-10-11 16:37:56,2017-04-10 11:27:12,True,2016-10-11 16:37:56,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/322,https://github.com/hyperledger/burrow/pull/322,benjaminbollen,"blockchain: correct filter condition, also skumtFel, fixes #120",,[],2,2016-10-11 13:53:17,2016-10-11 14:01:15,2016-10-11 14:01:15,True,2016-10-11 14:01:15,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/321,https://github.com/hyperledger/burrow/pull/321,compleatang,Feature smaller docker redux,,[],3,2016-10-11 12:32:05,2016-10-11 12:51:19,2016-10-11 12:54:04,True,2016-10-11 12:51:19,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/320,https://github.com/hyperledger/burrow/pull/320,compleatang,readme updates,,[],1,2016-10-11 09:08:20,2016-10-11 11:56:05,2016-10-11 12:54:06,True,2016-10-11 11:56:05,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/319,https://github.com/hyperledger/burrow/pull/319,compleatang,fix circle problems; push correct image,"circle can't rmi images and so build_tool will fail. 
",[],1,2016-10-10 19:49:03,2016-10-11 11:53:07,2016-10-11 12:54:07,True,2016-10-11 11:53:06,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/318,https://github.com/hyperledger/burrow/pull/318,compleatang,utilize a common docker building paradigm across the stack,"conform docker building paradigm to stack paradigm
",[],1,2016-10-10 02:29:12,2016-10-10 14:58:43,2016-10-10 14:58:43,True,2016-10-10 14:58:42,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/316,https://github.com/hyperledger/burrow/pull/316,compleatang,update readme to route traffic to monax,,[],1,2016-10-08 20:26:23,2016-10-10 10:42:53,2016-10-11 12:54:11,True,2016-10-10 10:42:53,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/315,https://github.com/hyperledger/burrow/pull/315,silasdavis,Reintroduce Send and SendAndHold,"Probably shouldn't have been removed.

fixes #298 
fixes #155

Note that the old implementation: https://github.com/eris-ltd/eris-db/pull/114/commits/b2d0b4d402319dbfef914354750bb69dae728025

used:

```
cache := this.mempoolReactor.Mempool.GetCache()
￼acc := cache.GetAccount(pa.Address)
```

whereas we use:

```
cache := this.erisMint.GetState()
￼acc := cache.GetAccount(pa.Address)
```

This follows Call
",[],1,2016-10-06 21:18:13,2016-10-07 13:25:04,2017-04-10 22:13:15,True,2016-10-07 13:25:04,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/314,https://github.com/hyperledger/burrow/pull/314,silasdavis,We were (probably) inadvertently depending on Tendermint's native RPC,"I noticed that transactor was relying on a Tendermint native RPC call `broadcast_tx_sync`:

```
_, err = app.client.Call(""broadcast_tx_sync"", params, &result)
```

One that we no longer support. We could implement it, or we could port it to call our RPC, but then this would still be one RPC making another HTTP request to talk to another RPC in the same process, which makes little sense. It ended up this way as we adopted a cautious approach in the refactor.

I have elected to instead delegate to our existing tested BroadcastTx implementation.

...

This also lead me to look at the history of the 'tendermint' endpoint (running on 46657 by default). This RPC was split into our 'rpc/tendermint' and Tendermint's own native RPC. Since we are running in-process we have no real need to run Tendermint's RPC (and it seems to me less can go wrong if we don't), but transactor was still expecting a Tendermint endpoint (though it looked similar to ours).

I then noticed that we are actually trying to run both our rpc/tendermint and Tendermint's native RPC on the same address and port (46657 by default). This obviously will not work. I think the best thing is to not run the Tendermint native one at all for now.

I have tried to take an approach that either simplifies or leaves things alone. I was tempted to rename/rearrange some config, but the fix works without that so I have avoided it.
",[],1,2016-10-06 19:34:16,2016-10-07 15:16:16,2017-04-10 22:13:15,True,2016-10-07 15:16:15,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/313,https://github.com/hyperledger/burrow/pull/313,silasdavis,Let's not depend on docker,"Goddamn auto-import in Intellij loves to choose docker packages over stdlib, so that's why glide thought we had a docker dependency.

This madness must stop.
",[],1,2016-10-06 16:03:38,2016-10-06 19:56:40,2017-04-10 22:13:15,True,2016-10-06 19:56:40,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/312,https://github.com/hyperledger/burrow/pull/312,silasdavis,Gas limit fix for *CALL (master),"As: https://github.com/eris-ltd/eris-db/pull/310
",[],2,2016-10-05 12:38:27,2016-10-06 10:21:30,2017-04-10 22:13:15,True,2016-10-06 10:21:30,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/311,https://github.com/hyperledger/burrow/pull/311,silasdavis,Gas limit fix for *CALL (0.11),"As: https://github.com/eris-ltd/eris-db/pull/310
",[],3,2016-10-05 12:38:05,2016-10-06 10:19:27,2017-04-10 22:13:15,True,2016-10-06 10:19:27,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/310,https://github.com/hyperledger/burrow/pull/310,silasdavis,Use proper gas limit in *CALL (develop),"This is a fix for some issues that led to the reversion here: https://github.com/eris-ltd/eris-db/pull/308.

And hopefully resolves the gasLimit issue described here: https://github.com/eris-ltd/eris-db/pull/305
",[],2,2016-10-05 09:46:21,2016-10-05 10:07:26,2017-04-10 22:13:15,True,2016-10-05 10:07:25,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/308,https://github.com/hyperledger/burrow/pull/308,silasdavis,"Revert ""Don't use difference between caller's and callee's gas as the gas limit for the call""","Reverts eris-ltd/eris-db#305

Because I did not run the tests in Godeps/ (and neither did circle) I did not notice the failures in:

`go test ./Godeps/_workspace/src/github.com/tendermint/tendermint/state`

That my change introduces. I will look into this tomorrow but need to revert now.
",[],1,2016-10-04 23:21:02,2016-10-04 23:33:27,2016-10-11 12:54:22,True,2016-10-04 23:33:27,pietv,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/307,https://github.com/hyperledger/burrow/pull/307,silasdavis,Use gasLimit for DELEGATECALL and test,"as https://github.com/eris-ltd/eris-db/pull/305
",[],2,2016-10-04 22:35:02,2016-10-04 23:15:19,2016-10-04 23:15:19,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/306,https://github.com/hyperledger/burrow/pull/306,silasdavis,Use gasLimit for DELEGATECALL and test,"As: https://github.com/eris-ltd/eris-db/pull/305
",[],1,2016-10-04 22:31:25,2016-10-04 23:15:41,2017-04-10 22:13:15,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/305,https://github.com/hyperledger/burrow/pull/305,silasdavis,Don't use difference between caller's and callee's gas as the gas limit for the call,"UPDATE] (04/10/2016) - seems this is a legitimate fix for https://github.com/eris-ltd/eris-pm/issues/212, so:
fixes https://github.com/eris-ltd/eris-pm/issues/212

I had some trouble convincing myself this could really be a bug, because as far as I can see it will have been a bug pretty much forever, and it's kind of fundamental. I think the reason it was not spotted is because we generally make very generous gas allowances, and for reasons I don't understand when EVM `CALL`ing (and friends) the gas allowance for those calls (allowed to the callee) must have been small to that available for the caller.

Explanation:
At the beginning of executing `CALL` and friends (`CALLCODE`, `DELEGATECALL`) we pop off a gasLimit value that the callee should be allotted for its execution:

``` go
gasLimit := stack.Pop64()
```

We make sure the callee is not asking for more gas than the caller, and provided it's not, we pre-emptively remove the full allowance before any computation has occurred (don't worry we'll pay it back later).

``` go
            // Ensure that gasLimit is reasonable
            if *gas < gasLimit {
                return nil, firstErr(err, ErrInsufficientGas)
            } else {
                *gas -= gasLimit
                // NOTE: we will return any used gas later.
            }
```

But then when we make the actual child call we use `gas`, which is now the _difference_ between what caller has allotted and what the callee should be allowed:

``` go
ret, err = vm.Call(callee, acc, acc.Code, args, value, gas)
```

Suppose the caller has 10000 gas, and the caller is allotted (a `gasLimit` of) 9999, then rather than calling with 9999 gas, we are calling with just 1!

For our native contracts we pass a pointer to `gasLimit` (as we should do):

``` go
ret, err = nativeContract(vm.appState, callee, args, &gasLimit)
```

And later we add on the remainder (that wasn't used by the callee):

``` go
            // Handle remaining gas.
            *gas += gasLimit
```

Which seems suggestive enough that this has indeed always been wrong. Unless I'm missing something, which I might be. But I think we should be passing the `gasLimit` we popped off the stack. 
",[],2,2016-09-29 15:37:19,2016-10-04 21:40:49,2016-10-11 15:32:29,True,2016-10-04 21:40:49,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/304,https://github.com/hyperledger/burrow/pull/304,benjaminbollen,Eris node websocket client,,[],10,2016-09-29 00:41:02,2016-10-06 13:27:15,2017-04-10 22:13:15,True,2016-10-06 13:27:15,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/303,https://github.com/hyperledger/burrow/pull/303,compleatang,update links in API spec,"add links to js SDK's.

some automatic whitespace cleaning....
",[],1,2016-09-28 11:24:54,2016-10-03 13:00:58,2016-10-11 12:54:24,True,2016-10-03 13:00:58,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/302,https://github.com/hyperledger/burrow/pull/302,benjaminbollen,"client, keys: revert to use of string over []byte, fix stupid errors",,[],1,2016-09-28 00:09:59,2016-10-03 13:02:14,2016-10-03 13:02:14,True,2016-10-03 13:02:14,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/301,https://github.com/hyperledger/burrow/pull/301,silasdavis,Add doc generator and fix some cmd help,,[],3,2016-09-27 17:53:56,2016-09-27 23:27:38,2016-10-11 15:33:30,True,2016-09-27 23:27:38,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/297,https://github.com/hyperledger/burrow/pull/297,silasdavis,Implemented rpc/v0 network info,"Didn't realise this was missing until recently. Easy enough to implement for release.

fixes #288 
",[],2,2016-09-23 15:48:09,2016-09-27 10:21:51,2017-04-10 22:13:15,True,2016-09-27 10:21:51,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/295,https://github.com/hyperledger/burrow/pull/295,benjaminbollen,client: add status command,,[],3,2016-09-23 12:07:52,2016-09-27 13:22:13,2016-09-27 13:22:13,True,2016-09-27 13:22:13,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/293,https://github.com/hyperledger/burrow/pull/293,benjaminbollen,DO NOT MERGE: Move tendermint validator to consensus tendermint,"POST rc3

consideration of avoiding exposure for tendermint types; but if we do it with an interface for tendermints validator; then logically you'd do it for all types defined by tendermint; which leaves no generalisation.

This seems to be a bad direction, rather I'd keep interfaces behaviorally, recasting the type into e-dnb types at a single interface; in this case consensusEngine
",[],2,2016-09-22 13:01:00,2016-11-03 10:32:53,2016-11-03 10:32:53,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/292,https://github.com/hyperledger/burrow/pull/292,benjaminbollen,"client: ListValidators, GetName",,[],2,2016-09-22 12:58:13,2016-09-22 13:48:39,2016-09-22 13:48:39,True,2016-09-22 13:48:39,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/290,https://github.com/hyperledger/burrow/pull/290,benjaminbollen,Eris client part5,,[],7,2016-09-21 14:05:29,2016-09-21 14:26:07,2016-09-21 14:26:07,True,2016-09-21 14:26:06,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/287,https://github.com/hyperledger/burrow/pull/287,benjaminbollen,Eris client part4,,[],6,2016-09-19 13:29:33,2016-09-21 14:19:01,2016-09-21 14:19:02,True,2016-09-21 14:19:01,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/286,https://github.com/hyperledger/burrow/pull/286,benjaminbollen,Eris client part3,,[],5,2016-09-18 19:42:30,2016-09-21 14:17:56,2016-09-21 14:17:56,True,2016-09-21 14:17:56,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/285,https://github.com/hyperledger/burrow/pull/285,silasdavis,Finish testing/fixing remaining RPC methods,"This adds tests and fixes some issues with the previously unimplemented RPC methods:
- `GetBlock`
- `ListValidators`
- `DumpConsensusState`

fixes #216 
fixes #221 
fixes #217 
fixes #220 
fixes #219 
fixes #275 
",[],1,2016-09-18 13:31:08,2016-09-18 19:58:09,2017-04-10 22:13:14,True,2016-09-18 19:58:09,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/283,https://github.com/hyperledger/burrow/pull/283,silasdavis,Unconfirmed transactions are real,"This adds tests for/fixes unconfirmed transactions
",[],1,2016-09-17 17:59:14,2016-09-17 19:26:17,2017-04-10 22:13:14,True,2016-09-17 19:26:17,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/282,https://github.com/hyperledger/burrow/pull/282,benjaminbollen,Eris client part3: QueryContract and QueryContractCode,"IMPORTANT: pulls in early integration test framework, which is incomplete but should not cause problems.  Review that it does not though.

client: correction to Status, and QueryContract and QueryContractCode
",[],11,2016-09-17 10:29:40,2016-09-17 13:32:32,2016-09-17 13:32:32,True,2016-09-17 13:32:32,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/281,https://github.com/hyperledger/burrow/pull/281,benjaminbollen,[not worth merging yet - update] Eris client: integration test framework -- early scratch,,[],9,2016-09-16 14:33:27,2016-09-17 13:32:33,2016-09-17 13:32:33,True,2016-09-17 13:32:32,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/280,https://github.com/hyperledger/burrow/pull/280,silasdavis,Implement missing RPC methods,"I have tried to split this PR into three logical commits:

The primary one is the first commit implementing the structure and code paths for the unimplemented RPC methods.

The second tidies up some panics in tx encoding.

The third rationalise the layout of the tests and makes them work with the new structure.

My next PR will have tests for ListUnconfirmedTransactions, and hook in functionality to transactor in rpc/v0.
",[],3,2016-09-16 14:11:58,2016-09-16 15:23:34,2017-04-10 22:13:14,True,2016-09-16 15:23:34,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/279,https://github.com/hyperledger/burrow/pull/279,benjaminbollen,client: rpc Status; evm: sync up Call and CallCode,,[],1,2016-09-16 13:09:01,2016-09-16 14:18:25,2017-04-10 22:13:14,True,2016-09-16 14:18:25,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/278,https://github.com/hyperledger/burrow/pull/278,VoR0220,Status() added along with a helpful gofmt,"Signed-off-by: VoR0220 rj@erisindustries.com
",[],4,2016-09-15 21:00:51,2016-09-16 10:13:33,2016-09-16 10:13:34,True,2016-09-16 10:13:33,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/276,https://github.com/hyperledger/burrow/pull/276,silasdavis,Refactor to consolidate consensus and blockchain at an appropriate level,"> _It hurts less if you pull it off quickly_

This refactor clears the way to implement the remaining unimplemented RPC methods. It consolidates disparate and confusing `Consensus` interfaces into a single interface and allows the `Blockchain` to initialised at the level of `Pipe` initialisation in `NewCore`.

It absorbs the previous eris-mint/blockchain struct into a simpler top level interface (a `BlockStore` with a `ChainId`) and has `Tendermint`(I dropped the 'Node') implement both `Consensus` (I dropped the 'Engine') and `Blockchain`.

As Ben originally suggested the blockchain package because a supporting actor to the consensus and manager packages, much like the account and permission packages.

Implementing the remaining RPC methods will be a matter of adding some methods to the Consensus and Blockchain interfaces and implementing them in Tendermint. 
",[],4,2016-09-14 17:13:16,2016-09-15 15:26:16,2017-04-10 11:27:13,True,2016-09-15 15:26:16,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/273,https://github.com/hyperledger/burrow/pull/273,silasdavis,RPC test for BlockchainInfo,"fixes #218 
",[],2,2016-09-12 19:21:27,2016-09-13 19:53:41,2017-04-10 22:13:14,True,2016-09-13 19:53:41,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/272,https://github.com/hyperledger/burrow/pull/272,silasdavis,Might be running the integration test wrapper when we didn't intend to and multiple times,"This might help with the bind: port already in use issues we sometimes see in circle.
",[],1,2016-09-12 12:12:58,2016-09-12 18:16:02,2017-04-10 22:13:14,True,2016-09-12 18:16:02,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/269,https://github.com/hyperledger/burrow/pull/269,silasdavis,Make sure command-line arguments expanded correctly,"Minor thing while I notice. In magic bash-land quoting the at-sign makes sure arguments containing spaces are properly expanding in the expansion when they are passed to the underlying command.
",[],1,2016-09-09 21:24:17,2016-09-11 14:01:38,2017-04-10 22:13:14,True,2016-09-11 14:01:38,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/268,https://github.com/hyperledger/burrow/pull/268,silasdavis,Fix blocking event subscription in transactAndHold (develop),"Same as: #266 for develop
",[],1,2016-09-09 19:18:26,2016-09-11 12:38:07,2017-04-10 22:13:14,True,2016-09-11 12:38:07,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/267,https://github.com/hyperledger/burrow/pull/267,silasdavis,Fix blocking event subscription in transactAndHold (0.11.x),"Same as: https://github.com/eris-ltd/eris-db/pull/266 for 0.11-series
",[],1,2016-09-09 18:47:24,2016-09-11 12:36:41,2017-04-10 22:13:14,True,2016-09-11 12:36:41,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/266,https://github.com/hyperledger/burrow/pull/266,silasdavis,Fix blocking event subscription in transactAndHold (master),"This resolves: https://support.erisindustries.com/helpdesk/tickets/356

The issue was that we are blocking in an event callback when we try to unsubscribe, which breaks go-events contract: https://github.com/eris-ltd/eris-db/blob/master/Godeps/_workspace/src/github.com/tendermint/tendermint/events/events.go#L157 (handily found in a comment with three **X**s!)

Do we want to make this a hotfix? 

I have tested this using the code from the support ticket. It would be nice to cement this with a unit test. This could go in `test/transacting/transacting_test.go`. But it looks to me like mocking this out will be a far amount of effort and I am conscious of other priorities given that we will probably replace go-events. Open to suggestions.

Will port this to develop, and I will also make a suggestion for improvement to go-events.
",[],1,2016-09-09 14:57:24,2016-09-11 12:35:27,2017-04-10 22:13:13,True,2016-09-11 12:35:27,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/263,https://github.com/hyperledger/burrow/pull/263,benjaminbollen,add backwards support to deployment of 0.11.4 branch,"circle: add backwards support to deployment of 0.11.4 branch

redoes #262 
",[],1,2016-09-07 13:23:11,2016-09-08 20:30:27,2017-04-10 22:13:13,True,2016-09-08 20:30:27,AFDudley,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/262,https://github.com/hyperledger/burrow/pull/262,benjaminbollen,Provide backwards support to 0.11.4 by maintaining deployment branch,"circle: add backwards support to deployment of 0.11.4 branch
",[],1,2016-09-07 12:49:06,2016-09-07 13:18:29,2016-09-17 19:50:53,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/261,https://github.com/hyperledger/burrow/pull/261,benjaminbollen,Issue260 delegatecall on develop,"fixes #260 
",[],3,2016-09-07 11:02:08,2016-09-07 11:15:00,2017-04-10 22:13:13,True,2016-09-07 11:15:00,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/257,https://github.com/hyperledger/burrow/pull/257,VoR0220,Needed params from chain status,"Needed the latest block height, so I plopped that in there. 
",[],6,2016-09-05 19:53:39,2016-09-07 14:34:39,2017-04-10 22:13:13,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/256,https://github.com/hyperledger/burrow/pull/256,VoR0220,Simulated call,"Attempts to run a simulated call whereby no actions affect the chain (my source for this is how they were done previously, but I am more than open to an alternative suggestion)
",[],3,2016-09-05 19:32:29,2016-09-07 14:34:21,2016-09-07 14:34:21,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/255,https://github.com/hyperledger/burrow/pull/255,silasdavis,Remove deprecated -f docker flag,,['compleatang'],1,2016-09-02 11:38:49,2016-09-02 11:47:24,2016-09-02 11:47:38,True,2016-09-02 11:47:24,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/250,https://github.com/hyperledger/burrow/pull/250,compleatang,significantly reduce build time of Dockerfile,,[],1,2016-09-01 00:37:15,2016-09-01 09:21:50,2016-09-20 11:42:51,True,2016-09-01 09:21:50,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/248,https://github.com/hyperledger/burrow/pull/248,benjaminbollen,Eris client test,"to be reviewed and merged together with #187 
- [x] revisit circle tests, and carry over work from eris-cm on integration framework testing
- [ ] test eris-client at integration level
",['benjaminbollen'],26,2016-08-31 00:08:39,2016-09-16 14:35:34,2016-10-11 12:53:55,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/247,https://github.com/hyperledger/burrow/pull/247,benjaminbollen,[REVIEW] issue244 delegatecall,"this is for communication, review and testing purposes only.  Do not merge this into master, until we have properly reviewed and tested
",[],5,2016-08-26 15:36:08,2016-09-07 10:46:37,2017-04-10 22:13:13,True,2016-09-07 10:46:37,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/243,https://github.com/hyperledger/burrow/pull/243,VoR0220,Update opcodes.go,"- includes delegatecall opcode. May need to include necessary changes in other files but this is a critical component for library usage and needs to definitely be implemented in the evm. 
",[],1,2016-08-24 18:47:03,2016-08-29 16:04:58,2017-04-10 22:13:13,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/242,https://github.com/hyperledger/burrow/pull/242,silasdavis,"Separate integration tests from unit tests by tag, and fix remaining RPC tests","The approach here is to use the build tag `integration` to prevent these from running with a default invocation of `go test`. For example see: https://divan.github.io/posts/integration_testing/.

To run integration tests use:

```
go test -v -tags integration ./rpc/tendermint/test
```

~~So for the time being, these won't be run on Circle. In due course we will run them on Jenkins.~~

I have enabled the tests on circle after talking with Ben, but they are run with separately using the build tag.

I have also fixed the remaining tests that were consistently failing. I've made a couple of changes aiming to improve test stability, but we may still see some flakes, in which case I will try to fix or failing that separate persistently failing tests with further.

fixes #204.
fixes #215.
fixes #203.
fixes #202.

Also re-enabled and fixed ./event tests, so:

fixes #234.
fixes #238.
",[],3,2016-08-23 15:26:43,2016-08-29 08:55:39,2017-04-10 22:13:13,True,2016-08-29 08:55:39,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/241,https://github.com/hyperledger/burrow/pull/241,benjaminbollen,rpc/tendermint: silence TestHTTPNameReg as it fails intermittently,,[],1,2016-08-23 14:08:58,2016-08-23 15:26:52,2017-04-10 22:13:13,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/240,https://github.com/hyperledger/burrow/pull/240,benjaminbollen,version: correct develop to v0.12.0-rc3,"- correct version on develop to v0.12.0-rc3
- improve the assertion of modules (specifically consensus/tendermint) to read semantic version of dependency from vendored source code, and assert whether it is compatible with the expected version.
- also addresses deprecation item in https://github.com/eris-ltd/eris-db/issues/236
",[],2,2016-08-23 13:50:18,2016-08-24 10:14:33,2017-04-10 22:13:13,True,2016-08-24 10:14:33,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/239,https://github.com/hyperledger/burrow/pull/239,benjaminbollen,testing: hard-cut on making the CI green,"track re-enabling in issue #238
",[],2,2016-08-22 17:52:25,2016-08-23 09:45:58,2017-04-10 22:13:13,True,2016-08-23 09:45:58,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/237,https://github.com/hyperledger/burrow/pull/237,silasdavis,"Fix mapAndValues and even write some, like, test",,[],1,2016-08-22 16:30:25,2016-08-22 17:21:22,2017-04-10 22:13:12,True,2016-08-22 17:21:22,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/235,https://github.com/hyperledger/burrow/pull/235,silasdavis,Use a random subscription id as rpc/v0 does on rpc/tendermint,"Fixes #177.
Fixes #172.
Fixes #225.
",[],1,2016-08-22 11:44:54,2016-08-23 10:18:02,2017-04-10 22:13:12,True,2016-08-23 10:18:02,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/233,https://github.com/hyperledger/burrow/pull/233,silasdavis,[Merge last] Fix NameReg test,"This fixes the NameReg test, it includes some associated improving of the test helpers to stabilise the test.

fixes #224. 
",[],2,2016-08-21 15:54:05,2016-08-22 11:01:50,2017-04-10 22:13:12,True,2016-08-22 11:01:49,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/232,https://github.com/hyperledger/burrow/pull/232,silasdavis,Dry up client,"![wet dog](http://i.imgur.com/XTLBA4d.gif)
",['silasdavis'],2,2016-08-21 15:33:58,2016-08-22 12:05:06,2016-10-11 15:33:24,True,2016-08-22 12:05:06,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/231,https://github.com/hyperledger/burrow/pull/231,silasdavis,Tweak BlockchainInfo to use stuff we have actually initialised,"This re-implements BlockchainInfo to work around #230. This implementation actually works, but unit tests will follow with #218, which require gently mocking erisMintPipe behind its back.
",[],1,2016-08-21 15:27:33,2016-08-22 10:09:10,2017-04-10 22:13:12,True,2016-08-22 10:09:10,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/229,https://github.com/hyperledger/burrow/pull/229,silasdavis,Don't special case empty blocks when refreshing the checkCache on commit,"There are more profound related considerations detailed in #228. But independent of those I think this simple change is a win for clarity and the principle of honouring the most recent committed state.

Only refreshing the checkCache on non-empty blocks can be seen as an optimisation that it turns out is on shaking grounds: namely assuming that the committing of an empty block implies that the checkCache is clean. This may have been true at one point, but no longer is in general.

This change also fixes an actual real life bug in the reprocessing of an identical transaction in the mempool that is encountered in integration tests.
",[],1,2016-08-20 11:59:01,2016-08-22 09:59:55,2017-04-10 22:13:12,True,2016-08-22 09:59:55,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/226,https://github.com/hyperledger/burrow/pull/226,silasdavis,Stop tests from panicking and fix stale cache issue,"Some changes here are to make the tests not panic. There is also in eris-mint.go a change to remove a stale cache bug.
",[],1,2016-08-18 21:05:32,2016-08-19 14:51:47,2016-08-19 14:51:47,True,2016-08-19 14:51:47,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/222,https://github.com/hyperledger/burrow/pull/222,silasdavis,Combine consensus and manager events into a pool of types we control,"The approach here is to deal with underlying go-events EventData that is a generic marker interface by mapping it to our our own EventData types, which is a marker interface with an assertion method. This is in the spirit of the refactor to take control of the types we depend on. Ultimately we still care about some tendermint types but we are reducing the surface area of the dependency.

This resolves some issues with subscription, which exposes some other issues that we will fix with a subsequent PR.
",[],2,2016-08-16 22:01:12,2016-08-17 16:12:31,2016-08-17 17:22:51,True,2016-08-17 16:12:31,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/206,https://github.com/hyperledger/burrow/pull/206,silasdavis,Remove redundant v0 gateway from tendermint tests,"Meant to remove this in a previous PR
",[],1,2016-08-12 17:51:26,2016-08-15 13:45:42,2017-04-10 22:13:12,True,2016-08-15 13:45:42,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/200,https://github.com/hyperledger/burrow/pull/200,silasdavis,Adding some debug output fixes issue with TestHTTPGetStorage [DO NOT MERGE],"Looking at the RPC test TestHTTPGetStorage, runnable with:

`go test -v ./rpc/tendermint/test -run TestHTTPGetStorage`

The test fails on the current develop branch with:

```
--- FAIL: TestHTTPGetStorage (0.94s)
    shared.go:233: UnknownAddress: 49EA30FCAE731BDE36742F85901549F515EA1A32
FAIL
```

Adding a bit of MARMOT debug, contained in this PR, which was only intended to provide some insight into the Accounts that are defined on the chain then 'fixes' the issue. So we have a Heisenbug. Clearly there is something a bit interesting going on here.

I will look into the cause off the original error some more, and then try to understand why what should be an unrelated read operation makes it go away.
",[],1,2016-08-12 12:33:25,2016-08-21 15:55:19,2016-08-30 10:16:58,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/199,https://github.com/hyperledger/burrow/pull/199,silasdavis,Some formatting clean up,"Cosmetic changes
",[],1,2016-08-11 18:50:20,2016-08-12 11:04:02,2017-04-10 22:13:12,True,2016-08-12 11:04:02,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/198,https://github.com/hyperledger/burrow/pull/198,silasdavis,Allow the RPC Subscribe method to see all events,"Those events from both consensus and application manager.

Doesn't fix tests. Because Ben.

Sorry, I have caught some bullshit formatting changes here.

manager/eris-mint/pipe.go is the real entry point here
",['silasdavis'],2,2016-08-09 19:03:53,2016-08-11 15:00:09,2016-08-20 11:56:24,True,2016-08-11 15:00:09,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/196,https://github.com/hyperledger/burrow/pull/196,zramsay,hotfix readme,,[],1,2016-08-09 09:55:55,2016-08-09 10:00:45,2016-08-09 10:10:20,True,2016-08-09 10:00:45,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/195,https://github.com/hyperledger/burrow/pull/195,zramsay,harmonize readme,"- uses https://github.com/RichardLitt/standard-readme
- PR blocking until https://github.com/eris-ltd/coding/blob/master/github/CONTRIBUTING.md
  is updated
",[],1,2016-08-08 14:48:39,2016-08-09 09:50:27,2016-08-09 10:10:30,True,2016-08-09 09:50:27,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/192,https://github.com/hyperledger/burrow/pull/192,benjaminbollen,Issue120 metablocks,,[],2,2016-08-04 10:09:31,2016-08-04 11:36:16,2017-04-10 22:13:12,True,2016-08-04 11:36:16,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/191,https://github.com/hyperledger/burrow/pull/191,benjaminbollen,"fix get blocks, #120","Needs a test to assert correct behaviour
",['benjaminbollen'],1,2016-08-04 09:27:19,2016-08-04 10:41:37,2016-09-20 11:43:02,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/187,https://github.com/hyperledger/burrow/pull/187,benjaminbollen,eris-client: carry-over from mint-client; client/core lib for eris-pm,"- [x] eris-client basic framework carry-over
- [x] eris-client tx send
- [x] call/bond/...
",[],25,2016-08-01 16:04:39,2016-09-15 15:28:40,2017-04-10 22:13:11,True,2016-09-15 15:28:40,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/184,https://github.com/hyperledger/burrow/pull/184,benjaminbollen,tendermint vm: fix issues #164,,[],1,2016-07-28 18:41:08,2016-07-28 19:27:49,2016-07-28 19:27:49,True,2016-07-28 19:27:49,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/182,https://github.com/hyperledger/burrow/pull/182,ebuchman,Create fix,"So this was actually pretty bad. Amazing that we never got it, probably because we never really cared about tokens. Basic ""address.send()"" from a contract [was broken](https://github.com/eris-ltd/eris-db/compare/create_fix?expand=1#diff-735ecc7ace7329b12bfb59eaa38f682bR495)! [This comment/contract](https://github.com/eris-ltd/eris-db/blob/develop/manager/eris-mint/evm/vm.go#L116) wasn't true, since we were [making calls without adding the account to the tx cache](https://github.com/eris-ltd/eris-db/blob/develop/manager/eris-mint/evm/vm.go#L814).

The new tests involve pre-compiled solidity contracts. It may be better to move them to epm, or to replace them with hand-written minimal byte code that captures the functionality.
",[],3,2016-07-28 03:18:53,2016-07-28 17:18:29,2016-08-30 10:17:29,True,2016-07-28 17:18:29,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/181,https://github.com/hyperledger/burrow/pull/181,benjaminbollen,tendermint vm: CREATE opcode pass NewAccount caller,"relates to (and solves on master) #164;
fix indicated by reduced tests posted by @dennismckinnon to be integrated in eris-pm

PRs follow for eris-db:develop
",[],1,2016-07-28 01:19:08,2016-07-28 01:32:19,2016-07-28 01:32:19,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/177,https://github.com/hyperledger/burrow/pull/177,silasdavis,Implement Subscription and other missing things,"Makes some tests pass in rpc/tendermint/test, not fully, but better than before. Small pieces :cake:
",[],2,2016-07-21 17:00:12,2016-07-22 13:17:22,2016-07-22 13:17:22,True,2016-07-22 13:17:22,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/176,https://github.com/hyperledger/burrow/pull/176,benjaminbollen,Re enable deploy on develop,,[],1,2016-07-21 12:30:05,2016-07-21 15:02:49,2017-04-10 22:13:11,True,2016-07-21 15:02:49,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/175,https://github.com/hyperledger/burrow/pull/175,benjaminbollen,closes #152; Rpc v0 web api test of formatted json data,"Restore web api test on /rpc/v0 that tests the formatting of the rpc, not the underlying implementation of erismint.  This can strongly be cleaned up and improved.
",[],4,2016-07-20 16:33:04,2016-07-20 16:56:38,2017-04-10 22:13:11,True,2016-07-20 16:56:38,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/174,https://github.com/hyperledger/burrow/pull/174,benjaminbollen,Fix Dockerfile; install dependencies with glide was missing,,[],1,2016-07-19 13:17:17,2016-07-19 13:20:54,2016-07-19 13:22:36,True,2016-07-19 13:20:54,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/173,https://github.com/hyperledger/burrow/pull/173,benjaminbollen,Fix Dockerfile; install dependencies with glide missing,"I forgot to actually install the dependencies with glide ...
",[],1,2016-07-19 13:00:47,2016-07-19 13:12:49,2017-04-10 22:13:11,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/170,https://github.com/hyperledger/burrow/pull/170,silasdavis,Add receipts and fix BroadcastTx tests,"With a bit of related refactoring.

May substantive changes are `GenerateReceipt` and callers thereof. The receipt gets marshalled and unmarshalled from the data payload of the Tendermint response.

Closes #109 
",['silasdavis'],4,2016-07-15 13:02:03,2016-07-19 08:51:36,2016-07-19 08:51:36,True,2016-07-19 08:51:36,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/160,https://github.com/hyperledger/burrow/pull/160,benjaminbollen,Deployment docker and ecm,"includes #157 partially, so merge after #157 is merged.
",[],14,2016-07-11 14:17:06,2016-07-19 09:32:15,2016-07-19 10:18:55,True,2016-07-19 09:32:15,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/159,https://github.com/hyperledger/burrow/pull/159,benjaminbollen,Carry over arm blockchain impl," includes https://github.com/eris-ltd/eris-db/pull/157; so merge after 157 is merged
",[],6,2016-07-11 14:14:48,2016-07-14 15:43:20,2017-04-10 22:13:11,True,2016-07-14 15:43:20,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/158,https://github.com/hyperledger/burrow/pull/158,silasdavis,Gofmt'd everything,"Also includes missing file from my accidental push.

Closes #156 
",[],2,2016-07-11 13:27:17,2016-07-11 13:32:57,2017-04-10 22:13:11,True,2016-07-11 13:32:57,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/157,https://github.com/hyperledger/burrow/pull/157,benjaminbollen,Issue152 disable mock web api tests,"Disable mock web_api tests; blocked on Codec / go-wire Parsing issue; but also tests need a separation of actual rpc test and state test
",[],5,2016-07-11 13:21:55,2016-07-11 14:37:42,2017-04-10 22:13:11,True,2016-07-11 14:37:42,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/151,https://github.com/hyperledger/burrow/pull/151,benjaminbollen,eris gateway [merged into develop],"Eris-DB has to evolve from an explicit chain implementation to a gateway functionality such that an increasingly rich landscape of blockchain technologies can be normalised through a modular gateway.
- introduce separation of consensus engine, application manager, and gateway rpc
- support tendermint 0.6 in-process
- support ErisMint 0.12 in-process
- support Eris-DB RPC; Tendermint RPC
",[],4,2016-07-06 13:26:06,2016-07-11 13:26:12,2016-07-11 13:26:12,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/150,https://github.com/hyperledger/burrow/pull/150,benjaminbollen,eris gateway,"Eris-DB has to evolve from an explicit chain implementation to a gateway functionality such that an increasingly rich landscape of blockchain technologies can be normalised through a modular gateway.
- introduce separation of consensus engine, application manager, and gateway rpc
- support tendermint 0.6 in-process
- support ErisMint 0.12 in-process
- support Eris-DB RPC; Tendermint RPC
",[],174,2016-07-05 14:32:17,2016-07-06 18:13:34,2016-08-30 10:16:20,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/147,https://github.com/hyperledger/burrow/pull/147,benjaminbollen,Glidable -- Test to validate that CI can glide install and build,,[],8,2016-06-21 09:56:38,2016-06-21 10:37:21,2016-06-21 10:37:21,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/145,https://github.com/hyperledger/burrow/pull/145,benjaminbollen,Issue #143 concurrency bug in godeps/tendermint/event RemoveListener,"fixes #143; godeps/tendermint/event.go: claim full lock on delete listener; refer to https://github.com/tendermint/go-events/pull/4 for more details.

As a lot of work has been put into moving Eris-DB to work with the up-to-date Tendermint, and the bug is tested and corrected there; we only apply a hot-patch here.
",[],1,2016-06-17 12:33:56,2016-06-20 13:26:57,2017-04-10 22:13:10,True,2016-06-20 13:26:57,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/142,https://github.com/hyperledger/burrow/pull/142,benjaminbollen,Activate servers,"We move the servers as they exist from Eris-DB into a new structure; but we explicitly preserve the existing code and API.  The aim is to subsequently review collectively a new architecture for the API.

Note that this PR does not yet have the Tendermint exposed RPC
",[],0,2016-06-14 13:40:16,2016-07-05 14:20:29,2016-07-05 14:20:29,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/141,https://github.com/hyperledger/burrow/pull/141,silasdavis,v0.12.0-rc1 Release,"- arm support
- fix of permissions for evm
- alpine
- godocs
",[],21,2016-06-13 17:57:20,2016-06-13 17:59:03,2016-06-13 17:59:03,True,2016-06-13 17:59:03,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/140,https://github.com/hyperledger/burrow/pull/140,benjaminbollen,add git verify-commit HEAD on CI,,[],0,2016-06-10 21:46:05,2016-06-17 12:17:31,2017-04-10 22:13:10,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/138,https://github.com/hyperledger/burrow/pull/138,compleatang,fixup for develop-tmsp,,[],1,2016-06-10 17:35:08,2016-06-10 17:44:22,2017-04-10 22:13:10,True,2016-06-10 17:44:22,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/137,https://github.com/hyperledger/burrow/pull/137,shuangjj,Native support for ARM,"closes https://github.com/eris-ltd/eris-cli/issues/718
",[],6,2016-06-10 16:58:49,2016-06-10 18:16:12,2016-06-10 18:16:12,True,2016-06-10 18:16:12,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/136,https://github.com/hyperledger/burrow/pull/136,compleatang,finalize the right padding of permissions for other roles funcs,"don't merge just yet. testing locally.
",[],1,2016-06-10 16:53:20,2016-06-10 17:43:28,2017-04-10 22:13:10,True,2016-06-10 17:43:28,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/134,https://github.com/hyperledger/burrow/pull/134,benjaminbollen,changes to fix permissions -> evm connection,"Just to make sure they are on develop-0.12.0 with the old godeps as well;
for the Build script to pick up the right version number for labeling, the version number needs to be on the last line of version/version.go
",['compleatang'],2,2016-06-09 22:08:05,2016-06-09 22:29:51,2016-06-09 22:29:51,True,2016-06-09 22:29:51,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/133,https://github.com/hyperledger/burrow/pull/133,benjaminbollen,re-introduce deployment from develop branch,"This might fix the cause of the failing E-PM tests (I had disabled deployment of the containers on develop branch)
",[],1,2016-06-09 21:42:25,2016-06-09 22:05:24,2016-06-09 22:05:24,True,2016-06-09 22:05:24,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/132,https://github.com/hyperledger/burrow/pull/132,benjaminbollen,@compleatang changes fix to permissions -> evm connection; - merge into discuss-eris-gateway,"applied to discuss-eris-gateway branch
https://github.com/eris-ltd/eris-db/commit/4769e410880a6daa7a6d2b5d1d7d3c86137223f2

Signed-off-by: Benjamin Bollen ben@erisindustries.com
",[],1,2016-06-09 21:11:21,2016-06-09 21:33:59,2016-06-09 21:33:59,True,2016-06-09 21:33:59,compleatang,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/131,https://github.com/hyperledger/burrow/pull/131,benjaminbollen,Permissions SNative - into develop-tmsp,"https://github.com/eris-ltd/eris-db/commit/4769e410880a6daa7a6d2b5d1d7d3c86137223f2
",[],1,2016-06-09 21:10:21,2016-06-09 21:14:23,2016-06-09 21:14:27,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/130,https://github.com/hyperledger/burrow/pull/130,compleatang,provide fixes for the evm -> permissions sNative path,,[],1,2016-06-09 20:43:35,2016-06-09 21:15:47,2016-06-16 10:46:31,True,2016-06-09 21:15:47,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/129,https://github.com/hyperledger/burrow/pull/129,zramsay,updates to README,"fix circle badge & add godoc link & clarify/type in README
",[],2,2016-06-05 17:08:05,2016-06-09 17:59:23,2016-06-10 18:37:47,True,2016-06-09 17:59:23,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/128,https://github.com/hyperledger/burrow/pull/128,AFDudley,Dockerfile builds.,,[],1,2016-05-31 04:34:08,2016-06-02 21:48:49,2016-06-03 01:38:39,True,2016-06-02 21:48:49,zramsay,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/127,https://github.com/hyperledger/burrow/pull/127,AFDudley,Dockerfile builds. untested.,"This uses the new base docker image I created.
",[],1,2016-05-18 17:40:11,2016-06-02 21:33:32,2016-06-02 21:33:32,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/126,https://github.com/hyperledger/burrow/pull/126,silasdavis,Tests building considered success,"So this is a kind of filthy one guys... But for the time being, so that Circle CI can actually provide us with some useful feedback on PRs (other than the tests are failing - thanks, we know) I'm proposing we just build the tests, and don't run them. We can add in those tests that we fix to run as we fix the piecemeal.

So this:
- Nukes ./test/... (good idea?) in favour of starting from scratch on those against refactor
- Overrides circle's test to just build the tests, while we work towards working tests
",[],3,2016-05-17 16:43:09,2016-07-05 14:24:07,2017-04-10 22:13:10,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/125,https://github.com/hyperledger/burrow/pull/125,ebuchman,make some tests build,"some simple dependency fixes to make tests build.

note the test folder is out of scope - we're moving to deprecate it because I don't really know how anyone is expected to be able to maintain it (very brittle). and of course rpc tests are still failing, ala at least #109
",[],1,2016-05-17 15:37:40,2016-05-17 16:17:42,2016-05-17 16:17:44,True,2016-05-17 16:17:42,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/124,https://github.com/hyperledger/burrow/pull/124,ebuchman,Test build fixes,"some simple dependency fixes to make tests build.

note the `test` folder is out of scope - we're moving to deprecate it because I don't really know how anyone is expected to be able to maintain it (very brittle). and of course rpc tests are still failing, ala at least https://github.com/eris-ltd/eris-db/issues/109
",[],71,2016-05-17 15:36:48,2016-05-17 15:37:04,2016-05-17 16:17:44,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/123,https://github.com/hyperledger/burrow/pull/123,benjaminbollen,"quick patch to develop_tmsp, separating the config files;","this is needed to avoid edb to assume that tendermints written config file is edbs config file
the current code is highly unsafe as a differently structured config file will produce a runtime error

this should have been addressed in #118 

I am also aware of @ebuchman suggestion in #118; but this is not the direction to take as the unified config file does not work:
1. tendermint is configureable through a configuration file (not per se through an exposed api), and writes to this config file (eg `tendermint init`); this is the first reason to separate the config files
2. edb should be able to treat the modules (eg tendermint as consensus) as functional black boxes, and should not have to update it's config file to cater internal changes of modules and their config files;

edb will have its config file and this config will specify the modules their versions and where their separate working directories and config files are.  A combined config file format is unversionable/unmanageable
",[],1,2016-05-16 19:44:37,2016-05-16 20:25:42,2016-05-16 20:25:42,True,2016-05-16 20:25:42,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/122,https://github.com/hyperledger/burrow/pull/122,silasdavis,Improve glide dependencies using fire,"This PR removes the transitive dependencies of tendermint/tendermint, and just depends on tendermint/tendermint, allowing glide to do its thing and pull in the various tendermint dependencies as specified by tendermint's glide.yaml. This should give us a consistent set of versions of tendermint dependencies.
",[],2,2016-05-16 19:26:52,2016-05-17 10:43:26,2017-04-10 22:13:10,True,2016-05-17 10:43:26,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/121,https://github.com/hyperledger/burrow/pull/121,benjaminbollen,[DO NOT MERGE] Tmroot,"- [ ] 1. bring e-cm and e-db in line
- [x] 2. move tendermint to the status of a consensus module
- [x] 3. clean up config and command line interface for eris-db with cobra and viper
- [ ] 4. clean up DOCKER and shell scripts interface into eris-db

out-of-scope extras
a. import event subscription infrastructure from go-ethereum
",[],63,2016-05-16 14:49:44,2016-06-09 17:50:15,2016-06-09 17:50:15,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/118,https://github.com/hyperledger/burrow/pull/118,ebuchman,No global config (from tendermint),"This should work after a glide install.

Install latest tendermint master.
Run `TMROOT=~/tmroot tendermint init`

and then `erisdb ~/tmroot inproc` should run erisdb inproc with tendermint over tmsp interface (you should see blocks)

Work on tests can resume in `rpc/tests`. eg. `go test --test.run Status` should pass, `go test --test.run Broadcast` should fail
",['ebuchman'],2,2016-05-11 21:03:25,2016-05-16 18:59:05,2016-05-16 19:14:46,True,2016-05-16 18:59:05,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/116,https://github.com/hyperledger/burrow/pull/116,benjaminbollen,Start of CHANGELOG.md,"Propose a CHANGELOG.md; format borrowed from go-ipfs

changelog should be updated on every release cycle; as a backlog item we can complete for recent versions.

apologies for also pulling in minor clean-up, if any objections happy to separate out the commits.
",[],3,2016-05-11 14:54:06,2016-05-11 16:05:25,2017-04-10 22:13:09,True,2016-05-11 16:05:25,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/114,https://github.com/hyperledger/burrow/pull/114,benjaminbollen,continue work on develop-tmsp from PR,,[],15,2016-05-10 22:07:30,2016-05-11 12:24:56,2016-05-11 12:28:13,True,2016-05-11 12:24:56,silasdavis,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/113,https://github.com/hyperledger/burrow/pull/113,silasdavis,Fix txs references and fix more tests,"This:
- Tries to stabilise tendermint glide dependencies
- Fixes references to txs packages
- Fixes various broken tests (by restoring references to config)
",[],1,2016-05-10 15:21:01,2016-05-10 16:20:14,2016-05-11 21:02:26,True,2016-05-10 16:20:14,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/108,https://github.com/hyperledger/burrow/pull/108,silasdavis,move files under txs/ into txs package,"Minor clean-up exercise, but we would like to follow package naming conventions, particularly since it breaks some tooling to not.
",[],3,2016-05-06 17:22:46,2016-05-10 15:00:22,2017-04-10 22:13:09,True,2016-05-10 15:00:22,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/107,https://github.com/hyperledger/burrow/pull/107,benjaminbollen,version bump to 0.12.0,,[],1,2016-04-29 17:07:27,2016-04-29 17:11:54,2016-04-29 17:11:54,True,2016-04-29 17:11:54,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/106,https://github.com/hyperledger/burrow/pull/106,benjaminbollen,Don't deploy on develop as :latest is wrongly attached to the develop…,"… image
",[],1,2016-04-28 16:53:01,2016-04-28 17:03:56,2016-04-28 17:04:10,True,2016-04-28 17:03:56,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/105,https://github.com/hyperledger/burrow/pull/105,benjaminbollen,v0.11.4 Release,"Changelog:
- included transacting tests
- corrected CI to not default against master
- remove auto deploy to quay.io for develop branch, only for master
",[],4,2016-04-28 16:19:23,2016-04-29 15:03:45,2016-04-29 15:03:45,True,2016-04-29 15:03:45,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/104,https://github.com/hyperledger/burrow/pull/104,silasdavis,"Don't test the present branch against erisdb master, that's not cool",,[],1,2016-04-28 15:44:33,2016-04-28 16:15:09,2016-04-28 19:29:54,True,2016-04-28 16:15:09,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/103,https://github.com/hyperledger/burrow/pull/103,benjaminbollen,(re-)disable transacting_test.go,,[],1,2016-04-28 15:25:36,2016-04-28 19:29:28,2016-04-28 19:29:30,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/102,https://github.com/hyperledger/burrow/pull/102,benjaminbollen,(re-)disable transacting_test.go,,[],1,2016-04-28 15:19:53,2016-04-28 15:25:08,2016-04-28 15:25:08,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/101,https://github.com/hyperledger/burrow/pull/101,benjaminbollen,version bump 0.11.4,"- minor improvement to test
",[],1,2016-04-28 14:03:37,2016-04-28 16:18:19,2016-04-28 16:18:19,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/100,https://github.com/hyperledger/burrow/pull/100,silasdavis,tmsp development back to feature branch,"Combines updated glide dependencies with tmsp_dev and tmsp_inproc changes
",[],23,2016-04-19 15:34:46,2016-05-11 21:02:20,2016-05-11 21:05:21,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/99,https://github.com/hyperledger/burrow/pull/99,silasdavis,Fairly empty version bump,,[],5,2016-04-18 16:22:12,2016-04-22 17:39:19,2016-04-22 17:39:19,True,2016-04-22 17:39:19,silasdavis,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/98,https://github.com/hyperledger/burrow/pull/98,ebuchman,Tmsp dev,,[],4,2016-04-14 21:35:22,2016-04-19 15:32:01,2016-04-28 19:45:33,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/94,https://github.com/hyperledger/burrow/pull/94,silasdavis,Include glide deps in vendor,"- Include glide deps in `vendor/`
- Update dependencies to latest masters
- Add testify dep

We may still be missing some deps (haven't looked at test failures exhaustively). Next step is to make tests pass in this branch. We may which to peg some deps to specific version (by tag or git hash) in the glide.yaml to leave them untouched by `glide up`. Ideally we want some dependencies to be upgraded by `glide up` so let's only lock down moving targets.
",[],1,2016-04-04 16:58:37,2016-04-11 18:37:33,2017-04-10 22:13:09,True,2016-04-11 18:37:33,benjaminbollen,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/92,https://github.com/hyperledger/burrow/pull/92,benjaminbollen,WIP Upgrade tendermint to a first class citizen in eris-db,"the tendermint tests fail; were not being run before.
",[],5,2016-03-30 15:25:30,2016-04-19 15:27:25,2017-04-10 22:13:09,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/91,https://github.com/hyperledger/burrow/pull/91,benjaminbollen,move docker login to deployment,"1. for PRs into development no deployment is needed, and the docker login command is not needed
2. on merge into develop branch, [expected] deployment proceeds as normal with docker login
",[],1,2016-03-23 14:41:21,2016-03-23 14:53:53,2016-03-23 14:53:53,True,2016-03-23 14:53:53,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/89,https://github.com/hyperledger/burrow/pull/89,benjaminbollen,Failing transaction test in ./test/transacting/transaction_test.go,"closes #88 
1. test was not run as the file was never named `_test.go`
2. fails on `/unsafe/txpool?hold=true`; but passes for `hold=false`; requires new issue, @NodeGuy 
3. patched test to test `/unsafe/txpool` instead
",[],3,2016-03-23 13:08:06,2016-03-23 13:37:44,2017-04-10 22:13:09,True,2016-03-23 13:37:44,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/69,https://github.com/hyperledger/burrow/pull/69,benjaminbollen,WIP unfork Ethereum Virtual Machine,"Merged in latest develop; picking up from where @ebuchman started; need handover from Ethan
",[],21,2016-03-17 15:57:08,2016-03-30 15:28:29,2016-03-30 15:28:29,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/68,https://github.com/hyperledger/burrow/pull/68,ebuchman,Fixes,"- lots of little fixes in network connectivity (don't filter by ip range, make all addresses routable, only connect to peers with same genesis hash)
- upgraded mempool to latest tendermint version
- some consensus bug fixes
",[],17,2016-03-11 15:46:52,2016-03-11 16:19:51,2016-03-14 17:11:46,True,2016-03-11 16:19:51,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/67,https://github.com/hyperledger/burrow/pull/67,benjaminbollen,version bump 0.11.3,,[],5,2016-03-11 14:35:13,2016-03-11 14:35:40,2016-03-11 14:35:40,True,2016-03-11 14:35:40,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/66,https://github.com/hyperledger/burrow/pull/66,benjaminbollen,Eth vm - for CI test run,,[],18,2016-03-11 14:02:50,2016-03-11 14:02:58,2016-03-11 14:02:58,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/63,https://github.com/hyperledger/burrow/pull/63,benjaminbollen,Fix hvs patch from @jaekwon into develop,,[],2,2016-03-08 02:46:27,2016-03-08 02:48:49,2016-03-08 02:49:35,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/62,https://github.com/hyperledger/burrow/pull/62,benjaminbollen,correct ECM print log version to 0.11.2,,[],1,2016-03-04 21:29:42,2016-03-11 14:17:23,2016-03-11 14:17:23,True,2016-03-11 14:17:23,benjaminbollen,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/55,https://github.com/hyperledger/burrow/pull/55,pietv,Version bump,,[],2,2016-02-07 12:53:53,2016-02-07 12:54:13,2016-02-07 12:54:13,True,2016-02-07 12:54:13,pietv,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/54,https://github.com/hyperledger/burrow/pull/54,compleatang,version bump,,[],4,2016-02-01 19:46:01,2016-02-01 21:58:53,2016-02-01 21:59:57,True,2016-02-01 21:58:53,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/51,https://github.com/hyperledger/burrow/pull/51,compleatang,Version bump,"(includes dockerfile fixes)
",[],3,2016-01-16 22:45:31,2016-02-01 19:43:02,2016-02-01 19:43:04,True,2016-02-01 19:43:02,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/50,https://github.com/hyperledger/burrow/pull/50,compleatang,fixes to dockerfile so itll now build,,[],1,2016-01-16 22:45:08,2016-01-16 23:10:27,2016-02-01 19:35:33,True,2016-01-16 23:10:27,ebuchman,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/49,https://github.com/hyperledger/burrow/pull/49,ebuchman,Develop,,[],9,2016-01-16 19:50:52,2016-01-16 19:51:03,2016-01-16 19:51:03,True,2016-01-16 19:51:03,ebuchman,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/48,https://github.com/hyperledger/burrow/pull/48,benjaminbollen,WIP tmint,"move eris/tendermint into eris-db; replaying work done on eris-db tmsp branch for current develop branch
",[],23,2016-01-16 00:19:03,2016-03-08 02:23:38,2016-03-08 02:23:38,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/46,https://github.com/hyperledger/burrow/pull/46,jaekwon,Patch in fix of height-vote-set,"Fixes a bug
",[],1,2016-01-02 02:30:16,2016-03-08 02:48:20,2016-03-08 02:48:20,False,,,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/35,https://github.com/hyperledger/burrow/pull/35,ebuchman,fix suicides,"Addresses https://github.com/tendermint/tendermint/issues/131
",[],1,2015-08-26 02:09:49,2015-08-26 18:03:59,2015-08-26 18:04:45,True,2015-08-26 18:03:59,androlo,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/34,https://github.com/hyperledger/burrow/pull/34,compleatang,upgrades to docker sequencine,"enables $KEYS, $GENESIS, $GENESIS_CSV, $CHAIN_CONF,
and $SERVER_CONF to be given as environment variables

the master script will dump those into the appropriate
$CHAINDIR location.

changed ""erisdb-wrapper"" to entry point (which is where
it should have always been)

added major release and minor release (which will need
to be updated) to the DOCKER/build.sh script.
",[],1,2015-08-25 21:13:17,2015-08-25 21:13:34,2015-08-25 21:16:35,True,2015-08-25 21:13:34,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/32,https://github.com/hyperledger/burrow/pull/32,compleatang,"add ecm version, fix config",,[],1,2015-08-25 20:39:27,2015-08-25 21:11:40,2015-08-25 21:11:42,True,2015-08-25 21:11:39,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/31,https://github.com/hyperledger/burrow/pull/31,compleatang,"chains new: allow csvs for mintgen, use mintconfig",,[],0,2015-08-25 20:38:11,2015-08-25 21:11:13,2015-08-25 21:11:26,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/30,https://github.com/hyperledger/burrow/pull/30,compleatang,upgrades to docker sequencing,"enables $KEYS, $GENESIS, $CHAIN_CONF, $SERVER_CONF
to be given as environment variables

the master script will dump those into the appropriate
$CHAINDIR location.

changed ""erisdb-wrapper"" to entry point (which is where
it should have always been)

added major release and minor release (which will need
to be updated) to the DOCKER/build.sh script.

PR-ing to master as there is no current difference between it and develop.
",[],2,2015-08-24 04:13:30,2015-08-25 21:11:56,2015-08-25 21:16:36,True,2015-08-25 21:11:56,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/28,https://github.com/hyperledger/burrow/pull/28,zramsay,update chains new sequence,,[],1,2015-08-20 21:41:25,2015-08-20 21:55:26,2015-08-25 20:37:23,True,2015-08-20 21:55:26,ebuchman,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/26,https://github.com/hyperledger/burrow/pull/26,compleatang,add start to API mode to eris chain manager script suite,,[],1,2015-08-01 16:25:45,2015-08-25 21:12:14,2015-08-25 21:12:15,True,2015-08-25 21:12:14,compleatang,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/15,https://github.com/hyperledger/burrow/pull/15,compleatang,expose proper ports on eris-db image,"please note, this locks in mint at the commit number below (current master) which is what we should do with the vendoring when we have a chance. 

am not saying that's the right commit, but we should be using the same commit in the dockerfile (L23) as we do for vendoring. 
",[],1,2015-07-10 21:03:59,2015-07-11 05:10:15,2017-04-10 22:13:07,True,2015-07-11 05:10:15,ebuchman,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/13,https://github.com/hyperledger/burrow/pull/13,androlo,Temp solidity event support and some other things,,[],1,2015-07-07 11:46:43,2015-07-07 11:46:52,2015-12-16 16:23:44,True,2015-07-07 11:46:52,androlo,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/11,https://github.com/hyperledger/burrow/pull/11,ebuchman,Dockerfixes,"- moves all docker functionality into DOCKER directory
- brings Dockerfile in line with eris stack
- uses ""eris chain manager"" shell scripts for creating, installing (fetch), and running chains
",[],7,2015-07-04 03:14:17,2015-07-04 03:18:11,2015-07-04 03:18:13,True,2015-07-04 03:18:11,ebuchman,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/10,https://github.com/hyperledger/burrow/pull/10,compleatang,ensure docker image complies with eris platform stds,"This PR performs requests the following changes be made:
- update the docker image to comply with the current eris platform paradigms.
- as discussed on Slack, we want the erisdb:0.10 container to be compiled with the following binaries:
  - tendermint
  - erisdb
  - barak
  - debora
  - erisdbss
- this will make for a heavy image, but as most of the image's ""weight"" is in the OS layer it is really only a difference of about 30MB (in the grand scheme of things that's not a lot). the advantage of compiling all of these binaries is that because all of the data can be mint based we are able to put the image in `cli` mode and turn on its `rpc` via the proper mint binary, or in `server` mode and turn on the `rest|stream` api via erisdb, or in `test` mode and turn on the `erisdbss`. this will make for a powerful and flexible image.
- the last change, which is making the tests fail and so will need some work before merging into develop is an update to mint to the current head of tendermint permissions branch. 
- updates circle to build and push an image when we push to master.

**Note** the start script may need some massaging to make this work seamlessly with the platform.
",[],6,2015-07-03 16:01:49,2015-07-04 03:11:13,2017-04-10 22:13:07,False,,,dirty,False,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/9,https://github.com/hyperledger/burrow/pull/9,androlo,Fixed filter issues in docs.,,[],1,2015-06-18 22:42:25,2015-06-18 22:42:28,2015-06-18 22:42:28,True,2015-06-18 22:42:28,androlo,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/8,https://github.com/hyperledger/burrow/pull/8,androlo,Develop,,[],2,2015-06-18 22:39:02,2015-06-18 22:39:05,2015-06-18 22:39:05,True,2015-06-18 22:39:05,androlo,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/5,https://github.com/hyperledger/burrow/pull/5,androlo,Some more docs. Still 'today' in canada hehe,,[],1,2015-06-17 21:55:23,2015-06-17 21:55:26,2015-06-17 21:55:26,True,2015-06-17 21:55:26,androlo,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/4,https://github.com/hyperledger/burrow/pull/4,androlo,.,,[],1,2015-06-17 21:32:16,2015-06-17 21:32:30,2015-06-17 21:32:30,True,2015-06-17 21:32:30,androlo,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/3,https://github.com/hyperledger/burrow/pull/3,androlo,tiny update to api doc,,[],1,2015-06-16 21:45:49,2015-06-16 21:45:54,2015-06-16 21:45:54,True,2015-06-16 21:45:54,androlo,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/2,https://github.com/hyperledger/burrow/pull/2,androlo,0.9.1 more docs more stuff,,[],1,2015-06-16 21:31:19,2015-06-16 21:31:23,2015-06-16 21:31:23,True,2015-06-16 21:31:23,androlo,unknown,,closed
burrow,https://api.github.com/repos/hyperledger/burrow/pulls/1,https://github.com/hyperledger/burrow/pull/1,androlo,godep and some more things,,[],1,2015-06-15 19:28:47,2015-06-15 19:28:57,2015-06-15 19:28:57,True,2015-06-15 19:28:57,androlo,unknown,,closed
