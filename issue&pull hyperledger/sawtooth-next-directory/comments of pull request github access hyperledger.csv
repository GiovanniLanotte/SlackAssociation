pull request url html,pull request url,body,commit_id,create at,id,diff_hunk,position,update at,url,html url,user
https://github.com/hyperledger/sawtooth-next-directory/pull/1408,https://github.com/hyperledger/sawtooth-next-directory/pull/1408,"There is no disconnect() function for rethinkdb that I am aware of.  There is a close() function, can you verify that this exists? or change it to close()?",26cc35693cc77dbe6df06349c4a8bc9f329ad0aa,2019-03-22 20:24:54,268327476,"@@ -108,31 +104,30 @@ def listener():
     """""" Listener for Sawtooth State changes
     """"""
     try:
-        database = Database()
-        database.connect()
+        conn = connect_to_db()
 
         LOGGER.info(""Reading queued Sawtooth transactions"")
         while True:
-            feed = database.run_query(database.get_table(""inbound_queue""))
+            feed = r.table(""inbound_queue"").run(conn)
             count = 0
             for rec in feed:
-                process(rec, database)
+                process(rec, conn)
                 count = count + 1
             if count == 0:
                 break
             LOGGER.info(""Processed %s records in the inbound queue"", count)
         LOGGER.info(""Listening for incoming Sawtooth transactions"")
-        feed = database.run_query(database.get_table(""inbound_queue"").changes())
+        feed = r.table(""inbound_queue"").changes().run(conn)
         for rec in feed:
             if rec[""new_val""] and not rec[""old_val""]:  # only insertions
-                process(rec[""new_val""], database)
+                process(rec[""new_val""], conn)
 
     except Exception as err:  # pylint: disable=broad-except
         LOGGER.exception(""Inbound listener %s exception"", type(err).__name__)
         LOGGER.exception(err)
 
     finally:
         try:
-            database.disconnect()
+            conn.disconnect()",,2019-03-25 17:43:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/268327476,https://github.com/hyperledger/sawtooth-next-directory/pull/1408#discussion_r268327476,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1408,https://github.com/hyperledger/sawtooth-next-directory/pull/1408,Same here as above,26cc35693cc77dbe6df06349c4a8bc9f329ad0aa,2019-03-22 20:25:09,268327539,"@@ -44,10 +47,39 @@ def listener():
 
     finally:
         try:
-            database.disconnect()
+            conn.disconnect()",,2019-03-25 17:43:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/268327539,https://github.com/hyperledger/sawtooth-next-directory/pull/1408#discussion_r268327539,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1408,https://github.com/hyperledger/sawtooth-next-directory/pull/1408,"yes, there is a close function, i have changed it.",26cc35693cc77dbe6df06349c4a8bc9f329ad0aa,2019-03-24 18:24:05,268446001,"@@ -44,10 +47,39 @@ def listener():
 
     finally:
         try:
-            database.disconnect()
+            conn.disconnect()",,2019-03-25 17:43:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/268446001,https://github.com/hyperledger/sawtooth-next-directory/pull/1408#discussion_r268446001,V1122am
https://github.com/hyperledger/sawtooth-next-directory/pull/1408,https://github.com/hyperledger/sawtooth-next-directory/pull/1408,The connection doesn't have a drop_fork() function. You would need to call the drop_fork() function that you created in line 98 of this file. ,26cc35693cc77dbe6df06349c4a8bc9f329ad0aa,2019-03-25 16:23:11,268730798,"@@ -48,21 +47,21 @@ def update_database(database, state_change):
                 resource = data_to_dicts(change.address, change.value)[0]
                 data_type = addresser.get_address_type(change.address)
                 if data_type in TABLE_NAMES and TABLE_NAMES[data_type] == ""roles"":
-                    database.clear_role(resource[""role_id""], resource[""created_date""])
+                    clear_role(conn, resource[""role_id""], resource[""created_date""])
                 update(change.address, resource)
 
 
-def _handle_state_changes(database, state_change):
+def _handle_state_changes(conn, state_change):
     """"""Takes in a database object and sawtooth state change, parses changes, and
     updates any changed objects in rethinkdb.
     """"""
     try:
         # Check for and resolve forks
         state_change.block_num = int(state_change.block_num)
-        old_block = database.fetch(""blocks"", state_change.block_num)
+        old_block = r.table(""blocks"").get(state_change.block_num).run(conn)
         if old_block is not None:
             if old_block[""block_id""] != state_change.block_id:
-                drop_results = database.drop_fork(state_change.block_num)
+                drop_results = conn.drop_fork(state_change.block_num)",,2019-03-25 17:43:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/268730798,https://github.com/hyperledger/sawtooth-next-directory/pull/1408#discussion_r268730798,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1379,https://github.com/hyperledger/sawtooth-next-directory/pull/1379,Please remove this commented line as well that regerence C011 since it is no longer being ignored.   There is a similar line in strict.cfg that also needs to be removed with this PR,05f2de05f8812e54e709330060567b6e3bf3bd5f,2019-03-19 04:42:10,266729611,"@@ -19,7 +19,7 @@ optimize-ast=no
 # can either give multiple identifiers separated by comma (,) or put this
 # option multiple times (only on the command line, not in the configuration
 # file where it should appear only once).
-disable=C0111,C0301,C0302,C0330,E1101,R0201,R0205,R0401,R0801,R0901,R0902,R0903,R0904,R0912,R0913,R0914,R0915,R1701,R1714,W0511,W0612
+disable=C0301,C0302,C0330,E1101,R0201,R0205,R0401,R0801,R0901,R0902,R0903,R0904,R0912,R0913,R0914,R0915,R1701,R1714,W0511,W0612
 #C0111 - missing-docstring",,2019-03-19 16:41:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266729611,https://github.com/hyperledger/sawtooth-next-directory/pull/1379#discussion_r266729611,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1374,https://github.com/hyperledger/sawtooth-next-directory/pull/1374,Please remove Logging statements,558b8f9a50068b954b743f17b680c3b389956ab3,2019-03-18 21:02:09,266640240,"@@ -65,9 +66,22 @@
 
 @USERS_BP.post(""api/users"")
 async def create_new_user(request):
+    """""" This API is invoked when a new User Account is Created""""""
+    LOGGER.info(""users.py: POST /api/users - A new user is trying to sign-up."")",,2019-03-18 22:01:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266640240,https://github.com/hyperledger/sawtooth-next-directory/pull/1374#discussion_r266640240,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1374,https://github.com/hyperledger/sawtooth-next-directory/pull/1374,Please remove logging statement.  This is a standard error that is directed to the client not an internal processing error,558b8f9a50068b954b743f17b680c3b389956ab3,2019-03-18 21:02:58,266640510,"@@ -65,9 +66,22 @@
 
 @USERS_BP.post(""api/users"")
 async def create_new_user(request):
+    """""" This API is invoked when a new User Account is Created""""""
+    LOGGER.info(""users.py: POST /api/users - A new user is trying to sign-up."")
     required_fields = [""name"", ""username"", ""password"", ""email""]
     utils.validate_fields(required_fields, request.json)
-
+    username_created = request.json.get(""username"")
+    conn1 = await db_utils.create_connection(
+        request.app.config.DB_HOST,
+        request.app.config.DB_PORT,
+        request.app.config.DB_NAME,
+    )
+    if await users_query.fetch_username_match_count(conn1, username_created) > 0:
+        LOGGER.info(",,2019-03-18 22:01:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266640510,https://github.com/hyperledger/sawtooth-next-directory/pull/1374#discussion_r266640510,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1374,https://github.com/hyperledger/sawtooth-next-directory/pull/1374,Please remove logging statements,558b8f9a50068b954b743f17b680c3b389956ab3,2019-03-18 21:03:59,266640840,"@@ -314,3 +314,16 @@ def users_search_email(search_query):
     )
 
     return resource
+
+
+def fetch_username_match_count(conn, username):
+    """"""Database query to fetch the count of usernames that match the given username.""""""
+    LOGGER.info(""users_query.py: Starting inside the fetch_user_usernames()"")",,2019-03-18 22:01:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266640840,https://github.com/hyperledger/sawtooth-next-directory/pull/1374#discussion_r266640840,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1374,https://github.com/hyperledger/sawtooth-next-directory/pull/1374,"This should be failing right when you run tests locally because the message should equal ""Username already exists. Please give a different Username."" Not what is written in the expected ""Username already exists. Please give different username.""

You are missing a word and the capitalization is incorrect from the raise error.  I would say remove the capital from the raise error and add the word 'a' into the tests expected value.",558b8f9a50068b954b743f17b680c3b389956ab3,2019-03-18 21:11:49,266643573,"@@ -0,0 +1,67 @@
+# Copyright 2019 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+""""""Validating User Account Creation API Endpoint Test""""""
+
+import requests
+
+
+def create_test_user(session):
+    create_user_input = {
+        ""name"": ""Sri Nuthal"",
+        ""username"": ""nuthalapati"",
+        ""password"": ""123456"",
+        ""email"": ""sri@gmail.com"",
+    }
+    session.post(""http://rbac-server:8000/api/users"", json=create_user_input)
+
+
+def test_valid_username():
+    """""" Testing the already existing Username scenario. """"""
+    rethink_data1 = {
+        ""name"": ""abcdf234"",
+        ""username"": ""nuthalapati2"",
+        ""password"": ""123456"",
+        ""email"": ""sri2345@gmail.com"",
+    }
+    expected = {""message"": ""Authorization successful"", ""code"": 200}
+
+    with requests.Session() as session:
+        create_test_user(session)
+        response = session.post(
+            ""http://rbac-server:8000/api/users"", json=rethink_data1
+        )
+        assert response.json()[""data""][""message""] == expected[""message""]
+        assert response.json()[""code""] == expected[""code""]
+
+
+def test_repeat_username():
+    """""" Testing the already existing Username scenario. """"""
+    rethink_data2 = {
+        ""name"": ""abcdf234"",
+        ""username"": ""nuthalapati"",
+        ""password"": ""123456"",
+        ""email"": ""sri2345@gmail.com"",
+    }
+    expected = {""message"": ""Username already exists. Please give different username."", ""code"": 400}
+
+    with requests.Session() as session:
+        create_test_user(session)
+        response = session.post(
+            ""http://rbac-server:8000/api/users"", json=rethink_data2
+        )
+        assert response.json()[""message""] == expected[""message""]",63,2019-03-18 22:01:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266643573,https://github.com/hyperledger/sawtooth-next-directory/pull/1374#discussion_r266643573,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1374,https://github.com/hyperledger/sawtooth-next-directory/pull/1374,You should just leave this as conn as the numbering is not necessary.,558b8f9a50068b954b743f17b680c3b389956ab3,2019-03-18 21:23:00,266647443,"@@ -65,9 +66,22 @@
 
 @USERS_BP.post(""api/users"")
 async def create_new_user(request):
+    """""" This API is invoked when a new User Account is Created""""""
+    LOGGER.info(""users.py: POST /api/users - A new user is trying to sign-up."")
     required_fields = [""name"", ""username"", ""password"", ""email""]
     utils.validate_fields(required_fields, request.json)
-
+    username_created = request.json.get(""username"")
+    conn1 = await db_utils.create_connection(",,2019-03-18 22:01:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266647443,https://github.com/hyperledger/sawtooth-next-directory/pull/1374#discussion_r266647443,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1374,https://github.com/hyperledger/sawtooth-next-directory/pull/1374,You should clarify in your doc strings that you are testing the creation of two users with different usernames here. ,558b8f9a50068b954b743f17b680c3b389956ab3,2019-03-18 21:25:04,266648170,"@@ -0,0 +1,67 @@
+# Copyright 2019 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+""""""Validating User Account Creation API Endpoint Test""""""
+
+import requests
+
+
+def create_test_user(session):
+    create_user_input = {
+        ""name"": ""Sri Nuthal"",
+        ""username"": ""nuthalapati"",
+        ""password"": ""123456"",
+        ""email"": ""sri@gmail.com"",
+    }
+    session.post(""http://rbac-server:8000/api/users"", json=create_user_input)
+
+
+def test_valid_username():
+    """""" Testing the already existing Username scenario. """"""",,2019-03-18 22:01:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266648170,https://github.com/hyperledger/sawtooth-next-directory/pull/1374#discussion_r266648170,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1374,https://github.com/hyperledger/sawtooth-next-directory/pull/1374,Please rename this variable to be more descriptive (like create_user_input).,558b8f9a50068b954b743f17b680c3b389956ab3,2019-03-18 21:25:29,266648307,"@@ -0,0 +1,67 @@
+# Copyright 2019 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+""""""Validating User Account Creation API Endpoint Test""""""
+
+import requests
+
+
+def create_test_user(session):
+    create_user_input = {
+        ""name"": ""Sri Nuthal"",
+        ""username"": ""nuthalapati"",
+        ""password"": ""123456"",
+        ""email"": ""sri@gmail.com"",
+    }
+    session.post(""http://rbac-server:8000/api/users"", json=create_user_input)
+
+
+def test_valid_username():
+    """""" Testing the already existing Username scenario. """"""
+    rethink_data1 = {",33,2019-03-18 22:01:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266648307,https://github.com/hyperledger/sawtooth-next-directory/pull/1374#discussion_r266648307,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1374,https://github.com/hyperledger/sawtooth-next-directory/pull/1374,Please rename this variable to be more descriptive (like create_user_input).,558b8f9a50068b954b743f17b680c3b389956ab3,2019-03-18 21:25:48,266648416,"@@ -0,0 +1,67 @@
+# Copyright 2019 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+""""""Validating User Account Creation API Endpoint Test""""""
+
+import requests
+
+
+def create_test_user(session):
+    create_user_input = {
+        ""name"": ""Sri Nuthal"",
+        ""username"": ""nuthalapati"",
+        ""password"": ""123456"",
+        ""email"": ""sri@gmail.com"",
+    }
+    session.post(""http://rbac-server:8000/api/users"", json=create_user_input)
+
+
+def test_valid_username():
+    """""" Testing the already existing Username scenario. """"""
+    rethink_data1 = {
+        ""name"": ""abcdf234"",
+        ""username"": ""nuthalapati2"",
+        ""password"": ""123456"",
+        ""email"": ""sri2345@gmail.com"",
+    }
+    expected = {""message"": ""Authorization successful"", ""code"": 200}
+
+    with requests.Session() as session:
+        create_test_user(session)
+        response = session.post(
+            ""http://rbac-server:8000/api/users"", json=rethink_data1
+        )
+        assert response.json()[""data""][""message""] == expected[""message""]
+        assert response.json()[""code""] == expected[""code""]
+
+
+def test_repeat_username():
+    """""" Testing the already existing Username scenario. """"""
+    rethink_data2 = {",49,2019-03-18 22:01:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266648416,https://github.com/hyperledger/sawtooth-next-directory/pull/1374#discussion_r266648416,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1374,https://github.com/hyperledger/sawtooth-next-directory/pull/1374,Please clarify that you this test is creating two users with the same username scenario.,558b8f9a50068b954b743f17b680c3b389956ab3,2019-03-18 21:26:59,266648852,"@@ -0,0 +1,67 @@
+# Copyright 2019 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+""""""Validating User Account Creation API Endpoint Test""""""
+
+import requests
+
+
+def create_test_user(session):
+    create_user_input = {
+        ""name"": ""Sri Nuthal"",
+        ""username"": ""nuthalapati"",
+        ""password"": ""123456"",
+        ""email"": ""sri@gmail.com"",
+    }
+    session.post(""http://rbac-server:8000/api/users"", json=create_user_input)
+
+
+def test_valid_username():
+    """""" Testing the already existing Username scenario. """"""
+    rethink_data1 = {
+        ""name"": ""abcdf234"",
+        ""username"": ""nuthalapati2"",
+        ""password"": ""123456"",
+        ""email"": ""sri2345@gmail.com"",
+    }
+    expected = {""message"": ""Authorization successful"", ""code"": 200}
+
+    with requests.Session() as session:
+        create_test_user(session)
+        response = session.post(
+            ""http://rbac-server:8000/api/users"", json=rethink_data1
+        )
+        assert response.json()[""data""][""message""] == expected[""message""]
+        assert response.json()[""code""] == expected[""code""]
+
+
+def test_repeat_username():
+    """""" Testing the already existing Username scenario. """"""",,2019-03-18 22:01:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266648852,https://github.com/hyperledger/sawtooth-next-directory/pull/1374#discussion_r266648852,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1368,https://github.com/hyperledger/sawtooth-next-directory/pull/1368,Remove this unnecessary change in this line.,5b81e44d7231f06e0d5f42d856a61358128ce234,2019-03-18 18:01:58,266571798,"@@ -27,6 +27,7 @@
 
 from rbac.server.db import db_utils
 
+",,2019-03-19 20:06:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/266571798,https://github.com/hyperledger/sawtooth-next-directory/pull/1368#discussion_r266571798,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1337,https://github.com/hyperledger/sawtooth-next-directory/pull/1337,"Is the bug where created_date is actually the last updated time documented anywhere? If not, let's leave a note here so when another developer reads this code, they will know why you are comparing created_date with the updated time.",e4756a7ca680784203b6bc263a88bab16bd72fde,2019-03-07 18:28:14,263510502,"@@ -136,3 +137,37 @@ def run_query(self, query):
         """"""Takes a query based on get_table, and runs it.
         """"""
         return query.run(self._conn)
+
+    def clear_role(self, role_id, update_time):
+        """"""Takes a role ID and update_time and removes all role admins,
+        role owners, role members, and base role objects in rethinkDB that are
+        older than the update_time.
+        """"""
+        update_time = r.epoch_time(int(update_time) - 1)
+        # remove all old entries in role_attributes with role_id
+        (
+            r.db(self._name)
+            .table(""role_members"")
+            .filter({""role_id"": role_id})
+            .filter(lambda role_member: role_member[""created_date""] < update_time)",28,2019-03-11 21:32:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/263510502,https://github.com/hyperledger/sawtooth-next-directory/pull/1337#discussion_r263510502,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1337,https://github.com/hyperledger/sawtooth-next-directory/pull/1337,"fair, I'll leave a `NOTE:` tag with an explanation and rebase",e4756a7ca680784203b6bc263a88bab16bd72fde,2019-03-07 19:55:13,263542653,"@@ -136,3 +137,37 @@ def run_query(self, query):
         """"""Takes a query based on get_table, and runs it.
         """"""
         return query.run(self._conn)
+
+    def clear_role(self, role_id, update_time):
+        """"""Takes a role ID and update_time and removes all role admins,
+        role owners, role members, and base role objects in rethinkDB that are
+        older than the update_time.
+        """"""
+        update_time = r.epoch_time(int(update_time) - 1)
+        # remove all old entries in role_attributes with role_id
+        (
+            r.db(self._name)
+            .table(""role_members"")
+            .filter({""role_id"": role_id})
+            .filter(lambda role_member: role_member[""created_date""] < update_time)",28,2019-03-11 21:32:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/263542653,https://github.com/hyperledger/sawtooth-next-directory/pull/1337#discussion_r263542653,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/1324,https://github.com/hyperledger/sawtooth-next-directory/pull/1324,Remove these,c6f778ba21b36ada02bf4df59db5fdf468a1b75c,2019-03-04 18:30:01,262186188,"@@ -105,6 +105,8 @@ services:
       - CLIENT_PORT=${CLIENT_PORT}
       - DEMO_MODE=${DEMO_MODE:-False}
       - LDAP_SERVER=${LDAP_SERVER}
+      - USER_RDN_ATTR=${USER_RDN_ATTR}",,2019-03-05 07:10:48,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262186188,https://github.com/hyperledger/sawtooth-next-directory/pull/1324#discussion_r262186188,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1324,https://github.com/hyperledger/sawtooth-next-directory/pull/1324,remove these,c6f778ba21b36ada02bf4df59db5fdf468a1b75c,2019-03-04 18:30:06,262186233,"@@ -38,7 +38,8 @@
 AUTH_BP = Blueprint(""auth"")
 
 LDAP_SERVER = os.getenv(""LDAP_SERVER"")
-
+USER_RDN_ATTR = os.getenv(""USER_RDN_ATTR"")",,2019-03-05 07:10:48,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262186233,https://github.com/hyperledger/sawtooth-next-directory/pull/1324#discussion_r262186233,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1324,https://github.com/hyperledger/sawtooth-next-directory/pull/1324,Fixed,c6f778ba21b36ada02bf4df59db5fdf468a1b75c,2019-03-04 23:17:02,262286021,"@@ -105,6 +105,8 @@ services:
       - CLIENT_PORT=${CLIENT_PORT}
       - DEMO_MODE=${DEMO_MODE:-False}
       - LDAP_SERVER=${LDAP_SERVER}
+      - USER_RDN_ATTR=${USER_RDN_ATTR}",,2019-03-05 07:10:48,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262286021,https://github.com/hyperledger/sawtooth-next-directory/pull/1324#discussion_r262286021,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1324,https://github.com/hyperledger/sawtooth-next-directory/pull/1324,Fixed,c6f778ba21b36ada02bf4df59db5fdf468a1b75c,2019-03-04 23:17:07,262286062,"@@ -38,7 +38,8 @@
 AUTH_BP = Blueprint(""auth"")
 
 LDAP_SERVER = os.getenv(""LDAP_SERVER"")
-
+USER_RDN_ATTR = os.getenv(""USER_RDN_ATTR"")",,2019-03-05 07:10:48,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262286062,https://github.com/hyperledger/sawtooth-next-directory/pull/1324#discussion_r262286062,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1306,https://github.com/hyperledger/sawtooth-next-directory/pull/1306,This file appears to be empty is it needed?,b0177f0fd5b17f5a3f6102d6fde6dc69f5391617,2019-02-27 18:23:12,260880862,"@@ -0,0 +1,14 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */",14,2019-02-27 18:24:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/260880862,https://github.com/hyperledger/sawtooth-next-directory/pull/1306#discussion_r260880862,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1306,https://github.com/hyperledger/sawtooth-next-directory/pull/1306,Is there a ticket for this TODO or will it be handled soon?,b0177f0fd5b17f5a3f6102d6fde6dc69f5391617,2019-02-27 18:24:12,260881251,"@@ -0,0 +1,340 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import {
+  Checkbox,
+  Header,
+  Icon,
+  Table } from 'semantic-ui-react';
+import PropTypes from 'prop-types';
+
+
+import './TableList.css';
+import * as utils from 'services/Utils';
+import Avatar from 'components/layouts/Avatar';
+
+
+/**
+ *
+ * @class         TableList
+ * @description   Displays roles in a list when approving proposals
+ *
+ */
+class TableList extends Component {
+
+  static propTypes = {
+    getRoles:              PropTypes.func,
+    getUsers:              PropTypes.func,
+    handleChange:          PropTypes.func,
+    openProposalsByRole:   PropTypes.object,
+    openProposalsByUser:   PropTypes.object,
+    roleFromId:            PropTypes.func,
+    roles:                 PropTypes.array,
+    selectedProposals:     PropTypes.array,
+    selectedRoles:         PropTypes.array,
+    users:                 PropTypes.array,
+  };
+
+
+  state = { column: null, direction: null };
+
+
+  // TODO: Refactor",56,2019-02-27 18:24:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/260881251,https://github.com/hyperledger/sawtooth-next-directory/pull/1306#discussion_r260881251,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1306,https://github.com/hyperledger/sawtooth-next-directory/pull/1306,We include a stylesheet for every new component as a practice for consistency. Can be changed if desired.,b0177f0fd5b17f5a3f6102d6fde6dc69f5391617,2019-02-27 18:28:38,260882986,"@@ -0,0 +1,14 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */",14,2019-02-27 18:28:38,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/260882986,https://github.com/hyperledger/sawtooth-next-directory/pull/1306#discussion_r260882986,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1306,https://github.com/hyperledger/sawtooth-next-directory/pull/1306,Created #1307.,b0177f0fd5b17f5a3f6102d6fde6dc69f5391617,2019-02-27 18:42:01,260888315,"@@ -0,0 +1,340 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import {
+  Checkbox,
+  Header,
+  Icon,
+  Table } from 'semantic-ui-react';
+import PropTypes from 'prop-types';
+
+
+import './TableList.css';
+import * as utils from 'services/Utils';
+import Avatar from 'components/layouts/Avatar';
+
+
+/**
+ *
+ * @class         TableList
+ * @description   Displays roles in a list when approving proposals
+ *
+ */
+class TableList extends Component {
+
+  static propTypes = {
+    getRoles:              PropTypes.func,
+    getUsers:              PropTypes.func,
+    handleChange:          PropTypes.func,
+    openProposalsByRole:   PropTypes.object,
+    openProposalsByUser:   PropTypes.object,
+    roleFromId:            PropTypes.func,
+    roles:                 PropTypes.array,
+    selectedProposals:     PropTypes.array,
+    selectedRoles:         PropTypes.array,
+    users:                 PropTypes.array,
+  };
+
+
+  state = { column: null, direction: null };
+
+
+  // TODO: Refactor",56,2019-02-27 18:42:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/260888315,https://github.com/hyperledger/sawtooth-next-directory/pull/1306#discussion_r260888315,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1299,https://github.com/hyperledger/sawtooth-next-directory/pull/1299,is this supposed to be -b --prod?  or just --prod?  Do we have a single letter execution?,087b0f4ffd8f8acdb376b83d21828afc1f260f15,2019-02-26 18:03:49,260414776,"@@ -30,6 +30,7 @@ usage() {
                                start from genesis (no data) [default]
             -p --persist       start with persistent data
             -b --build         (re)build docker images before starting
+            --prod             start NEXT with SSL configuration",,2019-02-26 19:34:22,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/260414776,https://github.com/hyperledger/sawtooth-next-directory/pull/1299#discussion_r260414776,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1299,https://github.com/hyperledger/sawtooth-next-directory/pull/1299,Can you add a line in the README or index of setup in the docs as a link to this? ,087b0f4ffd8f8acdb376b83d21828afc1f260f15,2019-02-26 18:08:07,260416469,"@@ -0,0 +1,20 @@
+=================
+Configure SSL/TLS",2,2019-02-26 19:34:22,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/260416469,https://github.com/hyperledger/sawtooth-next-directory/pull/1299#discussion_r260416469,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1299,https://github.com/hyperledger/sawtooth-next-directory/pull/1299,"You would pass in the --prod flag alone. If you would like to build, you would add -b as well. I didn't add a single letter execution equivalent for the --prod flag. I can if that is best practice. ",087b0f4ffd8f8acdb376b83d21828afc1f260f15,2019-02-26 19:02:00,260438392,"@@ -30,6 +30,7 @@ usage() {
                                start from genesis (no data) [default]
             -p --persist       start with persistent data
             -b --build         (re)build docker images before starting
+            --prod             start NEXT with SSL configuration",,2019-02-26 19:34:22,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/260438392,https://github.com/hyperledger/sawtooth-next-directory/pull/1299#discussion_r260438392,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1299,https://github.com/hyperledger/sawtooth-next-directory/pull/1299,After this PR and after we update Sphinx docs it would be in the left side menu of our Sphinx docs. Would you still like me to reference it in README and/or the setup docs? ,087b0f4ffd8f8acdb376b83d21828afc1f260f15,2019-02-26 19:03:50,260439116,"@@ -0,0 +1,20 @@
+=================
+Configure SSL/TLS",2,2019-02-26 19:34:22,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/260439116,https://github.com/hyperledger/sawtooth-next-directory/pull/1299#discussion_r260439116,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,Why did you user two different methods of handling this here? at line 101 and at line 110? in one you remove it.  and in the other you  keep and add a logger statement?,0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-01 17:12:23,261685267,"@@ -96,15 +98,16 @@ class ApiInternalError(ApiException):
 
 @ERRORS_BP.exception(ApiException)
 def api_json_error(request, exception):
+    if not request:",13,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/261685267,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r261685267,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,Please delete all commented out lines in this file having to do with API not implemented.  If they are necessary in the future we will implement from scratch,0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-01 17:16:40,261686639,"@@ -20,7 +20,7 @@
 
 from rbac.common import rbac
 
-from rbac.server.api.errors import ApiNotImplemented
+# from rbac.server.api.errors import ApiNotImplemented",,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/261686639,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r261686639,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,Does removing request not work here?,0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-01 17:19:01,261687355,"@@ -16,11 +16,17 @@
 from sanic import Blueprint
 from sanic import response
 
+from rbac.common.logs import get_default_logger
+
+LOGGER = get_default_logger(__name__)
+
 SWAGGER_BP = Blueprint(""swagger"")
 
 
 @SWAGGER_BP.get(""api/swagger"")
 async def get_swagger(request):
+    if not request:
+        LOGGER.debug(str(request))",14,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/261687355,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r261687355,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,Same in this file.  Please remove all commented out endpoints from ApiNotImplemented,0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-01 17:19:44,261687585,"@@ -20,7 +20,7 @@
 
 from rbac.common import rbac
 
-from rbac.server.api.errors import ApiNotImplemented
+# from rbac.server.api.errors import ApiNotImplemented",,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/261687585,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r261687585,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,"Woops! Sorry, a couple of methods were throwing errors during tests when I removed request, so I decided to add request back as an argument but I missed this one",0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-03 00:10:14,261846833,"@@ -96,15 +98,16 @@ class ApiInternalError(ApiException):
 
 @ERRORS_BP.exception(ApiException)
 def api_json_error(request, exception):
+    if not request:",13,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/261846833,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r261846833,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,Gotcha!,0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-03 00:10:22,261846836,"@@ -20,7 +20,7 @@
 
 from rbac.common import rbac
 
-from rbac.server.api.errors import ApiNotImplemented
+# from rbac.server.api.errors import ApiNotImplemented",,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/261846836,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r261846836,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,"It does not because request is still not being used anywhere in the method
",0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-03 00:10:58,261846853,"@@ -16,11 +16,17 @@
 from sanic import Blueprint
 from sanic import response
 
+from rbac.common.logs import get_default_logger
+
+LOGGER = get_default_logger(__name__)
+
 SWAGGER_BP = Blueprint(""swagger"")
 
 
 @SWAGGER_BP.get(""api/swagger"")
 async def get_swagger(request):
+    if not request:
+        LOGGER.debug(str(request))",14,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/261846853,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r261846853,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,right so can you not remove request from the parameters?  Or is it required?,0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-04 18:25:31,262184556,"@@ -16,11 +16,17 @@
 from sanic import Blueprint
 from sanic import response
 
+from rbac.common.logs import get_default_logger
+
+LOGGER = get_default_logger(__name__)
+
 SWAGGER_BP = Blueprint(""swagger"")
 
 
 @SWAGGER_BP.get(""api/swagger"")
 async def get_swagger(request):
+    if not request:
+        LOGGER.debug(str(request))",14,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262184556,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r262184556,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,"It is required, unfortunately.",0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-04 21:54:53,262260357,"@@ -16,11 +16,17 @@
 from sanic import Blueprint
 from sanic import response
 
+from rbac.common.logs import get_default_logger
+
+LOGGER = get_default_logger(__name__)
+
 SWAGGER_BP = Blueprint(""swagger"")
 
 
 @SWAGGER_BP.get(""api/swagger"")
 async def get_swagger(request):
+    if not request:
+        LOGGER.debug(str(request))",14,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262260357,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r262260357,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,Should remove commented out code if it is not needed.,0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-04 23:24:30,262287880,"@@ -23,7 +23,7 @@
 from rbac.common.crypto.keys import Key
 from rbac.common.crypto.secrets import encrypt_private_key
 
-from rbac.server.api.errors import ApiNotImplemented
+# from rbac.server.api.errors import ApiNotImplemented",,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262287880,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r262287880,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,Should remove commented out code if it is not needed.,0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-04 23:25:09,262288067,"@@ -197,17 +189,15 @@
     )
 
     head_block = await utils.get_request_block(request)
-    user_resource = await users_query.fetch_user_relationships(
-        conn, user_id, head_block.get(""num"")
-    )
+    user_resource = await users_query.fetch_user_relationships(conn, user_id)
     conn.close()
     return await utils.create_response(conn, request.url, user_resource, head_block)
 
 
-@USERS_BP.patch(""api/users/<user_id>"")
-@authorized()
-async def update_user(request, user_id):
-    raise ApiNotImplemented()
+# @USERS_BP.patch(""api/users/<user_id>"")",,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262288067,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r262288067,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,"When I run the app and I log in I get this error:
fetch_recommended_roles() got an expected keyword argument 'user_id'. Looks like Phil is passing in the user_id variable into this role. Possibly work with Phil to find out what the user_id is used for and if he could change the front end to not pass in the user_id that should fix this error.",0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-04 23:32:05,262289633,"@@ -377,7 +353,7 @@
 
 @USERS_BP.get(""api/users/<user_id>/roles/recommended"")
 @authorized()
-async def fetch_recommended_roles(request, user_id):
+async def fetch_recommended_roles(request):",,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262289633,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r262289633,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,"Spoke with Phil, he just put out a PR #1333 to remove code calling this unused endpoint",0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-05 19:04:53,262646124,"@@ -377,7 +353,7 @@
 
 @USERS_BP.get(""api/users/<user_id>/roles/recommended"")
 @authorized()
-async def fetch_recommended_roles(request, user_id):
+async def fetch_recommended_roles(request):",,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/262646124,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r262646124,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/1294,https://github.com/hyperledger/sawtooth-next-directory/pull/1294,It appears PR #1333 have been closed as Phil needs to make more changes. I'll check this PR again once he has merged his changes on the UI side.,0ed8e7937b74bacf6f79b7665f9703ecf5eb1d82,2019-03-06 17:45:40,263057245,"@@ -377,7 +353,7 @@
 
 @USERS_BP.get(""api/users/<user_id>/roles/recommended"")
 @authorized()
-async def fetch_recommended_roles(request, user_id):
+async def fetch_recommended_roles(request):",,2019-03-09 20:07:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/263057245,https://github.com/hyperledger/sawtooth-next-directory/pull/1294#discussion_r263057245,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1234,https://github.com/hyperledger/sawtooth-next-directory/pull/1234,This needs to change,e51f020b23e097713ed705d55db2ea26f9281eb3,2019-02-13 00:31:27,256204888,"@@ -0,0 +1,67 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import { put } from 'redux-saga/effects';
+
+
+import FixtureAPI from 'services/FixtureApi';
+import { SearchActions } from 'state';
+import { searchBrowse } from 'sagas/SearchSaga';
+
+
+const stepper = (fn) => (mock) => fn.next(mock).value;
+
+
+test('browse: success path', () => {
+  const query = {
+    query: {
+      search_input: { value: 'a' },",,2019-02-13 00:37:16,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/256204888,https://github.com/hyperledger/sawtooth-next-directory/pull/1234#discussion_r256204888,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1234,https://github.com/hyperledger/sawtooth-next-directory/pull/1234,Same here,e51f020b23e097713ed705d55db2ea26f9281eb3,2019-02-13 00:31:37,256204942,"@@ -0,0 +1,67 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import { put } from 'redux-saga/effects';
+
+
+import FixtureAPI from 'services/FixtureApi';
+import { SearchActions } from 'state';
+import { searchBrowse } from 'sagas/SearchSaga';
+
+
+const stepper = (fn) => (mock) => fn.next(mock).value;
+
+
+test('browse: success path', () => {
+  const query = {
+    query: {
+      search_input: { value: 'a' },
+      page: 1,
+    },
+  };
+
+  const res = FixtureAPI.search(query);
+  const step = stepper(searchBrowse(FixtureAPI, query));
+
+  step();
+  step();
+
+  const stepRes = step(res);
+  expect(stepRes).toEqual(
+    put(SearchActions.searchBrowseSuccess(res.data.data))
+  );
+});
+
+
+test('browse: failure path', () => {
+  const query = {
+    query: {
+      search_input: { value: 'a' },",,2019-02-13 00:37:16,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/256204942,https://github.com/hyperledger/sawtooth-next-directory/pull/1234#discussion_r256204942,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1234,https://github.com/hyperledger/sawtooth-next-directory/pull/1234,Fixed!,e51f020b23e097713ed705d55db2ea26f9281eb3,2019-02-13 00:37:32,256206115,"@@ -0,0 +1,67 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import { put } from 'redux-saga/effects';
+
+
+import FixtureAPI from 'services/FixtureApi';
+import { SearchActions } from 'state';
+import { searchBrowse } from 'sagas/SearchSaga';
+
+
+const stepper = (fn) => (mock) => fn.next(mock).value;
+
+
+test('browse: success path', () => {
+  const query = {
+    query: {
+      search_input: { value: 'a' },",,2019-02-13 00:37:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/256206115,https://github.com/hyperledger/sawtooth-next-directory/pull/1234#discussion_r256206115,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1234,https://github.com/hyperledger/sawtooth-next-directory/pull/1234,Fixed!,e51f020b23e097713ed705d55db2ea26f9281eb3,2019-02-13 00:37:40,256206149,"@@ -0,0 +1,67 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import { put } from 'redux-saga/effects';
+
+
+import FixtureAPI from 'services/FixtureApi';
+import { SearchActions } from 'state';
+import { searchBrowse } from 'sagas/SearchSaga';
+
+
+const stepper = (fn) => (mock) => fn.next(mock).value;
+
+
+test('browse: success path', () => {
+  const query = {
+    query: {
+      search_input: { value: 'a' },
+      page: 1,
+    },
+  };
+
+  const res = FixtureAPI.search(query);
+  const step = stepper(searchBrowse(FixtureAPI, query));
+
+  step();
+  step();
+
+  const stepRes = step(res);
+  expect(stepRes).toEqual(
+    put(SearchActions.searchBrowseSuccess(res.data.data))
+  );
+});
+
+
+test('browse: failure path', () => {
+  const query = {
+    query: {
+      search_input: { value: 'a' },",,2019-02-13 00:37:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/256206149,https://github.com/hyperledger/sawtooth-next-directory/pull/1234#discussion_r256206149,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1224,https://github.com/hyperledger/sawtooth-next-directory/pull/1224,Rewrite this comment as it is not using the native name,e0a4144ceea9247357adc7c4fe628609804019ee,2019-02-13 19:16:57,256547669,"@@ -12,23 +12,48 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
-""""""Sets up a standard logging format and setting""""""
+""""""Sets up a standard logger to be pulled and used by RBAC modules""""""
 
 import logging
+import os
+import sys
 
+# NOTE: Some imported libraries have been polluting INFO level logs
+# Set logging level for imported libraries
 LIB_LEVELS = {""asyncio"": logging.WARNING}
-LOGGER_FORMAT = ""%(levelname)s %(asctime)s %(name)s %(module)s %(pathname)s %(message)s""
 
-logging.basicConfig(level=logging.INFO, format=LOGGER_FORMAT)
+# Configurable settings for standard NEXT logger
+LOGGER_FORMAT = ""%(levelname)s %(asctime)s %(name)s %(module)s %(pathname)s %(message)s""
+LOGGING_LEVEL = ""INFO""
+LOGGER_LEVEL_MAP = {
+    ""INFO"": logging.INFO,
+    ""DEBUG"": logging.DEBUG,
+    ""WARNING"": logging.WARNING,
+    ""ERROR"": logging.ERROR,
+    ""CRITICAL"": logging.CRITICAL,
+}
 
+# Set logging levels for certain imported libraries
 for lib, level in LIB_LEVELS.items():
     logging.getLogger(lib).setLevel(level)
 
 
-def get_logger(name):
+def get_default_logger(name):
     """"""Return the logger
     Written to match the standard python logging.getLogger",,2019-02-16 02:34:20,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/256547669,https://github.com/hyperledger/sawtooth-next-directory/pull/1224#discussion_r256547669,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1224,https://github.com/hyperledger/sawtooth-next-directory/pull/1224,This should be an environment variable ,e0a4144ceea9247357adc7c4fe628609804019ee,2019-02-13 19:19:58,256548992,"@@ -12,23 +12,48 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
-""""""Sets up a standard logging format and setting""""""
+""""""Sets up a standard logger to be pulled and used by RBAC modules""""""
 
 import logging
+import os
+import sys
 
+# NOTE: Some imported libraries have been polluting INFO level logs
+# Set logging level for imported libraries
 LIB_LEVELS = {""asyncio"": logging.WARNING}
-LOGGER_FORMAT = ""%(levelname)s %(asctime)s %(name)s %(module)s %(pathname)s %(message)s""
 
-logging.basicConfig(level=logging.INFO, format=LOGGER_FORMAT)
+# Configurable settings for standard NEXT logger
+LOGGER_FORMAT = ""%(levelname)s %(asctime)s %(name)s %(module)s %(pathname)s %(message)s""
+LOGGING_LEVEL = ""INFO""",,2019-02-16 02:34:20,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/256548992,https://github.com/hyperledger/sawtooth-next-directory/pull/1224#discussion_r256548992,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1214,https://github.com/hyperledger/sawtooth-next-directory/pull/1214,Should be `background` instead of `background-image`.,116a43a5768f78813a187dc3df5a475936ce94e7,2019-02-08 19:52:43,255215326,"@@ -0,0 +1,42 @@
+.snapshot-sub-container {
+  display: flex;
+  flex-wrap: wrap;
+  width: 100%;
+  padding: 1em;
+  justify-content: center;
+  margin-top: 6.8em;
+}
+
+.snapshot-container {
+  margin: 1em;
+  width:30%;
+}
+
+.snapshot-main-container {
+  background-image: linear-gradient(to bottom, #44568F, #161718);",,2019-02-14 05:56:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/255215326,https://github.com/hyperledger/sawtooth-next-directory/pull/1214#discussion_r255215326,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1214,https://github.com/hyperledger/sawtooth-next-directory/pull/1214,Watch indentation. I'll see if I can add a rule to cover this case.,116a43a5768f78813a187dc3df5a475936ce94e7,2019-02-08 19:53:43,255215631,"@@ -0,0 +1,98 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Link } from 'react-router-dom';
+import { Header, Button} from 'semantic-ui-react';
+import PropTypes from 'prop-types';
+
+import './Snapshot.css';
+import SnapshotCard from './SnapshotCard';
+
+
+/**
+ *
+ * @class         Snapshot
+ * @description   Snapshot component
+ *
+ *
+ */
+class Snapshot extends Component {
+
+  static propTypes = {
+    openProposalsByUser: PropTypes.string,
+  };
+
+    state = {",,2019-02-14 05:56:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/255215631,https://github.com/hyperledger/sawtooth-next-directory/pull/1214#discussion_r255215631,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1214,https://github.com/hyperledger/sawtooth-next-directory/pull/1214,"Storing these in state is fine for now, but will need to be adjusted later.",116a43a5768f78813a187dc3df5a475936ce94e7,2019-02-08 19:54:27,255215879,"@@ -0,0 +1,98 @@
+/* Copyright 2019 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Link } from 'react-router-dom';
+import { Header, Button} from 'semantic-ui-react';
+import PropTypes from 'prop-types';
+
+import './Snapshot.css';
+import SnapshotCard from './SnapshotCard';
+
+
+/**
+ *
+ * @class         Snapshot
+ * @description   Snapshot component
+ *
+ *
+ */
+class Snapshot extends Component {
+
+  static propTypes = {
+    openProposalsByUser: PropTypes.string,
+  };
+
+    state = {
+      snapshotData: [{ roleCount: '0', roleStatus: 'Pending Across 12 roles'},
+        { roleCount: '9', roleStatus: 'About to Expire', isimageNeeded: true},
+        { roleCount: '3', roleStatus: 'Delegated'},
+        { roleCount: '5', roleStatus: 'Unattended Since 1 Week'},
+        { roleCount: '3', roleStatus: 'Escalated'},
+        { roleCount: '18', roleStatus: 'Messages'}],
+    };",,2019-02-14 05:56:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/255215879,https://github.com/hyperledger/sawtooth-next-directory/pull/1214#discussion_r255215879,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1214,https://github.com/hyperledger/sawtooth-next-directory/pull/1214,I will get feedback on whether view should keep the nav bar.,116a43a5768f78813a187dc3df5a475936ce94e7,2019-02-08 19:56:49,255216580,"@@ -165,6 +166,12 @@ const routes = (props) => [
     nav:    () => <ApproverNav {...props}/>,
     exact:  true,
   },
+  {",12,2019-02-14 05:56:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/255216580,https://github.com/hyperledger/sawtooth-next-directory/pull/1214#discussion_r255216580,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1155,https://github.com/hyperledger/sawtooth-next-directory/pull/1155,Line needed at end of file,bed23f6f0bc0177100ce6255edc039c2733a0855,2019-02-05 23:12:50,254084981,"@@ -387,4 +398,4 @@ def create_user_response(request, user_id):
         user_resource[""metadata""] = request.json.get(""metadata"")
     return utils.create_authorization_response(
         token, {""message"": ""Authorization successful"", ""user"": user_resource}
-    )
+    )",,2019-02-08 19:43:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/254084981,https://github.com/hyperledger/sawtooth-next-directory/pull/1155#discussion_r254084981,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1155,https://github.com/hyperledger/sawtooth-next-directory/pull/1155,"using the globally passed connection object is discouraged because it can be expired by rethinkdb. If @nadiabahrami is okay with this then we can merge, but I'd recommend creating a new connection object using:

```
conn = await db_utils.create_connection(
        request.app.config.DB_HOST,
        request.app.config.DB_PORT,
        request.app.config.DB_NAME,
    )
```

before running your queries, and pass `conn` through instead of `request.app.config.DB_CONN` and run `conn.close()` before your return statement. The functions in the utils module expect a closed connection and will reconnect before running their queries.

Thanks!",bed23f6f0bc0177100ce6255edc039c2733a0855,2019-02-06 00:03:13,254096176,"@@ -156,6 +156,17 @@
         request.app.config.DB_CONN, request.url, user_resource, head_block
     )
 
+@USERS_BP.get(""api/users/<user_id>/summary"")
+@authorized()
+async def get_user_summary(request, user_id):
+    """"""This endpoint is for returning summary data for a user, just it's user_id,name, email.""""""
+    head_block = await utils.get_request_block(request)
+    user_resource = await users_query.fetch_user_resource_summary(
+        request.app.config.DB_CONN, user_id, head_block.get(""num"")",,2019-02-08 19:43:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/254096176,https://github.com/hyperledger/sawtooth-next-directory/pull/1155#discussion_r254096176,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/1155,https://github.com/hyperledger/sawtooth-next-directory/pull/1155,and can you squash/fixup the commits? these all address one issue and I think they can be consolidated into one commit.,bed23f6f0bc0177100ce6255edc039c2733a0855,2019-02-06 00:11:35,254097727,"@@ -156,6 +156,17 @@
         request.app.config.DB_CONN, request.url, user_resource, head_block
     )
 
+@USERS_BP.get(""api/users/<user_id>/summary"")
+@authorized()
+async def get_user_summary(request, user_id):
+    """"""This endpoint is for returning summary data for a user, just it's user_id,name, email.""""""
+    head_block = await utils.get_request_block(request)
+    user_resource = await users_query.fetch_user_resource_summary(
+        request.app.config.DB_CONN, user_id, head_block.get(""num"")",,2019-02-08 19:43:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/254097727,https://github.com/hyperledger/sawtooth-next-directory/pull/1155#discussion_r254097727,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/1126,https://github.com/hyperledger/sawtooth-next-directory/pull/1126,"I think we may be using this incorrectly, but I will make a ticket for that and look into it later.",5dfa27b4e5011da2b0510ed6bfdf15312e3a38e3,2019-02-04 17:08:35,253557876,"@@ -79,6 +79,7 @@ def setup_db(host, port, name):
         r.db(name).table('users').index_create('user_id').run(conn)
         r.db(name).table(""users"").index_create(""username"").run(conn)
         r.db(name).table(""users"").index_create(""email"").run(conn)
+        r.db(name).table(""users"").index_create(""name"").run(conn)",4,2019-02-04 17:08:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/253557876,https://github.com/hyperledger/sawtooth-next-directory/pull/1126#discussion_r253557876,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1126,https://github.com/hyperledger/sawtooth-next-directory/pull/1126,"yeah, I think indexing is only for if we want to use it as a primary key in a search.",5dfa27b4e5011da2b0510ed6bfdf15312e3a38e3,2019-02-04 17:12:44,253559431,"@@ -79,6 +79,7 @@ def setup_db(host, port, name):
         r.db(name).table('users').index_create('user_id').run(conn)
         r.db(name).table(""users"").index_create(""username"").run(conn)
         r.db(name).table(""users"").index_create(""email"").run(conn)
+        r.db(name).table(""users"").index_create(""name"").run(conn)",4,2019-02-04 17:12:44,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/253559431,https://github.com/hyperledger/sawtooth-next-directory/pull/1126#discussion_r253559431,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/1126,https://github.com/hyperledger/sawtooth-next-directory/pull/1126,"The index is added to trade memory for disk. If we don't think there will be a performance hit for large sets, then we can safely remove it. Note the query itself will also need to change.

From https://rethinkdb.com/api/javascript/order_by/:

> Sorting without an index requires the server to hold the sequence in memory, and is limited to 100,000 documents
",5dfa27b4e5011da2b0510ed6bfdf15312e3a38e3,2019-02-04 17:37:52,253568652,"@@ -79,6 +79,7 @@ def setup_db(host, port, name):
         r.db(name).table('users').index_create('user_id').run(conn)
         r.db(name).table(""users"").index_create(""username"").run(conn)
         r.db(name).table(""users"").index_create(""email"").run(conn)
+        r.db(name).table(""users"").index_create(""name"").run(conn)",4,2019-02-04 17:37:52,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/253568652,https://github.com/hyperledger/sawtooth-next-directory/pull/1126#discussion_r253568652,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1107,https://github.com/hyperledger/sawtooth-next-directory/pull/1107,I know this is valid as they're not required but did you mean to take out the curly braces?,efd0d78aa3ec5320aba3d4b0548f2475fb8b078d,2019-01-30 20:24:40,252424054,"@@ -78,13 +78,10 @@ class Login extends Component {
     this.init();
 
     if (prevState.authSource !== authSource) {
-      if (authSource === 'ldap') {
+      if (authSource === 'ldap')",5,2019-01-30 20:24:49,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/252424054,https://github.com/hyperledger/sawtooth-next-directory/pull/1107#discussion_r252424054,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/1107,https://github.com/hyperledger/sawtooth-next-directory/pull/1107,This style is enforced by our linter. Can be changed if desired.,efd0d78aa3ec5320aba3d4b0548f2475fb8b078d,2019-01-30 21:03:20,252436531,"@@ -78,13 +78,10 @@ class Login extends Component {
     this.init();
 
     if (prevState.authSource !== authSource) {
-      if (authSource === 'ldap') {
+      if (authSource === 'ldap')",5,2019-01-30 21:03:21,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/252436531,https://github.com/hyperledger/sawtooth-next-directory/pull/1107#discussion_r252436531,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1102,https://github.com/hyperledger/sawtooth-next-directory/pull/1102,Needs a doc string,5e3ebf1e5e18523ab443eaca3a10802d0923d098,2019-01-29 23:23:54,252060481,"@@ -119,6 +121,18 @@
     )
 
 
+@USERS_BP.get(""api/user/<user_id>/summary"")
+@authorized()
+async def get_user_summary(request, user_id):",37,2019-01-29 23:41:12,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/252060481,https://github.com/hyperledger/sawtooth-next-directory/pull/1102#discussion_r252060481,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1102,https://github.com/hyperledger/sawtooth-next-directory/pull/1102,why are we not returning user_id?  Shouldn't that comeback with payload?  Isn't manager ID important as well for a user's summary?,5e3ebf1e5e18523ab443eaca3a10802d0923d098,2019-01-29 23:25:09,252060778,"@@ -80,6 +80,22 @@
         raise ApiNotFound(""Not Found: No user with the id {} exists"".format(user_id))
 
 
+async def fetch_user_resource_summary(conn, user_id, head_block_num):
+    """"""Database query to get summary data on an individual user.""""""
+    resource = (
+        await r.table(""users"")
+        .get_all(user_id, index=""user_id"")
+        .merge({""id"": r.row[""user_id""], ""name"": r.row[""name""], ""email"": r.row[""email""]})
+        .without(""user_id"", ""manager_id"", ""start_block_num"", ""end_block_num"")",10,2019-01-29 23:41:12,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/252060778,https://github.com/hyperledger/sawtooth-next-directory/pull/1102#discussion_r252060778,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1102,https://github.com/hyperledger/sawtooth-next-directory/pull/1102,"The user_id is returned as ""id"" . This is copy / paste from the other get user data. So didn't want to make it different. ",5e3ebf1e5e18523ab443eaca3a10802d0923d098,2019-01-29 23:27:13,252061329,"@@ -80,6 +80,22 @@
         raise ApiNotFound(""Not Found: No user with the id {} exists"".format(user_id))
 
 
+async def fetch_user_resource_summary(conn, user_id, head_block_num):
+    """"""Database query to get summary data on an individual user.""""""
+    resource = (
+        await r.table(""users"")
+        .get_all(user_id, index=""user_id"")
+        .merge({""id"": r.row[""user_id""], ""name"": r.row[""name""], ""email"": r.row[""email""]})
+        .without(""user_id"", ""manager_id"", ""start_block_num"", ""end_block_num"")",10,2019-01-29 23:41:12,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/252061329,https://github.com/hyperledger/sawtooth-next-directory/pull/1102#discussion_r252061329,gvanica
https://github.com/hyperledger/sawtooth-next-directory/pull/1102,https://github.com/hyperledger/sawtooth-next-directory/pull/1102,Will add a doc string. ,5e3ebf1e5e18523ab443eaca3a10802d0923d098,2019-01-29 23:27:21,252061370,"@@ -119,6 +121,18 @@
     )
 
 
+@USERS_BP.get(""api/user/<user_id>/summary"")
+@authorized()
+async def get_user_summary(request, user_id):",37,2019-01-29 23:41:12,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/252061370,https://github.com/hyperledger/sawtooth-next-directory/pull/1102#discussion_r252061370,gvanica
https://github.com/hyperledger/sawtooth-next-directory/pull/1102,https://github.com/hyperledger/sawtooth-next-directory/pull/1102,ah ok.  sounds good.,5e3ebf1e5e18523ab443eaca3a10802d0923d098,2019-01-29 23:28:18,252061602,"@@ -80,6 +80,22 @@
         raise ApiNotFound(""Not Found: No user with the id {} exists"".format(user_id))
 
 
+async def fetch_user_resource_summary(conn, user_id, head_block_num):
+    """"""Database query to get summary data on an individual user.""""""
+    resource = (
+        await r.table(""users"")
+        .get_all(user_id, index=""user_id"")
+        .merge({""id"": r.row[""user_id""], ""name"": r.row[""name""], ""email"": r.row[""email""]})
+        .without(""user_id"", ""manager_id"", ""start_block_num"", ""end_block_num"")",10,2019-01-29 23:41:12,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/252061602,https://github.com/hyperledger/sawtooth-next-directory/pull/1102#discussion_r252061602,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1102,https://github.com/hyperledger/sawtooth-next-directory/pull/1102,Updated PR with this. ,5e3ebf1e5e18523ab443eaca3a10802d0923d098,2019-01-29 23:29:31,252061894,"@@ -119,6 +121,18 @@
     )
 
 
+@USERS_BP.get(""api/user/<user_id>/summary"")
+@authorized()
+async def get_user_summary(request, user_id):",37,2019-01-29 23:41:12,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/252061894,https://github.com/hyperledger/sawtooth-next-directory/pull/1102#discussion_r252061894,gvanica
https://github.com/hyperledger/sawtooth-next-directory/pull/1080,https://github.com/hyperledger/sawtooth-next-directory/pull/1080,"The input parameter should be named ""inbound_value"". This is to remove the confusion on this line: 
value = value.value",bd36827d8fe116bb96142fc9d0c9604b7d312b22,2019-01-24 22:56:38,250809651,"@@ -68,17 +68,10 @@ def datetime_to_seconds(value):
 def inbound_value_filter(value):
     """"""Cleans up data values
     1. Unwraps LDAP attributes
-    2. Removes empty arrays
-    3. Unwraps single value arrays
-    4. Converts datetime.datetime to seconds
+    2. Converts datetime.datetime to seconds",11,2019-01-25 01:00:03,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/250809651,https://github.com/hyperledger/sawtooth-next-directory/pull/1080#discussion_r250809651,gvanica
https://github.com/hyperledger/sawtooth-next-directory/pull/1080,https://github.com/hyperledger/sawtooth-next-directory/pull/1080,"Here , we don't return,  we just set value. Below , in the elif, we return. We should be consistent (either we return in both places, or set in both places). 
In both places we should assign return value , and return that return value at the end. 
Also, the return value variable should be named differently than the input value.

We should do this: 

retValue = inbound_value

if (...)
  retValue = inbound_value.value
elif (...)
  retValue = datetime_to_seconds(inbout_value)

return retValue


",bd36827d8fe116bb96142fc9d0c9604b7d312b22,2019-01-24 22:59:35,250810339,"@@ -68,17 +68,10 @@ def datetime_to_seconds(value):
 def inbound_value_filter(value):
     """"""Cleans up data values
     1. Unwraps LDAP attributes
-    2. Removes empty arrays
-    3. Unwraps single value arrays
-    4. Converts datetime.datetime to seconds
+    2. Converts datetime.datetime to seconds
     """"""
     if hasattr(value, ""value""):
         value = value.value",,2019-01-25 01:00:03,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/250810339,https://github.com/hyperledger/sawtooth-next-directory/pull/1080#discussion_r250810339,gvanica
https://github.com/hyperledger/sawtooth-next-directory/pull/1069,https://github.com/hyperledger/sawtooth-next-directory/pull/1069,Can you add a doc string to this so we know what it's for?,750f34dbb0689b016e44f61e21a3832e9eabc686,2019-01-24 17:30:54,250705650,"@@ -145,6 +145,16 @@ class ProposalType(object):  # pylint: disable=too-few-public-methods
     )
 
 
+@PROPOSALS_BP.patch(""api/proposals"")
+@authorized()
+async def batch_update_proposals(request):",6,2019-01-24 23:35:38,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/250705650,https://github.com/hyperledger/sawtooth-next-directory/pull/1069#discussion_r250705650,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1069,https://github.com/hyperledger/sawtooth-next-directory/pull/1069,Fixed. 😺,750f34dbb0689b016e44f61e21a3832e9eabc686,2019-01-24 17:45:49,250710859,"@@ -145,6 +145,16 @@ class ProposalType(object):  # pylint: disable=too-few-public-methods
     )
 
 
+@PROPOSALS_BP.patch(""api/proposals"")
+@authorized()
+async def batch_update_proposals(request):",6,2019-01-24 23:35:38,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/250710859,https://github.com/hyperledger/sawtooth-next-directory/pull/1069#discussion_r250710859,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1061,https://github.com/hyperledger/sawtooth-next-directory/pull/1061,All styles should be in CSS instead of inline.,1626f970f02077b39b8cb3a9c754c561894fc118,2019-01-24 15:08:30,250642890,"@@ -85,6 +85,10 @@ class MemberList extends Component {
    */
   renderUserSegment (userId, isOwner) {
     const { users } = this.props;
+    const style = {",,2019-01-29 05:27:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/250642890,https://github.com/hyperledger/sawtooth-next-directory/pull/1061#discussion_r250642890,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1061,https://github.com/hyperledger/sawtooth-next-directory/pull/1061,"IDs should be prepended with `next-` for specific styles to avoid collisions with vendor rules. For example, `next-member-list-owner-popup-box`.",1626f970f02077b39b8cb3a9c754c561894fc118,2019-01-24 18:17:09,250721683,"@@ -110,14 +109,16 @@ class MemberList extends Component {
         <Grid.Column key={userId} largeScreen={8} widescreen={5}>
           <Segment className='avatar no-padding minimal'>
             { isOwner ?
-              <Icon
+              <Popup trigger={<Icon
                 name='shield'
                 className='pull-right'
-                color='green'/> :
-              <Icon
+                color='green'/>} content='Owner' id='owner-popup-box'",,2019-01-29 05:27:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/250721683,https://github.com/hyperledger/sawtooth-next-directory/pull/1061#discussion_r250721683,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1061,https://github.com/hyperledger/sawtooth-next-directory/pull/1061,Nitpick: 2 space indent and all files should end with a newline. If you hover over the red icon below it indicates that the file has no newline at the end.,1626f970f02077b39b8cb3a9c754c561894fc118,2019-01-24 18:18:56,250722214,"@@ -12,3 +12,8 @@ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 ----------------------------------------------------------------------------- */
+
+#owner-popup-box,#member-popup-box {
+    border-radius: 8px;",,2019-01-29 05:27:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/250722214,https://github.com/hyperledger/sawtooth-next-directory/pull/1061#discussion_r250722214,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1039,https://github.com/hyperledger/sawtooth-next-directory/pull/1039,EOF newline.,0c5e67c6d9935454e7a662690f38aefe46f93e87,2019-01-22 05:29:06,249645111,"@@ -84,3 +84,9 @@ limitations under the License.
 #next-login-form-avatar-container {
   min-height: 80px;
 }
+
+.next-input-info {
+  padding: 0 !important;
+  font-size: 11px !important;
+  color: var(--text-light) !important;
+}",,2019-01-29 10:53:42,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/249645111,https://github.com/hyperledger/sawtooth-next-directory/pull/1039#discussion_r249645111,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1028,https://github.com/hyperledger/sawtooth-next-directory/pull/1028,Does this address the aspect of updating the blockchain?  I am concerned that it doesn't.,72146a4bc5dccd7f8d0fb902a2a28b7834f39f51,2019-01-16 18:08:32,248392513,"@@ -259,6 +259,23 @@
     )
 
 
+@USERS_BP.patch(""api/users/<user_id>/roles/expired"")
+@authorized()
+async def update_expired_roles(request, user_id):
+    """"""Manually expire user role membership""""""",7,2019-01-17 02:10:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248392513,https://github.com/hyperledger/sawtooth-next-directory/pull/1028#discussion_r248392513,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1028,https://github.com/hyperledger/sawtooth-next-directory/pull/1028,Manual expiration is used to simulate membership expiration for demoing. See PR #957 for the blockchain aspect.,72146a4bc5dccd7f8d0fb902a2a28b7834f39f51,2019-01-16 18:16:31,248395296,"@@ -259,6 +259,23 @@
     )
 
 
+@USERS_BP.patch(""api/users/<user_id>/roles/expired"")
+@authorized()
+async def update_expired_roles(request, user_id):
+    """"""Manually expire user role membership""""""",7,2019-01-17 02:10:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248395296,https://github.com/hyperledger/sawtooth-next-directory/pull/1028#discussion_r248395296,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1028,https://github.com/hyperledger/sawtooth-next-directory/pull/1028,Missing the .run(conn) at the end of this call RethinkDB call.,72146a4bc5dccd7f8d0fb902a2a28b7834f39f51,2019-01-16 20:16:30,248435172,"@@ -93,3 +93,27 @@
         return resource[0]
     except IndexError:
         raise ApiNotFound(""Not Found: No role with the id {} exists"".format(role_id))
+
+
+async def expire_role_member(conn, role_id, user_id, head_block_num):
+    """"""Expire role membership of given user""""""
+    return (
+        await r.table(""role_members"")
+        .get_all(role_id, index=""role_id"")
+        .filter(lambda doc: doc[""identifiers""].contains(user_id))
+        .update({""expiration_date"": r.now()})
+        .run(conn)
+    )
+
+
+def fetch_expired_roles(user_id, head_block_num):
+    """"""Fetch expired role memberships of given user""""""
+    return (
+        r.table(""role_members"")
+        .filter(
+            lambda doc: (doc[""identifiers""].contains(user_id))
+            & (doc[""expiration_date""] <= r.now())
+        )
+        .get_field(""role_id"")
+        .coerce_to(""array"")",26,2019-01-17 02:10:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248435172,https://github.com/hyperledger/sawtooth-next-directory/pull/1028#discussion_r248435172,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1028,https://github.com/hyperledger/sawtooth-next-directory/pull/1028,"Seems head_block_num isn't needed for this function, we should remove it from the parameters.",72146a4bc5dccd7f8d0fb902a2a28b7834f39f51,2019-01-16 20:17:50,248435581,"@@ -93,3 +93,27 @@
         return resource[0]
     except IndexError:
         raise ApiNotFound(""Not Found: No role with the id {} exists"".format(role_id))
+
+
+async def expire_role_member(conn, role_id, user_id, head_block_num):
+    """"""Expire role membership of given user""""""
+    return (
+        await r.table(""role_members"")
+        .get_all(role_id, index=""role_id"")
+        .filter(lambda doc: doc[""identifiers""].contains(user_id))
+        .update({""expiration_date"": r.now()})
+        .run(conn)
+    )
+
+
+def fetch_expired_roles(user_id, head_block_num):",,2019-01-17 02:10:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248435581,https://github.com/hyperledger/sawtooth-next-directory/pull/1028#discussion_r248435581,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1028,https://github.com/hyperledger/sawtooth-next-directory/pull/1028,Would we want to show expired field when the function `fetch_all_user_resources()` function is called?,72146a4bc5dccd7f8d0fb902a2a28b7834f39f51,2019-01-16 22:39:33,248478505,"@@ -56,6 +58,7 @@
                 ""memberOf"": fetch_relationships_by_id(
                     ""role_members"", user_id, ""role_id"", head_block_num
                 ),
+                ""expired"": fetch_expired_roles(user_id, head_block_num),",,2019-01-17 02:10:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248478505,https://github.com/hyperledger/sawtooth-next-directory/pull/1028#discussion_r248478505,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/1028,https://github.com/hyperledger/sawtooth-next-directory/pull/1028,`.run(conn)` isn't required here. See `users_query.py` for reference.,72146a4bc5dccd7f8d0fb902a2a28b7834f39f51,2019-01-16 22:51:40,248481779,"@@ -93,3 +93,27 @@
         return resource[0]
     except IndexError:
         raise ApiNotFound(""Not Found: No role with the id {} exists"".format(role_id))
+
+
+async def expire_role_member(conn, role_id, user_id, head_block_num):
+    """"""Expire role membership of given user""""""
+    return (
+        await r.table(""role_members"")
+        .get_all(role_id, index=""role_id"")
+        .filter(lambda doc: doc[""identifiers""].contains(user_id))
+        .update({""expiration_date"": r.now()})
+        .run(conn)
+    )
+
+
+def fetch_expired_roles(user_id, head_block_num):
+    """"""Fetch expired role memberships of given user""""""
+    return (
+        r.table(""role_members"")
+        .filter(
+            lambda doc: (doc[""identifiers""].contains(user_id))
+            & (doc[""expiration_date""] <= r.now())
+        )
+        .get_field(""role_id"")
+        .coerce_to(""array"")",26,2019-01-17 02:10:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248481779,https://github.com/hyperledger/sawtooth-next-directory/pull/1028#discussion_r248481779,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1028,https://github.com/hyperledger/sawtooth-next-directory/pull/1028,I can't imagine a use case for that at the moment.,72146a4bc5dccd7f8d0fb902a2a28b7834f39f51,2019-01-16 22:53:31,248482305,"@@ -56,6 +58,7 @@
                 ""memberOf"": fetch_relationships_by_id(
                     ""role_members"", user_id, ""role_id"", head_block_num
                 ),
+                ""expired"": fetch_expired_roles(user_id, head_block_num),",,2019-01-17 02:10:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248482305,https://github.com/hyperledger/sawtooth-next-directory/pull/1028#discussion_r248482305,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1028,https://github.com/hyperledger/sawtooth-next-directory/pull/1028,Fixed. :),72146a4bc5dccd7f8d0fb902a2a28b7834f39f51,2019-01-16 23:03:04,248484845,"@@ -93,3 +93,27 @@
         return resource[0]
     except IndexError:
         raise ApiNotFound(""Not Found: No role with the id {} exists"".format(role_id))
+
+
+async def expire_role_member(conn, role_id, user_id, head_block_num):
+    """"""Expire role membership of given user""""""
+    return (
+        await r.table(""role_members"")
+        .get_all(role_id, index=""role_id"")
+        .filter(lambda doc: doc[""identifiers""].contains(user_id))
+        .update({""expiration_date"": r.now()})
+        .run(conn)
+    )
+
+
+def fetch_expired_roles(user_id, head_block_num):",,2019-01-17 02:10:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248484845,https://github.com/hyperledger/sawtooth-next-directory/pull/1028#discussion_r248484845,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1017,https://github.com/hyperledger/sawtooth-next-directory/pull/1017,remove,ed30b6f478d5873c0b31347c69f83f00c69c0dcd,2019-01-14 22:01:58,247676224,"@@ -13,42 +13,14 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-# -----------------------------------------------------------------------------
-# Begin base docker image config for Hyperledger RBAC Next Directory
-# This should remain the same for all python containers to maximize caching
-# -----------------------------------------------------------------------------
-FROM hyperledger/sawtooth-validator:1.0
-
-RUN apt-get update \
- && apt-get install -y --allow-unauthenticated -q \
-        locales \
-        python3-pip \
-        python3-sawtooth-sdk \
- && locale-gen en_US.UTF-8 \
- && apt-get clean \
- && rm -rf /var/lib/apt/lists/*
-RUN apt-get update && apt-get install -y  apt-utils
-
-RUN pip3 install -U pip setuptools
-
+FROM python:3.5-slim
 RUN pip3 install \
-        grpcio-tools==1.16.1 \
+        ldap3==2.5.1 \
+        pyasn1==0.4.4 \
+        pytz==2018.6 \
+        azure-eventhub==1.2.0 \",,2019-01-14 22:47:21,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/247676224,https://github.com/hyperledger/sawtooth-next-directory/pull/1017#discussion_r247676224,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1017,https://github.com/hyperledger/sawtooth-next-directory/pull/1017,"ty, just removed it
",ed30b6f478d5873c0b31347c69f83f00c69c0dcd,2019-01-14 22:05:44,247677331,"@@ -13,42 +13,14 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-# -----------------------------------------------------------------------------
-# Begin base docker image config for Hyperledger RBAC Next Directory
-# This should remain the same for all python containers to maximize caching
-# -----------------------------------------------------------------------------
-FROM hyperledger/sawtooth-validator:1.0
-
-RUN apt-get update \
- && apt-get install -y --allow-unauthenticated -q \
-        locales \
-        python3-pip \
-        python3-sawtooth-sdk \
- && locale-gen en_US.UTF-8 \
- && apt-get clean \
- && rm -rf /var/lib/apt/lists/*
-RUN apt-get update && apt-get install -y  apt-utils
-
-RUN pip3 install -U pip setuptools
-
+FROM python:3.5-slim
 RUN pip3 install \
-        grpcio-tools==1.16.1 \
+        ldap3==2.5.1 \
+        pyasn1==0.4.4 \
+        pytz==2018.6 \
+        azure-eventhub==1.2.0 \",,2019-01-14 22:47:21,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/247677331,https://github.com/hyperledger/sawtooth-next-directory/pull/1017#discussion_r247677331,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/1016,https://github.com/hyperledger/sawtooth-next-directory/pull/1016,Why is this being deleted?,a741b6a047763f902afd771d52a0f31a8634e54b,2019-01-14 22:32:31,247685116,"@@ -141,10 +141,8 @@ const mapStateToProps = (state) => {
 
 const mapDispatchToProps = (dispatch) => {
   return {
-    login: (email, password) =>
-      dispatch(AuthActions.loginRequest(email, password)),
-    attemptSignup: (name, username, password, email) =>",6,2019-01-14 22:32:38,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/247685116,https://github.com/hyperledger/sawtooth-next-directory/pull/1016#discussion_r247685116,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1016,https://github.com/hyperledger/sawtooth-next-directory/pull/1016,It's no longer used.,a741b6a047763f902afd771d52a0f31a8634e54b,2019-01-14 22:59:00,247695712,"@@ -141,10 +141,8 @@ const mapStateToProps = (state) => {
 
 const mapDispatchToProps = (dispatch) => {
   return {
-    login: (email, password) =>
-      dispatch(AuthActions.loginRequest(email, password)),
-    attemptSignup: (name, username, password, email) =>",6,2019-01-14 22:59:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/247695712,https://github.com/hyperledger/sawtooth-next-directory/pull/1016#discussion_r247695712,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1013,https://github.com/hyperledger/sawtooth-next-directory/pull/1013,"Only one `BrowserRouter` should exist. This nests `<BrowserRouter>` in `App.js` within it. https://github.com/ReactTraining/react-router/issues/5291.
",a613388346852fdc0d87b954d9f01d4b60aeefac,2019-01-15 11:42:43,247859946,"@@ -37,7 +38,9 @@ const store = customStore.create();
 ReactDOM.render(
   <div id='next-root'>
     <Provider store={store}>
-      <App routes={routes}/>
+      <BrowserRouter>",,2019-01-29 08:09:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/247859946,https://github.com/hyperledger/sawtooth-next-directory/pull/1013#discussion_r247859946,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1013,https://github.com/hyperledger/sawtooth-next-directory/pull/1013,Routing should be divorced from application state.,a613388346852fdc0d87b954d9f01d4b60aeefac,2019-01-15 11:45:46,247860780,"@@ -37,6 +37,8 @@ const { Types, Creators } = createActions({
 
   refreshOnNextSocketReceive:        ['flag'],
   feedReceive:                       ['payload'],
+",,2019-01-29 08:09:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/247860780,https://github.com/hyperledger/sawtooth-next-directory/pull/1013#discussion_r247860780,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1013,https://github.com/hyperledger/sawtooth-next-directory/pull/1013,Routing should be divorced from application state.,a613388346852fdc0d87b954d9f01d4b60aeefac,2019-01-15 11:46:44,247861043,"@@ -112,6 +113,8 @@ export const appDispatch = (dispatch) => {
     startRefresh:      ()    => dispatch(AppActions.refreshBegin()),
     stopRefresh:       ()    => dispatch(AppActions.refreshEnd()),
     forceSocketError:  ()    => dispatch(AppActions.socketMaxAttemptsReached()),
+    pageNotFound:      (status)    =>",,2019-01-29 08:09:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/247861043,https://github.com/hyperledger/sawtooth-next-directory/pull/1013#discussion_r247861043,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1013,https://github.com/hyperledger/sawtooth-next-directory/pull/1013,Redirect shouldn't change the URL.,a613388346852fdc0d87b954d9f01d4b60aeefac,2019-01-15 11:47:40,247861304,"@@ -262,10 +313,15 @@ class App extends Component {
             <Route exact path='/login' component={Login}/>
             <Route exact path='/signup' component={Signup}/>
             { !isAuthenticated && <Redirect to='/login'/> }
+            { !isPageNotFound && <Redirect to='/404-page-not-found'/> }
             <Route
               exact
               path='/browse'
               render={() => <Browse {...this.props}/>}/>
+            <Route
+              exact
+              path='/404-page-not-found'",,2019-01-29 08:09:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/247861304,https://github.com/hyperledger/sawtooth-next-directory/pull/1013#discussion_r247861304,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1013,https://github.com/hyperledger/sawtooth-next-directory/pull/1013,"- All files should have a copyright header.
- All files should have an EOF newline.
- Optionally, CSS rules should be sorted alphabetically.
- Prefer HEX to RGB.
- Class and ID names should be hyphen-delimited.

I'll see what I can do for automating EOF + CSS sorting/name checks.",a613388346852fdc0d87b954d9f01d4b60aeefac,2019-01-15 11:53:01,247862717,"@@ -0,0 +1,21 @@
+.error-layout-container {
+  margin-top: 2.8em;
+  height: calc(100vh - 2.8em);
+  display: flex;
+  justify-content: center;
+  align-items: center;
+  color: #fff;
+  background: linear-gradient(#1d1e27, rgb(78, 77, 78));
+}
+
+.error-layout__heading {
+  font-size: 12rem;
+  font-weight: bold;
+  margin: 0;
+}
+
+.error-layout__text {
+  font-size: 2rem;
+  text-align: center;
+  margin: 0;
+}",44,2019-01-29 08:09:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/247862717,https://github.com/hyperledger/sawtooth-next-directory/pull/1013#discussion_r247862717,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1013,https://github.com/hyperledger/sawtooth-next-directory/pull/1013,Don't use `<main>` in a nested component.,a613388346852fdc0d87b954d9f01d4b60aeefac,2019-01-15 19:20:50,248029075,"@@ -0,0 +1,83 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Button, Icon } from 'semantic-ui-react';
+import { Link } from 'react-router-dom';
+import * as utils from 'services/Utils';
+import PropTypes from 'prop-types';
+
+import './PageNotFound.css';
+
+
+/**
+ *
+ * @class         PageNotFound
+ * @description   Component encapsulating 404 page
+ *
+ *
+ */
+export default class PageNotFound extends Component {
+
+
+  static propTypes = {
+    recommendedPacks:        PropTypes.array,
+    recommendedRoles:        PropTypes.array,
+  }
+
+
+  /**
+   * updates props
+   * @param {object} nextProps props after update
+   */
+  UNSAFE_componentWillReceiveProps (nextProps){
+    this.props = nextProps;
+  }
+
+  /**
+   * Render entrypoint
+   * @returns {JSX}
+   */
+  render () {
+    const { recommendedPacks, recommendedRoles } = this.props;
+
+    return (
+      <div className ='error-layout-container'>
+        <main>",,2019-01-29 08:09:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248029075,https://github.com/hyperledger/sawtooth-next-directory/pull/1013#discussion_r248029075,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1013,https://github.com/hyperledger/sawtooth-next-directory/pull/1013,This should not be used. `componentDidUpdate` instead. https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops,a613388346852fdc0d87b954d9f01d4b60aeefac,2019-01-15 19:21:59,248029523,"@@ -0,0 +1,83 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Button, Icon } from 'semantic-ui-react';
+import { Link } from 'react-router-dom';
+import * as utils from 'services/Utils';
+import PropTypes from 'prop-types';
+
+import './PageNotFound.css';
+
+
+/**
+ *
+ * @class         PageNotFound
+ * @description   Component encapsulating 404 page
+ *
+ *
+ */
+export default class PageNotFound extends Component {
+
+
+  static propTypes = {
+    recommendedPacks:        PropTypes.array,
+    recommendedRoles:        PropTypes.array,
+  }
+
+
+  /**
+   * updates props
+   * @param {object} nextProps props after update
+   */
+  UNSAFE_componentWillReceiveProps (nextProps){",,2019-01-29 08:09:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248029523,https://github.com/hyperledger/sawtooth-next-directory/pull/1013#discussion_r248029523,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1013,https://github.com/hyperledger/sawtooth-next-directory/pull/1013,Class names and IDs should only contain hyphens.,a613388346852fdc0d87b954d9f01d4b60aeefac,2019-01-15 19:24:01,248030218,"@@ -0,0 +1,83 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Button, Icon } from 'semantic-ui-react';
+import { Link } from 'react-router-dom';
+import * as utils from 'services/Utils';
+import PropTypes from 'prop-types';
+
+import './PageNotFound.css';
+
+
+/**
+ *
+ * @class         PageNotFound
+ * @description   Component encapsulating 404 page
+ *
+ *
+ */
+export default class PageNotFound extends Component {
+
+
+  static propTypes = {
+    recommendedPacks:        PropTypes.array,
+    recommendedRoles:        PropTypes.array,
+  }
+
+
+  /**
+   * updates props
+   * @param {object} nextProps props after update
+   */
+  UNSAFE_componentWillReceiveProps (nextProps){
+    this.props = nextProps;
+  }
+
+  /**
+   * Render entrypoint
+   * @returns {JSX}
+   */
+  render () {
+    const { recommendedPacks, recommendedRoles } = this.props;
+
+    return (
+      <div className ='error-layout-container'>
+        <main>
+          <h1 className='error-layout__heading'>
+            404
+          </h1>
+          <p className='error-layout__text'>",,2019-01-29 08:09:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248030218,https://github.com/hyperledger/sawtooth-next-directory/pull/1013#discussion_r248030218,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1013,https://github.com/hyperledger/sawtooth-next-directory/pull/1013,All copyright headers should be identical.,a613388346852fdc0d87b954d9f01d4b60aeefac,2019-01-15 19:24:44,248030473,"@@ -1,11 +1,8 @@
 /* Copyright 2019 Contributors to Hyperledger Sawtooth
-",,2019-01-29 08:09:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248030473,https://github.com/hyperledger/sawtooth-next-directory/pull/1013#discussion_r248030473,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/1012,https://github.com/hyperledger/sawtooth-next-directory/pull/1012,Shouldn't these still come out as COMMITTED with just name changes?  The result of the test should not be different if it is just name changes.,1396fd4f01858fcf1f52fc6324e7e406880d184d,2019-01-17 22:34:42,248867429,"@@ -373,7 +373,7 @@ def test_03_confirm_update_manager_proposal(self):
                 user_id=self.key2a.public_key,
                 manager_id=self.key_manager.public_key,
             )[0][""status""],
-            ""COMMITTED"",
+            ""INVALID"",",32,2019-01-18 01:18:09,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248867429,https://github.com/hyperledger/sawtooth-next-directory/pull/1012#discussion_r248867429,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1012,https://github.com/hyperledger/sawtooth-next-directory/pull/1012,if it doesn't like 's' please change this to 'session',1396fd4f01858fcf1f52fc6324e7e406880d184d,2019-01-17 22:36:11,248867830,"@@ -86,9 +86,9 @@ def create_test_user(session):
 )
 def test_valid_auth_inputs(login_inputs, expected_result, expected_status_code):
     """""" Test authorization API endpoint with valid inputs """"""
-    with requests.Session() as s:
-        create_test_user(s)
-        response = s.post(
+    with requests.Session() as s_s:",,2019-01-18 01:18:09,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248867830,https://github.com/hyperledger/sawtooth-next-directory/pull/1012#discussion_r248867830,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1012,https://github.com/hyperledger/sawtooth-next-directory/pull/1012,Not sure what w_s is can we have this be what it is?  'write_stream' (If that is what it is supposed to be),1396fd4f01858fcf1f52fc6324e7e406880d184d,2019-01-17 22:38:27,248868351,"@@ -34,14 +34,14 @@
 
 @CHATBOT_BP.websocket(""api/chatbot"")
 @authorized()
-async def chatbot(request, ws):
+async def chatbot(request, w_s):",,2019-01-18 01:18:09,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248868351,https://github.com/hyperledger/sawtooth-next-directory/pull/1012#discussion_r248868351,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1012,https://github.com/hyperledger/sawtooth-next-directory/pull/1012,"ahhh I see. Sorry, I was just seeing why the build was failing, but now I see that these are all because the tests all came back as ""INVALID"" instead of ""COMMITTED"".",1396fd4f01858fcf1f52fc6324e7e406880d184d,2019-01-18 01:19:01,248899609,"@@ -373,7 +373,7 @@ def test_03_confirm_update_manager_proposal(self):
                 user_id=self.key2a.public_key,
                 manager_id=self.key_manager.public_key,
             )[0][""status""],
-            ""COMMITTED"",
+            ""INVALID"",",32,2019-01-18 01:19:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248899609,https://github.com/hyperledger/sawtooth-next-directory/pull/1012#discussion_r248899609,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/1012,https://github.com/hyperledger/sawtooth-next-directory/pull/1012,Updated to session!,1396fd4f01858fcf1f52fc6324e7e406880d184d,2019-01-18 01:20:04,248899780,"@@ -86,9 +86,9 @@ def create_test_user(session):
 )
 def test_valid_auth_inputs(login_inputs, expected_result, expected_status_code):
     """""" Test authorization API endpoint with valid inputs """"""
-    with requests.Session() as s:
-        create_test_user(s)
-        response = s.post(
+    with requests.Session() as s_s:",,2019-01-18 01:20:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248899780,https://github.com/hyperledger/sawtooth-next-directory/pull/1012#discussion_r248899780,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/1012,https://github.com/hyperledger/sawtooth-next-directory/pull/1012,Updated to write_stream!,1396fd4f01858fcf1f52fc6324e7e406880d184d,2019-01-18 01:20:20,248899820,"@@ -34,14 +34,14 @@
 
 @CHATBOT_BP.websocket(""api/chatbot"")
 @authorized()
-async def chatbot(request, ws):
+async def chatbot(request, w_s):",,2019-01-18 01:20:21,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/248899820,https://github.com/hyperledger/sawtooth-next-directory/pull/1012#discussion_r248899820,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/1012,https://github.com/hyperledger/sawtooth-next-directory/pull/1012,Need write_stream here as well,1396fd4f01858fcf1f52fc6324e7e406880d184d,2019-01-18 17:42:45,249128641,"@@ -34,17 +34,17 @@
 
 @FEED_BP.websocket(""api/feed"")
 @authorized()
-async def feed(request, ws):
+async def feed(request, w_s):",5,2019-01-18 17:44:21,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/249128641,https://github.com/hyperledger/sawtooth-next-directory/pull/1012#discussion_r249128641,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/1012,https://github.com/hyperledger/sawtooth-next-directory/pull/1012,Sweet.  Can you switch this back then?,1396fd4f01858fcf1f52fc6324e7e406880d184d,2019-01-18 17:44:16,249129107,"@@ -373,7 +373,7 @@ def test_03_confirm_update_manager_proposal(self):
                 user_id=self.key2a.public_key,
                 manager_id=self.key_manager.public_key,
             )[0][""status""],
-            ""COMMITTED"",
+            ""INVALID"",",32,2019-01-18 17:44:21,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/249129107,https://github.com/hyperledger/sawtooth-next-directory/pull/1012#discussion_r249129107,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/993,https://github.com/hyperledger/sawtooth-next-directory/pull/993,Looks like merge conflict was left here.,d1ee94320b623d0a8cf9915f7d9a0ee04281616f,2019-01-08 21:24:15,246156433,"@@ -16,7 +16,10 @@
 from sanic import Blueprint
 from sanic import response
 from rbac.server.api.auth import authorized
+<<<<<<< HEAD",,2019-01-08 21:32:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/246156433,https://github.com/hyperledger/sawtooth-next-directory/pull/993#discussion_r246156433,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/957,https://github.com/hyperledger/sawtooth-next-directory/pull/957,was it intentional to remove the `self.validate()` call here? ,dc964ece3ef610fb5c66731242140650b8df2373,2019-01-02 18:38:35,244815998,"@@ -255,7 +257,8 @@ def make(self, **kwargs):
         if hasattr(message, self._name_id) and getattr(message, self._name_id) == """":
             # sets the unique identifier field of the message to a unique_id if no identifier is provided
             setattr(message, self._name_id, self.unique_id())
-        self.validate(message=message)
+        if hasattr(message, ""created_date"") and not message.created_date > 0:",21,2019-01-02 19:24:36,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244815998,https://github.com/hyperledger/sawtooth-next-directory/pull/957#discussion_r244815998,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/957,https://github.com/hyperledger/sawtooth-next-directory/pull/957,"This is probably fine but probably misses edge cases around leap year/leap second/time zone/weird time things. If we feel like better precision is needed, I believe `dateutil` has a `relativedelta(years=+1)` kind of function. 
",dc964ece3ef610fb5c66731242140650b8df2373,2019-01-02 18:54:01,244820105,"@@ -101,47 +101,53 @@ def allow_signer_not_in_state(self):
         in state. (TODO: temporary, add provider keys to state)""""""
         return True
 
-    def validate_state(self, context, message, inputs, input_state, store, signer):
+    def validate_state(self, context, message, payload, input_state, store):
         """"""Validates the message against state""""""
         super().validate_state(
             context=context,
             message=message,
-            inputs=inputs,
+            payload=payload,
             input_state=input_state,
             store=store,
-            signer=signer,
         )
         if addresser.role.exists_in_state_inputs(
-            inputs=inputs, input_state=input_state, object_id=message.role_id
+            inputs=payload.inputs, input_state=input_state, object_id=message.role_id
         ):
             LOGGER.warning(
                 # import is replayable, we'll verify information is up-to-date instead
                 ""Role with id %s already exists in state"",
                 message.role_id,
             )
 
-    def apply_update(
-        self, message, object_id, related_id, outputs, output_state, signer
-    ):
+    def apply_update(self, message, payload, object_id, related_id, output_state):
         """"""Create admin, owner and member addresses""""""
+        # set membership expiration on the 1 year anniversary of the role creation date
+        expiration_date = int(
+            payload.now",33,2019-01-02 19:24:36,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244820105,https://github.com/hyperledger/sawtooth-next-directory/pull/957#discussion_r244820105,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/957,https://github.com/hyperledger/sawtooth-next-directory/pull/957,"trailing space, remove if you make other edits. ",dc964ece3ef610fb5c66731242140650b8df2373,2019-01-02 19:12:50,244825137,"@@ -26,6 +26,6 @@ message UpdateProposal {
 
     string reason = 4;
 
-    repeated string on_behalf_of = 5;
+    repeated string on_behalf_of = 5; ",5,2019-01-02 19:24:36,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244825137,https://github.com/hyperledger/sawtooth-next-directory/pull/957#discussion_r244825137,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/957,https://github.com/hyperledger/sawtooth-next-directory/pull/957,is this going to change up the data going to the UI? ,dc964ece3ef610fb5c66731242140650b8df2373,2019-01-02 19:18:27,244826696,"@@ -73,8 +76,7 @@ def _update_state(database, block_num, address, resource):
             ""related_id"": related_id,
             ""block_created"": int(block_num),
             ""block_num"": int(block_num),
-            ""created_at"": now,
-            ""updated_at"": now,
+            ""updated_date"": now,",34,2019-01-02 19:24:36,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244826696,https://github.com/hyperledger/sawtooth-next-directory/pull/957#discussion_r244826696,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/957,https://github.com/hyperledger/sawtooth-next-directory/pull/957,"Yes, it's being called by make payload, thus this was verifying in duplicate.",dc964ece3ef610fb5c66731242140650b8df2373,2019-01-02 19:25:54,244828717,"@@ -255,7 +257,8 @@ def make(self, **kwargs):
         if hasattr(message, self._name_id) and getattr(message, self._name_id) == """":
             # sets the unique identifier field of the message to a unique_id if no identifier is provided
             setattr(message, self._name_id, self.unique_id())
-        self.validate(message=message)
+        if hasattr(message, ""created_date"") and not message.created_date > 0:",21,2019-01-02 19:25:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244828717,https://github.com/hyperledger/sawtooth-next-directory/pull/957#discussion_r244828717,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/957,https://github.com/hyperledger/sawtooth-next-directory/pull/957,"Yes, it just approximates a year. It's temporary code until we add configuration values.",dc964ece3ef610fb5c66731242140650b8df2373,2019-01-02 19:26:41,244828932,"@@ -101,47 +101,53 @@ def allow_signer_not_in_state(self):
         in state. (TODO: temporary, add provider keys to state)""""""
         return True
 
-    def validate_state(self, context, message, inputs, input_state, store, signer):
+    def validate_state(self, context, message, payload, input_state, store):
         """"""Validates the message against state""""""
         super().validate_state(
             context=context,
             message=message,
-            inputs=inputs,
+            payload=payload,
             input_state=input_state,
             store=store,
-            signer=signer,
         )
         if addresser.role.exists_in_state_inputs(
-            inputs=inputs, input_state=input_state, object_id=message.role_id
+            inputs=payload.inputs, input_state=input_state, object_id=message.role_id
         ):
             LOGGER.warning(
                 # import is replayable, we'll verify information is up-to-date instead
                 ""Role with id %s already exists in state"",
                 message.role_id,
             )
 
-    def apply_update(
-        self, message, object_id, related_id, outputs, output_state, signer
-    ):
+    def apply_update(self, message, payload, object_id, related_id, output_state):
         """"""Create admin, owner and member addresses""""""
+        # set membership expiration on the 1 year anniversary of the role creation date
+        expiration_date = int(
+            payload.now",33,2019-01-02 19:26:42,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244828932,https://github.com/hyperledger/sawtooth-next-directory/pull/957#discussion_r244828932,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/957,https://github.com/hyperledger/sawtooth-next-directory/pull/957,Yes; I don't believe the UI was using those values yet.,dc964ece3ef610fb5c66731242140650b8df2373,2019-01-02 19:27:42,244829194,"@@ -73,8 +76,7 @@ def _update_state(database, block_num, address, resource):
             ""related_id"": related_id,
             ""block_created"": int(block_num),
             ""block_num"": int(block_num),
-            ""created_at"": now,
-            ""updated_at"": now,
+            ""updated_date"": now,",34,2019-01-02 19:27:42,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244829194,https://github.com/hyperledger/sawtooth-next-directory/pull/957#discussion_r244829194,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/957,https://github.com/hyperledger/sawtooth-next-directory/pull/957,"proto is changing again soon, will fix then",dc964ece3ef610fb5c66731242140650b8df2373,2019-01-02 19:28:13,244829343,"@@ -26,6 +26,6 @@ message UpdateProposal {
 
     string reason = 4;
 
-    repeated string on_behalf_of = 5;
+    repeated string on_behalf_of = 5; ",5,2019-01-02 19:28:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244829343,https://github.com/hyperledger/sawtooth-next-directory/pull/957#discussion_r244829343,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/942,https://github.com/hyperledger/sawtooth-next-directory/pull/942,This needs a unit test. ,b1e3f4fef6f547243c998811a8acdb8f85d4fc1b,2019-01-02 06:22:00,244667327,"@@ -124,6 +125,13 @@ def apply_update(
         self, message, object_id, related_id, outputs, output_state, signer
     ):
         """"""Create admin, owner and member addresses""""""
+        # set membership expiration on the 1 year anniversary of the role creation date
+        epoch_time = int(time.time())
+        expiration_date = int(",14,2019-01-02 06:34:16,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244667327,https://github.com/hyperledger/sawtooth-next-directory/pull/942#discussion_r244667327,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/933,https://github.com/hyperledger/sawtooth-next-directory/pull/933,would it make more sense to pass these types into the __init__ method? It seems like a lot of ceremony for each message. ,30faac9ade89af9bb5600a6efa776c4fa1ebd696,2018-12-28 20:36:09,244403021,"@@ -0,0 +1,118 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+"""""" Registers a new public key for a user
+    usage: rbac.key.add()
+""""""
+import logging
+
+from rbac.common import addresser
+from rbac.common.base.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class AddKey(BaseMessage):
+    """""" Implements the ADD_KEY message
+    """"""
+
+    def __init__(self):
+        super().__init__()
+        self._register()
+
+    @property
+    def message_action_type(self):",35,2018-12-28 20:46:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244403021,https://github.com/hyperledger/sawtooth-next-directory/pull/933#discussion_r244403021,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/933,https://github.com/hyperledger/sawtooth-next-directory/pull/933,just changing these names to what we want (identifier vs pk) really helps understanding. thanks!,30faac9ade89af9bb5600a6efa776c4fa1ebd696,2018-12-28 20:39:37,244403612,"@@ -49,21 +49,21 @@ def message_relationship_type(self):
         """"""The relationship type this message acts upon""""""
         return addresser.RelationshipType.OWNER
 
-    def make_addresses(self, message, signer_keypair):
+    def make_addresses(self, message, signer_user_id):
         """"""Makes the appropriate inputs & output addresses for the message""""""
-        inputs, outputs = super().make_addresses(message, signer_keypair)
+        inputs, outputs = super().make_addresses(message, signer_user_id)
 
         user_address = addresser.user.address(message.related_id)
         inputs.add(user_address)
 
         # should be owner not admin
         signer_admin_address = addresser.task.admin.address(
-            message.object_id, signer_keypair.public_key
+            message.object_id, signer_user_id
         )
         inputs.add(signer_admin_address)
 
         signer_owner_address = addresser.task.owner.address(
-            message.object_id, signer_keypair.public_key
+            message.object_id, signer_user_id",22,2018-12-28 20:46:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244403612,https://github.com/hyperledger/sawtooth-next-directory/pull/933#discussion_r244403612,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/933,https://github.com/hyperledger/sawtooth-next-directory/pull/933,assuming this and the `ProposeRemoveTaskOwner` messages you removed had never been implemented? ,30faac9ade89af9bb5600a6efa776c4fa1ebd696,2018-12-28 20:40:24,244403729,"@@ -62,21 +47,6 @@ message ProposeAddTaskAdmin {
 }
 
 
-message ProposeRemoveTaskAdmin {",26,2018-12-28 20:46:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244403729,https://github.com/hyperledger/sawtooth-next-directory/pull/933#discussion_r244403729,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/933,https://github.com/hyperledger/sawtooth-next-directory/pull/933,"yes, never implemented",30faac9ade89af9bb5600a6efa776c4fa1ebd696,2018-12-28 20:58:55,244406652,"@@ -62,21 +47,6 @@ message ProposeAddTaskAdmin {
 }
 
 
-message ProposeRemoveTaskAdmin {",26,2018-12-28 20:58:55,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244406652,https://github.com/hyperledger/sawtooth-next-directory/pull/933#discussion_r244406652,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/933,https://github.com/hyperledger/sawtooth-next-directory/pull/933,"Yes, that could work as well. Explicit properties let's us mark them as being required to be implemented in the abstract/base class, and we have intermediate base classes, so this pattern seemed to work better.",30faac9ade89af9bb5600a6efa776c4fa1ebd696,2018-12-28 21:00:31,244406932,"@@ -0,0 +1,118 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+"""""" Registers a new public key for a user
+    usage: rbac.key.add()
+""""""
+import logging
+
+from rbac.common import addresser
+from rbac.common.base.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class AddKey(BaseMessage):
+    """""" Implements the ADD_KEY message
+    """"""
+
+    def __init__(self):
+        super().__init__()
+        self._register()
+
+    @property
+    def message_action_type(self):",35,2018-12-28 21:00:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244406932,https://github.com/hyperledger/sawtooth-next-directory/pull/933#discussion_r244406932,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/924,https://github.com/hyperledger/sawtooth-next-directory/pull/924,magic numbers.. what do these codes mean?,528db05a68f4469cac06df50fcd6820eb69c953a,2018-12-27 23:31:05,244240520,"@@ -38,9 +47,28 @@ export function * closeSocket () {
 }
 
 
+export function * reconnect () {
+  if (incrementSocketAttempt() === -1)
+    yield put(AppActions.socketMaxAttemptsReached());
+  yield call(delay, SOCKET_RECONNECT_TIMEOUT);
+  yield call(openSocket);
+}
+
+
 const createChannel = (socket) =>
   eventChannel(emit => {
-    socket.onerror = (event) => emit(AppActions.socketError(event));
+    socket.onerror = (event) => {
+      if (event && event.code === 'ECONNREFUSED') {
+        emit(AppActions.socketError(event));
+        emit(new Error(event.reason));
+      }
+    };
+    socket.onclose = (event) => {
+      if (event.code !== 1e3 && event.code !== 1005) {",,2018-12-28 00:26:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244240520,https://github.com/hyperledger/sawtooth-next-directory/pull/924#discussion_r244240520,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/924,https://github.com/hyperledger/sawtooth-next-directory/pull/924,🦊Fixed.,528db05a68f4469cac06df50fcd6820eb69c953a,2018-12-28 00:27:55,244244706,"@@ -38,9 +47,28 @@ export function * closeSocket () {
 }
 
 
+export function * reconnect () {
+  if (incrementSocketAttempt() === -1)
+    yield put(AppActions.socketMaxAttemptsReached());
+  yield call(delay, SOCKET_RECONNECT_TIMEOUT);
+  yield call(openSocket);
+}
+
+
 const createChannel = (socket) =>
   eventChannel(emit => {
-    socket.onerror = (event) => emit(AppActions.socketError(event));
+    socket.onerror = (event) => {
+      if (event && event.code === 'ECONNREFUSED') {
+        emit(AppActions.socketError(event));
+        emit(new Error(event.reason));
+      }
+    };
+    socket.onclose = (event) => {
+      if (event.code !== 1e3 && event.code !== 1005) {",,2018-12-28 00:27:55,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/244244706,https://github.com/hyperledger/sawtooth-next-directory/pull/924#discussion_r244244706,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/883,https://github.com/hyperledger/sawtooth-next-directory/pull/883,is this going to break ui? ,8751a34c476780a95ac524f4c3632ccfaec6e13f,2018-12-21 03:36:59,243481208,"@@ -114,24 +112,7 @@
 @ROLES_BP.delete(""api/roles/<role_id>/admins"")
 @authorized()
 async def delete_role_admin(request, role_id):
-    required_fields = [""id""]
-    utils.validate_fields(required_fields, request.json)
-
-    txn_key = await utils.get_transactor_key(request)
-    proposal_id = str(uuid4())
-    batch_list, _ = role_transaction_creation.propose_remove_role_admins(
-        txn_key=txn_key,
-        batch_key=request.app.config.BATCHER_KEY_PAIR,
-        proposal_id=proposal_id,
-        role_id=role_id,
-        user_id=request.json.get(""id""),
-        reason=request.json.get(""reason""),
-        metadata=request.json.get(""metadata""),
-    )
-    await utils.send(
-        request.app.config.VAL_CONN, batch_list, request.app.config.TIMEOUT
-    )
-    return json({""proposal_id"": proposal_id})
+    raise ApiNotImplemented()",77,2018-12-21 03:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243481208,https://github.com/hyperledger/sawtooth-next-directory/pull/883#discussion_r243481208,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/883,https://github.com/hyperledger/sawtooth-next-directory/pull/883,same here. demo doesn't depend on these functioning?,8751a34c476780a95ac524f4c3632ccfaec6e13f,2018-12-21 03:38:28,243481361,"@@ -159,24 +139,7 @@
 @ROLES_BP.delete(""api/roles/<role_id>/members"")
 @authorized()
 async def delete_role_member(request, role_id):
-    required_fields = [""id""]
-    utils.validate_fields(required_fields, request.json)
-
-    txn_key = await utils.get_transactor_key(request)
-    proposal_id = str(uuid4())
-    batch_list, _ = role_transaction_creation.propose_remove_role_members(
-        txn_key=txn_key,
-        batch_key=request.app.config.BATCHER_KEY_PAIR,
-        proposal_id=proposal_id,
-        role_id=role_id,
-        user_id=request.json.get(""id""),
-        reason=request.json.get(""reason""),
-        metadata=request.json.get(""metadata""),
-    )
-    await utils.send(
-        request.app.config.VAL_CONN, batch_list, request.app.config.TIMEOUT
-    )
-    return json({""proposal_id"": proposal_id})
+    raise ApiNotImplemented()",115,2018-12-21 03:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243481361,https://github.com/hyperledger/sawtooth-next-directory/pull/883#discussion_r243481361,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/883,https://github.com/hyperledger/sawtooth-next-directory/pull/883,"Removes the ""removal proposal"" transactions that
are deprecated and were never completed. Removals
do not require a proposal, are immediate, and will be
re-implemented with new endpoints.",8751a34c476780a95ac524f4c3632ccfaec6e13f,2018-12-21 03:56:23,243483001,"@@ -114,24 +112,7 @@
 @ROLES_BP.delete(""api/roles/<role_id>/admins"")
 @authorized()
 async def delete_role_admin(request, role_id):
-    required_fields = [""id""]
-    utils.validate_fields(required_fields, request.json)
-
-    txn_key = await utils.get_transactor_key(request)
-    proposal_id = str(uuid4())
-    batch_list, _ = role_transaction_creation.propose_remove_role_admins(
-        txn_key=txn_key,
-        batch_key=request.app.config.BATCHER_KEY_PAIR,
-        proposal_id=proposal_id,
-        role_id=role_id,
-        user_id=request.json.get(""id""),
-        reason=request.json.get(""reason""),
-        metadata=request.json.get(""metadata""),
-    )
-    await utils.send(
-        request.app.config.VAL_CONN, batch_list, request.app.config.TIMEOUT
-    )
-    return json({""proposal_id"": proposal_id})
+    raise ApiNotImplemented()",77,2018-12-21 03:56:24,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243483001,https://github.com/hyperledger/sawtooth-next-directory/pull/883#discussion_r243483001,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/883,https://github.com/hyperledger/sawtooth-next-directory/pull/883,"Removes the ""removal proposal"" transactions that
are deprecated and were never completed. Removals
do not require a proposal, are immediate, and will be
re-implemented with new endpoints.",8751a34c476780a95ac524f4c3632ccfaec6e13f,2018-12-21 03:56:29,243483008,"@@ -159,24 +139,7 @@
 @ROLES_BP.delete(""api/roles/<role_id>/members"")
 @authorized()
 async def delete_role_member(request, role_id):
-    required_fields = [""id""]
-    utils.validate_fields(required_fields, request.json)
-
-    txn_key = await utils.get_transactor_key(request)
-    proposal_id = str(uuid4())
-    batch_list, _ = role_transaction_creation.propose_remove_role_members(
-        txn_key=txn_key,
-        batch_key=request.app.config.BATCHER_KEY_PAIR,
-        proposal_id=proposal_id,
-        role_id=role_id,
-        user_id=request.json.get(""id""),
-        reason=request.json.get(""reason""),
-        metadata=request.json.get(""metadata""),
-    )
-    await utils.send(
-        request.app.config.VAL_CONN, batch_list, request.app.config.TIMEOUT
-    )
-    return json({""proposal_id"": proposal_id})
+    raise ApiNotImplemented()",115,2018-12-21 03:56:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243483008,https://github.com/hyperledger/sawtooth-next-directory/pull/883#discussion_r243483008,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/883,https://github.com/hyperledger/sawtooth-next-directory/pull/883,"discussed offline, doesn't affect demo. ",8751a34c476780a95ac524f4c3632ccfaec6e13f,2018-12-21 04:39:53,243486605,"@@ -159,24 +139,7 @@
 @ROLES_BP.delete(""api/roles/<role_id>/members"")
 @authorized()
 async def delete_role_member(request, role_id):
-    required_fields = [""id""]
-    utils.validate_fields(required_fields, request.json)
-
-    txn_key = await utils.get_transactor_key(request)
-    proposal_id = str(uuid4())
-    batch_list, _ = role_transaction_creation.propose_remove_role_members(
-        txn_key=txn_key,
-        batch_key=request.app.config.BATCHER_KEY_PAIR,
-        proposal_id=proposal_id,
-        role_id=role_id,
-        user_id=request.json.get(""id""),
-        reason=request.json.get(""reason""),
-        metadata=request.json.get(""metadata""),
-    )
-    await utils.send(
-        request.app.config.VAL_CONN, batch_list, request.app.config.TIMEOUT
-    )
-    return json({""proposal_id"": proposal_id})
+    raise ApiNotImplemented()",115,2018-12-21 04:39:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243486605,https://github.com/hyperledger/sawtooth-next-directory/pull/883#discussion_r243486605,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,can you either leave hex equiv or remove this comment about chosen for readability? ,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 01:31:38,243132267,"@@ -25,15 +25,14 @@ class ObjectType(enum.Enum):
     Chosen enum values for address readability in hex",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243132267,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243132267,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,is there a reason we're removing these checks? did they move up the stack a bit? ,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 03:13:02,243145506,"@@ -52,38 +51,33 @@ def message_relationship_type(self):
 
     def make_addresses(self, message, signer_keypair):
         """"""Makes the appropriate inputs & output addresses for the message""""""
-        if not isinstance(message, self.message_proto):
-            raise TypeError(""Expected message to be {}"".format(self.message_proto))
-        if not isinstance(signer_keypair, Key):
-            raise TypeError(""Expected signer_keypair to be provided"")",15,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243145506,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243145506,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,What is going on here? These values are quite different than their predecessors. How does the addition of keys and email lead to this?,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 03:22:19,243146509,"@@ -25,15 +25,14 @@ class ObjectType(enum.Enum):
     Chosen enum values for address readability in hex
     """"""
 
-    NONE = 0  # 0000
-    SELF = 4369  # 1111
-    SYSADMIN = 8738  # 2222
-    USER = 13107  # 3333
-    PROPOSAL = 17476  # 4444
-    ROLE = 21845  # 5555
-    TASK = 26214  # 6666
-    EMAIL = 30583  # 7777
-    KEY = 34952  # 8888
+    NONE = 0",22,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243146509,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243146509,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,We have pylint in place to enforce some degree of code quality. The coming migration to Flake8 will come with additional quality checks. We should not be disabling them.,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 03:28:01,243147169,"@@ -18,10 +18,13 @@
 From the object_type name, it is able to infer information about how
 the object is stored on the blockchain: the state and container protubufs,
 and the unique identifier name""""""
+# pylint: disable=too-many-public-methods",4,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243147169,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243147169,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,Three more pylint ignores. ,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 03:29:39,243147393,"@@ -262,12 +263,37 @@ def _find_in_state_container(self, container, address, object_id, related_id=Non
         )
         return None
 
-    def deserialize(self, address, data):  # pylint: disable=unused-argument
+    def deserialize(self, address, data):
         """"""Deserialize the data of a blockchain address""""""
         # pylint: disable=not-callable
-        container = self._state_container()
-        container.ParseFromString(data)
-        return container
+        try:
+            container = self._state_container()
+            container.ParseFromString(data)
+            return container
+        except Exception:  # pylint: disable=broad-except",65,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243147393,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243147393,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"Would it be cleaner if we combined these two into something like:

`inputs.update({address.user.address(u) for u in set([*message.admins, *message.owners]))`?
",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 03:35:36,243148035,"@@ -76,29 +76,27 @@ def message_fields_not_in_state(self):
 
     def make_addresses(self, message, signer_keypair):
         """"""Makes the appropriate inputs & output addresses for the message type""""""
-        if not isinstance(message, self.message_proto):
-            raise TypeError(""Expected message to be {}"".format(self.message_proto))
-
-        inputs = [
-            # addresser.sysadmin.member.address(signer_public_key),
-            addresser.role.address(message.role_id)
-        ]
-        inputs.extend([addresser.user.address(u) for u in message.admins])
-        inputs.extend(
-            [
+        inputs, _ = super().make_addresses(message, signer_keypair)
+
+        role_address = addresser.role.address(message.role_id)
+        inputs.add(role_address)
+
+        inputs.update({addresser.user.address(u) for u in message.admins})",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243148035,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243148035,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"The ignored pylint warning here is indicating too much conditional logic. If you assign key/key.name, then all that follows is duplicate code that could go into its own function. ",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 03:40:28,243148554,"@@ -264,27 +265,41 @@ def dict_to_protobuf(message, message_name, dictionary):
 def message_to_message(
     message_to, message_from, message_name=None, exclude_fields=None
 ):
-    """"""Makes a message from another message
+    """"""Makes a message from another message or dictionary
     Shallow copy; supports primitive data types and lists (arrays)
     Add depth and/or additional datatypes when needed (TODO: add json support)""""""
     if not message_name:
         message_name = type(message_to)
-    for key, value in message_from.ListFields():
-        if hasattr(message_to, key.name) and key.name not in exclude_fields:
-            try:
-                if isinstance(value, list):
-                    getattr(message_to, key.name).extend(value)
-                else:
-                    setattr(message_to, key.name, value)
-            except Exception:
-                raise AttributeError(
-                    ""Unable to set attribute {} on {} to value {}"".format(
-                        key.name, message_name, value
+    if not exclude_fields:
+        exclude_fields = []
+    if isinstance(message_from, dict):
+        for key, value in message_from.items():
+            if hasattr(message_to, key) and key not in exclude_fields:",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243148554,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243148554,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"Same-ish idea here. If there's a general:

```python3
inputs.update([*admin_addresses, *owner_addresses, *member_addresses])
```

Ideally, abstract this one more time (I'm seeing this code duplicated a couple places) into a helper that, given a role_id: 

```
def unique_role _inputs(roleId):
  return set([
    *{addresser.role.admin.address(message.role_id, a) for a in message.admins},
    *{addresser.role.owner.address(message.role_id, o) for o in message.owners},
    *{addresser.role.member.address(message.role_id, o) for o in message.members}])
```

And taking it one level further, if we can pass around `addresser.role` and a role_id, we should be able to make it even more generic: 

```
def unique_entity_inputs(entity_addresser, entity_id):
  return set([
    *{entity_addresser.admin.address(entity_id, a) for a in message.admins},
    *{entity_addresser.owner.address(entity_id, o) for o in message.owners},
    *{entity_addresser.member.address(entity_id, o) for o in message.members}])
```

then we could call it with something like: 

```
inputs.update(unique_entity_inputs(addresser.role, message.role_id))
```

I'm only immediately seeing this block 2x, which is sort of my gray area of copy-paste vs encapsulate. if we have another instance, let's make a helper. ",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 03:49:48,243149512,"@@ -76,29 +76,27 @@ def message_fields_not_in_state(self):
 
     def make_addresses(self, message, signer_keypair):
         """"""Makes the appropriate inputs & output addresses for the message type""""""
-        if not isinstance(message, self.message_proto):
-            raise TypeError(""Expected message to be {}"".format(self.message_proto))
-
-        inputs = [
-            # addresser.sysadmin.member.address(signer_public_key),
-            addresser.role.address(message.role_id)
-        ]
-        inputs.extend([addresser.user.address(u) for u in message.admins])
-        inputs.extend(
-            [
+        inputs, _ = super().make_addresses(message, signer_keypair)
+
+        role_address = addresser.role.address(message.role_id)
+        inputs.add(role_address)
+
+        inputs.update({addresser.user.address(u) for u in message.admins})
+        inputs.update(
+            {
                 addresser.user.address(u)
                 for u in message.owners
                 if u not in message.admins
-            ]
+            }
         )
-        inputs.extend(
-            [addresser.role.admin.address(message.role_id, a) for a in message.admins]
+        inputs.update(
+            {addresser.role.admin.address(message.role_id, a) for a in message.admins}
         )
-        inputs.extend(
-            [addresser.role.owner.address(message.role_id, o) for o in message.owners]
+        inputs.update(
+            {addresser.role.owner.address(message.role_id, o) for o in message.owners}
         )
-        inputs.extend(
-            [addresser.role.member.address(message.role_id, o) for o in message.members]
+        inputs.update(
+            {addresser.role.member.address(message.role_id, o) for o in message.members}",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243149512,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243149512,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"This is only compounding the problem we discussed earlier of having a static function nested deeply into an object hierarchy. We will need to extract it. Since I have already done the majority of work to that end, will have a PR soon.",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 04:07:11,243151262,"@@ -78,18 +78,16 @@ def test_address_random(self):
             addresser.address_is(rel_address2), addresser.AddressSpace.TASKS_OWNERS
         )
 
-    def test_address_static(self):
-        """"""Tests address makes the expected output given a specific input""""""
-        task_id = ""99968acb8f1a48b3a4bc21e2cd252e67""
-        user_id = ""966ab67317234df489adb4bc1f517b88""
-        expected_address = (
-            ""bac00100006666326a1713a905b26359fc8da23333cce7570f3f6f7d2c1635f6deea00""
-        )
-        rel_address = addresser.task.owner.address(
-            object_id=task_id, related_id=user_id
-        )
-        self.assertIsAddress(rel_address)
-        self.assertEqual(rel_address, expected_address)
-        self.assertEqual(
-            addresser.address_is(rel_address), addresser.AddressSpace.TASKS_OWNERS
-        )
+    def test_addresser_parse(self):
+        """"""Test addresser.parse returns a parsed address""""""
+        task_id = addresser.task.unique_id()",50,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243151262,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243151262,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,what's the logic behind including these and disabling the pylint check? are there side effects you need from import? ,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 18:27:05,243372965,"@@ -13,9 +13,13 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 """"""Addresses and accesses task objects on the blockchain""""""
+# pylint: disable=unused-import
+
 from rbac.common import addresser
 from rbac.common.base.base_address import AddressBase
 from rbac.common.base.base_relationship import BaseRelationship
+from rbac.common.protobuf import task_state_pb2",9,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243372965,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243372965,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"This is probably too much to address here, but how much do we have to support legacy on this? I assume there's a reason we can't throw it away yet. ",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 18:32:11,243374339,"@@ -158,30 +129,38 @@ def _update_state(database, block_num, address, resource):
 
 
 def _update_legacy(database, block_num, address, resource):
-    data_type = addresser.address_is(address)
     try:
-        data = {
-            ""id"": address,
-            ""start_block_num"": int(block_num),
-            ""end_block_num"": int(sys.maxsize),
-            **resource,
-        }
-
-        table_query = database.get_table(TABLE_NAMES[data_type])
-        query = table_query.get(address).replace(
-            lambda doc: r.branch(
-                # pylint: disable=singleton-comparison
-                (doc == None),  # noqa
-                r.expr(data),
-                doc.merge(resource),
+        data_type = addresser.address_is(address)",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243374339,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243374339,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"Renumbered address enumerations for easier filtering
in ad hoc rethinkdb queries.",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 18:33:34,243374711,"@@ -25,15 +25,14 @@ class ObjectType(enum.Enum):
     Chosen enum values for address readability in hex
     """"""
 
-    NONE = 0  # 0000
-    SELF = 4369  # 1111
-    SYSADMIN = 8738  # 2222
-    USER = 13107  # 3333
-    PROPOSAL = 17476  # 4444
-    ROLE = 21845  # 5555
-    TASK = 26214  # 6666
-    EMAIL = 30583  # 7777
-    KEY = 34952  # 8888
+    NONE = 0",22,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243374711,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243374711,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,minor style quibble -- can you put a line or two between the setup methods and the line that actually executes the test? It helps in reading as a Given/When/Then format,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 18:35:09,243375138,"@@ -78,18 +78,16 @@ def test_address_random(self):
             addresser.address_is(rel_address2), addresser.AddressSpace.ROLES_ADMINS
         )
 
-    def test_address_static(self):
-        """"""Tests address makes the expected output given a specific input""""""
-        role_id = ""99968acb8f1a48b3a4bc21e2cd252e67""
-        user_id = ""966ab67317234df489adb4bc1f517b88""
-        expected_address = (
-            ""bac00100005555326a1713a905b26359fc8da23333eee7570f3f6f7d2c1635f6deea00""
-        )
-        rel_address = addresser.role.admin.address(
-            object_id=role_id, related_id=user_id
-        )
-        self.assertIsAddress(rel_address)
-        self.assertEqual(rel_address, expected_address)
-        self.assertEqual(
-            addresser.address_is(rel_address), addresser.AddressSpace.ROLES_ADMINS
-        )
+    def test_addresser_parse(self):
+        """"""Test addresser.parse returns a parsed address""""""
+        role_id = addresser.role.unique_id()
+        user_id = addresser.user.unique_id()
+        rel_address = addresser.role.admin.address(role_id, user_id)
+        parsed = addresser.parse(rel_address)",54,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243375138,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243375138,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,Am I seeing things or is this test repeated across several files? Can we extract it or make most of it generic so the tests don't get out of phase? ,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 18:37:12,243375689,"@@ -79,18 +79,16 @@ def test_address_random(self):
             addresser.address_is(rel_address2), addresser.AddressSpace.ROLES_OWNERS
         )
 
-    def test_address_static(self):
-        """"""Tests address makes the expected output given a specific input""""""
-        role_id = ""99968acb8f1a48b3a4bc21e2cd252e67""
-        user_id = ""966ab67317234df489adb4bc1f517b88""
-        expected_address = (
-            ""bac00100005555326a1713a905b26359fc8da23333cce7570f3f6f7d2c1635f6deea00""
-        )
-        rel_address = addresser.role.owner.address(
-            object_id=role_id, related_id=user_id
-        )
-        self.assertIsAddress(rel_address)
-        self.assertEqual(rel_address, expected_address)
-        self.assertEqual(
-            addresser.address_is(rel_address), addresser.AddressSpace.ROLES_OWNERS
-        )
+    def test_addresser_parse(self):",48,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243375689,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243375689,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"Most the methods here can be private, but probably not worth doing an inventory now.",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 18:37:16,243375700,"@@ -18,10 +18,13 @@
 From the object_type name, it is able to infer information about how
 the object is stored on the blockchain: the state and container protubufs,
 and the unique identifier name""""""
+# pylint: disable=too-many-public-methods",4,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243375700,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243375700,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"We can't allow any unknown payload to raise an unhandled exception and crash the container.
no-member is caused by google protobufs",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 18:38:08,243375969,"@@ -262,12 +263,37 @@ def _find_in_state_container(self, container, address, object_id, related_id=Non
         )
         return None
 
-    def deserialize(self, address, data):  # pylint: disable=unused-argument
+    def deserialize(self, address, data):
         """"""Deserialize the data of a blockchain address""""""
         # pylint: disable=not-callable
-        container = self._state_container()
-        container.ParseFromString(data)
-        return container
+        try:
+            container = self._state_container()
+            container.ParseFromString(data)
+            return container
+        except Exception:  # pylint: disable=broad-except",65,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243375969,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243375969,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"The base class discovers the protobufs using the name of the object_type. However, they still must be loaded.",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 18:43:15,243377474,"@@ -13,9 +13,13 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 """"""Addresses and accesses task objects on the blockchain""""""
+# pylint: disable=unused-import
+
 from rbac.common import addresser
 from rbac.common.base.base_address import AddressBase
 from rbac.common.base.base_relationship import BaseRelationship
+from rbac.common.protobuf import task_state_pb2",9,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243377474,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243377474,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,They are in super,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 20:53:38,243414184,"@@ -52,38 +51,33 @@ def message_relationship_type(self):
 
     def make_addresses(self, message, signer_keypair):
         """"""Makes the appropriate inputs & output addresses for the message""""""
-        if not isinstance(message, self.message_proto):
-            raise TypeError(""Expected message to be {}"".format(self.message_proto))
-        if not isinstance(signer_keypair, Key):
-            raise TypeError(""Expected signer_keypair to be provided"")",15,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243414184,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243414184,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,resolved,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 21:44:49,243427432,"@@ -78,18 +78,16 @@ def test_address_random(self):
             addresser.address_is(rel_address2), addresser.AddressSpace.ROLES_ADMINS
         )
 
-    def test_address_static(self):
-        """"""Tests address makes the expected output given a specific input""""""
-        role_id = ""99968acb8f1a48b3a4bc21e2cd252e67""
-        user_id = ""966ab67317234df489adb4bc1f517b88""
-        expected_address = (
-            ""bac00100005555326a1713a905b26359fc8da23333eee7570f3f6f7d2c1635f6deea00""
-        )
-        rel_address = addresser.role.admin.address(
-            object_id=role_id, related_id=user_id
-        )
-        self.assertIsAddress(rel_address)
-        self.assertEqual(rel_address, expected_address)
-        self.assertEqual(
-            addresser.address_is(rel_address), addresser.AddressSpace.ROLES_ADMINS
-        )
+    def test_addresser_parse(self):
+        """"""Test addresser.parse returns a parsed address""""""
+        role_id = addresser.role.unique_id()
+        user_id = addresser.user.unique_id()
+        rel_address = addresser.role.admin.address(role_id, user_id)
+        parsed = addresser.parse(rel_address)",54,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243427432,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243427432,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,resolved,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 21:45:34,243427618,"@@ -76,29 +76,27 @@ def message_fields_not_in_state(self):
 
     def make_addresses(self, message, signer_keypair):
         """"""Makes the appropriate inputs & output addresses for the message type""""""
-        if not isinstance(message, self.message_proto):
-            raise TypeError(""Expected message to be {}"".format(self.message_proto))
-
-        inputs = [
-            # addresser.sysadmin.member.address(signer_public_key),
-            addresser.role.address(message.role_id)
-        ]
-        inputs.extend([addresser.user.address(u) for u in message.admins])
-        inputs.extend(
-            [
+        inputs, _ = super().make_addresses(message, signer_keypair)
+
+        role_address = addresser.role.address(message.role_id)
+        inputs.add(role_address)
+
+        inputs.update({addresser.user.address(u) for u in message.admins})
+        inputs.update(
+            {
                 addresser.user.address(u)
                 for u in message.owners
                 if u not in message.admins
-            ]
+            }
         )
-        inputs.extend(
-            [addresser.role.admin.address(message.role_id, a) for a in message.admins]
+        inputs.update(
+            {addresser.role.admin.address(message.role_id, a) for a in message.admins}
         )
-        inputs.extend(
-            [addresser.role.owner.address(message.role_id, o) for o in message.owners]
+        inputs.update(
+            {addresser.role.owner.address(message.role_id, o) for o in message.owners}
         )
-        inputs.extend(
-            [addresser.role.member.address(message.role_id, o) for o in message.members]
+        inputs.update(
+            {addresser.role.member.address(message.role_id, o) for o in message.members}",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243427618,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243427618,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,resolved,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 21:56:13,243430178,"@@ -264,27 +265,41 @@ def dict_to_protobuf(message, message_name, dictionary):
 def message_to_message(
     message_to, message_from, message_name=None, exclude_fields=None
 ):
-    """"""Makes a message from another message
+    """"""Makes a message from another message or dictionary
     Shallow copy; supports primitive data types and lists (arrays)
     Add depth and/or additional datatypes when needed (TODO: add json support)""""""
     if not message_name:
         message_name = type(message_to)
-    for key, value in message_from.ListFields():
-        if hasattr(message_to, key.name) and key.name not in exclude_fields:
-            try:
-                if isinstance(value, list):
-                    getattr(message_to, key.name).extend(value)
-                else:
-                    setattr(message_to, key.name, value)
-            except Exception:
-                raise AttributeError(
-                    ""Unable to set attribute {} on {} to value {}"".format(
-                        key.name, message_name, value
+    if not exclude_fields:
+        exclude_fields = []
+    if isinstance(message_from, dict):
+        for key, value in message_from.items():
+            if hasattr(message_to, key) and key not in exclude_fields:",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243430178,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243430178,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,resolved,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 21:56:21,243430212,"@@ -25,15 +25,14 @@ class ObjectType(enum.Enum):
     Chosen enum values for address readability in hex",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243430212,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243430212,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,resolved,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 21:56:37,243430278,"@@ -76,29 +76,27 @@ def message_fields_not_in_state(self):
 
     def make_addresses(self, message, signer_keypair):
         """"""Makes the appropriate inputs & output addresses for the message type""""""
-        if not isinstance(message, self.message_proto):
-            raise TypeError(""Expected message to be {}"".format(self.message_proto))
-
-        inputs = [
-            # addresser.sysadmin.member.address(signer_public_key),
-            addresser.role.address(message.role_id)
-        ]
-        inputs.extend([addresser.user.address(u) for u in message.admins])
-        inputs.extend(
-            [
+        inputs, _ = super().make_addresses(message, signer_keypair)
+
+        role_address = addresser.role.address(message.role_id)
+        inputs.add(role_address)
+
+        inputs.update({addresser.user.address(u) for u in message.admins})",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243430278,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243430278,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"addressing is over-tested, it can be reduced in a later PR.
Each object type verifies its public addressing methods are as expected",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 22:23:46,243436686,"@@ -79,18 +79,16 @@ def test_address_random(self):
             addresser.address_is(rel_address2), addresser.AddressSpace.ROLES_OWNERS
         )
 
-    def test_address_static(self):
-        """"""Tests address makes the expected output given a specific input""""""
-        role_id = ""99968acb8f1a48b3a4bc21e2cd252e67""
-        user_id = ""966ab67317234df489adb4bc1f517b88""
-        expected_address = (
-            ""bac00100005555326a1713a905b26359fc8da23333cce7570f3f6f7d2c1635f6deea00""
-        )
-        rel_address = addresser.role.owner.address(
-            object_id=role_id, related_id=user_id
-        )
-        self.assertIsAddress(rel_address)
-        self.assertEqual(rel_address, expected_address)
-        self.assertEqual(
-            addresser.address_is(rel_address), addresser.AddressSpace.ROLES_OWNERS
-        )
+    def test_addresser_parse(self):",48,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243436686,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243436686,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,resolved,0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 22:24:03,243436748,"@@ -158,30 +129,38 @@ def _update_state(database, block_num, address, resource):
 
 
 def _update_legacy(database, block_num, address, resource):
-    data_type = addresser.address_is(address)
     try:
-        data = {
-            ""id"": address,
-            ""start_block_num"": int(block_num),
-            ""end_block_num"": int(sys.maxsize),
-            **resource,
-        }
-
-        table_query = database.get_table(TABLE_NAMES[data_type])
-        query = table_query.get(address).replace(
-            lambda doc: r.branch(
-                # pylint: disable=singleton-comparison
-                (doc == None),  # noqa
-                r.expr(data),
-                doc.merge(resource),
+        data_type = addresser.address_is(address)",,2018-12-20 22:41:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243436748,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243436748,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"for posterity's sake, can we say how we resolved this? I believe in this case we removed the offending code? ",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 22:44:09,243441259,"@@ -158,30 +129,38 @@ def _update_state(database, block_num, address, resource):
 
 
 def _update_legacy(database, block_num, address, resource):
-    data_type = addresser.address_is(address)
     try:
-        data = {
-            ""id"": address,
-            ""start_block_num"": int(block_num),
-            ""end_block_num"": int(sys.maxsize),
-            **resource,
-        }
-
-        table_query = database.get_table(TABLE_NAMES[data_type])
-        query = table_query.get(address).replace(
-            lambda doc: r.branch(
-                # pylint: disable=singleton-comparison
-                (doc == None),  # noqa
-                r.expr(data),
-                doc.merge(resource),
+        data_type = addresser.address_is(address)",,2018-12-20 22:44:10,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243441259,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243441259,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/870,https://github.com/hyperledger/sawtooth-next-directory/pull/870,"We did a global search+replace.
Removes address_is in favor of get_address_type.",0eafddab1f841c7470d8b12ec3ecf5c4c2e5d4aa,2018-12-20 22:45:25,243441498,"@@ -158,30 +129,38 @@ def _update_state(database, block_num, address, resource):
 
 
 def _update_legacy(database, block_num, address, resource):
-    data_type = addresser.address_is(address)
     try:
-        data = {
-            ""id"": address,
-            ""start_block_num"": int(block_num),
-            ""end_block_num"": int(sys.maxsize),
-            **resource,
-        }
-
-        table_query = database.get_table(TABLE_NAMES[data_type])
-        query = table_query.get(address).replace(
-            lambda doc: r.branch(
-                # pylint: disable=singleton-comparison
-                (doc == None),  # noqa
-                r.expr(data),
-                doc.merge(resource),
+        data_type = addresser.address_is(address)",,2018-12-20 22:46:16,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243441498,https://github.com/hyperledger/sawtooth-next-directory/pull/870#discussion_r243441498,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/851,https://github.com/hyperledger/sawtooth-next-directory/pull/851,"For future, since we control these, can we standardize on snake_case or camelCase? I don't really care which, just being consistent. 
",0658525c63d06639111d34bfc837c421021db129,2018-12-19 19:55:27,243054598,"@@ -26,9 +23,9 @@
 from sanic_cors import CORS
 from zmq.asyncio import ZMQEventLoop
 
+from rbac.common.logs import getLogger
+from rbac.common.config import get_config",19,2018-12-19 19:57:34,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/243054598,https://github.com/hyperledger/sawtooth-next-directory/pull/851#discussion_r243054598,dustinbarnes
https://github.com/hyperledger/sawtooth-next-directory/pull/825,https://github.com/hyperledger/sawtooth-next-directory/pull/825,Typo in 'federated',cd99047d5d78e407a9a3fc7c9e697ce7837a6227,2018-12-14 21:08:09,241891855,"@@ -1,23 +1,62 @@
-![logo](logo.png)
+[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
+[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
+[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)  
 
+![logo](./readmeUI/logo.png)
 # Hyperledger Sawtooth NEXT Identity Platform
+A Federated Tool for Managing Entitlements.
 
-[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
-[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
-[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)
+## Introduction
+### What is NEXT? 
+NEXT is an open-source Identity and Access Management Platform for enterprise. NEXT is built by leveraging the Sawtooth blockchain to not only improve the status-quo of identity governance and auditing, but also replaces trust with cryptographic proof. Originally envisioned and designed by T-Mobile, NEXT is an enterprise-grade blockchain application, built to integrate with a wide-ranging number of indentity consuming and identity-providing applications. NEXT can integrate with industry standard directory services and provid request, approval, and audit features with the integrity of the Blockchain.
+
+The main components of NEXT includes: Sawtooth, a modular platform created by Intel that sits atop of The Linux Foundation's Hyperledger project, a transaction processor which handles RBAC-specific transaction logic, and a ledger sync which writes the blockchain state changes to a local database. The NEXT platform also features a chatbot component as well as an intuitive UI which will provide a smooth experience for users. 
+
+At its heart, NEXT is about replacing trust with cryptographic truth. It is a federeated tool for managing entitlements. ",,2018-12-16 21:06:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241891855,https://github.com/hyperledger/sawtooth-next-directory/pull/825#discussion_r241891855,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/825,https://github.com/hyperledger/sawtooth-next-directory/pull/825,Fixed! Thank you for catching that,cd99047d5d78e407a9a3fc7c9e697ce7837a6227,2018-12-14 22:34:13,241910799,"@@ -1,23 +1,62 @@
-![logo](logo.png)
+[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
+[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
+[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)  
 
+![logo](./readmeUI/logo.png)
 # Hyperledger Sawtooth NEXT Identity Platform
+A Federated Tool for Managing Entitlements.
 
-[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
-[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
-[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)
+## Introduction
+### What is NEXT? 
+NEXT is an open-source Identity and Access Management Platform for enterprise. NEXT is built by leveraging the Sawtooth blockchain to not only improve the status-quo of identity governance and auditing, but also replaces trust with cryptographic proof. Originally envisioned and designed by T-Mobile, NEXT is an enterprise-grade blockchain application, built to integrate with a wide-ranging number of indentity consuming and identity-providing applications. NEXT can integrate with industry standard directory services and provid request, approval, and audit features with the integrity of the Blockchain.
+
+The main components of NEXT includes: Sawtooth, a modular platform created by Intel that sits atop of The Linux Foundation's Hyperledger project, a transaction processor which handles RBAC-specific transaction logic, and a ledger sync which writes the blockchain state changes to a local database. The NEXT platform also features a chatbot component as well as an intuitive UI which will provide a smooth experience for users. 
+
+At its heart, NEXT is about replacing trust with cryptographic truth. It is a federeated tool for managing entitlements. ",,2018-12-16 21:06:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241910799,https://github.com/hyperledger/sawtooth-next-directory/pull/825#discussion_r241910799,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/825,https://github.com/hyperledger/sawtooth-next-directory/pull/825,Line 74 > bin/start -b,cd99047d5d78e407a9a3fc7c9e697ce7837a6227,2018-12-14 23:21:20,241918578,"@@ -1,23 +1,62 @@
-![logo](logo.png)
+[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
+[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
+[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)  
 
+![logo](./readmeUI/logo.png)
 # Hyperledger Sawtooth NEXT Identity Platform
+A Federated Tool for Managing Entitlements.
 
-[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
-[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
-[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)
+## Introduction
+### What is NEXT? 
+NEXT is an open-source Identity and Access Management Platform for enterprise. NEXT is built by leveraging the Sawtooth blockchain to not only improve the status-quo of identity governance and auditing, but also replaces trust with cryptographic proof. Originally envisioned and designed by T-Mobile, NEXT is an enterprise-grade blockchain application, built to integrate with a wide-ranging number of indentity consuming and identity-providing applications. NEXT can integrate with industry standard directory services and provid request, approval, and audit features with the integrity of the Blockchain.
+
+The main components of NEXT includes: Sawtooth, a modular platform created by Intel that sits atop of The Linux Foundation's Hyperledger project, a transaction processor which handles RBAC-specific transaction logic, and a ledger sync which writes the blockchain state changes to a local database. The NEXT platform also features a chatbot component as well as an intuitive UI which will provide a smooth experience for users. 
+
+At its heart, NEXT is about replacing trust with cryptographic truth. It is a federated tool for managing entitlements. 
+
+
+### Table of Contents:
+* [Application Flow](#application-flow)
+* [How to Contribute](#how-to-contribute)
+* [Using the Platform](#using-next)
+* [Acknowledgements](#Acknowledgements)
+
+
+## Application Flow  
+### _UI for User's Request Dashboard_
+![User_request_dashboard](./readmeUI/NextUI/user_request_dashboard.png)  
+
+### _User requests to join a security group_
+![User_request_dashboard](./readmeUI/NextUI/user_awaiting_approval.png)  
+
+### _User's role request appears in admin's request dashboard_
+![User_request_dashboard](./readmeUI/NextUI/admin_approval_with_chat.png)  
 
-This repo contains multiple components which together with a
-_Hyperledger Sawtooth_ validator, will comprise the ""blockchain"" components
-of the NEXT Identity Platform project. The components include:
+### _Owner approves the user's request and the user is notified_
+![User_request_dashboard](./readmeUI/NextUI/user_role_approved.png) 
 
-- a **server** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
-- a **ledger sync** which writes blockchain state changes to a local database
+### _Owner History of accepted/reject permission requests_
+![User_request_dashboard](./readmeUI/NextUI/admin_history.png) 
 
 
-## Usage
+This flow highlights the typical use case of this platform. The a user requests access to be apart of a group. The owner of the group either accepts or rejects the user's request. The owner's activity log gets updated and auditing can be done in a fast and simple manner reducing overhead.
 
-The easiest way to run these components is with
+
+## How to Contribute  
+Awesome! So you want to be apart of the NEXT Project. There are a couple of good resources for you to get started with. The first being the [developer setup](https://github.com/hyperledger/sawtooth-next-directory/wiki/Developer-Setup). This document helps to standardize
+the developer environment for everyone across different operating systems so when developing, we are all on the same page. 
+
+Here are some ideas on how to get started:
+
+### Good First Issues
+Our team has tagged some issues with the ""Good First Issues"" tag which are issues that can be picked up and worked on without having to know much about the overall guts and intracacies of the system. These [issues](https://github.com/hyperledger/sawtooth-next-directory/labels/good%20first%20issue) will also allow you to gradually get up to speed into the different components of NEXT, which will let you contribute to ""bigger"" issues down the line.
+
+If you have any questions or comments, or you just want to chat, here is a link to our [Rocketchat](https://chat.hyperledger.org/channel/sawtooth-next-directory)! 
+
+
+
+## Using NEXT",70,2018-12-16 21:06:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241918578,https://github.com/hyperledger/sawtooth-next-directory/pull/825#discussion_r241918578,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/825,https://github.com/hyperledger/sawtooth-next-directory/pull/825,Remove line 82 legacy has been removed,cd99047d5d78e407a9a3fc7c9e697ce7837a6227,2018-12-14 23:21:54,241918656,"@@ -1,23 +1,62 @@
-![logo](logo.png)
+[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
+[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
+[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)  
 
+![logo](./readmeUI/logo.png)
 # Hyperledger Sawtooth NEXT Identity Platform
+A Federated Tool for Managing Entitlements.
 
-[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
-[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
-[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)
+## Introduction
+### What is NEXT? 
+NEXT is an open-source Identity and Access Management Platform for enterprise. NEXT is built by leveraging the Sawtooth blockchain to not only improve the status-quo of identity governance and auditing, but also replaces trust with cryptographic proof. Originally envisioned and designed by T-Mobile, NEXT is an enterprise-grade blockchain application, built to integrate with a wide-ranging number of indentity consuming and identity-providing applications. NEXT can integrate with industry standard directory services and provid request, approval, and audit features with the integrity of the Blockchain.
+
+The main components of NEXT includes: Sawtooth, a modular platform created by Intel that sits atop of The Linux Foundation's Hyperledger project, a transaction processor which handles RBAC-specific transaction logic, and a ledger sync which writes the blockchain state changes to a local database. The NEXT platform also features a chatbot component as well as an intuitive UI which will provide a smooth experience for users. 
+
+At its heart, NEXT is about replacing trust with cryptographic truth. It is a federated tool for managing entitlements. 
+
+
+### Table of Contents:
+* [Application Flow](#application-flow)
+* [How to Contribute](#how-to-contribute)
+* [Using the Platform](#using-next)
+* [Acknowledgements](#Acknowledgements)
+
+
+## Application Flow  
+### _UI for User's Request Dashboard_
+![User_request_dashboard](./readmeUI/NextUI/user_request_dashboard.png)  
+
+### _User requests to join a security group_
+![User_request_dashboard](./readmeUI/NextUI/user_awaiting_approval.png)  
+
+### _User's role request appears in admin's request dashboard_
+![User_request_dashboard](./readmeUI/NextUI/admin_approval_with_chat.png)  
 
-This repo contains multiple components which together with a
-_Hyperledger Sawtooth_ validator, will comprise the ""blockchain"" components
-of the NEXT Identity Platform project. The components include:
+### _Owner approves the user's request and the user is notified_
+![User_request_dashboard](./readmeUI/NextUI/user_role_approved.png) 
 
-- a **server** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
-- a **ledger sync** which writes blockchain state changes to a local database
+### _Owner History of accepted/reject permission requests_
+![User_request_dashboard](./readmeUI/NextUI/admin_history.png) 
 
 
-## Usage
+This flow highlights the typical use case of this platform. The a user requests access to be apart of a group. The owner of the group either accepts or rejects the user's request. The owner's activity log gets updated and auditing can be done in a fast and simple manner reducing overhead.
 
-The easiest way to run these components is with
+
+## How to Contribute  
+Awesome! So you want to be apart of the NEXT Project. There are a couple of good resources for you to get started with. The first being the [developer setup](https://github.com/hyperledger/sawtooth-next-directory/wiki/Developer-Setup). This document helps to standardize
+the developer environment for everyone across different operating systems so when developing, we are all on the same page. 
+
+Here are some ideas on how to get started:
+
+### Good First Issues
+Our team has tagged some issues with the ""Good First Issues"" tag which are issues that can be picked up and worked on without having to know much about the overall guts and intracacies of the system. These [issues](https://github.com/hyperledger/sawtooth-next-directory/labels/good%20first%20issue) will also allow you to gradually get up to speed into the different components of NEXT, which will let you contribute to ""bigger"" issues down the line.
+
+If you have any questions or comments, or you just want to chat, here is a link to our [Rocketchat](https://chat.hyperledger.org/channel/sawtooth-next-directory)! 
+
+
+
+## Using NEXT",70,2018-12-16 21:06:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241918656,https://github.com/hyperledger/sawtooth-next-directory/pull/825#discussion_r241918656,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/825,https://github.com/hyperledger/sawtooth-next-directory/pull/825,Add doc set up and unit test command ,cd99047d5d78e407a9a3fc7c9e697ce7837a6227,2018-12-14 23:28:30,241919588,"@@ -1,23 +1,62 @@
-![logo](logo.png)
+[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
+[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
+[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)  
 
+![logo](./readmeUI/logo.png)
 # Hyperledger Sawtooth NEXT Identity Platform
+A Federated Tool for Managing Entitlements.
 
-[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
-[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
-[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)
+## Introduction
+### What is NEXT? 
+NEXT is an open-source Identity and Access Management Platform for enterprise. NEXT is built by leveraging the Sawtooth blockchain to not only improve the status-quo of identity governance and auditing, but also replaces trust with cryptographic proof. Originally envisioned and designed by T-Mobile, NEXT is an enterprise-grade blockchain application, built to integrate with a wide-ranging number of indentity consuming and identity-providing applications. NEXT can integrate with industry standard directory services and provid request, approval, and audit features with the integrity of the Blockchain.
+
+The main components of NEXT includes: Sawtooth, a modular platform created by Intel that sits atop of The Linux Foundation's Hyperledger project, a transaction processor which handles RBAC-specific transaction logic, and a ledger sync which writes the blockchain state changes to a local database. The NEXT platform also features a chatbot component as well as an intuitive UI which will provide a smooth experience for users. 
+
+At its heart, NEXT is about replacing trust with cryptographic truth. It is a federated tool for managing entitlements. 
+
+
+### Table of Contents:
+* [Application Flow](#application-flow)
+* [How to Contribute](#how-to-contribute)
+* [Using the Platform](#using-next)
+* [Acknowledgements](#Acknowledgements)
+
+
+## Application Flow  
+### _UI for User's Request Dashboard_
+![User_request_dashboard](./readmeUI/NextUI/user_request_dashboard.png)  
+
+### _User requests to join a security group_
+![User_request_dashboard](./readmeUI/NextUI/user_awaiting_approval.png)  
+
+### _User's role request appears in admin's request dashboard_
+![User_request_dashboard](./readmeUI/NextUI/admin_approval_with_chat.png)  
 
-This repo contains multiple components which together with a
-_Hyperledger Sawtooth_ validator, will comprise the ""blockchain"" components
-of the NEXT Identity Platform project. The components include:
+### _Owner approves the user's request and the user is notified_
+![User_request_dashboard](./readmeUI/NextUI/user_role_approved.png) 
 
-- a **server** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
-- a **ledger sync** which writes blockchain state changes to a local database
+### _Owner History of accepted/reject permission requests_
+![User_request_dashboard](./readmeUI/NextUI/admin_history.png) 
 
 
-## Usage
+This flow highlights the typical use case of this platform. The a user requests access to be apart of a group. The owner of the group either accepts or rejects the user's request. The owner's activity log gets updated and auditing can be done in a fast and simple manner reducing overhead.
 
-The easiest way to run these components is with
+
+## How to Contribute  
+Awesome! So you want to be apart of the NEXT Project. There are a couple of good resources for you to get started with. The first being the [developer setup](https://github.com/hyperledger/sawtooth-next-directory/wiki/Developer-Setup). This document helps to standardize
+the developer environment for everyone across different operating systems so when developing, we are all on the same page. 
+
+Here are some ideas on how to get started:
+
+### Good First Issues
+Our team has tagged some issues with the ""Good First Issues"" tag which are issues that can be picked up and worked on without having to know much about the overall guts and intracacies of the system. These [issues](https://github.com/hyperledger/sawtooth-next-directory/labels/good%20first%20issue) will also allow you to gradually get up to speed into the different components of NEXT, which will let you contribute to ""bigger"" issues down the line.
+
+If you have any questions or comments, or you just want to chat, here is a link to our [Rocketchat](https://chat.hyperledger.org/channel/sawtooth-next-directory)! 
+
+
+
+## Using NEXT",70,2018-12-16 21:06:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241919588,https://github.com/hyperledger/sawtooth-next-directory/pull/825#discussion_r241919588,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/825,https://github.com/hyperledger/sawtooth-next-directory/pull/825,Done!,cd99047d5d78e407a9a3fc7c9e697ce7837a6227,2018-12-16 07:21:43,241970294,"@@ -1,23 +1,62 @@
-![logo](logo.png)
+[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
+[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
+[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)  
 
+![logo](./readmeUI/logo.png)
 # Hyperledger Sawtooth NEXT Identity Platform
+A Federated Tool for Managing Entitlements.
 
-[![Build Status](https://travis-ci.org/hyperledger/sawtooth-next-directory.svg?branch=master)](https://travis-ci.org/hyperledger/sawtooth-next-directory)
-[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://github.com/hyperledger/sawtooth-next-directory/blob/master/LICENSE)
-[![Documentation Status](https://readthedocs.org/projects/sawtooth-next-directory/badge/?version=latest)](https://sawtooth-next-directory.readthedocs.io/?badge=latest)
+## Introduction
+### What is NEXT? 
+NEXT is an open-source Identity and Access Management Platform for enterprise. NEXT is built by leveraging the Sawtooth blockchain to not only improve the status-quo of identity governance and auditing, but also replaces trust with cryptographic proof. Originally envisioned and designed by T-Mobile, NEXT is an enterprise-grade blockchain application, built to integrate with a wide-ranging number of indentity consuming and identity-providing applications. NEXT can integrate with industry standard directory services and provid request, approval, and audit features with the integrity of the Blockchain.
+
+The main components of NEXT includes: Sawtooth, a modular platform created by Intel that sits atop of The Linux Foundation's Hyperledger project, a transaction processor which handles RBAC-specific transaction logic, and a ledger sync which writes the blockchain state changes to a local database. The NEXT platform also features a chatbot component as well as an intuitive UI which will provide a smooth experience for users. 
+
+At its heart, NEXT is about replacing trust with cryptographic truth. It is a federated tool for managing entitlements. 
+
+
+### Table of Contents:
+* [Application Flow](#application-flow)
+* [How to Contribute](#how-to-contribute)
+* [Using the Platform](#using-next)
+* [Acknowledgements](#Acknowledgements)
+
+
+## Application Flow  
+### _UI for User's Request Dashboard_
+![User_request_dashboard](./readmeUI/NextUI/user_request_dashboard.png)  
+
+### _User requests to join a security group_
+![User_request_dashboard](./readmeUI/NextUI/user_awaiting_approval.png)  
+
+### _User's role request appears in admin's request dashboard_
+![User_request_dashboard](./readmeUI/NextUI/admin_approval_with_chat.png)  
 
-This repo contains multiple components which together with a
-_Hyperledger Sawtooth_ validator, will comprise the ""blockchain"" components
-of the NEXT Identity Platform project. The components include:
+### _Owner approves the user's request and the user is notified_
+![User_request_dashboard](./readmeUI/NextUI/user_role_approved.png) 
 
-- a **server** which provides a REST API for querying blockchain data
-- a **transaction processor** which handles RBAC-specific transaction logic
-- a **ledger sync** which writes blockchain state changes to a local database
+### _Owner History of accepted/reject permission requests_
+![User_request_dashboard](./readmeUI/NextUI/admin_history.png) 
 
 
-## Usage
+This flow highlights the typical use case of this platform. The a user requests access to be apart of a group. The owner of the group either accepts or rejects the user's request. The owner's activity log gets updated and auditing can be done in a fast and simple manner reducing overhead.
 
-The easiest way to run these components is with
+
+## How to Contribute  
+Awesome! So you want to be apart of the NEXT Project. There are a couple of good resources for you to get started with. The first being the [developer setup](https://github.com/hyperledger/sawtooth-next-directory/wiki/Developer-Setup). This document helps to standardize
+the developer environment for everyone across different operating systems so when developing, we are all on the same page. 
+
+Here are some ideas on how to get started:
+
+### Good First Issues
+Our team has tagged some issues with the ""Good First Issues"" tag which are issues that can be picked up and worked on without having to know much about the overall guts and intracacies of the system. These [issues](https://github.com/hyperledger/sawtooth-next-directory/labels/good%20first%20issue) will also allow you to gradually get up to speed into the different components of NEXT, which will let you contribute to ""bigger"" issues down the line.
+
+If you have any questions or comments, or you just want to chat, here is a link to our [Rocketchat](https://chat.hyperledger.org/channel/sawtooth-next-directory)! 
+
+
+
+## Using NEXT",70,2018-12-16 21:06:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241970294,https://github.com/hyperledger/sawtooth-next-directory/pull/825#discussion_r241970294,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/818,https://github.com/hyperledger/sawtooth-next-directory/pull/818,Is this being used?,2f47efbf5ccb04bbca2bf526711491eb80f9c166,2018-12-14 06:15:48,241652717,"@@ -17,6 +17,7 @@
 
 import logging
 from rbac.common import addresser
+from rbac.common.protobuf import role_transaction_pb2  # pylint: disable=unused-import",4,2018-12-14 06:15:48,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241652717,https://github.com/hyperledger/sawtooth-next-directory/pull/818#discussion_r241652717,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/818,https://github.com/hyperledger/sawtooth-next-directory/pull/818,There is still some confusion around this as id and distinguishedName are apparently not equivalent across providers. ,2f47efbf5ccb04bbca2bf526711491eb80f9c166,2018-12-14 06:31:46,241654717,"@@ -45,10 +47,11 @@
     ""usage_location"": {""azure"": ""usageLocation"", ""ldap"": None},
     ""user_principal_name"": {""azure"": ""userPrincipalName"", ""ldap"": ""userPrincipalName""},
     ""user_type"": {""azure"": ""userType"", ""ldap"": None},
+    ""relationship_id"": {""azure"": ""id"", ""ldap"": ""distinguishedName""},",26,2018-12-14 06:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241654717,https://github.com/hyperledger/sawtooth-next-directory/pull/818#discussion_r241654717,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/818,https://github.com/hyperledger/sawtooth-next-directory/pull/818,"Yes, it’s a artifact of dynamically discovering the protobuf on a separate thread.",2f47efbf5ccb04bbca2bf526711491eb80f9c166,2018-12-14 17:09:58,241826029,"@@ -17,6 +17,7 @@
 
 import logging
 from rbac.common import addresser
+from rbac.common.protobuf import role_transaction_pb2  # pylint: disable=unused-import",4,2018-12-14 17:09:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241826029,https://github.com/hyperledger/sawtooth-next-directory/pull/818#discussion_r241826029,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/818,https://github.com/hyperledger/sawtooth-next-directory/pull/818,"It doesn’t get mapped back given it doesn’t exist in the schema. Thus, it doesn’t matter for outbound mapping.

relationship_id is the identifier used in relationship mappings in each provider.

If you look at manager_id, the value in Azure is id, and the value in LDAP is distinguishedName. Thus, relationship_id is equivalent across providers.",2f47efbf5ccb04bbca2bf526711491eb80f9c166,2018-12-14 17:11:56,241826672,"@@ -45,10 +47,11 @@
     ""usage_location"": {""azure"": ""usageLocation"", ""ldap"": None},
     ""user_principal_name"": {""azure"": ""userPrincipalName"", ""ldap"": ""userPrincipalName""},
     ""user_type"": {""azure"": ""userType"", ""ldap"": None},
+    ""relationship_id"": {""azure"": ""id"", ""ldap"": ""distinguishedName""},",26,2018-12-14 19:16:03,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241826672,https://github.com/hyperledger/sawtooth-next-directory/pull/818#discussion_r241826672,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/805,https://github.com/hyperledger/sawtooth-next-directory/pull/805,Above this line you should add ```# search_filter = '(objectClass=group)'``` as this will be the code for group searching.   Keep it commented out is fine.,f58d821fd189a80dd424a7e18b91c1f1b7261fc9,2018-12-12 21:40:30,241195206,"@@ -0,0 +1,26 @@
+from ldap3 import Server, Connection, ALL
+from ldap3 import MODIFY_REPLACE, ALL_ATTRIBUTES
+
+server = Server('ldap://${ip}', get_info=ALL)
+conn = Connection(server, user='svc_adds_sync', password='${password}')
+if not conn.bind():
+  raise ValueError(""Error connecting to LDAP server %s "", conn.result)
+
+
+#search_filter = '(&(objectClass=person)(distinguishedName=CN=testUser,OU=Privileged,OU=Users,OU=Accounts,DC=clouddev,DC=corporate,DC=t-mobile,DC=com))'
+search_filter = '(objectClass=person)'",,2018-12-13 07:27:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241195206,https://github.com/hyperledger/sawtooth-next-directory/pull/805#discussion_r241195206,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"`enzyme`, `enzyme-adapter-react-16`, and `enzyme-to-json`, `react-test-renderer`, and `sinon ` are not required during runtime and therefore should instead be located inside of the `devDependencies`. To fix this, simply move these packages under `devDependencies` in `package.json`.",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:20:24,240251956,"@@ -9,6 +9,9 @@
   ""license"": ""Apache-2.0"",
   ""dependencies"": {
     ""apisauce"": ""^0.16.0"",
+    ""enzyme"": ""^3.7.0"",
+    ""enzyme-adapter-react-16"": ""^1.7.0"",
+    ""enzyme-to-json"": ""^3.3.4"",
     ""prop-types"": ""^15.6.2"",",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240251956,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240251956,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"Nitpick: We do not preserve whitespace between self-closing elements. I will see if I can add a lint rule for this. Some code formatters will place a space here, but I remember seeing a W3C spec somewhere that did not recommend it.",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:24:23,240253725,"@@ -40,22 +40,23 @@ export default class StackedAvatar extends Component {
   renderAvatars = () => {
     const { list } = this.props;
 
-    if(list) {
+    if (list) {
       return list.map((item, index) => {
-        if(index > 3) return null;
+        if (index > 3)
+          return null;
 
-        if(index === 3) {
+        if (index === 3) {
           return (
             <div className='next-avatar-element'>
-              <Icon inverted name='add' size='tiny'/>
+              <Icon inverted name='add' size='tiny' />
             </div>
           );
         }
         return (
           <div key={index} className='next-avatar-element'>
             <Image
               avatar
-              src='http://i.pravatar.cc/500'/>
+              src='http://i.pravatar.cc/500' />",25,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240253725,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240253725,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"This is a regression from the update I made to `StackedAvatar`. That means that `{memberLabel}` (Line 85) is a newer change than what you've overridden it with, indicating a problem in your merge.",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:26:38,240254711,"@@ -82,7 +82,7 @@ export default class StackedAvatar extends Component {
           {this.renderAvatars()}
         </div>
         <div className='next-avatar-count'>
-          {memberLabel}
+          {`${list ? list.length : 0} Members`}",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240254711,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240254711,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,Changes on left are newer.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:27:44,240255210,"@@ -270,7 +270,7 @@ class Chat extends Component {
 
         { type === 'REQUESTER' &&
           <div id='next-chat-messages-container'>
-            <ChatMessage {...this.props}/>
+            <ChatMessage {...this.props} />
           </div>
         }
 ",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240255210,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240255210,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"Nitpick: `ids` should not be delimited by hyphens where natural word breaks occur. For example, chat and submit are different words, so the id should be `next-name-chat-submit`. No camel case for IDs and classes.",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:30:05,240256251,"@@ -257,6 +258,7 @@ class ChatForm extends Component {
               <input autoComplete='off'/>
               <Icon
                 link
+                id='next-name-chatSubmit'
                 name='paper plane'",15,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240256251,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240256251,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,Have cases where IDs have changed been tested during runtime?,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:31:44,240257010,"@@ -193,10 +197,11 @@ class LoginForm extends Component {
           animation='fade up'
           duration={{ hide, show }}>
           <div>
-            <Form onSubmit={() => this.setFlow(0)}>
-              <Form.Field id='next-login-form-reset-password'>
+            <Form id='next-login-form-reset-password'
+              onSubmit={() => this.setFlow(0)}>
+              <Form.Field >
                 <Form.Button
-                  id='next-login-form-back-button'
+                  id='next-login-reset-email-back-button'",41,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240257010,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240257010,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"Again, hyphen delimited lowercase for all IDs.",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:32:26,240257370,"@@ -156,7 +159,8 @@ export default class SignupForm extends Component {
           animation='fade down'
           duration={{ hide, show }}>
           <div>
-            <Form onSubmit={() => submit(name, username, password, email)}>
+            <Form id='next-password-signupForm'
+              onSubmit={() => submit(name, username, password, email)}>
               <Form.Button",59,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240257370,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240257370,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,Test names should be descriptive of the test.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:36:17,240259009,"@@ -0,0 +1,42 @@
+import React from 'react';
+import ReactDOM from 'react-dom';
+import { shallow } from 'enzyme';
+import { BrowserRouter } from 'react-router-dom';
+
+
+import SignupForm from './SignupForm';
+
+
+describe('SignupForm component', () => {
+  const props = {
+    submit: (username, password) => { }
+  }
+  const wrapper = shallow(<SignupForm {...props} />);
+
+
+  it('renders without crashing', () => {
+    const div = document.createElement('div');
+    ReactDOM.render(
+      <BrowserRouter><SignupForm {...props} /></BrowserRouter>, div
+    );
+
+    ReactDOM.unmountComponentAtNode(div);
+  });
+
+
+  test('username form', () => {",27,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240259009,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240259009,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,Nitpick: indentation.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:37:17,240259466,"@@ -31,14 +32,32 @@ describe('Header component', () => {
 
   it('renders without crashing', () => {
     const div = document.createElement('div');
-
+    const props = {
+      me: { name: 'username' },
+      openProposalsCount: 5,
+      renderMenu: () => { return },
+      logout: () => { },
+    };
     ReactDOM.render(
       <Provider store={store}>
-        <BrowserRouter><Header/></BrowserRouter>
-      </Provider>, div
+      <BrowserRouter><Header {...props} /></BrowserRouter>
+    </Provider>, div
     );",24,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240259466,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240259466,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,Is your editor formatter changing the spacing on these blocks?,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:39:04,240260240,"@@ -29,22 +29,22 @@ import './RoleList.css';
 class RoleList extends Component {
 
   static propTypes = {
-    getUsers:               PropTypes.func,
-    handleChange:           PropTypes.func,
-    openProposalsByRole:    PropTypes.object,
-    openProposalsByUser:    PropTypes.object,
-    roleFromId:             PropTypes.func,
-    selectedRoles:          PropTypes.array,
-    selectedProposals:      PropTypes.array,
-    users:                  PropTypes.array,
+    getUsers: PropTypes.func,
+    handleChange: PropTypes.func,
+    openProposalsByRole: PropTypes.object,
+    openProposalsByUser: PropTypes.object,
+    roleFromId: PropTypes.func,
+    selectedRoles: PropTypes.array,
+    selectedProposals: PropTypes.array,
+    users: PropTypes.array,
   };",20,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240260240,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240260240,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,This is a merge error. The `modals` directory has been removed.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:40:14,240260722,"@@ -0,0 +1,139 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240260722,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240260722,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,File has been deleted.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:40:34,240260877,"@@ -0,0 +1,80 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240260877,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240260877,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,Is this change correct? (Lines 85-92),4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:42:09,240261607,"@@ -77,19 +77,19 @@ class Browse extends Component {
     this.setState({ rolesData: arr });
   }
 
-
   /**
    * Render layout ?
+   * @param {array} layoutData ?
    * @returns {JSX}
    */
-  renderLayout() {
-    const { rolesData } = this.state;
-    return rolesData.map((column, index) => {
-      return (
-        <Grid.Column key={index}>
-          {this.renderColumns(column)}
-        </Grid.Column>
-      );
+  renderLayout(layoutData) {
+    const{ rolesData } = this.state;
+    let data = layoutData ? layoutData : rolesData;
+
+    return data.map((column, index) => {
+      return (<Grid.Column key={index}>
+        {this.renderColumns(column)}
+      </Grid.Column>);
     });",55,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240261607,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240261607,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"Are these tests working? They were removed because they were broken. If so, `test.skip` should be `test` for all occurrences.",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:44:35,240262634,"@@ -76,3 +76,96 @@ test.skip('failure path', () => {
   const stepRes = step(res);
   expect(stepRes).toEqual(put(AuthActions.loginFailure(res.data.error)));
 });
+
+test.skip('signup API', () => {",47,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240262634,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240262634,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"Nitpick: Prefer 2 space tabs. Before this can be approved, we will need to add all `*.test.js` files to the linter and correct the errors.",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 15:52:38,240266378,"@@ -22,18 +22,18 @@ import StackedAvatar from './StackedAvatar';
 
 describe('StackedAvatar component', () => {",2,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240266378,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240266378,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,`window.alert` is required to suppress console messages in test output. Needs to be added back.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-10 16:02:33,240270952,"@@ -1,3 +1,13 @@
-require('jest-localstorage-mock');
 
-window.alert = (message) => {};",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240270952,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240270952,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,this has been moved to devdependencies,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 08:48:44,240516147,"@@ -9,6 +9,9 @@
   ""license"": ""Apache-2.0"",
   ""dependencies"": {
     ""apisauce"": ""^0.16.0"",
+    ""enzyme"": ""^3.7.0"",
+    ""enzyme-adapter-react-16"": ""^1.7.0"",
+    ""enzyme-to-json"": ""^3.3.4"",
     ""prop-types"": ""^15.6.2"",",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240516147,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240516147,Akashkotian7
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,this has been resolved,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 08:49:13,240516269,"@@ -40,22 +40,23 @@ export default class StackedAvatar extends Component {
   renderAvatars = () => {
     const { list } = this.props;
 
-    if(list) {
+    if (list) {
       return list.map((item, index) => {
-        if(index > 3) return null;
+        if (index > 3)
+          return null;
 
-        if(index === 3) {
+        if (index === 3) {
           return (
             <div className='next-avatar-element'>
-              <Icon inverted name='add' size='tiny'/>
+              <Icon inverted name='add' size='tiny' />
             </div>
           );
         }
         return (
           <div key={index} className='next-avatar-element'>
             <Image
               avatar
-              src='http://i.pravatar.cc/500'/>
+              src='http://i.pravatar.cc/500' />",25,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240516269,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240516269,Akashkotian7
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,this has been resolved,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 08:49:41,240516409,"@@ -82,7 +82,7 @@ export default class StackedAvatar extends Component {
           {this.renderAvatars()}
         </div>
         <div className='next-avatar-count'>
-          {memberLabel}
+          {`${list ? list.length : 0} Members`}",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240516409,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240516409,Akashkotian7
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"this has been resolved
",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 08:50:01,240516492,"@@ -270,7 +270,7 @@ class Chat extends Component {
 
         { type === 'REQUESTER' &&
           <div id='next-chat-messages-container'>
-            <ChatMessage {...this.props}/>
+            <ChatMessage {...this.props} />
           </div>
         }
 ",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240516492,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240516492,Akashkotian7
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,the names have been changed to suggested format,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 08:50:32,240516632,"@@ -257,6 +258,7 @@ class ChatForm extends Component {
               <input autoComplete='off'/>
               <Icon
                 link
+                id='next-name-chatSubmit'
                 name='paper plane'",15,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240516632,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240516632,Akashkotian7
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"yea i have the latest code
",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 08:50:54,240516751,"@@ -0,0 +1,80 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240516751,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240516751,Akashkotian7
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,yea this was changed to improve test cases,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 08:51:55,240517044,"@@ -77,19 +77,19 @@ class Browse extends Component {
     this.setState({ rolesData: arr });
   }
 
-
   /**
    * Render layout ?
+   * @param {array} layoutData ?
    * @returns {JSX}
    */
-  renderLayout() {
-    const { rolesData } = this.state;
-    return rolesData.map((column, index) => {
-      return (
-        <Grid.Column key={index}>
-          {this.renderColumns(column)}
-        </Grid.Column>
-      );
+  renderLayout(layoutData) {
+    const{ rolesData } = this.state;
+    let data = layoutData ? layoutData : rolesData;
+
+    return data.map((column, index) => {
+      return (<Grid.Column key={index}>
+        {this.renderColumns(column)}
+      </Grid.Column>);
     });",55,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240517044,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240517044,Akashkotian7
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,i have removed the test.js file from lint ignore,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 08:52:39,240517265,"@@ -22,18 +22,18 @@ import StackedAvatar from './StackedAvatar';
 
 describe('StackedAvatar component', () => {",2,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240517265,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240517265,Akashkotian7
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,yea i have added back,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 08:52:54,240517357,"@@ -1,3 +1,13 @@
-require('jest-localstorage-mock');
 
-window.alert = (message) => {};",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240517357,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240517357,Akashkotian7
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,These imports have been removed. They should no longer be in `Chat.js`. Indication of outstandin merge issue.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:10:32,240706014,"@@ -31,6 +31,10 @@ import ChatForm from '../forms/ChatForm';
 import ChatMessage from './ChatMessage';
 
 
+import chatRequester from '../../mock_data/conversation_action.json';
+import chatApprover from '../../mock_data/conversation_action.1.json';",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240706014,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240706014,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,This has also been removed,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:10:44,240706094,"@@ -161,14 +165,17 @@ class Chat extends Component {
     const {
       disabled,
       handleChange,
-      selectedProposal,
       selectedRoles,
       selectedUsers,
       subtitle,
       title,
       groupBy,
       type } = this.props;
 
+    // ! Temporary
+    const actions = type ? chatApprover.actions :
+      chatRequester.actions;
+",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240706094,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240706094,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,The addition of `selectedProposal` is a newer change. It should not have been deleted.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:11:17,240706375,"@@ -161,14 +165,17 @@ class Chat extends Component {
     const {
       disabled,
       handleChange,
-      selectedProposal,",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240706375,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240706375,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,These blocks are all new and should not have been removed. This will result in chat being completely broken. Make sure you test the application before and after in the browser in the manner I demoed early today to check for regressions.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:12:25,240706892,"@@ -178,20 +185,6 @@ class Chat extends Component {
           </Header>
         }
 
-        { type === 'APPROVER' && selectedProposal && title && subtitle &&",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240706892,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240706892,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,"Again, new change being deleted.",4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:12:39,240707015,"@@ -258,16 +251,6 @@ class Chat extends Component {
           </div>
         }
 
-        { type === 'APPROVER' && selectedProposal &&",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240707015,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240707015,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,This has been removed.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:12:47,240707069,"@@ -278,6 +261,7 @@ class Chat extends Component {
           <ChatForm
             {...this.props}
             disabled={disabled}
+            actions={actions}",,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240707069,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240707069,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,Need an answer to this question.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:13:33,240707401,"@@ -193,10 +197,11 @@ class LoginForm extends Component {
           animation='fade up'
           duration={{ hide, show }}>
           <div>
-            <Form onSubmit={() => this.setFlow(0)}>
-              <Form.Field id='next-login-form-reset-password'>
+            <Form id='next-login-form-reset-password'
+              onSubmit={() => this.setFlow(0)}>
+              <Form.Field >
                 <Form.Button
-                  id='next-login-form-back-button'
+                  id='next-login-reset-email-back-button'",41,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240707401,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240707401,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,There shouldn't be any change in `next-logo-primary.png`. Only files that have changed should appear in the PR.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:16:23,240708675,"@@ -20,7 +20,8 @@ import Actions, { reducer, INITIAL_STATE } from './AuthRedux';
 test('loginRequest', () => {",1,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240708675,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240708675,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,Need an answer to this question.,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:16:48,240708876,"@@ -76,3 +76,96 @@ test.skip('failure path', () => {
   const stepRes = step(res);
   expect(stepRes).toEqual(put(AuthActions.loginFailure(res.data.error)));
 });
+
+test.skip('signup API', () => {",47,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240708876,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240708876,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/771,https://github.com/hyperledger/sawtooth-next-directory/pull/771,Okay. Has the functionality been tested in the browser to make sure it still works?,4c51843e2a853c8abb217167cffeb39756c61b1c,2018-12-11 17:22:57,240711514,"@@ -77,19 +77,19 @@ class Browse extends Component {
     this.setState({ rolesData: arr });
   }
 
-
   /**
    * Render layout ?
+   * @param {array} layoutData ?
    * @returns {JSX}
    */
-  renderLayout() {
-    const { rolesData } = this.state;
-    return rolesData.map((column, index) => {
-      return (
-        <Grid.Column key={index}>
-          {this.renderColumns(column)}
-        </Grid.Column>
-      );
+  renderLayout(layoutData) {
+    const{ rolesData } = this.state;
+    let data = layoutData ? layoutData : rolesData;
+
+    return data.map((column, index) => {
+      return (<Grid.Column key={index}>
+        {this.renderColumns(column)}
+      </Grid.Column>);
     });",55,2018-12-12 07:26:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240711514,https://github.com/hyperledger/sawtooth-next-directory/pull/771#discussion_r240711514,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,"This is not the distinguishedName, objectGUID is correct",30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 18:33:42,240737966,"@@ -12,9 +12,11 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
+"""""" Transforms incoming data based on key names and provider type
+""""""
 
 USER_TRANSFORM = {
-    ""user_id"": {""azure"": ""id"", ""ldap"": ""objectGUID""},
+    ""user_id"": {""azure"": ""id"", ""ldap"": ""distinguishedName""},",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240737966,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240737966,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,STANDARD_GROUP_TRANSFORM is empty therefore this for loop block is unnecessary.,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 18:45:20,240742121,"@@ -37,12 +51,33 @@ def inbound_group_filter(group, provider):
     :param: group > dict > a dictionary representing a group
     :param: provider > str > inbound provider type (azure, ldap)
     """"""
-    if provider != ""azure"" and provider != ""ldap"":
+    if provider not in (""azure"", ""ldap""):
         raise TypeError(""Provider must be specified with a valid option."")
     clean_group = {}
-    for key, value in GROUP_TRANSFORM.items():
-        if value[provider] in group:
-            clean_group[key] = group[value[provider]]
-        else:
-            clean_group[key] = None
+    for key, alias in GROUP_TRANSFORM.items():
+        if alias[provider] in group:
+            value = inbound_value_filter(group[alias[provider]])
+            if value:
+                clean_group[key] = value
+    for key, aliases in STANDARD_GROUP_TRANSFORM.items():",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240742121,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240742121,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,"Can you clarify what you are trying to do here?   Name, Given Name and User Nick Name are all different so they should not be considered replacements for each other or mergeable.  user_nickname will always be available as i is a requirement of both systems.  I am unsure this is necessary.",30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 18:48:29,240743279,"@@ -12,23 +12,37 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
-
-from rbac.providers.common.provider_transforms import GROUP_TRANSFORM, USER_TRANSFORM
+"""""" Filters for inbound data fields
+""""""
+from rbac.providers.common.provider_transforms import (
+    GROUP_TRANSFORM,
+    USER_TRANSFORM,
+    STANDARD_USER_TRANSFORM,
+    STANDARD_GROUP_TRANSFORM,
+)
 
 
 def inbound_user_filter(user, provider):
     """"""Takes in a user dict from a provider and standardizes the dict and returns it.
     :param: user > dict > a dictionary representing a user
     :param: provider > str > inbound provider type (azure, ldap)
     """"""
-    if provider != ""azure"" and provider != ""ldap"":
+    if provider not in (""azure"", ""ldap""):
         raise TypeError(""Provider must be specified with a valid option."")
     clean_user = {}
-    for key, value in USER_TRANSFORM.items():
-        if value[provider] in user:
-            clean_user[key] = user[value[provider]]
-        else:
-            clean_user[key] = None
+    for key, alias in USER_TRANSFORM.items():
+        if alias[provider] in user:
+            value = inbound_value_filter(user[alias[provider]])
+            if value:
+                clean_user[key] = value
+    for key, aliases in STANDARD_USER_TRANSFORM.items():",34,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240743279,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240743279,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,This is not correct as distinguishName is not the same as objectGUID.,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 18:49:37,240743729,"@@ -48,7 +50,7 @@
 }
 
 GROUP_TRANSFORM = {
-    ""role_id"": {""azure"": ""id"", ""ldap"": ""objectGUID""},
+    ""role_id"": {""azure"": ""id"", ""ldap"": ""distinguishedName""},",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240743729,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240743729,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,Should be removed as it is empty,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 18:49:51,240743819,"@@ -97,3 +98,7 @@
     ""owners"": {""azure"": ""owners"", ""ldap"": ""managedBy""},
     ""visibility"": {""azure"": ""visibility"", ""ldap"": None},
 }
+
+STANDARD_USER_TRANSFORM = {""name"": {""name"", ""given_name"", ""user_nickname""}}
+
+STANDARD_GROUP_TRANSFORM = {}",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240743819,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240743819,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,This will need to be reverted with the change back to object GUID,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 18:52:35,240744892,"@@ -76,7 +76,7 @@ def test_outbound_user_filter_bad_provider():
 def test_outbound_group_filter():
     """""" Test outbound group filter with valid user """"""
     result = outbound_group_filter({""role_id"": 1234}, ""ldap"")
-    assert result[""objectGUID""] == 1234
+    assert result[""distinguishedName""] == 1234",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240744892,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240744892,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,This should be Inbound listener %s exception,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 19:05:40,240749980,"@@ -0,0 +1,128 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+"""""" Sawtooth Inbound Transaction Queue Listener
+""""""
+
+from rethinkdb import r
+from sawtooth_sdk.protobuf import batch_pb2
+
+from rbac.common.logs import getLogger
+from rbac.common.sawtooth import client
+from rbac.common.sawtooth import batcher
+from rbac.ledger_sync.database import Database
+
+
+LOGGER = getLogger(__name__)
+
+
+def process(rec, database):
+    """""" Process inbound queue records
+    """"""
+    try:
+        if ""batch"" not in rec or not rec[""batch""]:
+            database.run_query(
+                database.get_table(""inbound_queue"").get(rec[""id""]).delete()
+            )
+            database.run_query(database.get_table(""inbound_queue_errors"").insert(rec))
+            return
+
+        batch = batch_pb2.Batch()
+        batch.ParseFromString(rec[""batch""])
+        batch_list = batcher.batch_to_list(batch=batch)
+        status = client.send_batches_get_status(batch_list=batch_list)
+        if status[0][""status""] == ""COMMITTED"":
+            if ""metadata"" in rec and rec[""metadata""]:
+                query = (
+                    database.get_table(""metadata"")
+                    .get(rec[""address""])
+                    .replace(
+                        lambda doc: r.branch(
+                            # pylint: disable=singleton-comparison
+                            (doc == None),  # noqa
+                            r.expr(
+                                {
+                                    ""address"": rec[""address""],
+                                    ""object_type"": rec[""object_type""],
+                                    ""object_id"": rec[""object_id""],
+                                    ""metadata"": rec[""metadata""],
+                                    ""created_at"": rec[""timestamp""],
+                                    ""updated_at"": rec[""timestamp""],
+                                }
+                            ),
+                            doc.merge(
+                                {
+                                    ""metadata"": rec[""metadata""],
+                                    ""updated_at"": rec[""timestamp""],
+                                }
+                            ),
+                        )
+                    )
+                )
+                result = database.run_query(query)
+                if (not result[""inserted""] and not result[""replaced""]) or result[
+                    ""errors""
+                ] > 0:
+                    LOGGER.warning(
+                        ""error updating metadata record:\n%s\n%s"", result, query
+                    )
+            database.run_query(database.get_table(""inbound_queue_archive"").insert(rec))
+            database.run_query(
+                database.get_table(""inbound_queue"").get(rec[""id""]).delete()
+            )
+        else:
+            rec[""error""] = status[0][""invalid_transactions""][0][""message""]
+            database.run_query(database.get_table(""inbound_queue_errors"").insert(rec))
+            database.run_query(
+                database.get_table(""inbound_queue"").get(rec[""id""]).delete()
+            )
+    except Exception as err:  # pylint: disable=broad-except
+        LOGGER.exception(
+            ""%s exeption proccessing inbound record:\n%s"", type(err).__name__, rec
+        )
+        LOGGER.exception(err)
+
+
+def listener():
+    """""" Listener for Sawtooth State changes
+    """"""
+    try:
+        database = Database()
+        database.connect()
+
+        LOGGER.info(""Reading queued Sawtooth transactions"")
+        while True:
+            feed = database.run_query(database.get_table(""inbound_queue""))
+            count = 0
+            for rec in feed:
+                process(rec, database)
+                count = count + 1
+            if count == 0:
+                break
+            LOGGER.info(""Processed %s records in the inbound queue"", count)
+        LOGGER.info(""Listening for incoming Sawtooth transactions"")
+        feed = database.run_query(database.get_table(""inbound_queue"").changes())
+        for rec in feed:
+            if rec[""new_val""] and not rec[""old_val""]:  # only insertions
+                process(rec[""new_val""], database)
+
+    except Exception as err:  # pylint: disable=broad-except
+        LOGGER.exception(""Outbound listener %s exception"", type(err).__name__)",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240749980,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240749980,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,This is adding transaction information prior to being loaded into the inbound queue.  I was under the impression that this sort of processing would be done post insertion into the inbound queue.  This seems to be in the wrong part of the flow as I thought this is supposed to go into the NEXT portion of the application.,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 19:06:04,240750124,"@@ -93,7 +95,9 @@ def insert_to_db(data_dict, data_type):
             ""sync_type"": ""initial"",
             ""timestamp"": datetime.now().replace(tzinfo=timezone.utc).isoformat(),
             ""provider_id"": LDAP_DC,
+            ""raw"": entry_data,
         }
+        add_transaction(inbound_entry)",32,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240750124,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240750124,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,I am also confused about this. The queues are the handoff points between modules. inbound_sync should be publishing to this queue and ledger_sync should be subscribing.,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 19:12:58,240752778,"@@ -93,7 +95,9 @@ def insert_to_db(data_dict, data_type):
             ""sync_type"": ""initial"",
             ""timestamp"": datetime.now().replace(tzinfo=timezone.utc).isoformat(),
             ""provider_id"": LDAP_DC,
+            ""raw"": entry_data,
         }
+        add_transaction(inbound_entry)",32,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240752778,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240752778,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,"Please relocate this operation to the inbound processing step of ledger_sync. 
Ldap inbound enqueues the records, ledger_sync dequeues and processes them.",30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-11 19:48:08,240765762,"@@ -93,7 +95,9 @@ def insert_to_db(data_dict, data_type):
             ""sync_type"": ""initial"",
             ""timestamp"": datetime.now().replace(tzinfo=timezone.utc).isoformat(),
             ""provider_id"": LDAP_DC,
+            ""raw"": entry_data,
         }
+        add_transaction(inbound_entry)",32,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240765762,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240765762,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,Can you explain why objectGUID is correct?,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 03:08:44,240869556,"@@ -12,9 +12,11 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
+"""""" Transforms incoming data based on key names and provider type
+""""""
 
 USER_TRANSFORM = {
-    ""user_id"": {""azure"": ""id"", ""ldap"": ""objectGUID""},
+    ""user_id"": {""azure"": ""id"", ""ldap"": ""distinguishedName""},",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240869556,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240869556,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,"Name is required by NEXT, but it is NULL on many records in LDAP. Thus we fall back to those other fields if NAME is NULL.

I will query for a list of records that have no name field in LDAP.
",30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 03:11:05,240869823,"@@ -12,23 +12,37 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
-
-from rbac.providers.common.provider_transforms import GROUP_TRANSFORM, USER_TRANSFORM
+"""""" Filters for inbound data fields
+""""""
+from rbac.providers.common.provider_transforms import (
+    GROUP_TRANSFORM,
+    USER_TRANSFORM,
+    STANDARD_USER_TRANSFORM,
+    STANDARD_GROUP_TRANSFORM,
+)
 
 
 def inbound_user_filter(user, provider):
     """"""Takes in a user dict from a provider and standardizes the dict and returns it.
     :param: user > dict > a dictionary representing a user
     :param: provider > str > inbound provider type (azure, ldap)
     """"""
-    if provider != ""azure"" and provider != ""ldap"":
+    if provider not in (""azure"", ""ldap""):
         raise TypeError(""Provider must be specified with a valid option."")
     clean_user = {}
-    for key, value in USER_TRANSFORM.items():
-        if value[provider] in user:
-            clean_user[key] = user[value[provider]]
-        else:
-            clean_user[key] = None
+    for key, alias in USER_TRANSFORM.items():
+        if alias[provider] in user:
+            value = inbound_value_filter(user[alias[provider]])
+            if value:
+                clean_user[key] = value
+    for key, aliases in STANDARD_USER_TRANSFORM.items():",34,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240869823,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240869823,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,"Can you explain why objectGUID is the appropriate UUID field for a group, versus distinguishedName?",30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 03:11:56,240869937,"@@ -48,7 +50,7 @@
 }
 
 GROUP_TRANSFORM = {
-    ""role_id"": {""azure"": ""id"", ""ldap"": ""objectGUID""},
+    ""role_id"": {""azure"": ""id"", ""ldap"": ""distinguishedName""},",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240869937,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240869937,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,resolved,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 03:59:57,240875800,"@@ -0,0 +1,128 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+"""""" Sawtooth Inbound Transaction Queue Listener
+""""""
+
+from rethinkdb import r
+from sawtooth_sdk.protobuf import batch_pb2
+
+from rbac.common.logs import getLogger
+from rbac.common.sawtooth import client
+from rbac.common.sawtooth import batcher
+from rbac.ledger_sync.database import Database
+
+
+LOGGER = getLogger(__name__)
+
+
+def process(rec, database):
+    """""" Process inbound queue records
+    """"""
+    try:
+        if ""batch"" not in rec or not rec[""batch""]:
+            database.run_query(
+                database.get_table(""inbound_queue"").get(rec[""id""]).delete()
+            )
+            database.run_query(database.get_table(""inbound_queue_errors"").insert(rec))
+            return
+
+        batch = batch_pb2.Batch()
+        batch.ParseFromString(rec[""batch""])
+        batch_list = batcher.batch_to_list(batch=batch)
+        status = client.send_batches_get_status(batch_list=batch_list)
+        if status[0][""status""] == ""COMMITTED"":
+            if ""metadata"" in rec and rec[""metadata""]:
+                query = (
+                    database.get_table(""metadata"")
+                    .get(rec[""address""])
+                    .replace(
+                        lambda doc: r.branch(
+                            # pylint: disable=singleton-comparison
+                            (doc == None),  # noqa
+                            r.expr(
+                                {
+                                    ""address"": rec[""address""],
+                                    ""object_type"": rec[""object_type""],
+                                    ""object_id"": rec[""object_id""],
+                                    ""metadata"": rec[""metadata""],
+                                    ""created_at"": rec[""timestamp""],
+                                    ""updated_at"": rec[""timestamp""],
+                                }
+                            ),
+                            doc.merge(
+                                {
+                                    ""metadata"": rec[""metadata""],
+                                    ""updated_at"": rec[""timestamp""],
+                                }
+                            ),
+                        )
+                    )
+                )
+                result = database.run_query(query)
+                if (not result[""inserted""] and not result[""replaced""]) or result[
+                    ""errors""
+                ] > 0:
+                    LOGGER.warning(
+                        ""error updating metadata record:\n%s\n%s"", result, query
+                    )
+            database.run_query(database.get_table(""inbound_queue_archive"").insert(rec))
+            database.run_query(
+                database.get_table(""inbound_queue"").get(rec[""id""]).delete()
+            )
+        else:
+            rec[""error""] = status[0][""invalid_transactions""][0][""message""]
+            database.run_query(database.get_table(""inbound_queue_errors"").insert(rec))
+            database.run_query(
+                database.get_table(""inbound_queue"").get(rec[""id""]).delete()
+            )
+    except Exception as err:  # pylint: disable=broad-except
+        LOGGER.exception(
+            ""%s exeption proccessing inbound record:\n%s"", type(err).__name__, rec
+        )
+        LOGGER.exception(err)
+
+
+def listener():
+    """""" Listener for Sawtooth State changes
+    """"""
+    try:
+        database = Database()
+        database.connect()
+
+        LOGGER.info(""Reading queued Sawtooth transactions"")
+        while True:
+            feed = database.run_query(database.get_table(""inbound_queue""))
+            count = 0
+            for rec in feed:
+                process(rec, database)
+                count = count + 1
+            if count == 0:
+                break
+            LOGGER.info(""Processed %s records in the inbound queue"", count)
+        LOGGER.info(""Listening for incoming Sawtooth transactions"")
+        feed = database.run_query(database.get_table(""inbound_queue"").changes())
+        for rec in feed:
+            if rec[""new_val""] and not rec[""old_val""]:  # only insertions
+                process(rec[""new_val""], database)
+
+    except Exception as err:  # pylint: disable=broad-except
+        LOGGER.exception(""Outbound listener %s exception"", type(err).__name__)",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240875800,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240875800,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,resolved,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 04:00:08,240875815,"@@ -97,3 +98,7 @@
     ""owners"": {""azure"": ""owners"", ""ldap"": ""managedBy""},
     ""visibility"": {""azure"": ""visibility"", ""ldap"": None},
 }
+
+STANDARD_USER_TRANSFORM = {""name"": {""name"", ""given_name"", ""user_nickname""}}
+
+STANDARD_GROUP_TRANSFORM = {}",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240875815,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240875815,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,resolved,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 04:00:28,240875839,"@@ -93,7 +95,9 @@ def insert_to_db(data_dict, data_type):
             ""sync_type"": ""initial"",
             ""timestamp"": datetime.now().replace(tzinfo=timezone.utc).isoformat(),
             ""provider_id"": LDAP_DC,
+            ""raw"": entry_data,
         }
+        add_transaction(inbound_entry)",32,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240875839,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240875839,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,See prior comments,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 04:00:52,240875885,"@@ -76,7 +76,7 @@ def test_outbound_user_filter_bad_provider():
 def test_outbound_group_filter():
     """""" Test outbound group filter with valid user """"""
     result = outbound_group_filter({""role_id"": 1234}, ""ldap"")
-    assert result[""objectGUID""] == 1234
+    assert result[""distinguishedName""] == 1234",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240875885,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240875885,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,resolved,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 04:01:13,240875924,"@@ -37,12 +51,33 @@ def inbound_group_filter(group, provider):
     :param: group > dict > a dictionary representing a group
     :param: provider > str > inbound provider type (azure, ldap)
     """"""
-    if provider != ""azure"" and provider != ""ldap"":
+    if provider not in (""azure"", ""ldap""):
         raise TypeError(""Provider must be specified with a valid option."")
     clean_group = {}
-    for key, value in GROUP_TRANSFORM.items():
-        if value[provider] in group:
-            clean_group[key] = group[value[provider]]
-        else:
-            clean_group[key] = None
+    for key, alias in GROUP_TRANSFORM.items():
+        if alias[provider] in group:
+            value = inbound_value_filter(group[alias[provider]])
+            if value:
+                clean_group[key] = value
+    for key, aliases in STANDARD_GROUP_TRANSFORM.items():",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240875924,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240875924,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,There are 67 records out of 907 records in DC=clouddev that have no value for [name].,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 04:21:23,240878152,"@@ -12,23 +12,37 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
-
-from rbac.providers.common.provider_transforms import GROUP_TRANSFORM, USER_TRANSFORM
+"""""" Filters for inbound data fields
+""""""
+from rbac.providers.common.provider_transforms import (
+    GROUP_TRANSFORM,
+    USER_TRANSFORM,
+    STANDARD_USER_TRANSFORM,
+    STANDARD_GROUP_TRANSFORM,
+)
 
 
 def inbound_user_filter(user, provider):
     """"""Takes in a user dict from a provider and standardizes the dict and returns it.
     :param: user > dict > a dictionary representing a user
     :param: provider > str > inbound provider type (azure, ldap)
     """"""
-    if provider != ""azure"" and provider != ""ldap"":
+    if provider not in (""azure"", ""ldap""):
         raise TypeError(""Provider must be specified with a valid option."")
     clean_user = {}
-    for key, value in USER_TRANSFORM.items():
-        if value[provider] in user:
-            clean_user[key] = user[value[provider]]
-        else:
-            clean_user[key] = None
+    for key, alias in USER_TRANSFORM.items():
+        if alias[provider] in user:
+            value = inbound_value_filter(user[alias[provider]])
+            if value:
+                clean_user[key] = value
+    for key, aliases in STANDARD_USER_TRANSFORM.items():",34,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240878152,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240878152,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,Uh oh. We should discuss the implications w/respect to the providers.,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-12 07:38:11,240906602,"@@ -93,7 +96,10 @@ def insert_to_db(data_dict, data_type):
             ""sync_type"": ""initial"",
             ""timestamp"": datetime.now().replace(tzinfo=timezone.utc).isoformat(),
             ""provider_id"": LDAP_DC,
+            ""raw"": entry_data,
         }
+        # TODO: add_transaction will likely need to be included here for security purposes",,2018-12-13 00:55:58,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/240906602,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r240906602,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,Reverted,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-13 00:57:06,241240225,"@@ -12,9 +12,11 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
+"""""" Transforms incoming data based on key names and provider type
+""""""
 
 USER_TRANSFORM = {
-    ""user_id"": {""azure"": ""id"", ""ldap"": ""objectGUID""},
+    ""user_id"": {""azure"": ""id"", ""ldap"": ""distinguishedName""},",,2018-12-13 00:57:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241240225,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r241240225,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,Reverted,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-13 00:57:25,241240286,"@@ -48,7 +50,7 @@
 }
 
 GROUP_TRANSFORM = {
-    ""role_id"": {""azure"": ""id"", ""ldap"": ""objectGUID""},
+    ""role_id"": {""azure"": ""id"", ""ldap"": ""distinguishedName""},",,2018-12-13 00:57:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241240286,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r241240286,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,Reverted,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-13 00:57:31,241240301,"@@ -76,7 +76,7 @@ def test_outbound_user_filter_bad_provider():
 def test_outbound_group_filter():
     """""" Test outbound group filter with valid user """"""
     result = outbound_group_filter({""role_id"": 1234}, ""ldap"")
-    assert result[""objectGUID""] == 1234
+    assert result[""distinguishedName""] == 1234",,2018-12-13 00:57:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241240301,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r241240301,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/769,https://github.com/hyperledger/sawtooth-next-directory/pull/769,Leaving per info above.,30aaec9eedcf9c969a82b8c56ae223b0c0ed2c73,2018-12-13 00:57:54,241240362,"@@ -12,23 +12,37 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
-
-from rbac.providers.common.provider_transforms import GROUP_TRANSFORM, USER_TRANSFORM
+"""""" Filters for inbound data fields
+""""""
+from rbac.providers.common.provider_transforms import (
+    GROUP_TRANSFORM,
+    USER_TRANSFORM,
+    STANDARD_USER_TRANSFORM,
+    STANDARD_GROUP_TRANSFORM,
+)
 
 
 def inbound_user_filter(user, provider):
     """"""Takes in a user dict from a provider and standardizes the dict and returns it.
     :param: user > dict > a dictionary representing a user
     :param: provider > str > inbound provider type (azure, ldap)
     """"""
-    if provider != ""azure"" and provider != ""ldap"":
+    if provider not in (""azure"", ""ldap""):
         raise TypeError(""Provider must be specified with a valid option."")
     clean_user = {}
-    for key, value in USER_TRANSFORM.items():
-        if value[provider] in user:
-            clean_user[key] = user[value[provider]]
-        else:
-            clean_user[key] = None
+    for key, alias in USER_TRANSFORM.items():
+        if alias[provider] in user:
+            value = inbound_value_filter(user[alias[provider]])
+            if value:
+                clean_user[key] = value
+    for key, aliases in STANDARD_USER_TRANSFORM.items():",34,2018-12-13 00:57:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/241240362,https://github.com/hyperledger/sawtooth-next-directory/pull/769#discussion_r241240362,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/762,https://github.com/hyperledger/sawtooth-next-directory/pull/762,"Should we set the logging level to INFO?
",17571b35cc25d6d7dba5117a75fb3270863b53ce,2018-12-08 01:08:41,239986000,"@@ -12,5 +12,74 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
+import sys
+import logging
+from rbac.providers.common.expected_errors import ValidationException
 
-# TODO: Add validation for LDAP sync payloads
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.DEBUG",,2018-12-08 02:56:14,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239986000,https://github.com/hyperledger/sawtooth-next-directory/pull/762#discussion_r239986000,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/762,https://github.com/hyperledger/sawtooth-next-directory/pull/762,It has been updated to INFO logging level. I copied this from expected_errors.py and I have changed it on that file too.,17571b35cc25d6d7dba5117a75fb3270863b53ce,2018-12-08 01:12:51,239986327,"@@ -12,5 +12,74 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
+import sys
+import logging
+from rbac.providers.common.expected_errors import ValidationException
 
-# TODO: Add validation for LDAP sync payloads
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.DEBUG",,2018-12-08 02:56:14,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239986327,https://github.com/hyperledger/sawtooth-next-directory/pull/762#discussion_r239986327,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/762,https://github.com/hyperledger/sawtooth-next-directory/pull/762,"awesome! sounds good, thanks!",17571b35cc25d6d7dba5117a75fb3270863b53ce,2018-12-08 01:13:35,239986387,"@@ -12,5 +12,74 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
+import sys
+import logging
+from rbac.providers.common.expected_errors import ValidationException
 
-# TODO: Add validation for LDAP sync payloads
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.DEBUG",,2018-12-08 02:56:14,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239986387,https://github.com/hyperledger/sawtooth-next-directory/pull/762#discussion_r239986387,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/752,https://github.com/hyperledger/sawtooth-next-directory/pull/752,Nitpick: This last generic block can go away,38e2ae0fce36218321ba1fed9695b0415f37c85a,2018-12-07 17:53:56,239892633,"@@ -60,6 +64,44 @@ def connect_to_db():
         )
 
 
+def get_last_sync(source, sync_type):
+    """"""
+        Search and get last sync entry from the specified source. Throws
+        ExpectedError if sync_tracker table has not been initialized.
+    """"""
+    try:
+        last_sync = (
+            r.table(""sync_tracker"")
+            .filter({""source"": source, ""sync_type"": sync_type})
+            .max(""timestamp"")
+            .coerce_to(""object"")
+            .run()
+        )
+        return last_sync
+    except (r.ReqlOpFailedError, r.ReqlDriverError) as err:
+        raise ExpectedError(err)
+    except r.ReqlNonExistenceError:
+        LOGGER.debug(""The sync_tracker table is empty."")
+    except Exception as err:",39,2018-12-07 17:53:57,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239892633,https://github.com/hyperledger/sawtooth-next-directory/pull/752#discussion_r239892633,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,needs to be outbound_queue,72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-06 23:31:45,239653319,"@@ -37,7 +37,7 @@
 logging.basicConfig(level=logging.INFO)
 LOGGER = logging.getLogger(__name__)
 
-DEFAULT_CONFIG = {""DELAY"": ""1"", ""OUTBOUND_QUEUE"": ""outbound_queue""}
+DEFAULT_CONFIG = {""DELAY"": 1, ""OUTBOUND_QUEUE"": ""queue_outbound""}",,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239653319,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239653319,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,change to inbound_queue,72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-06 23:33:20,239653627,"@@ -17,3 +17,61 @@
 A receiver module that pulls entries from the inbound queue table in rethinkdb
 and updates the blockchain state in rethinkdb.
 """"""
+
+import os
+import time
+import logging
+import rethinkdb as r
+from rbac.providers.common.expected_errors import ExpectedError
+from rbac.providers.common.rethink_db import (
+    connect_to_db,
+    peek_at_queue,
+    put_entry_changelog,
+    delete_entry_queue,
+)
+
+DEFAULT_CONFIG = {""DELAY"": 1, ""INBOUND_QUEUE"": ""queue_inbound""}",,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239653627,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239653627,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,Why remove the versions from some dependencies?,72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:07:29,239659687,"@@ -47,8 +47,9 @@ WORKDIR /project/hyperledger-rbac
 # Container-specific dependencies are installed separately for
 # optimizing caching
 RUN pip3 install \
-        ldap3==2.5.1 \
+        rethinkdb \
+        ldap3 \
         pyasn1==0.4.4 \
-        pytz==2018.6
+        pytz",,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239659687,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239659687,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,"I know this has gone a few rounds at this point, but there is an integration change underway where we will be signing transactions that go into sawtooth. ",72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:12:33,239660531,"@@ -13,32 +13,11 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-# -----------------------------------------------------------------------------
-# Begin base docker image config for Hyperledger RBAC Next Directory
-# This should remain the same for all python containers to maximize caching
-# -----------------------------------------------------------------------------
-FROM hyperledger/sawtooth-validator:1.0
-
-RUN apt-get update \
- && apt-get install -y --allow-unauthenticated -q \
-        python3-pip \
-        python3-sawtooth-sdk \
- && apt-get clean \
- && rm -rf /var/lib/apt/lists/*
-RUN apt-get update && apt-get install -y  apt-utils
-
-RUN pip3 install -U pip setuptools
+FROM python:3.5-slim",19,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239660531,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239660531,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,This is not using a database connection to act on rethink. It needs to. ,72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:15:54,239661096,"@@ -60,18 +60,22 @@ def connect_to_db():
         )
 
 
-def peek_at_queue(table_name, provider_id):
+def peek_at_queue(table_name, provider_id=None):
     """"""Returns a single entry from table_name with the oldest timestamp and matching
     provider_id.""""""
     try:
-        queue_entry = (
-            r.table(table_name)
-            .filter({""provider_id"": provider_id})
-            .min(""timestamp"")
-            .coerce_to(""object"")
-            .run()
-        )
-        return queue_entry
+        if provider_id:
+            queue_entry = (
+                r.table(table_name)",28,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239661096,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239661096,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,"oops, my bad, reverting.",72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:17:34,239661382,"@@ -47,8 +47,9 @@ WORKDIR /project/hyperledger-rbac
 # Container-specific dependencies are installed separately for
 # optimizing caching
 RUN pip3 install \
-        ldap3==2.5.1 \
+        rethinkdb \
+        ldap3 \
         pyasn1==0.4.4 \
-        pytz==2018.6
+        pytz",,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239661382,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239661382,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,"This last block can go away since it is basically catching an Exception, logging its contents, and propagating it. Depending on what happens upstream, this could result in the exception showing up twice in the logs",72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:18:05,239661467,"@@ -17,3 +17,61 @@
 A receiver module that pulls entries from the inbound queue table in rethinkdb
 and updates the blockchain state in rethinkdb.
 """"""
+
+import os
+import time
+import logging
+from rbac.providers.common.expected_errors import ExpectedError
+from rbac.providers.common.rethink_db import (
+    connect_to_db,
+    peek_at_queue,
+    put_entry_changelog,
+    delete_entry_queue,
+)
+
+DEFAULT_CONFIG = {""DELAY"": 1, ""INBOUND_QUEUE"": ""inbound_queue""}
+
+DELAY = os.environ.get(""DELAY"", DEFAULT_CONFIG[""DELAY""])
+INBOUND_QUEUE = os.getenv(""INBOUND_QUEUE"", DEFAULT_CONFIG[""INBOUND_QUEUE""])
+DIRECTION = ""sawtooth""
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+
+def inbound_sync_listener():
+    """"""Initialize a delta inbound sync between the inbound queue and sawtooth.""""""
+    LOGGER.info(""Starting inbound sync listener..."")
+
+    LOGGER.info(""Connecting to RethinkDB..."")
+    connect_to_db()
+    LOGGER.info(""Successfully connected to RethinkDB!"")
+
+    while True:
+        try:
+            queue_entry = peek_at_queue(INBOUND_QUEUE)
+            LOGGER.info(
+                ""Received queue entry %s from outbound queue..."", queue_entry[""id""]
+            )
+
+            data_type = queue_entry[""data_type""]
+            LOGGER.info(""Putting %s into Sawtooth..."", data_type)
+            # TODO: Validate queue_entry.
+            # TODO: Transform or reject invalid entries.
+            # TODO: Get queue_entry object from NEXT state table.
+            # TODO: Update object or create if it doesn't exist.
+            LOGGER.debug(queue_entry)
+
+            LOGGER.info(""Putting queue entry into changelog..."")
+            put_entry_changelog(queue_entry, DIRECTION)
+
+            LOGGER.info(""Deleting queue entry from outbound queue..."")
+            entry_id = queue_entry[""id""]
+            delete_entry_queue(entry_id, INBOUND_QUEUE)
+        except ExpectedError as err:
+            LOGGER.debug((""%s Repolling after %s seconds..."", err.__str__, DELAY))
+            time.sleep(DELAY)
+        except Exception as err:",58,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239661467,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239661467,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,We discussed. This is on the radar,72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:24:52,239662492,"@@ -60,18 +60,22 @@ def connect_to_db():
         )
 
 
-def peek_at_queue(table_name, provider_id):
+def peek_at_queue(table_name, provider_id=None):
     """"""Returns a single entry from table_name with the oldest timestamp and matching
     provider_id.""""""
     try:
-        queue_entry = (
-            r.table(table_name)
-            .filter({""provider_id"": provider_id})
-            .min(""timestamp"")
-            .coerce_to(""object"")
-            .run()
-        )
-        return queue_entry
+        if provider_id:
+            queue_entry = (
+                r.table(table_name)",28,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239662492,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239662492,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,"yup yup. 3.5-slim is lightweight and will allow us to pull the signing libraries when we need them so it hsould be a good middleground and allow fast builds for dev.
https://github.com/docker-library/python/blob/39c500cc8aefcb67a76d518d789441ef85fc771f/3.5/stretch/slim/Dockerfile",72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:28:45,239663095,"@@ -13,32 +13,11 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-# -----------------------------------------------------------------------------
-# Begin base docker image config for Hyperledger RBAC Next Directory
-# This should remain the same for all python containers to maximize caching
-# -----------------------------------------------------------------------------
-FROM hyperledger/sawtooth-validator:1.0
-
-RUN apt-get update \
- && apt-get install -y --allow-unauthenticated -q \
-        python3-pip \
-        python3-sawtooth-sdk \
- && apt-get clean \
- && rm -rf /var/lib/apt/lists/*
-RUN apt-get update && apt-get install -y  apt-utils
-
-RUN pip3 install -U pip setuptools
+FROM python:3.5-slim",19,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239663095,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239663095,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,"agreed, Task #580 addresses this",72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:29:33,239663245,"@@ -60,18 +60,22 @@ def connect_to_db():
         )
 
 
-def peek_at_queue(table_name, provider_id):
+def peek_at_queue(table_name, provider_id=None):
     """"""Returns a single entry from table_name with the oldest timestamp and matching
     provider_id.""""""
     try:
-        queue_entry = (
-            r.table(table_name)
-            .filter({""provider_id"": provider_id})
-            .min(""timestamp"")
-            .coerce_to(""object"")
-            .run()
-        )
-        return queue_entry
+        if provider_id:
+            queue_entry = (
+                r.table(table_name)",28,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239663245,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239663245,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,having the level set to debug should keep it from showing up multiple times in logs. With the same logic it's not really doing anything so I'm down to remove it.  one sec.,72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:30:46,239663399,"@@ -17,3 +17,61 @@
 A receiver module that pulls entries from the inbound queue table in rethinkdb
 and updates the blockchain state in rethinkdb.
 """"""
+
+import os
+import time
+import logging
+from rbac.providers.common.expected_errors import ExpectedError
+from rbac.providers.common.rethink_db import (
+    connect_to_db,
+    peek_at_queue,
+    put_entry_changelog,
+    delete_entry_queue,
+)
+
+DEFAULT_CONFIG = {""DELAY"": 1, ""INBOUND_QUEUE"": ""inbound_queue""}
+
+DELAY = os.environ.get(""DELAY"", DEFAULT_CONFIG[""DELAY""])
+INBOUND_QUEUE = os.getenv(""INBOUND_QUEUE"", DEFAULT_CONFIG[""INBOUND_QUEUE""])
+DIRECTION = ""sawtooth""
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+
+def inbound_sync_listener():
+    """"""Initialize a delta inbound sync between the inbound queue and sawtooth.""""""
+    LOGGER.info(""Starting inbound sync listener..."")
+
+    LOGGER.info(""Connecting to RethinkDB..."")
+    connect_to_db()
+    LOGGER.info(""Successfully connected to RethinkDB!"")
+
+    while True:
+        try:
+            queue_entry = peek_at_queue(INBOUND_QUEUE)
+            LOGGER.info(
+                ""Received queue entry %s from outbound queue..."", queue_entry[""id""]
+            )
+
+            data_type = queue_entry[""data_type""]
+            LOGGER.info(""Putting %s into Sawtooth..."", data_type)
+            # TODO: Validate queue_entry.
+            # TODO: Transform or reject invalid entries.
+            # TODO: Get queue_entry object from NEXT state table.
+            # TODO: Update object or create if it doesn't exist.
+            LOGGER.debug(queue_entry)
+
+            LOGGER.info(""Putting queue entry into changelog..."")
+            put_entry_changelog(queue_entry, DIRECTION)
+
+            LOGGER.info(""Deleting queue entry from outbound queue..."")
+            entry_id = queue_entry[""id""]
+            delete_entry_queue(entry_id, INBOUND_QUEUE)
+        except ExpectedError as err:
+            LOGGER.debug((""%s Repolling after %s seconds..."", err.__str__, DELAY))
+            time.sleep(DELAY)
+        except Exception as err:",58,2018-12-07 00:31:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239663399,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239663399,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/748,https://github.com/hyperledger/sawtooth-next-directory/pull/748,it's gone,72ef78e8f19a6b1e01b73887c727d8eb0101de5f,2018-12-07 00:34:06,239663923,"@@ -17,3 +17,61 @@
 A receiver module that pulls entries from the inbound queue table in rethinkdb
 and updates the blockchain state in rethinkdb.
 """"""
+
+import os
+import time
+import logging
+from rbac.providers.common.expected_errors import ExpectedError
+from rbac.providers.common.rethink_db import (
+    connect_to_db,
+    peek_at_queue,
+    put_entry_changelog,
+    delete_entry_queue,
+)
+
+DEFAULT_CONFIG = {""DELAY"": 1, ""INBOUND_QUEUE"": ""inbound_queue""}
+
+DELAY = os.environ.get(""DELAY"", DEFAULT_CONFIG[""DELAY""])
+INBOUND_QUEUE = os.getenv(""INBOUND_QUEUE"", DEFAULT_CONFIG[""INBOUND_QUEUE""])
+DIRECTION = ""sawtooth""
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+
+def inbound_sync_listener():
+    """"""Initialize a delta inbound sync between the inbound queue and sawtooth.""""""
+    LOGGER.info(""Starting inbound sync listener..."")
+
+    LOGGER.info(""Connecting to RethinkDB..."")
+    connect_to_db()
+    LOGGER.info(""Successfully connected to RethinkDB!"")
+
+    while True:
+        try:
+            queue_entry = peek_at_queue(INBOUND_QUEUE)
+            LOGGER.info(
+                ""Received queue entry %s from outbound queue..."", queue_entry[""id""]
+            )
+
+            data_type = queue_entry[""data_type""]
+            LOGGER.info(""Putting %s into Sawtooth..."", data_type)
+            # TODO: Validate queue_entry.
+            # TODO: Transform or reject invalid entries.
+            # TODO: Get queue_entry object from NEXT state table.
+            # TODO: Update object or create if it doesn't exist.
+            LOGGER.debug(queue_entry)
+
+            LOGGER.info(""Putting queue entry into changelog..."")
+            put_entry_changelog(queue_entry, DIRECTION)
+
+            LOGGER.info(""Deleting queue entry from outbound queue..."")
+            entry_id = queue_entry[""id""]
+            delete_entry_queue(entry_id, INBOUND_QUEUE)
+        except ExpectedError as err:
+            LOGGER.debug((""%s Repolling after %s seconds..."", err.__str__, DELAY))
+            time.sleep(DELAY)
+        except Exception as err:",58,2018-12-07 00:34:07,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239663923,https://github.com/hyperledger/sawtooth-next-directory/pull/748#discussion_r239663923,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/746,https://github.com/hyperledger/sawtooth-next-directory/pull/746,"`rbac-providers-ldap    | rethinkdb.errors.ReqlOpFailedError: Table `rbac.queue_inbound` does not exist in:`

I think the table name needs to be changed",f553c3fb377ab81e093f9b1e80d30032bd741680,2018-12-06 22:40:00,239641720,"@@ -86,91 +79,56 @@ def fetch_ldap_data(data_type):
         search_filter=search_filter,
         attributes=ldap3.ALL_ATTRIBUTES,
     )
-    for entry in ldap_conn.entries:
-        LOGGER.info(entry.whenChanged.value)
 
-    insert_to_db(data_dict=ldap_conn.entries, data_type=data_type)
-    provider_id = LDAP_DC
-    # TODO: Save one time for delta sync
-    save_sync_time(provider_id, sync_source, ""delta"")
+    parsed_last_sync_time = datetime.strptime(last_sync_time.split(""+"")[0], ""%Y-%m-%dT%H:%M:%S.%f"").replace(tzinfo=timezone.utc)
+    insert_to_db(data_dict=ldap_conn.entries, when_changed=parsed_last_sync_time) 
 
 
-def insert_to_db(data_dict, data_type):
+def insert_to_db(data_dict, when_changed):
     """"""Insert (Users | Groups) individually to RethinkDB from dict of data and begins delta sync timer.""""""
+    insertion_counter = 0
     for entry in data_dict:
-        entry_data = json.loads(entry.entry_to_json())[""attributes""]
-        if data_type == ""user"":
-            standardized_entry = inbound_user_filter(entry_data, ""ldap"")
-        elif data_type == ""group"":
-            standardized_entry = inbound_group_filter(entry_data, ""ldap"")
-        inbound_entry = {
-            ""data"": standardized_entry,
-            ""data_type"": data_type,
-            ""timestamp"": datetime.now().replace(tzinfo=timezone.utc).isoformat(),
-            ""provider_id"": LDAP_DC,
-        }
-        r.table(""queue_inbound"").insert(inbound_entry).run()",98,2018-12-06 22:53:16,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239641720,https://github.com/hyperledger/sawtooth-next-directory/pull/746#discussion_r239641720,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/746,https://github.com/hyperledger/sawtooth-next-directory/pull/746,"Nadia is working on a PR with a bugfix, so I'm approving.",f553c3fb377ab81e093f9b1e80d30032bd741680,2018-12-06 22:48:11,239643868,"@@ -86,91 +79,56 @@ def fetch_ldap_data(data_type):
         search_filter=search_filter,
         attributes=ldap3.ALL_ATTRIBUTES,
     )
-    for entry in ldap_conn.entries:
-        LOGGER.info(entry.whenChanged.value)
 
-    insert_to_db(data_dict=ldap_conn.entries, data_type=data_type)
-    provider_id = LDAP_DC
-    # TODO: Save one time for delta sync
-    save_sync_time(provider_id, sync_source, ""delta"")
+    parsed_last_sync_time = datetime.strptime(last_sync_time.split(""+"")[0], ""%Y-%m-%dT%H:%M:%S.%f"").replace(tzinfo=timezone.utc)
+    insert_to_db(data_dict=ldap_conn.entries, when_changed=parsed_last_sync_time) 
 
 
-def insert_to_db(data_dict, data_type):
+def insert_to_db(data_dict, when_changed):
     """"""Insert (Users | Groups) individually to RethinkDB from dict of data and begins delta sync timer.""""""
+    insertion_counter = 0
     for entry in data_dict:
-        entry_data = json.loads(entry.entry_to_json())[""attributes""]
-        if data_type == ""user"":
-            standardized_entry = inbound_user_filter(entry_data, ""ldap"")
-        elif data_type == ""group"":
-            standardized_entry = inbound_group_filter(entry_data, ""ldap"")
-        inbound_entry = {
-            ""data"": standardized_entry,
-            ""data_type"": data_type,
-            ""timestamp"": datetime.now().replace(tzinfo=timezone.utc).isoformat(),
-            ""provider_id"": LDAP_DC,
-        }
-        r.table(""queue_inbound"").insert(inbound_entry).run()",98,2018-12-06 22:53:16,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239643868,https://github.com/hyperledger/sawtooth-next-directory/pull/746#discussion_r239643868,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/746,https://github.com/hyperledger/sawtooth-next-directory/pull/746,"Unrelated to this PR, but still in use here: connect_to_db()

Reminder: You will need to be returning a connection from that and using it and/or connecting on a per-query basis since RethinkDb is not thread safe. Absolutely do not open a REPL in the background and rely on it for database operations. ",f553c3fb377ab81e093f9b1e80d30032bd741680,2018-12-06 22:51:11,239644648,"@@ -122,6 +118,8 @@ def initialize_ldap_sync():
     if LDAP_DC:
         connect_to_db()",34,2018-12-06 22:53:16,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239644648,https://github.com/hyperledger/sawtooth-next-directory/pull/746#discussion_r239644648,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/746,https://github.com/hyperledger/sawtooth-next-directory/pull/746,"We already have a task open to fix that, #580 ",f553c3fb377ab81e093f9b1e80d30032bd741680,2018-12-06 22:57:52,239646126,"@@ -122,6 +118,8 @@ def initialize_ldap_sync():
     if LDAP_DC:
         connect_to_db()",34,2018-12-06 22:57:52,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239646126,https://github.com/hyperledger/sawtooth-next-directory/pull/746#discussion_r239646126,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/743,https://github.com/hyperledger/sawtooth-next-directory/pull/743,We should probably include the underlying cause of the thrown Exception in the new one.,9ea3f0615b9e6c7cd1e4b435cc9cbba073d248ae,2018-12-06 21:12:27,239616029,"@@ -41,8 +47,37 @@ def make_payload(message, message_type, inputs, outputs):
     )
 
 
+def get_proto(message_type):
+    """"""Attempts to get the protobuf associated with a message type
+    given the message type name. Can find most protobufs via
+    this method. Used only for testing purposes by unmake.
+    """"""
+    name = get_message_type_name(message_type)
+    name_parts = name.split(""_"")
+    try:
+        if len(name_parts) >= 4:
+            # e.g. PROPOSE_REMOVE_ROLE_ADMIN -> role
+            object_type = name_parts[2].lower()
+        else:
+            # e.g. CREATE_USER -> user
+            object_type = name_parts[1].lower()
+
+        proto = getattr(
+            getattr(protobuf, object_type + ""_transaction_pb2""),
+            name.title().replace(""_"", """"),  # camel case the message type name
+        )
+        return proto()
+    except Exception:
+        raise Exception(
+            ""get_proto couldn't discover the protobuf for message type {}"".format(name)",63,2018-12-06 21:17:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239616029,https://github.com/hyperledger/sawtooth-next-directory/pull/743#discussion_r239616029,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/743,https://github.com/hyperledger/sawtooth-next-directory/pull/743,nitpick: 'its',9ea3f0615b9e6c7cd1e4b435cc9cbba073d248ae,2018-12-06 21:13:38,239616387,"@@ -41,8 +47,37 @@ def make_payload(message, message_type, inputs, outputs):
     )
 
 
+def get_proto(message_type):
+    """"""Attempts to get the protobuf associated with a message type
+    given the message type name. Can find most protobufs via
+    this method. Used only for testing purposes by unmake.
+    """"""
+    name = get_message_type_name(message_type)
+    name_parts = name.split(""_"")
+    try:
+        if len(name_parts) >= 4:
+            # e.g. PROPOSE_REMOVE_ROLE_ADMIN -> role
+            object_type = name_parts[2].lower()
+        else:
+            # e.g. CREATE_USER -> user
+            object_type = name_parts[1].lower()
+
+        proto = getattr(
+            getattr(protobuf, object_type + ""_transaction_pb2""),
+            name.title().replace(""_"", """"),  # camel case the message type name
+        )
+        return proto()
+    except Exception:
+        raise Exception(
+            ""get_proto couldn't discover the protobuf for message type {}"".format(name)
+        )
+    return None
+
+
 def unmake_payload(payload):
-    """"""Turn a payload back into a message given it's message type""""""
+    """"""Turn a payload back into a message given it's message type",70,2018-12-06 21:17:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239616387,https://github.com/hyperledger/sawtooth-next-directory/pull/743#discussion_r239616387,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/741,https://github.com/hyperledger/sawtooth-next-directory/pull/741,Dot notation fix,a18fa58bfd8f957c250a78ce8466355e206326f4,2018-12-05 23:43:24,239281057,"@@ -0,0 +1,177 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+import os
+import sys
+import json
+import logging
+import time
+from datetime import datetime, timezone
+import threading
+import rethinkdb as r
+import ldap3
+from ldap3 import ALL, Connection, Server
+
+from rbac.providers.common.rethink_db import connect_to_db
+from rbac.providers.common.common import save_sync_time, check_last_sync
+from rbac.providers.common import inbound_filters
+from rbac.providers.ldap.ldap_payload_mapper import to_date_ldap_query
+
+DELAY = os.environ.get(""DELAY"")
+LDAP_DC = os.getenv(""LDAP_DC"")
+LDAP_SERVER = os.getenv(""LDAP_SERVER"")
+LDAP_USER = os.getenv(""LDAP_USER"")
+LDAP_PASS = os.getenv(""LDAP_PASS"")
+DELTA_SYNC_INTERVAL_SECONDS = float(os.getenv(""DELTA_SYNC_INTERVAL_SECONDS"", ""3600""))
+
+LDAP_FILTER_USER_DELTA = ""(&(objectClass=person)(whenChanged>=%s))""
+LDAP_FILTER_GROUP_DELTA = ""(&(objectClass=group)(whenChanged>=%s))""
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+# TODO: Fix redundancy in function calls
+
+
+def fetch_ldap_data(data_type):
+    """"""
+        Call to get entries for all (Users | Groups) in Active Directory, saves the time of the sync,
+        and inserts data into RethinkDB.
+    """"""
+    # TODO: Put this function into a try catch
+    LOGGER.debug(""Connecting to RethinkDB..."")
+    connect_to_db()
+    LOGGER.debug(""Successfully connected to RethinkDB"")
+
+    sync_source = ""ldap-"" + data_type
+
+    last_sync = (
+        r.table(""sync_tracker"")
+        .filter({""provider_id"": LDAP_DC, ""source"": sync_source})
+        .max(""timestamp"")
+        .coerce_to(""object"")
+        .run()
+    )
+
+    # FIXME: There is currently an issue where time stored in Rethink does not match the time in AD
+    last_sync_time = to_date_ldap_query(
+        rethink_timestamp=last_sync[""timestamp""]
+    )
+    if data_type == ""user"":
+        search_filter = LDAP_FILTER_USER_DELTA % last_sync_time
+    elif data_type == ""group"":
+        search_filter = LDAP_FILTER_GROUP_DELTA % last_sync_time
+
+    server = Server(LDAP_SERVER, get_info=ALL)
+    ldap_conn = Connection(server, user=LDAP_USER, password=LDAP_PASS)
+    if not ldap_conn.bind():
+        LOGGER.error(
+            ""Error connecting to LDAP server %s : %s"", LDAP_SERVER, ldap_conn.result
+        )
+    ldap_conn.search(
+        search_base=LDAP_DC,
+        search_filter=search_filter,
+        attributes=ldap3.ALL_ATTRIBUTES,
+    )
+    for entry in ldap_conn.entries:
+        LOGGER.info(entry.whenChanged.value)
+
+    insert_to_db(data_dict=ldap_conn.entries, data_type=data_type)
+    provider_id = LDAP_DC
+    save_sync_time(provider_id, sync_source, ""delta"")
+
+
+def insert_to_db(data_dict, data_type):
+    """"""Insert (Users | Groups) individually to RethinkDB from dict of data and begins delta sync timer.""""""
+    for entry in data_dict:
+        entry_data = json.loads(entry.entry_to_json())[""attributes""]
+        if data_type == ""user"":
+            standardized_entry = inbound_filters.inbound_user_filter(entry_data, ""ldap"")",,2018-12-06 00:20:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239281057,https://github.com/hyperledger/sawtooth-next-directory/pull/741#discussion_r239281057,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/741,https://github.com/hyperledger/sawtooth-next-directory/pull/741,Taken Care of Remove TODO,a18fa58bfd8f957c250a78ce8466355e206326f4,2018-12-05 23:44:00,239281203,"@@ -0,0 +1,177 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+import os
+import sys
+import json
+import logging
+import time
+from datetime import datetime, timezone
+import threading
+import rethinkdb as r
+import ldap3
+from ldap3 import ALL, Connection, Server
+
+from rbac.providers.common.rethink_db import connect_to_db
+from rbac.providers.common.common import save_sync_time, check_last_sync
+from rbac.providers.common import inbound_filters
+from rbac.providers.ldap.ldap_payload_mapper import to_date_ldap_query
+
+DELAY = os.environ.get(""DELAY"")
+LDAP_DC = os.getenv(""LDAP_DC"")
+LDAP_SERVER = os.getenv(""LDAP_SERVER"")
+LDAP_USER = os.getenv(""LDAP_USER"")
+LDAP_PASS = os.getenv(""LDAP_PASS"")
+DELTA_SYNC_INTERVAL_SECONDS = float(os.getenv(""DELTA_SYNC_INTERVAL_SECONDS"", ""3600""))
+
+LDAP_FILTER_USER_DELTA = ""(&(objectClass=person)(whenChanged>=%s))""
+LDAP_FILTER_GROUP_DELTA = ""(&(objectClass=group)(whenChanged>=%s))""
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+# TODO: Fix redundancy in function calls
+
+
+def fetch_ldap_data(data_type):
+    """"""
+        Call to get entries for all (Users | Groups) in Active Directory, saves the time of the sync,
+        and inserts data into RethinkDB.
+    """"""
+    # TODO: Put this function into a try catch",,2018-12-06 00:20:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239281203,https://github.com/hyperledger/sawtooth-next-directory/pull/741#discussion_r239281203,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,Minor: But isn't import * discouraged?,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 00:36:43,239291475,"@@ -0,0 +1,99 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the REST API endpoint""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name,unused-import,invalid-name
+
+import logging
+import json
+import requests
+import pytest
+
+from rbac.common.logs import getLogger
+from tests.rbac.test.fixtures import *",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239291475,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239291475,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,We don't need tests for utilities that we leverage to feed/generate/fixture test data. That said: There's little harm in having it here other than the need to evolve it alongside the model/payload.,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 00:47:21,239293700,"@@ -0,0 +1,59 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the common test fixtures""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name
+
+import pytest
+from tests.rbac.test.fixtures import *
+from tests.rbac.test.assertions import *
+
+from rbac.common.logs import getLogger
+
+LOGGER = getLogger(__name__)
+
+",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239293700,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239293700,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,"Yes, absolutely discouraged. This may or may not be a good exception.",be4862cea7888c550c1aba54679775739a31a714,2018-12-06 00:51:45,239294525,"@@ -0,0 +1,99 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the REST API endpoint""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name,unused-import,invalid-name
+
+import logging
+import json
+import requests
+import pytest
+
+from rbac.common.logs import getLogger
+from tests.rbac.test.fixtures import *",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239294525,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239294525,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,"Got it. An artifact of testing that the fixtures worked before actually using them. (For example, some of the test data methods aren't used yet).",be4862cea7888c550c1aba54679775739a31a714,2018-12-06 00:53:28,239294810,"@@ -0,0 +1,59 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the common test fixtures""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name
+
+import pytest
+from tests.rbac.test.fixtures import *
+from tests.rbac.test.assertions import *
+
+from rbac.common.logs import getLogger
+
+LOGGER = getLogger(__name__)
+
+",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239294810,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239294810,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,"This test is unnecessary because your other tests are testing that the API is up, so I would remove this file.",be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:07:38,239556183,"@@ -0,0 +1,33 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the REST API endpoint""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name
+
+import requests
+import pytest
+
+from rbac.common.logs import getLogger
+from tests.rbac.test.fixtures import *
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.mark.api
+def test_base_api_url(url_base):",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239556183,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239556183,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,"So you appear to be using fixtures for very basic things like importing and declaring your url variable and such.  While this is valid, the use of wildcarding makes this file difficult to read, because we are unable to tell where some variables are coming from whether it is being declared somewhere we don't see or being imported from your custom assertions, or being imported from fixtures.  

In python explicit is better then implicit in most cases and this is one where I would say it matters.

So I would advise one of two paths forward:
1) Keep the fixtures and lose the wildcard so we know where things like url_base are coming from.
2) Lose the fixtures and declare them directly in the file so the reader knows their origin in the same file",be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:11:28,239557344,"@@ -0,0 +1,99 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the REST API endpoint""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name,unused-import,invalid-name
+
+import logging
+import json
+import requests
+import pytest
+
+from rbac.common.logs import getLogger
+from tests.rbac.test.fixtures import *",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239557344,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239557344,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,Parameterization would be a good option for these 4 tests to be reduced into 1,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:12:05,239557541,"@@ -0,0 +1,99 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the REST API endpoint""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name,unused-import,invalid-name
+
+import logging
+import json
+import requests
+import pytest
+
+from rbac.common.logs import getLogger
+from tests.rbac.test.fixtures import *
+from tests.rbac.test.assertions import *
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.mark.api
+@pytest.mark.api_signup
+def test_api_user_signup(url_base, testdata):",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239557541,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239557541,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,Line 29 and this line are testing the exact same thing in different formats.  I would get rid of this one.,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:13:09,239557921,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test assertions""""""
+
+import json
+import re as regex
+
+PATTERN_ZERO_BYTE = r""00""
+PATTERN_12_HEX_BYTES = r""[0-9a-f]{24}""
+PATTERN_12_BYTE_HASH = regex.compile(r""^"" + PATTERN_12_HEX_BYTES + r""$"")
+PATTERN_12_BYTE_ZEROS = regex.compile(r""^"" + PATTERN_ZERO_BYTE * 12 + r""$"")
+
+
+def assert_api_error(response, expected_message):
+    """"""Asserts the response is an error with the expected message
+    """"""
+    assert response.status_code == 400
+    assert isinstance(response.text, str)
+    result = json.loads(response.text)
+    assert isinstance(result, dict)
+    assert result[""code""] == 400",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239557921,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239557921,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,This is a builtin of the requests library and how it functions.  When you use response.text you knw you will get a string as this has been a highly vetted library and you are testing the library.  I would remove this assertion.,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:14:32,239558420,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test assertions""""""
+
+import json
+import re as regex
+
+PATTERN_ZERO_BYTE = r""00""
+PATTERN_12_HEX_BYTES = r""[0-9a-f]{24}""
+PATTERN_12_BYTE_HASH = regex.compile(r""^"" + PATTERN_12_HEX_BYTES + r""$"")
+PATTERN_12_BYTE_ZEROS = regex.compile(r""^"" + PATTERN_ZERO_BYTE * 12 + r""$"")
+
+
+def assert_api_error(response, expected_message):
+    """"""Asserts the response is an error with the expected message
+    """"""
+    assert response.status_code == 400
+    assert isinstance(response.text, str)",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239558420,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239558420,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,Same thing on this assertion as line 30,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:14:46,239558520,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test assertions""""""
+
+import json
+import re as regex
+
+PATTERN_ZERO_BYTE = r""00""
+PATTERN_12_HEX_BYTES = r""[0-9a-f]{24}""
+PATTERN_12_BYTE_HASH = regex.compile(r""^"" + PATTERN_12_HEX_BYTES + r""$"")
+PATTERN_12_BYTE_ZEROS = regex.compile(r""^"" + PATTERN_ZERO_BYTE * 12 + r""$"")
+
+
+def assert_api_error(response, expected_message):
+    """"""Asserts the response is an error with the expected message
+    """"""
+    assert response.status_code == 400
+    assert isinstance(response.text, str)
+    result = json.loads(response.text)
+    assert isinstance(result, dict)",32,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239558520,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239558520,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,I have the same advise as above on ln 30 and 32 for here.  Applies to ln 43 as well,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:16:18,239559027,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test assertions""""""
+
+import json
+import re as regex
+
+PATTERN_ZERO_BYTE = r""00""
+PATTERN_12_HEX_BYTES = r""[0-9a-f]{24}""
+PATTERN_12_BYTE_HASH = regex.compile(r""^"" + PATTERN_12_HEX_BYTES + r""$"")
+PATTERN_12_BYTE_ZEROS = regex.compile(r""^"" + PATTERN_ZERO_BYTE * 12 + r""$"")
+
+
+def assert_api_error(response, expected_message):
+    """"""Asserts the response is an error with the expected message
+    """"""
+    assert response.status_code == 400
+    assert isinstance(response.text, str)
+    result = json.loads(response.text)
+    assert isinstance(result, dict)
+    assert result[""code""] == 400
+    assert result[""message""] == expected_message
+
+
+def assert_api_success(response):
+    """"""Asserts the response is a success and returned json
+    """"""
+    assert response.status_code == 200
+    assert isinstance(response.text, str)",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239559027,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239559027,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,This seems like this fixture should not be a fixture and be brought in as an import on the file,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:16:57,239559252,"@@ -0,0 +1,84 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test fixtures""""""
+# pylint: disable=redefined-outer-name,invalid-name
+
+import random
+import string
+import pytest
+
+from rbac.common.logs import getLogger
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.fixture
+def rbac():
+    """"""Allow test functions to ask for the rbac library
+    """"""
+    from rbac.common import rbac",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239559252,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239559252,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,This seems like this fixture should not be a fixture and be brought in as an import on the file,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:17:07,239559307,"@@ -0,0 +1,84 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test fixtures""""""
+# pylint: disable=redefined-outer-name,invalid-name
+
+import random
+import string
+import pytest
+
+from rbac.common.logs import getLogger
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.fixture
+def rbac():
+    """"""Allow test functions to ask for the rbac library
+    """"""
+    from rbac.common import rbac
+
+    return rbac
+
+
+@pytest.fixture
+def get_config():
+    """"""Allow test functions to ask for get_config
+    """"""
+    from rbac.common.config import get_config",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239559307,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239559307,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,"Instead of a fixture  this should be declared in the test file or use the features of py-env to declare it there for the test runner, which will put this in the environment. ",be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:18:23,239559684,"@@ -0,0 +1,84 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test fixtures""""""
+# pylint: disable=redefined-outer-name,invalid-name
+
+import random
+import string
+import pytest
+
+from rbac.common.logs import getLogger
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.fixture
+def rbac():
+    """"""Allow test functions to ask for the rbac library
+    """"""
+    from rbac.common import rbac
+
+    return rbac
+
+
+@pytest.fixture
+def get_config():
+    """"""Allow test functions to ask for get_config
+    """"""
+    from rbac.common.config import get_config
+
+    return get_config
+
+
+@pytest.fixture
+def url_base(get_config):
+    """"""Allow test functions to get the url base
+    of the application REST API
+    """"""
+    return get_config(""REST_ENDPOINT"")",32,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239559684,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239559684,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,"Wild carding should either not happen or be explicit if you are to keep this file.   Overall this file should be removed as you are testing a test fixture.   Because you use the fixture in your tests it is already a test of the test fixture and makes this file unnecessary.

All of the tests below also appear to be testing python itself and that it works correctly.  When you develop tests they should be there to test that your logic is correct and that you are testing good and bad pathing possibilities, not python the language.  So these tests are unnecessary on that factor as well.",be4862cea7888c550c1aba54679775739a31a714,2018-12-06 18:22:47,239561181,"@@ -0,0 +1,59 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the common test fixtures""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name
+
+import pytest
+from tests.rbac.test.fixtures import *",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239561181,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239561181,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,removed,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:45:59,239589190,"@@ -0,0 +1,33 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the REST API endpoint""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name
+
+import requests
+import pytest
+
+from rbac.common.logs import getLogger
+from tests.rbac.test.fixtures import *
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.mark.api
+def test_base_api_url(url_base):",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239589190,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239589190,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,resolved,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:46:10,239589246,"@@ -0,0 +1,99 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the REST API endpoint""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name,unused-import,invalid-name
+
+import logging
+import json
+import requests
+import pytest
+
+from rbac.common.logs import getLogger
+from tests.rbac.test.fixtures import *",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239589246,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239589246,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,Parameterized,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:46:18,239589310,"@@ -0,0 +1,99 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the REST API endpoint""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name,unused-import,invalid-name
+
+import logging
+import json
+import requests
+import pytest
+
+from rbac.common.logs import getLogger
+from tests.rbac.test.fixtures import *
+from tests.rbac.test.assertions import *
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.mark.api
+@pytest.mark.api_signup
+def test_api_user_signup(url_base, testdata):",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239589310,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239589310,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,removed,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:46:32,239589386,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test assertions""""""
+
+import json
+import re as regex
+
+PATTERN_ZERO_BYTE = r""00""
+PATTERN_12_HEX_BYTES = r""[0-9a-f]{24}""
+PATTERN_12_BYTE_HASH = regex.compile(r""^"" + PATTERN_12_HEX_BYTES + r""$"")
+PATTERN_12_BYTE_ZEROS = regex.compile(r""^"" + PATTERN_ZERO_BYTE * 12 + r""$"")
+
+
+def assert_api_error(response, expected_message):
+    """"""Asserts the response is an error with the expected message
+    """"""
+    assert response.status_code == 400
+    assert isinstance(response.text, str)
+    result = json.loads(response.text)
+    assert isinstance(result, dict)
+    assert result[""code""] == 400",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239589386,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239589386,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,removed,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:46:38,239589430,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test assertions""""""
+
+import json
+import re as regex
+
+PATTERN_ZERO_BYTE = r""00""
+PATTERN_12_HEX_BYTES = r""[0-9a-f]{24}""
+PATTERN_12_BYTE_HASH = regex.compile(r""^"" + PATTERN_12_HEX_BYTES + r""$"")
+PATTERN_12_BYTE_ZEROS = regex.compile(r""^"" + PATTERN_ZERO_BYTE * 12 + r""$"")
+
+
+def assert_api_error(response, expected_message):
+    """"""Asserts the response is an error with the expected message
+    """"""
+    assert response.status_code == 400
+    assert isinstance(response.text, str)",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239589430,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239589430,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,removed,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:46:50,239589491,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test assertions""""""
+
+import json
+import re as regex
+
+PATTERN_ZERO_BYTE = r""00""
+PATTERN_12_HEX_BYTES = r""[0-9a-f]{24}""
+PATTERN_12_BYTE_HASH = regex.compile(r""^"" + PATTERN_12_HEX_BYTES + r""$"")
+PATTERN_12_BYTE_ZEROS = regex.compile(r""^"" + PATTERN_ZERO_BYTE * 12 + r""$"")
+
+
+def assert_api_error(response, expected_message):
+    """"""Asserts the response is an error with the expected message
+    """"""
+    assert response.status_code == 400
+    assert isinstance(response.text, str)
+    result = json.loads(response.text)
+    assert isinstance(result, dict)
+    assert result[""code""] == 400
+    assert result[""message""] == expected_message
+
+
+def assert_api_success(response):
+    """"""Asserts the response is a success and returned json
+    """"""
+    assert response.status_code == 200
+    assert isinstance(response.text, str)",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239589491,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239589491,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,removed and imported,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:46:59,239589535,"@@ -0,0 +1,84 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test fixtures""""""
+# pylint: disable=redefined-outer-name,invalid-name
+
+import random
+import string
+import pytest
+
+from rbac.common.logs import getLogger
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.fixture
+def rbac():
+    """"""Allow test functions to ask for the rbac library
+    """"""
+    from rbac.common import rbac",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239589535,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239589535,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,removed,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:47:08,239589574,"@@ -0,0 +1,84 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test fixtures""""""
+# pylint: disable=redefined-outer-name,invalid-name
+
+import random
+import string
+import pytest
+
+from rbac.common.logs import getLogger
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.fixture
+def rbac():
+    """"""Allow test functions to ask for the rbac library
+    """"""
+    from rbac.common import rbac
+
+    return rbac
+
+
+@pytest.fixture
+def get_config():
+    """"""Allow test functions to ask for get_config
+    """"""
+    from rbac.common.config import get_config",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239589574,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239589574,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,leaving this for now,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:48:10,239589956,"@@ -0,0 +1,84 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test fixtures""""""
+# pylint: disable=redefined-outer-name,invalid-name
+
+import random
+import string
+import pytest
+
+from rbac.common.logs import getLogger
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.fixture
+def rbac():
+    """"""Allow test functions to ask for the rbac library
+    """"""
+    from rbac.common import rbac
+
+    return rbac
+
+
+@pytest.fixture
+def get_config():
+    """"""Allow test functions to ask for get_config
+    """"""
+    from rbac.common.config import get_config
+
+    return get_config
+
+
+@pytest.fixture
+def url_base(get_config):
+    """"""Allow test functions to get the url base
+    of the application REST API
+    """"""
+    return get_config(""REST_ENDPOINT"")",32,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239589956,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239589956,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,"changed to explicit imports, no wildcards",be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:48:29,239590067,"@@ -0,0 +1,59 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Test the common test fixtures""""""
+# pylint: disable=wildcard-import,unused-wildcard-import,redefined-outer-name
+
+import pytest
+from tests.rbac.test.fixtures import *",,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239590067,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239590067,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,removed,be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:49:42,239590466,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test assertions""""""
+
+import json
+import re as regex
+
+PATTERN_ZERO_BYTE = r""00""
+PATTERN_12_HEX_BYTES = r""[0-9a-f]{24}""
+PATTERN_12_BYTE_HASH = regex.compile(r""^"" + PATTERN_12_HEX_BYTES + r""$"")
+PATTERN_12_BYTE_ZEROS = regex.compile(r""^"" + PATTERN_ZERO_BYTE * 12 + r""$"")
+
+
+def assert_api_error(response, expected_message):
+    """"""Asserts the response is an error with the expected message
+    """"""
+    assert response.status_code == 400
+    assert isinstance(response.text, str)
+    result = json.loads(response.text)
+    assert isinstance(result, dict)",32,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239590466,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239590466,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/740,https://github.com/hyperledger/sawtooth-next-directory/pull/740,"leaving this for now, it's in our configuration",be4862cea7888c550c1aba54679775739a31a714,2018-12-06 19:50:25,239590724,"@@ -0,0 +1,84 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""Common test fixtures""""""
+# pylint: disable=redefined-outer-name,invalid-name
+
+import random
+import string
+import pytest
+
+from rbac.common.logs import getLogger
+
+LOGGER = getLogger(__name__)
+
+
+@pytest.fixture
+def rbac():
+    """"""Allow test functions to ask for the rbac library
+    """"""
+    from rbac.common import rbac
+
+    return rbac
+
+
+@pytest.fixture
+def get_config():
+    """"""Allow test functions to ask for get_config
+    """"""
+    from rbac.common.config import get_config
+
+    return get_config
+
+
+@pytest.fixture
+def url_base(get_config):
+    """"""Allow test functions to get the url base
+    of the application REST API
+    """"""
+    return get_config(""REST_ENDPOINT"")",32,2018-12-06 20:16:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239590724,https://github.com/hyperledger/sawtooth-next-directory/pull/740#discussion_r239590724,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/739,https://github.com/hyperledger/sawtooth-next-directory/pull/739,No dot notation.  import in and use,b055be05c8c1c65d395c590c93955487c3b2b1d8,2018-12-05 22:22:35,239260838,"@@ -0,0 +1,136 @@
+#! /usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# http://docs.python-requests.org/en/master/
+
+import os
+import sys
+import json
+import logging
+from datetime import datetime, timezone
+import rethinkdb as r
+import ldap3
+from ldap3 import ALL, Connection, Server
+
+from rbac.providers.common import inbound_filters
+from rbac.providers.common.common import save_sync_time, check_last_sync
+from rbac.providers.common.rethink_db import connect_to_db
+
+
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.DEBUG
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+DB_HOST = os.getenv(""DB_HOST"", ""rethink"")
+DB_PORT = int(float(os.getenv(""DB_PORT"", ""28015"")))
+DB_NAME = os.getenv(""DB_NAME"", ""rbac"")
+
+LDAP_DC = os.getenv(""LDAP_DC"")
+LDAP_SERVER = os.getenv(""LDAP_SERVER"")
+LDAP_USER = os.getenv(""LDAP_USER"")
+LDAP_PASS = os.getenv(""LDAP_PASS"")
+
+LDAP_FILTER_USER = ""(objectClass=person)""
+LDAP_FILTER_GROUP = ""(objectClass=group)""
+
+
+def fetch_ldap_data(data_type):
+    """"""
+        Call to get entries for all (Users | Groups) in Active Directory, saves the time of the sync,
+        and inserts data into RethinkDB.
+    """"""
+    connect_to_db()
+
+    if data_type == ""user"":
+        search_filter = LDAP_FILTER_USER
+    elif data_type == ""group"":
+        search_filter = LDAP_FILTER_GROUP
+
+    server = Server(LDAP_SERVER, get_info=ALL)
+    conn = Connection(server, user=LDAP_USER, password=LDAP_PASS)
+    if not conn.bind():
+        LOGGER.error(
+            ""Error connecting to LDAP server %s : %s"", LDAP_SERVER, conn.result
+        )
+    conn.search(
+        search_base=LDAP_DC,
+        search_filter=search_filter,
+        attributes=ldap3.ALL_ATTRIBUTES,
+    )
+
+    insert_to_db(data_dict=conn.entries, data_type=data_type)
+    sync_source = ""ldap-"" + data_type
+    provider_id = LDAP_DC
+    save_sync_time(provider_id, sync_source, ""initial"")
+    # TODO: Initiate timed delta sync thread after successfully inserting records into db
+
+
+def insert_to_db(data_dict, data_type):
+    """"""Insert (Users | Groups) individually to RethinkDB from dict of data and begins delta sync timer.""""""
+    for entry in data_dict:
+        entry_data = json.loads(entry.entry_to_json())[""attributes""]
+        if data_type == ""user"":
+            standardized_entry = inbound_filters.inbound_user_filter(entry_data, ""ldap"")",,2018-12-05 22:26:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239260838,https://github.com/hyperledger/sawtooth-next-directory/pull/739#discussion_r239260838,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/738,https://github.com/hyperledger/sawtooth-next-directory/pull/738,Please remove this statement or log as debug in lower or camel case,85686c5e44cb85d1fa44a84d1ed4f826bd2f7b30,2018-12-05 20:46:27,239230954,"@@ -232,8 +210,47 @@ def modify_ad_attributes(distinguished_name, sawtooth_entry_filtered, ldap_conn)
 
 
 def get_distinguished_name(queue_entry):
-    """"""
-        Returns the distinguished_name of the queue entry.
-    """"""
+    """"""Returns the distinguished_name of the queue entry.""""""
     sawtooth_entry = queue_entry[""data""]
     return sawtooth_entry[""distinguished_name""][0]
+
+
+def ldap_outbound_listener():
+    """"""Initialize LDAP delta outbound sync with Active Directory.""""""
+    LOGGER.info(""Starting outbound sync listener..."")
+
+    LOGGER.info(""Connecting to RethinkDB..."")
+    connect_to_db()
+    LOGGER.info(""Successfully connected to RethinkDB!"")
+
+    LOGGER.info(""Connecting to LDAP..."")
+    ldap_conn = connect_to_ldap()
+    LOGGER.info(""Successfully connected to LDAP!"")
+
+    while True:
+        LOGGER.info(""YOU ARE IN THE WHILE LOOP"")",,2018-12-05 21:18:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239230954,https://github.com/hyperledger/sawtooth-next-directory/pull/738#discussion_r239230954,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/738,https://github.com/hyperledger/sawtooth-next-directory/pull/738,"No change requested here, but please help me understand why we need an additional dict for defaults instead of inline.",85686c5e44cb85d1fa44a84d1ed4f826bd2f7b30,2018-12-05 20:49:53,239232085,"@@ -34,14 +34,13 @@
 logging.basicConfig(level=logging.INFO)
 LOGGER = logging.getLogger(__name__)
 
-DEFAULT_CONFIG = {""OUTBOUND_QUEUE"": ""queue_outbound""}
-
+DEFAULT_CONFIG = {""DELAY"": ""1"", ""OUTBOUND_QUEUE"": ""outbound_queue""}
 OUTBOUND_QUEUE = os.getenv(""OUTBOUND_QUEUE"", DEFAULT_CONFIG[""OUTBOUND_QUEUE""])
+DELAY = int(float(os.getenv(""DELAY"", DEFAULT_CONFIG[""DELAY""])))",27,2018-12-05 21:18:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239232085,https://github.com/hyperledger/sawtooth-next-directory/pull/738#discussion_r239232085,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/738,https://github.com/hyperledger/sawtooth-next-directory/pull/738,Is this putting into Azure or Active Directory?,85686c5e44cb85d1fa44a84d1ed4f826bd2f7b30,2018-12-05 20:53:13,239233107,"@@ -232,8 +210,47 @@ def modify_ad_attributes(distinguished_name, sawtooth_entry_filtered, ldap_conn)
 
 
 def get_distinguished_name(queue_entry):
-    """"""
-        Returns the distinguished_name of the queue entry.
-    """"""
+    """"""Returns the distinguished_name of the queue entry.""""""
     sawtooth_entry = queue_entry[""data""]
     return sawtooth_entry[""distinguished_name""][0]
+
+
+def ldap_outbound_listener():
+    """"""Initialize LDAP delta outbound sync with Active Directory.""""""
+    LOGGER.info(""Starting outbound sync listener..."")
+
+    LOGGER.info(""Connecting to RethinkDB..."")
+    connect_to_db()
+    LOGGER.info(""Successfully connected to RethinkDB!"")
+
+    LOGGER.info(""Connecting to LDAP..."")
+    ldap_conn = connect_to_ldap()
+    LOGGER.info(""Successfully connected to LDAP!"")
+
+    while True:
+        LOGGER.info(""YOU ARE IN THE WHILE LOOP"")
+        try:
+            queue_entry = peek_at_queue(OUTBOUND_QUEUE, LDAP_DC)
+            LOGGER.info(
+                ""Received queue entry %s from outbound queue..."", queue_entry[""id""]
+            )
+
+            data_type = queue_entry[""data_type""]
+            LOGGER.info(""Putting %s into aad..."", data_type)",,2018-12-05 21:18:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239233107,https://github.com/hyperledger/sawtooth-next-directory/pull/738#discussion_r239233107,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/732,https://github.com/hyperledger/sawtooth-next-directory/pull/732,Please add 'sync_tracker' to this message so we can tell by the logs which table is empty.,cdb38bb37f21a0aeb64f29dde15d0f004628212b,2018-12-05 17:32:54,239164563,"@@ -55,12 +55,15 @@ def get_last_sync(source, sync_type):
         last_sync = (
             r.table(""sync_tracker"")
             .filter({""source"": source, ""sync_type"": sync_type})
-            .coerce_to(""array"")
+            .max(""timestamp"")
+            .coerce_to(""object"")
             .run()
         )
         return last_sync
     except (r.ReqlOpFailedError, r.ReqlDriverError) as err:
         raise ExpectedError(err)
+    except r.ReqlNonExistenceError:
+        LOGGER.debug(""The table is empty."")",,2018-12-05 18:10:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239164563,https://github.com/hyperledger/sawtooth-next-directory/pull/732#discussion_r239164563,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/732,https://github.com/hyperledger/sawtooth-next-directory/pull/732,@kthblmfld - The logger has been updated to be more descriptive.,cdb38bb37f21a0aeb64f29dde15d0f004628212b,2018-12-05 18:10:48,239177574,"@@ -55,12 +55,15 @@ def get_last_sync(source, sync_type):
         last_sync = (
             r.table(""sync_tracker"")
             .filter({""source"": source, ""sync_type"": sync_type})
-            .coerce_to(""array"")
+            .max(""timestamp"")
+            .coerce_to(""object"")
             .run()
         )
         return last_sync
     except (r.ReqlOpFailedError, r.ReqlDriverError) as err:
         raise ExpectedError(err)
+    except r.ReqlNonExistenceError:
+        LOGGER.debug(""The table is empty."")",,2018-12-05 18:10:48,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239177574,https://github.com/hyperledger/sawtooth-next-directory/pull/732#discussion_r239177574,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/722,https://github.com/hyperledger/sawtooth-next-directory/pull/722,So when you are running though multiple test cases you want to use the parameterize function of pytest.  So it is more for vaulting through multiple inputs in a test rapidly rather then doing it via assignment like this.  Otherwise you would just do it via assignment.  So we should modify this.,5cbc2dff9ee07070a30103d586c79d4940389522,2018-12-05 17:54:17,239171895,"@@ -0,0 +1,101 @@
+import unittest
+import pytest
+
+
+from rbac.providers.common.outbound_filters import (
+    outbound_group_creation_filter,
+    outbound_group_filter,
+    outbound_user_filter,
+    outbound_user_creation_filter,
+)
+
+LIST_OF_TEST_USERS = [
+    {
+        ""account_enabled"": True,
+        ""name"": ""test_user"",
+        ""user_principal_name"": ""test_user@test_mail.com"",
+    },
+    {""account_enabled"": True},
+    {""group_nickname"": ""test_group""},
+    {""name"": ""test_user"", ""user_principal_name"": ""test_user@test_mail.com""},
+]
+
+
+def test_outbound_user_filter():
+    """""" Test outbound user filter with valid user """"""
+    result = outbound_user_filter({""user_id"": 1234}, ""azure"")
+    assert isinstance(result, dict) is True
+    assert result[""id""] == 1234
+    assert ""job_title"" not in result
+
+
+def test_outbound_user_filter_bad_provider():
+    """""" Test outbound user filter with bad provider throws error""""""
+    with pytest.raises(TypeError):
+        outbound_user_filter({""user_id"": 1234}, ""test_run"")
+
+
+def test_outbound_group_filter():
+    """""" Test outbound group filter with valid user """"""
+    result = outbound_group_filter({""role_id"": 1234}, ""ldap"")
+    assert result[""objectGUID""] == 1234
+    assert ""id"" not in result
+
+
+def test_outbound_group_filter_bad_provider():
+    """""" Test outbound group filter with bad provider throws error""""""
+    with pytest.raises(TypeError):
+        outbound_group_filter({""user_id"": 1234}, ""test_run"")
+
+
+def test_outbound_user_creation():
+    """""" Test outbound user creation with valid provider and account""""""
+    user = LIST_OF_TEST_USERS[0]
+    result = outbound_user_creation_filter(user, ""azure"")
+    assert result[""accountEnabled""] is True
+    assert result[""mailNickname""] == ""test_user""
+    assert ""mail"" not in result
+
+
+def test_outbound_user_creation_without_accountEnabled():
+    """""" Test outbound user creation without accountEnabled passed in""""""
+    user = LIST_OF_TEST_USERS[3]
+    result = outbound_user_creation_filter(user, ""azure"")
+    assert result[""accountEnabled""] is True
+
+
+def test_outbound_user_creation_with_bad_provider():
+    """""" Test outbound group creation with bad provider throws error""""""
+    user = LIST_OF_TEST_USERS[1]",,2018-12-07 17:28:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239171895,https://github.com/hyperledger/sawtooth-next-directory/pull/722#discussion_r239171895,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/722,https://github.com/hyperledger/sawtooth-next-directory/pull/722,I think I'm using the parameterize function correctly. Please let me know if you see further changes that are needed!,5cbc2dff9ee07070a30103d586c79d4940389522,2018-12-06 01:03:58,239296591,"@@ -0,0 +1,101 @@
+import unittest
+import pytest
+
+
+from rbac.providers.common.outbound_filters import (
+    outbound_group_creation_filter,
+    outbound_group_filter,
+    outbound_user_filter,
+    outbound_user_creation_filter,
+)
+
+LIST_OF_TEST_USERS = [
+    {
+        ""account_enabled"": True,
+        ""name"": ""test_user"",
+        ""user_principal_name"": ""test_user@test_mail.com"",
+    },
+    {""account_enabled"": True},
+    {""group_nickname"": ""test_group""},
+    {""name"": ""test_user"", ""user_principal_name"": ""test_user@test_mail.com""},
+]
+
+
+def test_outbound_user_filter():
+    """""" Test outbound user filter with valid user """"""
+    result = outbound_user_filter({""user_id"": 1234}, ""azure"")
+    assert isinstance(result, dict) is True
+    assert result[""id""] == 1234
+    assert ""job_title"" not in result
+
+
+def test_outbound_user_filter_bad_provider():
+    """""" Test outbound user filter with bad provider throws error""""""
+    with pytest.raises(TypeError):
+        outbound_user_filter({""user_id"": 1234}, ""test_run"")
+
+
+def test_outbound_group_filter():
+    """""" Test outbound group filter with valid user """"""
+    result = outbound_group_filter({""role_id"": 1234}, ""ldap"")
+    assert result[""objectGUID""] == 1234
+    assert ""id"" not in result
+
+
+def test_outbound_group_filter_bad_provider():
+    """""" Test outbound group filter with bad provider throws error""""""
+    with pytest.raises(TypeError):
+        outbound_group_filter({""user_id"": 1234}, ""test_run"")
+
+
+def test_outbound_user_creation():
+    """""" Test outbound user creation with valid provider and account""""""
+    user = LIST_OF_TEST_USERS[0]
+    result = outbound_user_creation_filter(user, ""azure"")
+    assert result[""accountEnabled""] is True
+    assert result[""mailNickname""] == ""test_user""
+    assert ""mail"" not in result
+
+
+def test_outbound_user_creation_without_accountEnabled():
+    """""" Test outbound user creation without accountEnabled passed in""""""
+    user = LIST_OF_TEST_USERS[3]
+    result = outbound_user_creation_filter(user, ""azure"")
+    assert result[""accountEnabled""] is True
+
+
+def test_outbound_user_creation_with_bad_provider():
+    """""" Test outbound group creation with bad provider throws error""""""
+    user = LIST_OF_TEST_USERS[1]",,2018-12-07 17:28:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239296591,https://github.com/hyperledger/sawtooth-next-directory/pull/722#discussion_r239296591,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/722,https://github.com/hyperledger/sawtooth-next-directory/pull/722,Hey last thing - All new files need to have the licensing information at the top.  (All of the commented out code at the top of all the files,5cbc2dff9ee07070a30103d586c79d4940389522,2018-12-06 23:07:23,239648215,"@@ -0,0 +1,37 @@
+import pytest",16,2018-12-07 17:28:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239648215,https://github.com/hyperledger/sawtooth-next-directory/pull/722#discussion_r239648215,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/722,https://github.com/hyperledger/sawtooth-next-directory/pull/722,License information,5cbc2dff9ee07070a30103d586c79d4940389522,2018-12-06 23:07:44,239648295,"@@ -0,0 +1,113 @@
+import pytest",,2018-12-07 17:28:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239648295,https://github.com/hyperledger/sawtooth-next-directory/pull/722#discussion_r239648295,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/722,https://github.com/hyperledger/sawtooth-next-directory/pull/722,"In terms of parameterization - this works, but refer back to how I did it on azure_provider.py Instead of loading your multiple tests cases in duplication, you declare it once at the top and load it in as the declared name.  ",5cbc2dff9ee07070a30103d586c79d4940389522,2018-12-06 23:13:37,239649553,"@@ -0,0 +1,113 @@
+import pytest
+
+
+from rbac.providers.common.outbound_filters import (
+    outbound_group_creation_filter,
+    outbound_group_filter,
+    outbound_user_filter,
+    outbound_user_creation_filter,
+)
+
+
+def test_outbound_user_filter():
+    """""" Test outbound user filter with valid user """"""
+    result = outbound_user_filter({""user_id"": 1234}, ""azure"")
+    assert isinstance(result, dict) is True
+    assert result[""id""] == 1234
+    assert ""job_title"" not in result
+
+
+def test_outbound_user_filter_bad_provider():
+    """""" Test outbound user filter with bad provider throws error""""""
+    with pytest.raises(TypeError):
+        outbound_user_filter({""user_id"": 1234}, ""test_run"")
+
+
+def test_outbound_group_filter():
+    """""" Test outbound group filter with valid user """"""
+    result = outbound_group_filter({""role_id"": 1234}, ""ldap"")
+    assert result[""objectGUID""] == 1234
+    assert ""id"" not in result
+
+
+def test_outbound_group_filter_bad_provider():
+    """""" Test outbound group filter with bad provider throws error""""""
+    with pytest.raises(TypeError):
+        outbound_group_filter({""user_id"": 1234}, ""test_run"")
+
+
+@pytest.mark.parametrize(
+    ""test_input, provider, field_to_test, expected"",
+    [
+        (
+            {
+                ""account_enabled"": True,
+                ""name"": ""test_user"",
+                ""user_principal_name"": ""test_user@test_mail.com"",
+            },
+            ""azure"",
+            ""mailNickname"",
+            ""test_user"",
+        ),
+        (
+            {""name"": ""test_user"", ""user_principal_name"": ""test_user@test_mail.com""},
+            ""azure"",
+            ""accountEnabled"",
+            True,
+        ),
+        (
+            {""name"": ""test_user"", ""user_principal_name"": ""test_user@test_mail.com""},
+            ""ldap"",
+            ""accountEnabled"",
+            True,
+        ),
+    ],
+)
+def test_outbound_user_creation(test_input, provider, field_to_test, expected):
+    """""" Test outbound user creation with valid provider and account""""""
+    assert (
+        outbound_user_creation_filter(test_input, provider)[field_to_test] == expected
+    )
+
+
+@pytest.mark.parametrize(
+    ""test_input, provider, errorType"",
+    [
+        ({""account_enabled"": True}, ""azure"", ValueError),
+        (
+            {""name"": ""test_user"", ""user_principal_name"": ""test_user@test_mail.com""},
+            ""Potate"",
+            TypeError,
+        ),
+    ],
+)
+def test_outbound_user_creation_with_bad_input(test_input, provider, errorType):
+    """""" Test outbound group creation with bad provider throws error""""""
+    with pytest.raises(errorType):
+        outbound_user_creation_filter(test_input, provider)
+
+
+def test_outbound_group_creation():
+    """""" Test outbound group creation with valid provider and group""""""
+    user = {""group_nickname"": ""test_group""}
+    result = outbound_group_creation_filter(user, ""azure"")
+    assert result[""mailEnabled""] is False
+    assert result[""mailNickname""] == ""test_group""
+    assert ""mail"" not in result
+
+
+@pytest.mark.parametrize(
+    ""test_input, provider, errorType"",
+    [",,2018-12-07 17:28:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239649553,https://github.com/hyperledger/sawtooth-next-directory/pull/722#discussion_r239649553,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/722,https://github.com/hyperledger/sawtooth-next-directory/pull/722,Done!,5cbc2dff9ee07070a30103d586c79d4940389522,2018-12-07 17:40:07,239888799,"@@ -0,0 +1,113 @@
+import pytest
+
+
+from rbac.providers.common.outbound_filters import (
+    outbound_group_creation_filter,
+    outbound_group_filter,
+    outbound_user_filter,
+    outbound_user_creation_filter,
+)
+
+
+def test_outbound_user_filter():
+    """""" Test outbound user filter with valid user """"""
+    result = outbound_user_filter({""user_id"": 1234}, ""azure"")
+    assert isinstance(result, dict) is True
+    assert result[""id""] == 1234
+    assert ""job_title"" not in result
+
+
+def test_outbound_user_filter_bad_provider():
+    """""" Test outbound user filter with bad provider throws error""""""
+    with pytest.raises(TypeError):
+        outbound_user_filter({""user_id"": 1234}, ""test_run"")
+
+
+def test_outbound_group_filter():
+    """""" Test outbound group filter with valid user """"""
+    result = outbound_group_filter({""role_id"": 1234}, ""ldap"")
+    assert result[""objectGUID""] == 1234
+    assert ""id"" not in result
+
+
+def test_outbound_group_filter_bad_provider():
+    """""" Test outbound group filter with bad provider throws error""""""
+    with pytest.raises(TypeError):
+        outbound_group_filter({""user_id"": 1234}, ""test_run"")
+
+
+@pytest.mark.parametrize(
+    ""test_input, provider, field_to_test, expected"",
+    [
+        (
+            {
+                ""account_enabled"": True,
+                ""name"": ""test_user"",
+                ""user_principal_name"": ""test_user@test_mail.com"",
+            },
+            ""azure"",
+            ""mailNickname"",
+            ""test_user"",
+        ),
+        (
+            {""name"": ""test_user"", ""user_principal_name"": ""test_user@test_mail.com""},
+            ""azure"",
+            ""accountEnabled"",
+            True,
+        ),
+        (
+            {""name"": ""test_user"", ""user_principal_name"": ""test_user@test_mail.com""},
+            ""ldap"",
+            ""accountEnabled"",
+            True,
+        ),
+    ],
+)
+def test_outbound_user_creation(test_input, provider, field_to_test, expected):
+    """""" Test outbound user creation with valid provider and account""""""
+    assert (
+        outbound_user_creation_filter(test_input, provider)[field_to_test] == expected
+    )
+
+
+@pytest.mark.parametrize(
+    ""test_input, provider, errorType"",
+    [
+        ({""account_enabled"": True}, ""azure"", ValueError),
+        (
+            {""name"": ""test_user"", ""user_principal_name"": ""test_user@test_mail.com""},
+            ""Potate"",
+            TypeError,
+        ),
+    ],
+)
+def test_outbound_user_creation_with_bad_input(test_input, provider, errorType):
+    """""" Test outbound group creation with bad provider throws error""""""
+    with pytest.raises(errorType):
+        outbound_user_creation_filter(test_input, provider)
+
+
+def test_outbound_group_creation():
+    """""" Test outbound group creation with valid provider and group""""""
+    user = {""group_nickname"": ""test_group""}
+    result = outbound_group_creation_filter(user, ""azure"")
+    assert result[""mailEnabled""] is False
+    assert result[""mailNickname""] == ""test_group""
+    assert ""mail"" not in result
+
+
+@pytest.mark.parametrize(
+    ""test_input, provider, errorType"",
+    [",,2018-12-07 17:40:07,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239888799,https://github.com/hyperledger/sawtooth-next-directory/pull/722#discussion_r239888799,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/722,https://github.com/hyperledger/sawtooth-next-directory/pull/722,Done!,5cbc2dff9ee07070a30103d586c79d4940389522,2018-12-07 17:40:14,239888830,"@@ -0,0 +1,113 @@
+import pytest",,2018-12-07 17:40:14,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239888830,https://github.com/hyperledger/sawtooth-next-directory/pull/722#discussion_r239888830,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/708,https://github.com/hyperledger/sawtooth-next-directory/pull/708,"I understand the goal of optimizing caching across containers, but why choose sawtooth-validator as the common base image? Sawtooth validator packages the essentials necessary for consensus (transaction processing, peer communication, etc). How will provider/server modules leverage the consensus boilerplate made available to them? ",560bef3d95d6588cefa1e2e9969d8bd0a81a8385,2018-12-02 05:36:27,238085612,"@@ -12,12 +12,42 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
-FROM python:3.7
 
-RUN pip install \
-    requests    \
-    rethinkdb   \
-    azure-eventhub
+# -----------------------------------------------------------------------------
+# Begin base docker image config for Hyperledger RBAC Next Directory
+# This should remain the same for all python containers to maximize caching
+# -----------------------------------------------------------------------------
+FROM hyperledger/sawtooth-validator:1.0",,2018-12-05 19:19:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238085612,https://github.com/hyperledger/sawtooth-next-directory/pull/708#discussion_r238085612,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/708,https://github.com/hyperledger/sawtooth-next-directory/pull/708,"For dev purposes, you pick the image+dockerFile-base that covers the largest number of containers and includes the majority of common prerequisites and go from there. This one covers six containers. Got a better candidate?",560bef3d95d6588cefa1e2e9969d8bd0a81a8385,2018-12-03 17:50:30,238371387,"@@ -12,12 +12,42 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
-FROM python:3.7
 
-RUN pip install \
-    requests    \
-    rethinkdb   \
-    azure-eventhub
+# -----------------------------------------------------------------------------
+# Begin base docker image config for Hyperledger RBAC Next Directory
+# This should remain the same for all python containers to maximize caching
+# -----------------------------------------------------------------------------
+FROM hyperledger/sawtooth-validator:1.0",,2018-12-05 19:19:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238371387,https://github.com/hyperledger/sawtooth-next-directory/pull/708#discussion_r238371387,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/708,https://github.com/hyperledger/sawtooth-next-directory/pull/708,Why not python:3.X? That should give us the Python bits so we can layer from there.,560bef3d95d6588cefa1e2e9969d8bd0a81a8385,2018-12-03 18:34:10,238386138,"@@ -12,12 +12,42 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
-FROM python:3.7
 
-RUN pip install \
-    requests    \
-    rethinkdb   \
-    azure-eventhub
+# -----------------------------------------------------------------------------
+# Begin base docker image config for Hyperledger RBAC Next Directory
+# This should remain the same for all python containers to maximize caching
+# -----------------------------------------------------------------------------
+FROM hyperledger/sawtooth-validator:1.0",,2018-12-05 19:19:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238386138,https://github.com/hyperledger/sawtooth-next-directory/pull/708#discussion_r238386138,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/708,https://github.com/hyperledger/sawtooth-next-directory/pull/708,How many containers does that cover? Make a PR and test it.,560bef3d95d6588cefa1e2e9969d8bd0a81a8385,2018-12-03 18:35:05,238386449,"@@ -12,12 +12,42 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
-FROM python:3.7
 
-RUN pip install \
-    requests    \
-    rethinkdb   \
-    azure-eventhub
+# -----------------------------------------------------------------------------
+# Begin base docker image config for Hyperledger RBAC Next Directory
+# This should remain the same for all python containers to maximize caching
+# -----------------------------------------------------------------------------
+FROM hyperledger/sawtooth-validator:1.0",,2018-12-05 19:19:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238386449,https://github.com/hyperledger/sawtooth-next-directory/pull/708#discussion_r238386449,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/708,https://github.com/hyperledger/sawtooth-next-directory/pull/708,"Here is what I am seeing historically.

chatbot: rasa_core
client: node:8
ledger_sync: ubuntu -> sawtooth-validator
rbac_processor: ubuntu -> sawtooth-validator 
rbac.providers.azure: python
rbac.providers.ldap: python -> sawtooth-validator
rbac.server: ubuntu -> sawtooth-validator

It will take some time to test the total build time, but sounds like an interesting experiment. 
Will give it a shot. Also need to confirm no sawtooth deps in server in the process. ",560bef3d95d6588cefa1e2e9969d8bd0a81a8385,2018-12-04 07:15:22,238548652,"@@ -12,12 +12,42 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
-FROM python:3.7
 
-RUN pip install \
-    requests    \
-    rethinkdb   \
-    azure-eventhub
+# -----------------------------------------------------------------------------
+# Begin base docker image config for Hyperledger RBAC Next Directory
+# This should remain the same for all python containers to maximize caching
+# -----------------------------------------------------------------------------
+FROM hyperledger/sawtooth-validator:1.0",,2018-12-05 19:19:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238548652,https://github.com/hyperledger/sawtooth-next-directory/pull/708#discussion_r238548652,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/708,https://github.com/hyperledger/sawtooth-next-directory/pull/708,Created #726 ,560bef3d95d6588cefa1e2e9969d8bd0a81a8385,2018-12-04 18:15:22,238778710,"@@ -12,12 +12,42 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
-FROM python:3.7
 
-RUN pip install \
-    requests    \
-    rethinkdb   \
-    azure-eventhub
+# -----------------------------------------------------------------------------
+# Begin base docker image config for Hyperledger RBAC Next Directory
+# This should remain the same for all python containers to maximize caching
+# -----------------------------------------------------------------------------
+FROM hyperledger/sawtooth-validator:1.0",,2018-12-05 19:19:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238778710,https://github.com/hyperledger/sawtooth-next-directory/pull/708#discussion_r238778710,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/708,https://github.com/hyperledger/sawtooth-next-directory/pull/708,"Does this need a patch version? Bah, I didn't submit this comment earlier. It isn't a show stopper for merge but could use a second look.",560bef3d95d6588cefa1e2e9969d8bd0a81a8385,2018-12-05 22:08:55,239256887,"@@ -21,32 +21,35 @@ FROM hyperledger/sawtooth-validator:1.0
 
 RUN apt-get update \
  && apt-get install -y --allow-unauthenticated -q \
+        locales \
         python3-pip \
         python3-sawtooth-sdk \
+ && locale-gen en_US.UTF-8 \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*
 RUN apt-get update && apt-get install -y  apt-utils
 
 RUN pip3 install -U pip setuptools
 
 RUN pip3 install \
-        grpcio-tools \
-        itsdangerous \
-        rethinkdb \
-        sanic==0.7.0
+        grpcio-tools==1.16.1 \
+        itsdangerous==1.1.0 \
+        rethinkdb==2.3.0.post6 \
+        sanic==0.8.3 \
+        watchdog==0.9.0
 
+ENV LC_ALL=en_US.UTF-8
 WORKDIR /project/hyperledger-rbac
 # -----------------------------------------------------------------------------
 # End base docker image config for Hyperledger RBAC Next Directory
 # -----------------------------------------------------------------------------
 
-RUN apt-get install -y --allow-unauthenticated -q \
-&& pip3 install \
-    pycodestyle \
-    pylint \
-    pytest \
-    dredd_hooks \
-    pytest-cov \
-    pytest-env
+RUN pip3 install \
+    pytest-sanic==0.1.15 \
+    pycodestyle==2.4.0 \
+    pylint==2.2.2 \
+    pytest==4.0.1 \
+    dredd_hooks==0.2. \",44,2018-12-06 00:12:53,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/239256887,https://github.com/hyperledger/sawtooth-next-directory/pull/708#discussion_r239256887,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/704,https://github.com/hyperledger/sawtooth-next-directory/pull/704,Typo of unique,ee9cf5a25272d060506de6f61155a7d26b0ce709,2018-12-01 02:06:31,238047881,"@@ -18,16 +18,55 @@
 
 def get_attribute(item, attribute):
     """"""A version of getattr that will return None if attribute
-    is not found on the item""""""
+    is not found on the item, by first checking that the item
+    has the attribute
+    """"""
     if hasattr(item, attribute):
         return getattr(item, attribute)
     return None
 
 
-def get_environment(name, default):
-    """"""A version of os.getenv that will use the default value
-    if the environment variable is not found or a blank string""""""
-    value = os.getenv(name)
-    if value is None or not value:
-        return default
-    return value
+def bytes_from_hex(value):
+    """"""There are many ways to convert hex to binary in python.
+    This function is here to attempt to standardize on a single method.
+    Additionally, it will return None of None is passed to it
+    instead of throwing an expected string exception
+    """"""
+    if not value:
+        return None
+    return bytes.fromhex(value)
+
+
+def has_duplicates(anylist):
+    """"""Returns a boolean whether a list contains duplicates values
+    It does this by comparing the length of the list to the length
+    of the set of the list. A set will only include unqique values.",,2018-12-01 02:23:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238047881,https://github.com/hyperledger/sawtooth-next-directory/pull/704#discussion_r238047881,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/704,https://github.com/hyperledger/sawtooth-next-directory/pull/704,And the file test_utilility.py has misspelling.,ee9cf5a25272d060506de6f61155a7d26b0ce709,2018-12-01 02:10:57,238048067,"@@ -18,16 +18,55 @@
 
 def get_attribute(item, attribute):
     """"""A version of getattr that will return None if attribute
-    is not found on the item""""""
+    is not found on the item, by first checking that the item
+    has the attribute
+    """"""
     if hasattr(item, attribute):
         return getattr(item, attribute)
     return None
 
 
-def get_environment(name, default):
-    """"""A version of os.getenv that will use the default value
-    if the environment variable is not found or a blank string""""""
-    value = os.getenv(name)
-    if value is None or not value:
-        return default
-    return value
+def bytes_from_hex(value):
+    """"""There are many ways to convert hex to binary in python.
+    This function is here to attempt to standardize on a single method.
+    Additionally, it will return None of None is passed to it
+    instead of throwing an expected string exception
+    """"""
+    if not value:
+        return None
+    return bytes.fromhex(value)
+
+
+def has_duplicates(anylist):
+    """"""Returns a boolean whether a list contains duplicates values
+    It does this by comparing the length of the list to the length
+    of the set of the list. A set will only include unqique values.",,2018-12-01 02:23:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238048067,https://github.com/hyperledger/sawtooth-next-directory/pull/704#discussion_r238048067,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/702,https://github.com/hyperledger/sawtooth-next-directory/pull/702,"Looks good. 

One ask: Please add a reference to this file in index.rst. ",e98fba188b817d596c509cc5dd619e4e925a78d4,2018-12-02 05:49:58,238085833,"@@ -0,0 +1,208 @@
+===============",1,2018-12-03 17:43:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238085833,https://github.com/hyperledger/sawtooth-next-directory/pull/702#discussion_r238085833,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/702,https://github.com/hyperledger/sawtooth-next-directory/pull/702,Done!,e98fba188b817d596c509cc5dd619e4e925a78d4,2018-12-03 17:44:15,238369264,"@@ -0,0 +1,208 @@
+===============",1,2018-12-03 17:44:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238369264,https://github.com/hyperledger/sawtooth-next-directory/pull/702#discussion_r238369264,Nonj
https://github.com/hyperledger/sawtooth-next-directory/pull/698,https://github.com/hyperledger/sawtooth-next-directory/pull/698,"I believe the sawtooth-validator image supplies the features NEXT needs to instrument consensus. However, I am still trying to understand why these other modules need those features. We could probably find an alternative base image having only the stuff we need if caching is the primary goal. Awaiting feedback in #708. ",1cffaf4e2970daf7650b8d71df7f88e618ea5a30,2018-12-02 05:57:05,238085970,"@@ -0,0 +1,44 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# -----------------------------------------------------------------------------
+# Begin base docker image config for Hyperledger RBAC Next Directory
+# This should remain the same for all python containers to maximize caching
+# -----------------------------------------------------------------------------
+FROM hyperledger/sawtooth-validator:1.0",20,2018-12-04 19:42:24,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238085970,https://github.com/hyperledger/sawtooth-next-directory/pull/698#discussion_r238085970,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/698,https://github.com/hyperledger/sawtooth-next-directory/pull/698,"I agree, the python image we use in `rbac-providers-azure` is pretty light, and we can use a lighter weight alpine version since we don't have to use `apt-get` or any other non-pip package manager?",1cffaf4e2970daf7650b8d71df7f88e618ea5a30,2018-12-04 02:06:08,238507652,"@@ -0,0 +1,44 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# -----------------------------------------------------------------------------
+# Begin base docker image config for Hyperledger RBAC Next Directory
+# This should remain the same for all python containers to maximize caching
+# -----------------------------------------------------------------------------
+FROM hyperledger/sawtooth-validator:1.0",20,2018-12-04 19:42:24,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238507652,https://github.com/hyperledger/sawtooth-next-directory/pull/698#discussion_r238507652,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/698,https://github.com/hyperledger/sawtooth-next-directory/pull/698,"Created #726.
",1cffaf4e2970daf7650b8d71df7f88e618ea5a30,2018-12-04 18:11:31,238777375,"@@ -0,0 +1,44 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# -----------------------------------------------------------------------------
+# Begin base docker image config for Hyperledger RBAC Next Directory
+# This should remain the same for all python containers to maximize caching
+# -----------------------------------------------------------------------------
+FROM hyperledger/sawtooth-validator:1.0",20,2018-12-04 19:42:24,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238777375,https://github.com/hyperledger/sawtooth-next-directory/pull/698#discussion_r238777375,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/695,https://github.com/hyperledger/sawtooth-next-directory/pull/695,Need a docstring explaining function,ffa21a457e66307577b8e60135c7a6d946603ce8,2018-11-30 20:10:17,237988238,"@@ -39,6 +42,29 @@ def validate_fields(required_fields, body):
         raise ApiBadRequest(""Bad Request: Improper JSON format"")
 
 
+def create_authorization_response(token, data):
+    response = json({""data"": data})",26,2018-11-30 21:24:28,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237988238,https://github.com/hyperledger/sawtooth-next-directory/pull/695#discussion_r237988238,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/695,https://github.com/hyperledger/sawtooth-next-directory/pull/695,Docstring,ffa21a457e66307577b8e60135c7a6d946603ce8,2018-11-30 20:10:45,237988368,"@@ -39,6 +42,29 @@ def validate_fields(required_fields, body):
         raise ApiBadRequest(""Bad Request: Improper JSON format"")
 
 
+def create_authorization_response(token, data):
+    response = json({""data"": data})
+    response.cookies[SIGNATURE_KEY] = ""."".join(token.split(""."")[0:2])
+    response.cookies[PAYLOAD_KEY] = token.split(""."")[2]
+
+    response.cookies[SIGNATURE_KEY][""httponly""] = True
+    return response
+
+
+def extract_request_token(request):
+    try:",38,2018-11-30 21:24:28,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237988368,https://github.com/hyperledger/sawtooth-next-directory/pull/695#discussion_r237988368,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/695,https://github.com/hyperledger/sawtooth-next-directory/pull/695,"Are you trying to check if it is None or an empty string here?
",ffa21a457e66307577b8e60135c7a6d946603ce8,2018-11-30 20:11:52,237988668,"@@ -39,6 +42,29 @@ def validate_fields(required_fields, body):
         raise ApiBadRequest(""Bad Request: Improper JSON format"")
 
 
+def create_authorization_response(token, data):
+    response = json({""data"": data})
+    response.cookies[SIGNATURE_KEY] = ""."".join(token.split(""."")[0:2])
+    response.cookies[PAYLOAD_KEY] = token.split(""."")[2]
+
+    response.cookies[SIGNATURE_KEY][""httponly""] = True
+    return response
+
+
+def extract_request_token(request):
+    try:
+        return request.json[""tracker""][""slots""][""token""]
+    except (KeyError, TypeError):
+        pass
+    if request.cookies.get(SIGNATURE_KEY) is None:",42,2018-11-30 21:24:28,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237988668,https://github.com/hyperledger/sawtooth-next-directory/pull/695#discussion_r237988668,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/695,https://github.com/hyperledger/sawtooth-next-directory/pull/695,docstrings on all new functions,ffa21a457e66307577b8e60135c7a6d946603ce8,2018-11-30 20:12:23,237988824,"@@ -0,0 +1,44 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import logging
+
+from sanic import Blueprint
+
+from rbac.server.api.auth import authorized
+from rbac.server.api import roles
+from rbac.server.api import utils
+
+LOGGER = logging.getLogger(__name__)
+WEBHOOKS_BP = Blueprint(""webhooks"")
+
+
+@WEBHOOKS_BP.post(""webhooks/chatbot"")
+@authorized()
+async def chatbot_webhook(request):
+    required_fields = [""tracker"", ""sender_id""]",34,2018-11-30 21:24:28,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237988824,https://github.com/hyperledger/sawtooth-next-directory/pull/695#discussion_r237988824,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/695,https://github.com/hyperledger/sawtooth-next-directory/pull/695,# 👾,ffa21a457e66307577b8e60135c7a6d946603ce8,2018-11-30 21:30:36,238008113,"@@ -39,6 +42,29 @@ def validate_fields(required_fields, body):
         raise ApiBadRequest(""Bad Request: Improper JSON format"")
 
 
+def create_authorization_response(token, data):
+    response = json({""data"": data})",26,2018-11-30 21:30:37,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238008113,https://github.com/hyperledger/sawtooth-next-directory/pull/695#discussion_r238008113,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/695,https://github.com/hyperledger/sawtooth-next-directory/pull/695,None.,ffa21a457e66307577b8e60135c7a6d946603ce8,2018-11-30 21:31:19,238008291,"@@ -39,6 +42,29 @@ def validate_fields(required_fields, body):
         raise ApiBadRequest(""Bad Request: Improper JSON format"")
 
 
+def create_authorization_response(token, data):
+    response = json({""data"": data})
+    response.cookies[SIGNATURE_KEY] = ""."".join(token.split(""."")[0:2])
+    response.cookies[PAYLOAD_KEY] = token.split(""."")[2]
+
+    response.cookies[SIGNATURE_KEY][""httponly""] = True
+    return response
+
+
+def extract_request_token(request):
+    try:
+        return request.json[""tracker""][""slots""][""token""]
+    except (KeyError, TypeError):
+        pass
+    if request.cookies.get(SIGNATURE_KEY) is None:",42,2018-11-30 21:31:20,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238008291,https://github.com/hyperledger/sawtooth-next-directory/pull/695#discussion_r238008291,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/695,https://github.com/hyperledger/sawtooth-next-directory/pull/695,# 👾,ffa21a457e66307577b8e60135c7a6d946603ce8,2018-11-30 21:31:27,238008326,"@@ -0,0 +1,44 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import logging
+
+from sanic import Blueprint
+
+from rbac.server.api.auth import authorized
+from rbac.server.api import roles
+from rbac.server.api import utils
+
+LOGGER = logging.getLogger(__name__)
+WEBHOOKS_BP = Blueprint(""webhooks"")
+
+
+@WEBHOOKS_BP.post(""webhooks/chatbot"")
+@authorized()
+async def chatbot_webhook(request):
+    required_fields = [""tracker"", ""sender_id""]",34,2018-11-30 21:31:27,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238008326,https://github.com/hyperledger/sawtooth-next-directory/pull/695#discussion_r238008326,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/695,https://github.com/hyperledger/sawtooth-next-directory/pull/695,# 👾,ffa21a457e66307577b8e60135c7a6d946603ce8,2018-11-30 21:31:33,238008345,"@@ -39,6 +42,29 @@ def validate_fields(required_fields, body):
         raise ApiBadRequest(""Bad Request: Improper JSON format"")
 
 
+def create_authorization_response(token, data):
+    response = json({""data"": data})
+    response.cookies[SIGNATURE_KEY] = ""."".join(token.split(""."")[0:2])
+    response.cookies[PAYLOAD_KEY] = token.split(""."")[2]
+
+    response.cookies[SIGNATURE_KEY][""httponly""] = True
+    return response
+
+
+def extract_request_token(request):
+    try:",38,2018-11-30 21:31:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238008345,https://github.com/hyperledger/sawtooth-next-directory/pull/695#discussion_r238008345,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"This section can be written as 
if data:
    return self.deserialize(address=address, data=data)
 instead of the if data is None return None as the function will return None as default
",bfef6d553b88c19675139c30c60c77cc1948de49,2018-11-30 23:14:26,238030811,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data is None:",,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238030811,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238030811,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"Same logic here where 
if container:
return self_find_in_state_container(
            container=container,
            address=address,
            object_id=object_id,
            target_id=target_id,
        )",bfef6d553b88c19675139c30c60c77cc1948de49,2018-11-30 23:18:22,238031449,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data is None:
+            return None
+        return self.deserialize(address=address, data=data)
+
+    def get_addresses(self, context, addresses):
+        """"""Get the list of blockchain addresses""""""
+        return state_client.get_addresses(context=context, addresses=addresses)
+
+    def get_from_state_context(self, context, object_id, target_id=None):
+        """"""Gets an address from the blockchain state""""""
         address = self.address(object_id=object_id, target_id=target_id)
+        container = self.get_address(context=context, address=address)
+        if not container:",,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238031449,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238031449,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-01 02:59:01,238049764,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data is None:",,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238049764,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238049764,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-01 02:59:05,238049765,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data is None:
+            return None
+        return self.deserialize(address=address, data=data)
+
+    def get_addresses(self, context, addresses):
+        """"""Get the list of blockchain addresses""""""
+        return state_client.get_addresses(context=context, addresses=addresses)
+
+    def get_from_state_context(self, context, object_id, target_id=None):
+        """"""Gets an address from the blockchain state""""""
         address = self.address(object_id=object_id, target_id=target_id)
+        container = self.get_address(context=context, address=address)
+        if not container:",,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238049765,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238049765,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"I did flip the condition around, but the statement must always explicitly return.",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-01 16:29:44,238068701,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data is None:
+            return None
+        return self.deserialize(address=address, data=data)
+
+    def get_addresses(self, context, addresses):
+        """"""Get the list of blockchain addresses""""""
+        return state_client.get_addresses(context=context, addresses=addresses)
+
+    def get_from_state_context(self, context, object_id, target_id=None):
+        """"""Gets an address from the blockchain state""""""
         address = self.address(object_id=object_id, target_id=target_id)
+        container = self.get_address(context=context, address=address)
+        if not container:",,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238068701,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238068701,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"I did flip the condition around, but the statement must always explicitly return.",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-01 16:29:52,238068707,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data is None:",,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238068707,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238068707,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,Nitpick: Typo in 'collision',bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-02 06:28:40,238086492,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data:
+            return self.deserialize(address=address, data=data)
+        return None
+
+    def get_addresses(self, context, addresses):
+        """"""Get the list of blockchain addresses""""""
+        return state_client.get_addresses(context=context, addresses=addresses)
+
+    def get_from_state_context(self, context, object_id, target_id=None):
+        """"""Gets an address from the blockchain state""""""
         address = self.address(object_id=object_id, target_id=target_id)
+        container = self.get_address(context=context, address=address)
+        if container:
+            return self._find_in_state_container(
+                container=container,
+                address=address,
+                object_id=object_id,
+                target_id=target_id,
+            )
+        return None
+
+    def _get_new_state(self):
+        """"""Returns a new state container (protobuf) with a single store object""""""
         # pylint: disable=not-callable
         container = self._state_container()
+        getattr(container, self._state_container_list_name).extend(
+            [self._state_object()]
+        )
+        store = getattr(container, self._state_container_list_name)[0]
+        return container, store
 
-        results = state_client.get_address(state=state, address=address)
-        if not list(results):
+    def get_from_input_state(self, inputs, input_state, object_id, target_id=None):
+        """"""Get an address from the transaction input state""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in inputs:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an input address"".format(
+                    self.parse(address).address_type,
+                    address,
+                    self._name_id,
+                    object_id,
+                    target_id,
+                )
+            )
+        if address not in input_state:
             return None
+        container = input_state[address]
+        if container:
+            return self._find_in_state_container(
+                container=container,
+                address=address,
+                object_id=object_id,
+                target_id=target_id,
+            )
+        return None
 
-        container.ParseFromString(results[0].data)
+    def get_from_output_state(self, outputs, output_state, object_id, target_id=None):
+        """"""Get an address from the transaction output state""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an output address"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        if address not in output_state:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        container = output_state[address]
+        if not container:
+            raise ValueError(
+                ""{} address {} for {} {} target {} had no container in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
         return self._find_in_state_container(
             container=container,
             address=address,
             object_id=object_id,
             target_id=target_id,
         )
 
-    def address_exists(self, state, object_id, target_id=None):
+    def set_output_state_attribute(
+        self, name, value, outputs, output_state, object_id, target_id=None
+    ):
+        """"""Sets an attribute in the state store object""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        store = self.get_from_output_state(
+            outputs=outputs,
+            output_state=output_state,
+            object_id=object_id,
+            target_id=target_id,
+        )
+        if not store:
+            raise ValueError(
+                ""set_output_state_attribute error: {} address {} for {} {} target {} had no store object in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        if not hasattr(store, name):
+            raise KeyError(
+                ""{} address {} for {} {} target {} store has no attribute '{}'"".format(
+                    self._name_title, address, self._name_id, object_id, target_id, name
+                )
+            )
+        setattr(store, name, value)
+        output_state[""changed""].add(address)
+
+    def address_exists(self, context, object_id, target_id=None):
         """"""Checks to see if an address already exists on the blockchain
-        for a given object or object relationship
-        (state object is available when message is handled by transaction processor)""""""
+        for a given object or object relationship""""""
         address = self.address(object_id=object_id, target_id=target_id)
-        results = state_client.get_address(state=state, address=address)
-        if not list(results):
+        content = state_client.get_address(context=context, address=address)
+        if content is None:
             return False
         return True
 
-    def exists_in_state(self, state, object_id, target_id=None, fast_check=False):
+    def exists_in_state(self, context, object_id, target_id=None, fast_check=False):
         """"""Checks an object exists in the blockchain
         fast_check False will see if the object really exists and isn't a hash collission
-        fast_check True will only check to see the address exists (generally sufficient)
-        (state object is available when message is handled by transaction processor)""""""
+        fast_check True will only check to see the address exists (generally sufficient)""""""
         if fast_check:  # check address exists only, not contents of address
             return self.address_exists(
-                state=state, object_id=object_id, target_id=target_id
+                context=context, object_id=object_id, target_id=target_id
             )
 
-        result = self.get_from_state(
-            state=state, object_id=object_id, target_id=target_id
+        result = self.get_from_state_context(
+            context=context, object_id=object_id, target_id=target_id
         )
         return bool(result is not None)
+
+    def exists_in_inputs(self, inputs, object_id, target_id=None):
+        """"""Check an address exists in transaction inputs""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        return bool(address in inputs)
+
+    def exists_in_outputs(self, outputs, object_id, target_id=None):
+        """"""Check an address exists in transaction outputs""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        return bool(address in outputs)
+
+    def exists_in_state_inputs(
+        self,
+        inputs,
+        input_state,
+        object_id,
+        target_id=None,
+        skip_if_not_in_inputs=False,
+    ):
+        """"""Check an object exists in the blockchain via inputs and input_state
+        input_state is the result of a state query on addresses=inputs""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in inputs:
+            if skip_if_not_in_inputs:
+                return True
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an input address"".format(
+                    self.parse(address).address_type,
+                    address,
+                    self._name_id,
+                    object_id,
+                    target_id,
+                )
+            )
+        return bool(address in input_state)
+
+    def exist_in_state(self, context, object_ids, target_id=None, fast_check=False):
+        """"""Checks that all the object ids passed in object_list exist in the blockchain
+        fast_check False will see if the object really exists and isn't a hash collission",333,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238086492,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238086492,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"I am having a hard time understanding all of the things this file is responsible for. 
The simple string manipulations (uppercasing, camel casing, etc) could be extracted into a dedicated case converter.
The validations could be extracted into a validator. 
The file is called base_state, but has getters for inbound and outbound state that are extracting content from messages. The getters themselves perform a series of checks and validations, but in some cases simply return None. I am assuming these are checks for available write space?

If this is a state manager, please name it as such. Maybe call it state_manager and subclasses transaction_state_manager and message_state_manager?",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-02 06:34:20,238086581,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data:
+            return self.deserialize(address=address, data=data)
+        return None
+
+    def get_addresses(self, context, addresses):
+        """"""Get the list of blockchain addresses""""""
+        return state_client.get_addresses(context=context, addresses=addresses)
+
+    def get_from_state_context(self, context, object_id, target_id=None):
+        """"""Gets an address from the blockchain state""""""
         address = self.address(object_id=object_id, target_id=target_id)
+        container = self.get_address(context=context, address=address)
+        if container:
+            return self._find_in_state_container(
+                container=container,
+                address=address,
+                object_id=object_id,
+                target_id=target_id,
+            )
+        return None
+
+    def _get_new_state(self):
+        """"""Returns a new state container (protobuf) with a single store object""""""
         # pylint: disable=not-callable
         container = self._state_container()
+        getattr(container, self._state_container_list_name).extend(
+            [self._state_object()]
+        )
+        store = getattr(container, self._state_container_list_name)[0]
+        return container, store
 
-        results = state_client.get_address(state=state, address=address)
-        if not list(results):
+    def get_from_input_state(self, inputs, input_state, object_id, target_id=None):",180,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238086581,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238086581,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"Should this be called get_address_content() or get_address_data() per the docstring, or is it returning the deserialized address and the docstring is phrased inconsistently?",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-02 06:35:56,238086610,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):",144,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238086610,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238086610,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"Is this in_state, or out_state?",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-02 06:42:54,238086732,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data:
+            return self.deserialize(address=address, data=data)
+        return None
+
+    def get_addresses(self, context, addresses):
+        """"""Get the list of blockchain addresses""""""
+        return state_client.get_addresses(context=context, addresses=addresses)
+
+    def get_from_state_context(self, context, object_id, target_id=None):
+        """"""Gets an address from the blockchain state""""""
         address = self.address(object_id=object_id, target_id=target_id)
+        container = self.get_address(context=context, address=address)
+        if container:
+            return self._find_in_state_container(
+                container=container,
+                address=address,
+                object_id=object_id,
+                target_id=target_id,
+            )
+        return None
+
+    def _get_new_state(self):
+        """"""Returns a new state container (protobuf) with a single store object""""""
         # pylint: disable=not-callable
         container = self._state_container()
+        getattr(container, self._state_container_list_name).extend(
+            [self._state_object()]
+        )
+        store = getattr(container, self._state_container_list_name)[0]
+        return container, store
 
-        results = state_client.get_address(state=state, address=address)
-        if not list(results):
+    def get_from_input_state(self, inputs, input_state, object_id, target_id=None):
+        """"""Get an address from the transaction input state""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in inputs:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an input address"".format(
+                    self.parse(address).address_type,
+                    address,
+                    self._name_id,
+                    object_id,
+                    target_id,
+                )
+            )
+        if address not in input_state:
             return None
+        container = input_state[address]
+        if container:
+            return self._find_in_state_container(
+                container=container,
+                address=address,
+                object_id=object_id,
+                target_id=target_id,
+            )
+        return None
 
-        container.ParseFromString(results[0].data)
+    def get_from_output_state(self, outputs, output_state, object_id, target_id=None):
+        """"""Get an address from the transaction output state""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an output address"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        if address not in output_state:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        container = output_state[address]
+        if not container:
+            raise ValueError(
+                ""{} address {} for {} {} target {} had no container in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
         return self._find_in_state_container(
             container=container,
             address=address,
             object_id=object_id,
             target_id=target_id,
         )
 
-    def address_exists(self, state, object_id, target_id=None):
+    def set_output_state_attribute(
+        self, name, value, outputs, output_state, object_id, target_id=None
+    ):
+        """"""Sets an attribute in the state store object""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        store = self.get_from_output_state(
+            outputs=outputs,
+            output_state=output_state,
+            object_id=object_id,
+            target_id=target_id,
+        )
+        if not store:
+            raise ValueError(
+                ""set_output_state_attribute error: {} address {} for {} {} target {} had no store object in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        if not hasattr(store, name):
+            raise KeyError(
+                ""{} address {} for {} {} target {} store has no attribute '{}'"".format(
+                    self._name_title, address, self._name_id, object_id, target_id, name
+                )
+            )
+        setattr(store, name, value)
+        output_state[""changed""].add(address)
+
+    def address_exists(self, context, object_id, target_id=None):
         """"""Checks to see if an address already exists on the blockchain
-        for a given object or object relationship
-        (state object is available when message is handled by transaction processor)""""""
+        for a given object or object relationship""""""
         address = self.address(object_id=object_id, target_id=target_id)
-        results = state_client.get_address(state=state, address=address)
-        if not list(results):
+        content = state_client.get_address(context=context, address=address)
+        if content is None:
             return False
         return True
 
-    def exists_in_state(self, state, object_id, target_id=None, fast_check=False):
+    def exists_in_state(self, context, object_id, target_id=None, fast_check=False):",276,2018-12-03 20:09:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238086732,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238086732,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,It's the context object from the Sawtooth validator. The rename was to avoid confusion.,bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-03 17:51:59,238371849,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data:
+            return self.deserialize(address=address, data=data)
+        return None
+
+    def get_addresses(self, context, addresses):
+        """"""Get the list of blockchain addresses""""""
+        return state_client.get_addresses(context=context, addresses=addresses)
+
+    def get_from_state_context(self, context, object_id, target_id=None):
+        """"""Gets an address from the blockchain state""""""
         address = self.address(object_id=object_id, target_id=target_id)
+        container = self.get_address(context=context, address=address)
+        if container:
+            return self._find_in_state_container(
+                container=container,
+                address=address,
+                object_id=object_id,
+                target_id=target_id,
+            )
+        return None
+
+    def _get_new_state(self):
+        """"""Returns a new state container (protobuf) with a single store object""""""
         # pylint: disable=not-callable
         container = self._state_container()
+        getattr(container, self._state_container_list_name).extend(
+            [self._state_object()]
+        )
+        store = getattr(container, self._state_container_list_name)[0]
+        return container, store
 
-        results = state_client.get_address(state=state, address=address)
-        if not list(results):
+    def get_from_input_state(self, inputs, input_state, object_id, target_id=None):
+        """"""Get an address from the transaction input state""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in inputs:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an input address"".format(
+                    self.parse(address).address_type,
+                    address,
+                    self._name_id,
+                    object_id,
+                    target_id,
+                )
+            )
+        if address not in input_state:
             return None
+        container = input_state[address]
+        if container:
+            return self._find_in_state_container(
+                container=container,
+                address=address,
+                object_id=object_id,
+                target_id=target_id,
+            )
+        return None
 
-        container.ParseFromString(results[0].data)
+    def get_from_output_state(self, outputs, output_state, object_id, target_id=None):
+        """"""Get an address from the transaction output state""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an output address"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        if address not in output_state:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        container = output_state[address]
+        if not container:
+            raise ValueError(
+                ""{} address {} for {} {} target {} had no container in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
         return self._find_in_state_container(
             container=container,
             address=address,
             object_id=object_id,
             target_id=target_id,
         )
 
-    def address_exists(self, state, object_id, target_id=None):
+    def set_output_state_attribute(
+        self, name, value, outputs, output_state, object_id, target_id=None
+    ):
+        """"""Sets an attribute in the state store object""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        store = self.get_from_output_state(
+            outputs=outputs,
+            output_state=output_state,
+            object_id=object_id,
+            target_id=target_id,
+        )
+        if not store:
+            raise ValueError(
+                ""set_output_state_attribute error: {} address {} for {} {} target {} had no store object in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        if not hasattr(store, name):
+            raise KeyError(
+                ""{} address {} for {} {} target {} store has no attribute '{}'"".format(
+                    self._name_title, address, self._name_id, object_id, target_id, name
+                )
+            )
+        setattr(store, name, value)
+        output_state[""changed""].add(address)
+
+    def address_exists(self, context, object_id, target_id=None):
         """"""Checks to see if an address already exists on the blockchain
-        for a given object or object relationship
-        (state object is available when message is handled by transaction processor)""""""
+        for a given object or object relationship""""""
         address = self.address(object_id=object_id, target_id=target_id)
-        results = state_client.get_address(state=state, address=address)
-        if not list(results):
+        content = state_client.get_address(context=context, address=address)
+        if content is None:
             return False
         return True
 
-    def exists_in_state(self, state, object_id, target_id=None, fast_check=False):
+    def exists_in_state(self, context, object_id, target_id=None, fast_check=False):",276,2018-12-03 20:10:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238371849,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238371849,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"Yes, it's getting the state of an address. It's called get_state in Sawtooth, but I find that more confusing. Address is the only parameter (other than a reference to the context object), thus it is literally: get address.",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-03 17:53:26,238372325,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):",144,2018-12-03 20:13:20,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238372325,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238372325,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,Have you made a ticket for this?  Or written tests to check if it gets the first item?,bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-03 20:01:31,238416661,"@@ -225,28 +362,187 @@ def get(self, object_id, target_id=None):
             target_id=target_id,
         )
 
+    def get_addresses(self, context, addresses):
+        """"""Get the deserialized state entries given a list of blockchain addresses""""""
+        state_entries = {}
+        records = state_client.get_addresses(context=context, addresses=addresses)
+        if not records:
+            return state_entries
+        for record in records:
+            state_entries[record.address] = addresser.deserialize(
+                address=record.address, data=record.data
+            )
+        return state_entries
+
+    def _make_output_state(self, input_state, outputs):
+        """"""Makes the output state entries from the input state and
+        adds the addresses that were not in state""""""
+        output_state = {""changed"": set()}
+        inputs_to_outputs = [address for address in outputs if address in input_state]
+        for address in inputs_to_outputs:
+            output_state[address] = input_state[address]
+        return output_state
+
     def message_to_storage(self, message):
         """"""Transforms the message into the state (storage) object""""""
-        # pylint: disable=not-callable
         return batcher.message_to_message(
-            self._state_object(), self._name_camel, message
+            # pylint: disable=not-callable
+            message_to=self._state_object(),
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
         )
 
-    def set_state(self, state, message, object_id, target_id=None):
+    def set_state(self, context, message, outputs, object_id, target_id=None):
         """"""Creates a new address in the blockchain state""""""
         store = self.message_to_storage(message=message)
         # pylint: disable=no-member,not-callable
         container = self._state_container()
-        container.users.extend([store])
+        getattr(container, self._state_container_list_name).extend([store])
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        state_client.set_address(context=context, address=address, container=container)
+
+    def _get_store(self, object_id, target_id, outputs, output_state):
+        """"""Gets the store object to store data for this message""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        container = None
+        if address not in outputs and address in output_state:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        if address in output_state:
+            container = output_state[address]
+            # TODO: is getting the first item in the container... may not be correct!",318,2018-12-03 20:55:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238416661,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238416661,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,Why is this function just to pass?,bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-03 20:04:48,238417766,"@@ -225,28 +362,187 @@ def get(self, object_id, target_id=None):
             target_id=target_id,
         )
 
+    def get_addresses(self, context, addresses):
+        """"""Get the deserialized state entries given a list of blockchain addresses""""""
+        state_entries = {}
+        records = state_client.get_addresses(context=context, addresses=addresses)
+        if not records:
+            return state_entries
+        for record in records:
+            state_entries[record.address] = addresser.deserialize(
+                address=record.address, data=record.data
+            )
+        return state_entries
+
+    def _make_output_state(self, input_state, outputs):
+        """"""Makes the output state entries from the input state and
+        adds the addresses that were not in state""""""
+        output_state = {""changed"": set()}
+        inputs_to_outputs = [address for address in outputs if address in input_state]
+        for address in inputs_to_outputs:
+            output_state[address] = input_state[address]
+        return output_state
+
     def message_to_storage(self, message):
         """"""Transforms the message into the state (storage) object""""""
-        # pylint: disable=not-callable
         return batcher.message_to_message(
-            self._state_object(), self._name_camel, message
+            # pylint: disable=not-callable
+            message_to=self._state_object(),
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
         )
 
-    def set_state(self, state, message, object_id, target_id=None):
+    def set_state(self, context, message, outputs, object_id, target_id=None):
         """"""Creates a new address in the blockchain state""""""
         store = self.message_to_storage(message=message)
         # pylint: disable=no-member,not-callable
         container = self._state_container()
-        container.users.extend([store])
+        getattr(container, self._state_container_list_name).extend([store])
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        state_client.set_address(context=context, address=address, container=container)
+
+    def _get_store(self, object_id, target_id, outputs, output_state):
+        """"""Gets the store object to store data for this message""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        container = None
+        if address not in outputs and address in output_state:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        if address in output_state:
+            container = output_state[address]
+            # TODO: is getting the first item in the container... may not be correct!
+            store = getattr(container, self._state_container_list_name)[0]
+        if not container:
+            container, store = self._get_new_state()
+            output_state[address] = container
+        return store
+
+    def _update_store(
+        self, object_id, target_id, message, store, outputs, output_state, signer
+    ):
+        """"""Update the output state entries for the given address using
+        the data the given message""""""
         address = self.address(object_id=object_id, target_id=target_id)
-        state_client.set_address(state=state, address=address, container=container)
+        self.store_message(
+            object_id=object_id,
+            target_id=target_id,
+            store=store,
+            message=message,
+            outputs=outputs,
+            output_state=output_state,
+            signer=signer,
+        )
+        output_state[""changed""].add(address)
 
-    def apply(self, header, payload, state):
+    # pylint: disable=unused-argument
+    def store_message(
+        self, object_id, target_id, store, message, outputs, output_state, signer
+    ):
+        """"""Copies a message to the state object, excluding properties
+        listed in message_fields_not_in_state property. This provides
+        a simple default behavior for cases where this is appropriate;
+        commonly override this method in message classes""""""
+        batcher.message_to_message(
+            message_to=store,
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
+        )
+
+    def save_state(self, context, output_state):
+        """"""Save the output state to the blockchain""""""
+        changed = [
+            address
+            for address in output_state.keys()
+            if address in output_state[""changed""]
+        ]
+        entries = {}
+        for address in changed:
+            entries[address] = output_state[address].SerializeToString()
+        state_client.set_state(context=context, entries=entries)
+
+    def apply_update(
+        self, message, object_id, target_id, outputs, output_state, signer
+    ):
+        """"""Apply additional state changes (if any)
+        Message implementation will override this method if there
+        is data to be stored in any other address""""""
+        pass",377,2018-12-03 20:55:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238417766,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238417766,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,Having a function that just returns False seems odd.  Why are you not just returning False where it is being called?,bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-03 20:06:44,238418352,"@@ -225,28 +362,187 @@ def get(self, object_id, target_id=None):
             target_id=target_id,
         )
 
+    def get_addresses(self, context, addresses):
+        """"""Get the deserialized state entries given a list of blockchain addresses""""""
+        state_entries = {}
+        records = state_client.get_addresses(context=context, addresses=addresses)
+        if not records:
+            return state_entries
+        for record in records:
+            state_entries[record.address] = addresser.deserialize(
+                address=record.address, data=record.data
+            )
+        return state_entries
+
+    def _make_output_state(self, input_state, outputs):
+        """"""Makes the output state entries from the input state and
+        adds the addresses that were not in state""""""
+        output_state = {""changed"": set()}
+        inputs_to_outputs = [address for address in outputs if address in input_state]
+        for address in inputs_to_outputs:
+            output_state[address] = input_state[address]
+        return output_state
+
     def message_to_storage(self, message):
         """"""Transforms the message into the state (storage) object""""""
-        # pylint: disable=not-callable
         return batcher.message_to_message(
-            self._state_object(), self._name_camel, message
+            # pylint: disable=not-callable
+            message_to=self._state_object(),
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
         )
 
-    def set_state(self, state, message, object_id, target_id=None):
+    def set_state(self, context, message, outputs, object_id, target_id=None):
         """"""Creates a new address in the blockchain state""""""
         store = self.message_to_storage(message=message)
         # pylint: disable=no-member,not-callable
         container = self._state_container()
-        container.users.extend([store])
+        getattr(container, self._state_container_list_name).extend([store])
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        state_client.set_address(context=context, address=address, container=container)
+
+    def _get_store(self, object_id, target_id, outputs, output_state):
+        """"""Gets the store object to store data for this message""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        container = None
+        if address not in outputs and address in output_state:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        if address in output_state:
+            container = output_state[address]
+            # TODO: is getting the first item in the container... may not be correct!
+            store = getattr(container, self._state_container_list_name)[0]
+        if not container:
+            container, store = self._get_new_state()
+            output_state[address] = container
+        return store
+
+    def _update_store(
+        self, object_id, target_id, message, store, outputs, output_state, signer
+    ):
+        """"""Update the output state entries for the given address using
+        the data the given message""""""
         address = self.address(object_id=object_id, target_id=target_id)
-        state_client.set_address(state=state, address=address, container=container)
+        self.store_message(
+            object_id=object_id,
+            target_id=target_id,
+            store=store,
+            message=message,
+            outputs=outputs,
+            output_state=output_state,
+            signer=signer,
+        )
+        output_state[""changed""].add(address)
 
-    def apply(self, header, payload, state):
+    # pylint: disable=unused-argument
+    def store_message(
+        self, object_id, target_id, store, message, outputs, output_state, signer
+    ):
+        """"""Copies a message to the state object, excluding properties
+        listed in message_fields_not_in_state property. This provides
+        a simple default behavior for cases where this is appropriate;
+        commonly override this method in message classes""""""
+        batcher.message_to_message(
+            message_to=store,
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
+        )
+
+    def save_state(self, context, output_state):
+        """"""Save the output state to the blockchain""""""
+        changed = [
+            address
+            for address in output_state.keys()
+            if address in output_state[""changed""]
+        ]
+        entries = {}
+        for address in changed:
+            entries[address] = output_state[address].SerializeToString()
+        state_client.set_state(context=context, entries=entries)
+
+    def apply_update(
+        self, message, object_id, target_id, outputs, output_state, signer
+    ):
+        """"""Apply additional state changes (if any)
+        Message implementation will override this method if there
+        is data to be stored in any other address""""""
+        pass
+
+    @property
+    def allow_signer_not_in_state(self):
+        """"""Whether the signer of the message is allowed to not be",381,2018-12-03 20:55:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238418352,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238418352,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,fixed,bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-03 20:09:54,238419319,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):
+        """"""Get the deserialized data of a blockchain address""""""
+        data = state_client.get_address(context=context, address=address)
+        if data:
+            return self.deserialize(address=address, data=data)
+        return None
+
+    def get_addresses(self, context, addresses):
+        """"""Get the list of blockchain addresses""""""
+        return state_client.get_addresses(context=context, addresses=addresses)
+
+    def get_from_state_context(self, context, object_id, target_id=None):
+        """"""Gets an address from the blockchain state""""""
         address = self.address(object_id=object_id, target_id=target_id)
+        container = self.get_address(context=context, address=address)
+        if container:
+            return self._find_in_state_container(
+                container=container,
+                address=address,
+                object_id=object_id,
+                target_id=target_id,
+            )
+        return None
+
+    def _get_new_state(self):
+        """"""Returns a new state container (protobuf) with a single store object""""""
         # pylint: disable=not-callable
         container = self._state_container()
+        getattr(container, self._state_container_list_name).extend(
+            [self._state_object()]
+        )
+        store = getattr(container, self._state_container_list_name)[0]
+        return container, store
 
-        results = state_client.get_address(state=state, address=address)
-        if not list(results):
+    def get_from_input_state(self, inputs, input_state, object_id, target_id=None):
+        """"""Get an address from the transaction input state""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in inputs:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an input address"".format(
+                    self.parse(address).address_type,
+                    address,
+                    self._name_id,
+                    object_id,
+                    target_id,
+                )
+            )
+        if address not in input_state:
             return None
+        container = input_state[address]
+        if container:
+            return self._find_in_state_container(
+                container=container,
+                address=address,
+                object_id=object_id,
+                target_id=target_id,
+            )
+        return None
 
-        container.ParseFromString(results[0].data)
+    def get_from_output_state(self, outputs, output_state, object_id, target_id=None):
+        """"""Get an address from the transaction output state""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an output address"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        if address not in output_state:
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        container = output_state[address]
+        if not container:
+            raise ValueError(
+                ""{} address {} for {} {} target {} had no container in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
         return self._find_in_state_container(
             container=container,
             address=address,
             object_id=object_id,
             target_id=target_id,
         )
 
-    def address_exists(self, state, object_id, target_id=None):
+    def set_output_state_attribute(
+        self, name, value, outputs, output_state, object_id, target_id=None
+    ):
+        """"""Sets an attribute in the state store object""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        store = self.get_from_output_state(
+            outputs=outputs,
+            output_state=output_state,
+            object_id=object_id,
+            target_id=target_id,
+        )
+        if not store:
+            raise ValueError(
+                ""set_output_state_attribute error: {} address {} for {} {} target {} had no store object in output state"".format(
+                    self._name_title, address, self._name_id, object_id, target_id
+                )
+            )
+        if not hasattr(store, name):
+            raise KeyError(
+                ""{} address {} for {} {} target {} store has no attribute '{}'"".format(
+                    self._name_title, address, self._name_id, object_id, target_id, name
+                )
+            )
+        setattr(store, name, value)
+        output_state[""changed""].add(address)
+
+    def address_exists(self, context, object_id, target_id=None):
         """"""Checks to see if an address already exists on the blockchain
-        for a given object or object relationship
-        (state object is available when message is handled by transaction processor)""""""
+        for a given object or object relationship""""""
         address = self.address(object_id=object_id, target_id=target_id)
-        results = state_client.get_address(state=state, address=address)
-        if not list(results):
+        content = state_client.get_address(context=context, address=address)
+        if content is None:
             return False
         return True
 
-    def exists_in_state(self, state, object_id, target_id=None, fast_check=False):
+    def exists_in_state(self, context, object_id, target_id=None, fast_check=False):
         """"""Checks an object exists in the blockchain
         fast_check False will see if the object really exists and isn't a hash collission
-        fast_check True will only check to see the address exists (generally sufficient)
-        (state object is available when message is handled by transaction processor)""""""
+        fast_check True will only check to see the address exists (generally sufficient)""""""
         if fast_check:  # check address exists only, not contents of address
             return self.address_exists(
-                state=state, object_id=object_id, target_id=target_id
+                context=context, object_id=object_id, target_id=target_id
             )
 
-        result = self.get_from_state(
-            state=state, object_id=object_id, target_id=target_id
+        result = self.get_from_state_context(
+            context=context, object_id=object_id, target_id=target_id
         )
         return bool(result is not None)
+
+    def exists_in_inputs(self, inputs, object_id, target_id=None):
+        """"""Check an address exists in transaction inputs""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        return bool(address in inputs)
+
+    def exists_in_outputs(self, outputs, object_id, target_id=None):
+        """"""Check an address exists in transaction outputs""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        return bool(address in outputs)
+
+    def exists_in_state_inputs(
+        self,
+        inputs,
+        input_state,
+        object_id,
+        target_id=None,
+        skip_if_not_in_inputs=False,
+    ):
+        """"""Check an object exists in the blockchain via inputs and input_state
+        input_state is the result of a state query on addresses=inputs""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in inputs:
+            if skip_if_not_in_inputs:
+                return True
+            raise ValueError(
+                ""{} address {} for {} {} target {} was not sent as an input address"".format(
+                    self.parse(address).address_type,
+                    address,
+                    self._name_id,
+                    object_id,
+                    target_id,
+                )
+            )
+        return bool(address in input_state)
+
+    def exist_in_state(self, context, object_ids, target_id=None, fast_check=False):
+        """"""Checks that all the object ids passed in object_list exist in the blockchain
+        fast_check False will see if the object really exists and isn't a hash collission",333,2018-12-03 20:09:55,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238419319,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238419319,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"We have no present functionality that writes multiple records into a container yet. This will probably be correct if we add records to the top, but I wanted to leave the note there to make sure we are aware of the issue.",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-03 23:30:03,238479419,"@@ -225,28 +362,187 @@ def get(self, object_id, target_id=None):
             target_id=target_id,
         )
 
+    def get_addresses(self, context, addresses):
+        """"""Get the deserialized state entries given a list of blockchain addresses""""""
+        state_entries = {}
+        records = state_client.get_addresses(context=context, addresses=addresses)
+        if not records:
+            return state_entries
+        for record in records:
+            state_entries[record.address] = addresser.deserialize(
+                address=record.address, data=record.data
+            )
+        return state_entries
+
+    def _make_output_state(self, input_state, outputs):
+        """"""Makes the output state entries from the input state and
+        adds the addresses that were not in state""""""
+        output_state = {""changed"": set()}
+        inputs_to_outputs = [address for address in outputs if address in input_state]
+        for address in inputs_to_outputs:
+            output_state[address] = input_state[address]
+        return output_state
+
     def message_to_storage(self, message):
         """"""Transforms the message into the state (storage) object""""""
-        # pylint: disable=not-callable
         return batcher.message_to_message(
-            self._state_object(), self._name_camel, message
+            # pylint: disable=not-callable
+            message_to=self._state_object(),
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
         )
 
-    def set_state(self, state, message, object_id, target_id=None):
+    def set_state(self, context, message, outputs, object_id, target_id=None):
         """"""Creates a new address in the blockchain state""""""
         store = self.message_to_storage(message=message)
         # pylint: disable=no-member,not-callable
         container = self._state_container()
-        container.users.extend([store])
+        getattr(container, self._state_container_list_name).extend([store])
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        state_client.set_address(context=context, address=address, container=container)
+
+    def _get_store(self, object_id, target_id, outputs, output_state):
+        """"""Gets the store object to store data for this message""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        container = None
+        if address not in outputs and address in output_state:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        if address in output_state:
+            container = output_state[address]
+            # TODO: is getting the first item in the container... may not be correct!",318,2018-12-03 23:30:03,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238479419,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238479419,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,Because you can override it but aren't required to. It's a hook if a message needs to store data in other addresses.,bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-03 23:32:06,238479932,"@@ -225,28 +362,187 @@ def get(self, object_id, target_id=None):
             target_id=target_id,
         )
 
+    def get_addresses(self, context, addresses):
+        """"""Get the deserialized state entries given a list of blockchain addresses""""""
+        state_entries = {}
+        records = state_client.get_addresses(context=context, addresses=addresses)
+        if not records:
+            return state_entries
+        for record in records:
+            state_entries[record.address] = addresser.deserialize(
+                address=record.address, data=record.data
+            )
+        return state_entries
+
+    def _make_output_state(self, input_state, outputs):
+        """"""Makes the output state entries from the input state and
+        adds the addresses that were not in state""""""
+        output_state = {""changed"": set()}
+        inputs_to_outputs = [address for address in outputs if address in input_state]
+        for address in inputs_to_outputs:
+            output_state[address] = input_state[address]
+        return output_state
+
     def message_to_storage(self, message):
         """"""Transforms the message into the state (storage) object""""""
-        # pylint: disable=not-callable
         return batcher.message_to_message(
-            self._state_object(), self._name_camel, message
+            # pylint: disable=not-callable
+            message_to=self._state_object(),
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
         )
 
-    def set_state(self, state, message, object_id, target_id=None):
+    def set_state(self, context, message, outputs, object_id, target_id=None):
         """"""Creates a new address in the blockchain state""""""
         store = self.message_to_storage(message=message)
         # pylint: disable=no-member,not-callable
         container = self._state_container()
-        container.users.extend([store])
+        getattr(container, self._state_container_list_name).extend([store])
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        state_client.set_address(context=context, address=address, container=container)
+
+    def _get_store(self, object_id, target_id, outputs, output_state):
+        """"""Gets the store object to store data for this message""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        container = None
+        if address not in outputs and address in output_state:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        if address in output_state:
+            container = output_state[address]
+            # TODO: is getting the first item in the container... may not be correct!
+            store = getattr(container, self._state_container_list_name)[0]
+        if not container:
+            container, store = self._get_new_state()
+            output_state[address] = container
+        return store
+
+    def _update_store(
+        self, object_id, target_id, message, store, outputs, output_state, signer
+    ):
+        """"""Update the output state entries for the given address using
+        the data the given message""""""
         address = self.address(object_id=object_id, target_id=target_id)
-        state_client.set_address(state=state, address=address, container=container)
+        self.store_message(
+            object_id=object_id,
+            target_id=target_id,
+            store=store,
+            message=message,
+            outputs=outputs,
+            output_state=output_state,
+            signer=signer,
+        )
+        output_state[""changed""].add(address)
 
-    def apply(self, header, payload, state):
+    # pylint: disable=unused-argument
+    def store_message(
+        self, object_id, target_id, store, message, outputs, output_state, signer
+    ):
+        """"""Copies a message to the state object, excluding properties
+        listed in message_fields_not_in_state property. This provides
+        a simple default behavior for cases where this is appropriate;
+        commonly override this method in message classes""""""
+        batcher.message_to_message(
+            message_to=store,
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
+        )
+
+    def save_state(self, context, output_state):
+        """"""Save the output state to the blockchain""""""
+        changed = [
+            address
+            for address in output_state.keys()
+            if address in output_state[""changed""]
+        ]
+        entries = {}
+        for address in changed:
+            entries[address] = output_state[address].SerializeToString()
+        state_client.set_state(context=context, entries=entries)
+
+    def apply_update(
+        self, message, object_id, target_id, outputs, output_state, signer
+    ):
+        """"""Apply additional state changes (if any)
+        Message implementation will override this method if there
+        is data to be stored in any other address""""""
+        pass",377,2018-12-03 23:32:07,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238479932,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238479932,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"Again, it's a base class, you can override the property, the default value is False.",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-03 23:32:32,238480039,"@@ -225,28 +362,187 @@ def get(self, object_id, target_id=None):
             target_id=target_id,
         )
 
+    def get_addresses(self, context, addresses):
+        """"""Get the deserialized state entries given a list of blockchain addresses""""""
+        state_entries = {}
+        records = state_client.get_addresses(context=context, addresses=addresses)
+        if not records:
+            return state_entries
+        for record in records:
+            state_entries[record.address] = addresser.deserialize(
+                address=record.address, data=record.data
+            )
+        return state_entries
+
+    def _make_output_state(self, input_state, outputs):
+        """"""Makes the output state entries from the input state and
+        adds the addresses that were not in state""""""
+        output_state = {""changed"": set()}
+        inputs_to_outputs = [address for address in outputs if address in input_state]
+        for address in inputs_to_outputs:
+            output_state[address] = input_state[address]
+        return output_state
+
     def message_to_storage(self, message):
         """"""Transforms the message into the state (storage) object""""""
-        # pylint: disable=not-callable
         return batcher.message_to_message(
-            self._state_object(), self._name_camel, message
+            # pylint: disable=not-callable
+            message_to=self._state_object(),
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
         )
 
-    def set_state(self, state, message, object_id, target_id=None):
+    def set_state(self, context, message, outputs, object_id, target_id=None):
         """"""Creates a new address in the blockchain state""""""
         store = self.message_to_storage(message=message)
         # pylint: disable=no-member,not-callable
         container = self._state_container()
-        container.users.extend([store])
+        getattr(container, self._state_container_list_name).extend([store])
+        address = self.address(object_id=object_id, target_id=target_id)
+        if address not in outputs:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        state_client.set_address(context=context, address=address, container=container)
+
+    def _get_store(self, object_id, target_id, outputs, output_state):
+        """"""Gets the store object to store data for this message""""""
+        address = self.address(object_id=object_id, target_id=target_id)
+        container = None
+        if address not in outputs and address in output_state:
+            raise ValueError(
+                ""Address {} not in listed outputs"".format(addresser.parse(address))
+            )
+        if address in output_state:
+            container = output_state[address]
+            # TODO: is getting the first item in the container... may not be correct!
+            store = getattr(container, self._state_container_list_name)[0]
+        if not container:
+            container, store = self._get_new_state()
+            output_state[address] = container
+        return store
+
+    def _update_store(
+        self, object_id, target_id, message, store, outputs, output_state, signer
+    ):
+        """"""Update the output state entries for the given address using
+        the data the given message""""""
         address = self.address(object_id=object_id, target_id=target_id)
-        state_client.set_address(state=state, address=address, container=container)
+        self.store_message(
+            object_id=object_id,
+            target_id=target_id,
+            store=store,
+            message=message,
+            outputs=outputs,
+            output_state=output_state,
+            signer=signer,
+        )
+        output_state[""changed""].add(address)
 
-    def apply(self, header, payload, state):
+    # pylint: disable=unused-argument
+    def store_message(
+        self, object_id, target_id, store, message, outputs, output_state, signer
+    ):
+        """"""Copies a message to the state object, excluding properties
+        listed in message_fields_not_in_state property. This provides
+        a simple default behavior for cases where this is appropriate;
+        commonly override this method in message classes""""""
+        batcher.message_to_message(
+            message_to=store,
+            message_from=message,
+            message_name=self._name_camel,
+            exclude_fields=self.message_fields_not_in_state,
+        )
+
+    def save_state(self, context, output_state):
+        """"""Save the output state to the blockchain""""""
+        changed = [
+            address
+            for address in output_state.keys()
+            if address in output_state[""changed""]
+        ]
+        entries = {}
+        for address in changed:
+            entries[address] = output_state[address].SerializeToString()
+        state_client.set_state(context=context, entries=entries)
+
+    def apply_update(
+        self, message, object_id, target_id, outputs, output_state, signer
+    ):
+        """"""Apply additional state changes (if any)
+        Message implementation will override this method if there
+        is data to be stored in any other address""""""
+        pass
+
+    @property
+    def allow_signer_not_in_state(self):
+        """"""Whether the signer of the message is allowed to not be",381,2018-12-03 23:32:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238480039,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238480039,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,Hmmm... if get_content_at_address(address) doesn't work then I will digress. Carrying on.,bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-04 06:02:42,238537606,"@@ -247,46 +260,221 @@ def _find_in_state_container(self, container, address, object_id, target_id=None
         )
         return None
 
-    def get_from_state(self, state, object_id, target_id=None):
-        """"""Gets an address from the blockchain state
-        (state object is available when message is handled by transaction processor)""""""
+    def deserialize(self, address, data):  # pylint: disable=unused-argument
+        """"""Deserialize the data of a blockchain address""""""
+        # pylint: disable=not-callable
+        container = self._state_container()
+        container.ParseFromString(data)
+        return container
+
+    def get_address(self, context, address):",144,2018-12-04 06:02:42,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238537606,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238537606,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"Is the act of proposing... an action? It looks like, in this inheritance hierarchy, ProposalPropose and ProposalAction are siblings. Should ProposalPropose be extending ProposalAction here?

Or maybe ProposalAction is a ProposalResponse, ProposalReply?",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-04 18:26:37,238782681,"@@ -0,0 +1,96 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""A base for all proposal creation message types""""""
+import logging
+from rbac.common import addresser
+from rbac.common import protobuf
+from rbac.common.proposal.proposal_message import ProposalMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposalPropose(ProposalMessage):",24,2018-12-04 18:48:42,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238782681,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238782681,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/689,https://github.com/hyperledger/sawtooth-next-directory/pull/689,"Creating a proposal is not the same as performing an action on a proposal (e.g. confirm, reject). ProposalMessage is the common base for all proposal messages, ProposalAction is the common base for only actions on existing proposals.",bfef6d553b88c19675139c30c60c77cc1948de49,2018-12-04 19:11:17,238798972,"@@ -0,0 +1,96 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+""""""A base for all proposal creation message types""""""
+import logging
+from rbac.common import addresser
+from rbac.common import protobuf
+from rbac.common.proposal.proposal_message import ProposalMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposalPropose(ProposalMessage):",24,2018-12-04 19:11:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238798972,https://github.com/hyperledger/sawtooth-next-directory/pull/689#discussion_r238798972,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,"I believe this is ReqlRuntimeError according to RethinkDB's ReQL error types: 
https://www.rethinkdb.com/docs/error-types/",4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-29 17:43:41,237590185,"@@ -94,8 +99,8 @@ def setup_db(host, port, name):
         role_tables.for_each(r.db(name).table_create(r.row)).run(conn)
         role_tables.for_each(r.db(name).table(r.row).index_create('role_id')).run(conn)
 
-    except RqlRuntimeError:
-        LOGGER.info('Database already exists: %s', name)
+    except RqlRuntimeError as err:",,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237590185,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237590185,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,Should we be using dot notation here to get the values of items in `address_parts` instead of bracket notation? ,4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-29 17:57:23,237594842,"@@ -75,11 +78,69 @@ def get_updater(database, block_num):
     return lambda adr, rsc: _update(database, block_num, adr, rsc)
 
 
+def _update_state(database, block_num, address, resource):
+    try:
+        # update state table
+        state = dict(resource)
+        address_parts = addresser.parse(address)
+        address_binary = bytes_from_hex(address)
+        key = address_binary
+        keys = {""address"": address_binary}
+        data = {
+            ""block_updated"": int(block_num),
+            ""updated_at"": r.now(),
+            ""object_type"": address_parts.object_type.value,",28,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237594842,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237594842,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,"I didn't modify that value, but that would be a great fix to make in another PR. Want to?
This code is going to disappear in the near future, however, with a Rethink helper class.
We shouldn't have any code in the bin folder, especially because it is not being linted or formatted.
Keith has a story to refactor this, let's pick this up in that with another PR.",4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-29 18:16:21,237601374,"@@ -94,8 +99,8 @@ def setup_db(host, port, name):
         role_tables.for_each(r.db(name).table_create(r.row)).run(conn)
         role_tables.for_each(r.db(name).table(r.row).index_create('role_id')).run(conn)
 
-    except RqlRuntimeError:
-        LOGGER.info('Database already exists: %s', name)
+    except RqlRuntimeError as err:",,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237601374,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237601374,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,"Does this comment add any value? If not, please remove",4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-29 18:57:11,237616035,"@@ -31,3 +31,37 @@ def get_environment(name, default):
     if value is None or not value:
         return default
     return value
+
+
+def bytes_from_hex(value):
+    """"""A version of bytes.fromhex that will return None if
+    passed None instead of an expected str exception""""""
+    if not value:
+        return None
+    return bytes.fromhex(value)
+
+
+def has_duplicates(anylist):
+    """"""Returns whether anylist has duplicates""""""
+    if not isinstance(anylist, list):
+        raise ValueError(
+            ""has_duplicates expected a list, got {}\n{}"".format(type(anylist), anylist)
+        )
+    return bool(len(anylist) != len(set(anylist)))
+
+
+def duplicates(anylist):
+    """"""Returns the duplicate values in any list""""""
+    if not isinstance(anylist, list):
+        raise ValueError(
+            ""duplicates expected a list, got {}\n{}"".format(type(anylist), anylist)
+        )
+    # return list(set([value for value in anylist if anylist.count(value) > 1])) # inefficient",,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237616035,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237616035,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,"This function appears to be comparing the lengths of two lists - not checking for duplicates. If there are duplicates, then part of the logic to determine their existence is happening somewhere else. Also, it is performing validation. That could happen externally before the primary goal happens here.",4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-29 19:01:01,237617540,"@@ -31,3 +31,37 @@ def get_environment(name, default):
     if value is None or not value:
         return default
     return value
+
+
+def bytes_from_hex(value):
+    """"""A version of bytes.fromhex that will return None if
+    passed None instead of an expected str exception""""""
+    if not value:
+        return None
+    return bytes.fromhex(value)
+
+
+def has_duplicates(anylist):
+    """"""Returns whether anylist has duplicates""""""",,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237617540,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237617540,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,"Yes, it's the obvious way to accomplish the task, and what you would normally use. It's not used here, because as a generic utility function you want to support future use cases that may included larger datasets.",4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-29 19:11:24,237621036,"@@ -31,3 +31,37 @@ def get_environment(name, default):
     if value is None or not value:
         return default
     return value
+
+
+def bytes_from_hex(value):
+    """"""A version of bytes.fromhex that will return None if
+    passed None instead of an expected str exception""""""
+    if not value:
+        return None
+    return bytes.fromhex(value)
+
+
+def has_duplicates(anylist):
+    """"""Returns whether anylist has duplicates""""""
+    if not isinstance(anylist, list):
+        raise ValueError(
+            ""has_duplicates expected a list, got {}\n{}"".format(type(anylist), anylist)
+        )
+    return bool(len(anylist) != len(set(anylist)))
+
+
+def duplicates(anylist):
+    """"""Returns the duplicate values in any list""""""
+    if not isinstance(anylist, list):
+        raise ValueError(
+            ""duplicates expected a list, got {}\n{}"".format(type(anylist), anylist)
+        )
+    # return list(set([value for value in anylist if anylist.count(value) > 1])) # inefficient",,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237621036,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237621036,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,"It's comparing the length of a list to the length of the set of the list. This works fine. Do you have another method? The function expects only lists as input params. It's a generic utility function, thus it validates its inputs.",4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-29 19:14:18,237622027,"@@ -31,3 +31,37 @@ def get_environment(name, default):
     if value is None or not value:
         return default
     return value
+
+
+def bytes_from_hex(value):
+    """"""A version of bytes.fromhex that will return None if
+    passed None instead of an expected str exception""""""
+    if not value:
+        return None
+    return bytes.fromhex(value)
+
+
+def has_duplicates(anylist):
+    """"""Returns whether anylist has duplicates""""""",,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237622027,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237622027,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,Bug #692 has been created and added to the backlog to fix this.,4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-29 19:14:56,237622234,"@@ -94,8 +99,8 @@ def setup_db(host, port, name):
         role_tables.for_each(r.db(name).table_create(r.row)).run(conn)
         role_tables.for_each(r.db(name).table(r.row).index_create('role_id')).run(conn)
 
-    except RqlRuntimeError:
-        LOGGER.info('Database already exists: %s', name)
+    except RqlRuntimeError as err:",,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237622234,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237622234,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,"It's not used. The part about it being obvious and what ""you would normally use"" is certainly possible, but an assumption. If it is that important: Please add more context to the comment (why it is inefficient relative to the decision you went with, how it doesn't scale, etc)",4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-30 06:56:57,237762352,"@@ -31,3 +31,37 @@ def get_environment(name, default):
     if value is None or not value:
         return default
     return value
+
+
+def bytes_from_hex(value):
+    """"""A version of bytes.fromhex that will return None if
+    passed None instead of an expected str exception""""""
+    if not value:
+        return None
+    return bytes.fromhex(value)
+
+
+def has_duplicates(anylist):
+    """"""Returns whether anylist has duplicates""""""
+    if not isinstance(anylist, list):
+        raise ValueError(
+            ""has_duplicates expected a list, got {}\n{}"".format(type(anylist), anylist)
+        )
+    return bool(len(anylist) != len(set(anylist)))
+
+
+def duplicates(anylist):
+    """"""Returns the duplicate values in any list""""""
+    if not isinstance(anylist, list):
+        raise ValueError(
+            ""duplicates expected a list, got {}\n{}"".format(type(anylist), anylist)
+        )
+    # return list(set([value for value in anylist if anylist.count(value) > 1])) # inefficient",,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237762352,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237762352,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/688,https://github.com/hyperledger/sawtooth-next-directory/pull/688,"The quickest change would be to rename it has_same_length()
",4285cdd3b10e6ea40ccf6d33da5572ac89a8caf7,2018-11-30 07:03:34,237763442,"@@ -31,3 +31,37 @@ def get_environment(name, default):
     if value is None or not value:
         return default
     return value
+
+
+def bytes_from_hex(value):
+    """"""A version of bytes.fromhex that will return None if
+    passed None instead of an expected str exception""""""
+    if not value:
+        return None
+    return bytes.fromhex(value)
+
+
+def has_duplicates(anylist):
+    """"""Returns whether anylist has duplicates""""""",,2018-12-01 02:45:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237763442,https://github.com/hyperledger/sawtooth-next-directory/pull/688#discussion_r237763442,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/687,https://github.com/hyperledger/sawtooth-next-directory/pull/687,Doc Strings on all of this please,15dafd2c4efab24dbbd5158a3c0e5039d1ba1327,2018-11-29 01:02:57,237320798,"@@ -25,7 +28,38 @@ from rbac.providers.azure.initial_inbound_sync import initialize_aad_sync
 from rbac.providers.azure.delta_outbound_sync import outbound_sync_listener
 from rbac.providers.azure.delta_inbound_sync import inbound_sync_listener
 
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+
+class InboundSyncThread(threading.Thread):
+    def __init__(self):",28,2018-11-29 17:56:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237320798,https://github.com/hyperledger/sawtooth-next-directory/pull/687#discussion_r237320798,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/687,https://github.com/hyperledger/sawtooth-next-directory/pull/687,"I'm guessing you'll want to put this in a try catch, and also check the result of run.
I believe it will throw an exception if rethink is not available, and also it will *not* throw an exception if there is an insertion error.",15dafd2c4efab24dbbd5158a3c0e5039d1ba1327,2018-11-29 01:44:00,237327699,"@@ -154,7 +155,7 @@ def insert_change_to_db(data, record_timestamp):
         ""timestamp"": record_timestamp,
         ""provider_id"": TENANT_ID,
     }
-    response = r.table(""queue_inbound"").insert(inbound_entry).run()
+    r.table(""queue_inbound"").insert(inbound_entry).run()",13,2018-11-29 17:56:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237327699,https://github.com/hyperledger/sawtooth-next-directory/pull/687#discussion_r237327699,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/687,https://github.com/hyperledger/sawtooth-next-directory/pull/687,Azure daemon is throwing an error because you used four quotes instead of three at the beginning and end of this line.,15dafd2c4efab24dbbd5158a3c0e5039d1ba1327,2018-11-29 01:52:26,237329112,"@@ -25,7 +27,46 @@ from rbac.providers.azure.initial_inbound_sync import initialize_aad_sync
 from rbac.providers.azure.delta_outbound_sync import outbound_sync_listener
 from rbac.providers.azure.delta_inbound_sync import inbound_sync_listener
 
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+
+class InboundSyncThread(threading.Thread):
+    """"""Custom Thread subclass that runs an AAD inbound sync listener in its own
+    thread.""""""
+    def __init__(self):
+        """"""Initialize the InboundSyncThread class""""""
+        threading.Thread.__init__(self)
+        self.name = ""AAD Inbound Delta Sync Thread""
+
+    def run(self):
+        """"""Start the InboundSyncThread""""""
+        LOGGER.info(""Starting %s"", self.name)
+        inbound_sync_listener()
+        LOGGER.info(""Exiting %s"", self.name)
+
+
+class OutboundSyncThread(threading.Thread):
+    """"""Custom Thread subclass that runs an AAD outbound sync listener in its own
+    thread.""""""
+    def __init__(self):
+        """"""""Initialize the OutboundSyncThread class""""""""",,2018-11-29 17:56:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237329112,https://github.com/hyperledger/sawtooth-next-directory/pull/687#discussion_r237329112,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/687,https://github.com/hyperledger/sawtooth-next-directory/pull/687,just fixed it,15dafd2c4efab24dbbd5158a3c0e5039d1ba1327,2018-11-29 17:57:55,237595007,"@@ -25,7 +27,46 @@ from rbac.providers.azure.initial_inbound_sync import initialize_aad_sync
 from rbac.providers.azure.delta_outbound_sync import outbound_sync_listener
 from rbac.providers.azure.delta_inbound_sync import inbound_sync_listener
 
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+
+class InboundSyncThread(threading.Thread):
+    """"""Custom Thread subclass that runs an AAD inbound sync listener in its own
+    thread.""""""
+    def __init__(self):
+        """"""Initialize the InboundSyncThread class""""""
+        threading.Thread.__init__(self)
+        self.name = ""AAD Inbound Delta Sync Thread""
+
+    def run(self):
+        """"""Start the InboundSyncThread""""""
+        LOGGER.info(""Starting %s"", self.name)
+        inbound_sync_listener()
+        LOGGER.info(""Exiting %s"", self.name)
+
+
+class OutboundSyncThread(threading.Thread):
+    """"""Custom Thread subclass that runs an AAD outbound sync listener in its own
+    thread.""""""
+    def __init__(self):
+        """"""""Initialize the OutboundSyncThread class""""""""",,2018-11-29 17:57:55,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237595007,https://github.com/hyperledger/sawtooth-next-directory/pull/687#discussion_r237595007,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,Were we adding email into the address?,187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 00:47:56,237318020,"@@ -98,15 +192,22 @@ def relationship_type(self):
         if it is an address type that stores relationships""""""
         raise NotImplementedError(""Class must implement this property"")
 
+    @property
+    def address_type_name(self):
+        """"""Returns a unique name for this addresser based on the combination
+        of the properties object_type + related_type + relationship_type""""""",122,2018-11-29 01:37:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237318020,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237318020,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,"Why do you have the same function returning a string ""relationship"" in two different classes?  Here ",187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 00:50:22,237318437,"@@ -56,3 +56,13 @@ def related_type(self):
     def relationship_type(self):
         """"""The related type from AddressSpace implemented by this class""""""
         return addresser.RelationshipType.ADMIN
+
+    @property
+    def _state_object_name(self):
+        """"""Task relationship state object name ends with Relationship (TaskRelationship)""""""
+        return self._name_camel + ""Relationship""
+
+    @property
+    def _state_container_list_name(self):",,2018-11-29 01:37:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237318437,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237318437,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,And Here,187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 00:50:38,237318485,"@@ -56,3 +56,13 @@ def related_type(self):
     def relationship_type(self):
         """"""The related type from AddressSpace implemented by this class""""""
         return addresser.RelationshipType.MEMBER
+
+    @property
+    def _state_object_name(self):
+        """"""Task relationship state object name ends with Relationship (TaskRelationship)""""""
+        return self._name_camel + ""Relationship""
+
+    @property
+    def _state_container_list_name(self):",,2018-11-29 01:37:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237318485,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237318485,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,and here,187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 00:51:10,237318587,"@@ -56,3 +56,13 @@ def related_type(self):
     def relationship_type(self):
         """"""The related type from AddressSpace implemented by this class""""""
         return addresser.RelationshipType.OWNER
+
+    @property
+    def _state_object_name(self):
+        """"""Task relationship state object name ends with Relationship (TaskRelationship)""""""
+        return self._name_camel + ""Relationship""
+
+    @property
+    def _state_container_list_name(self):
+        """"""Tasks relationship state container collection name is relationships""""""",,2018-11-29 01:37:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237318587,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237318587,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,and here.   I feel like this is a good use for base classing.  Why are you not adding _state_object_name and _state_container_list_name to the base class BaseRelationship?  Then there would not be as many repeats,187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 00:52:38,237318854,"@@ -56,3 +56,13 @@ def related_type(self):
     def relationship_type(self):
         """"""The related type from AddressSpace implemented by this class""""""
         return addresser.RelationshipType.MEMBER
+
+    @property
+    def _state_object_name(self):
+        """"""Task relationship state object name ends with Relationship (TaskRelationship)""""""
+        return self._name_camel + ""Relationship""
+
+    @property
+    def _state_container_list_name(self):",,2018-11-29 01:37:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237318854,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237318854,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,Addresses are not related to emails,187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 01:04:20,237321022,"@@ -98,15 +192,22 @@ def relationship_type(self):
         if it is an address type that stores relationships""""""
         raise NotImplementedError(""Class must implement this property"")
 
+    @property
+    def address_type_name(self):
+        """"""Returns a unique name for this addresser based on the combination
+        of the properties object_type + related_type + relationship_type""""""",122,2018-11-29 01:37:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237321022,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237321022,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,"And yes, emails will be a new object_type in some future PR.",187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 01:24:12,237324328,"@@ -98,15 +192,22 @@ def relationship_type(self):
         if it is an address type that stores relationships""""""
         raise NotImplementedError(""Class must implement this property"")
 
+    @property
+    def address_type_name(self):
+        """"""Returns a unique name for this addresser based on the combination
+        of the properties object_type + related_type + relationship_type""""""",122,2018-11-29 01:37:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237324328,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237324328,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,This comment doesn't line up with the behavior of the function.,187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 17:40:06,237588964,"@@ -116,5 +217,38 @@ def address_is(self, address):
 
     def addresses_are(self, addresses):
         """"""Determines if all addresses given are of the classes' address type""""""
-        # pylint: disable=unnecessary-lambda
-        return all(map(lambda a: self.address_is(a), addresses))
+        return all([self.address_is(a) for a in addresses])
+
+    def get_address_type(self, address):
+        """"""Returns the address type if the address is of the address type
+        implemented by this class, otherewise returns None""""""
+        if self._pattern.match(address):
+            return self.address_type
+        return None
+
+    def get_addresser(self, address):
+        """"""Returns the self if the address is of the address type
+        implemented by this class, otherewise returns None""""""
+        if self._pattern.match(address):
+            return self
+        return None
+
+    def get_object_id(self, address):
+        """"""Returns the hash of an object_id (or the object_id itself if it
+        is a 12-byte unique identifier), as encoded in a given address""""""
+        return address[14:38]
+
+    def get_target_id(self, address):
+        """"""Returns the hash of a target_id (or the target_id itself if it
+        is a 12-byte unique identifier), as encoded in a given address""""""",172,2018-11-29 17:40:07,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237588964,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237588964,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,"Should this happen in init()? It seems odd to be concatenating an 's' onto another property on its way out. Maybe an additional property?

Fundamentally, the idea is that data should flow through the system without alteration except in obvious places (ie transformers). If you are going to keep this, then the docstring should at least make it clear what it is doing internally. ",187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 17:47:08,237591335,"@@ -40,6 +44,11 @@ def relationship_type(self):
         """"""The related type from AddressSpace implemented by this class""""""
         return addresser.RelationshipType.ATTRIBUTES
 
+    @property
+    def _state_container_prefix(self):
+        """"""Proposal container is plural (ProposalsContainer)""""""
+        return self._state_object_name + ""s""",18,2018-11-29 17:47:09,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237591335,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237591335,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,What specifically?,187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 17:47:11,237591351,"@@ -116,5 +217,38 @@ def address_is(self, address):
 
     def addresses_are(self, addresses):
         """"""Determines if all addresses given are of the classes' address type""""""
-        # pylint: disable=unnecessary-lambda
-        return all(map(lambda a: self.address_is(a), addresses))
+        return all([self.address_is(a) for a in addresses])
+
+    def get_address_type(self, address):
+        """"""Returns the address type if the address is of the address type
+        implemented by this class, otherewise returns None""""""
+        if self._pattern.match(address):
+            return self.address_type
+        return None
+
+    def get_addresser(self, address):
+        """"""Returns the self if the address is of the address type
+        implemented by this class, otherewise returns None""""""
+        if self._pattern.match(address):
+            return self
+        return None
+
+    def get_object_id(self, address):
+        """"""Returns the hash of an object_id (or the object_id itself if it
+        is a 12-byte unique identifier), as encoded in a given address""""""
+        return address[14:38]
+
+    def get_target_id(self, address):
+        """"""Returns the hash of a target_id (or the target_id itself if it
+        is a 12-byte unique identifier), as encoded in a given address""""""",172,2018-11-29 17:47:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237591351,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237591351,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,"It’s a property that can be overridden.
It’s a hint for the class to know the state data schema implemented by that address type.",187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 17:49:18,237592142,"@@ -40,6 +44,11 @@ def relationship_type(self):
         """"""The related type from AddressSpace implemented by this class""""""
         return addresser.RelationshipType.ATTRIBUTES
 
+    @property
+    def _state_container_prefix(self):
+        """"""Proposal container is plural (ProposalsContainer)""""""
+        return self._state_object_name + ""s""",18,2018-11-29 17:49:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237592142,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237592142,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/686,https://github.com/hyperledger/sawtooth-next-directory/pull/686,"""""""Returns the hash of a target_id (or the target_id itself if it
        is a 12-byte unique identifier), as encoded in a given address""""""

Yes, get_target_id does correctly return the hash of the target_id (or the target_id itself if is a 12-byte unique identifier), as encoded in the address.

```
    @pytest.mark.parse_role_member_address
    def test_parse_role_member_address(self):
        """"""Test addresser.user.parse returns a parsed address if it is a user address""""""
        user_id = addresser.user.unique_id()
        role_id = addresser.role.unique_id()
        address = addresser.role.member.address(role_id, user_id)
        parsed = addresser.role.member.parse(address)

        self.assertEqual(parsed.object_type, addresser.ObjectType.ROLE)
        self.assertEqual(parsed.related_type, addresser.ObjectType.USER)
        self.assertEqual(
            parsed.relationship_type, addresser.RelationshipType.MEMBER
        )
        self.assertEqual(parsed.address_type, addresser.AddressSpace.ROLES_MEMBERS)
        self.assertEqual(parsed.object_id, role_id)
        self.assertEqual(parsed.target_id, user_id)
```

```
@pytest.mark.parse_role_member_address
    def test_parse_role_member_address_hash(self):
        """"""Test addresser.user.parse returns a parsed address if it is a user address""""""
        user_id = ""foo""
        role_id = ""bar""
        address = addresser.role.member.address(role_id, user_id)
        parsed = addresser.role.member.parse(address)

        self.assertEqual(parsed.object_type, addresser.ObjectType.ROLE)
        self.assertEqual(parsed.related_type, addresser.ObjectType.USER)
        self.assertEqual(
            parsed.relationship_type, addresser.RelationshipType.MEMBER
        )
        self.assertEqual(parsed.address_type, addresser.AddressSpace.ROLES_MEMBERS)
        self.assertEqual(parsed.object_id, addresser.role.member.hash(role_id))
        self.assertEqual(parsed.target_id, addresser.role.member.hash(user_id))
```
",187b0870e569c606e9e036b1bdbc18efa01b41b7,2018-11-29 18:40:10,237609784,"@@ -116,5 +217,38 @@ def address_is(self, address):
 
     def addresses_are(self, addresses):
         """"""Determines if all addresses given are of the classes' address type""""""
-        # pylint: disable=unnecessary-lambda
-        return all(map(lambda a: self.address_is(a), addresses))
+        return all([self.address_is(a) for a in addresses])
+
+    def get_address_type(self, address):
+        """"""Returns the address type if the address is of the address type
+        implemented by this class, otherewise returns None""""""
+        if self._pattern.match(address):
+            return self.address_type
+        return None
+
+    def get_addresser(self, address):
+        """"""Returns the self if the address is of the address type
+        implemented by this class, otherewise returns None""""""
+        if self._pattern.match(address):
+            return self
+        return None
+
+    def get_object_id(self, address):
+        """"""Returns the hash of an object_id (or the object_id itself if it
+        is a 12-byte unique identifier), as encoded in a given address""""""
+        return address[14:38]
+
+    def get_target_id(self, address):
+        """"""Returns the hash of a target_id (or the target_id itself if it
+        is a 12-byte unique identifier), as encoded in a given address""""""",172,2018-11-29 18:42:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237609784,https://github.com/hyperledger/sawtooth-next-directory/pull/686#discussion_r237609784,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/680,https://github.com/hyperledger/sawtooth-next-directory/pull/680,"In every case where the error is the same (ie: ""'{0}' is missing an entry for: '{1}'"", etc), the required fields can be grouped and iterated. Something like required_fields_not_empty = [rq_fld_foo, rq_fld_bar....]. It is a small change we can go through when you are in the office.",b74ea42a9adf21ed527508962a492f9beb94ef99,2018-11-29 18:41:53,237610438,"@@ -52,11 +49,80 @@ def validate_next_payload(payload):
                 required_field_data, required_field_dn
             )
         )
+
     if not data_node[required_field_dn]:
         raise LdapValidationException(
             ""'{0}'.'{1}' cannot be empty"".format(required_field_data, required_field_dn)
         )
 
+    if required_field_user_name not in data_node:
+        raise LdapValidationException(
+            ""'{0}' is missing an entry for: '{1}'"".format(
+                required_field_data, required_field_user_name
+            )
+        )
+
+    if not data_node[required_field_user_name]:
+        raise LdapValidationException(
+            ""'{0}'.'{1}' cannot be empty"".format(
+                required_field_data, required_field_user_name
+            )
+        )
+
+    if required_field_cn not in data_node:
+        raise LdapValidationException(
+            ""'{0}' is missing an entry for: '{1}'"".format(
+                required_field_data, required_field_cn
+            )
+        )
+
+    if not data_node[required_field_cn]:
+        raise LdapValidationException(
+            ""'{0}'.'{1}' cannot be empty"".format(required_field_data, required_field_cn)
+        )
+
+    if required_field_given_name not in data_node:",,2018-11-29 22:47:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237610438,https://github.com/hyperledger/sawtooth-next-directory/pull/680#discussion_r237610438,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/680,https://github.com/hyperledger/sawtooth-next-directory/pull/680,Sure. Sounds good,b74ea42a9adf21ed527508962a492f9beb94ef99,2018-11-29 18:48:23,237612796,"@@ -52,11 +49,80 @@ def validate_next_payload(payload):
                 required_field_data, required_field_dn
             )
         )
+
     if not data_node[required_field_dn]:
         raise LdapValidationException(
             ""'{0}'.'{1}' cannot be empty"".format(required_field_data, required_field_dn)
         )
 
+    if required_field_user_name not in data_node:
+        raise LdapValidationException(
+            ""'{0}' is missing an entry for: '{1}'"".format(
+                required_field_data, required_field_user_name
+            )
+        )
+
+    if not data_node[required_field_user_name]:
+        raise LdapValidationException(
+            ""'{0}'.'{1}' cannot be empty"".format(
+                required_field_data, required_field_user_name
+            )
+        )
+
+    if required_field_cn not in data_node:
+        raise LdapValidationException(
+            ""'{0}' is missing an entry for: '{1}'"".format(
+                required_field_data, required_field_cn
+            )
+        )
+
+    if not data_node[required_field_cn]:
+        raise LdapValidationException(
+            ""'{0}'.'{1}' cannot be empty"".format(required_field_data, required_field_cn)
+        )
+
+    if required_field_given_name not in data_node:",,2018-11-29 22:47:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237612796,https://github.com/hyperledger/sawtooth-next-directory/pull/680#discussion_r237612796,satkeeva
https://github.com/hyperledger/sawtooth-next-directory/pull/680,https://github.com/hyperledger/sawtooth-next-directory/pull/680,"These changes look good. Unfortunately, the TODO is a bit out of date since the mappings have been removed from outbound sync. 

There is a second part of this process where the values are mapped before going to AD, and the mappings will need to happen in order to include the fields in the message and prove out the integration on both ends (Next and Ldap). 

Before this change goes in, it makes sense to map these fields first and confirm their consistency with AD. If it rejects and/or doesn't map them, then the changes here will need to be revisited individually. 

It was a mistake on my part not to overview this with you and in assuming validation could be worked on separately from mapping. They both need to happen together. That said: The work you have done here will need to be incorporated into the larger feature of the sync, and I hope you are up to taking in on because the value-added moves up from test coverage to feature implementation (ie it will be an interesting exercise that will add a lot of value). 

Marking this as ""Requests Changes"". Not because of code issues, but because the feature itself needs it. We can sort this out either by merging this and rectifying shortly thereafter or by adding the second part to this story. Please let me know.


",b74ea42a9adf21ed527508962a492f9beb94ef99,2018-12-02 07:12:34,238087296,"@@ -19,19 +19,17 @@ def validate_next_payload(payload):
     """"""Confirms the payload has the fields required for ldap message transformation""""""
 
     # TODO: Move these into an enum, share with outbound_sync
+
     required_field_data = ""data""
     required_field_data_type = ""data_type""
     required_field_provider_id = ""provider_id""
     required_value_data_type = [""user"", ""group""]
     required_field_dn = ""distinguished_name""
-
-    # TODO: These are also required given the current outbound_sync mappings. Include tests!
-    #       Enforce or remove from outbound_sync
-    # required_field_user_name = ""data.user_name""
-    # required_field_cn = ""data.cn""
-    # required_field_given_name = ""data.given_name""
-    # required_field_name = ""data.name""
-    # required_field_manager = ""data.manager""
+    required_field_user_name = ""data.user_name""
+    required_field_cn = ""data.cn""
+    required_field_given_name = ""data.given_name""
+    required_field_name = ""data.name""
+    required_field_manager = ""data.manager""",22,2018-12-02 07:15:23,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/238087296,https://github.com/hyperledger/sawtooth-next-directory/pull/680#discussion_r238087296,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/631,https://github.com/hyperledger/sawtooth-next-directory/pull/631,"rbac/providers
************* Module rbac.providers.azure.delta_inbound_sync
rbac/providers/azure/delta_inbound_sync.py:23:0: W0611: Unused import pytz (unused-import)",b8bde08109781099da0111f249ff47223b88bd1e,2018-11-25 22:49:44,236094322,"@@ -12,3 +12,167 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
+
+""""""
+A receiver module that pulls entries from the Azure EventHub to be used by the
+Inbound AAD Delta Sync.
+""""""
+import os
+import logging
+from datetime import datetime
+import pytz",,2018-11-26 17:49:52,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236094322,https://github.com/hyperledger/sawtooth-next-directory/pull/631#discussion_r236094322,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/631,https://github.com/hyperledger/sawtooth-next-directory/pull/631,"rbac/providers
************* Module rbac.providers.azure.delta_inbound_sync
rbac/providers/azure/delta_inbound_sync.py:23:0: W0611: Unused import pytz (unused-import)",b8bde08109781099da0111f249ff47223b88bd1e,2018-11-25 22:49:46,236094325,"@@ -16,7 +16,9 @@ FROM python:3.7
 
 RUN pip install \
     requests    \
-    rethinkdb
+    rethinkdb   \
+    pytz		\",,2018-11-26 17:49:52,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236094325,https://github.com/hyperledger/sawtooth-next-directory/pull/631#discussion_r236094325,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/631,https://github.com/hyperledger/sawtooth-next-directory/pull/631,What is 'EH' ?,b8bde08109781099da0111f249ff47223b88bd1e,2018-11-26 03:51:23,236115586,"@@ -12,3 +12,167 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
+
+""""""
+A receiver module that pulls entries from the Azure EventHub to be used by the
+Inbound AAD Delta Sync.
+""""""
+import os
+import logging
+from datetime import datetime
+import pytz
+import rethinkdb as r
+from azure.eventhub import EventHubClient, Offset
+
+from rbac.providers.common.expected_errors import ExpectedError
+from rbac.providers.common.rethink_db import connect_to_db
+from rbac.providers.common.common import save_sync_time, check_last_sync
+
+DELAY = os.environ.get(""DELAY"")
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+TENANT_ID = os.getenv(""TENANT_ID"")
+NAMESPACE = os.environ.get(""AAD_EH_NAMESPACE"")",26,2018-11-26 17:49:52,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236115586,https://github.com/hyperledger/sawtooth-next-directory/pull/631#discussion_r236115586,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/631,https://github.com/hyperledger/sawtooth-next-directory/pull/631,I am pretty sure this can go away.,b8bde08109781099da0111f249ff47223b88bd1e,2018-11-26 03:53:20,236115757,"@@ -12,3 +12,167 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # ------------------------------------------------------------------------------
+
+""""""
+A receiver module that pulls entries from the Azure EventHub to be used by the
+Inbound AAD Delta Sync.
+""""""
+import os
+import logging
+from datetime import datetime
+import pytz
+import rethinkdb as r
+from azure.eventhub import EventHubClient, Offset
+
+from rbac.providers.common.expected_errors import ExpectedError
+from rbac.providers.common.rethink_db import connect_to_db
+from rbac.providers.common.common import save_sync_time, check_last_sync
+
+DELAY = os.environ.get(""DELAY"")
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+TENANT_ID = os.getenv(""TENANT_ID"")
+NAMESPACE = os.environ.get(""AAD_EH_NAMESPACE"")
+EVENTHUB_NAME = os.environ.get(""AAD_EH_NAME"")
+
+# Address can be in either of these formats:
+# ""amqps://<URL-encoded-SAS-policy>:<URL-encoded-SAS-key>@<mynamespace>.servicebus.windows.net/myeventhub""
+# ""amqps://<mynamespace>.servicebus.windows.net/myeventhub""
+ADDRESS = f""amqps://{NAMESPACE}.servicebus.windows.net/{EVENTHUB_NAME}""
+
+# SAS policy and key are not required if they are encoded in the URL
+USER = os.environ.get(""AAD_EH_SAS_POLICY"")
+KEY = os.environ.get(""AAD_EH_SAS_KEY"")
+CONSUMER_GROUP = os.environ.get(""AAD_EH_CONSUMER_GROUP"")
+OFFSET = Offset(""-1"")
+PARTITION = ""0""
+
+VALID_OPERATIONS = {
+    ""Add user"": ""user"",
+    ""Add group"": ""group"",
+    ""Update user"": ""user"",
+    ""Update group"": ""group"",
+    ""Delete user"": ""user"",
+    ""Delete group"": ""group"",
+    ""Hard Delete user"": ""user"",
+    ""Add member to group"": ""group"",
+    ""Update user attribute"": ""user"",
+    ""Remove member from group"": ""group"",
+}
+
+
+def inbound_sync_listener():
+    while True:  # pylint: disable=too-many-nested-blocks
+        provider_id = TENANT_ID
+        try:
+            LOGGER.info(""Connecting to RethinkDB..."")
+            connect_to_db()
+            LOGGER.info(""Successfully connected to RethinkDB!"")
+
+            initial_sync_time = check_last_sync(""azure-user"", ""initial"")
+            initial_sync_time = initial_sync_time[0][""timestamp""][:26]
+            latest_delta_sync_time = get_last_delta_sync(provider_id, ""delta"")
+            if latest_delta_sync_time:
+                latest_delta_sync_time = latest_delta_sync_time[""timestamp""][:26]
+                previous_sync_datetime = datetime.strptime(
+                    latest_delta_sync_time, ""%Y-%m-%dT%H:%M:%S.%f""
+                )
+            else:
+                previous_sync_datetime = datetime.strptime(
+                    initial_sync_time, ""%Y-%m-%dT%H:%M:%S.%f""
+                )
+            # Create an eventhub client.
+            client = EventHubClient(ADDRESS, debug=False, username=USER, password=KEY)
+            try:
+                LOGGER.info(""Opening connection to EventHub..."")
+                # Set prefetch to 1, we only want one event at a time.
+                receiver = client.add_receiver(
+                    CONSUMER_GROUP, PARTITION, prefetch=1, offset=OFFSET
+                )
+                # Open the connection to the EventHub.
+                client.run()
+                # Get one event from EventHub.
+                batch = receiver.receive(timeout=5000)
+                while batch:
+                    for event_data in batch:
+                        # Get the event as a json record from the batch of events.
+                        event_json = event_data.body_as_json()
+                        record = event_json[""records""][0]
+                        operation_name = record[""operationName""]
+                        time = record[""time""][:26]
+                        record_timestamp = datetime.strptime(
+                            time, ""%Y-%m-%dT%H:%M:%S.%f""
+                        )
+                        # Only process events logged after the previous initial/delta sync.
+                        # Only grab events concerning User or Group objects.
+                        if (
+                            operation_name in VALID_OPERATIONS
+                            and record_timestamp > previous_sync_datetime
+                        ):
+                            data = {
+                                ""initated_by"": record[""properties""][""initiatedBy""],
+                                ""target_resources"": record[""properties""][
+                                    ""targetResources""
+                                ],
+                                ""operation_name"": operation_name,
+                                ""resultType"": record[""resultType""],
+                            }
+                            LOGGER.info(""Operation name: %s"", operation_name)
+                            LOGGER.info(""Record to Change: %s"", record)
+                            record_timestamp_utc = record_timestamp.isoformat()
+                            insert_change_to_db(data, record_timestamp_utc)
+                            sync_source = ""azure-"" + VALID_OPERATIONS[operation_name]
+                            provider_id = TENANT_ID
+                            save_sync_time(
+                                provider_id, sync_source, ""delta"", record_timestamp_utc
+                            )
+                            previous_sync_datetime = record_timestamp
+                    batch = receiver.receive(timeout=50)
+                LOGGER.info(""Closing connection to EventHub..."")
+                # Close the connection to the EventHub.
+                client.stop()
+            except KeyboardInterrupt:
+                pass
+            finally:
+                client.stop()
+        except ExpectedError as err:
+            LOGGER.debug((""%s Repolling after %s seconds..."", err.__str__, DELAY))
+            time.sleep(DELAY)
+        except Exception as err:
+            LOGGER.exception(err)
+            raise err
+
+
+def insert_change_to_db(data, record_timestamp):
+    """"""Insert change individually to rethinkdb from changelog eventhub of azure""""""
+    inbound_entry = {
+        ""data"": data,
+        ""data_type"": VALID_OPERATIONS[data[""operation_name""]],
+        ""sync_type"": ""delta"",
+        ""timestamp"": record_timestamp,
+        ""provider_id"": TENANT_ID,
+    }
+    response = r.table(""queue_inbound"").insert(inbound_entry).run()
+
+
+def get_last_delta_sync(provider_id, sync_type):
+    """"""Search and get last delta sync entry from the specified provider.""""""
+    try:
+        last_sync = (
+            r.table(""sync_tracker"")
+            .filter({""provider_id"": provider_id, ""sync_type"": sync_type})
+            .max(""timestamp"")
+            .coerce_to(""object"")
+            .run()
+        )
+        return last_sync
+    except r.ReqlNonExistenceError:
+        return None
+    except (r.ReqlOpFailedError, r.ReqlDriverError) as err:
+        raise ExpectedError(err)
+    except Exception as err:",164,2018-11-26 17:49:52,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236115757,https://github.com/hyperledger/sawtooth-next-directory/pull/631#discussion_r236115757,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/631,https://github.com/hyperledger/sawtooth-next-directory/pull/631,"Please add a comment explaining what these mean in their full form. 
#Azure Active Directory Enterprise Helpdesk Software as a Service Policy

It doesn't have to happen immediately since we have demo tomorrow. ",b8bde08109781099da0111f249ff47223b88bd1e,2018-11-26 03:56:03,236116002,"@@ -54,6 +54,11 @@ services:
       - CLIENT_ASSERTION=${CLIENT_ASSERTION}
       - TENANT_ID=${TENANT_ID}
       - AUTH_TYPE=${AUTH_TYPE}
+      - AAD_EH_SAS_POLICY=${AAD_EH_SAS_POLICY}",4,2018-11-26 17:49:52,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236116002,https://github.com/hyperledger/sawtooth-next-directory/pull/631#discussion_r236116002,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/630,https://github.com/hyperledger/sawtooth-next-directory/pull/630,Looking forward to seeing 'ui' go away entirely,61bc60635f50fe0b0338fb67623f87399b589030,2018-11-25 17:40:15,236082820,"@@ -203,3 +201,15 @@ services:
           --scheduler parallel
       \""\""""
 
+  # rbac-ui:",51,2018-11-25 17:40:59,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236082820,https://github.com/hyperledger/sawtooth-next-directory/pull/630#discussion_r236082820,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,"These functions are copied over from various parts of 'common' for incorporation into the architecture underway in 'ldap'. We discussed, and I have decided to leave 'common' alone to avoid breaking any functionality in 'azure'",b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-24 07:42:14,236034976,"@@ -0,0 +1,369 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import json
+import logging
+import os
+import sys
+
+import ldap3
+from ldap3 import ALL, MODIFY_ADD, MODIFY_DELETE, MODIFY_REPLACE, Connection, Server
+from ldap3.core.exceptions import LDAPInvalidDnError, LDAPSocketOpenError
+
+from rbac.providers.common.provider_transforms import GROUP_TRANSFORM, USER_TRANSFORM
+from rbac.providers.ldap.ldap_query_template import (
+    USER_SEARCH_FILTER,
+    GROUP_SEARCH_FILTER,
+)
+from rbac.providers.ldap import ldap_payload_transformer
+from rbac.providers.error.unrecoverable_error import LdapConnectionException
+
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.INFO
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+OUTBOUND_DB_TABLE = os.getenv(""OUTBOUND_DB_TABLE"", ""queue_outbound"")
+
+LDAP_DC = os.getenv(""LDAP_DC"")
+LDAP_SERVER = os.getenv(""LDAP_SERVER"")
+LDAP_USER = os.getenv(""LDAP_USER"")
+LDAP_PASS = os.getenv(""LDAP_PASS"")
+
+GROUP_ATTR_LIST = {
+    ""description"": ""description"",
+    ""members"": ""member"",
+    ""owners"": ""managedBy"",
+}
+GROUP_REQUIRED_ATTR = {""group_type""}
+LDAP_CONNECT_TIMEOUT_SECONDS = 5
+LDAP_RECEIVE_TIMEOUT_SECONDS = 5
+
+
+def get_dn_from_ldap_payload(payload):
+    """"""
+        Returns the distinguished_name from the payload retrieved from rethinkDb
+    """"""
+    LOGGER.debug(""Ldap(?) Payload: %s"", payload)
+    return payload[""distinguishedName""]
+
+
+def connect_and_transfer(outbound_entry):
+    """"""
+        Process outbound_entry as a AD user or AD group. If entry is neither,
+        throw ValueError.
+    """"""
+
+    LOGGER.info(""Publishing to ldap: %s"", outbound_entry)
+
+    payload_data_value = outbound_entry[""data""]
+
+    server = Server(
+        LDAP_SERVER, get_info=ALL, connect_timeout=LDAP_CONNECT_TIMEOUT_SECONDS
+    )
+    ldap_connection = Connection(
+        server,
+        user=LDAP_USER,
+        password=LDAP_PASS,
+        receive_timeout=LDAP_RECEIVE_TIMEOUT_SECONDS,
+    )
+
+    try:
+        ldap_connection.bind()
+        connected_to_ldap = True
+    except LDAPSocketOpenError as lse:
+        raise LdapConnectionException(
+            ""Failed to open a connection to Ldap. Aborting message transmission. Error: {0}"".format(
+                lse
+            )
+        )
+
+    if connected_to_ldap:
+        # TODO: Should we remove the record if it fails? Move it to a retry queue?
+        LOGGER.info(""Connected to ldap. Transmitting message, deleting record..."")
+
+        try:
+            if outbound_entry[""data_type""] == ""user"":
+                create_or_update_ldap_user(payload_data_value, ldap_connection)
+
+            elif outbound_entry[""data_type""] == ""group"":
+                process_group_entry(payload_data_value, ldap_connection)
+
+            else:
+                # This case should be caught by the validator. But just in case...
+                LOGGER.warning(
+                    ""Outbound queue record does not contain proper data type: %s"",
+                    outbound_entry[""data_type""],
+                )
+        except LDAPInvalidDnError as edn:
+            LOGGER.error(""Encountered an error sending message to ldap. Error: %s"", edn)
+
+
+def create_or_update_ldap_user(next_payload, ldap_connection):
+    """"""
+        Search AD to see if user from next exists. If an AD user exists, update the
+        AD user. If the AD user does not exist, create a new AD user.
+    """"""
+
+    distinguished_name = next_payload[""distinguished_name""][0]
+
+    search_filter = USER_SEARCH_FILTER.format(distinguished_name)
+
+    LOGGER.info(""Querying ldap for user..."")
+    ldap_connection.search(LDAP_DC, search_filter, attributes=ldap3.ALL_ATTRIBUTES)
+
+    if ldap_connection.entries:
+        LOGGER.info(""User found in ldap. Updating..."")
+
+        ldap_payload = ldap_payload_transformer.to_user_create(next_payload)
+
+        for ad_attribute in ldap_payload:
+
+            operation = (MODIFY_REPLACE, [ldap_payload[ad_attribute][0]])
+            if ad_attribute == ""member"":
+                operation = (MODIFY_REPLACE, [ldap_payload[""member""]])
+
+            ldap_connection.modify(
+                dn=distinguished_name, changes={ad_attribute: [operation]}
+            )
+
+        LOGGER.info(""User updated in ldap"")
+    else:
+        LOGGER.info(""Creating user in ldap..."")
+        _create_user_in_active_directory(next_payload, ldap_connection)
+        LOGGER.info(""User created in ldap"")
+
+
+def outbound_user_filter(next_user, provider):",,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236034976,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236034976,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,Confused about this as I don't see this diff on my local vs remote (?),b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-24 08:23:37,236035799,"@@ -37,11 +37,18 @@
 DEFAULT_CONFIG = {""OUTBOUND_QUEUE"": ""queue_outbound""}
 
 
-OUTBOUND_QUEUE = os.getenv(""OUTBOUND_QUEUE"", DEFAULT_CONFIG[""OUTBOUND_QUEUE""])
-LDAP_DC = os.getenv(""LDAP_DC"")
-LDAP_SERVER = os.getenv(""LDAP_SERVER"")
-LDAP_USER = os.getenv(""LDAP_USER"")
-LDAP_PASS = os.getenv(""LDAP_PASS"")
+def getenv(name, default):
+    value = os.getenv(name)",,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236035799,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236035799,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,This is because it looks like your remote is off sync from upstream master - please fix to resolve this confusion. ,b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-25 10:03:12,236067169,"@@ -37,11 +37,18 @@
 DEFAULT_CONFIG = {""OUTBOUND_QUEUE"": ""queue_outbound""}
 
 
-OUTBOUND_QUEUE = os.getenv(""OUTBOUND_QUEUE"", DEFAULT_CONFIG[""OUTBOUND_QUEUE""])
-LDAP_DC = os.getenv(""LDAP_DC"")
-LDAP_SERVER = os.getenv(""LDAP_SERVER"")
-LDAP_USER = os.getenv(""LDAP_USER"")
-LDAP_PASS = os.getenv(""LDAP_PASS"")
+def getenv(name, default):
+    value = os.getenv(name)",,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236067169,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236067169,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,Is there a reason why we set the default to a string instead of an int? Because in line 43 we convert DELAY to an int.,b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-25 10:21:42,236067744,"@@ -37,20 +37,12 @@
 logging.basicConfig(level=logging.INFO)
 LOGGER = logging.getLogger(__name__)
 
-DEFAULT_CONFIG = {""DELAY"": 1, ""OUTBOUND_QUEUE"": ""queue_outbound""}
+DEFAULT_CONFIG = {""DELAY"": ""1"", ""OUTBOUND_QUEUE"": ""queue_outbound""}",5,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236067744,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236067744,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,"Nadia has already created a filter that loops through the various user fields. The file is /common/outbound_filters.py under the function `outbound_user_creation_filter`. However, we do need make some edits to make it work for LDAP user creation.",b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-25 10:49:43,236068572,"@@ -0,0 +1,68 @@
+#! /usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from datetime import datetime
+
+
+# These functions are strictly for transforming and mapping.
+# There should be no throwing of exceptions in this file. If an exception does need to
+# be thrown, it should be thrown by the ldap_message_validator before this conversion takes place.
+
+
+# TODO: Write a unit test for this. Add to the Docstring an actual example.
+def to_date_ldap_query(rethink_timestamp):
+    """"""
+        Call to transform timestamp stored in RethinkDB to a string in the following format:YYYYmmddHHMMSS.Tz
+    """"""
+    return datetime.strptime(
+        rethink_timestamp.split(""+"")[0], ""%Y-%m-%dT%H:%M:%S.%f""
+    ).strftime(""%Y%m%d%H%M%S.0Z"")
+
+
+def to_user_create(next_payload):
+    """"""Converts a NEXT payload to an ldap payload""""""",37,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236068572,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236068572,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,"Is this old_val, new_val change part of our architecture discussion we'll have on Monday? Because this is not currently being stored in the queue_outbound records.",b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-25 10:56:20,236068772,"@@ -0,0 +1,180 @@
+#!/usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import asyncio
+import logging
+import time
+import os
+import sys
+
+import rethinkdb as r
+
+from rbac.providers.error.unrecoverable_error import LdapConnectionException
+from rbac.providers.ldap.ldap_message_validator import validate_next_payload
+from rbac.providers.ldap.ldap_outbound_sync import connect_and_transfer
+
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.INFO
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+DB_HOST = ""rethink""
+DB_PORT = 28015
+DB_NAME = ""rbac""
+DB_TABLE_OUTBOUND_QUEUE = ""queue_outbound""
+DB_TABLE_ACCESS_RETRY_SECS = 3
+
+r.set_loop_type(""asyncio"")
+
+ENV_VAR_MESSAGE_TARGET = ""LDAP_DC""
+MESSAGE_TARGET_KEY_LDAP = ""provider_id""
+MESSAGE_TARGET_VALUE_LDAP = os.getenv(ENV_VAR_MESSAGE_TARGET)
+
+
+@asyncio.coroutine
+def validate_and_export(next_payload):
+    """"""Validates and exports the NEXT payload to Active Directory""""""
+    # TODO: Determine what to do with inadequate ldap data in the queue. Log and drop?
+
+    LOGGER.debug(""Validating: %s"", str(next_payload))
+    validate_next_payload(next_payload)
+
+    try:
+        LOGGER.debug(""Transmitting: %s"", str(next_payload))
+        connect_and_transfer(next_payload)
+        return True
+    except LdapConnectionException as lce:
+        LOGGER.error(lce)
+
+    return False
+
+
+@asyncio.coroutine
+def remove_from_database(record_id):
+    """"""Remove entry from queue outbound table in RethinkDB.""""""
+    LOGGER.debug(""Deleting entry: %s"", record_id)
+    connection = yield from get_connection()
+    yield from (
+        r.table(DB_TABLE_OUTBOUND_QUEUE).get(record_id).delete().run(connection)
+    )
+
+
+@asyncio.coroutine
+def export_preexisting_record(record):
+    LOGGER.debug(""Validating and exporting preexisting record: %s"", record)
+    success = yield from (validate_and_export(record))
+    if success:
+        record_id = record[""id""]
+        yield from (remove_from_database(record_id))
+
+
+@asyncio.coroutine
+def export_new_record(record):
+    LOGGER.debug(""Validating and exporting new record: %s"", record)
+    # Both should be null on delete()
+    # Both should have values on update()
+    # Only new_val will should have a value on insert()
+    rethink_change_value_old = ""old_val""",298,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236068772,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236068772,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,"Looks like you missed one, refer to your `get_connection()` function down below. ",b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-25 10:57:46,236068808,"@@ -0,0 +1,180 @@
+#!/usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import asyncio
+import logging
+import time
+import os
+import sys
+
+import rethinkdb as r
+
+from rbac.providers.error.unrecoverable_error import LdapConnectionException
+from rbac.providers.ldap.ldap_message_validator import validate_next_payload
+from rbac.providers.ldap.ldap_outbound_sync import connect_and_transfer
+
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.INFO
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+DB_HOST = ""rethink""
+DB_PORT = 28015
+DB_NAME = ""rbac""
+DB_TABLE_OUTBOUND_QUEUE = ""queue_outbound""
+DB_TABLE_ACCESS_RETRY_SECS = 3
+
+r.set_loop_type(""asyncio"")
+
+ENV_VAR_MESSAGE_TARGET = ""LDAP_DC""
+MESSAGE_TARGET_KEY_LDAP = ""provider_id""
+MESSAGE_TARGET_VALUE_LDAP = os.getenv(ENV_VAR_MESSAGE_TARGET)
+
+
+@asyncio.coroutine
+def validate_and_export(next_payload):
+    """"""Validates and exports the NEXT payload to Active Directory""""""
+    # TODO: Determine what to do with inadequate ldap data in the queue. Log and drop?
+
+    LOGGER.debug(""Validating: %s"", str(next_payload))
+    validate_next_payload(next_payload)
+
+    try:
+        LOGGER.debug(""Transmitting: %s"", str(next_payload))
+        connect_and_transfer(next_payload)
+        return True
+    except LdapConnectionException as lce:
+        LOGGER.error(lce)
+
+    return False
+
+
+@asyncio.coroutine
+def remove_from_database(record_id):
+    """"""Remove entry from queue outbound table in RethinkDB.""""""
+    LOGGER.debug(""Deleting entry: %s"", record_id)
+    connection = yield from get_connection()
+    yield from (
+        r.table(DB_TABLE_OUTBOUND_QUEUE).get(record_id).delete().run(connection)
+    )
+
+
+@asyncio.coroutine
+def export_preexisting_record(record):
+    LOGGER.debug(""Validating and exporting preexisting record: %s"", record)
+    success = yield from (validate_and_export(record))
+    if success:
+        record_id = record[""id""]
+        yield from (remove_from_database(record_id))
+
+
+@asyncio.coroutine
+def export_new_record(record):
+    LOGGER.debug(""Validating and exporting new record: %s"", record)
+    # Both should be null on delete()
+    # Both should have values on update()
+    # Only new_val will should have a value on insert()
+    rethink_change_value_old = ""old_val""
+    rethink_change_value_new = ""new_val""
+
+    old_content = record[rethink_change_value_old]
+    new_content = record[rethink_change_value_new]
+
+    LOGGER.info(""Old_content: %s. New_content: %s"", old_content, new_content)
+
+    if new_content is None:
+        if old_content is None:
+            LOGGER.debug(""old_val and new_val are both none. Ignoring..."")
+        else:
+            LOGGER.debug(""Change in rethinkDb was a deletion. Ignoring..."")
+    else:
+
+        content = old_content
+
+        if new_content is not None:
+            LOGGER.info(
+                ""Change in RethinkDb was an insert or update. Exporting the new record...""
+            )
+            content = new_content
+
+        record_id = content[""id""]
+        LOGGER.info(""Record id from change feed: %s"", record_id)
+        success = yield from (validate_and_export(content))
+        if success:
+            yield from (remove_from_database(record_id))
+
+
+@asyncio.coroutine
+def export_preexisting_ldap_outbound_records():
+    """"""Export existing messages in the queue to Active Directory.""""""
+
+    LOGGER.debug(""Exporting existing ldap outbound records...."")
+
+    LOGGER.debug(
+        ""Connecting to host: %s, port: %s, name: %s"", DB_HOST, DB_PORT, DB_NAME
+    )
+    connection = yield from get_connection()
+
+    LOGGER.info(""Connected. Querying outbound queue for records..."")
+
+    new_records = yield from (
+        r.table(DB_TABLE_OUTBOUND_QUEUE)
+        .filter({MESSAGE_TARGET_KEY_LDAP: MESSAGE_TARGET_VALUE_LDAP})
+        .run(connection)
+    )
+
+    while (yield from new_records.fetch_next()):
+        new_record = yield from new_records.next()
+        yield from (export_preexisting_record(new_record))
+
+
+@asyncio.coroutine
+def sync_outbound_queue_to_ldap():
+    """"""Receives changes from the outbound queue table, validates and publishes them to Ldap""""""
+
+    connected = False
+
+    while not connected:
+        try:
+
+            connection = yield from (r.connect(DB_HOST, DB_PORT, DB_NAME))",,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236068808,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236068808,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,When we use os.getenv() the default value is expected to be a string. The linter was failing in its absence.,b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-26 03:06:16,236111144,"@@ -37,20 +37,12 @@
 logging.basicConfig(level=logging.INFO)
 LOGGER = logging.getLogger(__name__)
 
-DEFAULT_CONFIG = {""DELAY"": 1, ""OUTBOUND_QUEUE"": ""queue_outbound""}
+DEFAULT_CONFIG = {""DELAY"": ""1"", ""OUTBOUND_QUEUE"": ""queue_outbound""}",5,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236111144,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236111144,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,"I saw the filter, and it was breaking for me in mysterious ways because:

  - It takes 2 lists of attributes, sorts them, proceeds to map while also doing validation (ie the job of a validator). If an attribute is missing, it fails with the generic Python missing attribute error. Thus, I have separated (in the ldap directory) validation from transformation to make errors easier to troubleshoot.

  I mentioned a few times this sprint that moving functionality into a 'common' directory was never agreed upon, and that I believe it was carried out before the features themselves were fully implemented. At the same time: I have committed to deliver AD sync. The fastest way for me to do that without breaking AAD sync is by isolating the functionality to 'ldap' until the feature is stable.

I have objections to interleaving AD and AAD mappings to NEXT. Architecturally, mixing it all together does not support adding new providers in a straightforward way. (ie you end up at a loop on error pointing to mappings of { key: NEXT value {'ldap':'foo', 'azure':'bar'}} , etc. It complicates the process of determining which part of the bind was missing what field and how to correct it. 

I could see identifying the required keys for each system's entities and making them available to other modules as constants. 
",b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-26 03:19:33,236112441,"@@ -0,0 +1,68 @@
+#! /usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from datetime import datetime
+
+
+# These functions are strictly for transforming and mapping.
+# There should be no throwing of exceptions in this file. If an exception does need to
+# be thrown, it should be thrown by the ldap_message_validator before this conversion takes place.
+
+
+# TODO: Write a unit test for this. Add to the Docstring an actual example.
+def to_date_ldap_query(rethink_timestamp):
+    """"""
+        Call to transform timestamp stored in RethinkDB to a string in the following format:YYYYmmddHHMMSS.Tz
+    """"""
+    return datetime.strptime(
+        rethink_timestamp.split(""+"")[0], ""%Y-%m-%dT%H:%M:%S.%f""
+    ).strftime(""%Y%m%d%H%M%S.0Z"")
+
+
+def to_user_create(next_payload):
+    """"""Converts a NEXT payload to an ldap payload""""""",37,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236112441,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236112441,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,"No, 'old_val' and 'new_val' are a feature of RethinkDb changefeeds: https://rethinkdb.com/docs/changefeeds/python/
",b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-26 03:23:24,236112779,"@@ -0,0 +1,180 @@
+#!/usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import asyncio
+import logging
+import time
+import os
+import sys
+
+import rethinkdb as r
+
+from rbac.providers.error.unrecoverable_error import LdapConnectionException
+from rbac.providers.ldap.ldap_message_validator import validate_next_payload
+from rbac.providers.ldap.ldap_outbound_sync import connect_and_transfer
+
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.INFO
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+DB_HOST = ""rethink""
+DB_PORT = 28015
+DB_NAME = ""rbac""
+DB_TABLE_OUTBOUND_QUEUE = ""queue_outbound""
+DB_TABLE_ACCESS_RETRY_SECS = 3
+
+r.set_loop_type(""asyncio"")
+
+ENV_VAR_MESSAGE_TARGET = ""LDAP_DC""
+MESSAGE_TARGET_KEY_LDAP = ""provider_id""
+MESSAGE_TARGET_VALUE_LDAP = os.getenv(ENV_VAR_MESSAGE_TARGET)
+
+
+@asyncio.coroutine
+def validate_and_export(next_payload):
+    """"""Validates and exports the NEXT payload to Active Directory""""""
+    # TODO: Determine what to do with inadequate ldap data in the queue. Log and drop?
+
+    LOGGER.debug(""Validating: %s"", str(next_payload))
+    validate_next_payload(next_payload)
+
+    try:
+        LOGGER.debug(""Transmitting: %s"", str(next_payload))
+        connect_and_transfer(next_payload)
+        return True
+    except LdapConnectionException as lce:
+        LOGGER.error(lce)
+
+    return False
+
+
+@asyncio.coroutine
+def remove_from_database(record_id):
+    """"""Remove entry from queue outbound table in RethinkDB.""""""
+    LOGGER.debug(""Deleting entry: %s"", record_id)
+    connection = yield from get_connection()
+    yield from (
+        r.table(DB_TABLE_OUTBOUND_QUEUE).get(record_id).delete().run(connection)
+    )
+
+
+@asyncio.coroutine
+def export_preexisting_record(record):
+    LOGGER.debug(""Validating and exporting preexisting record: %s"", record)
+    success = yield from (validate_and_export(record))
+    if success:
+        record_id = record[""id""]
+        yield from (remove_from_database(record_id))
+
+
+@asyncio.coroutine
+def export_new_record(record):
+    LOGGER.debug(""Validating and exporting new record: %s"", record)
+    # Both should be null on delete()
+    # Both should have values on update()
+    # Only new_val will should have a value on insert()
+    rethink_change_value_old = ""old_val""",298,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236112779,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236112779,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,"Yep, I saw that too while looking over the changes post-merge . :( 
I will take a shot at putting it in... ",b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-26 03:25:46,236112988,"@@ -0,0 +1,180 @@
+#!/usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import asyncio
+import logging
+import time
+import os
+import sys
+
+import rethinkdb as r
+
+from rbac.providers.error.unrecoverable_error import LdapConnectionException
+from rbac.providers.ldap.ldap_message_validator import validate_next_payload
+from rbac.providers.ldap.ldap_outbound_sync import connect_and_transfer
+
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.INFO
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+DB_HOST = ""rethink""
+DB_PORT = 28015
+DB_NAME = ""rbac""
+DB_TABLE_OUTBOUND_QUEUE = ""queue_outbound""
+DB_TABLE_ACCESS_RETRY_SECS = 3
+
+r.set_loop_type(""asyncio"")
+
+ENV_VAR_MESSAGE_TARGET = ""LDAP_DC""
+MESSAGE_TARGET_KEY_LDAP = ""provider_id""
+MESSAGE_TARGET_VALUE_LDAP = os.getenv(ENV_VAR_MESSAGE_TARGET)
+
+
+@asyncio.coroutine
+def validate_and_export(next_payload):
+    """"""Validates and exports the NEXT payload to Active Directory""""""
+    # TODO: Determine what to do with inadequate ldap data in the queue. Log and drop?
+
+    LOGGER.debug(""Validating: %s"", str(next_payload))
+    validate_next_payload(next_payload)
+
+    try:
+        LOGGER.debug(""Transmitting: %s"", str(next_payload))
+        connect_and_transfer(next_payload)
+        return True
+    except LdapConnectionException as lce:
+        LOGGER.error(lce)
+
+    return False
+
+
+@asyncio.coroutine
+def remove_from_database(record_id):
+    """"""Remove entry from queue outbound table in RethinkDB.""""""
+    LOGGER.debug(""Deleting entry: %s"", record_id)
+    connection = yield from get_connection()
+    yield from (
+        r.table(DB_TABLE_OUTBOUND_QUEUE).get(record_id).delete().run(connection)
+    )
+
+
+@asyncio.coroutine
+def export_preexisting_record(record):
+    LOGGER.debug(""Validating and exporting preexisting record: %s"", record)
+    success = yield from (validate_and_export(record))
+    if success:
+        record_id = record[""id""]
+        yield from (remove_from_database(record_id))
+
+
+@asyncio.coroutine
+def export_new_record(record):
+    LOGGER.debug(""Validating and exporting new record: %s"", record)
+    # Both should be null on delete()
+    # Both should have values on update()
+    # Only new_val will should have a value on insert()
+    rethink_change_value_old = ""old_val""
+    rethink_change_value_new = ""new_val""
+
+    old_content = record[rethink_change_value_old]
+    new_content = record[rethink_change_value_new]
+
+    LOGGER.info(""Old_content: %s. New_content: %s"", old_content, new_content)
+
+    if new_content is None:
+        if old_content is None:
+            LOGGER.debug(""old_val and new_val are both none. Ignoring..."")
+        else:
+            LOGGER.debug(""Change in rethinkDb was a deletion. Ignoring..."")
+    else:
+
+        content = old_content
+
+        if new_content is not None:
+            LOGGER.info(
+                ""Change in RethinkDb was an insert or update. Exporting the new record...""
+            )
+            content = new_content
+
+        record_id = content[""id""]
+        LOGGER.info(""Record id from change feed: %s"", record_id)
+        success = yield from (validate_and_export(content))
+        if success:
+            yield from (remove_from_database(record_id))
+
+
+@asyncio.coroutine
+def export_preexisting_ldap_outbound_records():
+    """"""Export existing messages in the queue to Active Directory.""""""
+
+    LOGGER.debug(""Exporting existing ldap outbound records...."")
+
+    LOGGER.debug(
+        ""Connecting to host: %s, port: %s, name: %s"", DB_HOST, DB_PORT, DB_NAME
+    )
+    connection = yield from get_connection()
+
+    LOGGER.info(""Connected. Querying outbound queue for records..."")
+
+    new_records = yield from (
+        r.table(DB_TABLE_OUTBOUND_QUEUE)
+        .filter({MESSAGE_TARGET_KEY_LDAP: MESSAGE_TARGET_VALUE_LDAP})
+        .run(connection)
+    )
+
+    while (yield from new_records.fetch_next()):
+        new_record = yield from new_records.next()
+        yield from (export_preexisting_record(new_record))
+
+
+@asyncio.coroutine
+def sync_outbound_queue_to_ldap():
+    """"""Receives changes from the outbound queue table, validates and publishes them to Ldap""""""
+
+    connected = False
+
+    while not connected:
+        try:
+
+            connection = yield from (r.connect(DB_HOST, DB_PORT, DB_NAME))",,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236112988,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236112988,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,Fixed. Thanks!,b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-26 03:46:29,236115081,"@@ -0,0 +1,180 @@
+#!/usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import asyncio
+import logging
+import time
+import os
+import sys
+
+import rethinkdb as r
+
+from rbac.providers.error.unrecoverable_error import LdapConnectionException
+from rbac.providers.ldap.ldap_message_validator import validate_next_payload
+from rbac.providers.ldap.ldap_outbound_sync import connect_and_transfer
+
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.INFO
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+DB_HOST = ""rethink""
+DB_PORT = 28015
+DB_NAME = ""rbac""
+DB_TABLE_OUTBOUND_QUEUE = ""queue_outbound""
+DB_TABLE_ACCESS_RETRY_SECS = 3
+
+r.set_loop_type(""asyncio"")
+
+ENV_VAR_MESSAGE_TARGET = ""LDAP_DC""
+MESSAGE_TARGET_KEY_LDAP = ""provider_id""
+MESSAGE_TARGET_VALUE_LDAP = os.getenv(ENV_VAR_MESSAGE_TARGET)
+
+
+@asyncio.coroutine
+def validate_and_export(next_payload):
+    """"""Validates and exports the NEXT payload to Active Directory""""""
+    # TODO: Determine what to do with inadequate ldap data in the queue. Log and drop?
+
+    LOGGER.debug(""Validating: %s"", str(next_payload))
+    validate_next_payload(next_payload)
+
+    try:
+        LOGGER.debug(""Transmitting: %s"", str(next_payload))
+        connect_and_transfer(next_payload)
+        return True
+    except LdapConnectionException as lce:
+        LOGGER.error(lce)
+
+    return False
+
+
+@asyncio.coroutine
+def remove_from_database(record_id):
+    """"""Remove entry from queue outbound table in RethinkDB.""""""
+    LOGGER.debug(""Deleting entry: %s"", record_id)
+    connection = yield from get_connection()
+    yield from (
+        r.table(DB_TABLE_OUTBOUND_QUEUE).get(record_id).delete().run(connection)
+    )
+
+
+@asyncio.coroutine
+def export_preexisting_record(record):
+    LOGGER.debug(""Validating and exporting preexisting record: %s"", record)
+    success = yield from (validate_and_export(record))
+    if success:
+        record_id = record[""id""]
+        yield from (remove_from_database(record_id))
+
+
+@asyncio.coroutine
+def export_new_record(record):
+    LOGGER.debug(""Validating and exporting new record: %s"", record)
+    # Both should be null on delete()
+    # Both should have values on update()
+    # Only new_val will should have a value on insert()
+    rethink_change_value_old = ""old_val""
+    rethink_change_value_new = ""new_val""
+
+    old_content = record[rethink_change_value_old]
+    new_content = record[rethink_change_value_new]
+
+    LOGGER.info(""Old_content: %s. New_content: %s"", old_content, new_content)
+
+    if new_content is None:
+        if old_content is None:
+            LOGGER.debug(""old_val and new_val are both none. Ignoring..."")
+        else:
+            LOGGER.debug(""Change in rethinkDb was a deletion. Ignoring..."")
+    else:
+
+        content = old_content
+
+        if new_content is not None:
+            LOGGER.info(
+                ""Change in RethinkDb was an insert or update. Exporting the new record...""
+            )
+            content = new_content
+
+        record_id = content[""id""]
+        LOGGER.info(""Record id from change feed: %s"", record_id)
+        success = yield from (validate_and_export(content))
+        if success:
+            yield from (remove_from_database(record_id))
+
+
+@asyncio.coroutine
+def export_preexisting_ldap_outbound_records():
+    """"""Export existing messages in the queue to Active Directory.""""""
+
+    LOGGER.debug(""Exporting existing ldap outbound records...."")
+
+    LOGGER.debug(
+        ""Connecting to host: %s, port: %s, name: %s"", DB_HOST, DB_PORT, DB_NAME
+    )
+    connection = yield from get_connection()
+
+    LOGGER.info(""Connected. Querying outbound queue for records..."")
+
+    new_records = yield from (
+        r.table(DB_TABLE_OUTBOUND_QUEUE)
+        .filter({MESSAGE_TARGET_KEY_LDAP: MESSAGE_TARGET_VALUE_LDAP})
+        .run(connection)
+    )
+
+    while (yield from new_records.fetch_next()):
+        new_record = yield from new_records.next()
+        yield from (export_preexisting_record(new_record))
+
+
+@asyncio.coroutine
+def sync_outbound_queue_to_ldap():
+    """"""Receives changes from the outbound queue table, validates and publishes them to Ldap""""""
+
+    connected = False
+
+    while not connected:
+        try:
+
+            connection = yield from (r.connect(DB_HOST, DB_PORT, DB_NAME))",,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236115081,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236115081,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,Makes sense.,b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-26 18:50:23,236381321,"@@ -0,0 +1,68 @@
+#! /usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from datetime import datetime
+
+
+# These functions are strictly for transforming and mapping.
+# There should be no throwing of exceptions in this file. If an exception does need to
+# be thrown, it should be thrown by the ldap_message_validator before this conversion takes place.
+
+
+# TODO: Write a unit test for this. Add to the Docstring an actual example.
+def to_date_ldap_query(rethink_timestamp):
+    """"""
+        Call to transform timestamp stored in RethinkDB to a string in the following format:YYYYmmddHHMMSS.Tz
+    """"""
+    return datetime.strptime(
+        rethink_timestamp.split(""+"")[0], ""%Y-%m-%dT%H:%M:%S.%f""
+    ).strftime(""%Y%m%d%H%M%S.0Z"")
+
+
+def to_user_create(next_payload):
+    """"""Converts a NEXT payload to an ldap payload""""""",37,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236381321,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r236381321,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,"Hi Keith, Can we uncomment this and remove the FIXME?  Chatbot does not appear to break the local build. If you want to work with me offline to figure out the issue that works.",b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-28 16:44:39,237167870,"@@ -161,16 +161,17 @@ services:
     depends_on:
       - rbac-server
 
-  chatbot:
-    build:
-      context: .
-      dockerfile: ./docker/chatbot.Dockerfile
-    container_name: rbac-chatbot
-    image: rbac-chatbot:${ISOLATION_ID-latest}
-    volumes:
-      - "".:/project/hyperledger-rbac""
-    ports:
-      - ""5005:5005""
+#FIXME: This breaks localhost deployment as-is",,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237167870,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r237167870,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,Stand by. Deleting my containers and images and attempting to repro. Will uncomment if all goes smoothly.,b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-28 17:25:54,237184582,"@@ -161,16 +161,17 @@ services:
     depends_on:
       - rbac-server
 
-  chatbot:
-    build:
-      context: .
-      dockerfile: ./docker/chatbot.Dockerfile
-    container_name: rbac-chatbot
-    image: rbac-chatbot:${ISOLATION_ID-latest}
-    volumes:
-      - "".:/project/hyperledger-rbac""
-    ports:
-      - ""5005:5005""
+#FIXME: This breaks localhost deployment as-is",,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237184582,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r237184582,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/629,https://github.com/hyperledger/sawtooth-next-directory/pull/629,"Thanks for your help troubleshooting, @nadiabahrami . Identified the issue and handed off to @pgobin for documentation in-progress.",b7328ebf96a668705311da4f2f42d9650f0269fb,2018-11-28 18:59:46,237218232,"@@ -161,16 +161,17 @@ services:
     depends_on:
       - rbac-server
 
-  chatbot:
-    build:
-      context: .
-      dockerfile: ./docker/chatbot.Dockerfile
-    container_name: rbac-chatbot
-    image: rbac-chatbot:${ISOLATION_ID-latest}
-    volumes:
-      - "".:/project/hyperledger-rbac""
-    ports:
-      - ""5005:5005""
+#FIXME: This breaks localhost deployment as-is",,2018-11-28 20:24:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/237218232,https://github.com/hyperledger/sawtooth-next-directory/pull/629#discussion_r237218232,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/627,https://github.com/hyperledger/sawtooth-next-directory/pull/627,Forgot password is the same as reset password.,bd0dbc1e90b68e9453f38a914930af2614d4b8f0,2018-11-26 09:09:29,236169346,"@@ -134,6 +144,12 @@ export default class LoginForm extends Component {
               <Label>
                 <Link to='/'>Forgot Password?</Link>
               </Label>",36,2018-11-26 09:09:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236169346,https://github.com/hyperledger/sawtooth-next-directory/pull/627#discussion_r236169346,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/626,https://github.com/hyperledger/sawtooth-next-directory/pull/626,"Not sure this block is needed since it ultimately raises, but no major issue in having it",86d2218282b82216070f44a900b14866f834490c,2018-11-22 01:40:09,235580868,"@@ -31,11 +42,44 @@ def save_sync_time(sync_source, sync_type):
     r.table(""sync_tracker"").insert(sync_entry).run()
 
 
-def check_for_sync(source, sync_type):
-    """"""Check to see if a sync has occurred and return payload.""""""
-    return (
-        r.table(""sync_tracker"")
-        .filter({""source"": source, ""sync_type"": sync_type})
-        .coerce_to(""array"")
-        .run()
-    )
+def get_last_sync(source, sync_type):
+    """"""
+        Search and get last sync entry from the specified source. Throws
+        ExpectedError if sync_tracker table has not been initialized.
+    """"""
+    try:
+        last_sync = (
+            r.table(""sync_tracker"")
+            .filter({""source"": source, ""sync_type"": sync_type})
+            .coerce_to(""array"")
+            .run()
+        )
+        return last_sync
+    except (r.ReqlOpFailedError, r.ReqlDriverError) as err:
+        raise ExpectedError(err)
+    except Exception as err:
+        LOGGER.warning(type(err).__name__)
+        raise err
+
+
+def check_last_sync(sync_source, sync_type):
+    """"""
+        Check to see if a sync has occurred and return payload. If the
+        the sync_tracker table is not initialized, this function will
+        keep checking until the table has been initialized.
+    """"""
+    LOGGER.debug(""Checking for previous %s initial sync..."", sync_source)
+    while True:
+        try:
+            db_payload = get_last_sync(sync_source, sync_type)
+            return db_payload
+        except ExpectedError:
+            LOGGER.debug(
+                ""Sync tracker table has not been initialized. Checking again in %s seconds"",
+                DELAY,
+            )
+            time.sleep(DELAY)
+            continue
+        except Exception as err:",72,2018-11-22 01:41:20,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/235580868,https://github.com/hyperledger/sawtooth-next-directory/pull/626#discussion_r235580868,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/626,https://github.com/hyperledger/sawtooth-next-directory/pull/626,I wonder is there is another way to get class name without having to instantiate and lookup. Also no major problem,86d2218282b82216070f44a900b14866f834490c,2018-11-22 01:41:13,235581103,"@@ -27,11 +27,14 @@ class ExpectedError(Exception):
     recovered from. i.e.: Dropped db connection, uninstantiated table, etc.""""""
 
     def __init__(self, exception):
-        if exception.__class__.__name__ == r.ReqlNonExistenceError.__class__.__name__:
+        if (
+            exception.__class__.__name__
+            == r.ReqlNonExistenceError("""").__class__.__name__
+        ):
             error_message = ""The table is empty.""
-        elif exception.__class__.__name__ == r.ReqlOpFailedError.__class__.__name__:
+        elif exception.__class__.__name__ == r.ReqlOpFailedError("""").__class__.__name__:
             error_message = ""The table is not initialized.""
-        elif exception.__class__.__name__ == r.ReqlDriverError.__class__.__name__:
+        elif exception.__class__.__name__ == r.ReqlDriverError("""").__class__.__name__:",14,2018-11-22 01:41:20,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/235581103,https://github.com/hyperledger/sawtooth-next-directory/pull/626#discussion_r235581103,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/621,https://github.com/hyperledger/sawtooth-next-directory/pull/621,must return `null`,c3d6bc168b206bb0b2fbe6d78548d9adb1991f77,2018-11-26 13:02:07,236244648,"@@ -0,0 +1,74 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Image, Icon } from 'semantic-ui-react';
+
+import './StackedAvatar.css';
+
+
+/**
+ * 
+ * @class StackedAvatar
+ * StackedAvatar component
+ * 
+ */
+export default class StackedAvatar extends Component {
+
+  renderAvatars = () => {
+    const { list } = this.props;
+
+    if(list) {
+      return list.map((item, index) => {
+          if(index > 3){
+            return;",37,2018-11-26 13:02:07,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236244648,https://github.com/hyperledger/sawtooth-next-directory/pull/621#discussion_r236244648,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/620,https://github.com/hyperledger/sawtooth-next-directory/pull/620,Please combine all /blocks operations into one file,f032b8ca09d25ca82f4e407bf8ffc5413106face,2018-11-28 00:49:56,236904802,"@@ -0,0 +1,24 @@
+parameters:",1,2018-11-28 00:53:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236904802,https://github.com/hyperledger/sawtooth-next-directory/pull/620#discussion_r236904802,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/620,https://github.com/hyperledger/sawtooth-next-directory/pull/620,"Repeat the file grouping for all endpoints. eg: One file would include

/proposals
/proposals/{proposal-id}

If it rolls up to the same url segment at the end, it should be in the same file",f032b8ca09d25ca82f4e407bf8ffc5413106face,2018-11-28 00:53:42,236905458,"@@ -0,0 +1,83 @@
+parameters:",1,2018-11-28 00:53:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/236905458,https://github.com/hyperledger/sawtooth-next-directory/pull/620#discussion_r236905458,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/615,https://github.com/hyperledger/sawtooth-next-directory/pull/615,Would this log be better in debug? As we are trying to not spam our logging output. ,943d2314d810337cc66a54169319d53196e8f202,2018-11-20 17:44:44,235104397,"@@ -162,22 +165,35 @@ def create_entry_aad(queue_entry):
 
 
 def create_user_aad(queue_entry):
-    """"""Creates a given user in aad.""""""
-    # TODO: Implement user creation in Azure AD. Currently logs and deletes
-    #   entry and throws an ExpectedError.
-    LOGGER.warning(
-        ""User not in Azure AD. Aborting sync for user and removing \
-        from queue_outbound: %s"",
-        queue_entry,
-    )
-    delete_entry_queue(queue_entry[""id""], OUTBOUND_QUEUE)
-    raise ExpectedError(""User not in Azure AD."")
+    """"""Creates a given user in AAD.""""""
+    headers = AUTH.check_token(""POST"")
+    if headers:
+        url = f""{GRAPH_URL}/{GRAPH_VERSION}/users""
+        try:
+            aad_user = outbound_user_creation_filter(queue_entry[""data""], ""azure"")
+        except ValueError:
+            LOGGER.warning(
+                ""Unable to create user in AAD, displayName and email required: %s"",
+                queue_entry,
+            )
+            raise ExpectedError(""Unable to create user without display name and email."")
+        aad_user[""passwordProfile""] = {
+            ""password"": str(uuid4())[:16],
+            ""forceChangePasswordNextSignIn"": True,
+        }
+        response = requests.post(url=url, headers=headers, json=aad_user)
+        if response.status_code == 201:
+            delete_entry_queue(queue_entry[""id""], OUTBOUND_QUEUE)
+        else:
+            LOGGER.warning(""Unable to create user in AAD: %s"", queue_entry)
+            raise ExpectedError(""Unable to create user."")
 
 
 def create_group_aad(queue_entry):
     """"""Creates a given group in aad.""""""
     # TODO: Implement group creation in Azure AD. Currently logs and deletes
     #   entry and throws an ExpectedError.
+    LOGGER.info(""You are in create_group_aad"")",,2018-11-20 17:57:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/235104397,https://github.com/hyperledger/sawtooth-next-directory/pull/615#discussion_r235104397,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/615,https://github.com/hyperledger/sawtooth-next-directory/pull/615,"Seems we are using both providers, perhaps just change this to just `user = {}`",943d2314d810337cc66a54169319d53196e8f202,2018-11-20 17:47:02,235105190,"@@ -43,6 +45,29 @@ def outbound_group_filter(sawtooth_group, provider):
     for key, value in GROUP_TRANSFORM.items():
         if key in sawtooth_group:
             aad_group[value[provider]] = sawtooth_group[key]
-        else:
-            aad_group[value[provider]] = None
     return aad_group
+
+
+def outbound_user_creation_filter(sawtooth_user, provider):
+    """"""Takes in a user dict from queue_outbound and formats it to a provider's specs.
+    :param: user > dict > a dictionary representing a user
+    :param: provider > str > inbound provider type (azure, ldap)
+    """"""
+    if provider != ""azure"" and provider != ""ldap"":
+        raise TypeError(""Provider must be specified with a valid option."")
+    aad_user = {}",,2018-11-20 17:57:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/235105190,https://github.com/hyperledger/sawtooth-next-directory/pull/615#discussion_r235105190,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/615,https://github.com/hyperledger/sawtooth-next-directory/pull/615,Sorry I am using that for the next PR for testing.  I will remove.,943d2314d810337cc66a54169319d53196e8f202,2018-11-20 17:51:13,235106619,"@@ -162,22 +165,35 @@ def create_entry_aad(queue_entry):
 
 
 def create_user_aad(queue_entry):
-    """"""Creates a given user in aad.""""""
-    # TODO: Implement user creation in Azure AD. Currently logs and deletes
-    #   entry and throws an ExpectedError.
-    LOGGER.warning(
-        ""User not in Azure AD. Aborting sync for user and removing \
-        from queue_outbound: %s"",
-        queue_entry,
-    )
-    delete_entry_queue(queue_entry[""id""], OUTBOUND_QUEUE)
-    raise ExpectedError(""User not in Azure AD."")
+    """"""Creates a given user in AAD.""""""
+    headers = AUTH.check_token(""POST"")
+    if headers:
+        url = f""{GRAPH_URL}/{GRAPH_VERSION}/users""
+        try:
+            aad_user = outbound_user_creation_filter(queue_entry[""data""], ""azure"")
+        except ValueError:
+            LOGGER.warning(
+                ""Unable to create user in AAD, displayName and email required: %s"",
+                queue_entry,
+            )
+            raise ExpectedError(""Unable to create user without display name and email."")
+        aad_user[""passwordProfile""] = {
+            ""password"": str(uuid4())[:16],
+            ""forceChangePasswordNextSignIn"": True,
+        }
+        response = requests.post(url=url, headers=headers, json=aad_user)
+        if response.status_code == 201:
+            delete_entry_queue(queue_entry[""id""], OUTBOUND_QUEUE)
+        else:
+            LOGGER.warning(""Unable to create user in AAD: %s"", queue_entry)
+            raise ExpectedError(""Unable to create user."")
 
 
 def create_group_aad(queue_entry):
     """"""Creates a given group in aad.""""""
     # TODO: Implement group creation in Azure AD. Currently logs and deletes
     #   entry and throws an ExpectedError.
+    LOGGER.info(""You are in create_group_aad"")",,2018-11-20 17:57:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/235106619,https://github.com/hyperledger/sawtooth-next-directory/pull/615#discussion_r235106619,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/615,https://github.com/hyperledger/sawtooth-next-directory/pull/615,"Ah yes will change
",943d2314d810337cc66a54169319d53196e8f202,2018-11-20 17:51:31,235106718,"@@ -43,6 +45,29 @@ def outbound_group_filter(sawtooth_group, provider):
     for key, value in GROUP_TRANSFORM.items():
         if key in sawtooth_group:
             aad_group[value[provider]] = sawtooth_group[key]
-        else:
-            aad_group[value[provider]] = None
     return aad_group
+
+
+def outbound_user_creation_filter(sawtooth_user, provider):
+    """"""Takes in a user dict from queue_outbound and formats it to a provider's specs.
+    :param: user > dict > a dictionary representing a user
+    :param: provider > str > inbound provider type (azure, ldap)
+    """"""
+    if provider != ""azure"" and provider != ""ldap"":
+        raise TypeError(""Provider must be specified with a valid option."")
+    aad_user = {}",,2018-11-20 17:57:33,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/235106718,https://github.com/hyperledger/sawtooth-next-directory/pull/615#discussion_r235106718,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/613,https://github.com/hyperledger/sawtooth-next-directory/pull/613,doc strings on tests for what they are testing,d81e6fc4d57b7e73b4ef802d7a4e1befb172f8e0,2018-11-20 05:30:31,234873176,"@@ -36,6 +36,53 @@ def test_address(self):
             addresser.address_is(user_address), addresser.AddressSpace.USER
         )
 
+    def test_unique_id(self):",19,2018-11-20 05:53:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234873176,https://github.com/hyperledger/sawtooth-next-directory/pull/613#discussion_r234873176,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/613,https://github.com/hyperledger/sawtooth-next-directory/pull/613,resolved,d81e6fc4d57b7e73b4ef802d7a4e1befb172f8e0,2018-11-20 05:41:59,234874564,"@@ -36,6 +36,53 @@ def test_address(self):
             addresser.address_is(user_address), addresser.AddressSpace.USER
         )
 
+    def test_unique_id(self):",19,2018-11-20 05:53:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234874564,https://github.com/hyperledger/sawtooth-next-directory/pull/613#discussion_r234874564,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/609,https://github.com/hyperledger/sawtooth-next-directory/pull/609,Found an instance of members left unchanged (should be member).,247ff001fdf613e805a31a03c7ef478a40e140bd,2018-11-19 17:40:00,234715427,"@@ -61,9 +61,9 @@ def unmake_payload(payload):
         message = protobuf.role_transaction_pb2.CreateRole()
     elif message_type == RBACPayload.PROPOSE_ADD_ROLE_MEMBERS:",,2018-11-19 17:43:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234715427,https://github.com/hyperledger/sawtooth-next-directory/pull/609#discussion_r234715427,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/609,https://github.com/hyperledger/sawtooth-next-directory/pull/609,"thanks, fixed",247ff001fdf613e805a31a03c7ef478a40e140bd,2018-11-19 17:43:14,234716575,"@@ -61,9 +61,9 @@ def unmake_payload(payload):
         message = protobuf.role_transaction_pb2.CreateRole()
     elif message_type == RBACPayload.PROPOSE_ADD_ROLE_MEMBERS:",,2018-11-19 17:43:14,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234716575,https://github.com/hyperledger/sawtooth-next-directory/pull/609#discussion_r234716575,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,"owner is an array.
""owners"": [ ]

There are also admins.
""admins"": []

The values of these arrays will not be strings, but json that will include at least id and name.

e.g.
""members"": [{""id"": ""ff00"", name=""John""}, {""id"": ""ffee"", name=""Janet""}]",6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 18:23:29,234303289,"@@ -0,0 +1,151 @@
+[
+    {
+      ""id"": ""3e542e8d-2e04-4125-b7f6-5b362dcc8a60"",
+      ""name"": ""Jazz Security Permissions"",
+      ""owner"": ""jazz-security-permissions"",",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234303289,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234303289,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,@shrek-7 Why use mock data in the first place?,6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 18:49:46,234310885,"@@ -0,0 +1,151 @@
+[
+    {
+      ""id"": ""3e542e8d-2e04-4125-b7f6-5b362dcc8a60"",
+      ""name"": ""Jazz Security Permissions"",
+      ""owner"": ""jazz-security-permissions"",",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234310885,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234310885,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,nitpick: one additional line break between each expression. ,6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 19:15:35,234318408,"@@ -0,0 +1,27 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+#next-avatar {
+  position: relative;
+  height: 100%;
+}
+.next-avatar-count {",22,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234318408,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234318408,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,"use ems, not px.",6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 19:16:09,234318562,"@@ -0,0 +1,27 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+#next-avatar {
+  position: relative;
+  height: 100%;
+}
+.next-avatar-count {
+  color: #fff;
+  font-size: 10px;",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234318562,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234318562,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,all colors should be defined as variables. see `index.css`. ,6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 19:16:32,234318658,"@@ -0,0 +1,27 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+#next-avatar {
+  position: relative;
+  height: 100%;
+}
+.next-avatar-count {
+  color: #fff;",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234318658,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234318658,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,"don't use bind, instead, use `{() => this.renderAvatars}`",6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 19:18:22,234319244,"@@ -0,0 +1,78 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Image, Icon } from 'semantic-ui-react';
+
+import './StackedAvatar.css';
+
+
+/**
+ * 
+ * @class StackedAvatar
+ * StackedAvatar component
+ * 
+ */
+export default class StackedAvatar extends Component {
+
+  constructor(props) {
+    super(props);
+
+    this.renderAvatars = this.renderAvatars.bind(this);",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234319244,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234319244,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,nitpick: remove empty function,6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 19:18:45,234319389,"@@ -0,0 +1,78 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Image, Icon } from 'semantic-ui-react';
+
+import './StackedAvatar.css';
+
+
+/**
+ * 
+ * @class StackedAvatar
+ * StackedAvatar component
+ * 
+ */
+export default class StackedAvatar extends Component {
+
+  constructor(props) {
+    super(props);
+
+    this.renderAvatars = this.renderAvatars.bind(this);
+  }
+
+  componentDidMount() {",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234319389,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234319389,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,no inline styles.,6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 19:19:27,234319643,"@@ -0,0 +1,78 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Image, Icon } from 'semantic-ui-react';
+
+import './StackedAvatar.css';
+
+
+/**
+ * 
+ * @class StackedAvatar
+ * StackedAvatar component
+ * 
+ */
+export default class StackedAvatar extends Component {
+
+  constructor(props) {
+    super(props);
+
+    this.renderAvatars = this.renderAvatars.bind(this);
+  }
+
+  componentDidMount() {
+    
+  }
+
+  renderAvatars() {
+    const { list } = this.props;
+
+    return list.map((item, index) => {
+        if(index > 3){
+          return;
+        }
+        if(index === 3){
+          return (
+            <div style={{ position: 'absolute', left: `${index*20}px`, bottom: '5px' }}>",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234319643,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234319643,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,"destructure props.

```
conts { list } = this.props;
```",6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 19:21:10,234320118,"@@ -0,0 +1,78 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import { Image, Icon } from 'semantic-ui-react';
+
+import './StackedAvatar.css';
+
+
+/**
+ * 
+ * @class StackedAvatar
+ * StackedAvatar component
+ * 
+ */
+export default class StackedAvatar extends Component {
+
+  constructor(props) {
+    super(props);
+
+    this.renderAvatars = this.renderAvatars.bind(this);
+  }
+
+  componentDidMount() {
+    
+  }
+
+  renderAvatars() {
+    const { list } = this.props;
+
+    return list.map((item, index) => {
+        if(index > 3){
+          return;
+        }
+        if(index === 3){
+          return (
+            <div style={{ position: 'absolute', left: `${index*20}px`, bottom: '5px' }}>
+              <Icon inverted name='add' size='tiny'/>
+            </div>
+          );
+        }else{
+          return (
+            <div style={{ position: 'absolute', left: `${index*15}px`, bottom: '0px' }}>
+              <Image
+                avatar
+                src='http://i.pravatar.cc/500'/>
+            </div>
+          );
+        }
+    });
+  }
+
+  render () {
+
+    return (
+      <div id='next-avatar-container'>
+      <div id='next-avatar'>
+        {this.renderAvatars()}
+      </div>        
+      <div className='next-avatar-count'>{`${this.props.list.length} Members`}</div>",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234320118,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234320118,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,"use class property syntax:
```
class BrowseCard {
  state = {};
}
```",6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 19:22:32,234320519,"@@ -0,0 +1,83 @@
+/* Copyright 2018 Contributors to Hyperledger Sawtooth
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+----------------------------------------------------------------------------- */
+
+
+import React, { Component } from 'react';
+import StackedAvatar from '../avatar/StackedAvatar';
+
+import './BrowseCard.css';
+
+import { Icon } from 'semantic-ui-react';
+
+/**
+ *
+ * @class BrowseCard
+ * BrowseCard component
+ *
+ */
+
+export default class BrowseCard extends Component {
+
+  constructor(props){
+    super(props);
+
+    this.state={",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234320519,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234320519,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/595,https://github.com/hyperledger/sawtooth-next-directory/pull/595,nitpick: new line at end of every file,6beb70a35851b81d459620f60fc8c28c88465a70,2018-11-16 19:23:38,234320809,"@@ -17,11 +17,19 @@ limitations under the License.
 #next-browse-grid {
   margin-top: 0;
 }
+#next-browse-grid > .column {
+  padding: 0.3rem;
+}
 
 #next-browse-container {
-  margin-top: 13px;
+  margin-top: 25px;
 }
 
 .next-browse-search .ui {
   width: 100%;
 }
+
+#next-browse-wrapper {
+  background: #273544;
+  overflow-y: scroll;
+}",,2018-11-19 13:29:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234320809,https://github.com/hyperledger/sawtooth-next-directory/pull/595#discussion_r234320809,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/592,https://github.com/hyperledger/sawtooth-next-directory/pull/592,Needs docstring. I am on it.,6c1f809daad5f09ea5f5ceef50d685176010623f,2018-11-16 07:59:02,234116433,"@@ -33,22 +35,34 @@
 
 
 @gen.coroutine
-def print_feed_change_data():
+def export_feed_change_to_ldap():",44,2018-11-20 02:44:55,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234116433,https://github.com/hyperledger/sawtooth-next-directory/pull/592#discussion_r234116433,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/592,https://github.com/hyperledger/sawtooth-next-directory/pull/592,All of these need docstrings. Will get to it asap.,6c1f809daad5f09ea5f5ceef50d685176010623f,2018-11-16 08:01:26,234116868,"@@ -0,0 +1,65 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+from rbac.providers.ldap import ldap_message_validator
+from rbac.providers.error.validation import LdapValidationException
+
+
+def test_validate_missing_data_type():
+    ldap_payload = {""data"": {""distinguished_name"": ""yo""}}",,2018-11-20 02:44:55,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234116868,https://github.com/hyperledger/sawtooth-next-directory/pull/592#discussion_r234116868,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/591,https://github.com/hyperledger/sawtooth-next-directory/pull/591,Why the dot separator here instead of key lookup like the other places?,12b28a9c1759ad2af18c781bc3dc5edd5750b119,2018-11-16 05:32:47,234094164,"@@ -40,150 +44,92 @@ def getenv(name, default):
     return value
 
 
-CHANGELOG = ""outbound_queue_changelog""
-OUTBOUND_QUEUE = ""outbound_queue""
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+OUTBOUND_QUEUE = getenv(""OUTBOUND_QUEUE"", DEFAULT_CONFIG[""OUTBOUND_QUEUE""])
+DELAY = getenv(""DELAY"", DEFAULT_CONFIG[""DELAY""])
 GRAPH_URL = ""https://graph.microsoft.com""
 TENANT_ID = os.environ.get(""TENANT_ID"")
 GRAPH_VERSION = ""beta""
+PROVIDER_ID = ""azure""
+DIRECTION = ""outbound""
 AUTH = AadAuth()
 
 
-class ExpectedError(Exception):
-    """"""Custom Exception subclass. To be used for expected errors that can be
-    recovered from. i.e.: Dropped db connection, uninstantiated table, etc.""""""
-
-    LOGGER.debug(Exception)
-    if Exception.__class__.__name__ == ""ReqlNonExistanceError"":
-        error_message = ""The outbound queue is empty.""
-    elif Exception.__class__.__name__ == ""ReqlOpFailedError"":
-        error_message = ""The outbound queue is not ready.""
-    elif Exception.__class__.__name__ == ""ReqlDriverError"":
-        error_message = ""Could not connect to RethinkDB.""
-    else:
-        error_message = Exception
-    LOGGER.debug(""%s Repolling after %s seconds..."", error_message, DELAY)
-
-
-def connect_to_db():
-    """"""Polls the database until it comes up and opens a connection.""""""
-    connected_to_db = False
-    while not connected_to_db:
-        try:
-            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
-            connected_to_db = True
-        except r.ReqlDriverError as err:
-            LOGGER.debug(
-                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
-            )
-            time.sleep(DELAY)
-        except Exception as err:
-            LOGGER.warning(err.__class__.__name__)
-            raise err
-
-
-def peek_at_queue():
-    """"""Gets the oldest item from the queue without deleting it.""""""
-    try:
-        queue_entry = (
-            r.table(OUTBOUND_QUEUE)
-            .filter({""provider_id"": ""azure""})
-            .min(""timestamp"")
-            .run()
-        )
-        return queue_entry
-    except (r.ReqlNonExistenceError, r.ReqlOpFailedError, r.ReqlDriverError) as err:
-        raise ExpectedError(err)
-    except Exception as err:
-        LOGGER.warning(type(err).__name__)
-        raise err
-
-
-def check_entry_AAD(queue_entry):
-    """"""Routes the given query entry to the proper handler to check if it already
+def is_entry_in_aad(queue_entry):
+    """"""Routes the given queue entry to the proper handler to check if it already
     exists in Azure AD.""""""
     data_type = queue_entry[""data_type""]
-    if data_type == ""USER"":
-        check_user_AAD(queue_entry)
-    elif data_type == ""GROUP"":
-        check_group_AAD(queue_entry)
+    if data_type == ""user"":
+        is_user_in_aad(queue_entry)
+    elif data_type == ""group"":
+        is_group_in_aad(queue_entry)
 
 
-def check_group_AAD(queue_entry):
-    """"""Takes in a queue entry containing a group object and checks if it exists
-    in azure AD.""""""
-    group = queue_entry[""data""]
-    response = fetch_group_AAD(group[""id""])
+def is_user_in_aad(queue_entry):
+    """"""Takes in a queue entry containing a user object and checks if it exists
+    in azure AD. Returns True if the user exists, False if the user doesn't exist.
+    """"""
+    user = queue_entry[""data""]
+    if user[""user_id""]:
+        user_id = user[""user_id""]
+    else:
+        user_id = user[""user_principal_name""]
+    response = fetch_user_aad(user_id)
     if response[""status_code""] >= 200 and response[""status_code""] < 300:
         return True
-    elif response.status_code == 404:
+    elif response[""status_code""] == 404:
         return False
     else:
         raise Exception(
             f""Error getting user in Azure AD: Status code {response.status_code}""
         )
 
 
-def check_user_AAD(queue_entry):
-    """"""Takes in a queue entry containing a user object and checks if it exists
-    in azure AD.""""""
-    user = queue_entry[""data""]
-    if user[""user_id""]:
-        user_id = user[""user_id""]
-    else:
-        user_id = user[""user_principal_name""]
-    response = fetch_user_AAD(user_id)
+def is_group_in_aad(queue_entry):
+    """"""Takes in a queue entry containing a group object and checks if it exists
+    in azure AD. Returns True if the group exists, False if the user doesn't exist.
+    """"""
+    group = queue_entry[""data""]
+    response = fetch_group_aad(group[""id""])
     if response[""status_code""] >= 200 and response[""status_code""] < 300:
         return True
-    elif response[""status_code""] == 404:
+    elif response.status_code == 404:",,2018-11-16 08:05:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234094164,https://github.com/hyperledger/sawtooth-next-directory/pull/591#discussion_r234094164,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/591,https://github.com/hyperledger/sawtooth-next-directory/pull/591,"We might be able to move this block because:
  - It behaves the same as an uncaught exception would
  - We should avoid catching the generic Exception whenever possible an focus instead on the exceptions we can recover from",12b28a9c1759ad2af18c781bc3dc5edd5750b119,2018-11-16 05:36:17,234094578,"@@ -0,0 +1,101 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import sys
+import logging
+from datetime import datetime as dt
+import rethinkdb as r
+from rbac.providers.common.expected_errors import ExpectedError
+
+LOGGER = logging.getLogger(__name__)
+LOGGER.level = logging.DEBUG
+LOGGER.addHandler(logging.StreamHandler(sys.stdout))
+
+DEFAULT_CONFIG = {
+    ""DB_HOST"": ""rethink"",
+    ""DB_PORT"": ""28015"",
+    ""DB_NAME"": ""rbac"",
+    ""DELAY"": 1,
+    ""CHANGELOG"": ""changelog"",
+}
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or not value:
+        return default
+    return value
+
+
+CHANGELOG = getenv(""CHANGELOG"", DEFAULT_CONFIG[""CHANGELOG""])
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+DELAY = getenv(""DELAY"", DEFAULT_CONFIG[""DELAY""])
+
+
+def connect_to_db():
+    """"""Polls the database until it comes up and opens a connection.""""""
+    connected_to_db = False
+    while not connected_to_db:
+        try:
+            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+            connected_to_db = True
+        except r.ReqlDriverError as err:
+            LOGGER.debug(
+                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+            )
+            time.sleep(DELAY)
+        except Exception as err:",63,2018-11-16 08:05:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234094578,https://github.com/hyperledger/sawtooth-next-directory/pull/591#discussion_r234094578,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/591,https://github.com/hyperledger/sawtooth-next-directory/pull/591,There is quite a bit of work going on here in establishing the name of the outbound_queue. I am wondering what the intention is here. We can go over it tomorrow since I will inevitably be merging this file. ,12b28a9c1759ad2af18c781bc3dc5edd5750b119,2018-11-16 05:40:53,234095062,"@@ -0,0 +1,247 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import logging
+import os
+
+import rethinkdb as r
+import ldap3
+from ldap3 import ALL, MODIFY_REPLACE, Connection, Server
+
+from rbac.providers.common.rethink_db import (
+    connect_to_db,
+    peek_at_queue,
+    put_entry_changelog,
+    delete_entry_queue,
+)
+from rbac.providers.common.outbound_filters import (
+    outbound_user_filter,
+    outbound_group_filter,
+)
+
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""OUTBOUND_QUEUE"": ""queue_outbound""}
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or not value:
+        return default
+    return value
+
+
+OUTBOUND_QUEUE = getenv(""OUTBOUND_QUEUE"", DEFAULT_CONFIG[""OUTBOUND_QUEUE""])",47,2018-11-16 08:05:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234095062,https://github.com/hyperledger/sawtooth-next-directory/pull/591#discussion_r234095062,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/591,https://github.com/hyperledger/sawtooth-next-directory/pull/591,"This change happened on accident, I'll push out a change to revert it back.",12b28a9c1759ad2af18c781bc3dc5edd5750b119,2018-11-16 07:37:25,234112073,"@@ -40,150 +44,92 @@ def getenv(name, default):
     return value
 
 
-CHANGELOG = ""outbound_queue_changelog""
-OUTBOUND_QUEUE = ""outbound_queue""
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+OUTBOUND_QUEUE = getenv(""OUTBOUND_QUEUE"", DEFAULT_CONFIG[""OUTBOUND_QUEUE""])
+DELAY = getenv(""DELAY"", DEFAULT_CONFIG[""DELAY""])
 GRAPH_URL = ""https://graph.microsoft.com""
 TENANT_ID = os.environ.get(""TENANT_ID"")
 GRAPH_VERSION = ""beta""
+PROVIDER_ID = ""azure""
+DIRECTION = ""outbound""
 AUTH = AadAuth()
 
 
-class ExpectedError(Exception):
-    """"""Custom Exception subclass. To be used for expected errors that can be
-    recovered from. i.e.: Dropped db connection, uninstantiated table, etc.""""""
-
-    LOGGER.debug(Exception)
-    if Exception.__class__.__name__ == ""ReqlNonExistanceError"":
-        error_message = ""The outbound queue is empty.""
-    elif Exception.__class__.__name__ == ""ReqlOpFailedError"":
-        error_message = ""The outbound queue is not ready.""
-    elif Exception.__class__.__name__ == ""ReqlDriverError"":
-        error_message = ""Could not connect to RethinkDB.""
-    else:
-        error_message = Exception
-    LOGGER.debug(""%s Repolling after %s seconds..."", error_message, DELAY)
-
-
-def connect_to_db():
-    """"""Polls the database until it comes up and opens a connection.""""""
-    connected_to_db = False
-    while not connected_to_db:
-        try:
-            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
-            connected_to_db = True
-        except r.ReqlDriverError as err:
-            LOGGER.debug(
-                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
-            )
-            time.sleep(DELAY)
-        except Exception as err:
-            LOGGER.warning(err.__class__.__name__)
-            raise err
-
-
-def peek_at_queue():
-    """"""Gets the oldest item from the queue without deleting it.""""""
-    try:
-        queue_entry = (
-            r.table(OUTBOUND_QUEUE)
-            .filter({""provider_id"": ""azure""})
-            .min(""timestamp"")
-            .run()
-        )
-        return queue_entry
-    except (r.ReqlNonExistenceError, r.ReqlOpFailedError, r.ReqlDriverError) as err:
-        raise ExpectedError(err)
-    except Exception as err:
-        LOGGER.warning(type(err).__name__)
-        raise err
-
-
-def check_entry_AAD(queue_entry):
-    """"""Routes the given query entry to the proper handler to check if it already
+def is_entry_in_aad(queue_entry):
+    """"""Routes the given queue entry to the proper handler to check if it already
     exists in Azure AD.""""""
     data_type = queue_entry[""data_type""]
-    if data_type == ""USER"":
-        check_user_AAD(queue_entry)
-    elif data_type == ""GROUP"":
-        check_group_AAD(queue_entry)
+    if data_type == ""user"":
+        is_user_in_aad(queue_entry)
+    elif data_type == ""group"":
+        is_group_in_aad(queue_entry)
 
 
-def check_group_AAD(queue_entry):
-    """"""Takes in a queue entry containing a group object and checks if it exists
-    in azure AD.""""""
-    group = queue_entry[""data""]
-    response = fetch_group_AAD(group[""id""])
+def is_user_in_aad(queue_entry):
+    """"""Takes in a queue entry containing a user object and checks if it exists
+    in azure AD. Returns True if the user exists, False if the user doesn't exist.
+    """"""
+    user = queue_entry[""data""]
+    if user[""user_id""]:
+        user_id = user[""user_id""]
+    else:
+        user_id = user[""user_principal_name""]
+    response = fetch_user_aad(user_id)
     if response[""status_code""] >= 200 and response[""status_code""] < 300:
         return True
-    elif response.status_code == 404:
+    elif response[""status_code""] == 404:
         return False
     else:
         raise Exception(
             f""Error getting user in Azure AD: Status code {response.status_code}""
         )
 
 
-def check_user_AAD(queue_entry):
-    """"""Takes in a queue entry containing a user object and checks if it exists
-    in azure AD.""""""
-    user = queue_entry[""data""]
-    if user[""user_id""]:
-        user_id = user[""user_id""]
-    else:
-        user_id = user[""user_principal_name""]
-    response = fetch_user_AAD(user_id)
+def is_group_in_aad(queue_entry):
+    """"""Takes in a queue entry containing a group object and checks if it exists
+    in azure AD. Returns True if the group exists, False if the user doesn't exist.
+    """"""
+    group = queue_entry[""data""]
+    response = fetch_group_aad(group[""id""])
     if response[""status_code""] >= 200 and response[""status_code""] < 300:
         return True
-    elif response[""status_code""] == 404:
+    elif response.status_code == 404:",,2018-11-16 08:05:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234112073,https://github.com/hyperledger/sawtooth-next-directory/pull/591#discussion_r234112073,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/591,https://github.com/hyperledger/sawtooth-next-directory/pull/591,Change has been pushed.,12b28a9c1759ad2af18c781bc3dc5edd5750b119,2018-11-16 08:06:19,234117790,"@@ -40,150 +44,92 @@ def getenv(name, default):
     return value
 
 
-CHANGELOG = ""outbound_queue_changelog""
-OUTBOUND_QUEUE = ""outbound_queue""
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+OUTBOUND_QUEUE = getenv(""OUTBOUND_QUEUE"", DEFAULT_CONFIG[""OUTBOUND_QUEUE""])
+DELAY = getenv(""DELAY"", DEFAULT_CONFIG[""DELAY""])
 GRAPH_URL = ""https://graph.microsoft.com""
 TENANT_ID = os.environ.get(""TENANT_ID"")
 GRAPH_VERSION = ""beta""
+PROVIDER_ID = ""azure""
+DIRECTION = ""outbound""
 AUTH = AadAuth()
 
 
-class ExpectedError(Exception):
-    """"""Custom Exception subclass. To be used for expected errors that can be
-    recovered from. i.e.: Dropped db connection, uninstantiated table, etc.""""""
-
-    LOGGER.debug(Exception)
-    if Exception.__class__.__name__ == ""ReqlNonExistanceError"":
-        error_message = ""The outbound queue is empty.""
-    elif Exception.__class__.__name__ == ""ReqlOpFailedError"":
-        error_message = ""The outbound queue is not ready.""
-    elif Exception.__class__.__name__ == ""ReqlDriverError"":
-        error_message = ""Could not connect to RethinkDB.""
-    else:
-        error_message = Exception
-    LOGGER.debug(""%s Repolling after %s seconds..."", error_message, DELAY)
-
-
-def connect_to_db():
-    """"""Polls the database until it comes up and opens a connection.""""""
-    connected_to_db = False
-    while not connected_to_db:
-        try:
-            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
-            connected_to_db = True
-        except r.ReqlDriverError as err:
-            LOGGER.debug(
-                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
-            )
-            time.sleep(DELAY)
-        except Exception as err:
-            LOGGER.warning(err.__class__.__name__)
-            raise err
-
-
-def peek_at_queue():
-    """"""Gets the oldest item from the queue without deleting it.""""""
-    try:
-        queue_entry = (
-            r.table(OUTBOUND_QUEUE)
-            .filter({""provider_id"": ""azure""})
-            .min(""timestamp"")
-            .run()
-        )
-        return queue_entry
-    except (r.ReqlNonExistenceError, r.ReqlOpFailedError, r.ReqlDriverError) as err:
-        raise ExpectedError(err)
-    except Exception as err:
-        LOGGER.warning(type(err).__name__)
-        raise err
-
-
-def check_entry_AAD(queue_entry):
-    """"""Routes the given query entry to the proper handler to check if it already
+def is_entry_in_aad(queue_entry):
+    """"""Routes the given queue entry to the proper handler to check if it already
     exists in Azure AD.""""""
     data_type = queue_entry[""data_type""]
-    if data_type == ""USER"":
-        check_user_AAD(queue_entry)
-    elif data_type == ""GROUP"":
-        check_group_AAD(queue_entry)
+    if data_type == ""user"":
+        is_user_in_aad(queue_entry)
+    elif data_type == ""group"":
+        is_group_in_aad(queue_entry)
 
 
-def check_group_AAD(queue_entry):
-    """"""Takes in a queue entry containing a group object and checks if it exists
-    in azure AD.""""""
-    group = queue_entry[""data""]
-    response = fetch_group_AAD(group[""id""])
+def is_user_in_aad(queue_entry):
+    """"""Takes in a queue entry containing a user object and checks if it exists
+    in azure AD. Returns True if the user exists, False if the user doesn't exist.
+    """"""
+    user = queue_entry[""data""]
+    if user[""user_id""]:
+        user_id = user[""user_id""]
+    else:
+        user_id = user[""user_principal_name""]
+    response = fetch_user_aad(user_id)
     if response[""status_code""] >= 200 and response[""status_code""] < 300:
         return True
-    elif response.status_code == 404:
+    elif response[""status_code""] == 404:
         return False
     else:
         raise Exception(
             f""Error getting user in Azure AD: Status code {response.status_code}""
         )
 
 
-def check_user_AAD(queue_entry):
-    """"""Takes in a queue entry containing a user object and checks if it exists
-    in azure AD.""""""
-    user = queue_entry[""data""]
-    if user[""user_id""]:
-        user_id = user[""user_id""]
-    else:
-        user_id = user[""user_principal_name""]
-    response = fetch_user_AAD(user_id)
+def is_group_in_aad(queue_entry):
+    """"""Takes in a queue entry containing a group object and checks if it exists
+    in azure AD. Returns True if the group exists, False if the user doesn't exist.
+    """"""
+    group = queue_entry[""data""]
+    response = fetch_group_aad(group[""id""])
     if response[""status_code""] >= 200 and response[""status_code""] < 300:
         return True
-    elif response[""status_code""] == 404:
+    elif response.status_code == 404:",,2018-11-16 08:06:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234117790,https://github.com/hyperledger/sawtooth-next-directory/pull/591#discussion_r234117790,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/572,https://github.com/hyperledger/sawtooth-next-directory/pull/572,Trying to understand this change. Is the main purpose of this change to prove out how #533 can fail?,036f545cea144925e32c82f68571e552f2e06a3d,2018-11-14 21:35:25,233628573,"@@ -93,6 +93,8 @@ services:
     environment:
       - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
       - SERVER_PORT=${SERVER_PORT:-8000}
+      - SECRET_KEY=${SECRET_KEY}",4,2018-11-16 05:43:21,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233628573,https://github.com/hyperledger/sawtooth-next-directory/pull/572#discussion_r233628573,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/572,https://github.com/hyperledger/sawtooth-next-directory/pull/572,"The value configured in .env will not be passed into the docker container without putting it in the environment section of docker compose. This file change was missed in PR #259.
",036f545cea144925e32c82f68571e552f2e06a3d,2018-11-16 17:02:48,234278450,"@@ -93,6 +93,8 @@ services:
     environment:
       - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
       - SERVER_PORT=${SERVER_PORT:-8000}
+      - SECRET_KEY=${SECRET_KEY}",4,2018-11-16 17:02:48,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234278450,https://github.com/hyperledger/sawtooth-next-directory/pull/572#discussion_r234278450,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/572,https://github.com/hyperledger/sawtooth-next-directory/pull/572,Very well. In it goes. ,036f545cea144925e32c82f68571e552f2e06a3d,2018-11-16 18:08:45,234298997,"@@ -93,6 +93,8 @@ services:
     environment:
       - SERVER_HOST=${SERVER_HOST:-0.0.0.0}
       - SERVER_PORT=${SERVER_PORT:-8000}
+      - SECRET_KEY=${SECRET_KEY}",4,2018-11-16 18:08:45,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234298997,https://github.com/hyperledger/sawtooth-next-directory/pull/572#discussion_r234298997,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,what is this line for? all the assertions are above it.  I am confused about purpose.  ,5558f597520cab039151e96bd45710c721ee3445,2018-11-14 17:53:41,233553657,"@@ -47,7 +49,7 @@ def assertHasProp(self, item, name):
         self.assertTrue(
             hasattr(item, name), ""Expected {}.{} to exist"".format(item, name)
         )
-        prop = getattr(item, name)
+        getattr(item, name)",31,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233553657,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233553657,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,"So this is a test that is testing python and how it works, more then the actual code.  It is not necessary.  This is more for your knowledge then a remove.  ",5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:00:21,233556016,"@@ -16,38 +16,36 @@
 import logging
 import pytest
 
-from rbac.common.manager.rbac_manager import RBACManager
+from rbac.common import rbac
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
-from tests.rbac.common.manager.test_base import TestBase
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.rbac_manager
-class RBACManagerTest(TestBase):
+class RBACManagerTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        TestBase.__init__(self, *args, **kwargs)
+        TestAssertions.__init__(self, *args, **kwargs)
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_interface(self):
         """"""Verify the expected interface""""""
-        self.assertIsInstance(self.rbac, RBACManager)
-
-        self.assertIsInstance(self.rbac.user, UserManager)
-        self.assertTrue(callable(self.rbac.user.address))
-        self.assertTrue(callable(self.rbac.user.make))
-        self.assertTrue(callable(self.rbac.user.make_addresses))
-        self.assertTrue(callable(self.rbac.user.make_payload))
-        self.assertTrue(callable(self.rbac.user.create))
-        self.assertTrue(callable(self.rbac.user.send))
-        self.assertTrue(callable(self.rbac.user.get))
-
-        self.assertIsInstance(self.rbac.role, RoleManager)
-        self.assertTrue(callable(self.rbac.role.address))
-        self.assertTrue(callable(self.rbac.role.make))
-        self.assertTrue(callable(self.rbac.role.make_addresses))
-        self.assertTrue(callable(self.rbac.role.make_payload))
-        self.assertTrue(callable(self.rbac.role.create))
-        self.assertTrue(callable(self.rbac.role.send))
-        self.assertTrue(callable(self.rbac.role.get))
+        self.assertIsInstance(rbac.user, UserManager)",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233556016,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233556016,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,This line is not needed.  As the test below it is testing the 'callability' . of that method,5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:01:45,233556506,"@@ -13,152 +13,136 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+# pylint: disable=no-member
+
 import logging
-from uuid import uuid4
 import pytest
 
-from rbac.common import addresser
+from rbac.common import rbac
 from rbac.common import protobuf
-from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
-from rbac.common.role.role_manager import RoleManager
-from rbac.common.role.relationship_admin import AdminRelationship
-from rbac.common.role.confirm_admin import ConfirmAddRoleAdmin
-from tests.rbac.common.role.role_test_helper import RoleTestHelper
+from tests.rbac.common import helper
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.role
-class ConfirmRoleAddAdminTest(RoleTestHelper):
+class ConfirmRoleAddAdminTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        RoleTestHelper.__init__(self, *args, **kwargs)
-
-    @pytest.mark.unit
-    def test_interface(self):
-        """"""Verify the expected interface""""""
-        self.assertIsInstance(self.role, RoleManager)
-        self.assertIsInstance(self.role.admin, AdminRelationship)
-        self.assertIsInstance(self.role.admin.confirm, ConfirmAddRoleAdmin)
-        self.assertTrue(callable(self.role.admin.confirm.address))
-        self.assertTrue(callable(self.role.admin.confirm.make))
-        self.assertTrue(callable(self.role.admin.confirm.make_addresses))
-        self.assertTrue(callable(self.role.admin.confirm.make_payload))
-        self.assertTrue(callable(self.role.admin.confirm.create))
-        self.assertTrue(callable(self.role.admin.confirm.send))
-        self.assertTrue(callable(self.role.admin.confirm.get))
-
-    @pytest.mark.unit
-    def test_helper_interface(self):
-        """"""Verify the expected user test helper interface""""""
-        self.assertTrue(callable(self.get_testdata_name))
-        self.assertTrue(callable(self.get_testdata_username))
-        self.assertTrue(callable(self.get_testdata_user))
-        self.assertTrue(callable(self.get_testdata_user_with_key))
-        self.assertTrue(callable(self.get_testdata_reason))
-        self.assertTrue(callable(self.get_testdata_user_created))
-        self.assertTrue(callable(self.get_testdata_user_created_with_manager))
-
-    @pytest.mark.unit
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    @pytest.mark.library
     def test_make(self):
         """"""Test making the message""""""
-        self.assertTrue(callable(self.role.admin.confirm.make))
-        role, _, keypair = self.get_testunit_user_role()
-        user = self.get_testdata_user()
-        reason = self.get_testdata_reason()
-        message = self.role.admin.confirm.make(
-            proposal_id=uuid4().hex,
-            user_id=user.user_id,
-            role_id=role.role_id,
-            reason=reason,
+        self.assertTrue(callable(rbac.role.admin.confirm.make))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        reason = helper.proposal.reason()
+        message = rbac.role.admin.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
         )
         self.assertIsInstance(
             message, protobuf.role_transaction_pb2.ConfirmAddRoleAdmin
         )
-        self.assertEqual(message.user_id, user.user_id)
-        self.assertEqual(message.role_id, role.role_id)
+        self.assertEqual(message.proposal_id, proposal_id)
+        self.assertEqual(message.user_id, user_id)
+        self.assertEqual(message.role_id, role_id)
         self.assertEqual(message.reason, reason)
-        return message, keypair
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_make_addresses(self):
         """"""Test making the message addresses""""""
-        self.assertTrue(callable(self.role.admin.confirm.make_addresses))
-        message, admin_key = self.test_make()
-
-        inputs, outputs = self.role.admin.confirm.make_addresses(
-            message=message, signer_keypair=admin_key
+        self.assertTrue(callable(rbac.role.admin.confirm.make_addresses))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        proposal_address = rbac.role.admin.propose.address(role_id, user_id)
+        reason = helper.proposal.reason()
+        relationship_address = rbac.role.admin.address(role_id, user_id)
+        signer_keypair = helper.user.key()
+        signer_admin_address = rbac.role.admin.address(
+            role_id, signer_keypair.public_key
         )
-
-        relationship_address = addresser.role.admin.address(
-            message.role_id, message.user_id
+        message = rbac.role.admin.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
         )
-        proposal_address = addresser.proposal.address(
-            object_id=message.role_id, target_id=message.user_id
+
+        inputs, outputs = rbac.role.admin.confirm.make_addresses(
+            message=message, signer_keypair=signer_keypair
         )
 
         self.assertIsInstance(inputs, list)
-        self.assertIsInstance(outputs, list)
+        self.assertIn(signer_admin_address, inputs)
         self.assertIn(proposal_address, inputs)
+        self.assertEqual(len(inputs), 2)
+
+        self.assertIsInstance(outputs, list)
         self.assertIn(relationship_address, outputs)
         self.assertIn(proposal_address, outputs)
         self.assertEqual(len(outputs), 2)
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_make_payload(self):
         """"""Test making the message payload""""""
-        self.assertTrue(callable(self.role.admin.confirm.make_payload))
-        message, admin_key = self.test_make()
-        payload = self.role.admin.confirm.make_payload(
-            message=message, signer_keypair=admin_key
+        self.assertTrue(callable(rbac.role.admin.confirm.make_payload))",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233556506,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233556506,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,assertion not needed,5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:02:08,233556627,"@@ -13,152 +13,136 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+# pylint: disable=no-member
+
 import logging
-from uuid import uuid4
 import pytest
 
-from rbac.common import addresser
+from rbac.common import rbac
 from rbac.common import protobuf
-from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
-from rbac.common.role.role_manager import RoleManager
-from rbac.common.role.relationship_admin import AdminRelationship
-from rbac.common.role.confirm_admin import ConfirmAddRoleAdmin
-from tests.rbac.common.role.role_test_helper import RoleTestHelper
+from tests.rbac.common import helper
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.role
-class ConfirmRoleAddAdminTest(RoleTestHelper):
+class ConfirmRoleAddAdminTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        RoleTestHelper.__init__(self, *args, **kwargs)
-
-    @pytest.mark.unit
-    def test_interface(self):
-        """"""Verify the expected interface""""""
-        self.assertIsInstance(self.role, RoleManager)
-        self.assertIsInstance(self.role.admin, AdminRelationship)
-        self.assertIsInstance(self.role.admin.confirm, ConfirmAddRoleAdmin)
-        self.assertTrue(callable(self.role.admin.confirm.address))
-        self.assertTrue(callable(self.role.admin.confirm.make))
-        self.assertTrue(callable(self.role.admin.confirm.make_addresses))
-        self.assertTrue(callable(self.role.admin.confirm.make_payload))
-        self.assertTrue(callable(self.role.admin.confirm.create))
-        self.assertTrue(callable(self.role.admin.confirm.send))
-        self.assertTrue(callable(self.role.admin.confirm.get))
-
-    @pytest.mark.unit
-    def test_helper_interface(self):
-        """"""Verify the expected user test helper interface""""""
-        self.assertTrue(callable(self.get_testdata_name))
-        self.assertTrue(callable(self.get_testdata_username))
-        self.assertTrue(callable(self.get_testdata_user))
-        self.assertTrue(callable(self.get_testdata_user_with_key))
-        self.assertTrue(callable(self.get_testdata_reason))
-        self.assertTrue(callable(self.get_testdata_user_created))
-        self.assertTrue(callable(self.get_testdata_user_created_with_manager))
-
-    @pytest.mark.unit
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    @pytest.mark.library
     def test_make(self):
         """"""Test making the message""""""
-        self.assertTrue(callable(self.role.admin.confirm.make))
-        role, _, keypair = self.get_testunit_user_role()
-        user = self.get_testdata_user()
-        reason = self.get_testdata_reason()
-        message = self.role.admin.confirm.make(
-            proposal_id=uuid4().hex,
-            user_id=user.user_id,
-            role_id=role.role_id,
-            reason=reason,
+        self.assertTrue(callable(rbac.role.admin.confirm.make))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        reason = helper.proposal.reason()
+        message = rbac.role.admin.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
         )
         self.assertIsInstance(
             message, protobuf.role_transaction_pb2.ConfirmAddRoleAdmin
         )
-        self.assertEqual(message.user_id, user.user_id)
-        self.assertEqual(message.role_id, role.role_id)
+        self.assertEqual(message.proposal_id, proposal_id)
+        self.assertEqual(message.user_id, user_id)
+        self.assertEqual(message.role_id, role_id)
         self.assertEqual(message.reason, reason)
-        return message, keypair
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_make_addresses(self):
         """"""Test making the message addresses""""""
-        self.assertTrue(callable(self.role.admin.confirm.make_addresses))
-        message, admin_key = self.test_make()
-
-        inputs, outputs = self.role.admin.confirm.make_addresses(
-            message=message, signer_keypair=admin_key
+        self.assertTrue(callable(rbac.role.admin.confirm.make_addresses))",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233556627,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233556627,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,Not needed,5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:02:21,233556696,"@@ -13,152 +13,136 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+# pylint: disable=no-member
+
 import logging
-from uuid import uuid4
 import pytest
 
-from rbac.common import addresser
+from rbac.common import rbac
 from rbac.common import protobuf
-from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
-from rbac.common.role.role_manager import RoleManager
-from rbac.common.role.relationship_admin import AdminRelationship
-from rbac.common.role.confirm_admin import ConfirmAddRoleAdmin
-from tests.rbac.common.role.role_test_helper import RoleTestHelper
+from tests.rbac.common import helper
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.role
-class ConfirmRoleAddAdminTest(RoleTestHelper):
+class ConfirmRoleAddAdminTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        RoleTestHelper.__init__(self, *args, **kwargs)
-
-    @pytest.mark.unit
-    def test_interface(self):
-        """"""Verify the expected interface""""""
-        self.assertIsInstance(self.role, RoleManager)
-        self.assertIsInstance(self.role.admin, AdminRelationship)
-        self.assertIsInstance(self.role.admin.confirm, ConfirmAddRoleAdmin)
-        self.assertTrue(callable(self.role.admin.confirm.address))
-        self.assertTrue(callable(self.role.admin.confirm.make))
-        self.assertTrue(callable(self.role.admin.confirm.make_addresses))
-        self.assertTrue(callable(self.role.admin.confirm.make_payload))
-        self.assertTrue(callable(self.role.admin.confirm.create))
-        self.assertTrue(callable(self.role.admin.confirm.send))
-        self.assertTrue(callable(self.role.admin.confirm.get))
-
-    @pytest.mark.unit
-    def test_helper_interface(self):
-        """"""Verify the expected user test helper interface""""""
-        self.assertTrue(callable(self.get_testdata_name))
-        self.assertTrue(callable(self.get_testdata_username))
-        self.assertTrue(callable(self.get_testdata_user))
-        self.assertTrue(callable(self.get_testdata_user_with_key))
-        self.assertTrue(callable(self.get_testdata_reason))
-        self.assertTrue(callable(self.get_testdata_user_created))
-        self.assertTrue(callable(self.get_testdata_user_created_with_manager))
-
-    @pytest.mark.unit
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    @pytest.mark.library
     def test_make(self):
         """"""Test making the message""""""
-        self.assertTrue(callable(self.role.admin.confirm.make))
-        role, _, keypair = self.get_testunit_user_role()
-        user = self.get_testdata_user()
-        reason = self.get_testdata_reason()
-        message = self.role.admin.confirm.make(
-            proposal_id=uuid4().hex,
-            user_id=user.user_id,
-            role_id=role.role_id,
-            reason=reason,
+        self.assertTrue(callable(rbac.role.admin.confirm.make))",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233556696,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233556696,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,Not needed,5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:02:36,233556767,"@@ -13,152 +13,136 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+# pylint: disable=no-member
+
 import logging
-from uuid import uuid4
 import pytest
 
-from rbac.common import addresser
+from rbac.common import rbac
 from rbac.common import protobuf
-from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
-from rbac.common.role.role_manager import RoleManager
-from rbac.common.role.relationship_admin import AdminRelationship
-from rbac.common.role.confirm_admin import ConfirmAddRoleAdmin
-from tests.rbac.common.role.role_test_helper import RoleTestHelper
+from tests.rbac.common import helper
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.role
-class ConfirmRoleAddAdminTest(RoleTestHelper):
+class ConfirmRoleAddAdminTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        RoleTestHelper.__init__(self, *args, **kwargs)
-
-    @pytest.mark.unit
-    def test_interface(self):
-        """"""Verify the expected interface""""""
-        self.assertIsInstance(self.role, RoleManager)
-        self.assertIsInstance(self.role.admin, AdminRelationship)
-        self.assertIsInstance(self.role.admin.confirm, ConfirmAddRoleAdmin)
-        self.assertTrue(callable(self.role.admin.confirm.address))
-        self.assertTrue(callable(self.role.admin.confirm.make))
-        self.assertTrue(callable(self.role.admin.confirm.make_addresses))
-        self.assertTrue(callable(self.role.admin.confirm.make_payload))
-        self.assertTrue(callable(self.role.admin.confirm.create))
-        self.assertTrue(callable(self.role.admin.confirm.send))
-        self.assertTrue(callable(self.role.admin.confirm.get))
-
-    @pytest.mark.unit
-    def test_helper_interface(self):
-        """"""Verify the expected user test helper interface""""""
-        self.assertTrue(callable(self.get_testdata_name))
-        self.assertTrue(callable(self.get_testdata_username))
-        self.assertTrue(callable(self.get_testdata_user))
-        self.assertTrue(callable(self.get_testdata_user_with_key))
-        self.assertTrue(callable(self.get_testdata_reason))
-        self.assertTrue(callable(self.get_testdata_user_created))
-        self.assertTrue(callable(self.get_testdata_user_created_with_manager))
-
-    @pytest.mark.unit
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    @pytest.mark.library
     def test_make(self):
         """"""Test making the message""""""
-        self.assertTrue(callable(self.role.admin.confirm.make))
-        role, _, keypair = self.get_testunit_user_role()
-        user = self.get_testdata_user()
-        reason = self.get_testdata_reason()
-        message = self.role.admin.confirm.make(
-            proposal_id=uuid4().hex,
-            user_id=user.user_id,
-            role_id=role.role_id,
-            reason=reason,
+        self.assertTrue(callable(rbac.role.admin.confirm.make))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        reason = helper.proposal.reason()
+        message = rbac.role.admin.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
         )
         self.assertIsInstance(
             message, protobuf.role_transaction_pb2.ConfirmAddRoleAdmin
         )
-        self.assertEqual(message.user_id, user.user_id)
-        self.assertEqual(message.role_id, role.role_id)
+        self.assertEqual(message.proposal_id, proposal_id)
+        self.assertEqual(message.user_id, user_id)
+        self.assertEqual(message.role_id, role_id)
         self.assertEqual(message.reason, reason)
-        return message, keypair
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_make_addresses(self):
         """"""Test making the message addresses""""""
-        self.assertTrue(callable(self.role.admin.confirm.make_addresses))
-        message, admin_key = self.test_make()
-
-        inputs, outputs = self.role.admin.confirm.make_addresses(
-            message=message, signer_keypair=admin_key
+        self.assertTrue(callable(rbac.role.admin.confirm.make_addresses))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        proposal_address = rbac.role.admin.propose.address(role_id, user_id)
+        reason = helper.proposal.reason()
+        relationship_address = rbac.role.admin.address(role_id, user_id)
+        signer_keypair = helper.user.key()
+        signer_admin_address = rbac.role.admin.address(
+            role_id, signer_keypair.public_key
         )
-
-        relationship_address = addresser.role.admin.address(
-            message.role_id, message.user_id
+        message = rbac.role.admin.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
         )
-        proposal_address = addresser.proposal.address(
-            object_id=message.role_id, target_id=message.user_id
+
+        inputs, outputs = rbac.role.admin.confirm.make_addresses(
+            message=message, signer_keypair=signer_keypair
         )
 
         self.assertIsInstance(inputs, list)
-        self.assertIsInstance(outputs, list)
+        self.assertIn(signer_admin_address, inputs)
         self.assertIn(proposal_address, inputs)
+        self.assertEqual(len(inputs), 2)
+
+        self.assertIsInstance(outputs, list)
         self.assertIn(relationship_address, outputs)
         self.assertIn(proposal_address, outputs)
         self.assertEqual(len(outputs), 2)
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_make_payload(self):
         """"""Test making the message payload""""""
-        self.assertTrue(callable(self.role.admin.confirm.make_payload))
-        message, admin_key = self.test_make()
-        payload = self.role.admin.confirm.make_payload(
-            message=message, signer_keypair=admin_key
+        self.assertTrue(callable(rbac.role.admin.confirm.make_payload))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        proposal_address = rbac.role.admin.propose.address(role_id, user_id)
+        reason = helper.proposal.reason()
+        relationship_address = rbac.role.admin.address(role_id, user_id)
+        signer_keypair = helper.user.key()
+        signer_admin_address = rbac.role.admin.address(
+            role_id, signer_keypair.public_key
         )
-
-        relationship_address = addresser.role.admin.address(
-            message.role_id, message.user_id
+        message = rbac.role.admin.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
         )
-        proposal_address = self.role.admin.confirm.address(
-            object_id=message.role_id, target_id=message.user_id
+
+        payload = rbac.role.admin.confirm.make_payload(
+            message=message, signer_keypair=signer_keypair
         )
-        self.assertIsInstance(payload, RBACPayload)
+        self.assertIsInstance(payload, protobuf.rbac_payload_pb2.RBACPayload)
+
         inputs = list(payload.inputs)
-        outputs = list(payload.outputs)
         self.assertIsInstance(inputs, list)
-        self.assertIsInstance(outputs, list)
+        self.assertIn(signer_admin_address, inputs)
         self.assertIn(proposal_address, inputs)
         self.assertEqual(len(inputs), 2)
+
+        outputs = list(payload.outputs)
+        self.assertIsInstance(outputs, list)
         self.assertIn(relationship_address, outputs)
         self.assertIn(proposal_address, outputs)
         self.assertEqual(len(outputs), 2)
-        return payload
 
     @pytest.mark.integration
     def test_create(self):
         """"""Test executing the message on the blockchain""""""
-        self.assertTrue(callable(self.role.admin.confirm.create))
-        self.assertTrue(callable(self.get_testdata_role_admin_proposal))
+        self.assertTrue(callable(rbac.role.admin.confirm.create))",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233556767,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233556767,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,Not needed,5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:02:53,233556837,"@@ -13,153 +13,144 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+# pylint: disable=no-member
+
 import logging
-from uuid import uuid4
 import pytest
 
-from rbac.common import addresser
+from rbac.common import rbac
 from rbac.common import protobuf
-from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
-from rbac.common.role.role_manager import RoleManager
-from rbac.common.role.relationship_member import MemberRelationship
-from rbac.common.role.confirm_member import ConfirmAddRoleMember
-from tests.rbac.common.role.role_test_helper import RoleTestHelper
+from tests.rbac.common import helper
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.role
-class ConfirmRoleAddMemberTest(RoleTestHelper):
+class ConfirmRoleAddMemberTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        RoleTestHelper.__init__(self, *args, **kwargs)
-
-    @pytest.mark.unit
-    def test_interface(self):
-        """"""Verify the expected interface""""""
-        self.assertIsInstance(self.role, RoleManager)
-        self.assertIsInstance(self.role.member, MemberRelationship)
-        self.assertIsInstance(self.role.member.confirm, ConfirmAddRoleMember)
-        self.assertTrue(callable(self.role.member.confirm.address))
-        self.assertTrue(callable(self.role.member.confirm.make))
-        self.assertTrue(callable(self.role.member.confirm.make_addresses))
-        self.assertTrue(callable(self.role.member.confirm.make_payload))
-        self.assertTrue(callable(self.role.member.confirm.create))
-        self.assertTrue(callable(self.role.member.confirm.send))
-        self.assertTrue(callable(self.role.member.confirm.get))
-
-    @pytest.mark.unit
-    def test_helper_interface(self):
-        """"""Verify the expected user test helper interface""""""
-        self.assertTrue(callable(self.get_testdata_name))
-        self.assertTrue(callable(self.get_testdata_username))
-        self.assertTrue(callable(self.get_testdata_user))
-        self.assertTrue(callable(self.get_testdata_user_with_key))
-        self.assertTrue(callable(self.get_testdata_reason))
-        self.assertTrue(callable(self.get_testdata_user_created))
-        self.assertTrue(callable(self.get_testdata_user_created_with_manager))
-
-    @pytest.mark.unit
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    @pytest.mark.library
     def test_make(self):
         """"""Test making the message""""""
-        self.assertTrue(callable(self.role.member.confirm.make))
-        role, _, keypair = self.get_testunit_user_role()
-        user = self.get_testdata_user()
-        reason = self.get_testdata_reason()
-        message = self.role.member.confirm.make(
-            proposal_id=uuid4().hex,
-            user_id=user.user_id,
-            role_id=role.role_id,
-            reason=reason,
+        self.assertTrue(callable(rbac.role.member.confirm.make))",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233556837,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233556837,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,"Not needed
",5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:03:06,233556900,"@@ -13,153 +13,144 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+# pylint: disable=no-member
+
 import logging
-from uuid import uuid4
 import pytest
 
-from rbac.common import addresser
+from rbac.common import rbac
 from rbac.common import protobuf
-from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
-from rbac.common.role.role_manager import RoleManager
-from rbac.common.role.relationship_member import MemberRelationship
-from rbac.common.role.confirm_member import ConfirmAddRoleMember
-from tests.rbac.common.role.role_test_helper import RoleTestHelper
+from tests.rbac.common import helper
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.role
-class ConfirmRoleAddMemberTest(RoleTestHelper):
+class ConfirmRoleAddMemberTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        RoleTestHelper.__init__(self, *args, **kwargs)
-
-    @pytest.mark.unit
-    def test_interface(self):
-        """"""Verify the expected interface""""""
-        self.assertIsInstance(self.role, RoleManager)
-        self.assertIsInstance(self.role.member, MemberRelationship)
-        self.assertIsInstance(self.role.member.confirm, ConfirmAddRoleMember)
-        self.assertTrue(callable(self.role.member.confirm.address))
-        self.assertTrue(callable(self.role.member.confirm.make))
-        self.assertTrue(callable(self.role.member.confirm.make_addresses))
-        self.assertTrue(callable(self.role.member.confirm.make_payload))
-        self.assertTrue(callable(self.role.member.confirm.create))
-        self.assertTrue(callable(self.role.member.confirm.send))
-        self.assertTrue(callable(self.role.member.confirm.get))
-
-    @pytest.mark.unit
-    def test_helper_interface(self):
-        """"""Verify the expected user test helper interface""""""
-        self.assertTrue(callable(self.get_testdata_name))
-        self.assertTrue(callable(self.get_testdata_username))
-        self.assertTrue(callable(self.get_testdata_user))
-        self.assertTrue(callable(self.get_testdata_user_with_key))
-        self.assertTrue(callable(self.get_testdata_reason))
-        self.assertTrue(callable(self.get_testdata_user_created))
-        self.assertTrue(callable(self.get_testdata_user_created_with_manager))
-
-    @pytest.mark.unit
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    @pytest.mark.library
     def test_make(self):
         """"""Test making the message""""""
-        self.assertTrue(callable(self.role.member.confirm.make))
-        role, _, keypair = self.get_testunit_user_role()
-        user = self.get_testdata_user()
-        reason = self.get_testdata_reason()
-        message = self.role.member.confirm.make(
-            proposal_id=uuid4().hex,
-            user_id=user.user_id,
-            role_id=role.role_id,
-            reason=reason,
+        self.assertTrue(callable(rbac.role.member.confirm.make))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        reason = helper.proposal.reason()
+        message = rbac.role.member.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
         )
         self.assertIsInstance(
             message, protobuf.role_transaction_pb2.ConfirmAddRoleMember
         )
-        self.assertEqual(message.user_id, user.user_id)
-        self.assertEqual(message.role_id, role.role_id)
+        self.assertEqual(message.proposal_id, proposal_id)
+        self.assertEqual(message.user_id, user_id)
+        self.assertEqual(message.role_id, role_id)
         self.assertEqual(message.reason, reason)
-        return message, keypair
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_make_addresses(self):
         """"""Test making the message addresses""""""
-        self.assertTrue(callable(self.role.member.confirm.make_addresses))
-        message, owner_key = self.test_make()
-
-        inputs, outputs = self.role.member.confirm.make_addresses(
-            message=message, signer_keypair=owner_key
+        self.assertTrue(callable(rbac.role.member.confirm.make_addresses))",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233556900,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233556900,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,Not needed,5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:03:15,233556987,"@@ -13,153 +13,144 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+# pylint: disable=no-member
+
 import logging
-from uuid import uuid4
 import pytest
 
-from rbac.common import addresser
+from rbac.common import rbac
 from rbac.common import protobuf
-from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
-from rbac.common.role.role_manager import RoleManager
-from rbac.common.role.relationship_member import MemberRelationship
-from rbac.common.role.confirm_member import ConfirmAddRoleMember
-from tests.rbac.common.role.role_test_helper import RoleTestHelper
+from tests.rbac.common import helper
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.role
-class ConfirmRoleAddMemberTest(RoleTestHelper):
+class ConfirmRoleAddMemberTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        RoleTestHelper.__init__(self, *args, **kwargs)
-
-    @pytest.mark.unit
-    def test_interface(self):
-        """"""Verify the expected interface""""""
-        self.assertIsInstance(self.role, RoleManager)
-        self.assertIsInstance(self.role.member, MemberRelationship)
-        self.assertIsInstance(self.role.member.confirm, ConfirmAddRoleMember)
-        self.assertTrue(callable(self.role.member.confirm.address))
-        self.assertTrue(callable(self.role.member.confirm.make))
-        self.assertTrue(callable(self.role.member.confirm.make_addresses))
-        self.assertTrue(callable(self.role.member.confirm.make_payload))
-        self.assertTrue(callable(self.role.member.confirm.create))
-        self.assertTrue(callable(self.role.member.confirm.send))
-        self.assertTrue(callable(self.role.member.confirm.get))
-
-    @pytest.mark.unit
-    def test_helper_interface(self):
-        """"""Verify the expected user test helper interface""""""
-        self.assertTrue(callable(self.get_testdata_name))
-        self.assertTrue(callable(self.get_testdata_username))
-        self.assertTrue(callable(self.get_testdata_user))
-        self.assertTrue(callable(self.get_testdata_user_with_key))
-        self.assertTrue(callable(self.get_testdata_reason))
-        self.assertTrue(callable(self.get_testdata_user_created))
-        self.assertTrue(callable(self.get_testdata_user_created_with_manager))
-
-    @pytest.mark.unit
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    @pytest.mark.library
     def test_make(self):
         """"""Test making the message""""""
-        self.assertTrue(callable(self.role.member.confirm.make))
-        role, _, keypair = self.get_testunit_user_role()
-        user = self.get_testdata_user()
-        reason = self.get_testdata_reason()
-        message = self.role.member.confirm.make(
-            proposal_id=uuid4().hex,
-            user_id=user.user_id,
-            role_id=role.role_id,
-            reason=reason,
+        self.assertTrue(callable(rbac.role.member.confirm.make))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        reason = helper.proposal.reason()
+        message = rbac.role.member.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
         )
         self.assertIsInstance(
             message, protobuf.role_transaction_pb2.ConfirmAddRoleMember
         )
-        self.assertEqual(message.user_id, user.user_id)
-        self.assertEqual(message.role_id, role.role_id)
+        self.assertEqual(message.proposal_id, proposal_id)
+        self.assertEqual(message.user_id, user_id)
+        self.assertEqual(message.role_id, role_id)
         self.assertEqual(message.reason, reason)
-        return message, keypair
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_make_addresses(self):
         """"""Test making the message addresses""""""
-        self.assertTrue(callable(self.role.member.confirm.make_addresses))
-        message, owner_key = self.test_make()
-
-        inputs, outputs = self.role.member.confirm.make_addresses(
-            message=message, signer_keypair=owner_key
+        self.assertTrue(callable(rbac.role.member.confirm.make_addresses))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        proposal_address = rbac.role.member.propose.address(role_id, user_id)
+        reason = helper.proposal.reason()
+        relationship_address = rbac.role.member.address(role_id, user_id)
+        signer_keypair = helper.user.key()
+        signer_admin_address = rbac.role.admin.address(
+            role_id, signer_keypair.public_key
         )
-
-        relationship_address = addresser.role.member.address(
-            message.role_id, message.user_id
+        signer_owner_address = rbac.role.owner.address(
+            role_id, signer_keypair.public_key
         )
-        proposal_address = addresser.proposal.address(
-            object_id=message.role_id, target_id=message.user_id
+        message = rbac.role.member.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
+        )
+
+        inputs, outputs = rbac.role.member.confirm.make_addresses(
+            message=message, signer_keypair=signer_keypair
         )
 
         self.assertIsInstance(inputs, list)
-        self.assertIsInstance(outputs, list)
+        self.assertIn(signer_owner_address, inputs)
+        self.assertIn(signer_admin_address, inputs)
         self.assertIn(proposal_address, inputs)
         self.assertEqual(len(inputs), 3)
+
+        self.assertIsInstance(outputs, list)
         self.assertIn(relationship_address, outputs)
         self.assertIn(proposal_address, outputs)
         self.assertEqual(len(outputs), 2)
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_make_payload(self):
         """"""Test making the message payload""""""
-        self.assertTrue(callable(self.role.member.confirm.make_payload))
-        message, owner_key = self.test_make()
-        payload = self.role.member.confirm.make_payload(
-            message=message, signer_keypair=owner_key
+        self.assertTrue(callable(rbac.role.member.confirm.make_payload))",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233556987,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233556987,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,Not needed,5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:03:32,233557089,"@@ -13,153 +13,144 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+# pylint: disable=no-member
+
 import logging
-from uuid import uuid4
 import pytest
 
-from rbac.common import addresser
+from rbac.common import rbac
 from rbac.common import protobuf
-from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
-from rbac.common.role.role_manager import RoleManager
-from rbac.common.role.relationship_owner import OwnerRelationship
-from rbac.common.role.confirm_owner import ConfirmAddRoleOwner
-from tests.rbac.common.role.role_test_helper import RoleTestHelper
+from tests.rbac.common import helper
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.role
-class ConfirmRoleAddOwnerTest(RoleTestHelper):
+class ConfirmRoleAddOwnerTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        RoleTestHelper.__init__(self, *args, **kwargs)
-
-    @pytest.mark.unit
-    def test_interface(self):
-        """"""Verify the expected interface""""""
-        self.assertIsInstance(self.role, RoleManager)
-        self.assertIsInstance(self.role.owner, OwnerRelationship)
-        self.assertIsInstance(self.role.owner.confirm, ConfirmAddRoleOwner)
-        self.assertTrue(callable(self.role.owner.confirm.address))
-        self.assertTrue(callable(self.role.owner.confirm.make))
-        self.assertTrue(callable(self.role.owner.confirm.make_addresses))
-        self.assertTrue(callable(self.role.owner.confirm.make_payload))
-        self.assertTrue(callable(self.role.owner.confirm.create))
-        self.assertTrue(callable(self.role.owner.confirm.send))
-        self.assertTrue(callable(self.role.owner.confirm.get))
-
-    @pytest.mark.unit
-    def test_helper_interface(self):
-        """"""Verify the expected user test helper interface""""""
-        self.assertTrue(callable(self.get_testdata_name))
-        self.assertTrue(callable(self.get_testdata_username))
-        self.assertTrue(callable(self.get_testdata_user))
-        self.assertTrue(callable(self.get_testdata_user_with_key))
-        self.assertTrue(callable(self.get_testdata_reason))
-        self.assertTrue(callable(self.get_testdata_user_created))
-        self.assertTrue(callable(self.get_testdata_user_created_with_manager))
-
-    @pytest.mark.unit
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    @pytest.mark.library
     def test_make(self):
         """"""Test making the message""""""
-        self.assertTrue(callable(self.role.owner.confirm.make))
-        role, _, keypair = self.get_testunit_user_role()
-        user = self.get_testdata_user()
-        reason = self.get_testdata_reason()
-        message = self.role.owner.confirm.make(
-            proposal_id=uuid4().hex,
-            user_id=user.user_id,
-            role_id=role.role_id,
-            reason=reason,
+        self.assertTrue(callable(rbac.role.owner.confirm.make))",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233557089,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233557089,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,Not needed,5558f597520cab039151e96bd45710c721ee3445,2018-11-14 18:03:41,233557123,"@@ -13,153 +13,144 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+# pylint: disable=no-member
+
 import logging
-from uuid import uuid4
 import pytest
 
-from rbac.common import addresser
+from rbac.common import rbac
 from rbac.common import protobuf
-from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
-from rbac.common.role.role_manager import RoleManager
-from rbac.common.role.relationship_owner import OwnerRelationship
-from rbac.common.role.confirm_owner import ConfirmAddRoleOwner
-from tests.rbac.common.role.role_test_helper import RoleTestHelper
+from tests.rbac.common import helper
+from tests.rbac.common.assertions import TestAssertions
 
 LOGGER = logging.getLogger(__name__)
 
 
 @pytest.mark.role
-class ConfirmRoleAddOwnerTest(RoleTestHelper):
+class ConfirmRoleAddOwnerTest(TestAssertions):
     def __init__(self, *args, **kwargs):
-        RoleTestHelper.__init__(self, *args, **kwargs)
-
-    @pytest.mark.unit
-    def test_interface(self):
-        """"""Verify the expected interface""""""
-        self.assertIsInstance(self.role, RoleManager)
-        self.assertIsInstance(self.role.owner, OwnerRelationship)
-        self.assertIsInstance(self.role.owner.confirm, ConfirmAddRoleOwner)
-        self.assertTrue(callable(self.role.owner.confirm.address))
-        self.assertTrue(callable(self.role.owner.confirm.make))
-        self.assertTrue(callable(self.role.owner.confirm.make_addresses))
-        self.assertTrue(callable(self.role.owner.confirm.make_payload))
-        self.assertTrue(callable(self.role.owner.confirm.create))
-        self.assertTrue(callable(self.role.owner.confirm.send))
-        self.assertTrue(callable(self.role.owner.confirm.get))
-
-    @pytest.mark.unit
-    def test_helper_interface(self):
-        """"""Verify the expected user test helper interface""""""
-        self.assertTrue(callable(self.get_testdata_name))
-        self.assertTrue(callable(self.get_testdata_username))
-        self.assertTrue(callable(self.get_testdata_user))
-        self.assertTrue(callable(self.get_testdata_user_with_key))
-        self.assertTrue(callable(self.get_testdata_reason))
-        self.assertTrue(callable(self.get_testdata_user_created))
-        self.assertTrue(callable(self.get_testdata_user_created_with_manager))
-
-    @pytest.mark.unit
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    @pytest.mark.library
     def test_make(self):
         """"""Test making the message""""""
-        self.assertTrue(callable(self.role.owner.confirm.make))
-        role, _, keypair = self.get_testunit_user_role()
-        user = self.get_testdata_user()
-        reason = self.get_testdata_reason()
-        message = self.role.owner.confirm.make(
-            proposal_id=uuid4().hex,
-            user_id=user.user_id,
-            role_id=role.role_id,
-            reason=reason,
+        self.assertTrue(callable(rbac.role.owner.confirm.make))
+        user_id = helper.user.id()
+        role_id = helper.role.id()
+        proposal_id = helper.proposal.id()
+        reason = helper.proposal.reason()
+        message = rbac.role.owner.confirm.make(
+            proposal_id=proposal_id, user_id=user_id, role_id=role_id, reason=reason
         )
         self.assertIsInstance(
             message, protobuf.role_transaction_pb2.ConfirmAddRoleOwner
         )
-        self.assertEqual(message.user_id, user.user_id)
-        self.assertEqual(message.role_id, role.role_id)
+        self.assertEqual(message.proposal_id, proposal_id)
+        self.assertEqual(message.user_id, user_id)
+        self.assertEqual(message.role_id, role_id)
         self.assertEqual(message.reason, reason)
-        return message, keypair
 
-    @pytest.mark.unit
+    @pytest.mark.library
     def test_make_addresses(self):
         """"""Test making the message addresses""""""
-        self.assertTrue(callable(self.role.owner.confirm.make_addresses))
-        message, owner_key = self.test_make()
-
-        inputs, outputs = self.role.owner.confirm.make_addresses(
-            message=message, signer_keypair=owner_key
+        self.assertTrue(callable(rbac.role.owner.confirm.make_addresses))",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233557123,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233557123,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,"it tests that it is able to get the named attribute (does not raise an exception)
hasattr check alone is insufficient given properties can be functions",5558f597520cab039151e96bd45710c721ee3445,2018-11-15 00:38:29,233675468,"@@ -47,7 +49,7 @@ def assertHasProp(self, item, name):
         self.assertTrue(
             hasattr(item, name), ""Expected {}.{} to exist"".format(item, name)
         )
-        prop = getattr(item, name)
+        getattr(item, name)",31,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233675468,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r233675468,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,"Not a show-stopper, but I am not seeing how we will be adopting/applying this at this time. 

What I can see is using pytest decorators to filter out tests we would run in a build pipeline (setting aside slow running tests for downstream/e2e tests to improve pre-merge build time). We can employ the decoration once it solves an existing problem. Without a problem being solved comes a reduced value-added.
",5558f597520cab039151e96bd45710c721ee3445,2018-11-16 18:21:54,234302853,"@@ -23,7 +23,7 @@
 LOGGER = logging.getLogger(__name__)
 
 
-@pytest.mark.unit
+@pytest.mark.library",5,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234302853,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234302853,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,"Decorators allow developers to pick which set of tests they want to run. The Library decorated is useful for me to run all library tests, nothing more.",5558f597520cab039151e96bd45710c721ee3445,2018-11-16 18:26:20,234304118,"@@ -23,7 +23,7 @@
 LOGGER = logging.getLogger(__name__)
 
 
-@pytest.mark.unit
+@pytest.mark.library",5,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234304118,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234304118,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,doc string,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 19:16:59,234318804,"@@ -40,27 +41,37 @@ def getattr(self, item, attribute):
 
     @property
     def name(self):
+        """"""The name of this message type""""""
         raise NotImplementedError(""Class must implement this property"")
 
     @property
     def names(self):
+        """"""The plural name of this message type""""""
         return self.name + ""s""
 
     @property
     def message_type(self):
-        raise NotImplementedError(""Class must implement this method"")
+        """"""The type of this message""""""
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def message_type_name(self):
+        return self._message_type_name",,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234318804,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234318804,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,Doc String on what this testhelper does,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 20:02:46,234331767,"@@ -0,0 +1,35 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from tests.rbac.common.assertions import TestAssertions
+from tests.rbac.common.user.user_helper import UserTestHelper
+from tests.rbac.common.role.role_helper import RoleTestHelper
+from tests.rbac.common.task.task_helper import TaskTestHelper
+from tests.rbac.common.proposal.proposal_helper import ProposalTestHelper
+
+
+class TestHelper(TestAssertions):
+    def __init__(self, *args, **kwargs):",27,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234331767,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234331767,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,doc s,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 20:03:38,234332025,"@@ -56,3 +59,12 @@ def assertIsAddress(self, value):
                 value
             ),
         )
+
+    def assertIsIdentifier(self, value):
+        self.assertIsInstance(value, str)",36,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234332025,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234332025,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,doc strings ,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 20:05:18,234332428,"@@ -13,11 +13,14 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-from tests.rbac.common.sawtooth.batch_assertions import BatchAssertions
-from tests.rbac.common.user.user_helper import UserTestHelper
+from tests.rbac.common.assertions.batch import BatchAssertions
 
 
-class TestHelper(BatchAssertions):
+class TestAssertions(BatchAssertions):
     def __init__(self, *args, **kwargs):",14,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234332428,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234332428,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,docstrings,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 20:43:26,234341950,"@@ -0,0 +1,77 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# pylint: disable=no-member
+
+import logging
+import random
+
+from rbac.common import rbac
+from rbac.common import protobuf
+from tests.rbac.common.assertions import TestAssertions
+from tests.rbac.common.user.create_user_helper import CreateUserTestHelper
+from tests.rbac.common.role.create_role_helper import CreateRoleTestHelper
+
+LOGGER = logging.getLogger(__name__)
+
+
+class TestHelper(TestAssertions):
+    def __init__(self, *args, **kwargs):
+        TestAssertions.__init__(self, *args, **kwargs)
+        self.user = CreateUserTestHelper()
+        self.role = CreateRoleTestHelper()
+
+
+# pylint: disable=invalid-name
+helper = TestHelper()
+
+
+class ProposeRoleAdminTestHelper(TestAssertions):
+    def __init__(self, *args, **kwargs):
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    def id(self):",47,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234341950,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234341950,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,docstrings,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 20:44:53,234342337,"@@ -0,0 +1,78 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# pylint: disable=no-member
+
+import logging
+import random
+
+from rbac.common import rbac
+from rbac.common import protobuf
+from tests.rbac.common.assertions import TestAssertions
+from tests.rbac.common.user.create_user_helper import CreateUserTestHelper
+from tests.rbac.common.role.create_role_helper import CreateRoleTestHelper
+
+LOGGER = logging.getLogger(__name__)
+
+
+class TestHelper(TestAssertions):
+    def __init__(self, *args, **kwargs):
+        TestAssertions.__init__(self, *args, **kwargs)
+        self.user = CreateUserTestHelper()
+        self.role = CreateRoleTestHelper()
+
+
+# pylint: disable=invalid-name
+helper = TestHelper()
+
+
+class ProposeRoleMemberTestHelper(TestAssertions):
+    def __init__(self, *args, **kwargs):
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    def id(self):",47,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234342337,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234342337,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,docstrings,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 20:47:40,234342948,"@@ -0,0 +1,77 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# pylint: disable=no-member
+
+import logging
+import random
+
+from rbac.common import rbac
+from rbac.common import protobuf
+from tests.rbac.common.assertions import TestAssertions
+from tests.rbac.common.user.create_user_helper import CreateUserTestHelper
+from tests.rbac.common.role.create_role_helper import CreateRoleTestHelper
+
+LOGGER = logging.getLogger(__name__)
+
+
+class TestHelper(TestAssertions):
+    def __init__(self, *args, **kwargs):
+        TestAssertions.__init__(self, *args, **kwargs)
+        self.user = CreateUserTestHelper()
+        self.role = CreateRoleTestHelper()
+
+
+# pylint: disable=invalid-name
+helper = TestHelper()
+
+
+class ProposeRoleOwnerTestHelper(TestAssertions):
+    def __init__(self, *args, **kwargs):
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    def id(self):",46,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234342948,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234342948,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,docstring,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 20:48:53,234343226,"@@ -0,0 +1,86 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# pylint: disable=no-member
+
+import logging
+import random
+
+from rbac.common import rbac
+from rbac.common import protobuf
+from tests.rbac.common.assertions import TestAssertions
+from tests.rbac.common.task.create_task_helper import CreateTaskTestHelper
+from tests.rbac.common.role.create_role_helper import CreateRoleTestHelper
+
+LOGGER = logging.getLogger(__name__)
+
+
+class TestHelper(TestAssertions):
+    def __init__(self, *args, **kwargs):
+        TestAssertions.__init__(self, *args, **kwargs)
+        self.role = CreateRoleTestHelper()
+        self.task = CreateTaskTestHelper()
+
+
+# pylint: disable=invalid-name
+helper = TestHelper()
+
+
+class ProposeRoleTaskTestHelper(TestAssertions):
+    def __init__(self, *args, **kwargs):
+        TestAssertions.__init__(self, *args, **kwargs)
+
+    def id(self):",46,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234343226,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234343226,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,docs,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 20:51:50,234343979,"@@ -0,0 +1,70 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# pylint: disable=no-member,too-few-public-methods,invalid-name
+
+import logging
+
+from tests.rbac.common.role.create_role_helper import CreateRoleTestHelper
+from tests.rbac.common.role.propose_admin_helper import ProposeRoleAdminTestHelper
+from tests.rbac.common.role.propose_owner_helper import ProposeRoleOwnerTestHelper
+from tests.rbac.common.role.propose_member_helper import ProposeRoleMemberTestHelper
+from tests.rbac.common.role.propose_task_helper import ProposeRoleTaskTestHelper
+
+LOGGER = logging.getLogger(__name__)
+
+
+class RoleAdminTestHelper:
+    def __init__(self):
+        self.propose = ProposeRoleAdminTestHelper()
+
+
+class RoleOwnerTestHelper:
+    def __init__(self):
+        self.propose = ProposeRoleOwnerTestHelper()
+
+
+class RoleMemberTestHelper:
+    def __init__(self):
+        self.propose = ProposeRoleMemberTestHelper()
+
+
+class RoleTaskTestHelper:
+    def __init__(self):
+        self.propose = ProposeRoleTaskTestHelper()
+
+
+class RoleTestHelper:
+    def __init__(self):
+        self.create_role = CreateRoleTestHelper()
+        self.admin = RoleAdminTestHelper()
+        self.owner = RoleOwnerTestHelper()
+        self.member = RoleMemberTestHelper()
+        self.task = RoleTaskTestHelper()
+
+    def id(self):
+        return self.create_role.id()",74,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234343979,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234343979,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/536,https://github.com/hyperledger/sawtooth-next-directory/pull/536,docstrings,5558f597520cab039151e96bd45710c721ee3445,2018-11-16 20:58:35,234345659,"@@ -0,0 +1,56 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# pylint: disable=no-member,too-few-public-methods,invalid-name
+
+import logging
+
+from tests.rbac.common.task.create_task_helper import CreateTaskTestHelper
+from tests.rbac.common.task.propose_admin_helper import ProposeTaskAdminTestHelper
+from tests.rbac.common.task.propose_owner_helper import ProposeTaskOwnerTestHelper
+
+LOGGER = logging.getLogger(__name__)
+
+
+class TaskAdminTestHelper:
+    def __init__(self):
+        self.propose = ProposeTaskAdminTestHelper()
+
+
+class TaskOwnerTestHelper:
+    def __init__(self):
+        self.propose = ProposeTaskOwnerTestHelper()
+
+
+class TaskTestHelper:
+    def __init__(self):
+        self.create_task = CreateTaskTestHelper()
+        self.admin = TaskAdminTestHelper()
+        self.owner = TaskOwnerTestHelper()
+
+    def id(self):",52,2018-11-17 01:37:15,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234345659,https://github.com/hyperledger/sawtooth-next-directory/pull/536#discussion_r234345659,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/535,https://github.com/hyperledger/sawtooth-next-directory/pull/535,new ignores must be described below,e80309839cf51980be5741ac9d21b818fe722c31,2018-11-12 18:55:22,232773960,"@@ -19,7 +19,7 @@ optimize-ast=no
 # can either give multiple identifiers separated by comma (,) or put this
 # option multiple times (only on the command line, not in the configuration
 # file where it should appear only once).
-disable=C0103,C0111,C0301,C0302,C0330,E1101,R0201,R0205,R0401,R0801,R0901,R0902,R0903,R0904,R0912,R0913,R0914,R0915,R1701,R1705,R1710,R1714,W503,W0612,W0613
+disable=C0103,C0111,C1801,C0301,C0302,C0330,R0123,E1101,R0201,R0205,R0401,R0801,R0901,R0902,R0903,R0904,R0912,R0913,R0914,R0915,R1701,R1705,R1710,R1714,W0511,W0612,W0613",,2018-11-13 19:03:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232773960,https://github.com/hyperledger/sawtooth-next-directory/pull/535#discussion_r232773960,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/535,https://github.com/hyperledger/sawtooth-next-directory/pull/535,don't include files unrelated to the PR,e80309839cf51980be5741ac9d21b818fe722c31,2018-11-12 18:55:46,232774067,"@@ -20,6 +20,7 @@
 from rbac.common import addresser
 from rbac.common import protobuf
 from rbac.common.role.role_manager import RoleManager
+",,2018-11-13 19:03:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232774067,https://github.com/hyperledger/sawtooth-next-directory/pull/535#discussion_r232774067,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/535,https://github.com/hyperledger/sawtooth-next-directory/pull/535,If someone submits a PR without first running black to format their touched files then they will be touched in the next PR that is properly formatted using black. ,e80309839cf51980be5741ac9d21b818fe722c31,2018-11-12 19:20:02,232781119,"@@ -20,6 +20,7 @@
 from rbac.common import addresser
 from rbac.common import protobuf
 from rbac.common.role.role_manager import RoleManager
+",,2018-11-13 19:03:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232781119,https://github.com/hyperledger/sawtooth-next-directory/pull/535#discussion_r232781119,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/535,https://github.com/hyperledger/sawtooth-next-directory/pull/535,Those should've been removed. Rebasing.,e80309839cf51980be5741ac9d21b818fe722c31,2018-11-12 19:33:41,232785278,"@@ -19,7 +19,7 @@ optimize-ast=no
 # can either give multiple identifiers separated by comma (,) or put this
 # option multiple times (only on the command line, not in the configuration
 # file where it should appear only once).
-disable=C0103,C0111,C0301,C0302,C0330,E1101,R0201,R0205,R0401,R0801,R0901,R0902,R0903,R0904,R0912,R0913,R0914,R0915,R1701,R1705,R1710,R1714,W503,W0612,W0613
+disable=C0103,C0111,C1801,C0301,C0302,C0330,R0123,E1101,R0201,R0205,R0401,R0801,R0901,R0902,R0903,R0904,R0912,R0913,R0914,R0915,R1701,R1705,R1710,R1714,W0511,W0612,W0613",,2018-11-13 19:03:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232785278,https://github.com/hyperledger/sawtooth-next-directory/pull/535#discussion_r232785278,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/535,https://github.com/hyperledger/sawtooth-next-directory/pull/535,"still, don't include files unrelated to the PR",e80309839cf51980be5741ac9d21b818fe722c31,2018-11-12 19:36:26,232786120,"@@ -20,6 +20,7 @@
 from rbac.common import addresser
 from rbac.common import protobuf
 from rbac.common.role.role_manager import RoleManager
+",,2018-11-13 19:03:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232786120,https://github.com/hyperledger/sawtooth-next-directory/pull/535#discussion_r232786120,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/535,https://github.com/hyperledger/sawtooth-next-directory/pull/535,We'll make a separate PR soon to black non-compliant files and enforce black in Travis.,e80309839cf51980be5741ac9d21b818fe722c31,2018-11-12 19:49:40,232790115,"@@ -20,6 +20,7 @@
 from rbac.common import addresser
 from rbac.common import protobuf
 from rbac.common.role.role_manager import RoleManager
+",,2018-11-13 19:03:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232790115,https://github.com/hyperledger/sawtooth-next-directory/pull/535#discussion_r232790115,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/535,https://github.com/hyperledger/sawtooth-next-directory/pull/535,"We should discuss the topic of when and how changes are related to a PR. Minor space changes, typo fixes, elimination of commented code... all of this is good hygiene when applied sparingly. If it doesn't remove an unrelated feature when it is reverted, then it isn't adding an unrelated feature as a code change going in. 

I understand that it can be annoying when somebody changes dozens of files, and don't recommend refactoring the codebase in the same PR as a new feature, but this is a small number of obvious cleanup changes. 

I would rather we clean as we go than avoid cruft for bureaucratic reasons (too time-consuming to create an issue, create/associate a branch, PR for whitespace, typo, etc)",e80309839cf51980be5741ac9d21b818fe722c31,2018-11-13 07:41:06,232924152,"@@ -20,6 +20,7 @@
 from rbac.common import addresser
 from rbac.common import protobuf
 from rbac.common.role.role_manager import RoleManager
+",,2018-11-13 19:03:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232924152,https://github.com/hyperledger/sawtooth-next-directory/pull/535#discussion_r232924152,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,os.getenv will not use default if environment has a blank string,69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-10 21:24:05,232466440,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232466440,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232466440,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,This fails to get the default AES key because the environment has a blank string by default.,69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-10 21:45:00,232467048,"@@ -43,24 +37,24 @@ def getenv(name, default):
     ""AES_KEY"": ""1111111111111111111111111111111111111111111111111111111111111111"",
 }
 
-SERVER_HOST = getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
-SERVER_PORT = getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
-VALIDATOR_HOST = getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
-VALIDATOR_PORT = getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
+SERVER_HOST = os.getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
+SERVER_PORT = os.getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
+VALIDATOR_HOST = os.getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
+VALIDATOR_PORT = os.getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
 VALIDATOR_TIMEOUT = int(
-    getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
+    os.getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
 )
-VALIDATOR_REST_HOST = getenv(
+VALIDATOR_REST_HOST = os.getenv(
     ""VALIDATOR_REST_HOST"", DEFAULT_CONFIG[""VALIDATOR_REST_HOST""]
 )
-VALIDATOR_REST_PORT = getenv(
+VALIDATOR_REST_PORT = os.getenv(
     ""VALIDATOR_REST_PORT"", DEFAULT_CONFIG[""VALIDATOR_REST_PORT""]
 )
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
-AES_KEY = getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
-SECRET_KEY = getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])
+DB_HOST = os.getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = os.getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = os.getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+AES_KEY = os.getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])",57,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232467048,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232467048,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,This fails to get the default secret key because the environment has a blank string by default.,69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-10 21:48:46,232467122,"@@ -43,24 +37,24 @@ def getenv(name, default):
     ""AES_KEY"": ""1111111111111111111111111111111111111111111111111111111111111111"",
 }
 
-SERVER_HOST = getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
-SERVER_PORT = getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
-VALIDATOR_HOST = getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
-VALIDATOR_PORT = getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
+SERVER_HOST = os.getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
+SERVER_PORT = os.getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
+VALIDATOR_HOST = os.getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
+VALIDATOR_PORT = os.getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
 VALIDATOR_TIMEOUT = int(
-    getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
+    os.getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
 )
-VALIDATOR_REST_HOST = getenv(
+VALIDATOR_REST_HOST = os.getenv(
     ""VALIDATOR_REST_HOST"", DEFAULT_CONFIG[""VALIDATOR_REST_HOST""]
 )
-VALIDATOR_REST_PORT = getenv(
+VALIDATOR_REST_PORT = os.getenv(
     ""VALIDATOR_REST_PORT"", DEFAULT_CONFIG[""VALIDATOR_REST_PORT""]
 )
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
-AES_KEY = getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
-SECRET_KEY = getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])
+DB_HOST = os.getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = os.getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = os.getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+AES_KEY = os.getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
+SECRET_KEY = os.getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])",58,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232467122,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232467122,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"I agree with your statement, but am confused about why this is a problem. 

Returning the blank string is the expected behavior of the function. That is: Assuming it is possible to create environment variables having blank strings, one would reason that people would be assigning them to blank strings when there is some purpose served in doing so. 

This function falls back to the default value when the key of the environment variable is absent (as it should). What you need to clarify is why environment variables having empty values would ever exist in the first place. ",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:00:10,232897716,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232897716,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232897716,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,Passing environment variables from .env through Docker Compose defaults them to blank strings.,69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:02:58,232898094,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232898094,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232898094,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"Where does a blank string environment variable named ""AES_KEY"" occur by default? In a particular OS? From NEXT? In Sawtooth? 

If there is some hidden process in our stack that does this especially for AES_KEY, then please point me towards it so I can drop in a workaround specifically for AES_KEY.

I am wondering because I just opened a terminal, did a 'printenv', and I don't have an 'AES_KEY' environment variable on my system.",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:03:11,232898291,"@@ -43,24 +37,24 @@ def getenv(name, default):
     ""AES_KEY"": ""1111111111111111111111111111111111111111111111111111111111111111"",
 }
 
-SERVER_HOST = getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
-SERVER_PORT = getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
-VALIDATOR_HOST = getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
-VALIDATOR_PORT = getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
+SERVER_HOST = os.getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
+SERVER_PORT = os.getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
+VALIDATOR_HOST = os.getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
+VALIDATOR_PORT = os.getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
 VALIDATOR_TIMEOUT = int(
-    getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
+    os.getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
 )
-VALIDATOR_REST_HOST = getenv(
+VALIDATOR_REST_HOST = os.getenv(
     ""VALIDATOR_REST_HOST"", DEFAULT_CONFIG[""VALIDATOR_REST_HOST""]
 )
-VALIDATOR_REST_PORT = getenv(
+VALIDATOR_REST_PORT = os.getenv(
     ""VALIDATOR_REST_PORT"", DEFAULT_CONFIG[""VALIDATOR_REST_PORT""]
 )
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
-AES_KEY = getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
-SECRET_KEY = getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])
+DB_HOST = os.getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = os.getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = os.getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+AES_KEY = os.getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])",57,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232898291,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232898291,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"You would ``printenv``` in the server docker container instance.

docker-compose.yaml
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - AES_KEY=${AES_KEY}
",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:04:57,232898530,"@@ -43,24 +37,24 @@ def getenv(name, default):
     ""AES_KEY"": ""1111111111111111111111111111111111111111111111111111111111111111"",
 }
 
-SERVER_HOST = getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
-SERVER_PORT = getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
-VALIDATOR_HOST = getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
-VALIDATOR_PORT = getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
+SERVER_HOST = os.getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
+SERVER_PORT = os.getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
+VALIDATOR_HOST = os.getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
+VALIDATOR_PORT = os.getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
 VALIDATOR_TIMEOUT = int(
-    getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
+    os.getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
 )
-VALIDATOR_REST_HOST = getenv(
+VALIDATOR_REST_HOST = os.getenv(
     ""VALIDATOR_REST_HOST"", DEFAULT_CONFIG[""VALIDATOR_REST_HOST""]
 )
-VALIDATOR_REST_PORT = getenv(
+VALIDATOR_REST_PORT = os.getenv(
     ""VALIDATOR_REST_PORT"", DEFAULT_CONFIG[""VALIDATOR_REST_PORT""]
 )
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
-AES_KEY = getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
-SECRET_KEY = getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])
+DB_HOST = os.getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = os.getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = os.getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+AES_KEY = os.getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])",57,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232898530,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232898530,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,This PR should have failed Travis if not for the lack of an e2e API test.,69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:06:13,232898658,"@@ -43,24 +37,24 @@ def getenv(name, default):
     ""AES_KEY"": ""1111111111111111111111111111111111111111111111111111111111111111"",
 }
 
-SERVER_HOST = getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
-SERVER_PORT = getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
-VALIDATOR_HOST = getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
-VALIDATOR_PORT = getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
+SERVER_HOST = os.getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
+SERVER_PORT = os.getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
+VALIDATOR_HOST = os.getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
+VALIDATOR_PORT = os.getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
 VALIDATOR_TIMEOUT = int(
-    getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
+    os.getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
 )
-VALIDATOR_REST_HOST = getenv(
+VALIDATOR_REST_HOST = os.getenv(
     ""VALIDATOR_REST_HOST"", DEFAULT_CONFIG[""VALIDATOR_REST_HOST""]
 )
-VALIDATOR_REST_PORT = getenv(
+VALIDATOR_REST_PORT = os.getenv(
     ""VALIDATOR_REST_PORT"", DEFAULT_CONFIG[""VALIDATOR_REST_PORT""]
 )
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
-AES_KEY = getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
-SECRET_KEY = getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])
+DB_HOST = os.getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = os.getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = os.getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+AES_KEY = os.getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])",57,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232898658,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232898658,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"I also don't have SECRET_KEY in my env. 

At this point, I am beginning to wonder why none of our tests fail when I remove functionality you are telling me should lead failure when removed.",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:08:57,232899012,"@@ -43,24 +37,24 @@ def getenv(name, default):
     ""AES_KEY"": ""1111111111111111111111111111111111111111111111111111111111111111"",
 }
 
-SERVER_HOST = getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
-SERVER_PORT = getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
-VALIDATOR_HOST = getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
-VALIDATOR_PORT = getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
+SERVER_HOST = os.getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
+SERVER_PORT = os.getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
+VALIDATOR_HOST = os.getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
+VALIDATOR_PORT = os.getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
 VALIDATOR_TIMEOUT = int(
-    getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
+    os.getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
 )
-VALIDATOR_REST_HOST = getenv(
+VALIDATOR_REST_HOST = os.getenv(
     ""VALIDATOR_REST_HOST"", DEFAULT_CONFIG[""VALIDATOR_REST_HOST""]
 )
-VALIDATOR_REST_PORT = getenv(
+VALIDATOR_REST_PORT = os.getenv(
     ""VALIDATOR_REST_PORT"", DEFAULT_CONFIG[""VALIDATOR_REST_PORT""]
 )
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
-AES_KEY = getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
-SECRET_KEY = getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])
+DB_HOST = os.getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = os.getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = os.getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+AES_KEY = os.getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
+SECRET_KEY = os.getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])",58,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232899012,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232899012,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,No server or e2e tests have been written yet. You would see the failure in testing the UI.,69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:12:44,232899519,"@@ -43,24 +37,24 @@ def getenv(name, default):
     ""AES_KEY"": ""1111111111111111111111111111111111111111111111111111111111111111"",
 }
 
-SERVER_HOST = getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
-SERVER_PORT = getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
-VALIDATOR_HOST = getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
-VALIDATOR_PORT = getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
+SERVER_HOST = os.getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
+SERVER_PORT = os.getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
+VALIDATOR_HOST = os.getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
+VALIDATOR_PORT = os.getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
 VALIDATOR_TIMEOUT = int(
-    getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
+    os.getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
 )
-VALIDATOR_REST_HOST = getenv(
+VALIDATOR_REST_HOST = os.getenv(
     ""VALIDATOR_REST_HOST"", DEFAULT_CONFIG[""VALIDATOR_REST_HOST""]
 )
-VALIDATOR_REST_PORT = getenv(
+VALIDATOR_REST_PORT = os.getenv(
     ""VALIDATOR_REST_PORT"", DEFAULT_CONFIG[""VALIDATOR_REST_PORT""]
 )
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
-AES_KEY = getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
-SECRET_KEY = getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])
+DB_HOST = os.getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = os.getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = os.getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+AES_KEY = os.getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
+SECRET_KEY = os.getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])",58,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232899519,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232899519,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"We are talking about the same thing in 3 conversations, so I have closed the other 2. It is safe to assume we will either consolidate this function (ie I revert one commit locally) or accept this solution as-is.

Regarding .env : Does it not support providing defaults in the file ( ie FOO=${VARIABLE:=default} )? Are you saying Docker-compose would take a mapping like that, and assign a blank string instead of honoring the default?",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:28:16,232901424,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232901424,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232901424,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"We do not wish to configure a default AES or Secret key in docker-compose, as it may encourage people to change it to their desired key values.",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:32:31,232901963,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232901963,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232901963,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,Then I recommend we import those two bits of data with special treatment rather than alter the behavior of os.getenv across the board.,69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:38:45,232903051,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232903051,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232903051,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"The improvement was universal, blank strings are not useful values, but whatever.",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 05:42:07,232903524,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232903524,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232903524,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"No, it wasn't. 

I covered your first comment in my original commit message, and the title reflects my position on how much of an improvement it was. 

The special case that came later (docker-compose plugging in blank values in the absence of environment variables). We have dummy values assigned in DEFAULT_CONFIG that are autogenerated when unchanged.

Also, you commented the same for (this comment) DB_NAME, so it is unclear why you have considered this effort a failure.

Finally, I have the branch up and running locally, opened the UI, and successfully executed the test_data_loader script. So what is this about an E2E test that would fail?


",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-13 07:44:25,232924968,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232924968,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r232924968,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"You're right, the .env pass-throughs were not configured.
PR #572

That will expose the problem with blank strings on the AES key that the modified getenv function addressed.

It's required anytime a environment variable is passed through via docker compose without a default specified, for any variable. By convention we have decided to also supply defaults for most values in docker compose; however the problem is generic.

Your PR can't use only conventional getenv to apply defaults specifically for AES key and secret key, the others may so long as convention to specify defaults in docker compose is maintained.",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-14 17:16:01,233540485,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233540485,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r233540485,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"Is this a current problem, or a future problem? Because the file has been copied and pasted across the code base does not qualify it as a convention. ",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-14 19:00:11,233577951,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233577951,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r233577951,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"Fails to use default AES key if in docker-compose environment section without the .env value configured, as would be the default state of the master branch of the repo, and reflecting the docker-compose.yaml file in PR #572.

All other files are fine presuming docker compose yaml files always duplicate valid default values. However, expect there may be additional secure variables similar to AES_KEY (e.g. BATCHER_KEY).

Suggest a common configuration library that acts upon a dictionary of desired variables with defaults and command-line argument flag options; with the addition of secure environment variable providers (e.g. TVAULT). It was expected such a refactor would occur in the future, and should be added to the backlog.",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-15 03:33:08,233702677,"@@ -54,23 +54,16 @@
 }
 
 
-def getenv(name, default):
-    value = os.getenv(name)
-    if value is None or not value:
-        return default
-    return value
-
-
-SERVER_HOST = getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
-SERVER_PORT = getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
-VALIDATOR_HOST = getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
-VALIDATOR_PORT = getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
-VALIDATOR_TIMEOUT = getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
-DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
-DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
-DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
-AES_KEY = getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])
-SECRET_KEY = getenv(""SECRET_KEY"", DEFAULT_CONFIG[""SECRET_KEY""])
+SERVER_HOST = os.getenv(""SERVER_HOST"", DEFAULT_CONFIG[""SERVER_HOST""])
+SERVER_PORT = os.getenv(""SERVER_PORT"", DEFAULT_CONFIG[""SERVER_PORT""])
+VALIDATOR_HOST = os.getenv(""VALIDATOR_HOST"", DEFAULT_CONFIG[""VALIDATOR_HOST""])
+VALIDATOR_PORT = os.getenv(""VALIDATOR_PORT"", DEFAULT_CONFIG[""VALIDATOR_PORT""])
+VALIDATOR_TIMEOUT = os.getenv(""VALIDATOR_TIMEOUT"", DEFAULT_CONFIG[""VALIDATOR_TIMEOUT""])
+DB_HOST = os.getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = os.getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = os.getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+AES_KEY = os.getenv(""AES_KEY"", DEFAULT_CONFIG[""AES_KEY""])",60,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233702677,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r233702677,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"I am marking this is unresolved because we need to sort out the matter of work that affects the current codebase and changes that affect something you perceive as being a problem in the future. Iterative and incremental development often means deleting or refactoring code in its most recent state.

It does not mean marking PRs as ""Needs Work"" over functionality that does not exist yet and then going so far as creating a new branch with the sole purpose of breaking a PR in progress. 

I understand the sensitivity of the AES key and secret, but supplying them to the application is another challenge altogether. I don't see how continually debating this minor change (less than one hour to implement, several hours debating, days lingering) accomplishes anything.

I would like to keep this conversation open for now because the matter is not resolved for me.  ",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-16 06:03:19,234097994,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234097994,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r234097994,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,"You added to the codebase (PR #56) a default AES key generation with the goal of making the application work out of the box without requiring the user to create the .env file and generate their own key. Unfortunately that change you made was defective, because when you restart the application, you get a new AES key that can't decrypt the existing encrypted data (reproduce this bug using the persistent data flag).

We had to change our AES algorithm due to a security vulnerability in the old AES package, so I took that opportunity, given the old AES key generation was incompatible with the newly chosen AES library, to fix this defect. (PR #259)

https://github.com/hyperledger/sawtooth-next-directory/pull/259/files

Your reviewed, commented upon, and approved this pull request.

We know that the environment config sections of these daemons will get refactored soon, because we know we need to support secure secrets providers (TVAULT) for storing secrets. Issue #206. So it wasn't worth factoring out duplication now, given there is a pending feature /refactor of that code.

In PR #397 you changed the name in one file of getenv to get_env_with_fallback. I told you that that's not an appropriate name for the function because it doesn't describe how it differs from os.getenv. The difference is not that it has a default value (so does os.getenv), but rather that it treats blanks strings the same as no value and uses the default. This should be described in a docstring on the function. I also told you that same function exists in several places, due to PR #259, and should either be renamed consistently across the project or imported from a utility class. I approved your PR anyway.

Finally, in PR #533, you decide to remove the function rather than add the docstring and import it form a utility, despite the previous conversations about issue #206 and PR #397, and without asking the author (me) why the function is there.

I'm perfectly fine with breaking the application if users don't perform the manual step of creating a .env file and configuring a AES key; if your goal in PR #56 you no longer care about.

However, you can't break the Travis e2e tests that Ana is writing on the API, which will require a valid AES key without one manually configured. I'll fix that in another PR, and approve this one.

You need to resolve conflicts before merging.",69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-16 16:55:53,234276159,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-16 21:45:35,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234276159,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r234276159,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/533,https://github.com/hyperledger/sawtooth-next-directory/pull/533,Defect fixed in PR #597 ,69c3d987cb67f3de97dae89c0179a75e63d8015d,2018-11-17 02:21:23,234392560,"@@ -15,28 +15,21 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
-import os
-import sys
-import logging
 import argparse
+import logging
+import sys
+import os
+
 import rethinkdb as r
 from rethinkdb.errors import RqlRuntimeError
 
 LOGGER = logging.getLogger(__name__)
 LOGGER.level = logging.INFO
 LOGGER.addHandler(logging.StreamHandler(sys.stdout))
 
-
-def get_env_with_fallback(name, default):
-    value = os.getenv(name)
-    if value is None or value is """":
-        return default
-    return value
-
-
-DB_HOST = get_env_with_fallback('DB_HOST', 'localhost')
-DB_PORT = get_env_with_fallback('DB_PORT', '28015')
-DB_NAME = get_env_with_fallback('DB_NAME', 'rbac')
+DB_HOST = os.getenv('DB_HOST', 'localhost')
+DB_PORT = os.getenv('DB_PORT', '28015')
+DB_NAME = os.getenv('DB_NAME', 'rbac')",32,2018-11-17 02:21:24,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234392560,https://github.com/hyperledger/sawtooth-next-directory/pull/533#discussion_r234392560,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"Why does the message need a reference to its processor? 

I am trying to understand the purpose of a message in this context. My assumption is that a message encapsulates data in transit from point a to point b. If this is the case, then the message object should not be aware whatsoever of anything acting upon it. 

Instead of having the object itself register with the handler, is it possible to have the instantiator of the object perform the registration?",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 17:32:43,233147977,"@@ -18,18 +18,19 @@
 from rbac.common.crypto.keys import Key
 from rbac.common.crypto.keys import PUBLIC_KEY_PATTERN
 from rbac.common.sawtooth import batcher
-from rbac.common.sawtooth.state_client import StateClient
-from rbac.common.sawtooth.client_sync import ClientSync
-
+from rbac.common.sawtooth import client
+from rbac.common.sawtooth import state_client
+from rbac.common.base import base_processor as processor
 
 LOGGER = logging.getLogger(__name__)
 
 
+# pylint: disable=too-many-public-methods
 class BaseMessage:
     def __init__(self):
-        """"""Objects and methods shared across message libraries""""""
-        self.client = ClientSync()
-        self.state = StateClient()
+        """"""Base class for all messages""""""
+        self._message_type_name = batcher.get_message_type_name(self.message_type)
+        processor.register_message_handler(self)",22,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233147977,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233147977,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,If we can decouple the message from its serializer then we won't need bindings like this. Keeping them separate allows us to support additional protocols without having to modify the underlying data model.,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 17:41:57,233151447,"@@ -40,27 +41,37 @@ def getattr(self, item, attribute):
 
     @property
     def name(self):
+        """"""The name of this message type""""""
         raise NotImplementedError(""Class must implement this property"")
 
     @property
     def names(self):
+        """"""The plural name of this message type""""""
         return self.name + ""s""
 
     @property
     def message_type(self):
-        raise NotImplementedError(""Class must implement this method"")
+        """"""The type of this message""""""
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def message_type_name(self):
+        return self._message_type_name
 
     @property
     def message_proto(self):
-        raise NotImplementedError(""Class must implement this method"")
+        """"""The protobuf used to serialize this message type""""""",51,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233151447,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233151447,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"The message as a wrapper for data should not be responsible for interacting with the client. From the API, the function signature name ""message_fields_not_in_state"" doesn't describe all of the activity happening here. 

In this case, the domain model object is interacting directly with another part of the system to reveal information about itself. This should be carried out in a higher layer by a manager/service acting on the model object rather than internally from the model.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 17:49:37,233154298,"@@ -137,7 +148,7 @@ def send(self, signer_keypair, payload, object_id=None, target_id=None):
         )
         got = None
 
-        status = self.client.send_batches_get_status(batch_list=batch_list)
+        status = client.send_batches_get_status(batch_list=batch_list)",73,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233154298,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233154298,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,This Pylint catch might be onto something. Why is object being passed in here?,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:18:59,233164876,"@@ -0,0 +1,135 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.sawtooth.batcher import get_message_type_name
+
+LOGGER = logging.getLogger(__name__)
+
+message_handlers = {}  # pylint: disable=invalid-name
+
+
+def register_message_handler(message):
+    """"""Register a transaction processor handler for a given message class""""""
+    if not hasattr(message, ""apply""):
+        return
+    if message.message_type in message_handlers:
+        existing = message_handlers[message.message_type]
+        if not isinstance(message, type(existing)):
+            raise KeyError(
+                ""Class {} tried to register message type {} already registered by {}"".format(
+                    type(message),
+                    get_message_type_name(message.message_type),
+                    type(existing),
+                )
+            )
+    message_handlers[message.message_type] = message
+
+
+def has_message_handler(message_type):
+    """"""Whether a handler is registered for the given message type""""""
+    return bool(message_type in message_handlers)
+
+
+def can_handle_message(payload):
+    """"""Whether we know how to handle a given payload""""""
+    return has_message_handler(payload.message_type)
+
+
+def get_message_handler(message_type):
+    """"""Get the handler for the given message type""""""
+    if message_type in message_handlers:
+        return message_handlers[message_type]
+    return None
+
+
+def handle_message(header, payload, state):
+    """"""Handle the messages submitted to the transaction processor""""""
+    if not can_handle_message(payload=payload):
+        raise InvalidTransaction(
+            ""No handler registered for {}"".format(
+                get_message_type_name(payload.message_type)
+            )
+        )
+    message_handlers[payload.message_type].apply(
+        header=header, payload=payload, state=state
+    )
+
+
+# pylint: disable=useless-object-inheritance",74,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233164876,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233164876,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,Why is this necessary? Are we doing a '*' import on client somewhere? ,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:27:41,233167912,"@@ -12,3 +12,10 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
+
+from rbac.common.sawtooth.client_sync import ClientSync
+
+# pylint: disable=invalid-name
+client = ClientSync()
+
+__all__ = [""client""]",10,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233167912,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233167912,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,Nitpick: Grammar error in 'its',e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:29:46,233168645,"@@ -30,7 +41,6 @@ def make_payload(message, message_type, inputs, outputs):
     )
 
 
-# pylint: disable=no-member
 def unmake_payload(payload):
     """"""Turn a payload back into a message given it's message type""""""",29,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233168645,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233168645,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"Does this block require catching the generic Exception type? If not, we can allow it to break naturally on an unexpected error if/when that time comes and respond with specific exception handling.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:33:42,233169991,"@@ -119,8 +125,19 @@ def namespaces(self):
         return addresser.family.namespaces
 
     def apply(self, transaction, state):
-        payload = RBACPayload()
-        payload.ParseFromString(transaction.payload)
+        try:
+            payload = RBACPayload()
+            payload.ParseFromString(transaction.payload)
+
+            if self._processor.has_message_handler(message_type=payload.message_type):
+                return self._processor.handle_message(
+                    header=transaction.header, payload=payload, state=state
+                )
+        except ValueError as err:
+            raise InvalidTransaction(err)
+        except Exception as err:  # pylint: disable=broad-except",36,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233169991,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233169991,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,The transaction processor executes the messages; thus it needs to know what they are.,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:44:49,233173834,"@@ -18,18 +18,19 @@
 from rbac.common.crypto.keys import Key
 from rbac.common.crypto.keys import PUBLIC_KEY_PATTERN
 from rbac.common.sawtooth import batcher
-from rbac.common.sawtooth.state_client import StateClient
-from rbac.common.sawtooth.client_sync import ClientSync
-
+from rbac.common.sawtooth import client
+from rbac.common.sawtooth import state_client
+from rbac.common.base import base_processor as processor
 
 LOGGER = logging.getLogger(__name__)
 
 
+# pylint: disable=too-many-public-methods
 class BaseMessage:
     def __init__(self):
-        """"""Objects and methods shared across message libraries""""""
-        self.client = ClientSync()
-        self.state = StateClient()
+        """"""Base class for all messages""""""
+        self._message_type_name = batcher.get_message_type_name(self.message_type)
+        processor.register_message_handler(self)",22,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233173834,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233173834,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"This class is not the message, but rather the class that acts upon the message. There's no clear way to decouple knowledge of what the message is (the prototype) from the class that acts upon it.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:45:11,233173961,"@@ -40,27 +41,37 @@ def getattr(self, item, attribute):
 
     @property
     def name(self):
+        """"""The name of this message type""""""
         raise NotImplementedError(""Class must implement this property"")
 
     @property
     def names(self):
+        """"""The plural name of this message type""""""
         return self.name + ""s""
 
     @property
     def message_type(self):
-        raise NotImplementedError(""Class must implement this method"")
+        """"""The type of this message""""""
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def message_type_name(self):
+        return self._message_type_name
 
     @property
     def message_proto(self):
-        raise NotImplementedError(""Class must implement this method"")
+        """"""The protobuf used to serialize this message type""""""",51,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233173961,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233173961,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"This class is not the message, but rather the class that acts upon the message. The create method needs to send the message to the transaction processor.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:46:34,233174475,"@@ -137,7 +148,7 @@ def send(self, signer_keypair, payload, object_id=None, target_id=None):
         )
         got = None
 
-        status = self.client.send_batches_get_status(batch_list=batch_list)
+        status = client.send_batches_get_status(batch_list=batch_list)",73,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233174475,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233174475,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"See Sawtooth Core transaction processor implementation, this is a class that is required to implement the interfaces as expected by Sawtooth Core.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:47:06,233174670,"@@ -0,0 +1,135 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.sawtooth.batcher import get_message_type_name
+
+LOGGER = logging.getLogger(__name__)
+
+message_handlers = {}  # pylint: disable=invalid-name
+
+
+def register_message_handler(message):
+    """"""Register a transaction processor handler for a given message class""""""
+    if not hasattr(message, ""apply""):
+        return
+    if message.message_type in message_handlers:
+        existing = message_handlers[message.message_type]
+        if not isinstance(message, type(existing)):
+            raise KeyError(
+                ""Class {} tried to register message type {} already registered by {}"".format(
+                    type(message),
+                    get_message_type_name(message.message_type),
+                    type(existing),
+                )
+            )
+    message_handlers[message.message_type] = message
+
+
+def has_message_handler(message_type):
+    """"""Whether a handler is registered for the given message type""""""
+    return bool(message_type in message_handlers)
+
+
+def can_handle_message(payload):
+    """"""Whether we know how to handle a given payload""""""
+    return has_message_handler(payload.message_type)
+
+
+def get_message_handler(message_type):
+    """"""Get the handler for the given message type""""""
+    if message_type in message_handlers:
+        return message_handlers[message_type]
+    return None
+
+
+def handle_message(header, payload, state):
+    """"""Handle the messages submitted to the transaction processor""""""
+    if not can_handle_message(payload=payload):
+        raise InvalidTransaction(
+            ""No handler registered for {}"".format(
+                get_message_type_name(payload.message_type)
+            )
+        )
+    message_handlers[payload.message_type].apply(
+        header=header, payload=payload, state=state
+    )
+
+
+# pylint: disable=useless-object-inheritance",74,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233174670,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233174670,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"marks client as a variable for purpose of export, not an unused variable",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:48:10,233175032,"@@ -12,3 +12,10 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
+
+from rbac.common.sawtooth.client_sync import ClientSync
+
+# pylint: disable=invalid-name
+client = ClientSync()
+
+__all__ = [""client""]",10,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233175032,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233175032,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"will fix nitpick in a follow-up PR.
RBAC Payload is getting renamed to Message Payload in a follow-up PR.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:48:32,233175162,"@@ -30,7 +41,6 @@ def make_payload(message, message_type, inputs, outputs):
     )
 
 
-# pylint: disable=no-member
 def unmake_payload(payload):
     """"""Turn a payload back into a message given it's message type""""""",29,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233175162,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233175162,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"broad exception is required, transaction processor can't fail because of a message failure",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-13 18:49:06,233175378,"@@ -119,8 +125,19 @@ def namespaces(self):
         return addresser.family.namespaces
 
     def apply(self, transaction, state):
-        payload = RBACPayload()
-        payload.ParseFromString(transaction.payload)
+        try:
+            payload = RBACPayload()
+            payload.ParseFromString(transaction.payload)
+
+            if self._processor.has_message_handler(message_type=payload.message_type):
+                return self._processor.handle_message(
+                    header=transaction.header, payload=payload, state=state
+                )
+        except ValueError as err:
+            raise InvalidTransaction(err)
+        except Exception as err:  # pylint: disable=broad-except",36,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233175378,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233175378,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"Previously the transaction processor discovered the message handlers. However, you explicitly disliked that pattern, thus the above is an alternative solution.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-14 15:40:19,233499014,"@@ -18,18 +18,19 @@
 from rbac.common.crypto.keys import Key
 from rbac.common.crypto.keys import PUBLIC_KEY_PATTERN
 from rbac.common.sawtooth import batcher
-from rbac.common.sawtooth.state_client import StateClient
-from rbac.common.sawtooth.client_sync import ClientSync
-
+from rbac.common.sawtooth import client
+from rbac.common.sawtooth import state_client
+from rbac.common.base import base_processor as processor
 
 LOGGER = logging.getLogger(__name__)
 
 
+# pylint: disable=too-many-public-methods
 class BaseMessage:
     def __init__(self):
-        """"""Objects and methods shared across message libraries""""""
-        self.client = ClientSync()
-        self.state = StateClient()
+        """"""Base class for all messages""""""
+        self._message_type_name = batcher.get_message_type_name(self.message_type)
+        processor.register_message_handler(self)",22,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233499014,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233499014,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"This PR only added docstrings and message_type_name to this class.
",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-14 17:29:38,233545368,"@@ -40,27 +41,37 @@ def getattr(self, item, attribute):
 
     @property
     def name(self):
+        """"""The name of this message type""""""
         raise NotImplementedError(""Class must implement this property"")
 
     @property
     def names(self):
+        """"""The plural name of this message type""""""
         return self.name + ""s""
 
     @property
     def message_type(self):
-        raise NotImplementedError(""Class must implement this method"")
+        """"""The type of this message""""""
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def message_type_name(self):
+        return self._message_type_name
 
     @property
     def message_proto(self):
-        raise NotImplementedError(""Class must implement this method"")
+        """"""The protobuf used to serialize this message type""""""",51,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233545368,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233545368,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,This PR only added docstrings and changed a dependency reference in this class.,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-14 17:32:15,233546312,"@@ -137,7 +148,7 @@ def send(self, signer_keypair, payload, object_id=None, target_id=None):
         )
         got = None
 
-        status = self.client.send_batches_get_status(batch_list=batch_list)
+        status = client.send_batches_get_status(batch_list=batch_list)",73,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233546312,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233546312,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,Docstring please ,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-14 17:39:48,233548891,"@@ -23,9 +23,14 @@
 from rbac.app.config import BATCHER_KEY_PAIR
 from rbac.common.sawtooth import rbac_payload
 
+
 LOGGER = logging.getLogger(__name__)
 
 
+def get_message_type_name(message_type):
+    return rbac_payload.get_message_type_name(message_type=message_type)",10,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233548891,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233548891,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,docstrings,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-14 17:40:42,233549220,"@@ -24,18 +24,17 @@
 LOGGER = logging.getLogger(__name__)
 
 
-class StateClient:
-    def get_address(self, state, address):
-        try:
-            return state.get_state(addresses=[address], timeout=TIMEOUT_SECONDS)
-        except FutureTimeoutError:
-            raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
-
-    def set_address(self, state, address, container):
-        try:
-            return state.set_state(
-                entries={address: container.SerializeToString()},
-                timeout=TIMEOUT_SECONDS,
-            )
-        except FutureTimeoutError:
-            raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
+def get_address(state, address):
+    try:",21,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233549220,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233549220,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,DS,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-14 17:40:57,233549301,"@@ -24,18 +24,17 @@
 LOGGER = logging.getLogger(__name__)
 
 
-class StateClient:
-    def get_address(self, state, address):
-        try:
-            return state.get_state(addresses=[address], timeout=TIMEOUT_SECONDS)
-        except FutureTimeoutError:
-            raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
-
-    def set_address(self, state, address, container):
-        try:
-            return state.set_state(
-                entries={address: container.SerializeToString()},
-                timeout=TIMEOUT_SECONDS,
-            )
-        except FutureTimeoutError:
-            raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
+def get_address(state, address):
+    try:
+        return state.get_state(addresses=[address], timeout=TIMEOUT_SECONDS)
+    except FutureTimeoutError:
+        raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
+
+
+def set_address(state, address, container):
+    try:",29,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233549301,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233549301,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,Docstrings on this whole file,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-14 17:41:38,233549527,"@@ -119,8 +125,19 @@ def namespaces(self):
         return addresser.family.namespaces
 
     def apply(self, transaction, state):
-        payload = RBACPayload()
-        payload.ParseFromString(transaction.payload)
+        try:",26,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233549527,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233549527,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"Isn't my code, this is legacy code that will soon disappear.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-14 17:45:58,233551076,"@@ -119,8 +125,19 @@ def namespaces(self):
         return addresser.family.namespaces
 
     def apply(self, transaction, state):
-        payload = RBACPayload()
-        payload.ParseFromString(transaction.payload)
+        try:",26,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233551076,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233551076,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,cool if it is legacy this one is fine to not do docstrings,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-14 17:47:03,233551475,"@@ -119,8 +125,19 @@ def namespaces(self):
         return addresser.family.namespaces
 
     def apply(self, transaction, state):
-        payload = RBACPayload()
-        payload.ParseFromString(transaction.payload)
+        try:",26,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233551475,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233551475,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"It's not worth the time to rebase #536 to add docstrings to #532.
Docstrings will be added in a followup PR.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-15 00:57:54,233679017,"@@ -23,9 +23,14 @@
 from rbac.app.config import BATCHER_KEY_PAIR
 from rbac.common.sawtooth import rbac_payload
 
+
 LOGGER = logging.getLogger(__name__)
 
 
+def get_message_type_name(message_type):
+    return rbac_payload.get_message_type_name(message_type=message_type)",10,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233679017,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233679017,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"It's not worth the time to rebase #536 to add docstrings to #532.
Docstrings will be added in a followup PR.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-15 00:58:00,233679048,"@@ -24,18 +24,17 @@
 LOGGER = logging.getLogger(__name__)
 
 
-class StateClient:
-    def get_address(self, state, address):
-        try:
-            return state.get_state(addresses=[address], timeout=TIMEOUT_SECONDS)
-        except FutureTimeoutError:
-            raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
-
-    def set_address(self, state, address, container):
-        try:
-            return state.set_state(
-                entries={address: container.SerializeToString()},
-                timeout=TIMEOUT_SECONDS,
-            )
-        except FutureTimeoutError:
-            raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
+def get_address(state, address):
+    try:",21,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233679048,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233679048,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"It's not worth the time to rebase #536 to add docstrings to #532.
Docstrings will be added in a followup PR.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-15 00:58:05,233679062,"@@ -24,18 +24,17 @@
 LOGGER = logging.getLogger(__name__)
 
 
-class StateClient:
-    def get_address(self, state, address):
-        try:
-            return state.get_state(addresses=[address], timeout=TIMEOUT_SECONDS)
-        except FutureTimeoutError:
-            raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
-
-    def set_address(self, state, address, container):
-        try:
-            return state.set_state(
-                entries={address: container.SerializeToString()},
-                timeout=TIMEOUT_SECONDS,
-            )
-        except FutureTimeoutError:
-            raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
+def get_address(state, address):
+    try:
+        return state.get_state(addresses=[address], timeout=TIMEOUT_SECONDS)
+    except FutureTimeoutError:
+        raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
+
+
+def set_address(state, address, container):
+    try:",29,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/233679062,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r233679062,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,True. This change is just a docstring. Ok then.,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-16 06:24:18,234100671,"@@ -40,27 +41,37 @@ def getattr(self, item, attribute):
 
     @property
     def name(self):
+        """"""The name of this message type""""""
         raise NotImplementedError(""Class must implement this property"")
 
     @property
     def names(self):
+        """"""The plural name of this message type""""""
         return self.name + ""s""
 
     @property
     def message_type(self):
-        raise NotImplementedError(""Class must implement this method"")
+        """"""The type of this message""""""
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def message_type_name(self):
+        return self._message_type_name
 
     @property
     def message_proto(self):
-        raise NotImplementedError(""Class must implement this method"")
+        """"""The protobuf used to serialize this message type""""""",51,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234100671,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r234100671,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,Ok that works,e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-16 06:28:12,234101189,"@@ -30,7 +41,6 @@ def make_payload(message, message_type, inputs, outputs):
     )
 
 
-# pylint: disable=no-member
 def unmake_payload(payload):
     """"""Turn a payload back into a message given it's message type""""""",29,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234101189,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r234101189,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"It specifies what will be pulled in when a 'from sawtooth import *' is performed, right?  So it filters out any additional variables that would otherwise be pulled in on a wildcard import. We should not be doing wildcard imports, and it doesn't look like we are. 

So I am trying to understand what is achieved here. ",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-16 06:37:10,234102417,"@@ -12,3 +12,10 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
+
+from rbac.common.sawtooth.client_sync import ClientSync
+
+# pylint: disable=invalid-name
+client = ClientSync()
+
+__all__ = [""client""]",10,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234102417,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r234102417,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"Understood. This is an improvement over that. I am just not sure about having a base class register with another module and then be extended and ultimately instantiated. It confuses me because I understand a base class as nothing more than common features to be customized as needed in subclassing for operations on the interface (polymorphism).

I could be missing something here. We should discuss.  ",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-16 06:58:02,234105698,"@@ -18,18 +18,19 @@
 from rbac.common.crypto.keys import Key
 from rbac.common.crypto.keys import PUBLIC_KEY_PATTERN
 from rbac.common.sawtooth import batcher
-from rbac.common.sawtooth.state_client import StateClient
-from rbac.common.sawtooth.client_sync import ClientSync
-
+from rbac.common.sawtooth import client
+from rbac.common.sawtooth import state_client
+from rbac.common.base import base_processor as processor
 
 LOGGER = logging.getLogger(__name__)
 
 
+# pylint: disable=too-many-public-methods
 class BaseMessage:
     def __init__(self):
-        """"""Objects and methods shared across message libraries""""""
-        self.client = ClientSync()
-        self.state = StateClient()
+        """"""Base class for all messages""""""
+        self._message_type_name = batcher.get_message_type_name(self.message_type)
+        processor.register_message_handler(self)",22,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234105698,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r234105698,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"Very well. The offending change was already merged. 

We need to find some middle ground between the need to correct offending code retroactively and the blocking of PRs that break code that does not exist in the repo yet. ",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-16 07:10:53,234107539,"@@ -137,7 +148,7 @@ def send(self, signer_keypair, payload, object_id=None, target_id=None):
         )
         got = None
 
-        status = self.client.send_batches_get_status(batch_list=batch_list)
+        status = client.send_batches_get_status(batch_list=batch_list)",73,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234107539,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r234107539,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"@adamgering, you have blocked PRs in the past week over:
  - whitespace change to a file, performed automatically by Black  
  - removal of the 3-4th layer of env variable redundancy having no effect on the master branch

Those were apparently worth the time of others.

We have agreed to docstring our code.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-16 07:29:28,234110649,"@@ -23,9 +23,14 @@
 from rbac.app.config import BATCHER_KEY_PAIR
 from rbac.common.sawtooth import rbac_payload
 
+
 LOGGER = logging.getLogger(__name__)
 
 
+def get_message_type_name(message_type):
+    return rbac_payload.get_message_type_name(message_type=message_type)",10,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234110649,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r234110649,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"The base class isn't registering, the message classes are.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-16 15:43:10,234250080,"@@ -18,18 +18,19 @@
 from rbac.common.crypto.keys import Key
 from rbac.common.crypto.keys import PUBLIC_KEY_PATTERN
 from rbac.common.sawtooth import batcher
-from rbac.common.sawtooth.state_client import StateClient
-from rbac.common.sawtooth.client_sync import ClientSync
-
+from rbac.common.sawtooth import client
+from rbac.common.sawtooth import state_client
+from rbac.common.base import base_processor as processor
 
 LOGGER = logging.getLogger(__name__)
 
 
+# pylint: disable=too-many-public-methods
 class BaseMessage:
     def __init__(self):
-        """"""Objects and methods shared across message libraries""""""
-        self.client = ClientSync()
-        self.state = StateClient()
+        """"""Base class for all messages""""""
+        self._message_type_name = batcher.get_message_type_name(self.message_type)
+        processor.register_message_handler(self)",22,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234250080,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r234250080,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"It marks the variable for purposes of export. It may not be required here, but it is good practice. It is required when you import a variable that you intend to export, as the linter will suggest it is an unused variable or unused import, and the app will break when you remove it.
",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-16 15:45:20,234250795,"@@ -12,3 +12,10 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 # -----------------------------------------------------------------------------
+
+from rbac.common.sawtooth.client_sync import ClientSync
+
+# pylint: disable=invalid-name
+client = ClientSync()
+
+__all__ = [""client""]",10,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234250795,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r234250795,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/532,https://github.com/hyperledger/sawtooth-next-directory/pull/532,"I asked for PRs not to change files that have nothing to do with the PR.

I asked for a PR not to remove a function that was added for a required purpose; and without looking at the change history and asking the author why it is there. But I encourage that function to be refactored, it is code that has pending refactoring.

Blocking PRs as a retaliation seems petty and unprofessional and puts the deliverables at risk. Docstring are not yet required by our lint standards, but that was not my ask. My ask is that this code specifically being actively iterated on, and the docstring can be added in the next PR to the file.",e10882ac91b45e0e1e447a3dab560f58138c3540,2018-11-16 15:47:53,234251761,"@@ -23,9 +23,14 @@
 from rbac.app.config import BATCHER_KEY_PAIR
 from rbac.common.sawtooth import rbac_payload
 
+
 LOGGER = logging.getLogger(__name__)
 
 
+def get_message_type_name(message_type):
+    return rbac_payload.get_message_type_name(message_type=message_type)",10,2018-11-16 19:05:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/234251761,https://github.com/hyperledger/sawtooth-next-directory/pull/532#discussion_r234251761,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/518,https://github.com/hyperledger/sawtooth-next-directory/pull/518,I would say this actually makes it more confusing.  AES_KEY_LENGTH ,0db10d92c97d3f598059c16e849307e00599413f,2018-11-08 17:15:34,231986060,"@@ -17,43 +17,42 @@
 import logging
 import binascii
 import string
-import re
+import re as regex
 import random
 from itsdangerous import TimedJSONWebSignatureSerializer as Serializer
 from rbac.common.crypto.cipher import AES
 
 
 LOGGER = logging.getLogger(__name__)
 
-AES_KEY_LENGTH = 32
-AES_KEY_PATTERN = re.compile(r""^[0-9a-f]{64}$"")
-
-SECRET_KEY_LENGTH = 36
-SECRET_KEY_PATTERN = re.compile(r""^[0-9A-Z]{36}$"")
+LENGTH_KEY_AES = 32",,2018-11-08 17:35:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231986060,https://github.com/hyperledger/sawtooth-next-directory/pull/518#discussion_r231986060,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/518,https://github.com/hyperledger/sawtooth-next-directory/pull/518,same as above,0db10d92c97d3f598059c16e849307e00599413f,2018-11-08 17:24:56,231989321,"@@ -16,8 +16,8 @@
 import pytest
 
 from tests.rbac.common.assertions import CommonAssertions
-from rbac.common.crypto.secrets import AES_KEY_PATTERN
-from rbac.common.crypto.secrets import SECRET_KEY_PATTERN
+from rbac.common.crypto.secrets import PATTERN_KEY_AES",,2018-11-08 17:35:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231989321,https://github.com/hyperledger/sawtooth-next-directory/pull/518#discussion_r231989321,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/512,https://github.com/hyperledger/sawtooth-next-directory/pull/512,"For an import such as this, aliasing improves readability:
import re as regex",74d2157b6b6f42e69ca5f4e3a83fa9f3fc69065b,2018-11-08 05:46:19,231770542,"@@ -0,0 +1,55 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re",,2018-11-08 16:24:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231770542,https://github.com/hyperledger/sawtooth-next-directory/pull/512#discussion_r231770542,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/512,https://github.com/hyperledger/sawtooth-next-directory/pull/512,This needs a comment explaining which pattern(s) the regex is intended to match/ Future maintainers should not have to reason through every regex they come across.,74d2157b6b6f42e69ca5f4e3a83fa9f3fc69065b,2018-11-08 05:49:17,231770891,"@@ -0,0 +1,55 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re
+
+from rbac.common.base.base_family import BaseFamily
+
+
+class Family(BaseFamily):
+    def __init__(self):
+        """"""The Role Based Access Control (RBAC) Transaction Family""""""
+        self._pattern = re.compile(r""^"" + self.namespace + ""[0-9a-f]{64}$"")",,2018-11-08 16:24:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231770891,https://github.com/hyperledger/sawtooth-next-directory/pull/512#discussion_r231770891,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/512,https://github.com/hyperledger/sawtooth-next-directory/pull/512,"Are you expecting to implement additional families besides this one? If not, then why have base and implementation classes?",74d2157b6b6f42e69ca5f4e3a83fa9f3fc69065b,2018-11-08 05:59:28,231772102,"@@ -0,0 +1,55 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re
+
+from rbac.common.base.base_family import BaseFamily
+
+
+class Family(BaseFamily):",22,2018-11-08 16:24:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231772102,https://github.com/hyperledger/sawtooth-next-directory/pull/512#discussion_r231772102,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/512,https://github.com/hyperledger/sawtooth-next-directory/pull/512,"Yes, it's a design pattern.",74d2157b6b6f42e69ca5f4e3a83fa9f3fc69065b,2018-11-08 15:50:51,231943537,"@@ -0,0 +1,55 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re
+
+from rbac.common.base.base_family import BaseFamily
+
+
+class Family(BaseFamily):",22,2018-11-08 16:24:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231943537,https://github.com/hyperledger/sawtooth-next-directory/pull/512#discussion_r231943537,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/512,https://github.com/hyperledger/sawtooth-next-directory/pull/512,It's in the docstring for pattern,74d2157b6b6f42e69ca5f4e3a83fa9f3fc69065b,2018-11-08 16:20:24,231958335,"@@ -0,0 +1,55 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re
+
+from rbac.common.base.base_family import BaseFamily
+
+
+class Family(BaseFamily):
+    def __init__(self):
+        """"""The Role Based Access Control (RBAC) Transaction Family""""""
+        self._pattern = re.compile(r""^"" + self.namespace + ""[0-9a-f]{64}$"")",,2018-11-08 16:24:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231958335,https://github.com/hyperledger/sawtooth-next-directory/pull/512#discussion_r231958335,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/512,https://github.com/hyperledger/sawtooth-next-directory/pull/512,resolved,74d2157b6b6f42e69ca5f4e3a83fa9f3fc69065b,2018-11-08 16:25:03,231961684,"@@ -0,0 +1,55 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re",,2018-11-08 16:25:04,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231961684,https://github.com/hyperledger/sawtooth-next-directory/pull/512#discussion_r231961684,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/512,https://github.com/hyperledger/sawtooth-next-directory/pull/512,"At this time, it is overengineering since there is only one case. Consider implementing inheritance if and when it is actually leveraged instead of frontloading it for something that might or might not exist.",74d2157b6b6f42e69ca5f4e3a83fa9f3fc69065b,2018-11-08 18:15:21,232006025,"@@ -0,0 +1,55 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re
+
+from rbac.common.base.base_family import BaseFamily
+
+
+class Family(BaseFamily):",22,2018-11-08 18:15:21,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232006025,https://github.com/hyperledger/sawtooth-next-directory/pull/512#discussion_r232006025,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/512,https://github.com/hyperledger/sawtooth-next-directory/pull/512,"I mean this: ""[0-9a-f]{64}$""
64 character lowercase alphanum plus namespace. It could be extracted to a constant having a meaningful name.",74d2157b6b6f42e69ca5f4e3a83fa9f3fc69065b,2018-11-08 18:36:32,232012984,"@@ -0,0 +1,55 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re
+
+from rbac.common.base.base_family import BaseFamily
+
+
+class Family(BaseFamily):
+    def __init__(self):
+        """"""The Role Based Access Control (RBAC) Transaction Family""""""
+        self._pattern = re.compile(r""^"" + self.namespace + ""[0-9a-f]{64}$"")",,2018-11-08 18:36:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232012984,https://github.com/hyperledger/sawtooth-next-directory/pull/512#discussion_r232012984,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/512,https://github.com/hyperledger/sawtooth-next-directory/pull/512,I am digressing on this per our discussion.,74d2157b6b6f42e69ca5f4e3a83fa9f3fc69065b,2018-11-08 18:37:10,232013185,"@@ -0,0 +1,55 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re
+
+from rbac.common.base.base_family import BaseFamily
+
+
+class Family(BaseFamily):",22,2018-11-08 18:37:10,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232013185,https://github.com/hyperledger/sawtooth-next-directory/pull/512#discussion_r232013185,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/473,https://github.com/hyperledger/sawtooth-next-directory/pull/473,"This sequence has a lot of if/else statements.  I would recommend a look up into key pair of a dict or something similar.  Fine as is, but something to consider",4b4e9fa8338b37579ca395ae2b6bb4cd53bd21f0,2018-11-06 23:35:36,231334226,"@@ -42,42 +41,42 @@ def test_state(self):
         subtree = addresser.NAMESPACE
         for item in self.client.list_state(subtree=subtree)[""data""]:
             address_type = item[""address_type""] = addresser.address_is(item[""address""])
-            if address_type == AddressSpace.USER:
+            if address_type == addresser.AddressSpace.USER:",15,2018-11-06 23:36:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231334226,https://github.com/hyperledger/sawtooth-next-directory/pull/473#discussion_r231334226,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/473,https://github.com/hyperledger/sawtooth-next-directory/pull/473,"Yeah, that test is skipped and temporary, there's a better way to deserialize data.",4b4e9fa8338b37579ca395ae2b6bb4cd53bd21f0,2018-11-07 00:17:30,231342641,"@@ -42,42 +41,42 @@ def test_state(self):
         subtree = addresser.NAMESPACE
         for item in self.client.list_state(subtree=subtree)[""data""]:
             address_type = item[""address_type""] = addresser.address_is(item[""address""])
-            if address_type == AddressSpace.USER:
+            if address_type == addresser.AddressSpace.USER:",15,2018-11-07 00:17:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231342641,https://github.com/hyperledger/sawtooth-next-directory/pull/473#discussion_r231342641,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/454,https://github.com/hyperledger/sawtooth-next-directory/pull/454,missing newline at end,ee638eec4ec1261a49627d06b6698345bbb83768,2018-11-06 15:48:57,231176707,"@@ -6,4 +6,11 @@ log_date_format = %Y-%m-%d %H:%M:%S
 python_files = tests/*.py tests/**/*.py
 testpaths = tests
 norecursedirs = tests/api
+
 addopts = --cov=rbac --cov-report term-missing --cov-report html
+env =
+    CLIENT_ID=client_id
+    CLIENT_SECRET=client_secret
+    CLIENT_ASSERTION=client_assertion
+    TENANT_ID=tenant_id
+    AUTH_TYPE=SECRET",,2018-11-06 19:16:24,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231176707,https://github.com/hyperledger/sawtooth-next-directory/pull/454#discussion_r231176707,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,"It is not easy code reviewing this amount of copy-pasting in these functions. IMO, this logic should be in the base class and overridden in the 2 cases where the behavior is different. The amount of redundant code results in PRs spanning 2K-5K loc - Not my idea of a Monday page-turner :( 

It also makes differentiating unique features from duplication a painstaking process.",ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 02:21:20,230982054,"@@ -0,0 +1,86 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from rbac.addressing import addresser as legacy
+from rbac.common.addresser.address_base import AddressBase
+from rbac.common.addresser.address_space import AddressSpace
+
+
+class TaskOwnerAddress(AddressBase):
+    def __init__(self):
+        AddressBase.__init__(self)
+
+    @property
+    def address_type(self):
+        return AddressSpace.TASKS_OWNERS
+
+    def address(self, object_id, target_id=None):
+        return legacy.make_task_owners_address(task_id=object_id, user_id=target_id)
+
+    def address_is(self, address):
+        address_type = AddressSpace[legacy.address_is(address=address).name]
+        if address_type == self.address_type:
+            return self.address_type
+        return None
+
+
+class TaskAdminAddress(AddressBase):
+    def __init__(self):
+        AddressBase.__init__(self)
+
+    @property
+    def address_type(self):
+        return AddressSpace.TASKS_ADMINS
+
+    def address(self, object_id, target_id=None):
+        return legacy.make_task_admins_address(task_id=object_id, user_id=target_id)
+
+    def address_is(self, address):
+        address_type = AddressSpace[legacy.address_is(address=address).name]
+        if address_type == self.address_type:
+            return self.address_type
+        return None
+
+
+class TaskAddress(AddressBase):
+    def __init__(self):
+        AddressBase.__init__(self)
+        self.owner = TaskOwnerAddress()
+        self.admin = TaskAdminAddress()
+
+    @property
+    def address_type(self):
+        return AddressSpace.TASKS_ATTRIBUTES
+
+    def address(self, object_id, target_id=None):
+        return legacy.make_task_attributes_address(task_id=object_id)
+
+    def address_is(self, address):",64,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230982054,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r230982054,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,"The only function that has some duplication is address_is. That was both temporary, however, also now resolved.",ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 15:39:23,231172581,"@@ -0,0 +1,86 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from rbac.addressing import addresser as legacy
+from rbac.common.addresser.address_base import AddressBase
+from rbac.common.addresser.address_space import AddressSpace
+
+
+class TaskOwnerAddress(AddressBase):
+    def __init__(self):
+        AddressBase.__init__(self)
+
+    @property
+    def address_type(self):
+        return AddressSpace.TASKS_OWNERS
+
+    def address(self, object_id, target_id=None):
+        return legacy.make_task_owners_address(task_id=object_id, user_id=target_id)
+
+    def address_is(self, address):
+        address_type = AddressSpace[legacy.address_is(address=address).name]
+        if address_type == self.address_type:
+            return self.address_type
+        return None
+
+
+class TaskAdminAddress(AddressBase):
+    def __init__(self):
+        AddressBase.__init__(self)
+
+    @property
+    def address_type(self):
+        return AddressSpace.TASKS_ADMINS
+
+    def address(self, object_id, target_id=None):
+        return legacy.make_task_admins_address(task_id=object_id, user_id=target_id)
+
+    def address_is(self, address):
+        address_type = AddressSpace[legacy.address_is(address=address).name]
+        if address_type == self.address_type:
+            return self.address_type
+        return None
+
+
+class TaskAddress(AddressBase):
+    def __init__(self):
+        AddressBase.__init__(self)
+        self.owner = TaskOwnerAddress()
+        self.admin = TaskAdminAddress()
+
+    @property
+    def address_type(self):
+        return AddressSpace.TASKS_ATTRIBUTES
+
+    def address(self, object_id, target_id=None):
+        return legacy.make_task_attributes_address(task_id=object_id)
+
+    def address_is(self, address):",64,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231172581,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231172581,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,"Tasks will likely disappear, they are just roles without members; but this PR is a refactor not a design change.",ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 15:41:23,231173474,"@@ -0,0 +1,86 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from rbac.addressing import addresser as legacy
+from rbac.common.addresser.address_base import AddressBase
+from rbac.common.addresser.address_space import AddressSpace
+
+
+class TaskOwnerAddress(AddressBase):
+    def __init__(self):
+        AddressBase.__init__(self)
+
+    @property
+    def address_type(self):
+        return AddressSpace.TASKS_OWNERS
+
+    def address(self, object_id, target_id=None):
+        return legacy.make_task_owners_address(task_id=object_id, user_id=target_id)
+
+    def address_is(self, address):
+        address_type = AddressSpace[legacy.address_is(address=address).name]
+        if address_type == self.address_type:
+            return self.address_type
+        return None
+
+
+class TaskAdminAddress(AddressBase):
+    def __init__(self):
+        AddressBase.__init__(self)
+
+    @property
+    def address_type(self):
+        return AddressSpace.TASKS_ADMINS
+
+    def address(self, object_id, target_id=None):
+        return legacy.make_task_admins_address(task_id=object_id, user_id=target_id)
+
+    def address_is(self, address):
+        address_type = AddressSpace[legacy.address_is(address=address).name]
+        if address_type == self.address_type:
+            return self.address_type
+        return None
+
+
+class TaskAddress(AddressBase):
+    def __init__(self):
+        AddressBase.__init__(self)
+        self.owner = TaskOwnerAddress()
+        self.admin = TaskAdminAddress()
+
+    @property
+    def address_type(self):
+        return AddressSpace.TASKS_ATTRIBUTES
+
+    def address(self, object_id, target_id=None):
+        return legacy.make_task_attributes_address(task_id=object_id)
+
+    def address_is(self, address):",64,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231173474,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231173474,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,NS doesn't appear to be references anywhere else.  Should be removed.  Or is there another purpose to this?,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 19:31:57,231261558,"@@ -75,8 +75,8 @@ class TaskRelationshipNamespace(enum.IntEnum):
 
 FAMILY_NAME = ""rbac""
 FAMILY_VERSION = ""1.0""
-NS = sha512(FAMILY_NAME.encode()).hexdigest()[:6]
-FAMILY_PREFIX = ""9f4448""
+NAMESPACE = sha512(FAMILY_NAME.encode()).hexdigest()[:6]
+NS = NAMESPACE",7,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231261558,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231261558,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,"These appear to be declared in addressing.addresser.py..  Can you import from here in addressing?
",ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 19:43:10,231265460,"@@ -0,0 +1,25 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re
+
+
+FAMILY_NAME = ""rbac""",20,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231265460,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231265460,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,Can NS go away now?,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 19:49:51,231267761,"@@ -75,8 +75,8 @@ class TaskRelationshipNamespace(enum.IntEnum):
 
 FAMILY_NAME = ""rbac""
 FAMILY_VERSION = ""1.0""
-NS = sha512(FAMILY_NAME.encode()).hexdigest()[:6]
-FAMILY_PREFIX = ""9f4448""
+NAMESPACE = sha512(FAMILY_NAME.encode()).hexdigest()[:6]
+NS = NAMESPACE",7,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231267761,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231267761,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,This appears to be duplicated from base state and can be removed,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:04:33,231272436,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_state import BaseState
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposalState(BaseState):
+    def __init__(self):
+        BaseState.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id=None):
+        """"""Make an address for the given user_id""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    def make(self, object_id):
+        """"""Makes the state storage object""""""
+        raise NotImplementedError(""Class must implement this method"")
+
+    def create(self, signer_keypair, message, object_id=None, target_id=None):",,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231272436,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231272436,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,Appears to be implemented in basestate and can be removed,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:05:46,231272790,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_state import BaseState
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposalState(BaseState):
+    def __init__(self):
+        BaseState.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id=None):
+        """"""Make an address for the given user_id""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    def make(self, object_id):",,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231272790,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231272790,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,docstrings on what is being tested,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:15:55,231275992,"@@ -0,0 +1,50 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.common import addresser
+from tests.rbac.common.assertions import CommonAssertions
+
+LOGGER = logging.getLogger(__name__)
+
+ADDRESS_CLASS_METHODS = [""address"", ""address_is"", ""hash"", ""unique_id""]
+ADDRESS_CLASS_PROPS = [""address_type""]
+
+
+class AddressAssertions(CommonAssertions):
+    def __init__(self, *args, **kwargs):
+        CommonAssertions.__init__(self, *args, **kwargs)
+
+    def assertIsAddressClass(self, value):",30,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231275992,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231275992,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,should =None be default for target_id,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:23:40,231278309,"@@ -0,0 +1,133 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.common.sawtooth.batcher import Batcher
+from rbac.common.sawtooth.state_client import StateClient
+from rbac.common.sawtooth.client_sync import ClientSync
+
+
+LOGGER = logging.getLogger(__name__)
+
+
+class BaseState:
+    def __init__(self):
+        """"""Objects and methods shared across message libraries""""""
+        self.batch = Batcher()
+        self.client = ClientSync()
+        self.state = StateClient()
+
+    def getattr(self, item, attribute):
+        """"""A version of getattr that will return None if attributes
+        is not found on the item""""""
+        if hasattr(item, attribute):
+            return getattr(item, attribute)
+        return None
+
+    @property
+    def name(self):
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def names(self):
+        return self.name + ""s""
+
+    @property
+    def container_proto(self):
+        raise NotImplementedError(""Class must implement this method"")
+
+    @property
+    def state_proto(self):
+        raise NotImplementedError(""Class must implement this method"")
+
+    @property
+    def message_fields_not_in_state(self):
+        """"""Fields that are on the message but not stored on the state object""""""
+        return []
+
+    def address(self, object_id, target_id):",,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231278309,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231278309,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,"rbac/addressing/addresser.py
Disappears in the next PR",ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:41:37,231283777,"@@ -75,8 +75,8 @@ class TaskRelationshipNamespace(enum.IntEnum):
 
 FAMILY_NAME = ""rbac""
 FAMILY_VERSION = ""1.0""
-NS = sha512(FAMILY_NAME.encode()).hexdigest()[:6]
-FAMILY_PREFIX = ""9f4448""
+NAMESPACE = sha512(FAMILY_NAME.encode()).hexdigest()[:6]
+NS = NAMESPACE",7,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231283777,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231283777,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,"rbac/addressing/addresser.py
Disappears in the next PR",ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:41:44,231283812,"@@ -75,8 +75,8 @@ class TaskRelationshipNamespace(enum.IntEnum):
 
 FAMILY_NAME = ""rbac""
 FAMILY_VERSION = ""1.0""
-NS = sha512(FAMILY_NAME.encode()).hexdigest()[:6]
-FAMILY_PREFIX = ""9f4448""
+NAMESPACE = sha512(FAMILY_NAME.encode()).hexdigest()[:6]
+NS = NAMESPACE",7,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231283812,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231283812,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,"rbac/addressing/addresser.py
Disappears in the next PR",ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:41:51,231283842,"@@ -0,0 +1,25 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+from hashlib import sha512
+import re
+
+
+FAMILY_NAME = ""rbac""",20,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231283842,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231283842,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,what line are you commenting on?,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:45:20,231284848,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_state import BaseState
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposalState(BaseState):
+    def __init__(self):
+        BaseState.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id=None):
+        """"""Make an address for the given user_id""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    def make(self, object_id):",,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231284848,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231284848,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,what line are you commenting on?,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:45:35,231284924,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_state import BaseState
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposalState(BaseState):
+    def __init__(self):
+        BaseState.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id=None):
+        """"""Make an address for the given user_id""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    def make(self, object_id):
+        """"""Makes the state storage object""""""
+        raise NotImplementedError(""Class must implement this method"")
+
+    def create(self, signer_keypair, message, object_id=None, target_id=None):",,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231284924,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231284924,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,The create method,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:56:47,231289089,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_state import BaseState
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposalState(BaseState):
+    def __init__(self):
+        BaseState.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id=None):
+        """"""Make an address for the given user_id""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    def make(self, object_id):
+        """"""Makes the state storage object""""""
+        raise NotImplementedError(""Class must implement this method"")
+
+    def create(self, signer_keypair, message, object_id=None, target_id=None):",,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231289089,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231289089,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,The make function,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 20:56:56,231289188,"@@ -0,0 +1,52 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_state import BaseState
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposalState(BaseState):
+    def __init__(self):
+        BaseState.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id=None):
+        """"""Make an address for the given user_id""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    def make(self, object_id):",,2018-11-06 21:08:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231289188,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231289188,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/453,https://github.com/hyperledger/sawtooth-next-directory/pull/453,resolved,ec48df35e802e55749b11eac2bfaaa40a25594ff,2018-11-06 21:10:09,231293772,"@@ -0,0 +1,50 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.common import addresser
+from tests.rbac.common.assertions import CommonAssertions
+
+LOGGER = logging.getLogger(__name__)
+
+ADDRESS_CLASS_METHODS = [""address"", ""address_is"", ""hash"", ""unique_id""]
+ADDRESS_CLASS_PROPS = [""address_type""]
+
+
+class AddressAssertions(CommonAssertions):
+    def __init__(self, *args, **kwargs):
+        CommonAssertions.__init__(self, *args, **kwargs)
+
+    def assertIsAddressClass(self, value):",30,2018-11-06 21:10:09,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231293772,https://github.com/hyperledger/sawtooth-next-directory/pull/453#discussion_r231293772,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,"Hey, I recognize this code  :)

Consider separating the code that issues the GET request from the code that simply switches/returns a known response (maybe pass in graph_token instead and sort out its existence upstream?)
",6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-06 01:30:18,230974731,"@@ -87,3 +90,22 @@ def check_token(self, AUTH_TYPE):
                 ""Accept"": ""application/json"",
                 ""Host"": ""graph.microsoft.com"",
             }
+
+    def _check_token(self, AUTH_TYPE):",6,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230974731,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r230974731,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,"This should be rearranged into:

- Refresh the token(token)
  - Check if token exists. Regenerate if not.
    - If so, check token expiration. Regenerate if expired.

- Build headers(token):
  - add AUTH_TYPE header
  - add Content-Type header

This makes it easier to find and modify the headers as necessary. Possibly to move and share them with other requests. It also makes it possible to refresh the token without returning headers (separating request preparation from request execution)
",6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-06 01:41:48,230976644,"@@ -87,3 +90,22 @@ def check_token(self, AUTH_TYPE):
                 ""Accept"": ""application/json"",
                 ""Host"": ""graph.microsoft.com"",
             }
+
+    def _check_token(self, AUTH_TYPE):
+        """"""check if Token exists and calls for then caches as a global variable 
+        if it does not""""""
+        if self.graph_token is None or not self._time_left():
+            response = self.get_token(AUTH_TYPE)
+            self.token_creation_timestamp = dt.datetime.now()
+            self.graph_token = response.json()[""access_token""]
+        if AUTH_TYPE.upper() == ""SECRET"":
+            return {""Authorization"": self.graph_token}
+        elif AUTH_TYPE.upper() == ""CERT"":
+            return {""Authorization"": self.graph_token, ""Host"": ""graph.microsoft.com""}
+
+    def check_token_POST(self, AUTH_TYPE):",33,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230976644,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r230976644,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,Why does this file get special UTF-8 treatment?,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-06 01:44:12,230977029,"@@ -0,0 +1,47 @@
+#!/usr/bin/env python3
+# -*- coding: utf-8 -*-",,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230977029,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r230977029,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,"Please extract ""@odata.nextLink"" to a constant since it is referenced in multiple places",6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-06 01:50:17,230977874,"@@ -177,14 +215,18 @@ def insert_user_to_db(users_dict):
 
 def initialize_aad_sync():
     """"""Initialize a sync with Azure Active Directory.""""""
+    LOGGER.info(""connecting to RethinkDB..."")
+    connect_to_db()
+    LOGGER.info(""Successfully connected to RethinkDB!"")
+
     LOGGER.info(""Inserting AAD data..."")
 
     LOGGER.info(""Getting Users..."")
     users = fetch_users()
     if users:
         insert_user_to_db(users)
-        while '@odata.nextLink' in users:
-            users = fetch_next_payload(users['@odata.nextLink'])
+        while ""@odata.nextLink"" in users:",,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230977874,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r230977874,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,"Yeah, I'm planning on refactoring this with michael tomorrow when we go over both sync daemons and remove redundancies. Ideally I'll use _check_token() and have it pass the valid token to check_token_POST() and check_token_GET() (which will require a couple small changes of the initial sync). WOuld you rather that be sorted out here?",6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-06 02:50:31,230985714,"@@ -87,3 +90,22 @@ def check_token(self, AUTH_TYPE):
                 ""Accept"": ""application/json"",
                 ""Host"": ""graph.microsoft.com"",
             }
+
+    def _check_token(self, AUTH_TYPE):",6,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230985714,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r230985714,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,"sorry, force of habit whenever I write python files. I'll keep them out",6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-06 03:01:05,230987094,"@@ -0,0 +1,47 @@
+#!/usr/bin/env python3
+# -*- coding: utf-8 -*-",,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230987094,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r230987094,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,"_check_token refreshes the token, do we want to change that? 

how's this?
```
 def _check_token(self, AUTH_TYPE):
        """"""check if Token exists and calls for then caches as a global variable 
        if it does not""""""
        if self.graph_token is None or not self._time_left():
            response = self.get_token(AUTH_TYPE)
            self.token_creation_timestamp = dt.datetime.now()
            self.graph_token = response.json()[""access_token""]


    def _common_headers(self, AUTH_TYPE):
        if AUTH_TYPE.upper() == ""SECRET"":
            return {""Authorization"": self.graph_token}
        elif AUTH_TYPE.upper() == ""CERT"":
            return {""Authorization"": self.graph_token, ""Host"": ""graph.microsoft.com""}


    def check_token_GET(self, AUTH_TYPE):
        """"""Check it Token exists and calls for and caches as global variable if it does not.""""""
        self._check_token(AUTH_TYPE)
        headers = self._common_headers(AUTH_TYPE)
        headers[""Accept""] = ""application/json""
        return headers


    def check_token_POST(self, AUTH_TYPE):
        """"""check if Token exists and calls for then caches as a global variable 
        if it does not""""""
        self._check_token(AUTH_TYPE)
        headers = self._common_headers(AUTH_TYPE)
        headers[""Content-Type""] = ""application/json""
        return headers
```",6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-06 03:06:47,230987691,"@@ -87,3 +90,22 @@ def check_token(self, AUTH_TYPE):
                 ""Accept"": ""application/json"",
                 ""Host"": ""graph.microsoft.com"",
             }
+
+    def _check_token(self, AUTH_TYPE):
+        """"""check if Token exists and calls for then caches as a global variable 
+        if it does not""""""
+        if self.graph_token is None or not self._time_left():
+            response = self.get_token(AUTH_TYPE)
+            self.token_creation_timestamp = dt.datetime.now()
+            self.graph_token = response.json()[""access_token""]
+        if AUTH_TYPE.upper() == ""SECRET"":
+            return {""Authorization"": self.graph_token}
+        elif AUTH_TYPE.upper() == ""CERT"":
+            return {""Authorization"": self.graph_token, ""Host"": ""graph.microsoft.com""}
+
+    def check_token_POST(self, AUTH_TYPE):",33,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230987691,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r230987691,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,"_check_token could be refresh_token(), load_valid_token(), or get_valid_token()... also the logic should return the token rather than mutate the object passed in. That is, pass in the graph_token and auth_type and return the (existing or new) token. You can do that without referencing 'self' (ie self could be removed from get_token() making get_token a standalone/static function (as it should be)

_common_headers() could be header_by_auth_type()
Regarding the final two: Does the token make a difference regarding GET/POST? I don't think so. Rather, the difference is in the I/O media type header (Accept or content_type). Thus the duplicate lines can be moved into a shared function, and the difference made more explicit.",6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 01:18:48,231353497,"@@ -87,3 +90,22 @@ def check_token(self, AUTH_TYPE):
                 ""Accept"": ""application/json"",
                 ""Host"": ""graph.microsoft.com"",
             }
+
+    def _check_token(self, AUTH_TYPE):
+        """"""check if Token exists and calls for then caches as a global variable 
+        if it does not""""""
+        if self.graph_token is None or not self._time_left():
+            response = self.get_token(AUTH_TYPE)
+            self.token_creation_timestamp = dt.datetime.now()
+            self.graph_token = response.json()[""access_token""]
+        if AUTH_TYPE.upper() == ""SECRET"":
+            return {""Authorization"": self.graph_token}
+        elif AUTH_TYPE.upper() == ""CERT"":
+            return {""Authorization"": self.graph_token, ""Host"": ""graph.microsoft.com""}
+
+    def check_token_POST(self, AUTH_TYPE):",33,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231353497,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231353497,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,New line at end of file,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:16:49,231714867,"@@ -17,11 +17,19 @@
 
 import os
 import sys
+import logging
 
 TOP_DIR = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
 sys.path.insert(0, TOP_DIR)
 
 from rbac.providers.azure.initial_inbound_sync import initialize_aad_sync
+from rbac.providers.azure.delta_outbound_sync import outbound_sync_listener
+
+logging.basicConfig(level=logging.INFO)
+# LOGGER levels: info, debug, warning, exception, error
+LOGGER = logging.getLogger(__name__)
+LOGGER.setLevel(logging.INFO)
 
 if __name__ == ""__main__"":
     initialize_aad_sync()
+    outbound_sync_listener()",,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231714867,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231714867,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,This Logger goes not appear to be doing anything.  suggest removal,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:20:45,231715722,"@@ -17,11 +17,19 @@
 
 import os
 import sys
+import logging
 
 TOP_DIR = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
 sys.path.insert(0, TOP_DIR)
 
 from rbac.providers.azure.initial_inbound_sync import initialize_aad_sync
+from rbac.providers.azure.delta_outbound_sync import outbound_sync_listener
+
+logging.basicConfig(level=logging.INFO)",,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231715722,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231715722,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,remove the .7 we need python3 there as local is 3.7 and project runs on 3.5,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:36:33,231719121,"@@ -1,4 +1,4 @@
-#! /usr/bin/env python3
+#!/usr/bin/env python3.7",,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231719121,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231719121,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,stores as class variable not global variable,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:41:34,231720038,"@@ -76,17 +76,31 @@ def _time_left(self):
                 return True
         return False
 
-    def check_token(self, AUTH_TYPE):
-        """"""Check it Token exists and calls for and caches as global variable if it does not.""""""
+    def _check_token(self, AUTH_TYPE):
+        """"""check if Token exists and calls for then caches as a global variable",7,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231720038,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231720038,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,The amount of repetition needs to be reduced in all your check token or _check token methods,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:50:32,231721983,"@@ -76,17 +76,31 @@ def _time_left(self):
                 return True
         return False
 
-    def check_token(self, AUTH_TYPE):
-        """"""Check it Token exists and calls for and caches as global variable if it does not.""""""
+    def _check_token(self, AUTH_TYPE):
+        """"""check if Token exists and calls for then caches as a global variable
+        if it does not""""""
         if self.graph_token is None or not self._time_left():
             response = self.get_token(AUTH_TYPE)
             self.token_creation_timestamp = dt.datetime.now()
             self.graph_token = response.json()[""access_token""]
+
+    def _common_headers(self, AUTH_TYPE):
         if AUTH_TYPE.upper() == ""SECRET"":
-            return {""Authorization"": self.graph_token, ""Accept"": ""application/json""}
+            return {""Authorization"": self.graph_token}
         elif AUTH_TYPE.upper() == ""CERT"":
-            return {
-                ""Authorization"": self.graph_token,
-                ""Accept"": ""application/json"",
-                ""Host"": ""graph.microsoft.com"",
-            }
+            return {""Authorization"": self.graph_token, ""Host"": ""graph.microsoft.com""}
+
+    def check_token_GET(self, AUTH_TYPE):
+        """"""Check it Token exists and calls for and caches as global variable if it does not.""""""
+        self._check_token(AUTH_TYPE)
+        headers = self._common_headers(AUTH_TYPE)
+        headers[""Accept""] = ""application/json""
+        return headers
+
+    def check_token_POST(self, AUTH_TYPE):
+        """"""check if Token exists and calls for then caches as a global variable
+        if it does not""""""
+        self._check_token(AUTH_TYPE)",36,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231721983,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231721983,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,doc strings,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:52:09,231722291,"@@ -0,0 +1,197 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+CHANGELOG = ""outbound_queue_changelog""
+OUTBOUND_QUEUE = ""outbound_queue""
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+GRAPH_URL = ""https://graph.microsoft.com""
+TENANT_ID = os.environ.get(""TENANT_ID"")
+GRAPH_VERSION = ""beta""
+AUTH = AadAuth()
+AUTH_TYPE = os.environ.get(""AUTH_TYPE"")
+
+
+class CustomError(Exception):
+    pass
+
+
+def connect_to_db():
+    connected_to_db = False",60,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231722291,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231722291,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,docstrings,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:52:17,231722314,"@@ -0,0 +1,197 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)",34,2018-11-08 01:24:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231722314,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231722314,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,docstring,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:52:32,231722359,"@@ -0,0 +1,197 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+CHANGELOG = ""outbound_queue_changelog""
+OUTBOUND_QUEUE = ""outbound_queue""
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+GRAPH_URL = ""https://graph.microsoft.com""
+TENANT_ID = os.environ.get(""TENANT_ID"")
+GRAPH_VERSION = ""beta""
+AUTH = AadAuth()
+AUTH_TYPE = os.environ.get(""AUTH_TYPE"")
+
+
+class CustomError(Exception):
+    pass
+
+
+def connect_to_db():
+    connected_to_db = False
+    while not connected_to_db:
+        try:
+            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+            connected_to_db = True
+        except r.ReqlDriverError as err:
+            LOGGER.debug(
+                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+            )
+            time.sleep(DELAY)
+        except Exception as err:
+            LOGGER.warning(type(err).__name__)
+            raise err
+
+
+def peek_at_queue():
+    try:",77,2018-11-08 01:24:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231722359,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231722359,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,no point in raising error when the error just passes.  Logging handles the messaging.   replace with pass,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:54:55,231722860,"@@ -0,0 +1,197 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+CHANGELOG = ""outbound_queue_changelog""
+OUTBOUND_QUEUE = ""outbound_queue""
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+GRAPH_URL = ""https://graph.microsoft.com""
+TENANT_ID = os.environ.get(""TENANT_ID"")
+GRAPH_VERSION = ""beta""
+AUTH = AadAuth()
+AUTH_TYPE = os.environ.get(""AUTH_TYPE"")
+
+
+class CustomError(Exception):
+    pass
+
+
+def connect_to_db():
+    connected_to_db = False
+    while not connected_to_db:
+        try:
+            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+            connected_to_db = True
+        except r.ReqlDriverError as err:
+            LOGGER.debug(
+                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+            )
+            time.sleep(DELAY)
+        except Exception as err:
+            LOGGER.warning(type(err).__name__)
+            raise err
+
+
+def peek_at_queue():
+    try:
+        document = (
+            r.table(OUTBOUND_QUEUE)
+            .filter({""provider_id"": ""azure""})
+            .min(""timestamp"")
+            .run()
+        )
+        LOGGER.debug(document)
+        return document
+    except r.ReqlNonExistenceError as err:
+        LOGGER.debug(
+            ""The outbound queue is empty. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is empty."")",90,2018-11-08 01:24:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231722860,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231722860,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,Same as above,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:55:09,231722908,"@@ -0,0 +1,197 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+CHANGELOG = ""outbound_queue_changelog""
+OUTBOUND_QUEUE = ""outbound_queue""
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+GRAPH_URL = ""https://graph.microsoft.com""
+TENANT_ID = os.environ.get(""TENANT_ID"")
+GRAPH_VERSION = ""beta""
+AUTH = AadAuth()
+AUTH_TYPE = os.environ.get(""AUTH_TYPE"")
+
+
+class CustomError(Exception):
+    pass
+
+
+def connect_to_db():
+    connected_to_db = False
+    while not connected_to_db:
+        try:
+            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+            connected_to_db = True
+        except r.ReqlDriverError as err:
+            LOGGER.debug(
+                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+            )
+            time.sleep(DELAY)
+        except Exception as err:
+            LOGGER.warning(type(err).__name__)
+            raise err
+
+
+def peek_at_queue():
+    try:
+        document = (
+            r.table(OUTBOUND_QUEUE)
+            .filter({""provider_id"": ""azure""})
+            .min(""timestamp"")
+            .run()
+        )
+        LOGGER.debug(document)
+        return document
+    except r.ReqlNonExistenceError as err:
+        LOGGER.debug(
+            ""The outbound queue is empty. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is empty."")
+    except r.ReqlOpFailedError as err:
+        LOGGER.debug(
+            ""The outbound queue is not ready. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is not ready."")",95,2018-11-08 01:24:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231722908,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231722908,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,Same as above,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:55:26,231722972,"@@ -0,0 +1,197 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+CHANGELOG = ""outbound_queue_changelog""
+OUTBOUND_QUEUE = ""outbound_queue""
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+GRAPH_URL = ""https://graph.microsoft.com""
+TENANT_ID = os.environ.get(""TENANT_ID"")
+GRAPH_VERSION = ""beta""
+AUTH = AadAuth()
+AUTH_TYPE = os.environ.get(""AUTH_TYPE"")
+
+
+class CustomError(Exception):
+    pass
+
+
+def connect_to_db():
+    connected_to_db = False
+    while not connected_to_db:
+        try:
+            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+            connected_to_db = True
+        except r.ReqlDriverError as err:
+            LOGGER.debug(
+                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+            )
+            time.sleep(DELAY)
+        except Exception as err:
+            LOGGER.warning(type(err).__name__)
+            raise err
+
+
+def peek_at_queue():
+    try:
+        document = (
+            r.table(OUTBOUND_QUEUE)
+            .filter({""provider_id"": ""azure""})
+            .min(""timestamp"")
+            .run()
+        )
+        LOGGER.debug(document)
+        return document
+    except r.ReqlNonExistenceError as err:
+        LOGGER.debug(
+            ""The outbound queue is empty. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is empty."")
+    except r.ReqlOpFailedError as err:
+        LOGGER.debug(
+            ""The outbound queue is not ready. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is not ready."")
+    except r.ReqlDriverError as err:
+        LOGGER.debug(
+            ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""RethinkDB is down."")",100,2018-11-08 01:24:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231722972,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231722972,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,If the point of this class then remove this as it is unecessary,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:55:59,231723081,"@@ -0,0 +1,197 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+CHANGELOG = ""outbound_queue_changelog""
+OUTBOUND_QUEUE = ""outbound_queue""
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+GRAPH_URL = ""https://graph.microsoft.com""
+TENANT_ID = os.environ.get(""TENANT_ID"")
+GRAPH_VERSION = ""beta""
+AUTH = AadAuth()
+AUTH_TYPE = os.environ.get(""AUTH_TYPE"")
+
+
+class CustomError(Exception):",52,2018-11-08 01:24:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231723081,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231723081,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,is document something that AAD uses?  If not need to use clearer input name.  document doesn't mean anything in this context,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:57:43,231723425,"@@ -0,0 +1,197 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+CHANGELOG = ""outbound_queue_changelog""
+OUTBOUND_QUEUE = ""outbound_queue""
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+GRAPH_URL = ""https://graph.microsoft.com""
+TENANT_ID = os.environ.get(""TENANT_ID"")
+GRAPH_VERSION = ""beta""
+AUTH = AadAuth()
+AUTH_TYPE = os.environ.get(""AUTH_TYPE"")
+
+
+class CustomError(Exception):
+    pass
+
+
+def connect_to_db():
+    connected_to_db = False
+    while not connected_to_db:
+        try:
+            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+            connected_to_db = True
+        except r.ReqlDriverError as err:
+            LOGGER.debug(
+                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+            )
+            time.sleep(DELAY)
+        except Exception as err:
+            LOGGER.warning(type(err).__name__)
+            raise err
+
+
+def peek_at_queue():
+    try:
+        document = (
+            r.table(OUTBOUND_QUEUE)
+            .filter({""provider_id"": ""azure""})
+            .min(""timestamp"")
+            .run()
+        )
+        LOGGER.debug(document)
+        return document
+    except r.ReqlNonExistenceError as err:
+        LOGGER.debug(
+            ""The outbound queue is empty. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is empty."")
+    except r.ReqlOpFailedError as err:
+        LOGGER.debug(
+            ""The outbound queue is not ready. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is not ready."")
+    except r.ReqlDriverError as err:
+        LOGGER.debug(
+            ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""RethinkDB is down."")
+    except Exception as err:
+        LOGGER.warning(type(err).__name__)
+        raise err
+
+
+def put_document_AAD(document):
+    """"""Upsert document into Azure Active Directory.""""""",107,2018-11-08 01:24:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231723425,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231723425,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,Same as above.  You call it user object here.  stick with user object.  or user_json.  Something that means something,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-07 23:58:48,231723640,"@@ -0,0 +1,197 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+CHANGELOG = ""outbound_queue_changelog""
+OUTBOUND_QUEUE = ""outbound_queue""
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+GRAPH_URL = ""https://graph.microsoft.com""
+TENANT_ID = os.environ.get(""TENANT_ID"")
+GRAPH_VERSION = ""beta""
+AUTH = AadAuth()
+AUTH_TYPE = os.environ.get(""AUTH_TYPE"")
+
+
+class CustomError(Exception):
+    pass
+
+
+def connect_to_db():
+    connected_to_db = False
+    while not connected_to_db:
+        try:
+            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+            connected_to_db = True
+        except r.ReqlDriverError as err:
+            LOGGER.debug(
+                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+            )
+            time.sleep(DELAY)
+        except Exception as err:
+            LOGGER.warning(type(err).__name__)
+            raise err
+
+
+def peek_at_queue():
+    try:
+        document = (
+            r.table(OUTBOUND_QUEUE)
+            .filter({""provider_id"": ""azure""})
+            .min(""timestamp"")
+            .run()
+        )
+        LOGGER.debug(document)
+        return document
+    except r.ReqlNonExistenceError as err:
+        LOGGER.debug(
+            ""The outbound queue is empty. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is empty."")
+    except r.ReqlOpFailedError as err:
+        LOGGER.debug(
+            ""The outbound queue is not ready. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is not ready."")
+    except r.ReqlDriverError as err:
+        LOGGER.debug(
+            ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""RethinkDB is down."")
+    except Exception as err:
+        LOGGER.warning(type(err).__name__)
+        raise err
+
+
+def put_document_AAD(document):
+    """"""Upsert document into Azure Active Directory.""""""
+    data_type = document.data_type
+    if data_type == ""USER"":
+        put_user_AAD(document)
+    elif data_type == ""GROUP"":
+        # add functions for syncing groups.
+        pass
+
+
+def put_user_AAD(document):
+    """"""Takes in a user object and checks if it exists in azure AD. Updates the",,2018-11-08 01:24:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231723640,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231723640,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,What is the fail case of headers here?  Error silent?,6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-08 00:05:50,231724991,"@@ -0,0 +1,232 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+import time
+import os
+import logging
+from datetime import datetime as dt
+import requests
+import rethinkdb as r
+from rbac.providers.azure.aad_auth import AadAuth
+from rbac.providers.outbound_filters import outbound_user_filter, outbound_group_filter
+
+# LOGGER levels: info, debug, warning, exception, error
+logging.basicConfig(level=logging.INFO)
+LOGGER = logging.getLogger(__name__)
+
+DEFAULT_CONFIG = {""DB_HOST"": ""rethink"", ""DB_PORT"": ""28015"", ""DB_NAME"": ""rbac""}
+DELAY = 1
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+CHANGELOG = ""outbound_queue_changelog""
+OUTBOUND_QUEUE = ""outbound_queue""
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+GRAPH_URL = ""https://graph.microsoft.com""
+TENANT_ID = os.environ.get(""TENANT_ID"")
+GRAPH_VERSION = ""beta""
+AUTH = AadAuth()
+AUTH_TYPE = os.environ.get(""AUTH_TYPE"")
+
+
+class CustomError(Exception):
+    pass
+
+
+def connect_to_db():
+    connected_to_db = False
+    while not connected_to_db:
+        try:
+            r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+            connected_to_db = True
+        except r.ReqlDriverError as err:
+            LOGGER.debug(
+                ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+            )
+            time.sleep(DELAY)
+        except Exception as err:
+            LOGGER.warning(type(err).__name__)
+            raise err
+
+
+def peek_at_queue():
+    try:
+        document = (
+            r.table(OUTBOUND_QUEUE)
+            .filter({""provider_id"": ""azure""})
+            .min(""timestamp"")
+            .run()
+        )
+        LOGGER.debug(document)
+        return document
+    except r.ReqlNonExistenceError as err:
+        LOGGER.debug(
+            ""The outbound queue is empty. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is empty."")
+    except r.ReqlOpFailedError as err:
+        LOGGER.debug(
+            ""The outbound queue is not ready. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""Outbound Queue is not ready."")
+    except r.ReqlDriverError as err:
+        LOGGER.debug(
+            ""Could not connect to RethinkDB. Repolling after %s seconds..."", DELAY
+        )
+        raise CustomError(""RethinkDB is down."")
+    except Exception as err:
+        LOGGER.warning(type(err).__name__)
+        raise err
+
+
+def put_document_AAD(document):
+    """"""Upsert document into Azure Active Directory.""""""
+    data_type = document.data_type
+    if data_type == ""USER"":
+        put_user_AAD(document)
+    elif data_type == ""GROUP"":
+        put_group_AAD(document)
+
+
+def put_group_AAD(document):
+    """"""Takes in a group object and checks if it exists in azure AD. Updates the
+    user if present. Throws error if user doesn't exist.""""""
+    group = document.data
+    headers = AUTH.check_token_GET(AUTH_TYPE)
+    if headers is not None:
+        group_id = group.id
+        url = f""{GRAPH_URL}/{GRAPH_VERSION}/groups/{group_id}""
+        response = requests.get(url=url, headers=headers)
+        LOGGER.debug(response)
+        if response.status_code == 404:
+            # handle groups created in sawtooth but not present in Azure AD.
+            LOGGER.warning(
+                ""%s Group not in Azure AD. Aborting sync for group: %s"",
+                response.status_code,
+                group_id,
+            )
+            LOGGER.info(""Skipping group and removing from outbound queue..."")
+            delete_from_outbound_queue(document.id)
+            raise CustomError(""Group not in Azure AD."")
+        update_group_AAD(group)
+
+
+def put_user_AAD(document):
+    """"""Takes in a user object and checks if it exists in azure AD. Updates the
+    user if present. Throws error if user doesn't exist.""""""
+    user = document.data
+    headers = AUTH.check_token_GET(AUTH_TYPE)
+    if headers is not None:
+        if user.user_id:
+            user_id = user.user_id
+        else:
+            user_id = user.user_principal_name
+        url = f""{GRAPH_URL}/{GRAPH_VERSION}/users/{user_id}""
+        response = requests.get(url=url, headers=headers)
+        LOGGER.debug(response)
+        if response.status_code == 404:
+            # handle users created in sawtooth but not present in Azure AD.
+            LOGGER.warning(
+                ""%s User not in Azure AD. Aborting sync for user: %s"",
+                response.status_code,
+                user_id,
+            )
+            LOGGER.info(""Skipping user and removing from outbound queue..."")
+            delete_from_outbound_queue(document.id)
+            raise CustomError(""User not in Azure AD."")
+        update_user_AAD(user)",163,2018-11-08 01:24:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/231724991,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r231724991,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/452,https://github.com/hyperledger/sawtooth-next-directory/pull/452,"@nadiabahrami @jbobo I am challenging both of you to produce documentation from the internet stating that extracting this value into a function-scoped variable (per discussion about avoiding global NS and fact that constants don't exist in Py) is a Python antipattern. I am finding the contrary in their best practices docs:
https://docs.python-guide.org/writing/style/#idioms
See: ""Create an ignored variable"" and observe the cases that follow where (even single use) strings are assigned to variables having meaningful names. 
Re: Constant: One nice idea I saw, in addition, was to put it in a function ( eg getNextPageKey()) if mutability is the concern.",6c40df40c9269334b2d160139e1057dd75f095f0,2018-11-09 02:09:21,232124161,"@@ -177,14 +215,18 @@ def insert_user_to_db(users_dict):
 
 def initialize_aad_sync():
     """"""Initialize a sync with Azure Active Directory.""""""
+    LOGGER.info(""connecting to RethinkDB..."")
+    connect_to_db()
+    LOGGER.info(""Successfully connected to RethinkDB!"")
+
     LOGGER.info(""Inserting AAD data..."")
 
     LOGGER.info(""Getting Users..."")
     users = fetch_users()
     if users:
         insert_user_to_db(users)
-        while '@odata.nextLink' in users:
-            users = fetch_next_payload(users['@odata.nextLink'])
+        while ""@odata.nextLink"" in users:",,2018-11-09 02:09:21,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/232124161,https://github.com/hyperledger/sawtooth-next-directory/pull/452#discussion_r232124161,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/449,https://github.com/hyperledger/sawtooth-next-directory/pull/449,Should this be deleted or will it be for later use?,3f6b5af1d657f0ffb189f035913b803c23df4f56,2018-11-05 21:28:16,230918822,"@@ -42,13 +42,13 @@ import './Requests.css';
  */
 export class Requests extends Component {
 
-  componentDidMount () {
-    const { getPack, packId } = this.props;
+  // componentDidMount () {",,2018-11-05 23:03:26,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230918822,https://github.com/hyperledger/sawtooth-next-directory/pull/449#discussion_r230918822,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/449,https://github.com/hyperledger/sawtooth-next-directory/pull/449,It will be deleted. I can delete it now. ,3f6b5af1d657f0ffb189f035913b803c23df4f56,2018-11-05 23:01:44,230946603,"@@ -42,13 +42,13 @@ import './Requests.css';
  */
 export class Requests extends Component {
 
-  componentDidMount () {
-    const { getPack, packId } = this.props;
+  // componentDidMount () {",,2018-11-05 23:03:26,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230946603,https://github.com/hyperledger/sawtooth-next-directory/pull/449#discussion_r230946603,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/449,https://github.com/hyperledger/sawtooth-next-directory/pull/449,Corrected.,3f6b5af1d657f0ffb189f035913b803c23df4f56,2018-11-05 23:04:18,230947201,"@@ -42,13 +42,13 @@ import './Requests.css';
  */
 export class Requests extends Component {
 
-  componentDidMount () {
-    const { getPack, packId } = this.props;
+  // componentDidMount () {",,2018-11-05 23:04:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230947201,https://github.com/hyperledger/sawtooth-next-directory/pull/449#discussion_r230947201,pgobin
https://github.com/hyperledger/sawtooth-next-directory/pull/447,https://github.com/hyperledger/sawtooth-next-directory/pull/447,Please remove,a8021f2a961022e01b1f7c295d8ef09031f8e427,2018-11-05 19:00:19,230871472,"@@ -139,20 +175,34 @@ def insert_user_to_db(users_dict):
 
 def initialize_aad_sync():
     """"""Initialize a sync with Azure Active Directory.""""""
-    print(""Inserting AAD data..."")
+    LOGGER.info(""Inserting AAD data..."")
 
-    print(""Getting Users..."")
+    LOGGER.info(""Getting Users..."")
     users = fetch_users()
-    insert_user_to_db(users)
-    while '@odata.nextLink' in users:
-        users = get_next_payload(users['@odata.nextLink'])
+    if users:
         insert_user_to_db(users)
-
-    print(""Getting Groups with Members..."")
+        while '@odata.nextLink' in users:
+            users = fetch_next_payload(users['@odata.nextLink'])
+            if users:
+                insert_user_to_db(users)
+            else:
+                break
+        LOGGER.info(""Initial user upload complete :)"")
+        print(""Initial user upload complete! :)"")",,2018-11-05 19:34:55,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230871472,https://github.com/hyperledger/sawtooth-next-directory/pull/447#discussion_r230871472,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/447,https://github.com/hyperledger/sawtooth-next-directory/pull/447,Remove,a8021f2a961022e01b1f7c295d8ef09031f8e427,2018-11-05 19:00:39,230871605,"@@ -139,20 +175,34 @@ def insert_user_to_db(users_dict):
 
 def initialize_aad_sync():
     """"""Initialize a sync with Azure Active Directory.""""""
-    print(""Inserting AAD data..."")
+    LOGGER.info(""Inserting AAD data..."")
 
-    print(""Getting Users..."")
+    LOGGER.info(""Getting Users..."")
     users = fetch_users()
-    insert_user_to_db(users)
-    while '@odata.nextLink' in users:
-        users = get_next_payload(users['@odata.nextLink'])
+    if users:
         insert_user_to_db(users)
-
-    print(""Getting Groups with Members..."")
+        while '@odata.nextLink' in users:
+            users = fetch_next_payload(users['@odata.nextLink'])
+            if users:
+                insert_user_to_db(users)
+            else:
+                break
+        LOGGER.info(""Initial user upload complete :)"")
+        print(""Initial user upload complete! :)"")
+    else:
+        LOGGER.info(""An error occurred when uploading users.  Please check the logs."")
+
+    LOGGER.info(""Getting Groups with Members..."")
     groups = fetch_groups_with_members()
-    insert_group_to_db(groups)
-    while '@odata.nextLink' in groups:
-        groups = get_next_payload(groups['@odata.nextLink'])
+    if groups:
         insert_group_to_db(groups)
-
-    print(""User_upload_complete! :)"")
+        while '@odata.nextLink' in groups:
+            groups = fetch_next_payload(groups['@odata.nextLink'])
+            if groups:
+                insert_group_to_db(groups)
+            else:
+                break
+        LOGGER.info(""Initial group upload complete :)"")
+        print(""Initial group upload complete! :)"")",,2018-11-05 19:34:55,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230871605,https://github.com/hyperledger/sawtooth-next-directory/pull/447#discussion_r230871605,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,Please remove this comment,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 04:57:20,230545244,"@@ -76,10 +77,34 @@ def make(self, object_id):
     def make_addresses(self, message, signer_keypair):
         raise NotImplementedError(""Class must implement this method"")
 
-    def make_payload(self, message, signer_keypair=None):
-        """"""Make a payload for the given message type""""""
+    def base_validate(self, message, signer=None):
         if not isinstance(message, self.message_proto):
             raise TypeError(""Expected message to be {}"".format(self.message_proto))
+        if (
+            signer is not None
+            and not isinstance(signer, Key)
+            and not (isinstance(signer, str) and PUBLIC_KEY_PATTERN.match(signer))
+        ):
+            raise TypeError(""Expected signer to be a keypair or a public key"")
+        if isinstance(signer, Key):
+            signer = signer.public_key
+        return signer
+
+    def base_validate_state(self, state, message, signer):
+        if signer is None:
+            raise ValueError(""Signer is required"")
+        if not isinstance(signer, str) and PUBLIC_KEY_PATTERN.match(signer):
+            raise TypeError(""Expected signer to be a public key"")
+        if state is None:
+            raise ValueError(""State is required"")
+
+    def validate(self, message, signer=None):
+        signer = self.base_validate(message=message, signer=signer)
+        # raise NotImplementedError(""Class must implement this method"")",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230545244,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230545244,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,"What is this? Why is it called walk_filter?

Would this work for naming?: 

is_class_in_package(value)
    return str(type(value)).startswith(PREFIX_CLASS_IN_COMMON_PKG)
",0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 05:04:23,230545350,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def walk_filter(value):",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230545350,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230545350,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,"Since the name is has[...], I would assume by looking at this function that it would return a boolean (similar to the way hasattr does). However, it returns either the result of getattr(), or None. 

Please name it as such. Maybe something like 'get_attr_or_none(value, attr)' 
or attr() to align with message_type_name() below",0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 05:14:22,230545478,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def walk_filter(value):
+    return str(type(value)).startswith(""<class 'rbac.common."")
+
+
+def hasgetattr(value, attrib):",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230545478,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230545478,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,Please remove or uncomment the log statement.,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 05:25:23,230545628,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def walk_filter(value):
+    return str(type(value)).startswith(""<class 'rbac.common."")
+
+
+def hasgetattr(value, attrib):
+    if hasattr(value, attrib):
+        return getattr(value, attrib)
+    return None
+
+
+def message_type_name(message_type):
+    items = RBACPayload.MessageType.DESCRIPTOR.values_by_name.items()
+    # return items[message_type][0] # breaks on OSX and/or Python 3.7
+    for (key, value) in items:
+        if value == message_type:
+            return key
+    return None
 
 
 class RBACManager:
     def __init__(self):
         self.user = UserManager()
         self.role = RoleManager()
+        self.task = TaskManager()
+        self.handlers = {}
+        self.walk_handlers(self, ""rbac"")
+
+    def walk_handlers(self, node, path):
+        props = [
+            name
+            for (name, value) in inspect.getmembers(node, walk_filter)
+            if not name.startswith(""__"")
+        ]
+        for prop in props:
+            new_path = path + ""."" + prop
+            value = getattr(node, prop)
+            message_type = hasgetattr(value, ""message_type"")
+            apply = hasgetattr(value, ""apply"")
+            if message_type is not None:
+                self.register_handler(new_path, message_type, apply)
+            self.walk_handlers(value, new_path)
+
+    def register_handler(self, path, message_type, apply):
+        if message_type in self.handlers:
+            raise KeyError(
+                ""{} tried to register message {} that was already registered"".format(
+                    path, message_type_name(message_type)
+                )
+            )
+
+        if apply is None:
+            return  # LOGGER.warning('%s message has no apply handler at %s', message_type_name(message_type), path)",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230545628,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230545628,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,Should this be a private function (ie __walk_handlers)?,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 05:31:06,230545689,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def walk_filter(value):
+    return str(type(value)).startswith(""<class 'rbac.common."")
+
+
+def hasgetattr(value, attrib):
+    if hasattr(value, attrib):
+        return getattr(value, attrib)
+    return None
+
+
+def message_type_name(message_type):
+    items = RBACPayload.MessageType.DESCRIPTOR.values_by_name.items()
+    # return items[message_type][0] # breaks on OSX and/or Python 3.7
+    for (key, value) in items:
+        if value == message_type:
+            return key
+    return None
 
 
 class RBACManager:
     def __init__(self):
         self.user = UserManager()
         self.role = RoleManager()
+        self.task = TaskManager()
+        self.handlers = {}
+        self.walk_handlers(self, ""rbac"")
+
+    def walk_handlers(self, node, path):",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230545689,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230545689,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,"Are we going to ever need this level of granularity? I am confused about marking tests by domain entity as well as interleaving unit and integration tests in the same file.

Generally, I prefer unit tests in one location, integration tests in another, e2es..., smoke..., perf.. Doing so consolidates the setup and teardown fixturing that increases in complexity alongside the type of test.

Regarding test markers: I worry that too many markers/annotations adds confusion rather than keeps things simple. The pathing of the directories will reveal domain entity coverage in coverage reports, and I wonder how one would mark a teast touching users, tasks, and roles.

",0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 05:41:14,230545822,"@@ -0,0 +1,153 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import pytest
+import logging
+
+from rbac.common import protobuf
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.user.user_manager import UserManager
+from rbac.common.user.manager import Manager
+from rbac.common.user.reject_manager import RejectUpdateUserManager
+from tests.rbac.common.manager.test_base import TestBase
+
+LOGGER = logging.getLogger(__name__)
+
+
+@pytest.mark.user",29,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230545822,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230545822,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,resolved,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 20:14:45,230566615,"@@ -76,10 +77,34 @@ def make(self, object_id):
     def make_addresses(self, message, signer_keypair):
         raise NotImplementedError(""Class must implement this method"")
 
-    def make_payload(self, message, signer_keypair=None):
-        """"""Make a payload for the given message type""""""
+    def base_validate(self, message, signer=None):
         if not isinstance(message, self.message_proto):
             raise TypeError(""Expected message to be {}"".format(self.message_proto))
+        if (
+            signer is not None
+            and not isinstance(signer, Key)
+            and not (isinstance(signer, str) and PUBLIC_KEY_PATTERN.match(signer))
+        ):
+            raise TypeError(""Expected signer to be a keypair or a public key"")
+        if isinstance(signer, Key):
+            signer = signer.public_key
+        return signer
+
+    def base_validate_state(self, state, message, signer):
+        if signer is None:
+            raise ValueError(""Signer is required"")
+        if not isinstance(signer, str) and PUBLIC_KEY_PATTERN.match(signer):
+            raise TypeError(""Expected signer to be a public key"")
+        if state is None:
+            raise ValueError(""State is required"")
+
+    def validate(self, message, signer=None):
+        signer = self.base_validate(message=message, signer=signer)
+        # raise NotImplementedError(""Class must implement this method"")",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230566615,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230566615,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,changed to ```_only_rbac_common_```,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 20:15:11,230566628,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def walk_filter(value):",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230566628,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230566628,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,changed to ```getattr_or_none```,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 20:15:42,230566643,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def walk_filter(value):
+    return str(type(value)).startswith(""<class 'rbac.common."")
+
+
+def hasgetattr(value, attrib):",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230566643,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230566643,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,resolved,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 20:15:49,230566646,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def walk_filter(value):
+    return str(type(value)).startswith(""<class 'rbac.common."")
+
+
+def hasgetattr(value, attrib):
+    if hasattr(value, attrib):
+        return getattr(value, attrib)
+    return None
+
+
+def message_type_name(message_type):
+    items = RBACPayload.MessageType.DESCRIPTOR.values_by_name.items()
+    # return items[message_type][0] # breaks on OSX and/or Python 3.7
+    for (key, value) in items:
+        if value == message_type:
+            return key
+    return None
 
 
 class RBACManager:
     def __init__(self):
         self.user = UserManager()
         self.role = RoleManager()
+        self.task = TaskManager()
+        self.handlers = {}
+        self.walk_handlers(self, ""rbac"")
+
+    def walk_handlers(self, node, path):
+        props = [
+            name
+            for (name, value) in inspect.getmembers(node, walk_filter)
+            if not name.startswith(""__"")
+        ]
+        for prop in props:
+            new_path = path + ""."" + prop
+            value = getattr(node, prop)
+            message_type = hasgetattr(value, ""message_type"")
+            apply = hasgetattr(value, ""apply"")
+            if message_type is not None:
+                self.register_handler(new_path, message_type, apply)
+            self.walk_handlers(value, new_path)
+
+    def register_handler(self, path, message_type, apply):
+        if message_type in self.handlers:
+            raise KeyError(
+                ""{} tried to register message {} that was already registered"".format(
+                    path, message_type_name(message_type)
+                )
+            )
+
+        if apply is None:
+            return  # LOGGER.warning('%s message has no apply handler at %s', message_type_name(message_type), path)",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230566646,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230566646,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,changed to ```_walk_handlers```,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 20:18:59,230566746,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def walk_filter(value):
+    return str(type(value)).startswith(""<class 'rbac.common."")
+
+
+def hasgetattr(value, attrib):
+    if hasattr(value, attrib):
+        return getattr(value, attrib)
+    return None
+
+
+def message_type_name(message_type):
+    items = RBACPayload.MessageType.DESCRIPTOR.values_by_name.items()
+    # return items[message_type][0] # breaks on OSX and/or Python 3.7
+    for (key, value) in items:
+        if value == message_type:
+            return key
+    return None
 
 
 class RBACManager:
     def __init__(self):
         self.user = UserManager()
         self.role = RoleManager()
+        self.task = TaskManager()
+        self.handlers = {}
+        self.walk_handlers(self, ""rbac"")
+
+    def walk_handlers(self, node, path):",,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230566746,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230566746,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,"Yes, being able to run only user tests is useful.
Difficult to mark? No, it is the folder they are in.

Unit denotes tests that only touch the library, do not require a running system and have no sideeffects. They can be run from pytest in the local ENV.

Integration denotes tests that require a running system and may only be run from docker.

If you have better terminology, suggest better terminology. Unit is being used in a broader sense than may be traditional.

The tests follow a logical flow. Having the unit tests before the integration tests that require the same function calls make it easier to debug failures, as the tests in a single file run in order, and unit tests will fail first if there is a flaw in the library versus another component.



",0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-03 20:24:55,230566918,"@@ -0,0 +1,153 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import pytest
+import logging
+
+from rbac.common import protobuf
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.user.user_manager import UserManager
+from rbac.common.user.manager import Manager
+from rbac.common.user.reject_manager import RejectUpdateUserManager
+from tests.rbac.common.manager.test_base import TestBase
+
+LOGGER = logging.getLogger(__name__)
+
+
+@pytest.mark.user",29,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230566918,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230566918,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,Very well. We can revisit tests later if/when need to reorg comes up. Most important is that they are being written in the first place.,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-05 17:17:13,230836574,"@@ -0,0 +1,153 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import pytest
+import logging
+
+from rbac.common import protobuf
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.user.user_manager import UserManager
+from rbac.common.user.manager import Manager
+from rbac.common.user.reject_manager import RejectUpdateUserManager
+from tests.rbac.common.manager.test_base import TestBase
+
+LOGGER = logging.getLogger(__name__)
+
+
+@pytest.mark.user",29,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230836574,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230836574,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,Can you add docstrings to these functions/classes?,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-05 18:14:55,230856017,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def _only_rbac_common_(value):",16,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230856017,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230856017,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,Docstrings what is this function doing?,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-05 18:15:23,230856152,"@@ -101,7 +102,29 @@ def make_addresses(self, message, signer_keypair=None):
         outputs = inputs
         return inputs, outputs
 
-    def new_state(self, state, message, object_id, target_id=None):
+    def validate(self, message, signer=None, state=None):",26,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230856152,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230856152,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,Docstrings what is this function doing?,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-05 18:15:30,230856196,"@@ -101,7 +102,29 @@ def make_addresses(self, message, signer_keypair=None):
         outputs = inputs
         return inputs, outputs
 
-    def new_state(self, state, message, object_id, target_id=None):
+    def validate(self, message, signer=None, state=None):
+        signer = self.base_validate(message=message, signer=signer)
+        if len(message.name) < 5:
+            raise ValueError(""Users must have names longer than 4 characters"")
+        if message.manager_id is not None:
+            if message.user_id == message.manager_id:
+                raise ValueError(""User cannot be their own manager"")
+        if signer is not None:
+            if signer not in [message.user_id, message.manager_id]:
+                raise ValueError(""Signer must be the user or their manager"")
+        if state is not None:
+            self.validate_state(state=state, message=message, signer=signer)
+
+    def validate_state(self, state, message, signer):",40,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230856196,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230856196,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,resolved,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-06 00:11:51,230961162,"@@ -101,7 +102,29 @@ def make_addresses(self, message, signer_keypair=None):
         outputs = inputs
         return inputs, outputs
 
-    def new_state(self, state, message, object_id, target_id=None):
+    def validate(self, message, signer=None, state=None):",26,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230961162,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230961162,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,resolved,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-06 00:11:56,230961181,"@@ -101,7 +102,29 @@ def make_addresses(self, message, signer_keypair=None):
         outputs = inputs
         return inputs, outputs
 
-    def new_state(self, state, message, object_id, target_id=None):
+    def validate(self, message, signer=None, state=None):
+        signer = self.base_validate(message=message, signer=signer)
+        if len(message.name) < 5:
+            raise ValueError(""Users must have names longer than 4 characters"")
+        if message.manager_id is not None:
+            if message.user_id == message.manager_id:
+                raise ValueError(""User cannot be their own manager"")
+        if signer is not None:
+            if signer not in [message.user_id, message.manager_id]:
+                raise ValueError(""Signer must be the user or their manager"")
+        if state is not None:
+            self.validate_state(state=state, message=message, signer=signer)
+
+    def validate_state(self, state, message, signer):",40,2018-11-06 00:20:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230961181,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230961181,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/436,https://github.com/hyperledger/sawtooth-next-directory/pull/436,resolved,0d6a5cecd5eb0f0845c88deb61b101b771017848,2018-11-06 00:20:50,230962789,"@@ -13,11 +13,90 @@
 # limitations under the License.
 # -----------------------------------------------------------------------------
 
+import logging
+import inspect
+
+from sawtooth_sdk.processor.exceptions import InvalidTransaction
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.user.user_manager import UserManager
 from rbac.common.role.role_manager import RoleManager
+from rbac.common.task.task_manager import TaskManager
+
+LOGGER = logging.getLogger(__name__)
+
+
+def _only_rbac_common_(value):",16,2018-11-06 00:20:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230962789,https://github.com/hyperledger/sawtooth-next-directory/pull/436#discussion_r230962789,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/435,https://github.com/hyperledger/sawtooth-next-directory/pull/435,Have you checked this for listener compatibility with rethinkdb at runtime? I have to down-rev it after encountering issues with an added arg.,c215a41edab97ef0d0d24cabe2d013a893eeb2e4,2018-11-02 23:50:59,230535291,"@@ -20,4 +20,4 @@ pytest-cov==2.6.0
 grpcio-tools==1.15.0
 cryptography==2.3.1
 ldap3==2.5.1
-tornado==4.5.3
+tornado==5.1.1",,2018-11-03 00:17:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230535291,https://github.com/hyperledger/sawtooth-next-directory/pull/435#discussion_r230535291,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/435,https://github.com/hyperledger/sawtooth-next-directory/pull/435,"If we really don't need these, then the lines can be deleted.",c215a41edab97ef0d0d24cabe2d013a893eeb2e4,2018-11-02 23:53:49,230535559,"@@ -72,7 +72,7 @@ services:
       - LDAP_PASS=${LDAP_PASS}
     depends_on:
       - ledger-sync
-      - rethink
+      # - rethink",,2018-11-03 00:17:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230535559,https://github.com/hyperledger/sawtooth-next-directory/pull/435#discussion_r230535559,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/435,https://github.com/hyperledger/sawtooth-next-directory/pull/435,What is the purpose of this queue? I am asking in hopes of keeping the names making sense as more are added. Should it be queue_outbound_changelog?,c215a41edab97ef0d0d24cabe2d013a893eeb2e4,2018-11-02 23:55:25,230535728,"@@ -83,6 +83,9 @@ def setup_db(host, port, name):
         LOGGER.info('Creating table: queue_outbound')
         r.db(name).table_create('queue_outbound').run(conn)
 
+        LOGGER.info('Creating table: queue_outbound_complete')
+        r.db(name).table_create('queue_outbound_complete').run(conn)",,2018-11-03 00:17:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230535728,https://github.com/hyperledger/sawtooth-next-directory/pull/435#discussion_r230535728,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/435,https://github.com/hyperledger/sawtooth-next-directory/pull/435,"my mistake, I'll rebase",c215a41edab97ef0d0d24cabe2d013a893eeb2e4,2018-11-02 23:57:31,230535904,"@@ -72,7 +72,7 @@ services:
       - LDAP_PASS=${LDAP_PASS}
     depends_on:
       - ledger-sync
-      - rethink
+      # - rethink",,2018-11-03 00:17:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230535904,https://github.com/hyperledger/sawtooth-next-directory/pull/435#discussion_r230535904,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/435,https://github.com/hyperledger/sawtooth-next-directory/pull/435,that was after running pipreqs. I'll change and rebase,c215a41edab97ef0d0d24cabe2d013a893eeb2e4,2018-11-02 23:57:49,230535929,"@@ -20,4 +20,4 @@ pytest-cov==2.6.0
 grpcio-tools==1.15.0
 cryptography==2.3.1
 ldap3==2.5.1
-tornado==4.5.3
+tornado==5.1.1",,2018-11-03 00:17:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230535929,https://github.com/hyperledger/sawtooth-next-directory/pull/435#discussion_r230535929,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/435,https://github.com/hyperledger/sawtooth-next-directory/pull/435,Makes sense. I'll change it,c215a41edab97ef0d0d24cabe2d013a893eeb2e4,2018-11-02 23:58:04,230535964,"@@ -83,6 +83,9 @@ def setup_db(host, port, name):
         LOGGER.info('Creating table: queue_outbound')
         r.db(name).table_create('queue_outbound').run(conn)
 
+        LOGGER.info('Creating table: queue_outbound_complete')
+        r.db(name).table_create('queue_outbound_complete').run(conn)",,2018-11-03 00:17:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230535964,https://github.com/hyperledger/sawtooth-next-directory/pull/435#discussion_r230535964,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/435,https://github.com/hyperledger/sawtooth-next-directory/pull/435,Adam created an issue a while back saying we needed a changelog. This is a simple naive way to keep one for now until we can find a better solution and refactor.,c215a41edab97ef0d0d24cabe2d013a893eeb2e4,2018-11-03 00:06:38,230536720,"@@ -83,6 +83,9 @@ def setup_db(host, port, name):
         LOGGER.info('Creating table: queue_outbound')
         r.db(name).table_create('queue_outbound').run(conn)
 
+        LOGGER.info('Creating table: queue_outbound_complete')
+        r.db(name).table_create('queue_outbound_complete').run(conn)",,2018-11-03 00:17:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230536720,https://github.com/hyperledger/sawtooth-next-directory/pull/435#discussion_r230536720,jbobo
https://github.com/hyperledger/sawtooth-next-directory/pull/435,https://github.com/hyperledger/sawtooth-next-directory/pull/435,"This could be get_request_headers() and include the logic for known AUTH_TYPE logic (cert, secret). 
That way, the content becomes easier to test, and _check_token can be renamed to something describing the way it reloads an expired/absent access token (refresh_access_token, get_or_generate_access_token)... Whatever moves the code in the direction towards more self-description.",c215a41edab97ef0d0d24cabe2d013a893eeb2e4,2018-11-03 00:13:21,230537254,"@@ -82,3 +82,22 @@ def check_token(self, AUTH_TYPE):
                 ""Accept"": ""application/json"",
                 ""Host"": ""graph.microsoft.com"",
             }
+
+    def _check_token(self, AUTH_TYPE):
+        """"""check if Token exists and calls for then caches as a global variable 
+        if it does not""""""
+        if self.graph_token is None or not self._time_left():
+            response = self.get_token(AUTH_TYPE)
+            self.token_creation_timestamp = dt.datetime.now()
+            self.graph_token = response.json()[""access_token""]
+        if AUTH_TYPE.upper() == ""SECRET"":
+            return {""Authorization"": self.graph_token}
+        elif AUTH_TYPE.upper() == ""CERT"":
+            return {""Authorization"": self.graph_token, ""Host"": ""graph.microsoft.com""}
+
+    def check_token_POST(self, AUTH_TYPE):",,2018-11-03 00:17:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230537254,https://github.com/hyperledger/sawtooth-next-directory/pull/435#discussion_r230537254,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/435,https://github.com/hyperledger/sawtooth-next-directory/pull/435,"Sure, a table works as a makeshift changelog in the interim. We can redirect the stream later when we have an alternative logging solution in place.",c215a41edab97ef0d0d24cabe2d013a893eeb2e4,2018-11-03 00:17:59,230537585,"@@ -83,6 +83,9 @@ def setup_db(host, port, name):
         LOGGER.info('Creating table: queue_outbound')
         r.db(name).table_create('queue_outbound').run(conn)
 
+        LOGGER.info('Creating table: queue_outbound_complete')
+        r.db(name).table_create('queue_outbound_complete').run(conn)",,2018-11-03 00:17:59,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230537585,https://github.com/hyperledger/sawtooth-next-directory/pull/435#discussion_r230537585,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/432,https://github.com/hyperledger/sawtooth-next-directory/pull/432,"Change this line to: ""merge"": "">=1.2.1""",2bbca76342815c044c3aa94f981e5b3b8d1b0317,2018-11-02 22:10:54,230521965,"@@ -11686,6 +11683,14 @@
             ""ms"": ""2.0.0""
           }
         },
+        ""exec-sh"": {
+          ""version"": ""0.2.2"",
+          ""resolved"": ""https://registry.npmjs.org/exec-sh/-/exec-sh-0.2.2.tgz"",
+          ""integrity"": ""sha512-FIUCJz1RbuS0FKTdaAafAByGS0CPvU3R0MeHxgtl+djzCc//F8HakL8GzmVNZanasTbTAY/3DRFA0KpVqj/eAw=="",
+          ""requires"": {
+            ""merge"": ""^1.2.0""",43,2018-11-02 22:12:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230521965,https://github.com/hyperledger/sawtooth-next-directory/pull/432#discussion_r230521965,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/432,https://github.com/hyperledger/sawtooth-next-directory/pull/432,"""merge"": "">=1.2.1""",2bbca76342815c044c3aa94f981e5b3b8d1b0317,2018-11-02 22:11:38,230522077,"@@ -13773,6 +13778,14 @@
         ""minimist"": ""^1.2.0""
       },
       ""dependencies"": {
+        ""exec-sh"": {
+          ""version"": ""0.2.2"",
+          ""resolved"": ""https://registry.npmjs.org/exec-sh/-/exec-sh-0.2.2.tgz"",
+          ""integrity"": ""sha512-FIUCJz1RbuS0FKTdaAafAByGS0CPvU3R0MeHxgtl+djzCc//F8HakL8GzmVNZanasTbTAY/3DRFA0KpVqj/eAw=="",
+          ""requires"": {
+            ""merge"": ""^1.2.0""",76,2018-11-02 22:12:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230522077,https://github.com/hyperledger/sawtooth-next-directory/pull/432#discussion_r230522077,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/418,https://github.com/hyperledger/sawtooth-next-directory/pull/418,I think you meant to replace 3 with RETRY_INTERVAL_SECONDS_TABLE_READY,f21405bc863e2854857e4341e91db692f6bc6c97,2018-11-02 00:38:29,230242651,"@@ -26,19 +27,28 @@
 DB_PORT = 28015
 DB_NAME = ""rbac""
 DB_TABLE = 'queue_outbound'
+RETRY_INTERVAL_SECONDS_TABLE_READY = 3
 
 r.set_loop_type(""tornado"")
 
 
 @gen.coroutine
 def print_feed_change_data():
-    try:
-        connection = yield r.connect(DB_HOST, DB_PORT, DB_NAME)
-        feed = yield r.table(DB_TABLE).changes().run(connection)
-        while (yield feed.fetch_next()):
-            item = yield feed.next()
-            LOGGER.debug(item)
-    except r.ReqlRuntimeError as e:
-        LOGGER.error(
-            ""Rethink threw exception: %s"", str(e)
-        )
+    connected = False
+
+    while not connected:
+        try:
+            connection = yield r.connect(DB_HOST, DB_PORT, DB_NAME)
+            feed = yield r.table(DB_TABLE).changes().run(connection)
+            connected = True
+            while (yield feed.fetch_next()):
+                item = yield feed.next()
+                LOGGER.debug(item)
+        except r.ReqlRuntimeError as e:
+            LOGGER.info(
+                ""Attempt to connect to %s threw exception: %s. Retrying in %s seconds"",
+                DB_TABLE,
+                str(e),
+                RETRY_INTERVAL_SECONDS_TABLE_READY
+            )
+            time.sleep(3)",,2018-11-02 20:01:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230242651,https://github.com/hyperledger/sawtooth-next-directory/pull/418#discussion_r230242651,dcmiddle
https://github.com/hyperledger/sawtooth-next-directory/pull/418,https://github.com/hyperledger/sawtooth-next-directory/pull/418,D'oh! Fixed. Thanks!,f21405bc863e2854857e4341e91db692f6bc6c97,2018-11-02 20:01:13,230491860,"@@ -26,19 +27,28 @@
 DB_PORT = 28015
 DB_NAME = ""rbac""
 DB_TABLE = 'queue_outbound'
+RETRY_INTERVAL_SECONDS_TABLE_READY = 3
 
 r.set_loop_type(""tornado"")
 
 
 @gen.coroutine
 def print_feed_change_data():
-    try:
-        connection = yield r.connect(DB_HOST, DB_PORT, DB_NAME)
-        feed = yield r.table(DB_TABLE).changes().run(connection)
-        while (yield feed.fetch_next()):
-            item = yield feed.next()
-            LOGGER.debug(item)
-    except r.ReqlRuntimeError as e:
-        LOGGER.error(
-            ""Rethink threw exception: %s"", str(e)
-        )
+    connected = False
+
+    while not connected:
+        try:
+            connection = yield r.connect(DB_HOST, DB_PORT, DB_NAME)
+            feed = yield r.table(DB_TABLE).changes().run(connection)
+            connected = True
+            while (yield feed.fetch_next()):
+                item = yield feed.next()
+                LOGGER.debug(item)
+        except r.ReqlRuntimeError as e:
+            LOGGER.info(
+                ""Attempt to connect to %s threw exception: %s. Retrying in %s seconds"",
+                DB_TABLE,
+                str(e),
+                RETRY_INTERVAL_SECONDS_TABLE_READY
+            )
+            time.sleep(3)",,2018-11-02 20:01:13,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230491860,https://github.com/hyperledger/sawtooth-next-directory/pull/418#discussion_r230491860,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/410,https://github.com/hyperledger/sawtooth-next-directory/pull/410,Created #414 to replace all instances of print() with log statements,ba7b158918a23710d2760fd7d976cd190fcf225f,2018-11-01 18:15:11,230144318,"@@ -136,9 +144,15 @@ def initialize_aad_sync():
     print(""Getting Users..."")",16,2018-11-01 18:15:18,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/230144318,https://github.com/hyperledger/sawtooth-next-directory/pull/410#discussion_r230144318,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,What does this comment mean?,5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 06:45:17,229578588,"@@ -0,0 +1,75 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+
+from rbac.common.sawtooth.client_sync import ClientSync
+
+LOGGER = logging.getLogger(__name__)
+
+
+class BaseRelationship:
+    def __init__(self):
+        """"""Objects and methods shared across relationship libraries""""""
+        self.client = ClientSync()
+
+    @property
+    def name(self):
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def container_proto(self):
+        # return protobuf.role_state_pb2.RoleRelationshipContainer",,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229578588,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229578588,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,"Is there a more meaningful name that can be used here? 'check' sounds like 'validate' which usually throws an exception in a false state. Something like relationship_exists(), are_related(), has_relationship()?",5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 06:50:08,229579385,"@@ -0,0 +1,75 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+
+from rbac.common.sawtooth.client_sync import ClientSync
+
+LOGGER = logging.getLogger(__name__)
+
+
+class BaseRelationship:
+    def __init__(self):
+        """"""Objects and methods shared across relationship libraries""""""
+        self.client = ClientSync()
+
+    @property
+    def name(self):
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def container_proto(self):
+        # return protobuf.role_state_pb2.RoleRelationshipContainer
+        raise NotImplementedError(""Class must implement this property"")
+
+    def address(self, object_id, target_id):
+        raise NotImplementedError(""Class must implement this method"")
+
+    def check(self, object_id, target_id):",,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229579385,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229579385,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,Typo in 'appropriate',5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 06:52:30,229579793,"@@ -0,0 +1,84 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.crypto.keys import Key
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ConfirmAddRoleAdmin(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def message_type(self):
+        return protobuf.rbac_payload_pb2.RBACPayload.CONFIRM_ADD_ROLE_ADMINS
+
+    @property
+    def message_proto(self):
+        return protobuf.role_transaction_pb2.ConfirmAddRoleAdmin
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id):
+        """"""Make the blockchain address for the given message""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    # pylint: disable=arguments-differ, not-callable
+    def make(self, proposal_id, role_id, user_id, reason=None, metadata=None):
+        """"""Make the message""""""
+        return self.message_proto(
+            proposal_id=proposal_id, role_id=role_id, user_id=user_id, reason=reason
+        )
+
+    def make_addresses(self, message, signer_keypair):
+        """"""Makes the approporiate inputs & output addresses for the message""""""",,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229579793,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229579793,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,We should review the pylint rules we have in place soon rather than working around them,5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 06:56:40,229580507,"@@ -0,0 +1,83 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from uuid import uuid4
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposeAddRoleAdmin(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def message_type(self):
+        return protobuf.rbac_payload_pb2.RBACPayload.PROPOSE_ADD_ROLE_ADMINS
+
+    @property
+    def message_proto(self):
+        return protobuf.role_transaction_pb2.ProposeAddRoleAdmin
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id):
+        """"""Make the blockchain address for the given message""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    # pylint: disable=arguments-differ, not-callable",55,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229580507,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229580507,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,Typo in 'appropriate',5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 06:57:39,229580640,"@@ -0,0 +1,83 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from uuid import uuid4
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposeAddRoleAdmin(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def message_type(self):
+        return protobuf.rbac_payload_pb2.RBACPayload.PROPOSE_ADD_ROLE_ADMINS
+
+    @property
+    def message_proto(self):
+        return protobuf.role_transaction_pb2.ProposeAddRoleAdmin
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id):
+        """"""Make the blockchain address for the given message""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    # pylint: disable=arguments-differ, not-callable
+    def make(self, role_id, user_id, reason=None, metadata=None):
+        """"""Make the message""""""
+        return self.message_proto(
+            proposal_id=uuid4().hex,
+            role_id=role_id,
+            user_id=user_id,
+            reason=reason,
+            metadata=metadata,
+        )
+
+    def make_addresses(self, message, signer_keypair=None):
+        """"""Makes the approporiate inputs & output addresses for the message""""""",,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229580640,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229580640,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,"What is the purpose of this block of code? I see it duplicated across proposals, rejections... invoking name() on any of them will yield the same result (?)",5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 07:00:46,229581133,"@@ -0,0 +1,83 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from uuid import uuid4
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposeAddRoleMember(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""",31,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229581133,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229581133,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,This is another function that is copy-pasted in numerous places. Can it be consolidated into one location and only overridden when necessary?,5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 07:04:06,229581699,"@@ -0,0 +1,93 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class CreateRole(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""role""
+
+    @property
+    def names(self):
+        return self.name + ""_attributes""
+
+    @property
+    def message_type(self):
+        return RBACPayload.CREATE_ROLE
+
+    @property
+    def message_proto(self):
+        return protobuf.role_transaction_pb2.CreateRole
+
+    @property
+    def container_proto(self):
+        return protobuf.role_state_pb2.RoleAttributesContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.role_state_pb2.Role
+
+    @property
+    def message_fields_not_in_state(self):
+        """"""Fields that are on the message but not stored on the state object""""""
+        return [""owners"", ""admins""]
+
+    def address(self, object_id, target_id=None):",58,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229581699,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229581699,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,"The API path results in:
role.member.check(object_id=role_id, target_id=user_id)
role.admin.check(object_id=role_id, target_id=user_id)
role.owner.check(object_id=role_id, target_id=user_id)
",5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 15:53:38,229756131,"@@ -0,0 +1,75 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+
+from rbac.common.sawtooth.client_sync import ClientSync
+
+LOGGER = logging.getLogger(__name__)
+
+
+class BaseRelationship:
+    def __init__(self):
+        """"""Objects and methods shared across relationship libraries""""""
+        self.client = ClientSync()
+
+    @property
+    def name(self):
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def container_proto(self):
+        # return protobuf.role_state_pb2.RoleRelationshipContainer
+        raise NotImplementedError(""Class must implement this property"")
+
+    def address(self, object_id, target_id):
+        raise NotImplementedError(""Class must implement this method"")
+
+    def check(self, object_id, target_id):",,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229756131,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229756131,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,It's so the base class knows the identifier and container addresses.,5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 15:55:16,229756827,"@@ -0,0 +1,83 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from uuid import uuid4
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposeAddRoleMember(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""",31,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229756827,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229756827,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,"No, classes implement all properties and methods required by the base class.",5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 15:58:45,229758414,"@@ -0,0 +1,93 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class CreateRole(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""role""
+
+    @property
+    def names(self):
+        return self.name + ""_attributes""
+
+    @property
+    def message_type(self):
+        return RBACPayload.CREATE_ROLE
+
+    @property
+    def message_proto(self):
+        return protobuf.role_transaction_pb2.CreateRole
+
+    @property
+    def container_proto(self):
+        return protobuf.role_state_pb2.RoleAttributesContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.role_state_pb2.Role
+
+    @property
+    def message_fields_not_in_state(self):
+        """"""Fields that are on the message but not stored on the state object""""""
+        return [""owners"", ""admins""]
+
+    def address(self, object_id, target_id=None):",58,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229758414,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229758414,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,"Understood, but the purpose and behavior of the name is unclear since the example you does not include the output. How about:
if not has_relationship(source, target)",5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 15:59:03,229758550,"@@ -0,0 +1,75 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+
+from rbac.common.sawtooth.client_sync import ClientSync
+
+LOGGER = logging.getLogger(__name__)
+
+
+class BaseRelationship:
+    def __init__(self):
+        """"""Objects and methods shared across relationship libraries""""""
+        self.client = ClientSync()
+
+    @property
+    def name(self):
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def container_proto(self):
+        # return protobuf.role_state_pb2.RoleRelationshipContainer
+        raise NotImplementedError(""Class must implement this property"")
+
+    def address(self, object_id, target_id):
+        raise NotImplementedError(""Class must implement this method"")
+
+    def check(self, object_id, target_id):",,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229758550,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229758550,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,resolved,5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 16:02:44,229760212,"@@ -0,0 +1,83 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from uuid import uuid4
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ProposeAddRoleAdmin(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def message_type(self):
+        return protobuf.rbac_payload_pb2.RBACPayload.PROPOSE_ADD_ROLE_ADMINS
+
+    @property
+    def message_proto(self):
+        return protobuf.role_transaction_pb2.ProposeAddRoleAdmin
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id):
+        """"""Make the blockchain address for the given message""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    # pylint: disable=arguments-differ, not-callable
+    def make(self, role_id, user_id, reason=None, metadata=None):
+        """"""Make the message""""""
+        return self.message_proto(
+            proposal_id=uuid4().hex,
+            role_id=role_id,
+            user_id=user_id,
+            reason=reason,
+            metadata=metadata,
+        )
+
+    def make_addresses(self, message, signer_keypair=None):
+        """"""Makes the approporiate inputs & output addresses for the message""""""",,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229760212,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229760212,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,resolved,5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 16:02:57,229760298,"@@ -0,0 +1,84 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.crypto.keys import Key
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class ConfirmAddRoleAdmin(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""proposal""
+
+    @property
+    def message_type(self):
+        return protobuf.rbac_payload_pb2.RBACPayload.CONFIRM_ADD_ROLE_ADMINS
+
+    @property
+    def message_proto(self):
+        return protobuf.role_transaction_pb2.ConfirmAddRoleAdmin
+
+    @property
+    def container_proto(self):
+        return protobuf.proposal_state_pb2.ProposalsContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.proposal_state_pb2.Proposal
+
+    def address(self, object_id, target_id):
+        """"""Make the blockchain address for the given message""""""
+        return addresser.make_proposal_address(
+            object_id=object_id, related_id=target_id
+        )
+
+    # pylint: disable=arguments-differ, not-callable
+    def make(self, proposal_id, role_id, user_id, reason=None, metadata=None):
+        """"""Make the message""""""
+        return self.message_proto(
+            proposal_id=proposal_id, role_id=role_id, user_id=user_id, reason=reason
+        )
+
+    def make_addresses(self, message, signer_keypair):
+        """"""Makes the approporiate inputs & output addresses for the message""""""",,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229760298,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229760298,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,removed,5051744b515aef06fc2d07360e0b0412b0680c3b,2018-10-31 16:06:03,229761722,"@@ -0,0 +1,75 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+
+from rbac.common.sawtooth.client_sync import ClientSync
+
+LOGGER = logging.getLogger(__name__)
+
+
+class BaseRelationship:
+    def __init__(self):
+        """"""Objects and methods shared across relationship libraries""""""
+        self.client = ClientSync()
+
+    @property
+    def name(self):
+        raise NotImplementedError(""Class must implement this property"")
+
+    @property
+    def container_proto(self):
+        # return protobuf.role_state_pb2.RoleRelationshipContainer",,2018-10-31 23:26:51,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229761722,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229761722,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,"I understand that, but why require subclasses to implement methods when their core logic is identical? Is it not possible to implement shared logic in the base class and override only when necessary in the subclasses?

More of an implementation question that we can discuss later though.",5051744b515aef06fc2d07360e0b0412b0680c3b,2018-11-01 01:03:37,229913499,"@@ -0,0 +1,93 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class CreateRole(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""role""
+
+    @property
+    def names(self):
+        return self.name + ""_attributes""
+
+    @property
+    def message_type(self):
+        return RBACPayload.CREATE_ROLE
+
+    @property
+    def message_proto(self):
+        return protobuf.role_transaction_pb2.CreateRole
+
+    @property
+    def container_proto(self):
+        return protobuf.role_state_pb2.RoleAttributesContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.role_state_pb2.Role
+
+    @property
+    def message_fields_not_in_state(self):
+        """"""Fields that are on the message but not stored on the state object""""""
+        return [""owners"", ""admins""]
+
+    def address(self, object_id, target_id=None):",58,2018-11-01 01:56:36,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229913499,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229913499,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,This line can be removed,5051744b515aef06fc2d07360e0b0412b0680c3b,2018-11-01 01:29:42,229916401,"@@ -0,0 +1,93 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class CreateTask(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""task""
+
+    @property
+    def names(self):
+        return self.name + ""_attributes""
+
+    @property
+    def message_type(self):
+        return RBACPayload.CREATE_TASK
+
+    @property
+    def message_proto(self):
+        return protobuf.task_transaction_pb2.CreateTask
+
+    @property
+    def container_proto(self):
+        return protobuf.task_state_pb2.TaskAttributesContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.task_state_pb2.Task
+
+    @property
+    def message_fields_not_in_state(self):
+        """"""Fields that are on the message but not stored on the state object""""""
+        return [""owners"", ""admins""]
+
+    def address(self, object_id, target_id=None):
+        """"""Make an address for the given task_id""""""
+        return addresser.make_task_attributes_address(task_id=object_id)
+
+    # pylint: disable=arguments-differ, not-callable
+    def make(self, task_id, name, metadata=None, owners=None, admins=None):
+        """"""Make a message""""""
+        return self.message_proto(
+            task_id=task_id, name=name, metadata=metadata, owners=owners, admins=admins
+        )
+
+    def make_addresses(self, message, signer_keypair=None):
+        """"""Makes the appropriate inputs & output addresses for the message type""""""
+        if not isinstance(message, self.message_proto):
+            raise TypeError(""Expected message to be {}"".format(self.message_proto))
+
+        inputs = [
+            # addresser.make_sysadmin_members_address(signer_public_key),",75,2018-11-01 01:55:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229916401,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229916401,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/398,https://github.com/hyperledger/sawtooth-next-directory/pull/398,"There is a base class that implements common functionality. Overrides do differ. Some do share the same override values. Adding several additional classes in an intermediate layer to reduce a few methods isn't worth the cognitive load.
",5051744b515aef06fc2d07360e0b0412b0680c3b,2018-11-01 02:01:42,229919969,"@@ -0,0 +1,93 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.addressing import addresser
+from rbac.common import protobuf
+from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
+from rbac.common.manager.base_message import BaseMessage
+
+LOGGER = logging.getLogger(__name__)
+
+
+class CreateTask(BaseMessage):
+    def __init__(self):
+        BaseMessage.__init__(self)
+
+    @property
+    def name(self):
+        return ""task""
+
+    @property
+    def names(self):
+        return self.name + ""_attributes""
+
+    @property
+    def message_type(self):
+        return RBACPayload.CREATE_TASK
+
+    @property
+    def message_proto(self):
+        return protobuf.task_transaction_pb2.CreateTask
+
+    @property
+    def container_proto(self):
+        return protobuf.task_state_pb2.TaskAttributesContainer
+
+    @property
+    def state_proto(self):
+        return protobuf.task_state_pb2.Task
+
+    @property
+    def message_fields_not_in_state(self):
+        """"""Fields that are on the message but not stored on the state object""""""
+        return [""owners"", ""admins""]
+
+    def address(self, object_id, target_id=None):
+        """"""Make an address for the given task_id""""""
+        return addresser.make_task_attributes_address(task_id=object_id)
+
+    # pylint: disable=arguments-differ, not-callable
+    def make(self, task_id, name, metadata=None, owners=None, admins=None):
+        """"""Make a message""""""
+        return self.message_proto(
+            task_id=task_id, name=name, metadata=metadata, owners=owners, admins=admins
+        )
+
+    def make_addresses(self, message, signer_keypair=None):
+        """"""Makes the appropriate inputs & output addresses for the message type""""""
+        if not isinstance(message, self.message_proto):
+            raise TypeError(""Expected message to be {}"".format(self.message_proto))
+
+        inputs = [
+            # addresser.make_sysadmin_members_address(signer_public_key),",75,2018-11-01 02:01:43,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229919969,https://github.com/hyperledger/sawtooth-next-directory/pull/398#discussion_r229919969,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,"bin/build doesn't build docker containers, and requires flags.

bin/start -b starts the docker containers with the --build option.
",b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 01:04:43,229536979,"@@ -203,13 +208,15 @@ hanging in the legacy UI and stack traces from rbac_server:
 
 To work around this situation, shut down the application, delete all containers and images, and rebuild/deploy:
 
-    docker-compose down
+    bin/stop
 
     docker rm -vf $(docker ps -a -q)
 
     docker rmi -f $(docker images -a -q)
 
-    docker-compose up --build
+    bin/build",,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229536979,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229536979,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,Looks like Azure has been added twice.,b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 01:06:20,229537169,"@@ -57,7 +57,25 @@ services:
       - ledger-sync
     command: ./bin/rbac-providers-azure
 
-  ldap-rbac-provider:
+  rbac-provider-azure:",5,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229537169,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229537169,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,Non-shared dependencies go outside the common block where they were before this change.,b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 01:06:58,229537254,"@@ -33,16 +33,13 @@ RUN pip3 install \
         grpcio-tools \
         itsdangerous \
         rethinkdb \
-        sanic==0.7.0
+        sanic==0.7.0 \
+        tornado==4.5.3 \",,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229537254,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229537254,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,"Volume mounts, not copy.",b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 01:07:16,229537296,"@@ -33,16 +33,13 @@ RUN pip3 install \
         grpcio-tools \
         itsdangerous \
         rethinkdb \
-        sanic==0.7.0
+        sanic==0.7.0 \
+        tornado==4.5.3 \
+        ldap3 \
+        pyasn1==0.4.4
 
 WORKDIR /project/hyperledger-rbac
-# -----------------------------------------------------------------------------
-# End base docker image config for Hyperledger RBAC Next Directory
-# -----------------------------------------------------------------------------
 
-RUN pip3 install \
-        rethinkdb \
-        ldap3 \
-        pyasn1==0.4.4
+COPY . .",,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229537296,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229537296,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,"LOGGER, not print.",b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 01:07:37,229537336,"@@ -107,9 +107,9 @@ def insert_to_db(data_dict, data_type):
             ""timestamp"": datetime.now().replace(tzinfo=timezone.utc).isoformat(),
             ""provider_id"": LDAP_DC
         }
-        r.table(""inbound_queue"").insert(inbound_entry).run()
+        r.table(""queue_inbound"").insert(inbound_entry).run()
 
-    print(""Inserted %s records into inbound_queue."" % len(data_dict))
+    print(""Inserted %s records into queue_inbound."" % len(data_dict))",,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229537336,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229537336,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,"duplicate of lines above ln 70, 71",b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 02:05:15,229544132,"@@ -64,12 +67,18 @@ def setup_db(host, port, name):
         r.db(name).table_create('users').run(conn)
         r.db(name).table('users').index_create('user_id').run(conn)
 
-        print('Creating table: inbound_queue')
-        r.db(name).table_create('inbound_queue').run(conn)
+        print('Creating table: queue_inbound')
+        r.db(name).table_create('queue_inbound').run(conn)
 
         print('Creating table: sync_tracker')
         r.db(name).table_create('sync_tracker').run(conn)
 
+        print('Creating table: queue_inbound')",,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229544132,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229544132,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,Removed,b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 06:05:51,229572678,"@@ -57,7 +57,25 @@ services:
       - ledger-sync
     command: ./bin/rbac-providers-azure
 
-  ldap-rbac-provider:
+  rbac-provider-azure:",5,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229572678,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229572678,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,Done,b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 06:12:13,229573550,"@@ -33,16 +33,13 @@ RUN pip3 install \
         grpcio-tools \
         itsdangerous \
         rethinkdb \
-        sanic==0.7.0
+        sanic==0.7.0 \
+        tornado==4.5.3 \
+        ldap3 \
+        pyasn1==0.4.4
 
 WORKDIR /project/hyperledger-rbac
-# -----------------------------------------------------------------------------
-# End base docker image config for Hyperledger RBAC Next Directory
-# -----------------------------------------------------------------------------
 
-RUN pip3 install \
-        rethinkdb \
-        ldap3 \
-        pyasn1==0.4.4
+COPY . .",,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229573550,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229573550,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,"Ah, Moved them back with a meaningful comment explaining why we do this",b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 06:12:16,229573563,"@@ -33,16 +33,13 @@ RUN pip3 install \
         grpcio-tools \
         itsdangerous \
         rethinkdb \
-        sanic==0.7.0
+        sanic==0.7.0 \
+        tornado==4.5.3 \",,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229573563,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229573563,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,"Meh why not, as long as I'm in this file. Replaced usages of print with logger",b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 06:20:01,229574667,"@@ -107,9 +107,9 @@ def insert_to_db(data_dict, data_type):
             ""timestamp"": datetime.now().replace(tzinfo=timezone.utc).isoformat(),
             ""provider_id"": LDAP_DC
         }
-        r.table(""inbound_queue"").insert(inbound_entry).run()
+        r.table(""queue_inbound"").insert(inbound_entry).run()
 
-    print(""Inserted %s records into inbound_queue."" % len(data_dict))
+    print(""Inserted %s records into queue_inbound."" % len(data_dict))",,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229574667,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229574667,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/397,https://github.com/hyperledger/sawtooth-next-directory/pull/397,Removed duplicate. Replaced usages of print() with logger,b97fc2cf93bd7002d1e64f6cc946c3171f954ffe,2018-10-31 06:23:20,229575051,"@@ -64,12 +67,18 @@ def setup_db(host, port, name):
         r.db(name).table_create('users').run(conn)
         r.db(name).table('users').index_create('user_id').run(conn)
 
-        print('Creating table: inbound_queue')
-        r.db(name).table_create('inbound_queue').run(conn)
+        print('Creating table: queue_inbound')
+        r.db(name).table_create('queue_inbound').run(conn)
 
         print('Creating table: sync_tracker')
         r.db(name).table_create('sync_tracker').run(conn)
 
+        print('Creating table: queue_inbound')",,2018-10-31 17:12:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229575051,https://github.com/hyperledger/sawtooth-next-directory/pull/397#discussion_r229575051,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/377,https://github.com/hyperledger/sawtooth-next-directory/pull/377,doc strings are missing,35e16c64c891cdca907f70b01451de58b71505c7,2018-10-30 19:56:37,229462593,"@@ -0,0 +1,41 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+
+from sawtooth_sdk.messaging.future import FutureTimeoutError
+from sawtooth_sdk.processor.exceptions import InternalError
+
+TIMEOUT_SECONDS = 2
+ERROR_MESSAGE_TIMEOUT = ""Timeout after %s seconds during get from state""
+
+LOGGER = logging.getLogger(__name__)
+
+
+class StateClient:
+    def get_address(self, state, address):",28,2018-10-30 20:04:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229462593,https://github.com/hyperledger/sawtooth-next-directory/pull/377#discussion_r229462593,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/377,https://github.com/hyperledger/sawtooth-next-directory/pull/377,doc strings,35e16c64c891cdca907f70b01451de58b71505c7,2018-10-30 19:56:53,229462690,"@@ -0,0 +1,41 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+
+from sawtooth_sdk.messaging.future import FutureTimeoutError
+from sawtooth_sdk.processor.exceptions import InternalError
+
+TIMEOUT_SECONDS = 2
+ERROR_MESSAGE_TIMEOUT = ""Timeout after %s seconds during get from state""
+
+LOGGER = logging.getLogger(__name__)
+
+
+class StateClient:
+    def get_address(self, state, address):
+        try:
+            return state.get_state(addresses=[address], timeout=TIMEOUT_SECONDS)
+        except FutureTimeoutError:
+            raise InternalError(ERROR_MESSAGE_TIMEOUT, TIMEOUT_SECONDS)
+
+    def set_address(self, state, address, container):",34,2018-10-30 20:04:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229462690,https://github.com/hyperledger/sawtooth-next-directory/pull/377#discussion_r229462690,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/357,https://github.com/hyperledger/sawtooth-next-directory/pull/357,"Please separate data transformation from data sync. That is: Move the transformations into their own python transformer file. Doing so should make this block of code easier to read by abstracting the regex and string arithmetic behind functions having meaningful names, and it will make both the transforms and sync code easier to test individually.",a26509aace139b8bbffa3639129e772930dd1689,2018-10-28 20:09:15,228763043,"@@ -0,0 +1,138 @@
+#! /usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# http://docs.python-requests.org/en/master/
+
+import json
+import os
+from datetime import datetime, timezone
+from threading import Timer
+
+import ldap3
+import rethinkdb as r
+from ldap3 import ALL, Connection, Server
+from rbac.providers.inbound_filters import (inbound_group_filter,
+                                            inbound_user_filter)
+
+DEFAULT_CONFIG = {
+    ""DB_HOST"": ""rethink"",
+    ""DB_PORT"": 28015,
+    ""DB_NAME"": ""rbac"",
+    ""DELTA_SYNC_INTERVAL_SECONDS"": 3600.0,
+}
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+
+LDAP_DC = os.environ.get(""LDAP_DC"")
+LDAP_SERVER = os.environ.get(""LDAP_SERVER"")
+LDAP_USER = os.environ.get(""LDAP_USER"")
+LDAP_PASS = os.environ.get(""LDAP_PASS"")
+DELTA_SYNC_INTERVAL_SECONDS = getenv(""DELTA_SYNC_INTERVAL_SECONDS"", DEFAULT_CONFIG[""DELTA_SYNC_INTERVAL_SECONDS""])
+
+
+def fetch_ldap_data(sync_type, data_type):
+    """"""
+        Call to get entries for all (Users | Groups) in Active Directory, saves the time of the sync,
+        and inserts data into RethinkDB.
+    """"""
+
+    r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+
+    if sync_type == ""delta"":
+        last_sync = r.table(""sync_tracker"").filter({""source"": ""ldap-"" + data_type}).coerce_to('array').run()
+        last_sync_time = datetime.strptime(last_sync[0]['timestamp'].split('+')[0], ""%Y-%m-%dT%H:%M:%S.%f"")",,2018-10-29 17:53:03,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/228763043,https://github.com/hyperledger/sawtooth-next-directory/pull/357#discussion_r228763043,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/357,https://github.com/hyperledger/sawtooth-next-directory/pull/357,I created a new data transformer file for LDAP provider.,a26509aace139b8bbffa3639129e772930dd1689,2018-10-29 17:06:01,229016150,"@@ -0,0 +1,138 @@
+#! /usr/bin/env python3
+
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+# http://docs.python-requests.org/en/master/
+
+import json
+import os
+from datetime import datetime, timezone
+from threading import Timer
+
+import ldap3
+import rethinkdb as r
+from ldap3 import ALL, Connection, Server
+from rbac.providers.inbound_filters import (inbound_group_filter,
+                                            inbound_user_filter)
+
+DEFAULT_CONFIG = {
+    ""DB_HOST"": ""rethink"",
+    ""DB_PORT"": 28015,
+    ""DB_NAME"": ""rbac"",
+    ""DELTA_SYNC_INTERVAL_SECONDS"": 3600.0,
+}
+
+
+def getenv(name, default):
+    value = os.getenv(name)
+    if value is None or value is """":
+        return default
+    return value
+
+
+DB_HOST = getenv(""DB_HOST"", DEFAULT_CONFIG[""DB_HOST""])
+DB_PORT = getenv(""DB_PORT"", DEFAULT_CONFIG[""DB_PORT""])
+DB_NAME = getenv(""DB_NAME"", DEFAULT_CONFIG[""DB_NAME""])
+
+LDAP_DC = os.environ.get(""LDAP_DC"")
+LDAP_SERVER = os.environ.get(""LDAP_SERVER"")
+LDAP_USER = os.environ.get(""LDAP_USER"")
+LDAP_PASS = os.environ.get(""LDAP_PASS"")
+DELTA_SYNC_INTERVAL_SECONDS = getenv(""DELTA_SYNC_INTERVAL_SECONDS"", DEFAULT_CONFIG[""DELTA_SYNC_INTERVAL_SECONDS""])
+
+
+def fetch_ldap_data(sync_type, data_type):
+    """"""
+        Call to get entries for all (Users | Groups) in Active Directory, saves the time of the sync,
+        and inserts data into RethinkDB.
+    """"""
+
+    r.connect(host=DB_HOST, port=DB_PORT, db=DB_NAME).repl()
+
+    if sync_type == ""delta"":
+        last_sync = r.table(""sync_tracker"").filter({""source"": ""ldap-"" + data_type}).coerce_to('array').run()
+        last_sync_time = datetime.strptime(last_sync[0]['timestamp'].split('+')[0], ""%Y-%m-%dT%H:%M:%S.%f"")",,2018-10-29 17:53:03,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/229016150,https://github.com/hyperledger/sawtooth-next-directory/pull/357#discussion_r229016150,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/351,https://github.com/hyperledger/sawtooth-next-directory/pull/351,"Does this remove the need for the -d option in bin/start? If so, please remove references to it in the README. Also, whatever you can add to README/Wiki to capture this change == Good stuff.",6d1dd71118994eab18b31d7d1b02ef62b42b5f0f,2018-10-25 01:15:54,228008810,"@@ -174,9 +174,9 @@ hanging in the legacy UI and stack traces from rbac_server:
     rbac-server    |     response = await response",161,2018-10-25 03:03:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/228008810,https://github.com/hyperledger/sawtooth-next-directory/pull/351#discussion_r228008810,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/351,https://github.com/hyperledger/sawtooth-next-directory/pull/351,Updated,6d1dd71118994eab18b31d7d1b02ef62b42b5f0f,2018-10-25 03:04:46,228021913,"@@ -174,9 +174,9 @@ hanging in the legacy UI and stack traces from rbac_server:
     rbac-server    |     response = await response",161,2018-10-25 03:04:46,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/228021913,https://github.com/hyperledger/sawtooth-next-directory/pull/351#discussion_r228021913,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/351,https://github.com/hyperledger/sawtooth-next-directory/pull/351,"This is the change that @jbobo is referring to, and it is part of this PR along with the cleanup of the rbac-client Dockerfile. Both changes are improvements with regards to incorporating the new UI, but the missing dependency causes a dump of errors in the logs upon startup. ",6d1dd71118994eab18b31d7d1b02ef62b42b5f0f,2018-10-26 05:55:10,228412292,"@@ -112,14 +120,25 @@ services:
       context: .
       dockerfile: ./docker/ui.Dockerfile
     container_name: rbac-ui
-    image: rbac-ui-production:${ISOLATION_ID-latest}
+    image: rbac-ui:${ISOLATION_ID-latest}
     ports:
       - ""4200:4200""
     depends_on:
       - rbac-server
     environment:
       - HOST=${HOST:-localhost}
 
+  rbac-client:",76,2018-10-26 05:55:10,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/228412292,https://github.com/hyperledger/sawtooth-next-directory/pull/351#discussion_r228412292,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/349,https://github.com/hyperledger/sawtooth-next-directory/pull/349,We will later need to update the auth API endpoint to accept the variable name `username` instead of `id`. This will help keep the variable name consistent within the UI components. ,6cfe3fd1bdede31f1d3a20ae1f3b20e9aac973f3,2018-10-24 16:16:00,227860651,"@@ -32,16 +32,49 @@ export function * login (api, action) {
   try {
     const { username, password } = action;
     const res = yield call(api.login, {
-      username: username,
+      id: username,",5,2018-10-24 16:16:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227860651,https://github.com/hyperledger/sawtooth-next-directory/pull/349#discussion_r227860651,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/348,https://github.com/hyperledger/sawtooth-next-directory/pull/348,"Regarding the file name: What kind of address is this? Block address? transaction address? I see user_address, and am wondering if this could benefit from a more meaningful name.",8582af3a5a307510553746bbecb612794d745cce,2018-10-24 04:13:50,227637446,"@@ -0,0 +1,35 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth",1,2018-10-24 04:13:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227637446,https://github.com/hyperledger/sawtooth-next-directory/pull/348#discussion_r227637446,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/348,https://github.com/hyperledger/sawtooth-next-directory/pull/348,The test helps me understand the purpose. This never had a unique name.,8582af3a5a307510553746bbecb612794d745cce,2018-10-24 04:18:14,227637887,"@@ -0,0 +1,44 @@
+# Copyright contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import pytest
+
+from rbac.app.address import FAMILY_NAME
+from rbac.app.address import FAMILY_VERSION
+from rbac.app.address import NAMESPACE
+from rbac.app.address import FAMILY_PREFIX
+from rbac.app.address import ADDRESS_LENGTH
+from rbac.app.address import ADDRESS_PATTERN
+from rbac.app.address import FAMILY_PATTERN
+from rbac.app.address import contains
+from rbac.app.address import compress
+
+from tests.rbac.common.assertions import CommonAssertions
+
+
+@pytest.mark.unit
+@pytest.mark.address
+class TestAppAddress(CommonAssertions):
+    def test_app_address(self):",34,2018-10-24 04:18:14,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227637887,https://github.com/hyperledger/sawtooth-next-directory/pull/348#discussion_r227637887,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/348,https://github.com/hyperledger/sawtooth-next-directory/pull/348,Has python formatter been run on this?  The formatting seems odd.,8582af3a5a307510553746bbecb612794d745cce,2018-10-24 15:15:44,227835628,"@@ -14,101 +14,176 @@
 # -----------------------------------------------------------------------------
 
 import logging
+from uuid import uuid4
 from rbac.common.crypto.keys import Key
 from rbac.addressing import addresser
 from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.protobuf import role_transaction_pb2
 from rbac.common.protobuf import role_state_pb2
-from rbac.common.sawtooth.client_sync import ClientSync
-from rbac.common.sawtooth.batcher import Batcher
+from rbac.common.manager.base_manager import BaseManager
 
 LOGGER = logging.getLogger(__name__)
 
 
-class RoleManager:
+class RoleManager(BaseManager):
     def __init__(self):
-        self.batch = Batcher()
-        self.client = ClientSync()
+        BaseManager.__init__(self)
 
-    def make(self, role_id, name, metadata=None, admins=None, owners=None):
+    def make(self, role_id, name, metadata=None, owners=None, admins=None):
+        """"""Make a CreateRole message""""""
         return role_transaction_pb2.CreateRole(
-            role_id=role_id, name=name, metadata=metadata, admins=admins, owners=owners
+            role_id=role_id, name=name, metadata=metadata, owners=owners, admins=admins
         )
 
-    def create(self, signer_keypair, role, do_batch=True, do_send=True, do_get=False):
-        if not isinstance(signer_keypair, Key):
-            raise TypeError(""Expected signer_keypair to be a Key"")
-        if not isinstance(role, role_transaction_pb2.CreateRole):
+    def make_proposal(
+        self, message_proto, role_id, user_id, reason=None, metadata=None
+    ):
+        """"""Make a role proposal message""""""
+        return message_proto(
+            proposal_id=uuid4().hex,
+            role_id=role_id,
+            user_id=user_id,
+            reason=reason,
+            metadata=metadata,
+        )
+
+    def make_payload(self, message, signer_public_key):
+        """"""Make a payload for the given message type""""""
+        if isinstance(message, role_transaction_pb2.CreateRole):
+            message_type = RBACPayload.CREATE_ROLE
+        elif isinstance(message, role_transaction_pb2.ProposeAddRoleMember):
+            message_type = RBACPayload.PROPOSE_ADD_ROLE_MEMBERS
+        elif isinstance(message, role_transaction_pb2.ProposeAddRoleOwner):
+            message_type = RBACPayload.PROPOSE_ADD_ROLE_OWNERS
+        elif isinstance(message, role_transaction_pb2.ProposeAddRoleAdmin):
+            message_type = RBACPayload.PROPOSE_ADD_ROLE_ADMINS
+        else:
             raise TypeError(
-                ""Expected role to be a role_transaction_pb2.CreateRole, use make first""
+                ""RoleManager.make_payload doesn't support message type {}"".format(
+                    type(message)
+                )
             )
 
-        inputs = [
-            addresser.make_sysadmin_members_address(signer_keypair.public_key),
-            addresser.make_role_attributes_address(role.role_id),
-        ]
-        inputs.extend([addresser.make_user_address(u) for u in role.admins])
-        inputs.extend([addresser.make_user_address(u) for u in role.owners])
-        inputs.extend(
-            [
-                addresser.make_role_admins_address(role_id=role.role_id, user_id=a)
-                for a in role.admins
-            ]
+        inputs, outputs = self.make_addresses(
+            message=message, signer_public_key=signer_public_key
         )
-        inputs.extend(
-            [
-                addresser.make_role_owners_address(role_id=role.role_id, user_id=o)
-                for o in role.owners
-            ]
+        return self.batch.make_payload(
+            message=message, message_type=message_type, inputs=inputs, outputs=outputs
         )
 
-        transaction = self.batch.make_transaction(
-            message=role,
-            message_type=RBACPayload.CREATE_ROLE,
-            inputs=inputs,
-            outputs=inputs,
-            signer_keypair=signer_keypair,
-        )
+    def make_addresses(self, message, signer_public_key=None):
+        """"""Makes the approporiate inputs & output addresses for the message type""""""
+        if isinstance(message, role_transaction_pb2.CreateRole):
+            inputs = [
+                # addresser.make_sysadmin_members_address(signer_public_key),
+                addresser.make_role_attributes_address(message.role_id)
+            ]
+            inputs.extend([addresser.make_user_address(u) for u in message.admins])
+            inputs.extend([addresser.make_user_address(u) for u in message.owners])
+            inputs.extend(
+                [",106,2018-10-24 15:44:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227835628,https://github.com/hyperledger/sawtooth-next-directory/pull/348#discussion_r227835628,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/348,https://github.com/hyperledger/sawtooth-next-directory/pull/348,"Yes, formatter has been run.",8582af3a5a307510553746bbecb612794d745cce,2018-10-24 18:03:23,227899241,"@@ -14,101 +14,176 @@
 # -----------------------------------------------------------------------------
 
 import logging
+from uuid import uuid4
 from rbac.common.crypto.keys import Key
 from rbac.addressing import addresser
 from rbac.common.protobuf.rbac_payload_pb2 import RBACPayload
 from rbac.common.protobuf import role_transaction_pb2
 from rbac.common.protobuf import role_state_pb2
-from rbac.common.sawtooth.client_sync import ClientSync
-from rbac.common.sawtooth.batcher import Batcher
+from rbac.common.manager.base_manager import BaseManager
 
 LOGGER = logging.getLogger(__name__)
 
 
-class RoleManager:
+class RoleManager(BaseManager):
     def __init__(self):
-        self.batch = Batcher()
-        self.client = ClientSync()
+        BaseManager.__init__(self)
 
-    def make(self, role_id, name, metadata=None, admins=None, owners=None):
+    def make(self, role_id, name, metadata=None, owners=None, admins=None):
+        """"""Make a CreateRole message""""""
         return role_transaction_pb2.CreateRole(
-            role_id=role_id, name=name, metadata=metadata, admins=admins, owners=owners
+            role_id=role_id, name=name, metadata=metadata, owners=owners, admins=admins
         )
 
-    def create(self, signer_keypair, role, do_batch=True, do_send=True, do_get=False):
-        if not isinstance(signer_keypair, Key):
-            raise TypeError(""Expected signer_keypair to be a Key"")
-        if not isinstance(role, role_transaction_pb2.CreateRole):
+    def make_proposal(
+        self, message_proto, role_id, user_id, reason=None, metadata=None
+    ):
+        """"""Make a role proposal message""""""
+        return message_proto(
+            proposal_id=uuid4().hex,
+            role_id=role_id,
+            user_id=user_id,
+            reason=reason,
+            metadata=metadata,
+        )
+
+    def make_payload(self, message, signer_public_key):
+        """"""Make a payload for the given message type""""""
+        if isinstance(message, role_transaction_pb2.CreateRole):
+            message_type = RBACPayload.CREATE_ROLE
+        elif isinstance(message, role_transaction_pb2.ProposeAddRoleMember):
+            message_type = RBACPayload.PROPOSE_ADD_ROLE_MEMBERS
+        elif isinstance(message, role_transaction_pb2.ProposeAddRoleOwner):
+            message_type = RBACPayload.PROPOSE_ADD_ROLE_OWNERS
+        elif isinstance(message, role_transaction_pb2.ProposeAddRoleAdmin):
+            message_type = RBACPayload.PROPOSE_ADD_ROLE_ADMINS
+        else:
             raise TypeError(
-                ""Expected role to be a role_transaction_pb2.CreateRole, use make first""
+                ""RoleManager.make_payload doesn't support message type {}"".format(
+                    type(message)
+                )
             )
 
-        inputs = [
-            addresser.make_sysadmin_members_address(signer_keypair.public_key),
-            addresser.make_role_attributes_address(role.role_id),
-        ]
-        inputs.extend([addresser.make_user_address(u) for u in role.admins])
-        inputs.extend([addresser.make_user_address(u) for u in role.owners])
-        inputs.extend(
-            [
-                addresser.make_role_admins_address(role_id=role.role_id, user_id=a)
-                for a in role.admins
-            ]
+        inputs, outputs = self.make_addresses(
+            message=message, signer_public_key=signer_public_key
         )
-        inputs.extend(
-            [
-                addresser.make_role_owners_address(role_id=role.role_id, user_id=o)
-                for o in role.owners
-            ]
+        return self.batch.make_payload(
+            message=message, message_type=message_type, inputs=inputs, outputs=outputs
         )
 
-        transaction = self.batch.make_transaction(
-            message=role,
-            message_type=RBACPayload.CREATE_ROLE,
-            inputs=inputs,
-            outputs=inputs,
-            signer_keypair=signer_keypair,
-        )
+    def make_addresses(self, message, signer_public_key=None):
+        """"""Makes the approporiate inputs & output addresses for the message type""""""
+        if isinstance(message, role_transaction_pb2.CreateRole):
+            inputs = [
+                # addresser.make_sysadmin_members_address(signer_public_key),
+                addresser.make_role_attributes_address(message.role_id)
+            ]
+            inputs.extend([addresser.make_user_address(u) for u in message.admins])
+            inputs.extend([addresser.make_user_address(u) for u in message.owners])
+            inputs.extend(
+                [",106,2018-10-24 18:03:23,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227899241,https://github.com/hyperledger/sawtooth-next-directory/pull/348#discussion_r227899241,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/325,https://github.com/hyperledger/sawtooth-next-directory/pull/325,Is there a more meaningful name that can be used here? metadata? What is the purpose of the data blob?,0b2b6b514f9e9dab17c78303968b395bc2c6eeef,2018-10-24 05:57:47,227650148,"@@ -127,27 +127,33 @@ def propose_add_role_admins(
         return self._client.get_statuses([signature], wait=10)
 
     def confirm_add_role_admins(self, key, proposal_id, role_id, user_id, reason):
+        data_blob = {
+            'reason': reason
+        }
         batch_list, signature = role_transaction_creation.confirm_add_role_admins(
             txn_key=key,
             batch_key=self._key,
             proposal_id=proposal_id,
             role_id=role_id,
             user_id=user_id,
-            reason=reason,
+            data_blob=data_blob,",,2018-10-29 19:03:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227650148,https://github.com/hyperledger/sawtooth-next-directory/pull/325#discussion_r227650148,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/325,https://github.com/hyperledger/sawtooth-next-directory/pull/325,We should favor improving tests over ignoring them.,0b2b6b514f9e9dab17c78303968b395bc2c6eeef,2018-10-24 05:58:41,227650313,"@@ -978,6 +978,10 @@ def test_11_propose_add_role_members(self):
             ""No open proposal can exist for the same state change."",
         )
 
+    # temporarily disable
+    #    need to adding rethink db container
+    #    confirm_add_role_member transaction is replaced by approve_add_role_member which needs db access
+    @pytest.mark.skip",,2018-10-29 19:03:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227650313,https://github.com/hyperledger/sawtooth-next-directory/pull/325#discussion_r227650313,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/325,https://github.com/hyperledger/sawtooth-next-directory/pull/325,@kthblmfld it would take some effort to do the test here as it will bring in new test framework for rethinkdb connection. I will work on that next. but I would hope not to have this feature wait so long as there would be a lot of merge conflicts if does. ,0b2b6b514f9e9dab17c78303968b395bc2c6eeef,2018-10-24 13:59:32,227800520,"@@ -978,6 +978,10 @@ def test_11_propose_add_role_members(self):
             ""No open proposal can exist for the same state change."",
         )
 
+    # temporarily disable
+    #    need to adding rethink db container
+    #    confirm_add_role_member transaction is replaced by approve_add_role_member which needs db access
+    @pytest.mark.skip",,2018-10-29 19:03:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227800520,https://github.com/hyperledger/sawtooth-next-directory/pull/325#discussion_r227800520,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/325,https://github.com/hyperledger/sawtooth-next-directory/pull/325,"@kthblmfld I agree that this naming lacks consideration. I will try to come up with a better one. The reason for this ""data_blob"" is that this is the single point of entry to create many different type of transactions. Not all type of transaction creation would take the same parameters. So instead of having a long list of parameters to each transaction creation method, having a dictionary here seems the right way to go. But as you said, it could be named better. I am thinking ""params""",0b2b6b514f9e9dab17c78303968b395bc2c6eeef,2018-10-24 14:04:04,227802506,"@@ -127,27 +127,33 @@ def propose_add_role_admins(
         return self._client.get_statuses([signature], wait=10)
 
     def confirm_add_role_admins(self, key, proposal_id, role_id, user_id, reason):
+        data_blob = {
+            'reason': reason
+        }
         batch_list, signature = role_transaction_creation.confirm_add_role_admins(
             txn_key=key,
             batch_key=self._key,
             proposal_id=proposal_id,
             role_id=role_id,
             user_id=user_id,
-            reason=reason,
+            data_blob=data_blob,",,2018-10-29 19:03:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227802506,https://github.com/hyperledger/sawtooth-next-directory/pull/325#discussion_r227802506,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/325,https://github.com/hyperledger/sawtooth-next-directory/pull/325,"What if on_behalf_id is on_behalf_ids, an ordered array of ids starting with the direct manager. Thus, you don't need to query the database.

The user interface will know the hierarchical chain of IDs in order to give the user the option to approve in the first place. Additionally, it can be queried and included into the transaction before submission.",0b2b6b514f9e9dab17c78303968b395bc2c6eeef,2018-10-24 18:08:59,227901280,"@@ -978,6 +978,10 @@ def test_11_propose_add_role_members(self):
             ""No open proposal can exist for the same state change."",
         )
 
+    # temporarily disable
+    #    need to adding rethink db container
+    #    confirm_add_role_member transaction is replaced by approve_add_role_member which needs db access
+    @pytest.mark.skip",,2018-10-29 19:03:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227901280,https://github.com/hyperledger/sawtooth-next-directory/pull/325#discussion_r227901280,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/325,https://github.com/hyperledger/sawtooth-next-directory/pull/325,"@adamgering I think that is worth trying. I do not like the idea of bringing in a db connection into blockchain package either. in the future, the blockchain package might be deployed to a different server group without db access. I think having a chain of users passing in from the api package to the transaction package seems reasonable. Let me make the change and resubmit the PR. ",0b2b6b514f9e9dab17c78303968b395bc2c6eeef,2018-10-24 18:27:47,227908147,"@@ -978,6 +978,10 @@ def test_11_propose_add_role_members(self):
             ""No open proposal can exist for the same state change."",
         )
 
+    # temporarily disable
+    #    need to adding rethink db container
+    #    confirm_add_role_member transaction is replaced by approve_add_role_member which needs db access
+    @pytest.mark.skip",,2018-10-29 19:03:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/227908147,https://github.com/hyperledger/sawtooth-next-directory/pull/325#discussion_r227908147,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/319,https://github.com/hyperledger/sawtooth-next-directory/pull/319,bin/run_lint && bin/build -t,8aacd40e15762983349a07a5751ffcf45614ba8c,2018-10-19 23:22:51,226803701,"@@ -4,8 +4,14 @@ jobs:
       language: python
       python:
         - ""3.6""
+      before_install:
+        - sudo apt-get install automake
+        - sudo apt-get install libtool
+        - sudo apt-get install pkg-config
+      install:
+        - pip3 install -r requirements.dev.txt
       script:
-        - bin/build -p && bin/build -i
+        - bin/run_lint",12,2018-10-22 18:29:47,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226803701,https://github.com/hyperledger/sawtooth-next-directory/pull/319#discussion_r226803701,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/309,https://github.com/hyperledger/sawtooth-next-directory/pull/309,So I thought we were going to do two different auth methods.  One for certs and one for Client Secrets.  I don't know if this works for both?  Have you checked?,41910028876cb24329bc73c5b10857ef2d937e72,2018-10-19 17:00:15,226716035,"@@ -35,10 +38,11 @@ def __init__(self):
 
     def get_token(self):
         """"""Get an access Token for Azure Active Directory Graph API.""""""
-        data = {'client_id': CLIENT_ID,
-                'scope': 'https://graph.microsoft.com/.default',
-                'client_secret': CLIENT_SECRET,
-                'grant_type': 'client_credentials'}
+        data = {'grant_type': GRANT_TYPE,",23,2018-10-19 17:10:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226716035,https://github.com/hyperledger/sawtooth-next-directory/pull/309#discussion_r226716035,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/309,https://github.com/hyperledger/sawtooth-next-directory/pull/309,I believe client_assetion_type will break the other form of authentication.  Can you separate the cert token from the credential token get?,41910028876cb24329bc73c5b10857ef2d937e72,2018-10-19 17:03:29,226716954,"@@ -35,10 +38,11 @@ def __init__(self):
 
     def get_token(self):
         """"""Get an access Token for Azure Active Directory Graph API.""""""
-        data = {'client_id': CLIENT_ID,
-                'scope': 'https://graph.microsoft.com/.default',
-                'client_secret': CLIENT_SECRET,
-                'grant_type': 'client_credentials'}
+        data = {'grant_type': GRANT_TYPE,
+                'client_id': CLIENT_ID,
+                'client_assertion_type': CLIENT_ASSERTION_TYPE,",25,2018-10-19 17:10:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226716954,https://github.com/hyperledger/sawtooth-next-directory/pull/309#discussion_r226716954,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/308,https://github.com/hyperledger/sawtooth-next-directory/pull/308,"Is this needed?  If not, remove.
",ac047430c863831ee69637f70a9dc95d43c511dd,2018-10-19 16:54:43,226714309,"@@ -117,6 +120,7 @@ def namespaces(self):
         return [addresser.NS]
 
     def apply(self, transaction, state):
+        # try:",,2018-10-19 18:35:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226714309,https://github.com/hyperledger/sawtooth-next-directory/pull/308#discussion_r226714309,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/308,https://github.com/hyperledger/sawtooth-next-directory/pull/308,"Is this needed?  If not, remove.
",ac047430c863831ee69637f70a9dc95d43c511dd,2018-10-19 16:54:49,226714331,"@@ -152,6 +156,9 @@ def apply(self, transaction, state):
 
         else:
             raise InvalidTransaction(""Message type unknown."")
+        # except Exception as exe:  # pylint: disable=broad-except",,2018-10-19 18:35:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226714331,https://github.com/hyperledger/sawtooth-next-directory/pull/308#discussion_r226714331,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/308,https://github.com/hyperledger/sawtooth-next-directory/pull/308,Why are the processor and transaction creation protobufs not moved to common?,ac047430c863831ee69637f70a9dc95d43c511dd,2018-10-19 16:57:09,226715046,"@@ -43,6 +43,4 @@ def make_protobuf(path, pkg_name):
 if __name__ == '__main__':
     make_protobuf('rbac/processor', 'protobuf')
     make_protobuf('rbac/transaction_creation', 'protobuf')
-    make_protobuf('rbac/server/api', 'protobuf')
-    make_protobuf('rbac/server/db', 'protobuf')
-    make_protobuf('rbac/ledger_sync', 'protobuf')
+    make_protobuf('rbac/common', 'protobuf')",,2018-10-19 18:35:31,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226715046,https://github.com/hyperledger/sawtooth-next-directory/pull/308#discussion_r226715046,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/307,https://github.com/hyperledger/sawtooth-next-directory/pull/307,Please remove or replace with log,cd7f174b7a01bd94981ff5930f03723c9bf0f6b2,2018-10-18 20:19:19,226450946,"@@ -14,27 +14,22 @@
 # ------------------------------------------------------------------------------
 
 import requests
-from sanic.response import json
-from sanic import Blueprint
-from rbac.server.api.aad_auth import AADAuth
+from rbac.providers.azure.aad_auth import AADAuth
 
 GRAPH_URL = 'https://graph.microsoft.com/v1.0/'
 AUTH = AADAuth()
 
-AAD_SYNC_BP = Blueprint(""aad_sync"")
 
-
-@AAD_SYNC_BP.get('groups')
-def groups(request):
+def groups():
     """"""JSON payload for all Groups in Azure Active Directory.""""""
     headers = AUTH.check_token()
     groups_payload = requests.get(url=GRAPH_URL + 'groups', headers=headers)
-    return json(groups_payload.json())
+    return groups_payload.json()
 
 
-@AAD_SYNC_BP.get('users')
-def users(request):
+def users():
     """"""JSON payload for all Users in Azure Active Directory.""""""
+    print('starting users call ***********************')",,2018-10-18 21:25:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226450946,https://github.com/hyperledger/sawtooth-next-directory/pull/307#discussion_r226450946,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/307,https://github.com/hyperledger/sawtooth-next-directory/pull/307,Is there a more specific name for what this actually does? fetch_groups?,cd7f174b7a01bd94981ff5930f03723c9bf0f6b2,2018-10-18 20:20:30,226451353,"@@ -14,27 +14,22 @@
 # ------------------------------------------------------------------------------
 
 import requests
-from sanic.response import json
-from sanic import Blueprint
-from rbac.server.api.aad_auth import AADAuth
+from rbac.providers.azure.aad_auth import AADAuth
 
 GRAPH_URL = 'https://graph.microsoft.com/v1.0/'
 AUTH = AADAuth()
 
-AAD_SYNC_BP = Blueprint(""aad_sync"")
 
-
-@AAD_SYNC_BP.get('groups')
-def groups(request):
+def groups():",,2018-10-18 21:25:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226451353,https://github.com/hyperledger/sawtooth-next-directory/pull/307#discussion_r226451353,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/307,https://github.com/hyperledger/sawtooth-next-directory/pull/307,"Nitpick for discussion: I prefer camel-casing acronyms for readability (ie AadAuth), although we haven't discussed/agreed on this.",cd7f174b7a01bd94981ff5930f03723c9bf0f6b2,2018-10-18 20:24:10,226452508,"@@ -14,27 +14,22 @@
 # ------------------------------------------------------------------------------
 
 import requests
-from sanic.response import json
-from sanic import Blueprint
-from rbac.server.api.aad_auth import AADAuth
+from rbac.providers.azure.aad_auth import AADAuth",,2018-10-18 21:25:32,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226452508,https://github.com/hyperledger/sawtooth-next-directory/pull/307#discussion_r226452508,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/303,https://github.com/hyperledger/sawtooth-next-directory/pull/303,"Instead of importing the functions, import addresser and then act on it at invocation (addresser.make_role_attributes_address(...). Doing so should reduce imports and improve traceability of the module",cc41c6951a873b012a1bafc826a464805f28992a,2018-10-17 21:22:43,226099525,"@@ -0,0 +1,170 @@
+# Copyright contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.common.crypto.keys import Key
+from rbac.addressing.addresser import make_user_address",,2018-10-17 22:25:28,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226099525,https://github.com/hyperledger/sawtooth-next-directory/pull/303#discussion_r226099525,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/303,https://github.com/hyperledger/sawtooth-next-directory/pull/303,Resolved,cc41c6951a873b012a1bafc826a464805f28992a,2018-10-17 22:25:59,226115004,"@@ -0,0 +1,170 @@
+# Copyright contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from rbac.common.crypto.keys import Key
+from rbac.addressing.addresser import make_user_address",,2018-10-17 22:25:59,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226115004,https://github.com/hyperledger/sawtooth-next-directory/pull/303#discussion_r226115004,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/290,https://github.com/hyperledger/sawtooth-next-directory/pull/290,Add high level documentation (docstrings). This can wait until next PR in the queue,5ca5f70b43330f4c2cb649604dee39cbe52f4c7b,2018-10-17 17:35:04,226027407,"@@ -0,0 +1,118 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# -----------------------------------------------------------------------------
+
+import logging
+from hashlib import sha512
+from uuid import uuid4
+from sawtooth_rest_api.protobuf import batch_pb2
+from sawtooth_rest_api.protobuf import client_batch_submit_pb2
+from sawtooth_rest_api.protobuf import transaction_pb2
+from rbac.addressing import addresser
+from rbac.transaction_creation.protobuf import rbac_payload_pb2
+from rbac.app.config import BATCHER_KEY_PAIR
+
+LOGGER = logging.getLogger(__name__)
+",27,2018-10-17 17:37:37,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/226027407,https://github.com/hyperledger/sawtooth-next-directory/pull/290#discussion_r226027407,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,"Nitpick - please use latest Copyright line. ""Copyright 2018 Contributors to Hyperledger Sawtooth""",9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 16:08:28,225226056,"@@ -0,0 +1,58 @@
+# Copyright 2017 Intel Corporation",,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225226056,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225226056,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,Please update this header,9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 16:13:11,225227720,"@@ -0,0 +1,58 @@
+# Copyright 2017 Intel Corporation",,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225227720,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225227720,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,Why move this from state_accessor? It looks like the main goal of the function is to retrieve state entries from the given confirmation.,9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 16:15:02,225228340,"@@ -195,3 +195,61 @@ def _role_already_exists(state_return, role_id):
     return message_accessor.is_in_role_attributes_container(
         container=role_attr_container, identifier=role_id
     )
+
+def get_state_entries(header, confirm, txn_signer_rel_address, state):",5,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225228340,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225228340,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,"Consistent but incorrect spelling across this commit for ""hierarchical"". Please address.",9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 16:15:22,225228444,"@@ -166,3 +168,18 @@ def apply_reject_remove(header, payload, state):
             header, payload, state
         )
     )
+def hierachical_approve(header, payload, state):",,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225228444,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225228444,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,"""hierarchical""",9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 16:15:42,225228583,"@@ -103,6 +106,21 @@ def apply_propose_remove(header, payload, state):
         state=state,
     )
 
+def hierachical_approve(header, payload, state):",,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225228583,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225228583,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,"""hierarchical""",9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 16:16:07,225228712,"@@ -103,6 +106,21 @@ def apply_propose_remove(header, payload, state):
         state=state,
     )
 
+def hierachical_approve(header, payload, state):",,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225228712,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225228712,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,"Please update across all instances in all files in this commit. It seems mostly consistent, but I did see at least one example of spelling it appropriately. Bigger picture the question is, whether this should be changed altogether, but lets fix and merge this feature for now.",9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 16:38:23,225235766,"@@ -103,6 +106,21 @@ def apply_propose_remove(header, payload, state):
         state=state,
     )
 
+def hierachical_approve(header, payload, state):",,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225235766,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225235766,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,first... ;),9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 16:39:14,225236040,"@@ -0,0 +1,58 @@
+# Copyright 2017 Intel Corporation",,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225236040,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225236040,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,get_state_entries is only being applied to roles and the naming is a bit odd as it does more verification than just getting entries. so moving it under the role package. ,9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 17:02:55,225243841,"@@ -195,3 +195,61 @@ def _role_already_exists(state_return, role_id):
     return message_accessor.is_in_role_attributes_container(
         container=role_attr_container, identifier=role_id
     )
+
+def get_state_entries(header, confirm, txn_signer_rel_address, state):",5,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225243841,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225243841,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,haha. english is not my first language. will fix. thanks for pointing out,9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 17:03:33,225244088,"@@ -166,3 +168,18 @@ def apply_reject_remove(header, payload, state):
             header, payload, state
         )
     )
+def hierachical_approve(header, payload, state):",,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225244088,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225244088,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/260,https://github.com/hyperledger/sawtooth-next-directory/pull/260,will fix,9a4551460026f61ade1ee8dcb658973c0e00800f,2018-10-15 17:04:10,225244307,"@@ -0,0 +1,58 @@
+# Copyright 2017 Intel Corporation",,2018-10-16 12:28:56,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225244307,https://github.com/hyperledger/sawtooth-next-directory/pull/260#discussion_r225244307,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/259,https://github.com/hyperledger/sawtooth-next-directory/pull/259,Noticing inconsistency on Copyright of specific files. Looks like you're reverting to an older version here?,dd561336c62e4bcc38ac7bb03df257b235a6513a,2018-10-15 15:57:02,225221601,"@@ -1,6 +1,6 @@
 #!/usr/bin/env bash
 
-# Copyright 2018 Contributors to Hyperledger Sawtooth
+# Copyright 2017 Intel Corporation",,2018-10-15 23:21:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225221601,https://github.com/hyperledger/sawtooth-next-directory/pull/259#discussion_r225221601,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/259,https://github.com/hyperledger/sawtooth-next-directory/pull/259,"Copyright inconsistencies... should read ""Copyright 2018 contributors to Hyperledger Sawtooth""",dd561336c62e4bcc38ac7bb03df257b235a6513a,2018-10-15 15:58:15,225222056,"@@ -0,0 +1,31 @@
+<!--=========================================================================
+Copyright contributors to Hyperledger Sawtooth",,2018-10-15 23:21:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225222056,https://github.com/hyperledger/sawtooth-next-directory/pull/259#discussion_r225222056,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/259,https://github.com/hyperledger/sawtooth-next-directory/pull/259,"Copyright inconsistencies... ""Copyright 2018 Contributors to Hyperledger Sawtooth""",dd561336c62e4bcc38ac7bb03df257b235a6513a,2018-10-15 15:59:05,225222400,"@@ -0,0 +1,35 @@
+# Copyright contributors to Hyperledger Sawtooth",,2018-10-15 23:21:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225222400,https://github.com/hyperledger/sawtooth-next-directory/pull/259#discussion_r225222400,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/259,https://github.com/hyperledger/sawtooth-next-directory/pull/259,Copyright 2018 Contributors to Hyperledger Sawtooth,dd561336c62e4bcc38ac7bb03df257b235a6513a,2018-10-15 15:59:31,225222540,"@@ -0,0 +1,105 @@
+# Copyright contributors to Hyperledger Sawtooth",,2018-10-15 23:21:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225222540,https://github.com/hyperledger/sawtooth-next-directory/pull/259#discussion_r225222540,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/259,https://github.com/hyperledger/sawtooth-next-directory/pull/259,Copyright 2018 Contributors to Hyperledger Sawtooth,dd561336c62e4bcc38ac7bb03df257b235a6513a,2018-10-15 15:59:41,225222603,"@@ -0,0 +1,67 @@
+# Copyright contributors to Hyperledger Sawtooth",,2018-10-15 23:21:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225222603,https://github.com/hyperledger/sawtooth-next-directory/pull/259#discussion_r225222603,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/259,https://github.com/hyperledger/sawtooth-next-directory/pull/259,"Is there a reason to keep ISOLATION_ID now that it's commented out? I don't see it assigned/appended anywhere, just disabled. Are there still references to it elsewhere in the codebase?",dd561336c62e4bcc38ac7bb03df257b235a6513a,2018-10-15 16:29:37,225233125,"@@ -13,9 +13,19 @@ See the License for the specific language governing permissions and
 limitations under the License.
 =========================================================================-->
 
-ISOLATION_ID=latest
+# ISOLATION_ID=latest",12,2018-10-15 23:21:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225233125,https://github.com/hyperledger/sawtooth-next-directory/pull/259#discussion_r225233125,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/259,https://github.com/hyperledger/sawtooth-next-directory/pull/259,"It is currently being referenced in docker yaml files by the image value for certain services.  

```
image: rbac-server-production:${ISOLATION_ID-latest}
````",dd561336c62e4bcc38ac7bb03df257b235a6513a,2018-10-15 16:47:07,225238446,"@@ -13,9 +13,19 @@ See the License for the specific language governing permissions and
 limitations under the License.
 =========================================================================-->
 
-ISOLATION_ID=latest
+# ISOLATION_ID=latest",12,2018-10-15 23:21:11,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/225238446,https://github.com/hyperledger/sawtooth-next-directory/pull/259#discussion_r225238446,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/250,https://github.com/hyperledger/sawtooth-next-directory/pull/250,Why remove the test phase here?,a9a19e4b13ff8f8baedb944efbba71b645b73d6a,2018-10-12 19:01:51,224886285,"@@ -68,13 +68,9 @@ do
             ;;
         a)
             docker build . -f tests/Dockerfile -t rbac-test-env
-            info ""Building Protobuf modules""
-            docker run --rm -v $(pwd):/project/tmobile-rbac rbac-test-env bin/protogen
             info ""Running lint""
             docker run --rm -v $(pwd):/project/tmobile-rbac rbac-test-env bin/run_lint
             info ""Running tests""
-            pytest",18,2018-10-12 19:09:34,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224886285,https://github.com/hyperledger/sawtooth-next-directory/pull/250#discussion_r224886285,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/238,https://github.com/hyperledger/sawtooth-next-directory/pull/238,Nitpick: lowercase,c9f9f7649ba4513de921b40599b711944b3e6954,2018-10-12 00:22:40,224641421,"@@ -41,22 +41,22 @@ for var in ""$@""
 do
     ARGS=1
     case ""$var"" in
-    ""addressing""        ) lint addressing/rbac_addressing || ret_val=1;;
-    ""transaction""       ) lint transaction_creation || ret_val=1;;
-    ""processor""         ) lint processor/rbac_processor || ret_val=1;;
-    ""server""            ) lint server || ret_val=1;;
-    ""sync""              ) lint server || ret_val=1;;
-    ""tests""             ) lint tests || ret_val=1;;
+    ""rbac/addressing""           ) lint rbac/addressing || ret_val=1;;
+    ""rbac/Ledger_sync""          ) lint rbac/ledger_sync || ret_val=1;;",,2018-10-12 00:40:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224641421,https://github.com/hyperledger/sawtooth-next-directory/pull/238#discussion_r224641421,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/238,https://github.com/hyperledger/sawtooth-next-directory/pull/238,Nitpick: lowercase,c9f9f7649ba4513de921b40599b711944b3e6954,2018-10-12 00:22:49,224641443,"@@ -41,22 +41,22 @@ for var in ""$@""
 do
     ARGS=1
     case ""$var"" in
-    ""addressing""        ) lint addressing/rbac_addressing || ret_val=1;;
-    ""transaction""       ) lint transaction_creation || ret_val=1;;
-    ""processor""         ) lint processor/rbac_processor || ret_val=1;;
-    ""server""            ) lint server || ret_val=1;;
-    ""sync""              ) lint server || ret_val=1;;
-    ""tests""             ) lint tests || ret_val=1;;
+    ""rbac/addressing""           ) lint rbac/addressing || ret_val=1;;
+    ""rbac/Ledger_sync""          ) lint rbac/ledger_sync || ret_val=1;;
+    ""rbac/processor""            ) lint rbac/processor || ret_val=1;;
+    ""rbac/server""               ) lint rbac/server || ret_val=1;;
+    ""rbac/transaction_creation"" ) lint rbac/Transaction_creation || ret_val=1;;",23,2018-10-12 00:40:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224641443,https://github.com/hyperledger/sawtooth-next-directory/pull/238#discussion_r224641443,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,with the new rbac centralized structure this needs be pathed as ./rbac/server/Dockerfile,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:10:17,224647261,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647261,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647261,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,same as above,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:10:29,224647289,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647289,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647289,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,same as above,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:10:46,224647325,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647325,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647325,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,same as above,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:11:04,224647346,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-2
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-2
+      - rethink-2
+      - validator-2
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.62
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-server --db-host rethink-2 --validator-host validator-2
+
+  rbac-server-3:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647346,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647346,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,new path ./rbac/processor/Dockerfile,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:11:50,224647422,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-2
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-2
+      - rethink-2
+      - validator-2
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.62
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-server --db-host rethink-2 --validator-host validator-2
+
+  rbac-server-3:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-3
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-3
+      - rethink-3
+      - validator-3
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.63
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-server --db-host rethink-3 --validator-host validator-3
+    
+
+  rethink-0:
+    container_name: rbac-rethink-0
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-1:
+    container_name: rbac-rethink-1
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-2:
+    container_name: rbac-rethink-2
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-3:
+    container_name: rbac-rethink-3
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+
+  rbac-tp-0:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647422,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647422,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,new path ./rbac/processor/Dockerfile,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:11:57,224647437,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-2
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-2
+      - rethink-2
+      - validator-2
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.62
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-server --db-host rethink-2 --validator-host validator-2
+
+  rbac-server-3:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-3
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-3
+      - rethink-3
+      - validator-3
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.63
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-server --db-host rethink-3 --validator-host validator-3
+    
+
+  rethink-0:
+    container_name: rbac-rethink-0
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-1:
+    container_name: rbac-rethink-1
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-2:
+    container_name: rbac-rethink-2
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-3:
+    container_name: rbac-rethink-3
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+
+  rbac-tp-0:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-0
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-tp -vv tcp://validator-0:4004
+  
+  rbac-tp-1:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647437,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647437,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,new path ./rbac/processor/Dockerfile,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:12:02,224647446,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-2
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-2
+      - rethink-2
+      - validator-2
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.62
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-server --db-host rethink-2 --validator-host validator-2
+
+  rbac-server-3:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-3
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-3
+      - rethink-3
+      - validator-3
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.63
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-server --db-host rethink-3 --validator-host validator-3
+    
+
+  rethink-0:
+    container_name: rbac-rethink-0
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-1:
+    container_name: rbac-rethink-1
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-2:
+    container_name: rbac-rethink-2
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-3:
+    container_name: rbac-rethink-3
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+
+  rbac-tp-0:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-0
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-tp -vv tcp://validator-0:4004
+  
+  rbac-tp-1:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-1
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-tp -vv tcp://validator-1:4004
+  
+  rbac-tp-2:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647446,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647446,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,new path ./rbac/processor/Dockerfile,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:12:08,224647453,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-2
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-2
+      - rethink-2
+      - validator-2
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.62
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-server --db-host rethink-2 --validator-host validator-2
+
+  rbac-server-3:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-3
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-3
+      - rethink-3
+      - validator-3
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.63
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-server --db-host rethink-3 --validator-host validator-3
+    
+
+  rethink-0:
+    container_name: rbac-rethink-0
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-1:
+    container_name: rbac-rethink-1
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-2:
+    container_name: rbac-rethink-2
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-3:
+    container_name: rbac-rethink-3
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+
+  rbac-tp-0:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-0
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-tp -vv tcp://validator-0:4004
+  
+  rbac-tp-1:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-1
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-tp -vv tcp://validator-1:4004
+  
+  rbac-tp-2:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-2
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-tp -vv tcp://validator-2:4004
+
+  rbac-tp-3:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647453,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647453,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,new path ./rbac/ledger_sync/Dockerfile,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:12:24,224647487,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-2
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-2
+      - rethink-2
+      - validator-2
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.62
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-server --db-host rethink-2 --validator-host validator-2
+
+  rbac-server-3:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-3
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-3
+      - rethink-3
+      - validator-3
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.63
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-server --db-host rethink-3 --validator-host validator-3
+    
+
+  rethink-0:
+    container_name: rbac-rethink-0
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-1:
+    container_name: rbac-rethink-1
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-2:
+    container_name: rbac-rethink-2
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-3:
+    container_name: rbac-rethink-3
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+
+  rbac-tp-0:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-0
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-tp -vv tcp://validator-0:4004
+  
+  rbac-tp-1:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-1
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-tp -vv tcp://validator-1:4004
+  
+  rbac-tp-2:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-2
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-tp -vv tcp://validator-2:4004
+
+  rbac-tp-3:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-3
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-tp -vv tcp://validator-3:4004
+
+  ledger-sync-0:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647487,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647487,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,new path ./rbac/ledger_sync/Dockerfile,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:12:32,224647498,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-2
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-2
+      - rethink-2
+      - validator-2
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.62
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-server --db-host rethink-2 --validator-host validator-2
+
+  rbac-server-3:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-3
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-3
+      - rethink-3
+      - validator-3
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.63
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-server --db-host rethink-3 --validator-host validator-3
+    
+
+  rethink-0:
+    container_name: rbac-rethink-0
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-1:
+    container_name: rbac-rethink-1
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-2:
+    container_name: rbac-rethink-2
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-3:
+    container_name: rbac-rethink-3
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+
+  rbac-tp-0:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-0
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-tp -vv tcp://validator-0:4004
+  
+  rbac-tp-1:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-1
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-tp -vv tcp://validator-1:4004
+  
+  rbac-tp-2:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-2
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-tp -vv tcp://validator-2:4004
+
+  rbac-tp-3:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-3
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-tp -vv tcp://validator-3:4004
+
+  ledger-sync-0:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile
+    container_name: rbac-ledger-sync-0
+    image: rbac-ledger-sync-production:${ISOLATION_ID-latest}
+    depends_on:
+      - rethink-0
+      - validator-0
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: |
+      bash -c ""
+        ./bin/setup_db --host rethink-0 &&
+        ./bin/rbac-ledger-sync -vv --db-host rethink-0 --validator tcp://validator-0:4004
+      \""\""""
+
+  ledger-sync-1:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647498,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647498,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,new path ./rbac/ledger_sync/Dockerfile,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:12:39,224647511,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-2
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-2
+      - rethink-2
+      - validator-2
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.62
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-server --db-host rethink-2 --validator-host validator-2
+
+  rbac-server-3:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-3
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-3
+      - rethink-3
+      - validator-3
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.63
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-server --db-host rethink-3 --validator-host validator-3
+    
+
+  rethink-0:
+    container_name: rbac-rethink-0
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-1:
+    container_name: rbac-rethink-1
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-2:
+    container_name: rbac-rethink-2
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-3:
+    container_name: rbac-rethink-3
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+
+  rbac-tp-0:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-0
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-tp -vv tcp://validator-0:4004
+  
+  rbac-tp-1:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-1
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-tp -vv tcp://validator-1:4004
+  
+  rbac-tp-2:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-2
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-tp -vv tcp://validator-2:4004
+
+  rbac-tp-3:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-3
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-tp -vv tcp://validator-3:4004
+
+  ledger-sync-0:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile
+    container_name: rbac-ledger-sync-0
+    image: rbac-ledger-sync-production:${ISOLATION_ID-latest}
+    depends_on:
+      - rethink-0
+      - validator-0
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: |
+      bash -c ""
+        ./bin/setup_db --host rethink-0 &&
+        ./bin/rbac-ledger-sync -vv --db-host rethink-0 --validator tcp://validator-0:4004
+      \""\""""
+
+  ledger-sync-1:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile
+    container_name: rbac-ledger-sync-1
+    image: rbac-ledger-sync-production:${ISOLATION_ID-latest}
+    depends_on:
+      - rethink-1
+      - validator-1
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.61
+    command: |
+      bash -c ""
+        ./bin/setup_db --host rethink-1 &&
+        ./bin/rbac-ledger-sync -vv --db-host rethink-1 --validator tcp://validator-1:4004
+      \""\""""
+  
+  ledger-sync-2:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647511,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647511,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/234,https://github.com/hyperledger/sawtooth-next-directory/pull/234,new path ./rbac/ledger_sync/Dockerfile,fde9d2833caced4715f9b276cad1fea743b57b49,2018-10-12 01:12:48,224647529,"@@ -0,0 +1,584 @@
+# Copyright 2018 Contributors to Hyperledger Sawtooth
+#
+# Licensed under the Apache License, Version 2.0 (the ""License"");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an ""AS IS"" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ------------------------------------------------------------------------------
+
+# This .yaml file will spin up four nodes hosting the Sawtooth Next Directory.
+# The Next Directory UI will be available at:
+#     http://10.5.0.70:4200 (node 0)
+#     http://10.5.0.71:4200 (node 1)
+#     http://10.5.0.72:4200 (node 2)
+#     http://10.5.0.73:4200 (node 3)
+
+version: ""3""
+
+networks:
+  node_network:
+    driver: bridge
+    ipam:
+      config:
+        - subnet: 10.5.0.0/16
+
+services:
+  shell:
+    build:
+      context: .
+      dockerfile: ./shell/Dockerfile
+    image: hyperledger/sawtooth-shell:1.0
+    container_name: rbac-shell
+    depends_on:
+      - rest-api-0
+      - rest-api-1
+      - rest-api-2
+      - rest-api-3
+    volumes:
+      - "".:/project/tmobile-rbac""
+    networks:
+      - node_network
+    environment:
+      PYTHONPATH: /project/tmobile-rbac/addressing:/project/tmobile-rbac/transaction_creation
+
+  rbac-server-0:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-0
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-0
+      - rethink-0
+      - validator-0
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.60
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-server --db-host rethink-0 --validator-host validator-0
+
+  rbac-server-1:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-1
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-1
+      - rethink-1
+      - validator-1
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.61
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-server --db-host rethink-1 --validator-host validator-1
+  
+  rbac-server-2:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-2
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-2
+      - rethink-2
+      - validator-2
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.62
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-server --db-host rethink-2 --validator-host validator-2
+
+  rbac-server-3:
+    build:
+      context: .
+      dockerfile: ./server/Dockerfile
+    container_name: rbac-server-3
+    image: rbac-server-production:${ISOLATION_ID-latest}
+    ports:
+      - ""8000""
+    depends_on:
+      - ledger-sync-3
+      - rethink-3
+      - validator-3
+    networks:
+      node_network:
+        ipv4_address: 10.5.0.63
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-server --db-host rethink-3 --validator-host validator-3
+    
+
+  rethink-0:
+    container_name: rbac-rethink-0
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-1:
+    container_name: rbac-rethink-1
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-2:
+    container_name: rbac-rethink-2
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+  
+  rethink-3:
+    container_name: rbac-rethink-3
+    image: rethinkdb:2.3
+    ports:
+      - ""8080""
+    networks:
+      - node_network
+
+  rbac-tp-0:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-0
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: ./bin/rbac-tp -vv tcp://validator-0:4004
+  
+  rbac-tp-1:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-1
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.61
+    command: ./bin/rbac-tp -vv tcp://validator-1:4004
+  
+  rbac-tp-2:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-2
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.62
+    command: ./bin/rbac-tp -vv tcp://validator-2:4004
+
+  rbac-tp-3:
+    build:
+      context: .
+      dockerfile: ./processor/Dockerfile
+    container_name: rbac-tp-3
+    image: rbac-tp-production:${ISOLATION_ID-latest}
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.63
+    command: ./bin/rbac-tp -vv tcp://validator-3:4004
+
+  ledger-sync-0:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile
+    container_name: rbac-ledger-sync-0
+    image: rbac-ledger-sync-production:${ISOLATION_ID-latest}
+    depends_on:
+      - rethink-0
+      - validator-0
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.60
+    command: |
+      bash -c ""
+        ./bin/setup_db --host rethink-0 &&
+        ./bin/rbac-ledger-sync -vv --db-host rethink-0 --validator tcp://validator-0:4004
+      \""\""""
+
+  ledger-sync-1:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile
+    container_name: rbac-ledger-sync-1
+    image: rbac-ledger-sync-production:${ISOLATION_ID-latest}
+    depends_on:
+      - rethink-1
+      - validator-1
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.61
+    command: |
+      bash -c ""
+        ./bin/setup_db --host rethink-1 &&
+        ./bin/rbac-ledger-sync -vv --db-host rethink-1 --validator tcp://validator-1:4004
+      \""\""""
+  
+  ledger-sync-2:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile
+    container_name: rbac-ledger-sync-2
+    image: rbac-ledger-sync-production:${ISOLATION_ID-latest}
+    depends_on:
+      - rethink-2
+      - validator-2
+    networks:
+      - node_network
+    environment:
+      - HOST=10.5.0.62
+    command: |
+      bash -c ""
+        ./bin/setup_db --host rethink-2 &&
+        ./bin/rbac-ledger-sync -vv --db-host rethink-2 --validator tcp://validator-2:4004
+      \""\""""
+
+  ledger-sync-3:
+    build:
+      context: .
+      dockerfile: ./ledger_sync/Dockerfile",,2018-10-12 17:57:17,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/224647529,https://github.com/hyperledger/sawtooth-next-directory/pull/234#discussion_r224647529,nadiabahrami
https://github.com/hyperledger/sawtooth-next-directory/pull/216,https://github.com/hyperledger/sawtooth-next-directory/pull/216,Duplicate lines at 25 & 27?,84553ec20c59f8cc1577db7222deb6eb9af9945c,2018-10-09 23:33:29,223896772,"@@ -20,8 +20,9 @@
 from sawtooth_sdk.processor.core import TransactionProcessor
 from sawtooth_sdk.processor.log import init_console_logging
 
+from rbac_processor.event_handler import RBACTransactionHandler
 
-from rbac_processor.handler import RBACTransactionHandler
+HOST = os.getenv(""HOST"", ""localhost"")
 ",15,2018-10-10 18:49:12,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/223896772,https://github.com/hyperledger/sawtooth-next-directory/pull/216#discussion_r223896772,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/216,https://github.com/hyperledger/sawtooth-next-directory/pull/216,Yes. Removed the duplicate,84553ec20c59f8cc1577db7222deb6eb9af9945c,2018-10-10 00:03:06,223901572,"@@ -20,8 +20,9 @@
 from sawtooth_sdk.processor.core import TransactionProcessor
 from sawtooth_sdk.processor.log import init_console_logging
 
+from rbac_processor.event_handler import RBACTransactionHandler
 
-from rbac_processor.handler import RBACTransactionHandler
+HOST = os.getenv(""HOST"", ""localhost"")
 ",15,2018-10-10 18:49:12,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/223901572,https://github.com/hyperledger/sawtooth-next-directory/pull/216#discussion_r223901572,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/178,https://github.com/hyperledger/sawtooth-next-directory/pull/178,Is this information (reset to genesis via commit pattern) documented anywhere else other than here (the Wiki or the README)?,9a8bf763ed80fbde78d0ca86609cce5a52145b19,2018-10-05 06:54:35,222907489,"@@ -9,7 +9,19 @@ ssh-add .travis/id_rsa
 git remote add deploy ssh://$DEPLOY_USER@$IP/~/$DEPLOY_DIR
 git push deploy master
 
-# SSH into the remote server and start NEXT Directory Platform
+# If the commit message contains the phrase 'RESET_NEXT_STORAGE', this deployment will ",5,2018-10-05 06:55:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/222907489,https://github.com/hyperledger/sawtooth-next-directory/pull/178#discussion_r222907489,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/178,https://github.com/hyperledger/sawtooth-next-directory/pull/178,This information is currently only documented here. I can add this information to the 'Deploy to Non-Localhost ' section in the README if this is the preferred location. Or should we have a Wiki section for this information? ,9a8bf763ed80fbde78d0ca86609cce5a52145b19,2018-10-05 15:57:28,223058154,"@@ -9,7 +9,19 @@ ssh-add .travis/id_rsa
 git remote add deploy ssh://$DEPLOY_USER@$IP/~/$DEPLOY_DIR
 git push deploy master
 
-# SSH into the remote server and start NEXT Directory Platform
+# If the commit message contains the phrase 'RESET_NEXT_STORAGE', this deployment will ",5,2018-10-05 15:57:29,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/223058154,https://github.com/hyperledger/sawtooth-next-directory/pull/178#discussion_r223058154,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/166,https://github.com/hyperledger/sawtooth-next-directory/pull/166,Should/can this displace dependencies brought in somewhere else (pip installs in Dockerfiles)?,8653a3c6012acfa828607e8f96352bb2d405b8c5,2018-10-02 04:49:10,221824703,"@@ -0,0 +1,15 @@
+itsdangerous==0.24",,2018-10-05 21:38:36,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/221824703,https://github.com/hyperledger/sawtooth-next-directory/pull/166#discussion_r221824703,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/166,https://github.com/hyperledger/sawtooth-next-directory/pull/166,"No, don't make these one PR.",8653a3c6012acfa828607e8f96352bb2d405b8c5,2018-10-05 14:42:17,223031287,"@@ -0,0 +1,15 @@
+itsdangerous==0.24",,2018-10-05 21:38:36,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/223031287,https://github.com/hyperledger/sawtooth-next-directory/pull/166#discussion_r223031287,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/166,https://github.com/hyperledger/sawtooth-next-directory/pull/166,/requirements.txt is used by Travis and should not be also used for development dependencies.,8653a3c6012acfa828607e8f96352bb2d405b8c5,2018-10-05 14:43:10,223031607,"@@ -0,0 +1,15 @@
+itsdangerous==0.24",,2018-10-05 21:38:36,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/223031607,https://github.com/hyperledger/sawtooth-next-directory/pull/166#discussion_r223031607,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/164,https://github.com/hyperledger/sawtooth-next-directory/pull/164,Does this support *.protobuf? Or is it already excluded at the beginning of the original file?,f4c1ca5b3f58960d96a9d0cd1d9b91d9a296aa9d,2018-10-02 04:38:57,221823492,"@@ -3,3 +3,203 @@ exclude=protobuf
 show-source=true
 show-pep8=true
 statistics=true
+[pep8]
+ignore=R,C,E501
+[pylint]
+ignore=CVS
+persistent=yes
+jobs=1
+unsafe-load-any-extension=no
+optimize-ast=no
+[pylint.messages control]
+# Disable the message, report, category or checker with the given id(s). You
+# can either give multiple identifiers separated by comma (,) or put this
+# option multiple times (only on the command line, not in the configuration
+# file where it should appear only once).You can also use ""--disable=all"" to
+# disable everything first and then reenable specific checks. For example, if
+# you want to run only the similarities checker, you can use ""--disable=all
+# --enable=similarities"". If you want to run only the classes checker, but have
+# no Warning level messages displayed, use""--disable=all --enable=classes
+# --disable=W""
+disable=R,C,E501,
+#missing-docstring,no-member,no-self-use,unused-argument,too-many-arguments,duplicate-code
+#C0111 - missing-docstring
+#C0413 - wrong-import-position
+#E0401 - import-error
+#E1101 - no-member
+#R0201 - no-self-use
+#W0613 - unused-argument
+#R0913 - too-many-arguments
+#R0801 - duplicate-code
+[pylint.reports]
+# Set the output format. Available formats are text, parseable, colorized, msvs
+# (visual studio) and html. You can also give a reporter class, eg
+# mypackage.mymodule.MyReporterClass.
+output-format=text
+# Put messages in a separate file for each module / package specified on the
+# command line instead of printing them on stdout. Reports (if any) will be
+# written in a file name ""pylint_global.[txt|html]"".
+files-output=no
+# Tells whether to display a full report or only the messages
+reports=no
+# Python expression which should return a note less than 10 (10 is the highest
+# note). You have access to the variables errors warning, statement which
+# respectively contain the number of errors / warnings messages and the total
+# number of statements analyzed. This is used by the global evaluation report
+# (RP0004).
+evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)
+[pylint.logging]
+# Logging modules to check that the string format arguments are in logging
+# function parameter format
+logging-modules=logging
+[pylint.variables]
+# Tells whether we should check for unused import in __init__ files.
+init-import=no
+# A regular expression matching the name of dummy variables (i.e. expectedly
+# not used).
+dummy-variables-rgx=_$|dummy
+# List of strings which can identify a callback function by name. A callback
+# name must start or end with one of those strings.
+callbacks=cb_,_cb
+[pylint.typecheck]
+# Tells whether missing members accessed in mixin class should be ignored. A
+# mixin class is detected if its name ends with ""mixin"" (case insensitive).
+ignore-mixin-members=yes
+# List of module names for which member attributes should not be checked
+# (useful for modules/projects where namespaces are manipulated during runtime
+# and thus existing member attributes cannot be deduced by static analysis. It
+# supports qualified module names, as well as Unix pattern matching.
+ignored-modules=rbac_processor.protobuf",73,2018-10-04 21:02:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/221823492,https://github.com/hyperledger/sawtooth-next-directory/pull/164#discussion_r221823492,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/164,https://github.com/hyperledger/sawtooth-next-directory/pull/164,"Not sure if these are flagged, but I support flagging them:
unused-argument
too-many-arguments
duplcate-code",f4c1ca5b3f58960d96a9d0cd1d9b91d9a296aa9d,2018-10-02 04:44:46,221824045,"@@ -3,3 +3,203 @@ exclude=protobuf
 show-source=true
 show-pep8=true
 statistics=true
+[pep8]
+ignore=R,C,E501
+[pylint]
+ignore=CVS
+persistent=yes
+jobs=1
+unsafe-load-any-extension=no
+optimize-ast=no
+[pylint.messages control]
+# Disable the message, report, category or checker with the given id(s). You
+# can either give multiple identifiers separated by comma (,) or put this
+# option multiple times (only on the command line, not in the configuration
+# file where it should appear only once).You can also use ""--disable=all"" to
+# disable everything first and then reenable specific checks. For example, if
+# you want to run only the similarities checker, you can use ""--disable=all
+# --enable=similarities"". If you want to run only the classes checker, but have
+# no Warning level messages displayed, use""--disable=all --enable=classes
+# --disable=W""
+disable=R,C,E501,
+#missing-docstring,no-member,no-self-use,unused-argument,too-many-arguments,duplicate-code
+#C0111 - missing-docstring
+#C0413 - wrong-import-position
+#E0401 - import-error
+#E1101 - no-member
+#R0201 - no-self-use
+#W0613 - unused-argument",32,2018-10-04 21:02:40,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/221824045,https://github.com/hyperledger/sawtooth-next-directory/pull/164#discussion_r221824045,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/146,https://github.com/hyperledger/sawtooth-next-directory/pull/146,"Because I couldn't find a way to pass the HOST variable from the `.env `file to the file `bin/populate_test_data.py`, I had the user input the hostname they would like to populate test data in when they run this python script.",850637c750113e464c24e134704443f31551bf8b,2018-09-27 18:24:37,221028876,"@@ -29,24 +29,29 @@ def insert_test_data():
       Builds out an example user, manager, role structure by making rest calls against the NEXT api.
     """"""
 
-    print(""Inserting test data..."")
+    host = input(""What is the hostname you would like to populate test """,15,2018-09-27 22:48:01,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/221028876,https://github.com/hyperledger/sawtooth-next-directory/pull/146#discussion_r221028876,mtn217
https://github.com/hyperledger/sawtooth-next-directory/pull/121,https://github.com/hyperledger/sawtooth-next-directory/pull/121,Nitpick recommendation: Copyright 2018 The Sawtooth NEXT Directory Authors,5e387f3eaeb850fe44103237e175515c68d987d7,2018-09-20 21:50:03,219328750,"@@ -0,0 +1,71 @@
+#!/usr/bin/env bash
+
+# Copyright 2017 Intel Corporation",3,2018-09-26 15:32:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/219328750,https://github.com/hyperledger/sawtooth-next-directory/pull/121#discussion_r219328750,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/121,https://github.com/hyperledger/sawtooth-next-directory/pull/121,"Please add or refer to (Dockerfiles) more information about the -b and -p flags here.  Anything that explains why you would apply 'dev' and 'persist', what type of behavior to expect in doing so, etc.",5e387f3eaeb850fe44103237e175515c68d987d7,2018-09-20 21:58:24,219330573,"@@ -43,6 +48,11 @@ which can be accomplished using the `--build` flag:
 docker-compose up --build
 ```
 
+A shortcut is available via:",16,2018-09-26 15:32:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/219330573,https://github.com/hyperledger/sawtooth-next-directory/pull/121#discussion_r219330573,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/121,https://github.com/hyperledger/sawtooth-next-directory/pull/121,Waiting for official guidance on copyright notices.,5e387f3eaeb850fe44103237e175515c68d987d7,2018-09-21 17:18:51,219568980,"@@ -0,0 +1,71 @@
+#!/usr/bin/env bash
+
+# Copyright 2017 Intel Corporation",3,2018-09-26 15:32:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/219568980,https://github.com/hyperledger/sawtooth-next-directory/pull/121#discussion_r219568980,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/121,https://github.com/hyperledger/sawtooth-next-directory/pull/121,"Data persistence is experimental and development purposes only, it is not ready to be described in the README until Issue #122 is resolved.

Open an issue with regards to adding documentation on when to use --build. This PR does not address building the project.",5e387f3eaeb850fe44103237e175515c68d987d7,2018-09-21 17:23:30,219570138,"@@ -43,6 +48,11 @@ which can be accomplished using the `--build` flag:
 docker-compose up --build
 ```
 
+A shortcut is available via:",16,2018-09-26 15:32:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/219570138,https://github.com/hyperledger/sawtooth-next-directory/pull/121#discussion_r219570138,adamgering
https://github.com/hyperledger/sawtooth-next-directory/pull/121,https://github.com/hyperledger/sawtooth-next-directory/pull/121,Fine. Proceeding to ping the officials.,5e387f3eaeb850fe44103237e175515c68d987d7,2018-09-21 17:23:51,219570226,"@@ -0,0 +1,71 @@
+#!/usr/bin/env bash
+
+# Copyright 2017 Intel Corporation",3,2018-09-26 15:32:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/219570226,https://github.com/hyperledger/sawtooth-next-directory/pull/121#discussion_r219570226,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/121,https://github.com/hyperledger/sawtooth-next-directory/pull/121,"I don't think the final decision will be 2017, Intel. Rather than copy-pasting while awaiting an official decision, we should adopt something to reflect the need for an answer:
Copyright TODO
Copyright 2018 The Sawtooth NEXT Directory Authors
Copyright 2018 TBD",5e387f3eaeb850fe44103237e175515c68d987d7,2018-09-21 17:46:29,219576719,"@@ -0,0 +1,71 @@
+#!/usr/bin/env bash
+
+# Copyright 2017 Intel Corporation",3,2018-09-26 15:32:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/219576719,https://github.com/hyperledger/sawtooth-next-directory/pull/121#discussion_r219576719,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/121,https://github.com/hyperledger/sawtooth-next-directory/pull/121,Ok. I like the documentation in the files themselves so that ought to suffice for now.,5e387f3eaeb850fe44103237e175515c68d987d7,2018-09-21 18:10:43,219583754,"@@ -43,6 +48,11 @@ which can be accomplished using the `--build` flag:
 docker-compose up --build
 ```
 
+A shortcut is available via:",16,2018-09-26 15:32:02,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/219583754,https://github.com/hyperledger/sawtooth-next-directory/pull/121#discussion_r219583754,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/120,https://github.com/hyperledger/sawtooth-next-directory/pull/120,The changes in this file address linting issues and bring docker-compose-dev up to speed with docker-compose,3583532b7caaa80fc0658aab422056403f73f646,2018-09-19 22:43:11,218987405,"@@ -21,71 +21,87 @@ services:
       context: .
       dockerfile: ./server/Dockerfile-dev
       args:
-        - http_proxy
-        - https_proxy
-        - no_proxy
+      - http_proxy",,2018-09-21 00:33:44,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/218987405,https://github.com/hyperledger/sawtooth-next-directory/pull/120#discussion_r218987405,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/120,https://github.com/hyperledger/sawtooth-next-directory/pull/120,Removed this as it activates a breakpoint on every deployment.,3583532b7caaa80fc0658aab422056403f73f646,2018-09-19 22:45:02,218987766,"@@ -1,55 +1,52 @@
-import { Component, OnInit } from '@angular/core';
+import {Component, OnInit} from '@angular/core';
 import {TableHeader} from ""../../models/table-header.model"";
-import {PendingApprovalActionsComponent} from ""../../secondary-components/pending-approval-actions/pending-approval-actions.component"";
-import { ActivatedRoute } from '@angular/router';
-import { UsersUtilsService } from '../../services/users/users-utils.service';
-import { RequestsActionsComponent } from '../../secondary-components/requests-actions/requests-actions.component';
-import { UpdateManagerActionsComponent } from '../../secondary-components/update-manager-actions/update-manager-actions.component';
+import {ActivatedRoute} from '@angular/router';
+import {UsersUtilsService} from '../../services/users/users-utils.service';
+import {UpdateManagerActionsComponent} from '../../secondary-components/update-manager-actions/update-manager-actions.component';
 
 @Component({
-  selector: 'app-employees',
-  templateUrl: './employees.component.html',
-  styleUrls: ['./employees.component.scss']
+    selector: 'app-employees',
+    templateUrl: './employees.component.html',
+    styleUrls: ['./employees.component.scss']
 })
 export class EmployeesComponent implements OnInit {
-  
-  public requestsSent;
-  public tableConfig;
-  public showModal = false;
-  public modal = '';
-  public employees: any= [];
-
-  constructor(private activatedRoute: ActivatedRoute, 
-              private usersUtils: UsersUtilsService) { 
-    debugger",,2018-09-21 00:33:44,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/218987766,https://github.com/hyperledger/sawtooth-next-directory/pull/120#discussion_r218987766,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/60,https://github.com/hyperledger/sawtooth-next-directory/pull/60,Nice docstring,f7e242a757408c87e9db31312475484b84b176ef,2018-09-12 23:48:58,217224021,"@@ -104,8 +104,25 @@ def apply_propose_remove(header, payload, state):
         state=state)
 
 
-def apply_confirm(header, payload, state):
-    confirm_payload = task_transaction_pb2.ConfirmAddTaskOwner()
+def apply_confirm(header, payload, state, is_remove=False):
+    """"""Apply the (Add | Remove) TaskOwners transaction.
+
+    Args:",18,2018-09-12 23:50:00,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/217224021,https://github.com/hyperledger/sawtooth-next-directory/pull/60#discussion_r217224021,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/56,https://github.com/hyperledger/sawtooth-next-directory/pull/56,Not sure why or how this change and the build health reporting in README are shown as missing in master (?),8aec06406496f70c731ad15816c7b607ce597a07,2018-09-12 00:06:47,216862253,"@@ -0,0 +1,8 @@
+language: python
+python: ",2,2018-09-20 19:35:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/216862253,https://github.com/hyperledger/sawtooth-next-directory/pull/56#discussion_r216862253,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/56,https://github.com/hyperledger/sawtooth-next-directory/pull/56,This removes the (previously inaccurate) statement that sample keys are not provided and must be input. I'm concerned however that people may deploy without understanding that there is an insecure key used if there is no mention of it. Thoughts?,8aec06406496f70c731ad15816c7b607ce597a07,2018-09-17 17:00:24,218148912,"@@ -17,13 +20,8 @@ The easiest way to run these components is with
 [Docker](https://www.docker.com/what-docker). To start these components,
 first install Docker for your platform and clone this repo.
 
-Next, create a `server/config.py` file based off the example at
-`server/config.py.example`. Pay special attention to the secret keys at the
-bottom of the example file. While other settings have defaults and can be
-omitted, these keys have no defaults and _must_ be provided to run the server.",17,2018-09-20 19:35:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/218148912,https://github.com/hyperledger/sawtooth-next-directory/pull/56#discussion_r218148912,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/56,https://github.com/hyperledger/sawtooth-next-directory/pull/56,"I moved it to a section further down titled: ""Deploying to Any Non-Localhost Server"" and tried to elaborate further on the reasoning for having to supply your own config.yaml (why it should not be in VCS, etc)",8aec06406496f70c731ad15816c7b607ce597a07,2018-09-17 17:08:14,218151581,"@@ -17,13 +20,8 @@ The easiest way to run these components is with
 [Docker](https://www.docker.com/what-docker). To start these components,
 first install Docker for your platform and clone this repo.
 
-Next, create a `server/config.py` file based off the example at
-`server/config.py.example`. Pay special attention to the secret keys at the
-bottom of the example file. While other settings have defaults and can be
-omitted, these keys have no defaults and _must_ be provided to run the server.",17,2018-09-20 19:35:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/218151581,https://github.com/hyperledger/sawtooth-next-directory/pull/56#discussion_r218151581,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/56,https://github.com/hyperledger/sawtooth-next-directory/pull/56,"Evidence for why I should complete a review before commenting. ;) That said, the statement is still inaccurate, no? I believe there are defaults and they need not be provided to run the server.",8aec06406496f70c731ad15816c7b607ce597a07,2018-09-17 17:20:18,218155287,"@@ -17,13 +20,8 @@ The easiest way to run these components is with
 [Docker](https://www.docker.com/what-docker). To start these components,
 first install Docker for your platform and clone this repo.
 
-Next, create a `server/config.py` file based off the example at
-`server/config.py.example`. Pay special attention to the secret keys at the
-bottom of the example file. While other settings have defaults and can be
-omitted, these keys have no defaults and _must_ be provided to run the server.",17,2018-09-20 19:35:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/218155287,https://github.com/hyperledger/sawtooth-next-directory/pull/56#discussion_r218155287,chrisspanton
https://github.com/hyperledger/sawtooth-next-directory/pull/56,https://github.com/hyperledger/sawtooth-next-directory/pull/56,"I think you are correct as I recall seeing defaults set in the file and then overridden by the values in config.py. Confirming now, and will remove that statement upon confirmation.",8aec06406496f70c731ad15816c7b607ce597a07,2018-09-17 17:24:02,218156403,"@@ -17,13 +20,8 @@ The easiest way to run these components is with
 [Docker](https://www.docker.com/what-docker). To start these components,
 first install Docker for your platform and clone this repo.
 
-Next, create a `server/config.py` file based off the example at
-`server/config.py.example`. Pay special attention to the secret keys at the
-bottom of the example file. While other settings have defaults and can be
-omitted, these keys have no defaults and _must_ be provided to run the server.",17,2018-09-20 19:35:19,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/218156403,https://github.com/hyperledger/sawtooth-next-directory/pull/56#discussion_r218156403,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/28,https://github.com/hyperledger/sawtooth-next-directory/pull/28,Need a space -> #### System Dependencies,ad76fdb7706e9c7ca90f6ca7b353b6ac5618d4fe,2018-09-05 18:43:36,215384108,"@@ -45,6 +45,21 @@ for configuring / running the UI server.
 
 ## Development
 
+####System Dependencies ",,2018-09-05 18:57:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/215384108,https://github.com/hyperledger/sawtooth-next-directory/pull/28#discussion_r215384108,devsatishm
https://github.com/hyperledger/sawtooth-next-directory/pull/28,https://github.com/hyperledger/sawtooth-next-directory/pull/28,"Need a space -> #### Deploying to Localhost

",ad76fdb7706e9c7ca90f6ca7b353b6ac5618d4fe,2018-09-05 18:43:57,215384233,"@@ -45,6 +45,21 @@ for configuring / running the UI server.
 
 ## Development
 
+####System Dependencies 
+
+The server code is written in python3. Confirm your version using command:
+
+    python -V
+
+If Python is missing or an earlier version, install python3 and pip3. 
+
+PyYaml is required for running tests. Install it using pip3:
+
+    pip3 install pyyaml
+
+
+####Deploying to Localhost",,2018-09-05 18:57:50,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/215384233,https://github.com/hyperledger/sawtooth-next-directory/pull/28#discussion_r215384233,devsatishm
https://github.com/hyperledger/sawtooth-next-directory/pull/28,https://github.com/hyperledger/sawtooth-next-directory/pull/28,Added spaces to both subsection headers,ad76fdb7706e9c7ca90f6ca7b353b6ac5618d4fe,2018-09-05 18:58:05,215388896,"@@ -45,6 +45,21 @@ for configuring / running the UI server.
 
 ## Development
 
+####System Dependencies 
+
+The server code is written in python3. Confirm your version using command:
+
+    python -V
+
+If Python is missing or an earlier version, install python3 and pip3. 
+
+PyYaml is required for running tests. Install it using pip3:
+
+    pip3 install pyyaml
+
+
+####Deploying to Localhost",,2018-09-05 18:58:06,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/215388896,https://github.com/hyperledger/sawtooth-next-directory/pull/28#discussion_r215388896,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/21,https://github.com/hyperledger/sawtooth-next-directory/pull/21,"The last line does not have a new line.
Edit: this appears to be fixed now.",57291bf07cb3fbb173d56f9bd74a7430a30e4bc1,2018-08-23 16:13:06,212369872,"@@ -0,0 +1,16 @@
+<!--=========================================================================
+Copyright © 2017 T-Mobile USA, Inc.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+   http://www.apache.org/licenses/LICENSE-2.0
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+=========================================================================-->
+
+ISOLATION_ID=latest",16,2018-08-29 18:19:28,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/212369872,https://github.com/hyperledger/sawtooth-next-directory/pull/21#discussion_r212369872,danintel
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,Should this variable be underscored (ie is_remove)?,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-27 18:20:12,213067133,"@@ -35,7 +35,7 @@
 from rbac_processor.state import set_state
 
 
-def validate_role_rel_proposal(header, propose, rel_address, state):
+def validate_role_rel_proposal(header, propose, rel_address, state, isRemove = False):",,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213067133,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213067133,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,"I am still ramping up on my PEP8, but can this be reformatted for readability? eg:

await r.table('auth')
           .filter(r.row[""user_name""] == user_name)
           .coerce_to('array')
           .run(conn)",b28859216e24156adb99b43f35fa7ee07705b885,2018-08-27 18:51:27,213076688,"@@ -17,16 +17,33 @@
 
 from api.errors import ApiNotFound
 
+import logging
+
+LOGGER = logging.getLogger(__name__)
 
 async def create_auth_entry(conn, auth_entry):
     return await r.table('auth').insert(auth_entry).run(conn)
 
 
 async def fetch_info_by_user_id(conn, user_id):
+    LOGGER.warning('fetching user with id: ' + user_id)
     auth_info = await r.table('auth').get(user_id).run(conn)
     if auth_info is None:
         raise ApiNotFound(
             ""Not Found: ""
             ""No user with id '{}' exists."".format(user_id)
         )
     return auth_info
+
+async def fetch_info_by_user_name(conn, user_name):
+    auth_info = await r.table('auth').filter(r.row[""user_name""] == user_name).coerce_to('array').run(conn) #filter( {user_name: 'manager_a'}).run(conn)",,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213076688,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213076688,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,Does the response need to be logged?,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-27 21:14:03,213117698,"@@ -0,0 +1,72 @@
+import {Component, OnInit, Input, Output, EventEmitter, Injector} from '@angular/core';
+import {FormControl} from ""@angular/forms"";
+import {UsersService} from ""../../services/users/users.service"";
+import {GroupService} from ""../../services/groups/group.service"";
+import {ContextService} from ""../../services/context.service"";
+import {UtilsService} from ""../../services/utils.service"";
+import { UsersUtilsService } from '../../services/users/users-utils.service';
+
+@Component({
+  selector: 'app-request-manager-modal-component',
+  templateUrl: './request-manager-modal.component.html',
+  styleUrls: ['./request-manager-modal.component.scss']
+})
+export class RequestManagerModalComponent {
+
+    private _show;
+    public row;
+    public users;
+    public self;
+
+    public requestManagerForm = new FormControl();
+    @Input() group;
+
+    @Output() onManagerRequested= new EventEmitter();
+    @Output() showChange = new EventEmitter();
+
+    @Input()
+    set show(value) {
+        this._show = value;
+        this.showChange.emit(this._show);
+    }
+
+    get show() {
+        return this._show;
+    }
+
+    constructor(private injector: Injector,
+                private usersService: UsersService,
+                private utils: UtilsService,
+                private usersUtils: UsersUtilsService,
+                private context: ContextService,
+                private groupService: GroupService) {
+        this.users = context.getAllUsers();
+        this.self = context.getUser();
+        try {
+            this.row = injector.get('row');
+        } catch (ex) {
+            console.log('no employees to populate yet.');
+        }
+    }
+
+    close() {
+        this.show = false;
+    }
+
+    requestManager() {
+        this.usersService.updateManager(this.self.id, this.requestManagerForm.value.id)
+            .then((response) => {
+                console.log(response);",,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213117698,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213117698,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,This TableHeader is duplicated across RequestsComponent and PendingApprovalComponent. Would it make sense to extract it into an object that each component uses instead?,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-27 21:26:08,213121079,"@@ -55,6 +69,48 @@ export class RequestsComponent {
                 new TableHeader('Group Requested', '', 'function', (element) => {
                     return this.groupUtils.getGroup(element.object).name;
                 }),
+                new TableHeader('Join / Remove', '', 'function', (element) => {",36,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213121079,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213121079,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,Can this line go away or be implemented?,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-27 21:27:02,213121318,"@@ -68,6 +70,11 @@ export class ContextService {
         this.allUsers = userList;
     }
 
+    setAllManagers(userList) {
+        // let managers = _.filter(userList, 'manager');",,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213121318,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213121318,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,"Should the message here be ""Promote all to owner"" or something that differentiates it from the log message in promoteToOwner()?",b28859216e24156adb99b43f35fa7ee07705b885,2018-08-27 21:28:00,213121584,"@@ -48,42 +48,76 @@ export class GroupService {
             .catch(this.utils.catchError);
     }
 
-    leaveGroup(userId, groupId) {
-        return this.utils.setTimeoutPromise(1000)
-            .then(() => {
-                return true;
+    addOwnerToGroup(groupId, member) {
+        let request = environment.add_owner(groupId, member);
+        return this.http.post(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Add Owner: ',response.json());
+                return response.json();
+            })
+            .catch(this.utils.catchError);
+    }
+
+    addAdminToGroup(groupId, member) {
+        let request = environment.add_admin(groupId, member);
+        return this.http.post(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Add Admin: ',response.json());
+                return response.json();
             })
             .catch(this.utils.catchError);
     }
 
+    leaveGroup(userId, groupId) {
+        return this.removeFromGroup(userId, groupId);
+    }
+
     promoteToOwner(userId, groupId) {
-        return this.utils.setTimeoutPromise(500)
-            .then(() => {
-                return true;
+        let request = environment.promote_member_to_role_owner(groupId, userId);
+        return this.http.patch(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Promote member to owner: ',response.json());
+                return response.json();
             })
             .catch(this.utils.catchError);
     }
 
     promoteAllToOwner(selection) {
-        return this.utils.setTimeoutPromise(500)
-            .then(() => {
-                return true;
+        const groupId = selection[0].memberOf[0];
+        const member = selection[0].id;
+        let request = environment.promote_member_to_role_owner(groupId, member);
+        return this.http.patch(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Promote member to owner: ',response.json());",67,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213121584,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213121584,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,yes. i will keep consistent naming. thanks for pointing this out. ,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-29 14:33:56,213702659,"@@ -35,7 +35,7 @@
 from rbac_processor.state import set_state
 
 
-def validate_role_rel_proposal(header, propose, rel_address, state):
+def validate_role_rel_proposal(header, propose, rel_address, state, isRemove = False):",,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213702659,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213702659,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,taking the suggestion ,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-29 15:01:27,213714598,"@@ -17,16 +17,33 @@
 
 from api.errors import ApiNotFound
 
+import logging
+
+LOGGER = logging.getLogger(__name__)
 
 async def create_auth_entry(conn, auth_entry):
     return await r.table('auth').insert(auth_entry).run(conn)
 
 
 async def fetch_info_by_user_id(conn, user_id):
+    LOGGER.warning('fetching user with id: ' + user_id)
     auth_info = await r.table('auth').get(user_id).run(conn)
     if auth_info is None:
         raise ApiNotFound(
             ""Not Found: ""
             ""No user with id '{}' exists."".format(user_id)
         )
     return auth_info
+
+async def fetch_info_by_user_name(conn, user_name):
+    auth_info = await r.table('auth').filter(r.row[""user_name""] == user_name).coerce_to('array').run(conn) #filter( {user_name: 'manager_a'}).run(conn)",,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213714598,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213714598,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,removing the log,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-29 15:37:05,213729118,"@@ -0,0 +1,72 @@
+import {Component, OnInit, Input, Output, EventEmitter, Injector} from '@angular/core';
+import {FormControl} from ""@angular/forms"";
+import {UsersService} from ""../../services/users/users.service"";
+import {GroupService} from ""../../services/groups/group.service"";
+import {ContextService} from ""../../services/context.service"";
+import {UtilsService} from ""../../services/utils.service"";
+import { UsersUtilsService } from '../../services/users/users-utils.service';
+
+@Component({
+  selector: 'app-request-manager-modal-component',
+  templateUrl: './request-manager-modal.component.html',
+  styleUrls: ['./request-manager-modal.component.scss']
+})
+export class RequestManagerModalComponent {
+
+    private _show;
+    public row;
+    public users;
+    public self;
+
+    public requestManagerForm = new FormControl();
+    @Input() group;
+
+    @Output() onManagerRequested= new EventEmitter();
+    @Output() showChange = new EventEmitter();
+
+    @Input()
+    set show(value) {
+        this._show = value;
+        this.showChange.emit(this._show);
+    }
+
+    get show() {
+        return this._show;
+    }
+
+    constructor(private injector: Injector,
+                private usersService: UsersService,
+                private utils: UtilsService,
+                private usersUtils: UsersUtilsService,
+                private context: ContextService,
+                private groupService: GroupService) {
+        this.users = context.getAllUsers();
+        this.self = context.getUser();
+        try {
+            this.row = injector.get('row');
+        } catch (ex) {
+            console.log('no employees to populate yet.');
+        }
+    }
+
+    close() {
+        this.show = false;
+    }
+
+    requestManager() {
+        this.usersService.updateManager(this.self.id, this.requestManagerForm.value.id)
+            .then((response) => {
+                console.log(response);",,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213729118,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213729118,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,removing comment. ,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-29 15:38:27,213729752,"@@ -68,6 +70,11 @@ export class ContextService {
         this.allUsers = userList;
     }
 
+    setAllManagers(userList) {
+        // let managers = _.filter(userList, 'manager');",,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213729752,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213729752,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,"the ""promoteAllToOwner"" method does not seem right. we will need to fix it in the other PR. this log message seems proper for this method. Will use a different log message once we are working to fix ""promoteAllToOwner""",b28859216e24156adb99b43f35fa7ee07705b885,2018-08-29 15:47:59,213733550,"@@ -48,42 +48,76 @@ export class GroupService {
             .catch(this.utils.catchError);
     }
 
-    leaveGroup(userId, groupId) {
-        return this.utils.setTimeoutPromise(1000)
-            .then(() => {
-                return true;
+    addOwnerToGroup(groupId, member) {
+        let request = environment.add_owner(groupId, member);
+        return this.http.post(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Add Owner: ',response.json());
+                return response.json();
+            })
+            .catch(this.utils.catchError);
+    }
+
+    addAdminToGroup(groupId, member) {
+        let request = environment.add_admin(groupId, member);
+        return this.http.post(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Add Admin: ',response.json());
+                return response.json();
             })
             .catch(this.utils.catchError);
     }
 
+    leaveGroup(userId, groupId) {
+        return this.removeFromGroup(userId, groupId);
+    }
+
     promoteToOwner(userId, groupId) {
-        return this.utils.setTimeoutPromise(500)
-            .then(() => {
-                return true;
+        let request = environment.promote_member_to_role_owner(groupId, userId);
+        return this.http.patch(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Promote member to owner: ',response.json());
+                return response.json();
             })
             .catch(this.utils.catchError);
     }
 
     promoteAllToOwner(selection) {
-        return this.utils.setTimeoutPromise(500)
-            .then(() => {
-                return true;
+        const groupId = selection[0].memberOf[0];
+        const member = selection[0].id;
+        let request = environment.promote_member_to_role_owner(groupId, member);
+        return this.http.patch(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Promote member to owner: ',response.json());",67,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213733550,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213733550,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,TableHeader registers to a column on the UI. might be an over kill to take out the TableHeader? I am not sure whether I get the comment right?,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-29 15:59:43,213738030,"@@ -55,6 +69,48 @@ export class RequestsComponent {
                 new TableHeader('Group Requested', '', 'function', (element) => {
                     return this.groupUtils.getGroup(element.object).name;
                 }),
+                new TableHeader('Join / Remove', '', 'function', (element) => {",36,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213738030,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213738030,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,Ok that works.,b28859216e24156adb99b43f35fa7ee07705b885,2018-08-29 16:28:09,213747582,"@@ -48,42 +48,76 @@ export class GroupService {
             .catch(this.utils.catchError);
     }
 
-    leaveGroup(userId, groupId) {
-        return this.utils.setTimeoutPromise(1000)
-            .then(() => {
-                return true;
+    addOwnerToGroup(groupId, member) {
+        let request = environment.add_owner(groupId, member);
+        return this.http.post(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Add Owner: ',response.json());
+                return response.json();
+            })
+            .catch(this.utils.catchError);
+    }
+
+    addAdminToGroup(groupId, member) {
+        let request = environment.add_admin(groupId, member);
+        return this.http.post(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Add Admin: ',response.json());
+                return response.json();
             })
             .catch(this.utils.catchError);
     }
 
+    leaveGroup(userId, groupId) {
+        return this.removeFromGroup(userId, groupId);
+    }
+
     promoteToOwner(userId, groupId) {
-        return this.utils.setTimeoutPromise(500)
-            .then(() => {
-                return true;
+        let request = environment.promote_member_to_role_owner(groupId, userId);
+        return this.http.patch(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Promote member to owner: ',response.json());
+                return response.json();
             })
             .catch(this.utils.catchError);
     }
 
     promoteAllToOwner(selection) {
-        return this.utils.setTimeoutPromise(500)
-            .then(() => {
-                return true;
+        const groupId = selection[0].memberOf[0];
+        const member = selection[0].id;
+        let request = environment.promote_member_to_role_owner(groupId, member);
+        return this.http.patch(request.url, request.body, this.context.httpOptions())
+            .toPromise()
+            .then((response) => {
+                console.log('Promote member to owner: ',response.json());",67,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213747582,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213747582,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/18,https://github.com/hyperledger/sawtooth-next-directory/pull/18,"I just noticed that there is a shared TableHeader across a few views in the app and wondered how easily it could be extracted (so changes to the table header would be reflected across all tables having the same header). Considering it is a subset of the entire table and that tables are different, it could end up being overkill to extract it as you said.",b28859216e24156adb99b43f35fa7ee07705b885,2018-08-29 16:31:14,213748669,"@@ -55,6 +69,48 @@ export class RequestsComponent {
                 new TableHeader('Group Requested', '', 'function', (element) => {
                     return this.groupUtils.getGroup(element.object).name;
                 }),
+                new TableHeader('Join / Remove', '', 'function', (element) => {",36,2018-08-31 17:46:25,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/213748669,https://github.com/hyperledger/sawtooth-next-directory/pull/18#discussion_r213748669,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/13,https://github.com/hyperledger/sawtooth-next-directory/pull/13,Please remove the commented code. We typically only commit active code and rely on version control for preserving old code.,fed8d3563391917ccfde1d567b81d227b2619d61,2018-07-17 14:04:26,203034757,"@@ -61,17 +61,19 @@ def decorator(func):
 
     password = request.json.get('password')
     hashed_pwd = hashlib.sha256(password.encode('utf-8')).hexdigest()
-    auth_info = await auth_query.fetch_info_by_user_id(
+    auth_info = await auth_query.fetch_info_by_user_name(
         request.app.config.DB_CONN, request.json.get('id')
     )
     if auth_info is None or auth_info.get('hashed_password') != hashed_pwd:
         raise ApiUnauthorized(""Unauthorized: Incorrect user id or password"")
     token = utils.generate_apikey(
         request.app.config.SECRET_KEY,
-        request.json.get('id')
+        auth_info.get('user_id')
+        # request.json.get('id')",,2018-08-19 16:06:42,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/203034757,https://github.com/hyperledger/sawtooth-next-directory/pull/13#discussion_r203034757,dcmiddle
https://github.com/hyperledger/sawtooth-next-directory/pull/13,https://github.com/hyperledger/sawtooth-next-directory/pull/13,I have missed the comment. Completely agree that no code comment should be checked in. Thanks for pointing this out.,fed8d3563391917ccfde1d567b81d227b2619d61,2018-07-23 14:17:32,204417772,"@@ -61,17 +61,19 @@ def decorator(func):
 
     password = request.json.get('password')
     hashed_pwd = hashlib.sha256(password.encode('utf-8')).hexdigest()
-    auth_info = await auth_query.fetch_info_by_user_id(
+    auth_info = await auth_query.fetch_info_by_user_name(
         request.app.config.DB_CONN, request.json.get('id')
     )
     if auth_info is None or auth_info.get('hashed_password') != hashed_pwd:
         raise ApiUnauthorized(""Unauthorized: Incorrect user id or password"")
     token = utils.generate_apikey(
         request.app.config.SECRET_KEY,
-        request.json.get('id')
+        auth_info.get('user_id')
+        # request.json.get('id')",,2018-08-19 16:06:42,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/204417772,https://github.com/hyperledger/sawtooth-next-directory/pull/13#discussion_r204417772,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/13,https://github.com/hyperledger/sawtooth-next-directory/pull/13,nitpick: Can the comment at the end of this be removed?,fed8d3563391917ccfde1d567b81d227b2619d61,2018-08-31 01:13:53,214223075,"@@ -17,16 +17,33 @@
 
 from api.errors import ApiNotFound
 
+import logging
+
+LOGGER = logging.getLogger(__name__)
 
 async def create_auth_entry(conn, auth_entry):
     return await r.table('auth').insert(auth_entry).run(conn)
 
 
 async def fetch_info_by_user_id(conn, user_id):
+    LOGGER.warning('fetching user with id: ' + user_id)
     auth_info = await r.table('auth').get(user_id).run(conn)
     if auth_info is None:
         raise ApiNotFound(
             ""Not Found: ""
             ""No user with id '{}' exists."".format(user_id)
         )
     return auth_info
+
+async def fetch_info_by_user_name(conn, user_name):
+    auth_info = await r.table('auth').filter(r.row[""user_name""] == user_name).coerce_to('array').run(conn) #filter( {user_name: 'manager_a'}).run(conn)",23,2018-08-31 01:13:53,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/214223075,https://github.com/hyperledger/sawtooth-next-directory/pull/13#discussion_r214223075,kthblmfld
https://github.com/hyperledger/sawtooth-next-directory/pull/13,https://github.com/hyperledger/sawtooth-next-directory/pull/13,this is already removed at the other PR. the other PR is based on this branch. ,fed8d3563391917ccfde1d567b81d227b2619d61,2018-08-31 13:45:53,214358065,"@@ -17,16 +17,33 @@
 
 from api.errors import ApiNotFound
 
+import logging
+
+LOGGER = logging.getLogger(__name__)
 
 async def create_auth_entry(conn, auth_entry):
     return await r.table('auth').insert(auth_entry).run(conn)
 
 
 async def fetch_info_by_user_id(conn, user_id):
+    LOGGER.warning('fetching user with id: ' + user_id)
     auth_info = await r.table('auth').get(user_id).run(conn)
     if auth_info is None:
         raise ApiNotFound(
             ""Not Found: ""
             ""No user with id '{}' exists."".format(user_id)
         )
     return auth_info
+
+async def fetch_info_by_user_name(conn, user_name):
+    auth_info = await r.table('auth').filter(r.row[""user_name""] == user_name).coerce_to('array').run(conn) #filter( {user_name: 'manager_a'}).run(conn)",23,2018-08-31 13:45:54,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/214358065,https://github.com/hyperledger/sawtooth-next-directory/pull/13#discussion_r214358065,yunhangc
https://github.com/hyperledger/sawtooth-next-directory/pull/7,https://github.com/hyperledger/sawtooth-next-directory/pull/7,Hi @grkvlt Thanks for your work on this. Does the RethinkDb container need to link ports with the host and are these the correct ports?,8e67dd297511443431a44615fa1a7eaf49047443,2018-03-20 21:14:05,175924675,"@@ -39,8 +39,8 @@ services:
 
   rethink:
     image: rethinkdb:2.3
-    expose:
-      - 28015
+    ports:
+      - ""9090:8080""",29,2018-04-18 20:38:37,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/175924675,https://github.com/hyperledger/sawtooth-next-directory/pull/7#discussion_r175924675,boydjohnson
https://github.com/hyperledger/sawtooth-next-directory/pull/7,https://github.com/hyperledger/sawtooth-next-directory/pull/7,"This is for the RethinkDB dashboard, so I exposed it to have a look at how it works. I think it's fine for the compose files, obviously you'd do something a bit more secure for a production setup...",8e67dd297511443431a44615fa1a7eaf49047443,2018-03-21 13:43:59,176084892,"@@ -39,8 +39,8 @@ services:
 
   rethink:
     image: rethinkdb:2.3
-    expose:
-      - 28015
+    ports:
+      - ""9090:8080""",29,2018-04-18 20:38:37,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/176084892,https://github.com/hyperledger/sawtooth-next-directory/pull/7#discussion_r176084892,grkvlt
https://github.com/hyperledger/sawtooth-next-directory/pull/3,https://github.com/hyperledger/sawtooth-next-directory/pull/3,Can this be changed to Apache2,f6cec7b26ceec12d9f16226342f8fc11ce04b10f,2017-12-11 15:04:38,156097472,"@@ -0,0 +1,66 @@
+{
+  ""name"": ""hyper-directory"",
+  ""version"": ""0.0.0"",
+  ""license"": ""MIT"",",,2018-01-08 17:44:05,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/156097472,https://github.com/hyperledger/sawtooth-next-directory/pull/3#discussion_r156097472,cianx
https://github.com/hyperledger/sawtooth-next-directory/pull/2,https://github.com/hyperledger/sawtooth-next-directory/pull/2,Plz update title. And yes this means that this file in sawtooth-core is really old. :man_facepalming: . ,b475dae46b75be08f39b005eec13f4fdf0cbaca0,2017-11-30 15:16:07,154103924,"@@ -0,0 +1,108 @@
+# Contributing to Distributed Ledger",,2017-11-30 15:48:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/154103924,https://github.com/hyperledger/sawtooth-next-directory/pull/2#discussion_r154103924,dcmiddle
https://github.com/hyperledger/sawtooth-next-directory/pull/2,https://github.com/hyperledger/sawtooth-next-directory/pull/2,replace Distributed Ledger with Hyper Directory and/or Sawtooth version,b475dae46b75be08f39b005eec13f4fdf0cbaca0,2017-11-30 15:17:17,154104313,"@@ -0,0 +1,108 @@
+# Contributing to Distributed Ledger
+
+This document covers how to report issues and contribute code.
+
+## Topics
+
+* [Reporting Issues](#reporting-issues)
+* [Contributing Code](#contributing-code)
+
+# Reporting Issues
+
+This is a great way to contribute. Before reporting an issue, please review
+current open issues to see if there are any matches.
+
+## How to Report an Issue
+
+Issues should be reported to this project's Github Issues page: [https://github.com/hyperledger/sawtooth-hyper-directory/issues](https://github.com/hyperledger/sawtooth-hyper-directory/issues)
+
+When reporting an issue, please provide as much detail as possible about how
+to reproduce it. If possible, provide instructions for how to reproduce the
+issue within the vagrant development environment.
+
+Details are key. Please include the following:
+
+OS version
+Distributed Ledger version",,2017-11-30 15:48:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/154104313,https://github.com/hyperledger/sawtooth-next-directory/pull/2#discussion_r154104313,dcmiddle
https://github.com/hyperledger/sawtooth-next-directory/pull/2,https://github.com/hyperledger/sawtooth-next-directory/pull/2,Distributed Ledger / Hyper Directory,b475dae46b75be08f39b005eec13f4fdf0cbaca0,2017-11-30 15:17:50,154104516,"@@ -0,0 +1,108 @@
+# Contributing to Distributed Ledger
+
+This document covers how to report issues and contribute code.
+
+## Topics
+
+* [Reporting Issues](#reporting-issues)
+* [Contributing Code](#contributing-code)
+
+# Reporting Issues
+
+This is a great way to contribute. Before reporting an issue, please review
+current open issues to see if there are any matches.
+
+## How to Report an Issue
+
+Issues should be reported to this project's Github Issues page: [https://github.com/hyperledger/sawtooth-hyper-directory/issues](https://github.com/hyperledger/sawtooth-hyper-directory/issues)
+
+When reporting an issue, please provide as much detail as possible about how
+to reproduce it. If possible, provide instructions for how to reproduce the
+issue within the vagrant development environment.
+
+Details are key. Please include the following:
+
+OS version
+Distributed Ledger version
+Environment details (virtual, physical, etc.)
+Steps to reproduce
+Actual results
+Expected results
+
+
+# Contributing Code
+
+Distributed Ledger is Apache 2.0 licensed and accepts contributions via",,2017-11-30 15:48:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/154104516,https://github.com/hyperledger/sawtooth-next-directory/pull/2#discussion_r154104516,dcmiddle
https://github.com/hyperledger/sawtooth-next-directory/pull/2,https://github.com/hyperledger/sawtooth-next-directory/pull/2,https://github.com/hyperledger/sawtooth-hyper-directory/,b475dae46b75be08f39b005eec13f4fdf0cbaca0,2017-11-30 15:18:06,154104610,"@@ -0,0 +1,108 @@
+# Contributing to Distributed Ledger
+
+This document covers how to report issues and contribute code.
+
+## Topics
+
+* [Reporting Issues](#reporting-issues)
+* [Contributing Code](#contributing-code)
+
+# Reporting Issues
+
+This is a great way to contribute. Before reporting an issue, please review
+current open issues to see if there are any matches.
+
+## How to Report an Issue
+
+Issues should be reported to this project's Github Issues page: [https://github.com/hyperledger/sawtooth-hyper-directory/issues](https://github.com/hyperledger/sawtooth-hyper-directory/issues)
+
+When reporting an issue, please provide as much detail as possible about how
+to reproduce it. If possible, provide instructions for how to reproduce the
+issue within the vagrant development environment.
+
+Details are key. Please include the following:
+
+OS version
+Distributed Ledger version
+Environment details (virtual, physical, etc.)
+Steps to reproduce
+Actual results
+Expected results
+
+
+# Contributing Code
+
+Distributed Ledger is Apache 2.0 licensed and accepts contributions via
+[GitHub](https://github.com/hyperledger/) pull requests.",,2017-11-30 15:48:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/154104610,https://github.com/hyperledger/sawtooth-next-directory/pull/2#discussion_r154104610,dcmiddle
https://github.com/hyperledger/sawtooth-next-directory/pull/2,https://github.com/hyperledger/sawtooth-next-directory/pull/2,bin/run_tests isn't in this repo. I do see a run_tests_ubuntu but no integration flag.,b475dae46b75be08f39b005eec13f4fdf0cbaca0,2017-11-30 15:23:21,154106295,"@@ -0,0 +1,108 @@
+# Contributing to Distributed Ledger
+
+This document covers how to report issues and contribute code.
+
+## Topics
+
+* [Reporting Issues](#reporting-issues)
+* [Contributing Code](#contributing-code)
+
+# Reporting Issues
+
+This is a great way to contribute. Before reporting an issue, please review
+current open issues to see if there are any matches.
+
+## How to Report an Issue
+
+Issues should be reported to this project's Github Issues page: [https://github.com/hyperledger/sawtooth-hyper-directory/issues](https://github.com/hyperledger/sawtooth-hyper-directory/issues)
+
+When reporting an issue, please provide as much detail as possible about how
+to reproduce it. If possible, provide instructions for how to reproduce the
+issue within the vagrant development environment.
+
+Details are key. Please include the following:
+
+OS version
+Distributed Ledger version
+Environment details (virtual, physical, etc.)
+Steps to reproduce
+Actual results
+Expected results
+
+
+# Contributing Code
+
+Distributed Ledger is Apache 2.0 licensed and accepts contributions via
+[GitHub](https://github.com/hyperledger/) pull requests.
+
+## Ways to Contribute
+
+Contributions by the community help grow and optimize the capabilities of
+Hyperledger Sawtooth, and are the most effective method of having a positive
+impact on the project.
+
+## Different ways you can contribute
+
+Bugs or Issues (issues or defects found when working with
+    Sawtooth Hyper Directory)
+Core Features & Enhancements (expanded capabilities or optimization)
+New or Enhanced Documentation (improve existing documentation or create new)
+Testing Events and Results (functional, performance or scalability)
+
+## Commit Process
+
+Hyperledger Sawtooth Hyper Directory is Apache 2.0 licensed and accepts
+contributions via GitHub pull requests. When contributing code please do the
+following:
+
+
+
+Fork the repository and make your changes in a feature branch.
+Please include unit and integration tests for any new features and updates to
+existing tests.
+Please ensure the unit and integration tests run successfully. Both are run
+with ./bin/run_tests, but integration tests are only run if the environment",,2017-11-30 15:48:30,https://api.github.com/repos/hyperledger/sawtooth-next-directory/pulls/comments/154106295,https://github.com/hyperledger/sawtooth-next-directory/pull/2#discussion_r154106295,dcmiddle
