url issues,url_api comment,url_html comment,user create comment,body,created_at,updated_at
https://api.github.com/repos/hyperledger/caliper/issues/403,https://api.github.com/repos/hyperledger/caliper/issues/comments/479286168,https://github.com/hyperledger/caliper/issues/403#issuecomment-479286168,houqinghui,"@robiharid  1. You should intall npm, node, fabric-ca,etc on each machine, then you can start the client. While we start to virtualize the module, so that users can install npm package or docker image to test their blockchain network. 
2. Yes, you should pull caliepr on each machine, because the code of the client is located in the caliper repo. 
3. Yes, ",2019-04-03 01:25:13,2019-04-03 01:25:29
https://api.github.com/repos/hyperledger/caliper/issues/403,https://api.github.com/repos/hyperledger/caliper/issues/comments/479493062,https://github.com/hyperledger/caliper/issues/403#issuecomment-479493062,robiharid,"> @robiharid 1. You should intall npm, node, fabric-ca,etc on each machine, then you can start the client. While we start to virtualize the module, so that users can install npm package or docker image to test their blockchain network.
> 2. Yes, you should pull caliepr on each machine, because the code of the client is located in the caliper repo.
> 3. Yes,

Thanks so much!

I have installed all dependencies on new VM.

**Main VM:**
`npm run startclient -- ip:2181`

> caliper@0.1.0 startclient /home/robiharid/caliper
> node ./src/comm/client/zoo-client.js ""ip.com:2181""

**Slave VM:**
`npm run startclient -- zookeeper-server`

> caliper@0.1.0 startclient /home/robiharid/caliper
> node ./src/comm/client/zoo-client.js ""zookeeper-server""

How do I specify what IP zookeeper should connect to on slave VM?

Both VMs just hang and do nothing from there.",2019-04-03 13:38:35,2019-04-03 13:39:03
https://api.github.com/repos/hyperledger/caliper/issues/402,https://api.github.com/repos/hyperledger/caliper/issues/comments/479439022,https://github.com/hyperledger/caliper/issues/402#issuecomment-479439022,aklenik,"@ig0rsky Faced similar issues but with the endorsement policies. For the configtx and crypto-config files I use v1.1 files, containing adminPrincipal entries. The v1.4 tools warn about it, but the artifacts are generated and channel creation works for me. It would be nice to know whats the equivalent configtx file with explicit policies.

I'll look into this issue, but probably only around Sunday evening. And note, that the CCP adapter uses the v1.4.0 SDK. Newer versions haven't been tested. Especially Raft consensus :)",2019-04-03 10:51:20,2019-04-03 10:51:20
https://api.github.com/repos/hyperledger/caliper/issues/402,https://api.github.com/repos/hyperledger/caliper/issues/comments/479811157,https://github.com/hyperledger/caliper/issues/402#issuecomment-479811157,ig0rsky,"@aklenik I think what I'm using in my configtx.yaml file are the default policies. I copy pasted these policies from the latest version of fabric-samples, and basically did a line-by-line update of the old configtx.yaml file with the new one. The issue is, even when I re-generate the files using the pre-existing configtx.yaml files in the v.1.4 repository I'll still end up with policy errors. I think the only way to make it work is to use an old binary for example from v1.2 that doesn't have any notion of the newly added policy stuff. I got the raft orderers to work with 1.4.1-rc1 images and binaries. The orderers are alive and well up until I hit the policy error again. 
I don't know the details of Fabric nor Caliper too much, but I think the problem is that client  definitions in the fabric-ccp-go.yaml file are joining one of the organizations, and the issue is that when you generate a channel you need to have write access on the orderer, which I presume the client with its default configurations doesn't have. I tried to use the admin credentials of both organizations but that didn't work either.",2019-04-04 08:55:22,2019-04-04 08:57:37
https://api.github.com/repos/hyperledger/caliper/issues/401,https://api.github.com/repos/hyperledger/caliper/issues/comments/478872032,https://github.com/hyperledger/caliper/pull/401#issuecomment-478872032,Ram-srini,@panyu4 @feihujiang @aklenik I have added docker compose files with kafka consensus. Please review the changes,2019-04-02 07:07:27,2019-04-02 07:07:27
https://api.github.com/repos/hyperledger/caliper/issues/401,https://api.github.com/repos/hyperledger/caliper/issues/comments/479013050,https://github.com/hyperledger/caliper/pull/401#issuecomment-479013050,aklenik,"@Ram-srini Great! There's an ongoing restructuring of the project. Once it's finished, you'll probably have to rebase this PR, but it should be easy.",2019-04-02 14:08:29,2019-04-02 14:08:29
https://api.github.com/repos/hyperledger/caliper/issues/401,https://api.github.com/repos/hyperledger/caliper/issues/comments/479330068,https://github.com/hyperledger/caliper/pull/401#issuecomment-479330068,Ram-srini,@aklenik When is your restructuring changes are going to merged to master?,2019-04-03 04:06:51,2019-04-03 04:06:51
https://api.github.com/repos/hyperledger/caliper/issues/401,https://api.github.com/repos/hyperledger/caliper/issues/comments/479431681,https://github.com/hyperledger/caliper/pull/401#issuecomment-479431681,aklenik,@Ram-srini Maybe @nklincoln can answer them :),2019-04-03 10:26:59,2019-04-03 10:26:59
https://api.github.com/repos/hyperledger/caliper/issues/396,https://api.github.com/repos/hyperledger/caliper/issues/comments/478522098,https://github.com/hyperledger/caliper/issues/396#issuecomment-478522098,aklenik,"@clumsky You're right, we'll add them once an ongoing restructuring of the project is done. But you can use any v1.1 example file, just make sure that you change the start/end scripts to point to the correct docker-compose file. I think no other changes are required.",2019-04-01 10:19:38,2019-04-01 10:19:38
https://api.github.com/repos/hyperledger/caliper/issues/396,https://api.github.com/repos/hyperledger/caliper/issues/comments/478892307,https://github.com/hyperledger/caliper/issues/396#issuecomment-478892307,clumsky,"I want to merge src/adapters/fabric into src/adapters/fabirc-ccp in fabric-v1.3 and v1.4. But now fabric-ccp
don't have network file for fabric-v1.3/v1.4. ",2019-04-02 08:14:44,2019-04-02 08:14:44
https://api.github.com/repos/hyperledger/caliper/issues/396,https://api.github.com/repos/hyperledger/caliper/issues/comments/478911497,https://github.com/hyperledger/caliper/issues/396#issuecomment-478911497,aklenik,@clumsky What do you mean by merge?,2019-04-02 09:11:12,2019-04-02 09:11:12
https://api.github.com/repos/hyperledger/caliper/issues/396,https://api.github.com/repos/hyperledger/caliper/issues/comments/478949304,https://github.com/hyperledger/caliper/issues/396#issuecomment-478949304,clumsky,Add src/adapters/fabric some function modules(like:Add a transactions' file generation mode.#286) to src/adapters/fabric-ccp.  ,2019-04-02 11:08:36,2019-04-02 11:08:36
https://api.github.com/repos/hyperledger/caliper/issues/396,https://api.github.com/repos/hyperledger/caliper/issues/comments/479433188,https://github.com/hyperledger/caliper/issues/396#issuecomment-479433188,aklenik,"@clumsky Well, the design of the two adapters is fundamentally different, so migrating the tx mode functionality will not be trivial, possible it'll need to be implemented cleanly from scratch in the CCP adapter.

If you're working on this feature migration, I'd suggest you wait for some other refactoring job to be finished (like the whole project restructuring going on right now, plus I'm adding Solidity support to the CCP adapter). And message me on Rocker.Chat (klenik) so the implementation goes more smoothly.",2019-04-03 10:32:07,2019-04-03 10:32:07
https://api.github.com/repos/hyperledger/caliper/issues/395,https://api.github.com/repos/hyperledger/caliper/issues/comments/478326909,https://github.com/hyperledger/caliper/pull/395#issuecomment-478326909,aklenik,"@quangtdn Nice catch! There's a big restructuring in progress, so you'll probably have to rebase your PR when it's finished. But the changes are small, so it should be easy ",2019-03-31 09:44:48,2019-03-31 09:44:48
https://api.github.com/repos/hyperledger/caliper/issues/393,https://api.github.com/repos/hyperledger/caliper/issues/comments/478332087,https://github.com/hyperledger/caliper/issues/393#issuecomment-478332087,houqinghui,"@quangtdn Maybe, @aklenik can answer you.",2019-03-31 11:09:32,2019-03-31 11:09:32
https://api.github.com/repos/hyperledger/caliper/issues/393,https://api.github.com/repos/hyperledger/caliper/issues/comments/478521193,https://github.com/hyperledger/caliper/issues/393#issuecomment-478521193,aklenik,"@quangtdn Sorry for the late response. Here's the glossary (that we'll need to add to the documentation as well):
* Caliper workload generator client: 
These clients are Node.js processes that the ""master"" Caliper process spawns to generate high TPS workloads. Think of them as Node.js ""worker threads."" They're either spawned locally, or on a remote machine using Zookeeper.
* Fabric clients:
These are the actual users of the Fabric network, each with its own identity (cert + signing key). They invoke transactions or queries, basically interact with the Fabric network. The Fabric-CCP network configuration lists these clients/users with a unique name, so you can reference them in your user callback by name, and the transaction will be sent using that identity.

TL;DR;
In the round config file, think of those clients as Caliper slave processes, while the network config file contains the actual clients/users of the network (user 2 of org 3 for example).

Hope this clarifies it a bit. We'll create a glossary once we aggree on the terminology :)",2019-04-01 10:16:43,2019-04-01 10:16:43
https://api.github.com/repos/hyperledger/caliper/issues/393,https://api.github.com/repos/hyperledger/caliper/issues/comments/478563441,https://github.com/hyperledger/caliper/issues/393#issuecomment-478563441,quangtdn,"@aklenik 
Let say we have M Caliper clients and N Fabric clients.
If I specify the transaction rate (in the rateControl of config.yaml) to be 100 tps, then what should be the real transaction/send rate that each of the N Fabric clients would send? 

Should 100tps mean that the total transaction/send rate of all N Fabric clients is 100tps? 
Or it means that each of the N Fabric clients has send rate 100tps, so the total send rate is 100N tps.
Or each of the Caliper clients generates a workload with send rate 100tps, resulting a big workload 100M tps that would be then divided evenly among the N Fabric clients. 

I am sorry as I find it a bit confused. 

Thank you very much for your clarification. 

",2019-04-01 12:43:17,2019-04-01 12:43:17
https://api.github.com/repos/hyperledger/caliper/issues/393,https://api.github.com/repos/hyperledger/caliper/issues/comments/479443808,https://github.com/hyperledger/caliper/issues/393#issuecomment-479443808,aklenik,"@quangtdn 
Let M=10 and N=6 (3 clients per org, with 2 org).

The two client concept is totally orthogonal to each other. A 100TPS load setting will be distributed among the 10 Caliper clients, so each Caliper client will generate a 10TPS load. This means that your `run` function in your user module will be called approximately in every 100ms. 

In this `run` function, you call the `invokeSmartContract` function of the adapter. The CCP adapter accepts a settings argument, in which you can specify (by name) which Fabric Client should send the transaction:
https://hyperledger.github.io/caliper/docs/Fabric_Ccp_Configuration.html#the-run-callback

So it's your task to decide which Fabric client should invoke a specific transaction (this is a business logic detail). Right now you can't really assign Fabric Clients to Caliper Clients, since the Caliper Client index is not passed to the user module's `init` function. But it'll be passed soon, and then you can implement arbitrary logic that map between the two clients:
* Caliper Client 1 will invoke transactions in the name of Fabric Clients user1 and user1
* Caliper Client 2 will invoke transactions in the name of Fabric Client user2
* etc...",2019-04-03 11:08:17,2019-04-03 11:08:17
https://api.github.com/repos/hyperledger/caliper/issues/393,https://api.github.com/repos/hyperledger/caliper/issues/comments/479463398,https://github.com/hyperledger/caliper/issues/393#issuecomment-479463398,quangtdn,"@aklenik Thank you for your clarification.
My very last questions to understand this clearly:
1) So the total transaction rate that the blockchain system receives from this benchmarking is 100TPS. Is it right?
2) For now, we cannot control the Fabric clients, which is fine actually, but Caliper will distribute the 100TPS send-transactions among these Fabric clients. Is it true?

Thank you!

",2019-04-03 12:14:05,2019-04-03 12:14:41
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/476870831,https://github.com/hyperledger/caliper/issues/392#issuecomment-476870831,aklenik,"@quangtdn Looks like the peer rejects your connection by force. Probably because of authentication issues. Double check that you use the same certs on both server and client/Caliper side. 

```
warn: [adapters/fabric-ccp]: Org1's registrar's materials found locally. Make sure it is the right one!
warn: [adapters/fabric-ccp]: Org1's admin's materials found locally. Make sure it is the right one!
```

There's probably some leftover certs in your Caliper machine. The network config specifies some user store paths, clean them up (the example `end` scripts do that).",2019-03-26 22:03:33,2019-03-26 22:03:33
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/477299983,https://github.com/hyperledger/caliper/issues/392#issuecomment-477299983,quangtdn,"@aklenik  After rebuilding Caliper, I didn't find such errors again, so maybe the links to the certs in docker-compose and caliper's config file should be correct. In the unused script 'generate.sh' of Caliper, I note that there is a part that changes crypto file name [--some long number here--]_sk to 'key.pem'. I did reuse that for my own config generation later (so I don't have to edit my docker-compose for every time). I am not sure if it caused the errors. ",2019-03-27 18:46:22,2019-03-27 18:46:22
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/477373315,https://github.com/hyperledger/caliper/issues/392#issuecomment-477373315,aklenik,"@quangtdn What I meant are the user stores created by the Fabric SDK. If a user name exists in the store, it will be loaded from there regardless of what cert path you specify. So a leftover cert from a previous experiment can cause problems. That's why loading a cert from the local store during the init phase is treated as a warning.

Is the issue solved by the way?",2019-03-27 22:35:22,2019-03-27 22:35:22
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/477450167,https://github.com/hyperledger/caliper/issues/392#issuecomment-477450167,quangtdn,"@aklenik Actually I still get the error sometimes. But I just rebuild Caliper anyway to solve it, as it does not take so much time. ",2019-03-28 05:08:35,2019-03-28 05:08:35
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/477559554,https://github.com/hyperledger/caliper/issues/392#issuecomment-477559554,aklenik,"@quangtdn If you delete [these dirs](https://github.com/hyperledger/caliper/blob/master/network/fabric-v1.1/2org1peergoleveldb/fabric-ccp-go.yaml#L34-L37), does it solve the error without rebuilding Caliper?

`rm -rf /tmp/hfc-*`",2019-03-28 11:38:56,2019-03-28 11:38:56
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/478000987,https://github.com/hyperledger/caliper/issues/392#issuecomment-478000987,quangtdn,@aklenik I am not so sure. I will try to do so next time I see the error. ,2019-03-29 13:40:00,2019-03-29 13:40:00
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/478049883,https://github.com/hyperledger/caliper/issues/392#issuecomment-478049883,quangtdn,"@aklenik oh, it does help to solve the problem!
 Thank you xD!",2019-03-29 15:52:45,2019-03-29 15:52:45
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/478506872,https://github.com/hyperledger/caliper/issues/392#issuecomment-478506872,niket-yende,"Hi @quangtdn do you have a sample network config file for benchmarking kafka setup with multiple orderers?

I wanted to benchmark my use case which contains multiple orderers part of the kafka cluster.

Any help related to this would be really helpful. :)",2019-04-01 09:32:11,2019-04-01 09:32:11
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/478565317,https://github.com/hyperledger/caliper/issues/392#issuecomment-478565317,quangtdn,"Actually all you need to do is to add extra orderers into the fabric-ccp file. There is nothing to add for kafka brokers or zookeeper here. Caliper will do the benchmarking with just that. 

So the real problem is to bring up a kafka-based fabric network by yourself, as default networks in caliper are all in solo mode. For my first simple kafka network, I just followed this one: https://medium.com/coinmonks/hyperledger-fabric-setup-with-multiple-peers-and-orderers-with-kafka-542023787a6d",2019-04-01 12:49:20,2019-04-01 12:49:20
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/478968067,https://github.com/hyperledger/caliper/issues/392#issuecomment-478968067,niket-yende,"I already have my kafka cluster with multiple orderers setup on an external VM. 

I would like to know the following:

1.  How does caliper understand which orderer is associated with a peer? (Basically i have one peer0 part of org1 associated with orderer1 who is the leader, along with this there is one more orderer2 who will be associated with peer0 of org2)

Does it look-up the docker-compose configuration to figure out which orderer to send request to for a specific peer in a multi-orderer setup?

Note: My blokchain n/w is setup on another machine & caliper is assessing those endpoints through its n/w config file.

@quangtdn @aklenik ",2019-04-02 12:12:04,2019-04-02 12:12:04
https://api.github.com/repos/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/comments/479441622,https://github.com/hyperledger/caliper/issues/392#issuecomment-479441622,aklenik,"@niket-yende Caliper doesn't know these details. The ordering service is a system-level service, so you can send endorsed transactions to any orderer node, they'll put it into the appropriate kafka topic.

Caliper does a round-robin load balancing between the peers and the orderers (based on either the transaction index, or the submitting client process). But if you need finer control, you can specify the target peers and orderer for each transaction individually.
https://hyperledger.github.io/caliper/docs/Fabric_Ccp_Configuration.html#the-run-callback",2019-04-03 11:00:37,2019-04-03 11:00:37
https://api.github.com/repos/hyperledger/caliper/issues/391,https://api.github.com/repos/hyperledger/caliper/issues/comments/477857636,https://github.com/hyperledger/caliper/issues/391#issuecomment-477857636,houqinghui,"@nimaafraz  Can you run `npm run bench -- -c benchmark/drm/config.yaml -n network/fabric-v1.1/2org2peergoleveldb/fabric-node.json` ?, 
",2019-03-29 03:55:12,2019-03-29 03:55:12
https://api.github.com/repos/hyperledger/caliper/issues/391,https://api.github.com/repos/hyperledger/caliper/issues/comments/478087609,https://github.com/hyperledger/caliper/issues/391#issuecomment-478087609,nimaafraz,"> @nimaafraz Can you run `npm run bench -- -c benchmark/drm/config.yaml -n network/fabric-v1.1/2org2peergoleveldb/fabric-node.json` ?,

Not really, this is the error I get:
(node:11724) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 459883)
(node:11724) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'toString' of undefined
    at Fabric.queryState (/home/connect1/caliper/src/adapters/fabric/fabric.js:213:82)
    at Blockchain.queryState (/home/connect1/caliper/src/comm/blockchain.js:162:33)
    at Object.module.exports.run (/home/connect1/caliper/benchmark/drm/query.js:36:19)
    at runFixedNumber (/home/connect1/caliper/src/comm/client/local-client.js:140:26)
    at <anonymous>",2019-03-29 17:40:38,2019-03-29 17:40:38
https://api.github.com/repos/hyperledger/caliper/issues/391,https://api.github.com/repos/hyperledger/caliper/issues/comments/478170047,https://github.com/hyperledger/caliper/issues/391#issuecomment-478170047,aklenik,@nimaafraz The callback passes `undefined` as the `id` parameter. Did you successfully run the publish round of the benchmark? It is required before the query round.  ,2019-03-29 22:37:43,2019-03-29 22:37:43
https://api.github.com/repos/hyperledger/caliper/issues/391,https://api.github.com/repos/hyperledger/caliper/issues/comments/478246484,https://github.com/hyperledger/caliper/issues/391#issuecomment-478246484,nimaafraz,"It seems that the Test round 1 does not go through. 

> caliper@0.1.0 bench /home/connect1/caliper
> node ./scripts/main.js ""-c"" ""benchmark/drm/config.yaml"" ""-n"" ""network/fabric-v1.1/2org2peergoleveldb/fabric-node.json""

info: [bench-flow.js]: ####### Caliper Test #######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org2peergoleveldb/docker-compose.yaml up -d;sleep 3s
1.1.0: Pulling from hyperledger/fabric-ca
1.1.0: Pulling from hyperledger/fabric-ca
1.1.0: Pulling from hyperledger/fabric-orderer
1.1.0: Pulling from hyperledger/fabric-peer
1.1.0: Pulling from hyperledger/fabric-peer
info: [create-channel.js]: Creating mychannel...
info: [create-channel.js]: Created mychannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining organization org1 to channel mychannel...
info: [join-channel.js]: Successfully joined peerOrg1's peers to mychannel
info: [join-channel.js]: Joining organization org2 to channel mychannel...
info: [join-channel.js]: Successfully joined peerOrg2's peers to mychannel
info: [join-channel.js]: Successfully joined mychannel
info: [install-chaincode.js]: installing all chaincodes......
info: [install-chaincode.js]: Installing chaincode marbles...
[32minfo[39m: [packager/Node.js]: packaging Node from /home/connect1/caliper/src/contract/fabric/marbles-norichquery/node
info: [install-chaincode.js]: Installing chaincode marbles...
[32minfo[39m: [packager/Node.js]: packaging Node from /home/connect1/caliper/src/contract/fabric/marbles-norichquery/node
info: [install-chaincode.js]: Installed chaincode marbles successfully in all peers
info: [install-chaincode.js]: Installing chaincode simple...
[32minfo[39m: [packager/Node.js]: packaging Node from /home/connect1/caliper/src/contract/fabric/simple/node
info: [install-chaincode.js]: Installing chaincode simple...
[32minfo[39m: [packager/Node.js]: packaging Node from /home/connect1/caliper/src/contract/fabric/simple/node
info: [install-chaincode.js]: Installed chaincode simple successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode marbles successfully
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode simple successfully
info: [instantiate-chaincode.js]: Sleeping 5s...
info: [bench-flow.js]: Started monitor successfully
info: [bench-flow.js]: ####### Testing 'publish' #######
info: [bench-flow.js]: ------ Test round 1 ------
info: [bench-flow.js]: ####### Testing 'query' #######
info: [bench-flow.js]: ------ Test round 2 ------
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0",2019-03-30 13:38:58,2019-03-30 13:38:58
https://api.github.com/repos/hyperledger/caliper/issues/390,https://api.github.com/repos/hyperledger/caliper/issues/comments/478192861,https://github.com/hyperledger/caliper/issues/390#issuecomment-478192861,houqinghui,"@skyhuihui You just use 1 org and 1peer, why do you use `kafka`?
",2019-03-30 01:17:24,2019-03-30 01:17:24
https://api.github.com/repos/hyperledger/caliper/issues/389,https://api.github.com/repos/hyperledger/caliper/issues/comments/476869408,https://github.com/hyperledger/caliper/issues/389#issuecomment-476869408,aklenik,"@zcqzcg The `info` section of any platform's [network config](https://hyperledger.github.io/caliper/docs/Fabric_Ccp_Configuration.html#network-information) file does not affect the tests, those key-value pairs are meant to be included in the generated report, nothing more.

There could be a connection issue or lost message during a test that causes this seemingly infinite repeat. However, everything should reach the timeout eventually and terminate, hopefully.",2019-03-26 21:58:55,2019-03-26 21:58:55
https://api.github.com/repos/hyperledger/caliper/issues/389,https://api.github.com/repos/hyperledger/caliper/issues/comments/476922316,https://github.com/hyperledger/caliper/issues/389#issuecomment-476922316,zcqzcg,"@aklenik Thanks for your advice and please check the following codes in `caliper/src/adapters/fabric/e2eUtils.js` Line 46:
```js
/**
 * Initialize the Fabric client configuration.
 * @param {string} config_path The path of the Fabric network configuration file.
 */
function init(config_path) {
    const config = commUtils.parseYaml(config_path);
    ORGS = config.fabric.network;
    isLegacy = (config.info.Version.startsWith('1.0') || config.info.Version.startsWith('1.1'));
    if(!isLegacy){
        Gateway = require('fabric-network').Gateway;
        InMemoryWallet = require('fabric-network').InMemoryWallet;
        X509WalletMixin = require('fabric-network').X509WalletMixin;
    }
}
```

In that `init`, it's using the `info.Version` to decide which way to send transactions, the gateway or the basic context way( which I know nothing about the old way, I start with 1.2 ).

So in here, the `info.Version` matters.

Also, I am not so sure but I will ask anyway, hope you don't mind.
The `info.Version` also matters the `deps` which is used by caliper.

For example, if `info.Version` = 1.2, and we need to run `npm run fabric-v1.2-deps`.
Or, you will face error like this `Error: Cannot find module 'fabric-ca-client/lib/FabricCAClientImpl.js'`, which comes from the other js: `caliper/src/adapters/fabric/util.js` Line 139.

So I think, the **`info.Version` should `=` the fabric version and also `=` the deps** to avoid some unkown error, like what I have done.",2019-03-27 01:18:42,2019-03-27 01:28:30
https://api.github.com/repos/hyperledger/caliper/issues/389,https://api.github.com/repos/hyperledger/caliper/issues/comments/477088393,https://github.com/hyperledger/caliper/issues/389#issuecomment-477088393,aklenik,"@zcqzcg You're right, I wasn't aware of this change. However, this adapter will be deprecated soon, so maybe you should try the new Fabric CCP adapter: https://hyperledger.github.io/caliper/docs/Fabric_Ccp_Configuration.html
This detects the Fabric version based on the installed SDK version (from Fabric SDK 1.1), and based on whether peer event URLs are present in the config (which indicates Fabric 1.0).",2019-03-27 10:37:44,2019-03-27 10:37:44
https://api.github.com/repos/hyperledger/caliper/issues/388,https://api.github.com/repos/hyperledger/caliper/issues/comments/476322850,https://github.com/hyperledger/caliper/issues/388#issuecomment-476322850,quangtdn,"I managed to use distributed Zookeeper Clients to benchmark a distributed fabric network already. 

For my first question, I think it is probably correct.
For my 2nd concern, I indeed couldn't use distributed Zookeeper Clients of Caliper on my 2 machines. But it worked fine when I brought it onto the cluster. I am not sure if it's because of time sync, but it just works.

So I'm closing this now xD. 
Thanks!",2019-03-25 18:27:56,2019-03-25 18:27:56
https://api.github.com/repos/hyperledger/caliper/issues/387,https://api.github.com/repos/hyperledger/caliper/issues/comments/476115832,https://github.com/hyperledger/caliper/issues/387#issuecomment-476115832,aklenik,@nimaafraz The supported Node.js version is 8.X,2019-03-25 09:25:52,2019-03-25 09:25:52
https://api.github.com/repos/hyperledger/caliper/issues/386,https://api.github.com/repos/hyperledger/caliper/issues/comments/475517898,https://github.com/hyperledger/caliper/issues/386#issuecomment-475517898,aklenik,"@shiningfrog The paper `Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains` (I hope this is the one you mean) details their setup at the beginning of the evaluation phase. But the resources are not the only factor in the paper. They also used some kind of UTXO implementation as a chaincode (fabcoin), plus they used custom system chaincodes for validation (now officially supported by Fabric).

The exact implementation details are not public I'm afraid (at least I couldn't find it). 
Let's continue this discussion on rocket.chat (my handle is `@klenik`), as a Github issue is not the best place for this.",2019-03-22 07:18:32,2019-03-22 07:18:47
https://api.github.com/repos/hyperledger/caliper/issues/385,https://api.github.com/repos/hyperledger/caliper/issues/comments/475516246,https://github.com/hyperledger/caliper/issues/385#issuecomment-475516246,aklenik,"@Salmanah Please either share the above files as GitHub gists, or properly format them with the [triple backtick notation](https://help.github.com/en/articles/creating-and-highlighting-code-blocks) so it's more readable. ",2019-03-22 07:10:21,2019-03-22 07:10:21
https://api.github.com/repos/hyperledger/caliper/issues/385,https://api.github.com/repos/hyperledger/caliper/issues/comments/475613554,https://github.com/hyperledger/caliper/issues/385#issuecomment-475613554,Salmanah,"> @Salmanah Please either share the above files as GitHub gists, or properly format them with the [triple backtick notation](https://help.github.com/en/articles/creating-and-highlighting-code-blocks) so it's more readable.

My aplogies, I have fixed it now. ",2019-03-22 13:05:38,2019-03-22 13:05:38
https://api.github.com/repos/hyperledger/caliper/issues/385,https://api.github.com/repos/hyperledger/caliper/issues/comments/475647715,https://github.com/hyperledger/caliper/issues/385#issuecomment-475647715,aklenik,"@Salmanah Hmm, can you check the local Caliper logs (in the `log/` dir if you didn't change it)? From Caliper's POV, the benchmark is run successfully. You should also add some logging to your logic.js to see what happens inside. ",2019-03-22 14:43:45,2019-03-22 14:43:45
https://api.github.com/repos/hyperledger/caliper/issues/385,https://api.github.com/repos/hyperledger/caliper/issues/comments/475675204,https://github.com/hyperledger/caliper/issues/385#issuecomment-475675204,Salmanah,"@aklenik I checked the local Caliper logs and added some lines where I could see that my participants were created and if the transaction is called. Everything seems to be fine, but I noticed when I wrote a console.log in my logic.js nothing seems to be printed out, I do not think that the transaction is being called. What could be the reason for that?",2019-03-22 15:55:13,2019-03-22 15:55:13
https://api.github.com/repos/hyperledger/caliper/issues/385,https://api.github.com/repos/hyperledger/caliper/issues/comments/477285264,https://github.com/hyperledger/caliper/issues/385#issuecomment-477285264,Salmanah,"@aklenik I just recently found a new error from one of the peer containers. This error is just running on my chaincode, which I think is weird. The other sample chaincodes do no generate an error when run under the same environment.
![newest_error](https://user-images.githubusercontent.com/15213174/55101000-68e20b00-50c3-11e9-9035-05c249a658ae.png)
",2019-03-27 18:07:09,2019-03-27 18:07:09
https://api.github.com/repos/hyperledger/caliper/issues/385,https://api.github.com/repos/hyperledger/caliper/issues/comments/477372607,https://github.com/hyperledger/caliper/issues/385#issuecomment-477372607,aklenik,@nklincoln Any pointers about how to activate the identity for a custom example?,2019-03-27 22:32:35,2019-03-27 22:32:35
https://api.github.com/repos/hyperledger/caliper/issues/384,https://api.github.com/repos/hyperledger/caliper/issues/comments/475199352,https://github.com/hyperledger/caliper/issues/384#issuecomment-475199352,aklenik,"@rockyxiashilong Could you please elaborate? :)
",2019-03-21 11:48:09,2019-03-21 11:48:09
https://api.github.com/repos/hyperledger/caliper/issues/384,https://api.github.com/repos/hyperledger/caliper/issues/comments/475201939,https://github.com/hyperledger/caliper/issues/384#issuecomment-475201939,rockyxiashilong,我想体验一下Fabric caliper 功能，但是按照官方指导文档中的快速入门，发现无法运行起test，因为没有可以用的json文件，包括测试json和网络json,2019-03-21 11:58:35,2019-03-21 11:58:35
https://api.github.com/repos/hyperledger/caliper/issues/384,https://api.github.com/repos/hyperledger/caliper/issues/comments/475238064,https://github.com/hyperledger/caliper/issues/384#issuecomment-475238064,aklenik,"Those are example paths, and they do not exist (the docs should use existing examples, you're right).
Try this from the Caliper root directory after cloning the repo:
```
npm i
npm run fabric-v1.1-deps
npm run bench -- -c benchmark/simple/config-linear-rate.yaml -n network/fabric-v1.1/dev/fabric-ccp-node-tls.yaml
```",2019-03-21 13:55:54,2019-03-21 13:55:54
https://api.github.com/repos/hyperledger/caliper/issues/383,https://api.github.com/repos/hyperledger/caliper/issues/comments/475203069,https://github.com/hyperledger/caliper/pull/383#issuecomment-475203069,panyu4,LGTM.,2019-03-21 12:02:44,2019-03-21 12:02:44
https://api.github.com/repos/hyperledger/caliper/issues/382,https://api.github.com/repos/hyperledger/caliper/issues/comments/475176836,https://github.com/hyperledger/caliper/issues/382#issuecomment-475176836,nklincoln,Suggested fix in #383 ,2019-03-21 10:23:40,2019-03-21 10:23:40
https://api.github.com/repos/hyperledger/caliper/issues/382,https://api.github.com/repos/hyperledger/caliper/issues/comments/475238925,https://github.com/hyperledger/caliper/issues/382#issuecomment-475238925,aklenik,Resolved.,2019-03-21 13:58:14,2019-03-21 13:58:14
https://api.github.com/repos/hyperledger/caliper/issues/381,https://api.github.com/repos/hyperledger/caliper/issues/comments/475513320,https://github.com/hyperledger/caliper/pull/381#issuecomment-475513320,panyu4,@hnan1118 ， Did you run `npm install -g node-gyp node-pre-gyp` before testing ? I don't know if the version of js-yaml caused the failure.,2019-03-22 06:54:55,2019-03-22 06:54:55
https://api.github.com/repos/hyperledger/caliper/issues/381,https://api.github.com/repos/hyperledger/caliper/issues/comments/475515631,https://github.com/hyperledger/caliper/pull/381#issuecomment-475515631,aklenik,"@hnan1118 Please share more info about the error you encountered, and why you think js-yaml was the problem.",2019-03-22 07:07:02,2019-03-22 07:07:02
https://api.github.com/repos/hyperledger/caliper/issues/381,https://api.github.com/repos/hyperledger/caliper/issues/comments/475537966,https://github.com/hyperledger/caliper/pull/381#issuecomment-475537966,hnan1118,"Hmm, weird. I tried to generate the same errors by downgrading js-yaml but it's working fine now.

I was trying to setup caliper on my remote ubuntu machine and kept on having problem with instatiating chain code.
```
warn: [e2eUtils.js]: instantiate proposal was bad: 
Error: error starting container: error starting container:
Failed to generate platform-specific docker build:
Error uploading input to container:
API error (404): Could not find the file /chaincode/input in container 224be72dd688d3ed38855a2843f3e3c76bdab40b7afe0384ce4e1c1d6d3e1162
```
I'm not sure if this was the specific error I got, but I think this was the one.

Using Fabric-v1.1 was the only working benchmark.

Then, I tried the same on my local ubuntu laptop, and benchmark with Fabric-v1.4 worked fine.
I compared the npm list with my remote machine and the only difference was js-yaml version (3.13.0 / 3.12.0)
So I updated my js-yaml version on my remote machine and it worked fine so I opened this pull request.
I'm pretty much sure the only package I changed was the js-yaml though.",2019-03-22 08:45:44,2019-03-22 08:47:23
https://api.github.com/repos/hyperledger/caliper/issues/381,https://api.github.com/repos/hyperledger/caliper/issues/comments/475578650,https://github.com/hyperledger/caliper/pull/381#issuecomment-475578650,aklenik,"@hnan1118 Looks like a Fabric side transient error, the peer failed to copy/prepare/find the installed chaincode. I don't think it's a client-side (Caliper) error",2019-03-22 11:05:06,2019-03-22 11:07:02
https://api.github.com/repos/hyperledger/caliper/issues/381,https://api.github.com/repos/hyperledger/caliper/issues/comments/475837788,https://github.com/hyperledger/caliper/pull/381#issuecomment-475837788,hnan1118,"Okay. Thank you guys for the kind reply.
Now that I know I've mistaken, I'm closing the pull request.",2019-03-23 04:17:21,2019-03-23 04:17:21
https://api.github.com/repos/hyperledger/caliper/issues/379,https://api.github.com/repos/hyperledger/caliper/issues/comments/474465779,https://github.com/hyperledger/caliper/issues/379#issuecomment-474465779,nklincoln,-> added proposed fix via PR #380 ,2019-03-19 16:49:44,2019-03-19 16:49:44
https://api.github.com/repos/hyperledger/caliper/issues/377,https://api.github.com/repos/hyperledger/caliper/issues/comments/474158737,https://github.com/hyperledger/caliper/issues/377#issuecomment-474158737,houqinghui,@nklincoln  Do you mean the version composer or other projects?,2019-03-19 01:07:47,2019-03-19 01:07:47
https://api.github.com/repos/hyperledger/caliper/issues/377,https://api.github.com/repos/hyperledger/caliper/issues/comments/474216500,https://github.com/hyperledger/caliper/issues/377#issuecomment-474216500,nklincoln,@houqinghui - this is in fabric-sdk-node,2019-03-19 06:37:17,2019-03-19 06:37:17
https://api.github.com/repos/hyperledger/caliper/issues/376,https://api.github.com/repos/hyperledger/caliper/issues/comments/473835276,https://github.com/hyperledger/caliper/issues/376#issuecomment-473835276,aklenik,"@houqinghui Can you elaborate on the pre-reqs? You mean docker and other dependencies, or blockchain platform dependencies?",2019-03-18 09:34:57,2019-03-18 09:34:57
https://api.github.com/repos/hyperledger/caliper/issues/375,https://api.github.com/repos/hyperledger/caliper/issues/comments/473835929,https://github.com/hyperledger/caliper/issues/375#issuecomment-473835929,aklenik,"@quangtdn You're right, multiple orderers (and thus Kafka-based ordering services) are now supported. However, there isn't a sample network for this. I think someone is working on a sample, but feel free to contribute your own fairly (but not too) complex network sample :)",2019-03-18 09:36:49,2019-03-18 09:36:49
https://api.github.com/repos/hyperledger/caliper/issues/375,https://api.github.com/repos/hyperledger/caliper/issues/comments/478507416,https://github.com/hyperledger/caliper/issues/375#issuecomment-478507416,niket-yende,@aklenik @quangtdn If some one can add a sample config file for benchmarking kafka it would be helpful for others.,2019-04-01 09:33:54,2019-04-01 09:33:54
https://api.github.com/repos/hyperledger/caliper/issues/374,https://api.github.com/repos/hyperledger/caliper/issues/comments/473124705,https://github.com/hyperledger/caliper/issues/374#issuecomment-473124705,houqinghui,"@CODEHLK Before you run Caliper , you should install the dependencies. You should run `npm install` in the caliper root directory. Please refer to the [Caliper doc](https://hyperledger.github.io/caliper/docs/1_Getting_Started.html) ",2019-03-15 01:24:24,2019-03-15 01:24:24
https://api.github.com/repos/hyperledger/caliper/issues/374,https://api.github.com/repos/hyperledger/caliper/issues/comments/473192748,https://github.com/hyperledger/caliper/issues/374#issuecomment-473192748,aklenik,"@CODEHLK Then double-check that `fs-extra` is in your `node_modules` directory, or run `ṅpm ls fs-extra`",2019-03-15 08:00:08,2019-03-15 08:00:08
https://api.github.com/repos/hyperledger/caliper/issues/374,https://api.github.com/repos/hyperledger/caliper/issues/comments/473253877,https://github.com/hyperledger/caliper/issues/374#issuecomment-473253877,CODEHLK,"> @CODEHLK Before you run Caliper , you should install the dependencies. You should run `npm install` in the caliper root directory. Please refer to the [Caliper doc](https://hyperledger.github.io/caliper/docs/1_Getting_Started.html)

I tried to install npm again, however it fails, this is the error.
![image](https://user-images.githubusercontent.com/21681224/54428852-b4390880-4716-11e9-80ad-b1af191f7f50.png)
Could you please give me some advice?",2019-03-15 11:37:41,2019-03-15 11:37:41
https://api.github.com/repos/hyperledger/caliper/issues/374,https://api.github.com/repos/hyperledger/caliper/issues/comments/473255413,https://github.com/hyperledger/caliper/issues/374#issuecomment-473255413,CODEHLK,"> @CODEHLK Then double-check that `fs-extra` is in your `node_modules` directory, or run `ṅpm ls fs-extra`

Then could you please tell me how to add the ""fs-extra"" into my module? What's the function of it?",2019-03-15 11:44:03,2019-03-15 11:44:03
https://api.github.com/repos/hyperledger/caliper/issues/374,https://api.github.com/repos/hyperledger/caliper/issues/comments/473258212,https://github.com/hyperledger/caliper/issues/374#issuecomment-473258212,CODEHLK,"> @CODEHLK Then double-check that `fs-extra` is in your `node_modules` directory, or run `ṅpm ls fs-extra`

I successfully installed the ""fs-extra"" module through npm install --save fs-extra.
This error is eliminated.
It still tells me that some modules cannot be found, perhaps I should install them.
![image](https://user-images.githubusercontent.com/21681224/54429732-36c2c780-4719-11e9-8726-d4f881ccc67e.png)
",2019-03-15 11:55:25,2019-03-15 11:55:25
https://api.github.com/repos/hyperledger/caliper/issues/374,https://api.github.com/repos/hyperledger/caliper/issues/comments/473262268,https://github.com/hyperledger/caliper/issues/374#issuecomment-473262268,CODEHLK,"now, here it is:
![image](https://user-images.githubusercontent.com/21681224/54430375-46dba680-471b-11e9-929e-888ba045f77c.png)
",2019-03-15 12:10:13,2019-03-15 12:10:13
https://api.github.com/repos/hyperledger/caliper/issues/374,https://api.github.com/repos/hyperledger/caliper/issues/comments/473271408,https://github.com/hyperledger/caliper/issues/374#issuecomment-473271408,aklenik,"@CODEHLK The `npm` commands must be executed in the root directory of Caliper (`~/Fabric/caliper/caliper` in your case). So follow the getting started and Fabric adapter install docs, and execute the commands from the mentioned directory.
https://hyperledger.github.io/caliper/docs/1_Getting_Started.html
https://hyperledger.github.io/caliper/docs/Fabric_Configuration.html or https://hyperledger.github.io/caliper/docs/Fabric_Ccp_Configuration.html

As for the docker errors, make sure you removed every container before starting a new network.",2019-03-15 12:43:40,2019-03-15 12:43:40
https://api.github.com/repos/hyperledger/caliper/issues/373,https://api.github.com/repos/hyperledger/caliper/issues/comments/474736622,https://github.com/hyperledger/caliper/pull/373#issuecomment-474736622,feihujiang,"LGTM, good enhancement :+1: ",2019-03-20 08:39:19,2019-03-20 08:39:19
https://api.github.com/repos/hyperledger/caliper/issues/372,https://api.github.com/repos/hyperledger/caliper/issues/comments/474736094,https://github.com/hyperledger/caliper/pull/372#issuecomment-474736094,feihujiang,"LGTM but why rate controllers need msg.clientIdx, msg.roundIdx parameters?",2019-03-20 08:37:33,2019-03-20 08:37:33
https://api.github.com/repos/hyperledger/caliper/issues/372,https://api.github.com/repos/hyperledger/caliper/issues/comments/474741816,https://github.com/hyperledger/caliper/pull/372#issuecomment-474741816,aklenik,"@feihujiang The user module/callback factory functions will receive the same arguments. Since both are created through different factory functions, returning objects with different APIs, a single class could implement both a rate controller and a client module. So you can implement business state-based rate controllers, and with the client and round IDs, you can implement different behavior profiles for ""different"" client processes. So basically you can do any kind of workload modelling you want, which is nice :)",2019-03-20 08:56:32,2019-03-20 08:56:32
https://api.github.com/repos/hyperledger/caliper/issues/372,https://api.github.com/repos/hyperledger/caliper/issues/comments/474759167,https://github.com/hyperledger/caliper/pull/372#issuecomment-474759167,feihujiang,Got it.,2019-03-20 09:49:33,2019-03-20 09:49:33
https://api.github.com/repos/hyperledger/caliper/issues/371,https://api.github.com/repos/hyperledger/caliper/issues/comments/472689949,https://github.com/hyperledger/caliper/issues/371#issuecomment-472689949,Dingxining,"I solved the problem when I started with fabric-ccp.yaml

invoke.js:
```
{
            chaincodeFunction: 'invoke',
            chaincodeArguments: [""A"",""B"",""1""]
        }
```",2019-03-14 03:23:15,2019-03-15 06:45:45
https://api.github.com/repos/hyperledger/caliper/issues/371,https://api.github.com/repos/hyperledger/caliper/issues/comments/473200536,https://github.com/hyperledger/caliper/issues/371#issuecomment-473200536,aklenik,"@Dingxining I think for the other adapter you need to pass named args, something like this:
```js
args: {
  param1: ""A"",
  param2: ""B"",
  param3: ""1""
}
```

But check the other examples to confirm this.",2019-03-15 08:31:26,2019-03-15 08:31:43
https://api.github.com/repos/hyperledger/caliper/issues/365,https://api.github.com/repos/hyperledger/caliper/issues/comments/471529808,https://github.com/hyperledger/caliper/issues/365#issuecomment-471529808,aklenik,"@hehui0316 `Missing catch or finally after try.` This is the error one of the client processes encountered. Probably not originating from the Caliper code-base, so make sure your user test callback files are syntactically correct (i.e., there is a `catch` or `finally` block after the `try` blocks).",2019-03-11 13:03:58,2019-03-11 13:03:58
https://api.github.com/repos/hyperledger/caliper/issues/363,https://api.github.com/repos/hyperledger/caliper/issues/comments/471424424,https://github.com/hyperledger/caliper/pull/363#issuecomment-471424424,clumsky,@feihujiang ,2019-03-11 06:54:47,2019-03-11 06:54:47
https://api.github.com/repos/hyperledger/caliper/issues/362,https://api.github.com/repos/hyperledger/caliper/issues/comments/471523499,https://github.com/hyperledger/caliper/pull/362#issuecomment-471523499,aklenik,@panyu4 @feihujiang Could one of you review the content? :) LGTM from a technical point-of-view.,2019-03-11 12:43:00,2019-03-11 12:43:00
https://api.github.com/repos/hyperledger/caliper/issues/362,https://api.github.com/repos/hyperledger/caliper/issues/comments/471798930,https://github.com/hyperledger/caliper/pull/362#issuecomment-471798930,panyu4,"@aklenik I was reviewing it. @Arucald , it seems that some descriptions are not accurate. I'll give you some advice through the rocket chat, since it is written by Chinese. ",2019-03-12 00:43:21,2019-03-12 00:43:21
https://api.github.com/repos/hyperledger/caliper/issues/362,https://api.github.com/repos/hyperledger/caliper/issues/comments/473858953,https://github.com/hyperledger/caliper/pull/362#issuecomment-473858953,panyu4,"@Arucald , I had left some comments to you in rocketchat. Do you have any problems on modification?",2019-03-18 10:43:27,2019-03-18 10:43:27
https://api.github.com/repos/hyperledger/caliper/issues/360,https://api.github.com/repos/hyperledger/caliper/issues/comments/471528806,https://github.com/hyperledger/caliper/issues/360#issuecomment-471528806,aklenik,@Salmanah I think Caliper currently only supports local Composer networks. @nklincoln Can you confirm this?,2019-03-11 13:00:37,2019-03-11 13:00:37
https://api.github.com/repos/hyperledger/caliper/issues/360,https://api.github.com/repos/hyperledger/caliper/issues/comments/471531434,https://github.com/hyperledger/caliper/issues/360#issuecomment-471531434,nklincoln,"@Salmanah @aklenik The manner in which composer creates/joins channels within the pre-test phase is incompatible with remote networks, however the subsequent benchmarking runs should be compatible.",2019-03-11 13:09:16,2019-03-11 13:09:16
https://api.github.com/repos/hyperledger/caliper/issues/360,https://api.github.com/repos/hyperledger/caliper/issues/comments/474848342,https://github.com/hyperledger/caliper/issues/360#issuecomment-474848342,Salmanah,"@aklenik @nklincoln Thank you for the answers, I thought that the channel creation was the issue. I'll just have to run it locally with my own docker setup. ",2019-03-20 14:15:13,2019-03-20 14:15:13
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/471308601,https://github.com/hyperledger/caliper/issues/357#issuecomment-471308601,aklenik,"@dzyand The sample config files are in the benchmark folder, the sample network files are in the network folder. See the documentation page for details, its link is in the description of this repo. ",2019-03-10 13:58:16,2019-03-10 13:58:16
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/471379722,https://github.com/hyperledger/caliper/issues/357#issuecomment-471379722,houqinghui,"@dzyand You can refer to the [doc web](https://hyperledger.github.io/caliper/docs/Fabric_Configuration.html). It will guide you how to run Cacliper to test the fabric network. 
",2019-03-11 01:58:47,2019-03-11 01:58:47
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/471517337,https://github.com/hyperledger/caliper/issues/357#issuecomment-471517337,aklenik,"@dzyand A sample benchmark can be run from the Caliper root directory by the following command (the first two lines install the required Caliper and Fabric SDK dependencies):
```
npm install
npm run fabric-v1.1-deps
npm run bench -- -c benchmark/simple/config-linear-rate.yaml -n network/fabric-v1.1/dev/fabric-node.json
```",2019-03-11 12:22:09,2019-03-11 12:22:09
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/471545776,https://github.com/hyperledger/caliper/issues/357#issuecomment-471545776,dzyand,"@aklenik thank you very much!  but error is still.....
npm run bench -- -c benchmark/simple/config-linear-rate.yaml -n network/fabric-v1.1/dev/fabric-node.json

> caliper@0.1.0 bench /home/dzy/caliper
> node ./scripts/main.js ""-c"" ""benchmark/simple/config-linear-rate.yaml"" ""-n"" ""network/fabric-v1.1/dev/fabric-node.json""

info: [bench-flow.js]: ####### Caliper Test #######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/dev/docker-compose.yaml up -d;sleep 3s
Creating network ""dev_default"" with the default driver
Pulling ca.org1.example.com (hyperledger/fabric-ca:1.1.0)...
1.1.0: Pulling from hyperledger/fabric-ca
Digest: sha256:0a81cbc3e8accd8ea6d0b377b3766efbf585c21ef7fe147e2e0f3aa629472e03
Status: Downloaded newer image for hyperledger/fabric-ca:1.1.0
Pulling orderer.example.com (hyperledger/fabric-orderer:1.1.0)...
1.1.0: Pulling from hyperledger/fabric-orderer
Digest: sha256:7a0a6ca2bbddff69ddf63615cdddfe46bf5f2fe7c55530a092d597d99bd2a4bb
Status: Downloaded newer image for hyperledger/fabric-orderer:1.1.0
Pulling peer0.org1.example.com (hyperledger/fabric-peer:1.1.0)...
1.1.0: Pulling from hyperledger/fabric-peer
Digest: sha256:b1d49f180410136f25b3e9283c242cf319f4c8cb27f0ef1d9de532a4dd131afe
Status: Downloaded newer image for hyperledger/fabric-peer:1.1.0
Creating ca.org1.example.com ... 
Creating orderer.example.com ... ### error

### **ERROR**: for orderer.example.com  Cannot create container for service orderer.example.com: b'Conflict. The container name ""/orderer.example.com"" is already in use by container ""1bb3c2af4f57c4b81dc47c905b2eb23377f8e9625224148a1a73023e41f94fCreating ca.org1.example.com ... done
e.'

### ERROR: for orderer.example.com  Cannot create container for service orderer.example.com: b'Conflict. The container name ""/orderer.example.com"" is already in use by container ""1bb3c2af4f57c4b81dc47c905b2eb23377f8e9625224148a1a73023e41f94f1c"". You have to remove (or rename) that container to be able to reuse that name.'
Encountered errors while bringing up the project.
info: [create-channel.js]: Creating mychannel...
### error: [Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: Connect Failed\n    at createStatusError (/home/dzy/caliper/node_modules/grpc/src/client.js:64:15)\n    at ClientDuplexStream._emitStatusIfDone (/home/dzy/caliper/node_modules/grpc/src/client.js:270:19)\n    at ClientDuplexStream._readsDone (/home/dzy/caliper/node_modules/grpc/src/client.js:236:8)\n    at readCallback (/home/dzy/caliper/node_modules/grpc/src/client.js:296:12)""
error: [create-channel.js]: Failed to create channels: Error: SERVICE_UNAVAILABLE
    at ClientDuplexStream.<anonymous> (/home/dzy/caliper/node_modules/fabric-client/lib/Orderer.js:136:21)
    at emitOne (events.js:116:13)
    at ClientDuplexStream.emit (events.js:211:7)
    at ClientDuplexStream._emitStatusIfDone (/home/dzy/caliper/node_modules/grpc/src/client.js:271:12)
    at ClientDuplexStream._readsDone (/home/dzy/caliper/node_modules/grpc/src/client.js:236:8)
    at readCallback (/home/dzy/caliper/node_modules/grpc/src/client.js:296:12)
error: [fabric.js]: Fabric initialization failed: Error: SERVICE_UNAVAILABLE
    at ClientDuplexStream.<anonymous> (/home/dzy/caliper/node_modules/fabric-client/lib/Orderer.js:136:21)
    at emitOne (events.js:116:13)
    at ClientDuplexStream.emit (events.js:211:7)
    at ClientDuplexStream._emitStatusIfDone (/home/dzy/caliper/node_modules/grpc/src/client.js:271:12)
    at ClientDuplexStream._readsDone (/home/dzy/caliper/node_modules/grpc/src/client.js:236:8)
    at readCallback (/home/dzy/caliper/node_modules/grpc/src/client.js:296:12)
error: [bench-flow.js]: Error: Error: SERVICE_UNAVAILABLE
    at ClientDuplexStream.<anonymous> (/home/dzy/caliper/node_modules/fabric-client/lib/Orderer.js:136:21)

My configuration is as follows:
dzy@dzy:~/caliper$ node -v
v8.15.1
dzy@dzy:~/caliper$ npm -v
6.4.1
dzy@dzy:~/caliper$ docker -v
Docker version 18.09.3, build 774a1f4
dzy@dzy:~/caliper$ docker-compose --version
docker-compose version 1.22.0, build f46880fe

gcc version 7.3.0 (Ubuntu 7.3.0-27ubuntu1~18.04)

/usr/bin/node-gyp -> /usr/lib/node_modules/node-gyp/bin/node-gyp.js
+ node-gyp@3.8.0
updated 1 package in 1.051s
",2019-03-11 13:50:14,2019-03-11 13:50:14
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/471561198,https://github.com/hyperledger/caliper/issues/357#issuecomment-471561198,aklenik,"@dzyand A previous network is interfering with the current run. Stop and remove every container first. Execute this from the root Caliper directory:
```
docker-compose -f network/fabric-v1.1/dev/docker-compose.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)""
```
",2019-03-11 14:28:30,2019-03-11 14:28:30
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/471840085,https://github.com/hyperledger/caliper/issues/357#issuecomment-471840085,dzyand,"@aklenik The timeout error
![1](https://user-images.githubusercontent.com/48249961/54172538-64a9d100-44b9-11e9-89b7-ea7c3bb07222.png)
",2019-03-12 03:24:54,2019-03-12 03:24:54
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/471884371,https://github.com/hyperledger/caliper/issues/357#issuecomment-471884371,aklenik,"@dzyand Try to remove the chaincodes you don't need from the network configuration file. If you test a local network, it can consume some resources, and each chaincode means an extra container per peer.",2019-03-12 07:17:07,2019-03-12 07:17:07
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/472391294,https://github.com/hyperledger/caliper/issues/357#issuecomment-472391294,quangtdn,"Hi @aklenik , I tried your command and got this error:

info: [bench-flow.js]: ####### Caliper Test #######
error: [scripts/main.js]: Error while executing the benchmark: Error: Failed to load gRPC binary module because it was not installed for the current system
Expected directory: node-v64-linux-x64-glibc
Found: [node-v57-linux-x64-glibc]

I already tried 'npm rebuild' but it didn't fix it. 

I think there is some conflict in version here. Perhaps do you know how to fix it?


Thank you. 

Edit: I manage to fix it alr. I downgraded my npm to version 5.6.0 and node to 8.9.4. I hope this may help someone needing it.  ",2019-03-13 11:52:43,2019-03-13 14:43:09
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/472476403,https://github.com/hyperledger/caliper/issues/357#issuecomment-472476403,aklenik,"@quangtdn Node.js 10.x is not supported currently, so use 8.x with Caliper (the nvm tools makes it easy to manage multiple Node.js versions).

@dzyand Did you succeed in running your benchmark? ",2019-03-13 15:37:31,2019-03-13 15:37:31
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/472532873,https://github.com/hyperledger/caliper/issues/357#issuecomment-472532873,quangtdn,"Hi @aklenik  , I am now trying to benchmark a distributed HP network. I managed to bring up a simple network on 2 computers already, so I am now going to use Caliper to benchmark such network. 

As far as I understand, I just need to modify the port endpoints in fabric.json and put the link to my config files in fabric.json (instead of the default link to config directories under the file 'network'). Is it the right approach?

And I notice that for some url/endpoints in the fabric.json file, e.g. ""grpc://localhost:7051"", there is the 'grpc' here. May I ask what it does? In case I put my port address here, should I still keep that 'grpc' to make it something like  ""grpc:172.18.0.1""?

Lastly, when I brought up the network on 2 computers (by following some article), I needed to use docker swarm to create an overlay network over the 2 computers. May I ask whether putting the port addresses into the fabric.json is enough for my Caliper to connect to such HP network and run the benchmarking? I think I may also need to let my Caliper computer to join the overlay network mentioned above. 

I am sorry for asking quite much, as the doc just mostly covers bringing up a local HP network, and the resource for these things is perhaps quite limited. 

Thank you much!


",2019-03-13 17:46:56,2019-03-13 17:46:56
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/472619339,https://github.com/hyperledger/caliper/issues/357#issuecomment-472619339,aklenik,"@quangtdn 
> As far as I understand, I just need to modify the port endpoints in fabric.json and put the link to my config files in fabric.json (instead of the default link to config directories under the file 'network'). Is it the right approach?

Yes, that approach is correct

> And I notice that for some url/endpoints in the fabric.json file, e.g. ""grpc://localhost:7051"", there is the 'grpc' here. May I ask what it does?

It specifies the protocol to use for the communication. Peer and orderer nodes expose GRPC endpoints (or GRPCs if using TLS) while CAs expose HHTP/HTTPs endpoints. The endpoint protocol in your config file must match what is configured on the server-side.

> I think I may also need to let my Caliper computer to join the overlay network mentioned above.

Yes, the machine running Caliper must be able to reach the endpoints specified in the config file. You can ensure this in numerous ways: using public IPs, putting the machines on the same private subnetwork, or any other network magic :)",2019-03-13 21:48:22,2019-03-13 21:48:22
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/472678977,https://github.com/hyperledger/caliper/issues/357#issuecomment-472678977,quangtdn,"Thanks @aklenik , I will try to work it out. ",2019-03-14 02:23:32,2019-03-14 02:23:32
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/472787057,https://github.com/hyperledger/caliper/issues/357#issuecomment-472787057,quangtdn,"Hi @aklenik , I was trying to modify the port addresses and use the link to my HP config files (i.e. crypto-config, and channel-artifacts). I brought up a HP network separately by myself (instead of docker-compose.yaml up) and ran Caliper to benchmark it. Then I got this error: (the program successfully installed the chaincodes, but then failed to instantiate chaincodes)

info: [bench-flow.js]: ####### Caliper Test #######
info: [create-channel.js]: Creating mychannel...
info: [create-channel.js]: Created mychannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining organization org1 to channel mychannel...
info: [join-channel.js]: Successfully joined peerOrg1's peers to mychannel
info: [join-channel.js]: Successfully joined mychannel
info: [install-chaincode.js]: installing all chaincodes......
info: [install-chaincode.js]: Installing chaincode marbles...
info: [packager/Node.js]: packaging Node from /home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/contract/fabric/marbles-norichquery/node
info: [install-chaincode.js]: Installed chaincode marbles successfully in all peers
info: [install-chaincode.js]: Installing chaincode simple...
info: [packager/Node.js]: packaging Node from /home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/contract/fabric/simple/node
info: [install-chaincode.js]: Installed chaincode simple successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...
error: [e2eUtils.js]: Failed to send instantiate transaction and get notifications within the timeout period.
error: [instantiate-chaincode.js]: Failed to instantiate chaincodes: Error: The event hub has not been connected to the event source
    at EventHub._checkConnection (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:487:11)
    at EventHub.registerTxEvent (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:721:8)
    at Promise (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:595:20)
    at new Promise (<anonymous>)
    at eventhubs.forEach (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:592:29)
    at Array.forEach (<anonymous>)
    at instantiateLegacy (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:591:19)
    at <anonymous>
error: [fabric.js]: Fabric chaincode install failed: Error: The event hub has not been connected to the event source
    at EventHub._checkConnection (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:487:11)
    at EventHub.registerTxEvent (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:721:8)
    at Promise (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:595:20)
    at new Promise (<anonymous>)
    at eventhubs.forEach (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:592:29)
    at Array.forEach (<anonymous>)
    at instantiateLegacy (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:591:19)
    at <anonymous>
error: [bench-flow.js]: Error: Error: The event hub has not been connected to the event source
    at EventHub._checkConnection (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:487:11)
    at EventHub.registerTxEvent (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:721:8)
    at Promise (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:595:20)
    at new Promise (<anonymous>)
    at eventhubs.forEach (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:592:29)
    at Array.forEach (<anonymous>)
    at instantiateLegacy (/home/nguyenminhquang/go-1.11.5/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:591:19)
    at <anonymous>
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [bench-flow.js]: 

#######################################
# Test summary: 0 succeeded, 0 failed #
#######################################

info: [scripts/main.js]: Benchmark run successfully




Do you have any idea about this?

  ",2019-03-14 10:13:53,2019-03-14 10:13:53
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/473015320,https://github.com/hyperledger/caliper/issues/357#issuecomment-473015320,aklenik,@quangtdn Can you check the peer logs to see what caused the event hubs to disconnect?,2019-03-14 19:03:07,2019-03-14 19:03:07
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/473035127,https://github.com/hyperledger/caliper/issues/357#issuecomment-473035127,quangtdn,"@aklenik I have 2 peers in this network. I look at all the logs and it seems that there is no error pop-up in any log. Anyway, here is the log of one of the peer (the other seems similar):

2019-03-14 19:46:04.075 UTC [ledgermgmt] initialize -> INFO 003 Initializing ledger mgmt
2019-03-14 19:46:04.075 UTC [kvledger] NewProvider -> INFO 004 Initializing ledger provider
2019-03-14 19:46:04.198 UTC [kvledger] NewProvider -> INFO 005 ledger provider Initialized
2019-03-14 19:46:04.418 UTC [couchdb] CreateDatabaseIfNotExist -> INFO 006 Created state database _replicator
2019-03-14 19:46:04.419 UTC [ledgermgmt] initialize -> INFO 007 ledger mgmt initialized
2019-03-14 19:46:04.420 UTC [peer] func1 -> INFO 008 Auto-detected peer address: 10.0.0.9:7051
2019-03-14 19:46:04.420 UTC [peer] func1 -> INFO 009 Host is 0.0.0.0 , falling back to auto-detected address: 10.0.0.9:7051
2019-03-14 19:46:04.421 UTC [peer] func1 -> INFO 00a Auto-detected peer address: 10.0.0.9:7051
2019-03-14 19:46:04.421 UTC [peer] func1 -> INFO 00b Host is 0.0.0.0 , falling back to auto-detected address: 10.0.0.9:7051
2019-03-14 19:46:04.425 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 00c Entering computeChaincodeEndpoint with peerHostname: 10.0.0.9
2019-03-14 19:46:04.426 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 00d Exit with ccEndpoint: 10.0.0.9:7052
2019-03-14 19:46:04.427 UTC [nodeCmd] createChaincodeServer -> WARN 00e peer.chaincodeListenAddress is not set, using 10.0.0.9:7052
2019-03-14 19:46:04.429 UTC [sccapi] registerSysCC -> INFO 00f system chaincode lscc(github.com/hyperledger/fabric/core/scc/lscc) registered
2019-03-14 19:46:04.430 UTC [sccapi] registerSysCC -> INFO 010 system chaincode cscc(github.com/hyperledger/fabric/core/scc/cscc) registered
2019-03-14 19:46:04.430 UTC [sccapi] registerSysCC -> INFO 011 system chaincode qscc(github.com/hyperledger/fabric/core/scc/qscc) registered
2019-03-14 19:46:04.431 UTC [sccapi] registerSysCC -> INFO 012 system chaincode (+lifecycle,github.com/hyperledger/fabric/core/chaincode/lifecycle,true) disabled
2019-03-14 19:46:04.434 UTC [gossip.service] func1 -> INFO 013 Initialize gossip with endpoint 10.0.0.9:7051 and bootstrap set [peer0.org1.example.com:7051]
2019-03-14 19:46:04.446 UTC [gossip.gossip] NewGossipService -> INFO 014 Creating gossip service with self membership of Endpoint: peer1.org1.example.com:7051, InternalEndpoint: 10.0.0.9:7051, PKI-ID: ab4abf1d7cbf206b37d3673e368d579f038c1086d5164a5f567a806e50aca995, Metadata: 
2019-03-14 19:46:04.447 UTC [gossip.gossip] start -> INFO 015 Gossip instance 10.0.0.9:7051 started
2019-03-14 19:46:04.454 UTC [sccapi] deploySysCC -> INFO 016 system chaincode lscc/(github.com/hyperledger/fabric/core/scc/lscc) deployed
2019-03-14 19:46:04.455 UTC [cscc] Init -> INFO 017 Init CSCC
2019-03-14 19:46:04.455 UTC [sccapi] deploySysCC -> INFO 018 system chaincode cscc/(github.com/hyperledger/fabric/core/scc/cscc) deployed
2019-03-14 19:46:04.455 UTC [qscc] Init -> INFO 019 Init QSCC
2019-03-14 19:46:04.455 UTC [sccapi] deploySysCC -> INFO 01a system chaincode qscc/(github.com/hyperledger/fabric/core/scc/qscc) deployed
2019-03-14 19:46:04.455 UTC [sccapi] deploySysCC -> INFO 01b system chaincode (+lifecycle,github.com/hyperledger/fabric/core/chaincode/lifecycle) disabled
2019-03-14 19:46:04.455 UTC [nodeCmd] serve -> INFO 01c Deployed system chaincodes
2019-03-14 19:46:04.459 UTC [discovery] NewService -> INFO 01d Created with config TLS: false, authCacheMaxSize: 1000, authCachePurgeRatio: 0.750000
2019-03-14 19:46:04.459 UTC [nodeCmd] registerDiscoveryService -> INFO 01e Discovery service activated
2019-03-14 19:46:04.459 UTC [nodeCmd] serve -> INFO 01f Starting peer with ID=[name:""peer1.org1.example.com"" ], network ID=[peer1.org1.example.com], address=[10.0.0.9:7051]
2019-03-14 19:46:04.459 UTC [nodeCmd] serve -> INFO 020 Started peer with ID=[name:""peer1.org1.example.com"" ], network ID=[peer1.org1.example.com], address=[10.0.0.9:7051]
2019-03-14 19:46:04.460 UTC [nodeCmd] func8 -> INFO 021 Starting profiling server with listenAddress = 0.0.0.0:6060
2019-03-14 19:47:58.308 UTC [endorser] callChaincode -> INFO 022 [][ca327164] Entry chaincode: name:""cscc"" 
2019-03-14 19:47:58.309 UTC [ledgermgmt] CreateLedger -> INFO 023 Creating ledger [mychannel] with genesis block
2019-03-14 19:47:58.313 UTC [fsblkstorage] newBlockfileMgr -> INFO 024 Getting block information from block storage
2019-03-14 19:47:58.389 UTC [couchdb] CreateDatabaseIfNotExist -> INFO 025 Created state database mychannel_
2019-03-14 19:47:58.635 UTC [kvledger] CommitWithPvtData -> INFO 026 [mychannel] Committed block [0] with 1 transaction(s) in 237ms (state_validation=0ms block_commit=35ms state_commit=196ms)
2019-03-14 19:47:58.641 UTC [ledgermgmt] CreateLedger -> INFO 027 Created ledger [mychannel] with genesis block
2019-03-14 19:47:58.681 UTC [gossip.gossip] JoinChan -> INFO 028 Joining gossip network of channel mychannel with 1 organizations
2019-03-14 19:47:58.681 UTC [gossip.gossip] learnAnchorPeers -> INFO 029 No configured anchor peers of Org1MSP for channel mychannel to learn about
2019-03-14 19:47:58.709 UTC [gossip.state] NewGossipStateProvider -> INFO 02a Updating metadata information, current ledger sequence is at = 0, next expected block is = 1
2019-03-14 19:47:58.718 UTC [sccapi] deploySysCC -> INFO 02b system chaincode lscc/mychannel(github.com/hyperledger/fabric/core/scc/lscc) deployed
2019-03-14 19:47:58.719 UTC [cscc] Init -> INFO 02c Init CSCC
2019-03-14 19:47:58.719 UTC [sccapi] deploySysCC -> INFO 02d system chaincode cscc/mychannel(github.com/hyperledger/fabric/core/scc/cscc) deployed
2019-03-14 19:47:58.719 UTC [qscc] Init -> INFO 02e Init QSCC
2019-03-14 19:47:58.719 UTC [sccapi] deploySysCC -> INFO 02f system chaincode qscc/mychannel(github.com/hyperledger/fabric/core/scc/qscc) deployed
2019-03-14 19:47:58.720 UTC [sccapi] deploySysCC -> INFO 030 system chaincode (+lifecycle,github.com/hyperledger/fabric/core/chaincode/lifecycle) disabled
2019-03-14 19:47:58.722 UTC [endorser] callChaincode -> INFO 031 [][ca327164] Exit chaincode: name:""cscc""  (414ms)
2019-03-14 19:47:58.722 UTC [comm.grpc.server] 1 -> INFO 032 unary call completed {""grpc.start_time"": ""2019-03-14T19:47:58.287Z"", ""grpc.service"": ""protos.Endorser"", ""grpc.method"": ""ProcessProposal"", ""grpc.peer_address"": ""192.168.1.109:37348"", ""grpc.code"": ""OK"", ""grpc.call_duration"": ""434.981225ms""}
2019-03-14 19:47:58.835 UTC [endorser] callChaincode -> INFO 033 [][f6771c1d] Entry chaincode: name:""lscc"" 
2019-03-14 19:47:58.906 UTC [couchdb] CreateDatabaseIfNotExist -> INFO 034 Created state database mychannel_lscc
2019-03-14 19:47:58.937 UTC [lscc] executeInstall -> INFO 035 Installed Chaincode [marbles] Version [v1] to peer
2019-03-14 19:47:58.938 UTC [endorser] callChaincode -> INFO 036 [][f6771c1d] Exit chaincode: name:""lscc""  (102ms)
2019-03-14 19:47:58.938 UTC [comm.grpc.server] 1 -> INFO 037 unary call completed {""grpc.start_time"": ""2019-03-14T19:47:58.835Z"", ""grpc.service"": ""protos.Endorser"", ""grpc.method"": ""ProcessProposal"", ""grpc.peer_address"": ""192.168.1.109:37348"", ""grpc.code"": ""OK"", ""grpc.call_duration"": ""103.185404ms""}
2019-03-14 19:47:58.991 UTC [endorser] callChaincode -> INFO 038 [][3d198ae8] Entry chaincode: name:""lscc"" 
2019-03-14 19:47:58.995 UTC [lscc] executeInstall -> INFO 039 Installed Chaincode [simple] Version [v0] to peer
2019-03-14 19:47:58.995 UTC [endorser] callChaincode -> INFO 03a [][3d198ae8] Exit chaincode: name:""lscc""  (4ms)
2019-03-14 19:47:58.995 UTC [comm.grpc.server] 1 -> INFO 03b unary call completed {""grpc.start_time"": ""2019-03-14T19:47:58.988Z"", ""grpc.service"": ""protos.Endorser"", ""grpc.method"": ""ProcessProposal"", ""grpc.peer_address"": ""192.168.1.109:37354"", ""grpc.code"": ""OK"", ""grpc.call_duration"": ""6.812779ms""}
2019-03-14 19:47:59.131 UTC [endorser] callChaincode -> INFO 03c [mychannel][1425efc0] Entry chaincode: name:""lscc"" 
2019-03-14 19:48:02.873 UTC [endorser] callChaincode -> INFO 03d [mychannel][1425efc0] Exit chaincode: name:""lscc""  (3743ms)
2019-03-14 19:48:02.874 UTC [comm.grpc.server] 1 -> INFO 03e unary call completed {""grpc.start_time"": ""2019-03-14T19:47:59.129Z"", ""grpc.service"": ""protos.Endorser"", ""grpc.method"": ""ProcessProposal"", ""grpc.peer_address"": ""192.168.1.109:37354"", ""grpc.code"": ""OK"", ""grpc.call_duration"": ""3.744665343s""}
2019-03-14 19:48:03.681 UTC [gossip.channel] reportMembershipChanges -> INFO 03f Membership view has changed. peers went online:  [[peer0.org1.example.com:7051 10.0.0.6:7051]] , current view:  [[peer0.org1.example.com:7051 10.0.0.6:7051]]

",2019-03-14 19:55:53,2019-03-14 19:56:53
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/473136729,https://github.com/hyperledger/caliper/issues/357#issuecomment-473136729,dzyand,"> @quangtdn Node.js 10.x is not supported currently, so use 8.x with Caliper (the nvm tools makes it easy to manage multiple Node.js versions).
> 
> @dzyand Did you succeed in running your benchmark?
@aklenik Yes！Thank you very much! And I’m trying to run  a built network.By the way,can I test and improve the Gossip protocol?
",2019-03-15 02:34:58,2019-03-15 02:34:58
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/473178987,https://github.com/hyperledger/caliper/issues/357#issuecomment-473178987,quangtdn,"@aklenik I think I found my problem already. Because I create an overlay network called ""my-net"" for inter-connection between computers, any command that wants to touch my Hyperledger Fabric network should have the tag --network=""my-net"". For example:

docker run --rm -it --network=""my-net"" --link orderer.example.com:orderer.example.com .........

Maybe as the commands within the testing engine of Caliper are not provided with such tag, Caliper cannot connect to the overlay network but it can still touch the ports. 

May I ask if there is anyway that may help here?

Thank you!",2019-03-15 06:56:04,2019-03-15 06:56:04
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/473194073,https://github.com/hyperledger/caliper/issues/357#issuecomment-473194073,aklenik,"@dzyand Great! If you mean the gossip protocol in Fabric, that's not Caliper-related. Maybe you could measure it's performance somehow, but that's not the goal of Caliper.

@quangtdn Caliper doesn't use docker commands to interact with the network, just IPs and ports. The correct routing must be ensured by you. Could you check whether this error also occurs with the Fabric CCP adapter? Here are the docs, should be quite similar: https://hyperledger.github.io/caliper/docs/Fabric_Ccp_Configuration.html",2019-03-15 08:05:20,2019-03-15 08:05:20
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/473196537,https://github.com/hyperledger/caliper/issues/357#issuecomment-473196537,dzyand,"> @dzyand Great! If you mean the gossip protocol in Fabric, that's not Caliper-related. Maybe you could measure it's performance somehow, but that's not the goal of Caliper.
> 
> @quangtdn Caliper doesn't use docker commands to interact with the network, just IPs and ports. The correct routing must be ensured by you. Could you check whether this error also occurs with the Fabric CCP adapter? Here are the docs, should be quite similar: https://hyperledger.github.io/caliper/docs/Fabric_Ccp_Configuration.html

@aklenik OK!I'll give it a try.Thank you again for your help.",2019-03-15 08:15:41,2019-03-15 08:15:41
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/473351607,https://github.com/hyperledger/caliper/issues/357#issuecomment-473351607,quangtdn,"@aklenik  After lots of time and trials, I figure out that in short docker swarm hinders Caliper from accessing the computer's ports. In normal settings without such docker swarm, Caliper should work fine. I tried a simple experiment that I should have done much earlier: I brought up a Fabric network on PC1 (I used the 2org1peergoleveldb), then ran Caliper on PC2 to benchmark the network on PC1. Caliper just worked perfectly fine.

I guess I have to find another way to bring up fabric network on multiple PCs.

Anyway, thank you very much and have nice weekend :) ! ",2019-03-15 16:22:52,2019-03-15 16:34:35
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/474267175,https://github.com/hyperledger/caliper/issues/357#issuecomment-474267175,aklenik,@quangtdn Someone also brought this problem to our attention. Could you describe the exact limitations and whether you found a workaround?,2019-03-19 09:35:36,2019-03-19 09:35:36
https://api.github.com/repos/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/comments/475859189,https://github.com/hyperledger/caliper/issues/357#issuecomment-475859189,quangtdn,"@aklenik I don't remember exactly everything, but I got a bunch of relating errors: error instantiating after successful installation of chaincodes, or error running the test after successful instantiation of chaincodes. If the person you mentioned just deployed on localhost, then probably (s)he may mis-configure something in fabric.json file (forget to modify the 'context' field after adding/removing chaincodes in fabric.json). For many times, I got such errors just because of misconfiguring fabric.json. 

Edit: If (s)he deploys it on distributed fabric network, it can be potentially the conflicts in port mappings.",2019-03-23 10:42:27,2019-03-25 10:28:18
https://api.github.com/repos/hyperledger/caliper/issues/356,https://api.github.com/repos/hyperledger/caliper/issues/comments/470842481,https://github.com/hyperledger/caliper/pull/356#issuecomment-470842481,panyu4,"#348 will be closed, since its repo has some problems.",2019-03-08 08:09:35,2019-03-08 08:10:26
https://api.github.com/repos/hyperledger/caliper/issues/354,https://api.github.com/repos/hyperledger/caliper/issues/comments/470905277,https://github.com/hyperledger/caliper/pull/354#issuecomment-470905277,aklenik,"@Arucald Good catch! The sign-off is needed for the commit, merging is automatically blocked until then. You can amend your commit from the command line with a sign-off.

And while we're talking about amending the commit, this bug is probably also present in every other network configuration file. Any chance you could also fix those? :)",2019-03-08 12:00:36,2019-03-08 12:00:36
https://api.github.com/repos/hyperledger/caliper/issues/354,https://api.github.com/repos/hyperledger/caliper/issues/comments/478915550,https://github.com/hyperledger/caliper/pull/354#issuecomment-478915550,houqinghui,"> @Arucald Good catch! The sign-off is needed for the commit, merging is automatically blocked until then. You can amend your commit from the command line with a sign-off.
> 
> And while we're talking about amending the commit, this bug is probably also present in every other network configuration file. Any chance you could also fix those? :)

Those bugs have been fixed. you can reveiw it. ",2019-04-02 09:23:05,2019-04-02 09:23:05
https://api.github.com/repos/hyperledger/caliper/issues/353,https://api.github.com/repos/hyperledger/caliper/issues/comments/470907766,https://github.com/hyperledger/caliper/issues/353#issuecomment-470907766,aklenik,@hehui0316 Please refer to the [Composer page](https://hyperledger.github.io/caliper/docs/Composer_Configuration.html) of the Caliper docs.,2019-03-08 12:10:15,2019-03-08 12:10:15
https://api.github.com/repos/hyperledger/caliper/issues/351,https://api.github.com/repos/hyperledger/caliper/issues/comments/470922531,https://github.com/hyperledger/caliper/issues/351#issuecomment-470922531,aklenik,Also facing the problem on Ubuntu 18.04 LTS. Labeling it as a bug.,2019-03-08 13:08:30,2019-03-08 13:08:30
https://api.github.com/repos/hyperledger/caliper/issues/351,https://api.github.com/repos/hyperledger/caliper/issues/comments/471516847,https://github.com/hyperledger/caliper/issues/351#issuecomment-471516847,feihujiang,"@Arucald @aklenik  This was fixed by #361, please have a test.",2019-03-11 12:20:31,2019-03-11 12:20:53
https://api.github.com/repos/hyperledger/caliper/issues/351,https://api.github.com/repos/hyperledger/caliper/issues/comments/471522842,https://github.com/hyperledger/caliper/issues/351#issuecomment-471522842,aklenik,Fixed the problem for me.,2019-03-11 12:40:38,2019-03-11 12:40:38
https://api.github.com/repos/hyperledger/caliper/issues/350,https://api.github.com/repos/hyperledger/caliper/issues/comments/470791749,https://github.com/hyperledger/caliper/issues/350#issuecomment-470791749,dzyand,and there is no network.json,2019-03-08 03:28:18,2019-03-08 03:28:18
https://api.github.com/repos/hyperledger/caliper/issues/350,https://api.github.com/repos/hyperledger/caliper/issues/comments/470832026,https://github.com/hyperledger/caliper/issues/350#issuecomment-470832026,aklenik,@dzyand Based on your logs you use a reaaaallly outdated version of Caliper. The `simplenetwork` network has been removed a long time ago. Please clone the repository again and follow the instructions in the doc page: https://hyperledger.github.io/caliper/docs/1_Getting_Started.html,2019-03-08 07:22:34,2019-03-08 07:22:34
https://api.github.com/repos/hyperledger/caliper/issues/350,https://api.github.com/repos/hyperledger/caliper/issues/comments/470901259,https://github.com/hyperledger/caliper/issues/350#issuecomment-470901259,dzyand,@aklenik thank you very much!,2019-03-08 11:43:51,2019-03-08 11:43:51
https://api.github.com/repos/hyperledger/caliper/issues/348,https://api.github.com/repos/hyperledger/caliper/issues/comments/470452560,https://github.com/hyperledger/caliper/pull/348#issuecomment-470452560,aklenik,"@Arucald Thanks for the contribution! Some technical remarks:
1. Insert the metadata table at the beginning of the doc, so the documentation site will pick it up:
    ```
    ---
    layout: page
    title:  ""Architecture (CH)""
    categories: docs
    order: 3
    ---
    ```
1. You can use the raw version of the oroginal doc as a reference on how to include images and links to other pages: https://raw.githubusercontent.com/hyperledger/caliper/gh-pages/docs/2_Architecture.md

As for the content, I'll leave the review to @panyu4 or @feihujiang :)",2019-03-07 09:33:10,2019-03-07 09:33:10
https://api.github.com/repos/hyperledger/caliper/issues/347,https://api.github.com/repos/hyperledger/caliper/issues/comments/470411652,https://github.com/hyperledger/caliper/issues/347#issuecomment-470411652,aklenik,"@Arucald The main.js files have been removed. The current way of running a benchmark is the following (from the root Caliper dir):
```
npm run bench -- -c benchmark/simple/config.yaml -n network/fabric-v1.4/2org1peergoleveldb/fabric-go.json
```

This is a new change and the documentation hasn't been updated yet, but it will be soon!",2019-03-07 07:07:16,2019-03-07 07:07:16
https://api.github.com/repos/hyperledger/caliper/issues/347,https://api.github.com/repos/hyperledger/caliper/issues/comments/470414663,https://github.com/hyperledger/caliper/issues/347#issuecomment-470414663,Arucald,Ok.  This works well. THX,2019-03-07 07:19:37,2019-03-07 07:19:37
https://api.github.com/repos/hyperledger/caliper/issues/347,https://api.github.com/repos/hyperledger/caliper/issues/comments/470610354,https://github.com/hyperledger/caliper/issues/347#issuecomment-470610354,aklenik,PR #349 updated the documentation accordingly. ,2019-03-07 17:06:32,2019-03-07 17:06:32
https://api.github.com/repos/hyperledger/caliper/issues/345,https://api.github.com/repos/hyperledger/caliper/issues/comments/471516422,https://github.com/hyperledger/caliper/issues/345#issuecomment-471516422,aklenik,Resolved by PR #346 ,2019-03-11 12:19:07,2019-03-11 12:19:07
https://api.github.com/repos/hyperledger/caliper/issues/344,https://api.github.com/repos/hyperledger/caliper/issues/comments/471516291,https://github.com/hyperledger/caliper/issues/344#issuecomment-471516291,aklenik,Resolved by PR #346 ,2019-03-11 12:18:40,2019-03-11 12:18:40
https://api.github.com/repos/hyperledger/caliper/issues/342,https://api.github.com/repos/hyperledger/caliper/issues/comments/478738263,https://github.com/hyperledger/caliper/issues/342#issuecomment-478738263,rohanjulka19,Hi I would like to work on this issue.,2019-04-01 20:38:26,2019-04-01 20:38:26
https://api.github.com/repos/hyperledger/caliper/issues/342,https://api.github.com/repos/hyperledger/caliper/issues/comments/479439636,https://github.com/hyperledger/caliper/issues/342#issuecomment-479439636,aklenik,"@rohanjulka19 Great! You can find me on the Hyperledger Rocket.Chat as klenik. There's is a project restructuring going on, but it'll be finished hopefully by the time we discuss the new design",2019-04-03 10:53:39,2019-04-03 10:53:39
https://api.github.com/repos/hyperledger/caliper/issues/340,https://api.github.com/repos/hyperledger/caliper/issues/comments/474785633,https://github.com/hyperledger/caliper/issues/340#issuecomment-474785633,aklenik,Resolved by PR #372 ,2019-03-20 11:10:01,2019-03-20 11:10:01
https://api.github.com/repos/hyperledger/caliper/issues/338,https://api.github.com/repos/hyperledger/caliper/issues/comments/472887102,https://github.com/hyperledger/caliper/issues/338#issuecomment-472887102,aklenik,Resolved by PRs #368 and #369 ,2019-03-14 14:32:52,2019-03-14 14:32:52
https://api.github.com/repos/hyperledger/caliper/issues/336,https://api.github.com/repos/hyperledger/caliper/issues/comments/469298661,https://github.com/hyperledger/caliper/issues/336#issuecomment-469298661,aklenik,"@gtt116 The provided benchmarks are only meant to be simple examples on how to use Caliper's interface. They're not production-ready implementations and they are not meant to be. You're welcome to submit a PR that improves the examples. But otherwise this is a ""won't fix"" issue :) ",2019-03-04 15:40:05,2019-03-04 15:40:05
https://api.github.com/repos/hyperledger/caliper/issues/335,https://api.github.com/repos/hyperledger/caliper/issues/comments/469093111,https://github.com/hyperledger/caliper/issues/335#issuecomment-469093111,houqinghui,"1. Now you use the fabric-ca-client v1.4 and fabric-client v1.4 to test the fabric network whose version is v1.1, so Caliper cannot find the 'fabric-ca-client/lib/FabricCAClientImpl.js'. Please run `node main -c config.yaml -n ../../network/fabricv1.4/2org2peergoleveldb/fabric-go.json` in the directory `caliper/benchmark/simple` if you want to test the fabric network v1.4. 
2. Please run `docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)` to make sure that there are no containers when you run Caliper. ",2019-03-04 02:01:33,2019-03-04 02:04:12
https://api.github.com/repos/hyperledger/caliper/issues/335,https://api.github.com/repos/hyperledger/caliper/issues/comments/469100447,https://github.com/hyperledger/caliper/issues/335#issuecomment-469100447,robiharid,"> 1. Now you use the fabric-ca-client v1.4 and fabric-client v1.4 to test the fabric network whose version is v1.1, so Caliper cannot find the 'fabric-ca-client/lib/FabricCAClientImpl.js'. Please run `node main -c config.yaml -n ../../network/fabricv1.4/2org2peergoleveldb/fabric-go.json` in the directory `caliper/benchmark/simple` if you want to test the fabric network v1.4.
> 2. Please run `docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)` to make sure that there are no containers when you run Caliper.

Thank you, It now runs up until this error:

`error: [monitor-docker.js]: TypeError: Cannot read property 'id' of undefined`

However, the report compiles and I think it is fine.

Also, If I could be really cheeky - could I ask for advice on customising the benchmark results? Say I want to test the latency for 1, 100, and 1k transactions? Can I edit this in config.yaml? I.e. change tXNumber from 1000 to 100? Why is rate-control limiting it to 100/200tps? 
",2019-03-04 02:51:07,2019-03-04 02:51:07
https://api.github.com/repos/hyperledger/caliper/issues/335,https://api.github.com/repos/hyperledger/caliper/issues/comments/469141829,https://github.com/hyperledger/caliper/issues/335#issuecomment-469141829,houqinghui,"1. The error doesnot effect the test report, you can overlook it.
2. Yes you can edit what you want to change in the config.yaml. 
3. You can try the high rate-control, but maybe some errors occur when the rate-control is too high, because of the machine capacity. ",2019-03-04 07:07:22,2019-03-04 07:07:22
https://api.github.com/repos/hyperledger/caliper/issues/335,https://api.github.com/repos/hyperledger/caliper/issues/comments/469407989,https://github.com/hyperledger/caliper/issues/335#issuecomment-469407989,aklenik,"@robiharid The [configuration section](https://hyperledger.github.io/caliper/docs/2_Architecture.html#configuration-file) of the docs details how you can change the settings. Both `txNumber` and `rateControl` is an array, so you can run 3 different rounds easily that will be put into the same report. However, during the 2nd run the Fabric network already contains the effects of the 1st run, same for the 3rd run.

If you need 3 completely separate tests with ""clean"" networks, you need to run Caliper three times. Currently, Caliper doesn't support parameter studies.

Generating a 1000TPS load shouldn't be a problem, just make sure you distribute it among enough client processes, like 20-30:
```yaml
clients:
    type: local
    number: 20
```",2019-03-04 20:24:18,2019-03-04 20:24:18
https://api.github.com/repos/hyperledger/caliper/issues/334,https://api.github.com/repos/hyperledger/caliper/issues/comments/468566962,https://github.com/hyperledger/caliper/issues/334#issuecomment-468566962,houqinghui,"@gtt116  It is a good idea. 
",2019-03-01 07:10:45,2019-03-01 07:10:45
https://api.github.com/repos/hyperledger/caliper/issues/334,https://api.github.com/repos/hyperledger/caliper/issues/comments/468621277,https://github.com/hyperledger/caliper/issues/334#issuecomment-468621277,aklenik,"@gtt116 Check out PR #296 and its documentation #297 
That new Fabric adapter has great flexibility when it comes to user management. The current limitation is that it only supports one Fabric-CA and registrar per organization, but this should be easy to fix.",2019-03-01 10:36:02,2019-03-01 10:36:02
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/468295143,https://github.com/hyperledger/caliper/issues/333#issuecomment-468295143,aklenik,"@zsh122958 I think we'll need more context. Especially about your user test module, since it can affect the precision of scheduling, and it's written by you :)",2019-02-28 14:36:17,2019-02-28 14:36:17
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/468518625,https://github.com/hyperledger/caliper/issues/333#issuecomment-468518625,zsh122958,"@aklenik 
This is my test configuration file
![image](https://user-images.githubusercontent.com/44695130/53612312-cdb55d00-3c0c-11e9-9055-c899b11f63c9.png)

invokeSmartContract Send a deal
![image](https://user-images.githubusercontent.com/44695130/53612376-11a86200-3c0d-11e9-9596-bd78dc54cbb9.png)


",2019-03-01 02:31:07,2019-03-01 02:31:07
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/468624403,https://github.com/hyperledger/caliper/issues/333#issuecomment-468624403,aklenik,"@zsh122958 As I see, you wrote your own adapter to support a new platform. In that case, most of the code that is running is your own code. The critical path is the following for Caliper:

rate controller => user test module => invokeSmartContract => rate controller => ...

You use 5 client processes to generate a 200TPS workload, which means 40TPS per client process. This means that the rate controller code needs to be executed at least every 24ms to keep this pace. If you use more client, then this number can be higher (20 client => 10 TPS per client => 100ms duration between rate controller calls).

General advice: **don't use sync calls** in this path. I think line 54 is your problem. It blocks the event loop of Node.js so the rate controller is not called quickly enough. You should use async calls instead (the code will hardly change with the async/await pattern).",2019-03-01 10:47:05,2019-03-01 10:47:05
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/469109881,https://github.com/hyperledger/caliper/issues/333#issuecomment-469109881,zsh122958,"Thank you very much!
I'm going to do it asynchronously.
This is the report graph received.
![image](https://user-images.githubusercontent.com/44695130/53709560-e70c1280-3e73-11e9-8554-058f95d0b53f.png)
This is something that bothers me a lot, or is there a better way? I'm trying to locate the TPS problem",2019-03-04 03:53:53,2019-03-04 03:53:53
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/469110007,https://github.com/hyperledger/caliper/issues/333#issuecomment-469110007,zsh122958,"In the underlying database of blockchain, 5,000 pieces of data are received.",2019-03-04 03:54:45,2019-03-04 03:54:45
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/469112738,https://github.com/hyperledger/caliper/issues/333#issuecomment-469112738,shiningfrog,"@zsh122958 hello, now your tps result seems very good, could you advice me how you build your network? what's your configuration? what block chain you test? fabirc?",2019-03-04 04:15:28,2019-03-04 04:15:28
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/469120240,https://github.com/hyperledger/caliper/issues/333#issuecomment-469120240,zsh122958,"@shiningfrog  
How are you
We're testing our own blockchain
There are still some problems with the test results at present, if the test is successful later.
We can communicate with each other.",2019-03-04 05:06:36,2019-03-04 05:06:36
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/469126558,https://github.com/hyperledger/caliper/issues/333#issuecomment-469126558,shiningfrog,"@zsh122958 ok, thank you! by the way, could you give some advice in how to improve the tps first? my tps is only 20+ in caliper(open.js). ",2019-03-04 05:47:12,2019-03-04 05:47:12
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/469130631,https://github.com/hyperledger/caliper/issues/333#issuecomment-469130631,panyu4,"@zsh122958 ， the result shows the backend blockchain system throughput equals to the successful transactions' number. It is caused by original bug, and was fixed by  PR #274 .  You can use the newest version test it again.  ",2019-03-04 06:09:34,2019-03-04 06:09:34
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/469147659,https://github.com/hyperledger/caliper/issues/333#issuecomment-469147659,zsh122958,"@shiningfrog  
I used synchronous transaction before, resulting in low Tps.
Try launching multiple local clients.",2019-03-04 07:33:52,2019-03-04 07:33:52
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/469409822,https://github.com/hyperledger/caliper/issues/333#issuecomment-469409822,aklenik,"@zsh122958 As @panyu4 suggested, try rebasing your code to the up-to-date Caliper version, it had some bugs fixed recently. It shouldn't affect your adapter code.",2019-03-04 20:30:13,2019-03-04 20:30:13
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/469520206,https://github.com/hyperledger/caliper/issues/333#issuecomment-469520206,zsh122958,"@aklenik 
This is the latest version of my use of caliper.
Asynchronous commit is currently used.
The operation is as follows:
![image](https://user-images.githubusercontent.com/44695130/53778455-c3aa9b80-3f37-11e9-9541-c34c8227e22e.png)

info: [bench-flow.js]: 
r.create.max: 1551755287.142
 r.create.min: 1551755277.155 
 r.final.max: 1551755287.145 
 r.final.min: 1551755278.087",2019-03-05 03:17:12,2019-03-05 03:17:12
https://api.github.com/repos/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/comments/471545381,https://github.com/hyperledger/caliper/issues/333#issuecomment-471545381,aklenik,@zsh122958 Can you share the entire code file of your adapter (as GitHub gist)? The TPS is still shady in your report.,2019-03-11 13:49:14,2019-03-11 13:49:14
https://api.github.com/repos/hyperledger/caliper/issues/332,https://api.github.com/repos/hyperledger/caliper/issues/comments/467682316,https://github.com/hyperledger/caliper/pull/332#issuecomment-467682316,panyu4,"@aklenik @houqinghui , Modifications has been done, so it will be merged.",2019-02-27 01:12:15,2019-02-27 01:12:15
https://api.github.com/repos/hyperledger/caliper/issues/331,https://api.github.com/repos/hyperledger/caliper/issues/comments/466611554,https://github.com/hyperledger/caliper/issues/331#issuecomment-466611554,feihujiang,  :+1: ,2019-02-23 03:21:53,2019-02-23 03:21:53
https://api.github.com/repos/hyperledger/caliper/issues/331,https://api.github.com/repos/hyperledger/caliper/issues/comments/469603726,https://github.com/hyperledger/caliper/issues/331#issuecomment-469603726,panyu4,"Since this issue had been resolved, it will be closed.",2019-03-05 09:20:43,2019-03-05 09:20:43
https://api.github.com/repos/hyperledger/caliper/issues/330,https://api.github.com/repos/hyperledger/caliper/issues/comments/466382403,https://github.com/hyperledger/caliper/pull/330#issuecomment-466382403,aklenik,"@clumsky 
1) Please make sure that your code passes the required linting rules. Currently, these are the errors:
```
/home/travis/build/hyperledger/caliper/benchmark/simple/main.js
  33:1   error  Missing JSDoc for parameter 'argv'   valid-jsdoc
  34:40  error  Trailing spaces not allowed          no-trailing-spaces
  37:13  error  Expected '===' and instead saw '=='  eqeqeq
  37:16  error  Strings must use singlequote         quotes
/home/travis/build/hyperledger/caliper/src/comm/bench-flow.js
  316:1  error  Missing JSDoc for parameter 'command_default'  valid-jsdoc
```

2) See Issue #331 for a detailed, clean an general solution for the problem. You can modify your PR accordingly. ",2019-02-22 12:36:35,2019-02-22 12:36:35
https://api.github.com/repos/hyperledger/caliper/issues/330,https://api.github.com/repos/hyperledger/caliper/issues/comments/467353231,https://github.com/hyperledger/caliper/pull/330#issuecomment-467353231,clumsky,"@aklenik  This wey, we can use node  main.js --skipstart false(or true) --skipend false(or true) to set caliper whether starting and ending default fabric network. And if skipstart and skipend argv not set, default.yaml can control whether starting and ending default fabric network.
Finally，whether we should use this way to modify other benchmark test？",2019-02-26 08:56:43,2019-02-26 08:56:43
https://api.github.com/repos/hyperledger/caliper/issues/330,https://api.github.com/repos/hyperledger/caliper/issues/comments/467410876,https://github.com/hyperledger/caliper/pull/330#issuecomment-467410876,aklenik,"@clumsky The `main.js` files are just example bootstrap entry points for Caliper's `bench-flow.js/run` function. So they're not part of the Caliper code-base. Adding any features to those files is meaningless. 

Caliper has a hierarchical configuration mechanism, based on the `nconf` package, that provides a really flexible mechanism for setting the same option from different sources, just like the Fabric configuration mechanism. 

So if you add the `skipEndScript` and `skipStartScript` options to the `core` section of the config file (as default, fallback values), you can modify them in the following ways (in priority order):
1. During runtime: 
    ```js
    const config = require('relative/path/to/src/comm/config-utils.js');
    config.setConfigSetting('core:skipStartScript', true);
    config.setConfigSetting('core:skipEndScript', true);
    
    // reading the setting somewhere else will yield the true value, regardless of the deafult config file, environment and command line options
    ```
1. From the command line:
    ```sh
    node main.js -c config.yaml -n network.yaml --core:skipStartScript=true --core:skipStartScipt=true
    ```
    This will overwrite the default config file and environment options if provided

1. From environment variables (this might not work currently, but will be fixed soon):
    ```sh
    CORE_SKIPSTARTSCRIPT=TRUE node main.js -c config.yaml -n network.yaml
    ```
    This will overwrite the default config file options if provided

1. Change the values in the default config file

So this is the config mechanism of Caliper, and every runtime-related configuration (like skipping some feature) must be configured through this, so it will be accessible from every piece of code.

I'll add a detailed review soon about which lines you need or not.",2019-02-26 11:58:08,2019-02-26 11:58:08
https://api.github.com/repos/hyperledger/caliper/issues/330,https://api.github.com/repos/hyperledger/caliper/issues/comments/467807097,https://github.com/hyperledger/caliper/pull/330#issuecomment-467807097,clumsky,"@aklenik  Now, we can use node main.js - --skipstart true(or false) --skipend true(or false). 
thanks for your suggestion.",2019-02-27 10:21:49,2019-02-27 10:21:49
https://api.github.com/repos/hyperledger/caliper/issues/330,https://api.github.com/repos/hyperledger/caliper/issues/comments/469092150,https://github.com/hyperledger/caliper/pull/330#issuecomment-469092150,clumsky,@aklenik  Thanks for your help.  Is this the right way?,2019-03-04 01:54:50,2019-03-04 01:54:50
https://api.github.com/repos/hyperledger/caliper/issues/329,https://api.github.com/repos/hyperledger/caliper/issues/comments/466369535,https://github.com/hyperledger/caliper/issues/329#issuecomment-466369535,aklenik,"@clumsky The start and end commands can contain arbitrary scripts, not just network starting/cleaning ones. But I agree with your point, that during development, it would be convenient to optionally skip the start and/or end scripts.

I'll write a separate issue about this soon, and you can edit your PR accordingly (because there is a nicer way for this setting :) )",2019-02-22 11:42:36,2019-02-22 11:42:36
https://api.github.com/repos/hyperledger/caliper/issues/327,https://api.github.com/repos/hyperledger/caliper/issues/comments/466367884,https://github.com/hyperledger/caliper/issues/327#issuecomment-466367884,aklenik,@sidraamalik Could you provide some error log for the behavior?,2019-02-22 11:35:31,2019-02-22 11:35:31
https://api.github.com/repos/hyperledger/caliper/issues/326,https://api.github.com/repos/hyperledger/caliper/issues/comments/465587008,https://github.com/hyperledger/caliper/issues/326#issuecomment-465587008,aklenik,"@clumsky As far as I know, Fabric doesn't provide an API for querying the channels for privacy reasons. The only query you can make is asking a peer what channels it has joined. So joining a channel is the only viable way to check whether a channel is successfully created or not.

From a technical point of view (I'm not entirely confident in these details, but [this page](https://hyperledger-fabric.readthedocs.io/en/latest/network/network.html) describes a similar story): creating a channel with/through the orderer is kind of a lightweight operation (a new topic in Kafka, a config block and similar housekeepings). The heavier part is when a peer joins a channel and instantiates the related artifacts locally. So since channels are just logical concepts, joining is where the critical stuff happens.

Is this reasoning acceptable?",2019-02-20 14:02:39,2019-02-20 14:02:39
https://api.github.com/repos/hyperledger/caliper/issues/326,https://api.github.com/repos/hyperledger/caliper/issues/comments/466244270,https://github.com/hyperledger/caliper/issues/326#issuecomment-466244270,clumsky," @aklenik  what is the meanig of ""The client application must poll the orderer to discover whether the channel has been created completely or not.""? when we can poll the orderer to verify channel has been created?",2019-02-22 02:05:16,2019-02-22 02:05:16
https://api.github.com/repos/hyperledger/caliper/issues/326,https://api.github.com/repos/hyperledger/caliper/issues/comments/466368920,https://github.com/hyperledger/caliper/issues/326#issuecomment-466368920,aklenik,"@clumsky I've also been wondering about that, but couldn't find any SDK-provided API for this polling. Only the mentioned query about which channels a peer has joined.

Maybe you could ask around some Fabric SDK-specific RocketChat channel or mailing list and update your findings here for future reference.",2019-02-22 11:40:05,2019-02-22 11:40:05
https://api.github.com/repos/hyperledger/caliper/issues/322,https://api.github.com/repos/hyperledger/caliper/issues/comments/465435399,https://github.com/hyperledger/caliper/issues/322#issuecomment-465435399,houqinghui," @paramesh  I cannot get your point. do you mean that you havar 2 Orgs and 2 peers per Org and how do you write the endorsement-policy when you want every transcations to be endorsed by all the four peers?
",2019-02-20 05:53:42,2019-02-20 05:53:42
https://api.github.com/repos/hyperledger/caliper/issues/322,https://api.github.com/repos/hyperledger/caliper/issues/comments/465435781,https://github.com/hyperledger/caliper/issues/322#issuecomment-465435781,paramesh,@houqinghui yes you are right.,2019-02-20 05:55:24,2019-02-20 05:55:24
https://api.github.com/repos/hyperledger/caliper/issues/322,https://api.github.com/repos/hyperledger/caliper/issues/comments/465441491,https://github.com/hyperledger/caliper/issues/322#issuecomment-465441491,houqinghui,"@paramesh 

1. You can refer to the [endorsement policy ](https://hyperledger-fabric.readthedocs.io/en/latest/endorsement-policies.html)of the fabric documentation. 

2. Unfortunately! there no valid command for that, you can follow two steps if you want to achieve this:

- Write your own custom endorsement logic by a plugin. This method is little cumbersome and you can follow this link if you want to do that. [Pluggable endorsement and validation logic](https://hyperledger-fabric.readthedocs.io/en/release-1.3/pluggable_endorsement_and_validation.html)

- Or, you can have an alternate solution by creating 10 Orgs with 1 peer each and define the endorsement policy through the command that you want as:
-P ""OutOf(10, 'Org1.peer', 'Org2.peer', ...., 'Org10.peer')""

But, having all the peers as an endorsing peer is never a good idea as if a peer goes down, you will have to face serious problems as no transaction will be committed",2019-02-20 06:21:52,2019-02-20 06:34:43
https://api.github.com/repos/hyperledger/caliper/issues/322,https://api.github.com/repos/hyperledger/caliper/issues/comments/465532054,https://github.com/hyperledger/caliper/issues/322#issuecomment-465532054,aklenik,"@paramesh The peers are ""just"" resources contributed by organizations. The consensus happens between organizations and not peers. The number of peers is a perfomance scaling parameter, the policies are defined on the organization level (otherwise you'd need to modify a chaincode's endorsement policy every time you add a new peer to the network).

That being said, nothing prevents you from sending the transaction proposal to multiple peers from the same orgs, but only one of the returned endorsements are needed for the endorsement policy, so it's kind of a waste of resources in a normal scenario.

From a technical point of view: Caliper sends a proposal to only one peer per org (based on the above reasoning). The new Fabric adapter (PR #296) allows you to specify any target if you want to execute a transaction on every peer (but it won't affect the validation of the endorsement policy).",2019-02-20 11:14:26,2019-02-20 11:14:26
https://api.github.com/repos/hyperledger/caliper/issues/322,https://api.github.com/repos/hyperledger/caliper/issues/comments/465709422,https://github.com/hyperledger/caliper/issues/322#issuecomment-465709422,paramesh,"Thanks @houqinghui @aklenik
",2019-02-20 18:58:03,2019-02-20 18:58:03
https://api.github.com/repos/hyperledger/caliper/issues/321,https://api.github.com/repos/hyperledger/caliper/issues/comments/464682560,https://github.com/hyperledger/caliper/issues/321#issuecomment-464682560,aklenik,"@CoreyLin You heard it right, endorsement policy can have an impact on performance. Consider the following two scenarios: 

1. 2-of-2 policy: each transaction must be executed on at least one peer of __two__ different orgs, so consuming the resources of two peers in total. 
1. 1-of-2 policy: a transaction must be executed on at least one peer of __either__ orgs. So a transaction consumes the resources of only one peer in total, allowing twice as many transactions with the same resources (at least in theory).

But the first policy is resilient against malicious organizations, whereas in the second case a single ""hacked"" org could influence transaction processing (allowing ""bad"" transactions into the ledger).

Summary: yes, the endorsement policy does affect the performance. No, it is not a performance tuning parameter, it is determined by the business (or fault/attack tolerance) requirements.

NB: it would be possible to implement automatic load balancing based on the minimal organization sets that can satisfy a policy, but it's not a high priority task right now. Currently, Caliper assumes an N-of-N policy and sends transactions accordingly. ",2019-02-18 10:46:50,2019-02-18 10:46:50
https://api.github.com/repos/hyperledger/caliper/issues/321,https://api.github.com/repos/hyperledger/caliper/issues/comments/464699890,https://github.com/hyperledger/caliper/issues/321#issuecomment-464699890,CoreyLin,Thanks. @aklenik ,2019-02-18 11:39:49,2019-02-18 11:39:49
https://api.github.com/repos/hyperledger/caliper/issues/321,https://api.github.com/repos/hyperledger/caliper/issues/comments/469416279,https://github.com/hyperledger/caliper/issues/321#issuecomment-469416279,aklenik,"@CoreyLin The new Fabric adapter has been merged, so you can specify the targets explicitly from the user module if Caliper's N-of-N endorsement policy assumption is not good enough. ",2019-03-04 20:50:10,2019-03-04 20:50:10
https://api.github.com/repos/hyperledger/caliper/issues/321,https://api.github.com/repos/hyperledger/caliper/issues/comments/469687161,https://github.com/hyperledger/caliper/issues/321#issuecomment-469687161,CoreyLin,@aklenik Got it. Very helpful. Thanks very much!,2019-03-05 13:53:09,2019-03-05 13:53:09
https://api.github.com/repos/hyperledger/caliper/issues/320,https://api.github.com/repos/hyperledger/caliper/issues/comments/464677120,https://github.com/hyperledger/caliper/issues/320#issuecomment-464677120,aklenik,"I would add the following remarks:
1. Report and detailed data should be differentiated. 
    a) A report is a high-level overview of the performance of the system based on the run tests. It should be brief, easy to read and present.
    b) Detailed data gathered during a test run serves an other purpose, for example identifying bottlenecks of the backend network. 
1. Both should be exported. An ongoing work is to revise the data flow in Caliper, and make it modular to allow for multiple exporters for example (a high level HTML report exporter, a detailed per-transaction CSV exporter, etc).
1. Some custom information can already be added to the generated report to distinguish between different test runs:
```json
""info"" : {
    ""Version"": ""1.1.0"",
    ""Size"": ""2 Orgs with 1 Peer"",
    ""Orderer"": ""Solo"",
    ""Distribution"": ""Single Host""
  }
```

Place a top-level `info` block into your network configuration file (see for example, the end of `network/fabric-v1.1/2org1peergoleveldb/fabric-go-tls.json`). In that block you can add arbitrary key-value pairs, and they will be added to the generated report as-is. ",2019-02-18 10:31:14,2019-02-18 10:31:14
https://api.github.com/repos/hyperledger/caliper/issues/320,https://api.github.com/repos/hyperledger/caliper/issues/comments/476397366,https://github.com/hyperledger/caliper/issues/320#issuecomment-476397366,ig0rsky,@aklenik is there a way to extract a detailed transaction log of a test run? For example in json or csv form? ,2019-03-25 22:11:30,2019-03-25 22:11:30
https://api.github.com/repos/hyperledger/caliper/issues/320,https://api.github.com/repos/hyperledger/caliper/issues/comments/477092416,https://github.com/hyperledger/caliper/issues/320#issuecomment-477092416,aklenik,"@ig0rsky The Fabric CCP adapter collects everything that can be observed by a client, [give it a try](https://hyperledger.github.io/caliper/docs/Fabric_Ccp_Configuration.html#transaction-data-gathered-by-the-adapter). 
Based on this you can do your own CSV export after each transaction (maybe using a WriteStream for efficiency reasons).",2019-03-27 10:47:47,2019-03-27 10:49:01
https://api.github.com/repos/hyperledger/caliper/issues/319,https://api.github.com/repos/hyperledger/caliper/issues/comments/464322848,https://github.com/hyperledger/caliper/issues/319#issuecomment-464322848,aklenik,"The send rate is divided among the clients (5 clients by default). Together with the timing calculations, this can cause some deviation from the specified send rate. Usually this is a relatively small deviation (2,5 TPS), but since the send rate is 5 TPS, you notice this difference. Can you confirm, that a relatively high deviation is observable with higher send rates? ",2019-02-16 09:21:58,2019-02-16 09:21:58
https://api.github.com/repos/hyperledger/caliper/issues/319,https://api.github.com/repos/hyperledger/caliper/issues/comments/464323512,https://github.com/hyperledger/caliper/issues/319#issuecomment-464323512,CoreyLin,"@aklenik Thanks for your explanation. Actually for higher send rates, I didn't discovered a large deviation, and the deviation remians within 0.6 tps in my env. So I think 2.5 TPS can be accepted, after all, I only configure 5 TPS(very small).",2019-02-16 09:26:08,2019-02-16 09:26:08
https://api.github.com/repos/hyperledger/caliper/issues/318,https://api.github.com/repos/hyperledger/caliper/issues/comments/464322069,https://github.com/hyperledger/caliper/issues/318#issuecomment-464322069,aklenik,"Yes, it's been bothering me for some time, it's probably a bug while shutting down the monitoring component. Since it doesn't cause any actual error, it's not a serious bug, but we'll look into it ",2019-02-16 09:17:05,2019-02-16 09:17:05
https://api.github.com/repos/hyperledger/caliper/issues/318,https://api.github.com/repos/hyperledger/caliper/issues/comments/464322313,https://github.com/hyperledger/caliper/issues/318#issuecomment-464322313,CoreyLin,"@aklenik OK, thanks. By the way, today is Saturday. You are so hard-working. I didn't expect to get reply today...",2019-02-16 09:18:26,2019-02-16 09:18:26
https://api.github.com/repos/hyperledger/caliper/issues/318,https://api.github.com/repos/hyperledger/caliper/issues/comments/464323779,https://github.com/hyperledger/caliper/issues/318#issuecomment-464323779,aklenik,"Well, didn't have much time recently for the community side of Caliper, so trying to make up for it :) Plus it's in everyone's best interest to make Caliper even more awesome :) ",2019-02-16 09:27:35,2019-02-16 09:27:35
https://api.github.com/repos/hyperledger/caliper/issues/318,https://api.github.com/repos/hyperledger/caliper/issues/comments/464324123,https://github.com/hyperledger/caliper/issues/318#issuecomment-464324123,CoreyLin,"Yes, agree. I found it is a very good benchmark tool for hyperledger.",2019-02-16 09:31:00,2019-02-16 09:31:00
https://api.github.com/repos/hyperledger/caliper/issues/317,https://api.github.com/repos/hyperledger/caliper/issues/comments/464300905,https://github.com/hyperledger/caliper/issues/317#issuecomment-464300905,CoreyLin,"I noticed that in blockchain.js, there is a parameter timeout:
![6edf4e567c8f475341ceb678666477b](https://user-images.githubusercontent.com/12689769/52895696-c77cb500-31f8-11e9-8787-7958b70a9646.png)
Is this timeout related to the error timeout in test log?",2019-02-16 06:40:56,2019-02-16 06:40:56
https://api.github.com/repos/hyperledger/caliper/issues/317,https://api.github.com/repos/hyperledger/caliper/issues/comments/464304375,https://github.com/hyperledger/caliper/issues/317#issuecomment-464304375,CoreyLin,"Just now I checked the code. The timeout passing flow is like:
query.js-->blockchain.js:invokeSmartContract-->fabric.js:invokeSmartContract-->e2eUtils.js:invokebycontext
And error ""Endorsement denied:"" comes from invokebycontext function:
![024a75bc976a65e137d17e7bd7862c5](https://user-images.githubusercontent.com/12689769/52896141-9c955f80-31fe-11e9-9cdb-a8e511955ec1.png)
![3837e2ec0583d4ac288989a4b470ac5](https://user-images.githubusercontent.com/12689769/52896143-a15a1380-31fe-11e9-9a21-d7a0be9f7ec4.png)
Could you please furthur check why did this timeout happen? The passed timeout from query.js is 120 seconds, but I observed that the transaction failed much earlier than timeout expired, that is, about 1s, very fast to fail. It seems that 120s doesn't take effect here.",2019-02-16 07:25:02,2019-02-16 07:25:02
https://api.github.com/repos/hyperledger/caliper/issues/317,https://api.github.com/repos/hyperledger/caliper/issues/comments/464321677,https://github.com/hyperledger/caliper/issues/317#issuecomment-464321677,aklenik,"What you set in Caliper and the callback, that's a client side timeout, passed to the Fabric SDK. You also need to set the timeout on the peer side. I think you can do that with the `CORE_CHAINCODE_EXECUTETIMEOUT=120s` environment variable on the peer containers, but check the peer configs for the exact name ",2019-02-16 09:14:48,2019-02-16 09:14:48
https://api.github.com/repos/hyperledger/caliper/issues/317,https://api.github.com/repos/hyperledger/caliper/issues/comments/464629468,https://github.com/hyperledger/caliper/issues/317#issuecomment-464629468,CoreyLin,"@aklenik Thanks. After debugging, I found it is not a timeout problem. Timeout configuration has no problem. Instead, the rich query of marbles returns ""404 not found"" error. I will skip this problem, and use another chaincode firstly. Anyway, I will close this issue.",2019-02-18 08:14:13,2019-02-18 08:14:13
https://api.github.com/repos/hyperledger/caliper/issues/316,https://api.github.com/repos/hyperledger/caliper/issues/comments/464283887,https://github.com/hyperledger/caliper/issues/316#issuecomment-464283887,CoreyLin,"By the way, the following fields surrounded by red rectangle seem not normal too:
![b09a8895cadb1bdec8ee38cd0a3c3bc](https://user-images.githubusercontent.com/12689769/52894345-df493e80-31e2-11e9-8552-0d896e90193c.png)

",2019-02-16 04:03:36,2019-02-16 04:03:36
https://api.github.com/repos/hyperledger/caliper/issues/316,https://api.github.com/repos/hyperledger/caliper/issues/comments/464319319,https://github.com/hyperledger/caliper/issues/316#issuecomment-464319319,aklenik,"We'll look into it, something is definitely shady ",2019-02-16 08:59:10,2019-02-16 08:59:10
https://api.github.com/repos/hyperledger/caliper/issues/316,https://api.github.com/repos/hyperledger/caliper/issues/comments/464320348,https://github.com/hyperledger/caliper/issues/316#issuecomment-464320348,CoreyLin,"@aklenik thanks for your reply. Just now I found that it is not a bug. Actually, the displaying is normal. Because I found that the ""Succ: 1500"" is an accumulated number which count from the beginning of the test. Before running ""query"" test, actually ""init"" test had already sent 1500 transactions. So here ""Succ: 1500"" means that ""init"" test is successful.
And ""query"" test totally sent 15 transactions, and all of them failed. So it is not a bug.",2019-02-16 09:06:22,2019-02-16 09:06:22
https://api.github.com/repos/hyperledger/caliper/issues/316,https://api.github.com/repos/hyperledger/caliper/issues/comments/464321138,https://github.com/hyperledger/caliper/issues/316#issuecomment-464321138,aklenik,"Ah, okay, didn't see that it's not the only round ",2019-02-16 09:11:15,2019-02-16 09:11:15
https://api.github.com/repos/hyperledger/caliper/issues/316,https://api.github.com/repos/hyperledger/caliper/issues/comments/464322051,https://github.com/hyperledger/caliper/issues/316#issuecomment-464322051,CoreyLin,"The displaying has no problem. But another problem comes to my mind: why all 15 ""query"" transactions failed? Everytime when I run this case, ""init"" is totally successful and ""query"" is failed.
Just now I debugged the peer log and couchdb log, found that some logs seems not normal:
peer log:
![710f2f47e2d03a81502e390f6b997b7](https://user-images.githubusercontent.com/12689769/52897310-eb96c100-320d-11e9-8107-005864415488.png)
couchdb log:
![f9f049eae07a8d8cdf65079721239c6](https://user-images.githubusercontent.com/12689769/52897313-f4879280-320d-11e9-93d2-f50437dec5c8.png)
It seems that the document can't be found/queried by nodejs SDK.

But when I directly query the marbles data from CLI, it is successful:
![b603ef6ac905f2f2d88d05147d27675](https://user-images.githubusercontent.com/12689769/52897350-69f36300-320e-11e9-85bb-4c7fd77813ad.png)
![722f8d576a7977ecf8a54c444926197](https://user-images.githubusercontent.com/12689769/52897352-6e1f8080-320e-11e9-8b97-d2c23f115e1e.png)
So it is strange. I just doubt maybe there is something wrong with ""query.js"" or its dependency libraries. But I am not sure. Currently I don't have time to debug the code error.",2019-02-16 09:16:55,2019-02-16 09:16:55
https://api.github.com/repos/hyperledger/caliper/issues/316,https://api.github.com/repos/hyperledger/caliper/issues/comments/464324285,https://github.com/hyperledger/caliper/issues/316#issuecomment-464324285,CoreyLin,"Anyway, I have to skip it, and select another sample chaincode to try. I can't get stuck here...",2019-02-16 09:32:37,2019-02-16 09:32:37
https://api.github.com/repos/hyperledger/caliper/issues/315,https://api.github.com/repos/hyperledger/caliper/issues/comments/464319221,https://github.com/hyperledger/caliper/issues/315#issuecomment-464319221,aklenik,"Unfinished: the transaction is submitted and going through the life cycle. We don't know the result yet
Fail: we got the notification that the transaction failed. 
Succ: we got the notification that the transaction was successful. 

Submitted = succ + fail + unfinished ",2019-02-16 08:58:04,2019-02-16 08:58:04
https://api.github.com/repos/hyperledger/caliper/issues/315,https://api.github.com/repos/hyperledger/caliper/issues/comments/464319480,https://github.com/hyperledger/caliper/issues/315#issuecomment-464319480,CoreyLin,"So can I understand it like this:
unfinished will becomes one of these:
1.fail or timeout
2.success",2019-02-16 09:01:11,2019-02-16 09:01:11
https://api.github.com/repos/hyperledger/caliper/issues/314,https://api.github.com/repos/hyperledger/caliper/issues/comments/464318924,https://github.com/hyperledger/caliper/issues/314#issuecomment-464318924,aklenik,"There is a pending PR, that resolves this. The disk usage support is already there, but it's not processed and reported yet. ",2019-02-16 08:55:58,2019-02-16 08:55:58
https://api.github.com/repos/hyperledger/caliper/issues/314,https://api.github.com/repos/hyperledger/caliper/issues/comments/464319670,https://github.com/hyperledger/caliper/issues/314#issuecomment-464319670,CoreyLin,"OK, so in near future, you will support disk usage reporting on UI?",2019-02-16 09:02:26,2019-02-16 09:02:26
https://api.github.com/repos/hyperledger/caliper/issues/314,https://api.github.com/repos/hyperledger/caliper/issues/comments/466397616,https://github.com/hyperledger/caliper/issues/314#issuecomment-466397616,aklenik,@CoreyLin Resolved by PR #293 ,2019-02-22 13:33:54,2019-02-22 13:33:54
https://api.github.com/repos/hyperledger/caliper/issues/313,https://api.github.com/repos/hyperledger/caliper/issues/comments/464274216,https://github.com/hyperledger/caliper/issues/313#issuecomment-464274216,CoreyLin,"Just now, I tried to replace the nodejs version simple to go version simple:
![04f125e1bcee1100fcc5a823d2a2310](https://user-images.githubusercontent.com/12689769/52893069-858d4800-31d3-11e9-96eb-7063f5b55224.png)
The instantiation of simple chaincode still failed. But the error log was a little different. The error log was below:
![fca8624ca2ff8a5f405a0851f202f10](https://user-images.githubusercontent.com/12689769/52893091-c4230280-31d3-11e9-9dbe-67f934897b17.png)
![104371477b2ec512ac8bd370575fd86](https://user-images.githubusercontent.com/12689769/52893093-c71df300-31d3-11e9-88d8-2be960082372.png)
![be6d34f9c124d76b4d0e46046f80f9c](https://user-images.githubusercontent.com/12689769/52893095-c8e7b680-31d3-11e9-8d08-e8fa461f0c17.png)
",2019-02-16 02:15:46,2019-02-16 02:15:46
https://api.github.com/repos/hyperledger/caliper/issues/313,https://api.github.com/repos/hyperledger/caliper/issues/comments/464318673,https://github.com/hyperledger/caliper/issues/313#issuecomment-464318673,aklenik,"The instantiation was successful on some peers, so either there were some remnant containers (remove every container and the dev* chaincode images), or it's some resource problem (4 peers -> 4 chaincode containers, takes time)

Try it with a smaller network also. ",2019-02-16 08:54:26,2019-02-16 08:54:26
https://api.github.com/repos/hyperledger/caliper/issues/313,https://api.github.com/repos/hyperledger/caliper/issues/comments/464319207,https://github.com/hyperledger/caliper/issues/313#issuecomment-464319207,CoreyLin,"@aklenik I did the whole test operation very carefully. Before running testing, I docker rm -f dev* chaincode     containers, and remove them in the peer container by rm /var/hyperledger/production/chaincodes/<ccname>:<ccversion>

Everytime, I can instantiate ""marbles"" successfully, but ""simple"" instantiation failed. I don't think it is resource problem.",2019-02-16 08:57:51,2019-02-16 08:57:51
https://api.github.com/repos/hyperledger/caliper/issues/313,https://api.github.com/repos/hyperledger/caliper/issues/comments/464319318,https://github.com/hyperledger/caliper/issues/313#issuecomment-464319318,CoreyLin,"Because when I got started with Caliper. I run it on a single machine, and the network is the default network provided by caliper team, it is very simple. But ""simple"" chaincode still instantiated in failure. After I removed ""simple"" and only keep ""marbles"", it is successful.",2019-02-16 08:59:10,2019-02-16 08:59:10
https://api.github.com/repos/hyperledger/caliper/issues/313,https://api.github.com/repos/hyperledger/caliper/issues/comments/464320641,https://github.com/hyperledger/caliper/issues/313#issuecomment-464320641,aklenik,Can you look at the peer logs and chaincode container logs (retrieve them before they're removed by the peer)? ,2019-02-16 09:08:10,2019-02-16 09:08:10
https://api.github.com/repos/hyperledger/caliper/issues/313,https://api.github.com/repos/hyperledger/caliper/issues/comments/464324017,https://github.com/hyperledger/caliper/issues/313#issuecomment-464324017,CoreyLin,"@aklenik I set the maximum size of my docker container. Now it has already been rotated and overrided. I can't provide it.
I also don't have time to keep trying ""simple"" chaincode... I have to bypass it and try other chaincodes or develop chaincode by myself.
So it is up to you whether to close this issue or not. Thanks.",2019-02-16 09:29:29,2019-02-16 09:29:29
https://api.github.com/repos/hyperledger/caliper/issues/312,https://api.github.com/repos/hyperledger/caliper/issues/comments/464048897,https://github.com/hyperledger/caliper/issues/312#issuecomment-464048897,aklenik,"@CoreyLin The target chaincode is also referenced from the user callback module. Make sure you use a callback intended for the marbles, and not for the simple chaincode. ",2019-02-15 13:22:28,2019-02-15 13:22:28
https://api.github.com/repos/hyperledger/caliper/issues/312,https://api.github.com/repos/hyperledger/caliper/issues/comments/464269037,https://github.com/hyperledger/caliper/issues/312#issuecomment-464269037,CoreyLin,"@aklenik thanks. Can I understand like this:
If I want to use the chaincode developed by myself, I need to develop a callback js file accordingly?",2019-02-16 01:23:44,2019-02-16 01:23:44
https://api.github.com/repos/hyperledger/caliper/issues/312,https://api.github.com/repos/hyperledger/caliper/issues/comments/464317458,https://github.com/hyperledger/caliper/issues/312#issuecomment-464317458,aklenik,"@CoreyLin Yes, the callback module makes the actual calls to the chaincode (through Caliper and the Fabric adapter), and part of the call are the arguments specifying the target chaincode, function and arguments.

So the callback module must be supplied by the user, since it's your business logic, depending on your own chaincode API. ",2019-02-16 08:46:45,2019-02-16 08:46:45
https://api.github.com/repos/hyperledger/caliper/issues/312,https://api.github.com/repos/hyperledger/caliper/issues/comments/464318732,https://github.com/hyperledger/caliper/issues/312#issuecomment-464318732,CoreyLin,@aklenik Got it. Thanks very much.,2019-02-16 08:54:42,2019-02-16 08:54:42
https://api.github.com/repos/hyperledger/caliper/issues/309,https://api.github.com/repos/hyperledger/caliper/issues/comments/464002482,https://github.com/hyperledger/caliper/issues/309#issuecomment-464002482,aklenik,"@CoreyLin Technically, nothing. The `identities` property lists some identities of different MSPs in an array, so it's easier to reference them (with a 0-based index) in the `policy` section.

The actual policy expression (that needs to be satisfied by the collected endorsement signatures) are the same in both cases. And I don't just mean they're the same character-by-character, but the indices also reference the same identities (Org1MSP.member and Org2MSP.member).

NB: you see the first example on may sites because it shows the possibility of defining admin signature requirements. I think it was me who removed the admin role from the Caliper-provided example configurations because it wasn't referenced.",2019-02-15 11:05:50,2019-02-15 11:05:50
https://api.github.com/repos/hyperledger/caliper/issues/309,https://api.github.com/repos/hyperledger/caliper/issues/comments/464018936,https://github.com/hyperledger/caliper/issues/309#issuecomment-464018936,CoreyLin,"@aklenik Thanks very much. One furthur question: you mentioned that ""I think it was me who removed the admin role from the Caliper-provided example configurations because it wasn't referenced"". Does this mean that admin role is actually no use here, right?",2019-02-15 11:49:28,2019-02-15 11:49:28
https://api.github.com/repos/hyperledger/caliper/issues/309,https://api.github.com/repos/hyperledger/caliper/issues/comments/464036278,https://github.com/hyperledger/caliper/issues/309#issuecomment-464036278,aklenik,"@CoreyLin None of the example chaincodes requires it. It all depends on the certs and keys of the peers that sign the endorsements. You need to use the roles of those certs (SomeMSP.member includes the peer role I think, but I need to look into this).",2019-02-15 12:41:57,2019-02-15 12:41:57
https://api.github.com/repos/hyperledger/caliper/issues/309,https://api.github.com/repos/hyperledger/caliper/issues/comments/464036781,https://github.com/hyperledger/caliper/issues/309#issuecomment-464036781,CoreyLin,@aklenik Got it. Thanks very much.,2019-02-15 12:43:30,2019-02-15 12:43:30
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/463948856,https://github.com/hyperledger/caliper/issues/308#issuecomment-463948856,CoreyLin,"It seemed that the chaincode was successfully installed and instantiated, but in later test, it failed...",2019-02-15 08:20:34,2019-02-15 08:20:34
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/463954762,https://github.com/hyperledger/caliper/issues/308#issuecomment-463954762,houqinghui,"@CoreyLin  Because the client and the fabric network is delopyed in different machine, so in the client machine, there is no local docker. Please refer to the below:
Q: How do I run caliper to test fabric which is deployed in another machine?
A:  Caliper is indepentent of the backend blockchain network. You can follow the below steps.
1.	Deploy the backend network. First you should choose the fabric version in the directory /network, and then choose the network topoloy you want to test, last you can deploy the network by the docker-compose.
2.	In the machine of caliper, you should modify the `localhost` to the ip of the host of fabric in the network configuration. 
3.	Run the caliper.
Some tips is that you should modify tht property `deployed` of the `channel` from `false` to `true` in the network config file. You had better use the go version’s network configuration file.",2019-02-15 08:42:42,2019-02-15 08:42:42
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/463956325,https://github.com/hyperledger/caliper/issues/308#issuecomment-463956325,houqinghui,"@CoreyLin  How can i monitor the remote docker?  
A : If you need to access the Docker daemon remotely, you need to enable the `tcp` Socket. Beware that the default setup provides un-encrypted and un-anthenticated direct access to the Docker daemon.You can listen on port `2375` on all network interfaces with `-H tcp://0.0.0.0:2375`, or on a particular networ interface using its IP address: `-H tcp://192.169.59.103:2375`. The belows are what you would concern about.

a. You can add `-H tcp://0.0.0.0:2375` to the `ExecStart` in the `/lib/systemd/systemd/docker.service` file, for example `ExecStart=/usr/bin/dockerd -H tcp：//0.0.0.0:2357 -H unix:///var/run/docker.sock`. 
b. Restart the daemon with `systemctl daemon-reload`.
c. Restart the service `sudo service docker restart`.
d. Check if the port is open. You can run `netstat -nptl`, if not, you can run `sudo ufw allow port` to open it.",2019-02-15 08:48:21,2019-02-15 08:48:21
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/463960229,https://github.com/hyperledger/caliper/issues/308#issuecomment-463960229,CoreyLin,"Thanks, qinghui. So is there a Q&A link?",2019-02-15 09:01:53,2019-02-15 09:01:53
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/464010748,https://github.com/hyperledger/caliper/issues/308#issuecomment-464010748,CoreyLin,"Thanks qinghui, your instruction is very helpful. I did the following two things:
1.Enable docker remote port 2375 on fabric network servers. Instead of changing /lib/systemd/system/docker.service directly, I think the better way is: https://success.docker.com/article/how-do-i-enable-the-remote-api-for-dockerd
I tried it successfully.
2.In the benchmark config file, specify ""monitor"" like this:
![7ab415984bf4ede31a28e421b67d81a](https://user-images.githubusercontent.com/12689769/52853599-0a864c00-3157-11e9-8c0c-c01130cdcb13.png)

After that, I execute ""node benchmark/simple/main.js -c /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/config-linear-rate.yaml -n /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/fabric-node.json"" to run the test again.
This time, ""error: [monitor-docker.js]: monitor-docker: could not find active local container"" disappeared. It is fixed.

However, the other two ""Cannot read property"" errors still exist. The detailed log is below:
![a78bc1c15caebdb24887fdc3c009a17](https://user-images.githubusercontent.com/12689769/52853806-a31ccc00-3157-11e9-9338-435b97fbb235.png)
![1633ddf37dc9fd73709dde63ecbac80](https://user-images.githubusercontent.com/12689769/52853809-a57f2600-3157-11e9-8a3d-80d1fe6a883d.png)
![62221ca0987f5bb87ec094e5b51172d](https://user-images.githubusercontent.com/12689769/52853815-a87a1680-3157-11e9-9c66-5b101a30cdbb.png)

Could you please check this? Thank you!


",2019-02-15 11:27:30,2019-02-15 11:27:30
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/464014342,https://github.com/hyperledger/caliper/issues/308#issuecomment-464014342,aklenik,@CoreyLin You didn't specify CAs for the organizations. Guess this answers your question in #305 ,2019-02-15 11:36:39,2019-02-15 11:36:39
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/464016665,https://github.com/hyperledger/caliper/issues/308#issuecomment-464016665,CoreyLin,"@aklenik Thanks very much for your so quick reply. :blush: But in #305 , you mentioned that I can omit CA configuration. I didn't configure CA in my configuration file.
So how can this issue be solved?",2019-02-15 11:42:47,2019-02-15 11:42:47
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/464017249,https://github.com/hyperledger/caliper/issues/308#issuecomment-464017249,CoreyLin,"In current situation, is there any configuration which can solve this issue? I didn't setup CA. Instead, I used cryptogen. @aklenik ",2019-02-15 11:44:28,2019-02-15 11:44:28
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/464019459,https://github.com/hyperledger/caliper/issues/308#issuecomment-464019459,aklenik,"@CoreyLin Well, it's a bug, that needs to be fixed in the adapter. 
In the meantime, you could comment out [these](https://github.com/hyperledger/caliper/blob/master/src/adapters/fabric/e2eUtils.js#L695-L700) lines of the adapter since it's causing the problem. ",2019-02-15 11:50:50,2019-02-15 11:50:50
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/464020278,https://github.com/hyperledger/caliper/issues/308#issuecomment-464020278,CoreyLin,"@aklenik OK, thanks! :thumbsup: I will comment out the lines mentioned by you, and run the test again. ",2019-02-15 11:53:10,2019-02-15 11:53:10
https://api.github.com/repos/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/comments/464024230,https://github.com/hyperledger/caliper/issues/308#issuecomment-464024230,CoreyLin,"@aklenik After commenting out the lines mentioned by you, the ""Cannot read property"" issue is fixed. I will close this issue. Thanks for your helpful instruction.",2019-02-15 12:05:19,2019-02-15 12:05:19
https://api.github.com/repos/hyperledger/caliper/issues/307,https://api.github.com/repos/hyperledger/caliper/issues/comments/464025600,https://github.com/hyperledger/caliper/issues/307#issuecomment-464025600,aklenik,"@unknown7788 
1. I'm not sure, whether Caliper seamlessly supports Fabric 1.4 right now (multiple PRs are on the way to address it). Plus you're using 1.4 SDK with a 1.1 network, bad idea. To install the 1.1 SDK, run `npm run fabric-v1.1-deps` in the root directory of Caliper.
2. The error indicates that you can't connect to the Fabric nodes. Since it's a local network, address/port/firewall stuff shouldn't be an issue. Check whether the containers started successfully with `docker logs <container name>`. 
",2019-02-15 12:09:32,2019-02-15 12:09:32
https://api.github.com/repos/hyperledger/caliper/issues/307,https://api.github.com/repos/hyperledger/caliper/issues/comments/467339938,https://github.com/hyperledger/caliper/issues/307#issuecomment-467339938,feihujiang,@unknown7788 Did you resolve your error?,2019-02-26 08:14:07,2019-02-26 08:14:07
https://api.github.com/repos/hyperledger/caliper/issues/306,https://api.github.com/repos/hyperledger/caliper/issues/comments/463934168,https://github.com/hyperledger/caliper/issues/306#issuecomment-463934168,CoreyLin,"@houqinghui qinghui, could you help? Thanks.",2019-02-15 07:18:24,2019-02-15 07:18:24
https://api.github.com/repos/hyperledger/caliper/issues/306,https://api.github.com/repos/hyperledger/caliper/issues/comments/463936267,https://github.com/hyperledger/caliper/issues/306#issuecomment-463936267,CoreyLin,"I noticed that even though the benchmark test failed, ""marbles"" chaincode was actually successfully instantiated in the peer:
![67cd54b00b2e65d533b5a6b425e2c8e](https://user-images.githubusercontent.com/12689769/52840998-fa11a980-3135-11e9-9355-8279937c6826.png)

So I am curious that why the error log also shows ""warn: [e2eUtils.js]: instantiate proposal was bad: Error: REQUEST_TIMEOUT""?

Besides, I noticed that in default ""config-linear-rate.yaml"", actually two chaincodes are configured:
1.marbles
2.simple
So I wonder whether the error log means that ""simple"" chaincode was not successfully instantiated?",2019-02-15 07:28:09,2019-02-15 07:28:09
https://api.github.com/repos/hyperledger/caliper/issues/306,https://api.github.com/repos/hyperledger/caliper/issues/comments/463937615,https://github.com/hyperledger/caliper/issues/306#issuecomment-463937615,CoreyLin,"And I checked the docker container. Both ""marbles"" and ""simple"" chaincodes' containers are started and running:
![bdafe153df599c442c3faa4961008bf](https://user-images.githubusercontent.com/12689769/52841355-0fd39e80-3137-11e9-8473-d0e400e78dbf.png)
Does docker container running means the instantiation of chaincodes is successful? Thanks.",2019-02-15 07:34:20,2019-02-15 07:34:20
https://api.github.com/repos/hyperledger/caliper/issues/306,https://api.github.com/repos/hyperledger/caliper/issues/comments/463943206,https://github.com/hyperledger/caliper/issues/306#issuecomment-463943206,CoreyLin,"After I remove ""simple"" chaincode from network config file, the issue disappeared. It seems that the instantiation of ""marbles"" chaincode was successful. But another error happened. And I will create another issue to track the new error. I will close this issue now.",2019-02-15 07:57:56,2019-02-15 07:57:56
https://api.github.com/repos/hyperledger/caliper/issues/305,https://api.github.com/repos/hyperledger/caliper/issues/comments/464003836,https://github.com/hyperledger/caliper/issues/305#issuecomment-464003836,aklenik,"@CoreyLin You are absolutely right, you don't need a CA if you don't use its services. Please run a test without the CAs, and let me know the result :)

(The new Fabric adapter #296 allows you to dynamically register and enroll users, so the CA could play a role in your tests, but it's optional, of course.)",2019-02-15 11:09:32,2019-02-15 11:09:32
https://api.github.com/repos/hyperledger/caliper/issues/305,https://api.github.com/repos/hyperledger/caliper/issues/comments/464026250,https://github.com/hyperledger/caliper/issues/305#issuecomment-464026250,aklenik,"Submitted #311 , so closing this related issue.",2019-02-15 12:11:36,2019-02-15 12:11:36
https://api.github.com/repos/hyperledger/caliper/issues/304,https://api.github.com/repos/hyperledger/caliper/issues/comments/464030354,https://github.com/hyperledger/caliper/issues/304#issuecomment-464030354,aklenik,"@jmj119 Based on the [documentation](https://hyperledger.github.io/caliper/docs/Zookeeper_Client_Design.html), I would check the following things (although I'm not familiar with this feature of Caliper yet):
1. The Zoo clients are started on the remote machines
2. The master (where you start the test) is [properly configured](https://github.com/hyperledger/caliper/blob/master/benchmark/simple/config-zookeeper.yaml) and can access these addresses and ports.",2019-02-15 12:24:21,2019-02-15 12:24:21
https://api.github.com/repos/hyperledger/caliper/issues/304,https://api.github.com/repos/hyperledger/caliper/issues/comments/469416674,https://github.com/hyperledger/caliper/issues/304#issuecomment-469416674,aklenik,@jmj119 Did you resolve the errors?,2019-03-04 20:51:18,2019-03-04 20:51:18
https://api.github.com/repos/hyperledger/caliper/issues/304,https://api.github.com/repos/hyperledger/caliper/issues/comments/478375511,https://github.com/hyperledger/caliper/issues/304#issuecomment-478375511,robiharid,"> @jmj119 Based on the [documentation](https://hyperledger.github.io/caliper/docs/Zookeeper_Client_Design.html), I would check the following things (although I'm not familiar with this feature of Caliper yet):
> 
> 1. The Zoo clients are started on the remote machines
> 2. The master (where you start the test) is [properly configured](https://github.com/hyperledger/caliper/blob/master/benchmark/simple/config-zookeeper.yaml) and can access these addresses and ports.

I run in the same problem. I am using Azure VMs to deploy Caliper over a network. 

How do I start zoo client in one of my other Azure VMs? Install Zookeeper, but what should the config file look like before I run the bin/zkServer.sh start script? Do the clients need hyperledger caliper installed on their machines?

Modifiying the config-zookeeper.yaml do I change the server IP to localhost:2181, how does it know how to connect to the zookeeper clients on my other Azure VMs?

Thanks Attilla!",2019-03-31 19:59:28,2019-03-31 19:59:28
https://api.github.com/repos/hyperledger/caliper/issues/302,https://api.github.com/repos/hyperledger/caliper/issues/comments/463083059,https://github.com/hyperledger/caliper/issues/302#issuecomment-463083059,CoreyLin,"After step 1~4, I executed ""node benchmark/simple/main.js"", and it failed.
Then I installed grpc,fabric-client,fabric-ca-client manually by the following command:
npm install grpc@1.10.1 --unsafe-perm
npm install fabric-ca-client@1.1.0 --unsafe-perm
npm install fabric-client@1.1.0 --unsafe-perm

And then execute ""node benchmark/simple/main.js"" again. This time, the test is successful, and the test report is generated successfully.
![1](https://user-images.githubusercontent.com/12689769/52692824-f0eed400-2f9f-11e9-926b-03434aa754cd.png)

So this result demonstrated that command ""npm run fabric-v1.1-deps"" actually didn't install grpc,fabric-client,fabric-ca-client successfully. And there is not any error log.",2019-02-13 07:01:05,2019-02-13 07:01:05
https://api.github.com/repos/hyperledger/caliper/issues/302,https://api.github.com/repos/hyperledger/caliper/issues/comments/463083157,https://github.com/hyperledger/caliper/issues/302#issuecomment-463083157,aklenik,"@CoreyLin The `npm run` script uses the `--no-save` flag, so the packages are not added to the `package.json` file. Probably that's why the `npm ls` command doesn't pick them up. 

But if you execute `ls node_modules/ | grep fabric` then you should see the packages.",2019-02-13 07:01:31,2019-02-13 07:01:31
https://api.github.com/repos/hyperledger/caliper/issues/302,https://api.github.com/repos/hyperledger/caliper/issues/comments/463085132,https://github.com/hyperledger/caliper/issues/302#issuecomment-463085132,CoreyLin,"@aklenik Got it. Thanks. But why ""--no-save"" flag is used here? In this way, the grpc,fabric-client,fabric-ca-client are not installed. This will directly lead to testing failure.",2019-02-13 07:10:40,2019-02-13 07:10:40
https://api.github.com/repos/hyperledger/caliper/issues/302,https://api.github.com/repos/hyperledger/caliper/issues/comments/463085663,https://github.com/hyperledger/caliper/issues/302#issuecomment-463085663,CoreyLin,"Indeed, the npm install documentation shows that:
--no-save: Prevents saving to dependencies.

But this would require caliper user to manually install grpc,fabric-client,fabric-ca-client. It seems not so reasonable.",2019-02-13 07:13:14,2019-02-13 07:13:14
https://api.github.com/repos/hyperledger/caliper/issues/302,https://api.github.com/repos/hyperledger/caliper/issues/comments/463088165,https://github.com/hyperledger/caliper/issues/302#issuecomment-463088165,aklenik,"Don't forget that Caliper supports multiple blockchain platforms. Installing every dependency of every platform SDK would be confusing/wasteful for the users. So Caliper has some core dependencies (needed by the core code-base) added to the `package.json` and has scripts to install Fabric/Sawtooth/Burrow-specific dependencies. 

The `--no-save` flag is used in these scripts, so they're not added to the `package.json` file after install and we won't commit/push them accidentally :) 

But they're installed and are available during the execution of Caliper.
(N.B. I also don't like this solution, but couldn't come up with a better yet.)",2019-02-13 07:23:44,2019-02-13 07:23:44
https://api.github.com/repos/hyperledger/caliper/issues/302,https://api.github.com/repos/hyperledger/caliper/issues/comments/463092131,https://github.com/hyperledger/caliper/issues/302#issuecomment-463092131,CoreyLin,"OK, I can understand the design thought. The dependencies are categorized to two types: 1.core 2.platform specific. I think it is good.

However, you mentioned ""But they're installed and are available during the execution of Caliper."". At least in my server it doesn't work, unless I manually install grpc,fabric-client,fabric-ca-client again...

So maybe in the documentation, this additional manual installation steps should be mentioned so that other users can prevent encountering such problem...",2019-02-13 07:39:51,2019-02-13 07:39:51
https://api.github.com/repos/hyperledger/caliper/issues/302,https://api.github.com/repos/hyperledger/caliper/issues/comments/463178012,https://github.com/hyperledger/caliper/issues/302#issuecomment-463178012,aklenik,"The [Pre-requisites](https://hyperledger.github.io/caliper/docs/1_Getting_Started.html#install-blockchain-sdks) section states that the additional blockchain SDKs must also be installed, and the platform-specific doc sites detail this install.

So for Fabric, the setup is the following:
```
git clone https://github.com/hyperledger/caliper.git
cd caliper
npm i
npm run fabric-v1.2-deps
```

If these steps work for you, then this issue can be closed.
(The issue of easy install is another question of course :) )",2019-02-13 12:16:16,2019-02-13 12:16:48
https://api.github.com/repos/hyperledger/caliper/issues/302,https://api.github.com/repos/hyperledger/caliper/issues/comments/463179485,https://github.com/hyperledger/caliper/issues/302#issuecomment-463179485,CoreyLin,"OK, thanks very much. I will close this issue.",2019-02-13 12:21:32,2019-02-13 12:21:32
https://api.github.com/repos/hyperledger/caliper/issues/301,https://api.github.com/repos/hyperledger/caliper/issues/comments/463021171,https://github.com/hyperledger/caliper/issues/301#issuecomment-463021171,houqinghui,"@CoreyLin  You should run the command `npm install ` to install all the dependencies. 
",2019-02-13 01:49:57,2019-02-13 01:49:57
https://api.github.com/repos/hyperledger/caliper/issues/301,https://api.github.com/repos/hyperledger/caliper/issues/comments/463024776,https://github.com/hyperledger/caliper/issues/301#issuecomment-463024776,CoreyLin,"Yes, it is my negligence. After I ran command ""npm install"", the error disappeared.
Thanks very much for your strong support! 🙂 @houqinghui ",2019-02-13 02:06:14,2019-02-13 02:06:14
https://api.github.com/repos/hyperledger/caliper/issues/300,https://api.github.com/repos/hyperledger/caliper/issues/comments/463014815,https://github.com/hyperledger/caliper/issues/300#issuecomment-463014815,houqinghui,"Can you check the version of fabric-client and fabric-ca-client that have been installed? 
The command shows that you want to use fabric v1.1.",2019-02-13 01:22:05,2019-02-13 01:22:44
https://api.github.com/repos/hyperledger/caliper/issues/300,https://api.github.com/repos/hyperledger/caliper/issues/comments/463039984,https://github.com/hyperledger/caliper/issues/300#issuecomment-463039984,feihujiang,"@jmj119 this file mode only supports fabric v1.1 and fabric v1.2.  When using this file mode, please rename the file `src/adapters/fabric/ChannelSignedTransaction.js`  with `Channel.js`  and then replace 
 the original file `node_modules/fabric-client/lib/Channel.js` with the new file `Channel.js`. Please note that it would be better to backup your original file `Channel.js`.",2019-02-13 03:15:10,2019-02-13 03:15:10
https://api.github.com/repos/hyperledger/caliper/issues/300,https://api.github.com/repos/hyperledger/caliper/issues/comments/463040498,https://github.com/hyperledger/caliper/issues/300#issuecomment-463040498,feihujiang,Since Fabric client does not support the function generateSignedTransaction/sendSignedTransaction in the versions 1.1 and 1.2.,2019-02-13 03:17:53,2019-02-13 03:17:53
https://api.github.com/repos/hyperledger/caliper/issues/300,https://api.github.com/repos/hyperledger/caliper/issues/comments/463898418,https://github.com/hyperledger/caliper/issues/300#issuecomment-463898418,jmj119,"@feihujiang Copying the file works! Thanks all for the comments and help!
",2019-02-15 04:04:45,2019-02-15 04:04:45
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/463863258,https://github.com/hyperledger/caliper/issues/299#issuecomment-463863258,houqinghui,"@shiningfrog  The `orderer.yaml` file is the configuration that is processed when the `orderer` node/binary is started. Caliper doesn't care about the topology of the ordering service, it just needs an orderer endpoint (currently only one endpoint is supported) to submit transactions to.

You can either modify the yaml file **before** starting the orderer node (not that simple with prebuilt docker images), or you can modify every setting available in that file through environment variables, which can be easily set in a `docker-compose` file.

For example, if the yaml has the setting `General.GenesisFile`, then you can insert the following line into the `environment` section of your compose file, under the orderer container:
`- ORDERER_GENERAL_GENESISFILE=/path/to/your/genesisfile`, like [here](https://github.com/hyperledger/caliper/blob/1fe8ba5bc3b5e9c9d9c5f0c905b2db487be3f1b7/network/fabric/2-org-1-peer/docker-compose-tls.yaml#L47).

Basically the rule is the following: for the orderer, prepend every environment variable with `ORDERER_`, and for every hierarchy in the setting, change the `.` to `_`, plus use capital letters.",2019-02-15 00:48:42,2019-02-15 00:48:42
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/463936188,https://github.com/hyperledger/caliper/issues/299#issuecomment-463936188,shiningfrog,"thank you. By the way, is there any plan to support multi endpoint in caliper design? @houqinghui ",2019-02-15 07:27:46,2019-02-15 07:27:46
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/464031477,https://github.com/hyperledger/caliper/issues/299#issuecomment-464031477,aklenik,"@shiningfrog Pr #296 adds a new Fabric adapter, that supports multiple orderer (and of course peer) endpoints. It's not merged yet, so any feedback is welcome!",2019-02-15 12:27:46,2019-02-15 12:27:46
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/465487047,https://github.com/hyperledger/caliper/issues/299#issuecomment-465487047,quangtdn,"Hi there, I am trying to run Caliper in Distributed Clients (to test the Kafka mode if possible). 
According to the Caliper docs and my understanding, you first have to connect the client to the Zookeeper server and then run:
node benchmark/simple/main.js -c config-zookeeper.yaml -n XX-distributed-network.json

config-zookeeper.yaml is already provided in Caliper, but no blockchain network config file is provided to test the distributed clients. 
In case we don't specify XX-distributed-network.json, the program will use some XX.json in network/fabricv1.2/ directories to create a network instead of connecting to our Zookeeper network. 

Could you please provide instructions on how to test the distributed-clients mode, or a sample XX-distributed-network.json file? I know that testing distributed clients is still under the flag ""experimental"". Thank you very much!",2019-02-20 09:05:25,2019-02-20 09:05:25
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/465534785,https://github.com/hyperledger/caliper/issues/299#issuecomment-465534785,aklenik,"@quangtdn The distributed client mode of Caliper makes it possible to generate the workload from multiple machines. This is configured by the `config-zookeeper.yaml` file (or something similar to suit your needs). This config file defines the workload part of Caliper, which is dependent on Zookeeper in this case.

On the other hand, the other config file - the network descriptor - details the layout and endpoints of the backend blockchain network. It is independent of the workload generator mode of Caliper and that's why you won't find a zookeeper-specific network configuration file (not to be confused with a Zookeeper-based ordering service in Fabric, which is also transparent to Caliper, by the way). 

So use any example network config file you want that describes your backend network.",2019-02-20 11:22:59,2019-02-20 11:22:59
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/465659949,https://github.com/hyperledger/caliper/issues/299#issuecomment-465659949,quangtdn,"Thank you @aklenik . May I ask some more specific questions? 
1) I am a bit confused with the Zookeeper service here vs Zookeeper-based ordering service in Fabric. As I understand now, Zookeeper in Caliper is used only to connect the ZK clients and for the master node to distribute the workload to other ZK clients, and thus has nothing to do with Zookeeper-based Fabric. Please correct me if I am wrong. 

2) For example, now using 2 separate machines (namely PC1, PC2) I can bring up a network with 2 organizations, where each organization has 1 peers, and one solo orderer. This is actually the 2org1peer blockchain config in Caliper.
PC1 has: orderer, org1, org1.peer1
PC2 has: org2, org2.peer1

Now I want to test this network using 2 clients on PC3 and PC4 via Caliper. So these 2 clients should share the same config-zookeeper.yaml (modified by me) and 2org1peer.json . Then I can take the 2org1peer.json from Caliper with the following modifications:
- Remove the 2 commands that bring up and down the local fabric network.
- Change the port endpoints of the orderer, 2 orgs, and 2 peers to that of the above network. (Such variables that represent the endpoints are ""url"", ""requests"" (in peer), and ""events"" (in peer))
Is what I think here correct or sufficient?

Thank you much again. I am quite new to this and really have some confusion here.

",2019-02-20 16:46:36,2019-02-20 16:46:36
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/465802329,https://github.com/hyperledger/caliper/issues/299#issuecomment-465802329,aklenik,"@quangtdn This will be a little long, but hopefully useful. 

1) [Zookeeper](https://zookeeper.apache.org/) - as a high-level service - provides a decentralized/group synchronization mechanism. It enables a crash fault tolerant operation for a service by employing multiple nodes. Fabric uses it in it's ordering service to avoid a single point of failure during the consensus (like the solo ordering service - the only node crashes and the network is unusable). Caliper uses Zookeeper for managing the (remote) client processes that generate the workload. Crash fault tolerance is not necessarily an important requirement here, Caliper could use any remote messaging/synchronization service. So these are different features of different projects relying on the same technology.

2) Caliper doesn't care about how your network is distributed. It only needs the endpoint addresses of your network (where the orderers, peers, and CAs are available). As long as a node is reachable through its address, you can deploy it anywhere. 

_General advice._
Node.js is a single threaded environment. You may have async patterns, but it's not really parallel, it's more like concurrent execution. If you want to generate a high-rate workload, you need to take this limitation into account. Caliper uses the configured rate controller to schedule transaction invocations. If you want to generate a 100 TPS workload with a single client (Node.js process), the rate controller needs to enable a transaction in every 10ms. Or every 1ms for a 1000 TPS workload. A single threaded execution can reach this limit rather quickly. Hence the following design.

Caliper spawns _multiple client processes_ that distribute the specified workload among each other. Since the execution of a transaction consists mostly of waiting for network responses (so it's not really a CPU intensive task), you can use (for example) 5-6 times as many local client processes as logical CPU cores you have. 

As a general advice, I wouldn't go above 100 TPS with a single client (but 70 TPS maybe a safer bet). So if you have a 16-core CPU, it should be able to handle about 50 clients, i.e., generating a 5000 TPS workload (but you should perform your own experiments/measurements). But you might reach the limit even of a strong CPU. That's when you use multiple machines to distribute the workload on the first level, then on each machine you use multiple local client processes to distribute the workload on a second (local) level.

My advice: you already have enough complications by testing a distributed Fabric network. Only use the distributed workload generation feature of Caliper, if you can't provide a single machine strong enough to handle the workload generation. Nowadays you can get pretty strong VMs at a good price from any IaaS providers that can handle high-rate workload generation. But if you want a _really_ high rate workload, then you will need multiple stronger VMs.",2019-02-20 23:49:40,2019-02-20 23:49:40
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/465852760,https://github.com/hyperledger/caliper/issues/299#issuecomment-465852760,quangtdn,"Hi @aklenik . Your clarifications and general advice are indeed really useful. It's also good to know the limit for generating workload in general, as I am doing some benchmarking on Hyperledger Fabric. Thank you!",2019-02-21 03:56:59,2019-02-21 03:56:59
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/468627925,https://github.com/hyperledger/caliper/issues/299#issuecomment-468627925,aklenik,@shiningfrog Did you manage to run your tests successfully? ,2019-03-01 10:59:41,2019-03-01 10:59:41
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/468999854,https://github.com/hyperledger/caliper/issues/299#issuecomment-468999854,shiningfrog,"hello, thanks, it worked. but if i can't repeat the test on the same chain. i have to rebuild a chian network. and the tps is about 20. i wonder if the transfer balance worked? how can i improve the tps? now all the docker files are allocated in one computer. @aklenik ",2019-03-03 08:17:27,2019-03-03 08:17:27
https://api.github.com/repos/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/comments/469412675,https://github.com/hyperledger/caliper/issues/299#issuecomment-469412675,aklenik,"@shiningfrog Running Caliper with a local network is mainly for development and testing purposes (test chaincode, client module or new Caliper feature implementations). A production Fabric network will be distributed among multiple machines (belonging to multiple organizations). So if you want higher TPS, you need to experiment with your Fabric topology: the number of endorsers, ordering service configurations, etc. 

BTW, the Fabric adapter I suggested has been merged into the master branch, so you can now use the official Caliper repo :)

Since the Kafka orderer service issue is resolved, I'm closing this issue.",2019-03-04 20:38:53,2019-03-04 20:38:53
https://api.github.com/repos/hyperledger/caliper/issues/298,https://api.github.com/repos/hyperledger/caliper/issues/comments/466830451,https://github.com/hyperledger/caliper/issues/298#issuecomment-466830451,amiecorso,"With some help from researchers at National University Singapore, I realized that calculating the stale block rate can be done by finding 1) all the *valid* blocks that any validator has seen and 2) all the blocks that ended up on the main chain.  Simple scripting can be done to comb the docker container logs for all validators, extracting the valid blocks seen by all nodes and placing them in a set, and then comparing the size of this set to the size of the main chain.  This is currently a layer that is operating outside of Caliper functionality in my workflow.  It seems that to build it into Caliper, which has to accommodate back-end systems that may or may not be running on docker containers, one may need to subscribe to validator events.",2019-02-24 23:40:42,2019-02-24 23:40:42
https://api.github.com/repos/hyperledger/caliper/issues/298,https://api.github.com/repos/hyperledger/caliper/issues/comments/467349738,https://github.com/hyperledger/caliper/issues/298#issuecomment-467349738,feihujiang,"1) How could we make the stale block occur?  how many  validators does the sawtooth blockchain need, how long should we test, and other condition?  2) What's the main chain, how to define the main chain? 3) To the sawtooth, Caliper only tests the docker mode. 4) need to subscribe all of the validators events or just one of validators?",2019-02-26 08:46:01,2019-02-26 08:46:01
https://api.github.com/repos/hyperledger/caliper/issues/297,https://api.github.com/repos/hyperledger/caliper/issues/comments/463176197,https://github.com/hyperledger/caliper/pull/297#issuecomment-463176197,aklenik,EDIT: added a link to the new docs page in the Getting started page,2019-02-13 12:09:47,2019-02-13 12:09:47
https://api.github.com/repos/hyperledger/caliper/issues/297,https://api.github.com/repos/hyperledger/caliper/issues/comments/468683505,https://github.com/hyperledger/caliper/pull/297#issuecomment-468683505,aklenik,EDIT2: updated docs to reflect [this thread](https://github.com/hyperledger/caliper/pull/296#discussion_r259750615),2019-03-01 14:31:44,2019-03-01 14:31:44
https://api.github.com/repos/hyperledger/caliper/issues/296,https://api.github.com/repos/hyperledger/caliper/issues/comments/462410618,https://github.com/hyperledger/caliper/pull/296#issuecomment-462410618,aklenik,"EDIT: I forgot to extend the `src/comm/transaction.js` class with the functions used by the adapter.
EDIT2: some Map access and config loading was corrected (minor changes)",2019-02-11 17:11:11,2019-02-18 12:54:27
https://api.github.com/repos/hyperledger/caliper/issues/296,https://api.github.com/repos/hyperledger/caliper/issues/comments/465544850,https://github.com/hyperledger/caliper/pull/296#issuecomment-465544850,aklenik,"@panyu4 Fixed. Checked with the following commands (from the network dir):

`grep -Ril ""goleveldb"" . --include=fabric-ccp*.yaml`  
(only `*goleveldb`, `dev` and `customdomain` folders should be listed)

`grep -Ril ""couchdb"" . --include=fabric-ccp*.yaml` 
(only `*couchdb` folders should be listed)",2019-02-20 11:56:49,2019-02-20 11:56:49
https://api.github.com/repos/hyperledger/caliper/issues/296,https://api.github.com/repos/hyperledger/caliper/issues/comments/466951402,https://github.com/hyperledger/caliper/pull/296#issuecomment-466951402,feihujiang,"@nklincoln , could you please review this pr and give some advice?",2019-02-25 10:05:00,2019-02-25 10:05:00
https://api.github.com/repos/hyperledger/caliper/issues/296,https://api.github.com/repos/hyperledger/caliper/issues/comments/468676607,https://github.com/hyperledger/caliper/pull/296#issuecomment-468676607,aklenik,"@feihujiang I've added the contract ID feature, so the API for invoking a tx is the same as before (with default invoker value, so that also disappeared from the benchmarks). The only decision point is now for the arg of the invoke, which we can't really avoid for now. The older query API is a little rigid, I kept it consistent with the invoke API in this adapter.

I'm updating the docs PR now.

Note: there was some conflict in package.json, so the PR now contains an additional merge commit that I can't seem to squash... ",2019-03-01 14:09:42,2019-03-01 14:10:53
https://api.github.com/repos/hyperledger/caliper/issues/292,https://api.github.com/repos/hyperledger/caliper/issues/comments/460017914,https://github.com/hyperledger/caliper/issues/292#issuecomment-460017914,houqinghui,"@lenoAlex  The endorsement-policy defines the endorsement policy for all the chaincodes. Currently, only one policy can be defined and the policy is applied to all chaincodes. You can refer to https://hyperledger.github.io/caliper/docs/Fabric_Configuration.html and https://hyperledger-fabric.readthedocs.io/en/release-1.3/endorsement-policies.html
",2019-02-03 02:42:51,2019-02-03 02:42:51
https://api.github.com/repos/hyperledger/caliper/issues/292,https://api.github.com/repos/hyperledger/caliper/issues/comments/462257364,https://github.com/hyperledger/caliper/issues/292#issuecomment-462257364,feihujiang,"As the fabric documentation says ""if no single peer is preferable based on the criteria, the fabric client SDK will randomly select from the peers that best meet the criteria"", so Caliper now uses random peers ( one peer per organization ) as endorsers as default. Here is [the related fabric documentation's link](https://hyperledger-fabric.readthedocs.io/en/release-1.4/discovery-overview.html#how-service-discovery-works-in-fabric).",2019-02-11 09:05:50,2019-02-11 09:05:50
https://api.github.com/repos/hyperledger/caliper/issues/292,https://api.github.com/repos/hyperledger/caliper/issues/comments/463046185,https://github.com/hyperledger/caliper/issues/292#issuecomment-463046185,lenoAlex,"@houqinghui @feihujiang if caliper can use peer which is specified by users and configurable to endorse, that could be better, i think.",2019-02-13 03:48:33,2019-02-13 03:48:33
https://api.github.com/repos/hyperledger/caliper/issues/292,https://api.github.com/repos/hyperledger/caliper/issues/comments/463500491,https://github.com/hyperledger/caliper/issues/292#issuecomment-463500491,feihujiang,"@lenoAlex In Caliper latest version, target peers are chosen using `peers[clientIdx % peers.length]` which would cycle the client connections through the available peers . #255",2019-02-14 05:55:45,2019-02-14 05:55:45
https://api.github.com/repos/hyperledger/caliper/issues/292,https://api.github.com/repos/hyperledger/caliper/issues/comments/463894814,https://github.com/hyperledger/caliper/issues/292#issuecomment-463894814,lenoAlex,"@feihujiang as far as I known, caliper uses interface ""sendTransactionProposal(request, timeout)"" of SDK to send  request of endorsement. And the arg, ""targets"" , of the struct , ""ChaincodeInvokeRequest"",  specifies a peer to endorse.",2019-02-15 03:41:12,2019-02-15 03:41:12
https://api.github.com/repos/hyperledger/caliper/issues/292,https://api.github.com/repos/hyperledger/caliper/issues/comments/464006010,https://github.com/hyperledger/caliper/issues/292#issuecomment-464006010,aklenik,"@lenoAlex The `fabric` adapter in Caliper uses an automatic client process-based load balancing between the possible peers of an organization. You have the following options:

1. If you don't want a peer to endorse transactions, just leave it out of the configuration file. Con: it will never endorse since Caliper can't ""see"" it.
1. If you add a peer to the configuration, it will be part of the automatic load balancing between peers. Con: you can't affect the targets.
1. Check out the new `fabric-ccp` adapter #296 that allows the user callback to specify the target endorsers explicitly on a per-transactions basis. If not specified, then a (configurable) client- or transaction-based load balancing is used. ",2019-02-15 11:15:29,2019-02-15 11:16:12
https://api.github.com/repos/hyperledger/caliper/issues/292,https://api.github.com/repos/hyperledger/caliper/issues/comments/465411366,https://github.com/hyperledger/caliper/issues/292#issuecomment-465411366,lenoAlex,"@aklenik ， I got it, thank you.",2019-02-20 03:52:32,2019-02-20 03:52:32
https://api.github.com/repos/hyperledger/caliper/issues/291,https://api.github.com/repos/hyperledger/caliper/issues/comments/463567726,https://github.com/hyperledger/caliper/pull/291#issuecomment-463567726,feihujiang,"## Exist Issues
#110",2019-02-14 10:03:25,2019-02-14 10:03:25
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/456623107,https://github.com/hyperledger/caliper/pull/290#issuecomment-456623107,houqinghui,"@Ram-srini hi, You  have one commit incorrectly signed off! To fix, head to your local branch and run: `git commit --amend --signoff`,and then `git push --force origin fabric_1_4`",2019-01-23 00:49:46,2019-01-23 00:49:46
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/456652042,https://github.com/hyperledger/caliper/pull/290#issuecomment-456652042,Ram-srini,Done. Updated the signed message properly,2019-01-23 03:06:40,2019-01-23 03:06:40
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/457032946,https://github.com/hyperledger/caliper/pull/290#issuecomment-457032946,houqinghui,"
@Ram-srini  But it shows that you still have one commit incorrectly signed off. are you sure that you do it correctly? ",2019-01-24 01:35:19,2019-01-24 01:35:19
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/457125165,https://github.com/hyperledger/caliper/pull/290#issuecomment-457125165,Ram-srini,"I made changes and pushed to changes with sign off info
",2019-01-24 09:21:52,2019-01-24 09:21:52
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/457420718,https://github.com/hyperledger/caliper/pull/290#issuecomment-457420718,Ram-srini,@houqinghui I have missed the author details in the commit. I have corrected that now. Please review the changes.,2019-01-25 01:19:47,2019-01-25 01:19:47
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/459322899,https://github.com/hyperledger/caliper/pull/290#issuecomment-459322899,panyu4,"@Ram-srini . Thanks for your contribution. Here are two issues that need to be modified:
1. Since the file `fabric-ca-client/lib/FabricCAClientImpl.js`only exists in the fabric 1.1 and 1.2, it would be better remove the code `const copService = require('fabric-ca-client/lib/FabricCAClientImpl.js');` which is in the file `src/adapters/fabric/util.js` to the getMember function now. Later, we will add version information to handle it.
2. When the network configuration file `network/fabric-v1.4/customdomain/fabric-go.json` was used to test,  the program got an error.",2019-01-31 12:15:09,2019-01-31 12:15:09
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/460037053,https://github.com/hyperledger/caliper/pull/290#issuecomment-460037053,panyu4,"> @Ram-srini . Thanks for your contribution. Here are two issues that need to be modified:
> 
> 1. Since the file `fabric-ca-client/lib/FabricCAClientImpl.js`only exists in the fabric 1.1 and 1.2, it would be better remove the code `const copService = require('fabric-ca-client/lib/FabricCAClientImpl.js');` which is in the file `src/adapters/fabric/util.js` to the getMember function now. Later, we will add version information to handle it.
> 2. When the network configuration file `network/fabric-v1.4/customdomain/fabric-go.json` was used to test,  the program got an error.

@Ram-srini Since we just merge new PR that supports fabric v1.4, the above first issue has been resolved. And there are some conflicts need to be resolved. I also left some comments under your code.",2019-02-03 09:39:25,2019-02-03 09:39:25
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/463525857,https://github.com/hyperledger/caliper/pull/290#issuecomment-463525857,panyu4,"@Ram-srini , when testing with cusotmdomain's network files, I got  a ""create channel "" error, and the orderer docker container showed the following error information : "" [orderer.common.broadcast] ProcessMessage -> WARN 007 [channel: mychannel] Rejecting broadcast of config message from 172.21.0.1:54918 because of error: error authorizing update: error validating ReadSet: existing config does not contain element for [Group]  /Channel/Application but was in the read set"".",2019-02-14 07:45:14,2019-02-14 07:45:14
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/464044248,https://github.com/hyperledger/caliper/pull/290#issuecomment-464044248,aklenik,"@Ram-srini @panyu4 Also faced this error a few days ago. When generating the genesis block with `configtxgen`, I also supplied the `-channelID` parameter. After inspecting the JSON version of the genesis block (it was fun), it turns out, that the genesis block contains some default channel description, which was named `mychannel` because of my parameter. If you don't pass the parameter, this default channel will be named something like `testchainid`, and your `mychannel` create request won't conflict with it :)

So make sure you generate the artifacts like this (use whatever name the example configs are using):

`configtxgen -profile SampleGenesis -outputBlock genesis.block` 
`configtxgen -profile SampleChannel -outputCreateChannelTx mychannel.tx -channelID mychannel`",2019-02-15 13:06:15,2019-02-15 13:06:15
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/464836519,https://github.com/hyperledger/caliper/pull/290#issuecomment-464836519,feihujiang,"@Ram-srini The comment of @aklenik is right. In the ```network/fabric-v1.4/customdomain/generate.sh``` file , replacing ```/home/fabric/fabric-samples/bin/configtxgen -profile TwoOrgsOrdererGenesis -outputBlock twoorgs.genesis.block -channelID mychannel``` with ```/home/fabric/fabric-samples/bin/configtxgen -profile TwoOrgsOrdererGenesis -outputBlock twoorgs.genesis.block``` could fix the error @panyu4 mentioned.",2019-02-18 18:28:51,2019-02-18 18:28:51
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/465002686,https://github.com/hyperledger/caliper/pull/290#issuecomment-465002686,Ram-srini,"@panyu4 @feihujiang  I am getting warning while generating genesis block without channel id.
2019-02-18 22:27:39.566 PST [common.tools.configtxgen] main -> WARN 001 Omitting the channel ID for configtxgen for output operations is deprecated.  Explicitly passing the channel ID will be required in the future, defaulting to 'testchainid'.
Is that fine?",2019-02-19 06:30:12,2019-02-19 06:30:12
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/465011955,https://github.com/hyperledger/caliper/pull/290#issuecomment-465011955,feihujiang,"@Ram-srini It doesn't matter. However, you can  avoid the warning by giving a different channelID, such as  `/home/fabric/fabric-samples/bin/configtxgen -profile TwoOrgsOrdererGenesis -outputBlock twoorgs.genesis.block -channelID genesisChannel`.",2019-02-19 07:07:50,2019-02-19 07:07:50
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/465392716,https://github.com/hyperledger/caliper/pull/290#issuecomment-465392716,feihujiang,"@Ram-srini Could you please upload the customdomain files according to the above suggestions, so then we could merge this PR.",2019-02-20 02:19:43,2019-02-20 02:19:43
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/465410686,https://github.com/hyperledger/caliper/pull/290#issuecomment-465410686,Ram-srini,"Even after those changes i am getting orderer issue.
panic: Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: c
ertificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""ca.mydomain.com"")
",2019-02-20 03:49:02,2019-02-20 03:49:02
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/465412468,https://github.com/hyperledger/caliper/pull/290#issuecomment-465412468,feihujiang,"@Ram-srini Remove the customdomain dir totally in your PR, we'll add it in another PR, OK?",2019-02-20 03:58:24,2019-02-20 03:58:24
https://api.github.com/repos/hyperledger/caliper/issues/290,https://api.github.com/repos/hyperledger/caliper/issues/comments/465413744,https://github.com/hyperledger/caliper/pull/290#issuecomment-465413744,feihujiang,"@Ram-srini and please squash your commits into one commit, thanks!",2019-02-20 04:04:06,2019-02-20 04:04:06
https://api.github.com/repos/hyperledger/caliper/issues/289,https://api.github.com/repos/hyperledger/caliper/issues/comments/455927692,https://github.com/hyperledger/caliper/pull/289#issuecomment-455927692,panyu4,Ref #286,2019-01-21 02:11:55,2019-01-21 02:11:55
https://api.github.com/repos/hyperledger/caliper/issues/288,https://api.github.com/repos/hyperledger/caliper/issues/comments/456234444,https://github.com/hyperledger/caliper/issues/288#issuecomment-456234444,houqinghui,"@YanLIU0822 does  ""I run my own code to test TPS"" mean that you modify the configuratioin file to run the caliper or you want to test your custom network?
",2019-01-22 00:48:21,2019-01-22 00:48:41
https://api.github.com/repos/hyperledger/caliper/issues/288,https://api.github.com/repos/hyperledger/caliper/issues/comments/462259544,https://github.com/hyperledger/caliper/issues/288#issuecomment-462259544,feihujiang,"@YanLIU0822 Have you resolved this issue? if not, you can uncomment [this line](https://github.com/hyperledger/caliper/blob/master/src/adapters/fabric/e2eUtils.js#L561), and post the information. We can look into the problem later.",2019-02-11 09:15:04,2019-02-11 09:15:04
https://api.github.com/repos/hyperledger/caliper/issues/288,https://api.github.com/repos/hyperledger/caliper/issues/comments/462701154,https://github.com/hyperledger/caliper/issues/288#issuecomment-462701154,panyu4,@YanLIU0822 Issue #165 gives one solution. You might take a try. ,2019-02-12 10:17:47,2019-02-12 10:17:47
https://api.github.com/repos/hyperledger/caliper/issues/287,https://api.github.com/repos/hyperledger/caliper/issues/comments/456151959,https://github.com/hyperledger/caliper/pull/287#issuecomment-456151959,gregdhill,ping @panyu4 ,2019-01-21 17:41:26,2019-01-21 17:41:26
https://api.github.com/repos/hyperledger/caliper/issues/287,https://api.github.com/repos/hyperledger/caliper/issues/comments/456251716,https://github.com/hyperledger/caliper/pull/287#issuecomment-456251716,panyu4,"@gregdhill , It is a good idea of extracting the common files. But I think there is a misunderstanding about the file `./scripts/test.js`. The file `./scripts/test.js` is used for completing the travis CI test, and the file `bench-flow.js` is responsible for testing flow. I left some comments under your code. ",2019-01-22 02:41:21,2019-01-22 02:41:21
https://api.github.com/repos/hyperledger/caliper/issues/287,https://api.github.com/repos/hyperledger/caliper/issues/comments/468385824,https://github.com/hyperledger/caliper/pull/287#issuecomment-468385824,gregdhill,@aklenik  are we good to merge this?,2019-02-28 18:35:03,2019-02-28 18:35:03
https://api.github.com/repos/hyperledger/caliper/issues/287,https://api.github.com/repos/hyperledger/caliper/issues/comments/468611945,https://github.com/hyperledger/caliper/pull/287#issuecomment-468611945,aklenik,"@gregdhill Sorry, your ""Done"" message got lost among the notifications, feel free to ping me sooner next time (here or in rocket.chat). 

The benchmark return code is undefined for a successful run (I guess `framework.run` doesn't return anything), so I got the following npm error:
```
Benchmark return code:  undefined
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! caliper@0.1.0 bench: `node ./scripts/main.js ""-c"" ""benchmark/simple/config-linear-rate.yaml"" ""-n"" ""network/fabric-v1.1/dev/fabric-node-tls.json""`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the caliper@0.1.0 bench script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/klenik/.npm/_logs/2019-03-01T09_56_12_091Z-debug.log
```

My suggestion for the end of `main`:
```js
        try {
            await framework.run(absConfigFile, absNetworkFile);
            logger.info('Benchmark run successfully'); // use logger instead of console
            process.exit(0);
        } catch (err) {
            logger.error(`Error while executing the benchmark: ${err.stack ? err.stack : err}`);
            process.exit(1);
        }
```
",2019-03-01 10:03:31,2019-03-01 10:03:31
https://api.github.com/repos/hyperledger/caliper/issues/287,https://api.github.com/repos/hyperledger/caliper/issues/comments/468658871,https://github.com/hyperledger/caliper/pull/287#issuecomment-468658871,gregdhill,"Np @aklenik! Thanks for your suggestion, I've made the appropriate changes.",2019-03-01 13:07:09,2019-03-01 13:07:09
https://api.github.com/repos/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/comments/455390133,https://github.com/hyperledger/caliper/issues/285#issuecomment-455390133,houqinghui,"@sidraamalik  
1. there is a log file in your current directory where you execute the command, you can refer to it for the detailed infomation.  
2. you can check the config.yaml to see that if it has the `monitor` property. ",2019-01-18 01:06:57,2019-01-18 01:06:57
https://api.github.com/repos/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/comments/461285094,https://github.com/hyperledger/caliper/issues/285#issuecomment-461285094,sidraamalik,"Hi,
there is a monitor property in the config.yaml file...
Error: Failed to find monitor in config file
    at Monitor.start (/caliper/src/comm/monitor/monitor.js:109:35)
    at Monitor.restart (/caliper/src/comm/monitor/monitor.js:216:21)
    at defaultTest (/caliper/src/comm/bench-flow.js:252:31)
    at <anonymous>


any idea what could be the reason?

On Fri, Jan 18, 2019 at 12:06 PM houqinghui <notifications@github.com>
wrote:

> @sidraamalik <https://github.com/sidraamalik>
>
>    1. there is a log file in your current directory where you execute the
>    command, you can refer to it for the detailed infomation.
>    2. you can check the config.yaml to see that if it has the monitor
>    property.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/caliper/issues/285#issuecomment-455390133>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AZqvm9njFnsib2ZJkf0r4s9ZXxEGIRlFks5vER4ygaJpZM4aGc4k>
> .
>
",2019-02-07 04:33:41,2019-02-07 04:33:41
https://api.github.com/repos/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/comments/462604018,https://github.com/hyperledger/caliper/issues/285#issuecomment-462604018,panyu4,Would you please list  your config.yaml file ? So we can reproduce it and find the reason. ,2019-02-12 03:45:17,2019-02-12 03:45:17
https://api.github.com/repos/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/comments/464404437,https://github.com/hyperledger/caliper/issues/285#issuecomment-464404437,sidraamalik,"here it is : 

test:
  name: My Trading Network
  description: Composer perf test for CC Tx
  clients:
    type: local
    number: 1
  rounds:
  - label:mytrade-network
    txNumber:
    - 100
    trim: 0
    rateControl:
    - type: fixed-rate
      opts:
        tps: 10
    arguments:
      testAssets: 100
    callback: benchmark/composer/composer-samples/mytrade-network.js
  monitor:
  type:
  - docker
  - process
  docker:
    name:
    - all
  process:
  - command: node
    arguments: local-client.js
    multiOutput: avg
  interval: 1",2019-02-17 01:03:39,2019-02-17 01:03:39
https://api.github.com/repos/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/comments/464430507,https://github.com/hyperledger/caliper/issues/285#issuecomment-464430507,aklenik,"@sidraamalik Please, paste your config as a well-formatted yaml document, so we can rule out indentation errors in the config (github gist is a good way to share longer text files) ",2019-02-17 08:53:15,2019-02-17 08:53:15
https://api.github.com/repos/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/comments/466198312,https://github.com/hyperledger/caliper/issues/285#issuecomment-466198312,sidraamalik,"
[config-yaml.zip](https://github.com/hyperledger/caliper/files/2891594/config-yaml.zip)

",2019-02-21 22:44:02,2019-02-21 22:44:02
https://api.github.com/repos/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/comments/466367597,https://github.com/hyperledger/caliper/issues/285#issuecomment-466367597,aklenik,"@sidraamalik The `monitor` attribute is indented, but it should be a top-level attribute (that's why Caliper can't find it). The correct indentation:
```yaml
test:
  name: Reputation Trading Network
  description: Composer perf test for CreateCommodity 30tps
  clients:
    type: local
    number: 1
  rounds:
  - label: rep-network
    txNumber:
    - 100
    trim: 0
    rateControl:
    - type: fixed-rate
      opts:
        tps: 10
    arguments:
      testAssets: 100
    callback: benchmark/composer/composer-samples/rep-network.js
monitor:
  type:
  - docker
  - process
  docker:
    name:
    - all
  process:
  - command: node
    arguments: local-client.js
    multiOutput: avg
  interval: 1
```",2019-02-22 11:34:12,2019-02-22 11:34:12
https://api.github.com/repos/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/comments/469417612,https://github.com/hyperledger/caliper/issues/285#issuecomment-469417612,aklenik,@sidraamalik Did the indent fix resolve your issue?,2019-03-04 20:54:10,2019-03-04 20:54:10
https://api.github.com/repos/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/comments/469422696,https://github.com/hyperledger/caliper/issues/285#issuecomment-469422696,sidraamalik,"It did indeed. Many Thanks !!

On Tue, Mar 5, 2019 at 7:54 AM Attila Klenik <notifications@github.com>
wrote:

> @sidraamalik <https://github.com/sidraamalik> Did the indent fix resolve
> your issue?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/caliper/issues/285#issuecomment-469417612>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AZqvmxJCum4PxMjLwZipCslrrSo7iu2tks5vTYfzgaJpZM4aGc4k>
> .
>
",2019-03-04 21:09:54,2019-03-04 21:09:54
https://api.github.com/repos/hyperledger/caliper/issues/284,https://api.github.com/repos/hyperledger/caliper/issues/comments/455103637,https://github.com/hyperledger/caliper/issues/284#issuecomment-455103637,YanLIU0822,"@aklenik hey ak, could you help me out thanks",2019-01-17 09:31:51,2019-01-17 09:31:51
https://api.github.com/repos/hyperledger/caliper/issues/284,https://api.github.com/repos/hyperledger/caliper/issues/comments/455145254,https://github.com/hyperledger/caliper/issues/284#issuecomment-455145254,YanLIU0822,"> @aklenik hey ak, could you help me out thanks

hey sorry for bothering you. I modify the require_time to 48000 it works ",2019-01-17 11:51:28,2019-01-17 11:51:28
https://api.github.com/repos/hyperledger/caliper/issues/282,https://api.github.com/repos/hyperledger/caliper/issues/comments/454546999,https://github.com/hyperledger/caliper/pull/282#issuecomment-454546999,gregdhill,cc: @aklenik ,2019-01-15 20:53:16,2019-01-15 20:53:16
https://api.github.com/repos/hyperledger/caliper/issues/281,https://api.github.com/repos/hyperledger/caliper/issues/comments/462261362,https://github.com/hyperledger/caliper/issues/281#issuecomment-462261362,feihujiang,Now caliper is able to support fabric v1.1~v1.2 to pass the large scale tests (6.5 million transactions).,2019-02-11 09:22:16,2019-02-11 09:22:16
https://api.github.com/repos/hyperledger/caliper/issues/280,https://api.github.com/repos/hyperledger/caliper/issues/comments/451332078,https://github.com/hyperledger/caliper/issues/280#issuecomment-451332078,zsh122958,"
[nohup.txt](https://github.com/hyperledger/caliper/files/2725790/nohup.txt)、
This is the output document.",2019-01-04 01:36:39,2019-01-04 01:36:39
https://api.github.com/repos/hyperledger/caliper/issues/280,https://api.github.com/repos/hyperledger/caliper/issues/comments/451793969,https://github.com/hyperledger/caliper/issues/280#issuecomment-451793969,houqinghui,"@zsh122958  are you sure that you installl the correct version such as nodejs, node-npy? please refer to https://hyperledger.github.io/caliper/docs/1_Getting_Started.html",2019-01-07 01:09:08,2019-01-07 01:09:20
https://api.github.com/repos/hyperledger/caliper/issues/280,https://api.github.com/repos/hyperledger/caliper/issues/comments/462569933,https://github.com/hyperledger/caliper/issues/280#issuecomment-462569933,panyu4,"Since it is inactive and a resolution had been given, it is closed.",2019-02-12 01:16:06,2019-02-12 01:16:06
https://api.github.com/repos/hyperledger/caliper/issues/279,https://api.github.com/repos/hyperledger/caliper/issues/comments/457425936,https://github.com/hyperledger/caliper/pull/279#issuecomment-457425936,panyu4,@nklincoln would you please resolve these conflicts？,2019-01-25 01:47:32,2019-01-25 01:47:32
https://api.github.com/repos/hyperledger/caliper/issues/278,https://api.github.com/repos/hyperledger/caliper/issues/comments/451036473,https://github.com/hyperledger/caliper/issues/278#issuecomment-451036473,panyu4,@GingerMoon would you please list your docker-compose version?,2019-01-03 01:35:35,2019-01-03 01:35:35
https://api.github.com/repos/hyperledger/caliper/issues/278,https://api.github.com/repos/hyperledger/caliper/issues/comments/462262250,https://github.com/hyperledger/caliper/issues/278#issuecomment-462262250,feihujiang,@GingerMoon Have you resolved this issue?,2019-02-11 09:25:41,2019-02-11 09:25:41
https://api.github.com/repos/hyperledger/caliper/issues/278,https://api.github.com/repos/hyperledger/caliper/issues/comments/463526689,https://github.com/hyperledger/caliper/issues/278#issuecomment-463526689,GingerMoon,"Really sorry guys for the late response. 
For now I am not working on it and I am closing this ticket. ",2019-02-14 07:49:03,2019-02-14 07:49:03
https://api.github.com/repos/hyperledger/caliper/issues/276,https://api.github.com/repos/hyperledger/caliper/issues/comments/463669676,https://github.com/hyperledger/caliper/pull/276#issuecomment-463669676,aklenik,"@houqinghui Could you provide some description on what was the problem, and how the PR fixes it?",2019-02-14 15:28:57,2019-02-14 15:28:57
https://api.github.com/repos/hyperledger/caliper/issues/276,https://api.github.com/repos/hyperledger/caliper/issues/comments/463888619,https://github.com/hyperledger/caliper/pull/276#issuecomment-463888619,panyu4,"@aklenik @houqinghui This PR is trying to resolve the issue #226. But after a few tests, this computation method that minuses the idle intervals and only the actual time is used for successful transactions' lasted time computing, will result in this phenomena  the computed TPS would be often larger than  sending rate since when sending rate is lower, the backend network will have a lot of idle time. So I think this pr still needs to be improved.",2019-02-15 03:03:04,2019-02-15 03:03:04
https://api.github.com/repos/hyperledger/caliper/issues/275,https://api.github.com/repos/hyperledger/caliper/issues/comments/451794767,https://github.com/hyperledger/caliper/issues/275#issuecomment-451794767,houqinghui,@vamdivd do you mean that you  cannot executive the comman `node main.js`?,2019-01-07 01:16:50,2019-01-07 01:16:50
https://api.github.com/repos/hyperledger/caliper/issues/275,https://api.github.com/repos/hyperledger/caliper/issues/comments/451819610,https://github.com/hyperledger/caliper/issues/275#issuecomment-451819610,vamdivd,"> @vamdivd do you mean that you cannot executive the comman `node main.js`?

yes, when I executive ""node ./src/comm/client/zoo-client.js zookeeper-server"", it just stay ""Waiting for messages at:/caliper/client_1514532063571_0000000006_in......"". I cannot input anything. What should I 
 do to executive ""node main.js""?",2019-01-07 04:35:54,2019-01-07 04:35:54
https://api.github.com/repos/hyperledger/caliper/issues/275,https://api.github.com/repos/hyperledger/caliper/issues/comments/451831685,https://github.com/hyperledger/caliper/issues/275#issuecomment-451831685,houqinghui,"@vamdivd   yes, you should. The zookeeper is just a  coordination service for distributed clients.",2019-01-07 06:10:11,2019-01-07 06:10:11
https://api.github.com/repos/hyperledger/caliper/issues/275,https://api.github.com/repos/hyperledger/caliper/issues/comments/452190536,https://github.com/hyperledger/caliper/issues/275#issuecomment-452190536,vamdivd,"> @vamdivd yes, you should. The zookeeper is just a coordination service for distributed clients.

THX.",2019-01-08 06:32:23,2019-01-08 06:32:23
https://api.github.com/repos/hyperledger/caliper/issues/275,https://api.github.com/repos/hyperledger/caliper/issues/comments/462263556,https://github.com/hyperledger/caliper/issues/275#issuecomment-462263556,feihujiang,"Just open another terminal, then run 'node main.js'.",2019-02-11 09:30:52,2019-02-11 09:30:52
https://api.github.com/repos/hyperledger/caliper/issues/272,https://api.github.com/repos/hyperledger/caliper/issues/comments/458392846,https://github.com/hyperledger/caliper/issues/272#issuecomment-458392846,houqinghui,"@rupc  It is a goog idea, we will think over this idea. If you can contribute  to caliper,  it will be very wonderful.",2019-01-29 03:22:26,2019-01-29 03:22:26
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449834549,https://github.com/hyperledger/caliper/issues/271#issuecomment-449834549,zsh122958,"

/**
 * initJson Initializes the number of transactions
 * @returns {String} string generated based on @param number
 */
function initJson(){
    let post_data = {
        'txid': randomString(32),
        'dataHash': randomString(32),
        'data': randomString(32),
        'publicKey': randomString(32),
        'signature': Math.random().toString(32).substr(2),
        'remark':'',
        'appId':Math.random().toString(32).slice(2)
    };
    return post_data;
}

module.exports.run = function() {
    let jsonPoe = initJson();
    account_array.push(jsonPoe);
    return bc.invokeSmartContract(cont, 'zsh', 'v0', {verb: 'account_array', account: jsonPoe,money: initMoney}, 100000);
};

module.exports.end = function() {
    return Promise.resolve();
};

module.exports.account_array = account_array;
",2018-12-25 09:59:59,2018-12-25 10:04:30
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449834646,https://github.com/hyperledger/caliper/issues/271#issuecomment-449834646,zsh122958,"    /**
     * Invoke the given chaincode according to the specified options. Multiple transactions will be generated according to the length of args.
     * @param {object} context The Fabric context returned by {getContext}.
     * @param {string} contractID The name of the chaincode.
     * @param {string} contractVer The version of the chaincode.
     * @param {Array} args Array of JSON formatted arguments for transaction(s). Each element containts arguments (including the function name) passing to the chaincode. JSON attribute named transaction_type is used by default to specify the function name. If the attribute does not exist, the first attribute will be used as the function name.
     * @param {number} timeout The timeout to set for the execution in seconds.
     * @return {Promise<object>} The promise for the result of the execution.
     */
    async invokeSmartContract(context, contractID, contractVer, args, timeout) {
        commUtils.log('into invokeSmartContract');
        args.forEach(function(item,index){
            commUtils.log('---------------',item.account+'---'+index);
            try {
                let request = require('sync-request');
                let url ='http://'+restApiUrl+':'+configPort+'.url';
                let res = request('POST', url, {
                    json: item.account
                });
                commUtils.log(JSON.parse(res.getBody('utf8')));
                if (JSON.parse(res.getBody('utf8')).code === '0000') {
                    commUtils.log('    >>>>>body    :',JSON.parse(res.getBody('utf8')));
                    let txid= JSON.parse(res.getBody('utf8')).txid;
                    item.account.txid = txid;
                    commUtils.log(' wait >>>>>>>>>>>>>>>>>>>>>');
                    commUtils.sleep(5000);
                    commUtils.log('    >>>>>txid    :',item.account.txid);
                    return Promise.resolve('SUCCESS');
                } else {
                    commUtils.log('END>>>>>>>>>>>>>>>>>>>>>>>>>');
                    return Promise.resolve('ERRO');
                }
            }
            catch(err) {
                commUtils.log(err);
                let badResult = new TxStatus('artifact');
                badResult.SetStatusFail();
                Promise.resolve(badResult);
            }
        });
        return Promise.resolve();",2018-12-25 10:00:44,2018-12-25 10:03:44
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449835133,https://github.com/hyperledger/caliper/issues/271#issuecomment-449835133,zsh122958,"![image](https://user-images.githubusercontent.com/44695130/50420045-14828180-086f-11e9-9248-0953971f2e4a.png)
",2018-12-25 10:05:13,2018-12-25 10:09:46
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449835695,https://github.com/hyperledger/caliper/issues/271#issuecomment-449835695,zsh122958,"The number of transactions is set to 100, but the background data is always executing.",2018-12-25 10:10:51,2018-12-25 10:10:51
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449839387,https://github.com/hyperledger/caliper/issues/271#issuecomment-449839387,houqinghui,"@zsh122958  i donot get your pointtt,  can you run caliper successfully?, if successfully, what does the picture  mean?",2018-12-25 10:50:07,2018-12-25 10:50:07
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449863399,https://github.com/hyperledger/caliper/issues/271#issuecomment-449863399,zsh122958,"@houqinghui   THANKS,Unexpected stop. Query method not executed.",2018-12-25 17:05:35,2018-12-25 17:05:35
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449881735,https://github.com/hyperledger/caliper/issues/271#issuecomment-449881735,panyu4,"@zsh122958 , does the simple example run well?",2018-12-26 00:38:57,2018-12-26 00:38:57
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449884340,https://github.com/hyperledger/caliper/issues/271#issuecomment-449884340,zsh122958,"@panyu4 The report will not be generated, and running is fine.",2018-12-26 01:22:46,2018-12-26 01:22:46
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449888212,https://github.com/hyperledger/caliper/issues/271#issuecomment-449888212,panyu4,"would you please list your version information of DLT, NodeJS? @zsh122958 ",2018-12-26 02:07:05,2018-12-26 02:07:26
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449894960,https://github.com/hyperledger/caliper/issues/271#issuecomment-449894960,zsh122958,"@panyu4  npm 6.5.0  ,  node v11.4.0 , I suspected that syncsync -request was used to cause the execution program to stop and the node in the background kept sending transactions.",2018-12-26 03:14:09,2018-12-26 03:14:09
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449897200,https://github.com/hyperledger/caliper/issues/271#issuecomment-449897200,panyu4,"@zsh122958 ， Caliper needs the Node with version 8.*, otherwise, some problems may appear. ",2018-12-26 03:37:27,2018-12-26 03:37:27
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/449898220,https://github.com/hyperledger/caliper/issues/271#issuecomment-449898220,zsh122958,"@panyu4 Node v8.9 previously reported an error async function, so we upgraded it",2018-12-26 03:48:56,2018-12-26 03:48:56
https://api.github.com/repos/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/comments/462566840,https://github.com/hyperledger/caliper/issues/271#issuecomment-462566840,panyu4,"Since it is an inactive issue and the cause(wrong node version and wrong adapter)had been found, it will be closed. ",2019-02-12 01:09:53,2019-02-12 01:09:53
https://api.github.com/repos/hyperledger/caliper/issues/269,https://api.github.com/repos/hyperledger/caliper/issues/comments/454718103,https://github.com/hyperledger/caliper/pull/269#issuecomment-454718103,nklincoln,"Quite a few of the items here should probably point to the relevant section of the docs ... and if those sections of the docs are not clear enough then they should be modified/enhanced.

My suggestion would be that everything above (but not including) ""How to test the blockchain system that caliper does not support currently"" link to existing documentation, and everything else remain unchanged",2019-01-16 09:51:33,2019-01-16 09:51:33
https://api.github.com/repos/hyperledger/caliper/issues/269,https://api.github.com/repos/hyperledger/caliper/issues/comments/455748186,https://github.com/hyperledger/caliper/pull/269#issuecomment-455748186,houqinghui,"> Quite a few of the items here should probably point to the relevant section of the docs ... and if those sections of the docs are not clear enough then they should be modified/enhanced.
> 
> My suggestion would be that everything above (but not including) ""How to test the blockchain system that caliper does not support currently"" link to existing documentation, and everything else remain unchanged

what do you mean the existing documentation is ? should i  make a new documentation for that question?
",2019-01-19 04:19:26,2019-01-19 04:19:26
https://api.github.com/repos/hyperledger/caliper/issues/269,https://api.github.com/repos/hyperledger/caliper/issues/comments/456010910,https://github.com/hyperledger/caliper/pull/269#issuecomment-456010910,houqinghui,"@nklincoln @aklenik  i have revise the FAQ documentation, please review it.",2019-01-21 09:47:50,2019-01-21 09:47:50
https://api.github.com/repos/hyperledger/caliper/issues/269,https://api.github.com/repos/hyperledger/caliper/issues/comments/464938826,https://github.com/hyperledger/caliper/pull/269#issuecomment-464938826,houqinghui,"@panyu4 @aklenik  I update the FAQ documentation, please review it again.",2019-02-19 01:10:26,2019-02-19 01:10:26
https://api.github.com/repos/hyperledger/caliper/issues/268,https://api.github.com/repos/hyperledger/caliper/issues/comments/449531052,https://github.com/hyperledger/caliper/issues/268#issuecomment-449531052,houqinghui,"@zsh122958  please check the version of nodejs, and make sure the nodejs is 8.x version. 
the problem is like the issue #73 ",2018-12-22 00:39:44,2018-12-22 00:39:44
https://api.github.com/repos/hyperledger/caliper/issues/268,https://api.github.com/repos/hyperledger/caliper/issues/comments/449814491,https://github.com/hyperledger/caliper/issues/268#issuecomment-449814491,zsh122958,@houqinghui  Thanks for upgrading node v11,2018-12-25 07:07:25,2018-12-25 07:07:25
https://api.github.com/repos/hyperledger/caliper/issues/267,https://api.github.com/repos/hyperledger/caliper/issues/comments/448831543,https://github.com/hyperledger/caliper/issues/267#issuecomment-448831543,houqinghui,"@lybyyy there are 5 clients in the default simple test ,  do you mean that you want to use more peers in the organitions? ",2018-12-20 02:04:04,2018-12-20 02:04:04
https://api.github.com/repos/hyperledger/caliper/issues/267,https://api.github.com/repos/hyperledger/caliper/issues/comments/448881300,https://github.com/hyperledger/caliper/issues/267#issuecomment-448881300,lybyyy,"@houqinghui
yes.
eg. Run 16 or more organizations and each organization has 2 or more peers.
what should i do? thank a lot.",2018-12-20 05:47:13,2018-12-20 05:47:13
https://api.github.com/repos/hyperledger/caliper/issues/267,https://api.github.com/repos/hyperledger/caliper/issues/comments/448961205,https://github.com/hyperledger/caliper/issues/267#issuecomment-448961205,aklenik,"@lybyyy You should start by modifying one of the sample networks that Caliper provides. Including:
1. `configtx.yaml`
1. `crypto-config.yaml`
1. Regenerate the artifacts based on the above files
1. Add the new orgs and peers to the network configuration file that caliper uses.

Well, actually deploying the network is a little bit complicated, since you won't be able to run the network on a single machine (a looot of Docker container would be running). But if you already has that part, then you only need to modify the network config file that Caliper uses.",2018-12-20 11:13:50,2018-12-20 11:13:50
https://api.github.com/repos/hyperledger/caliper/issues/267,https://api.github.com/repos/hyperledger/caliper/issues/comments/462264376,https://github.com/hyperledger/caliper/issues/267#issuecomment-462264376,feihujiang,"This is an inactive issue for long time. So close it. @lybyyy If you still have the same problem, reopen it.",2019-02-11 09:33:57,2019-02-11 09:33:57
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/448832599,https://github.com/hyperledger/caliper/issues/266#issuecomment-448832599,houqinghui,"@zsh122958 what do you mean?  if some errors appear, please list the error log information. ",2018-12-20 02:10:28,2018-12-20 02:10:28
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/448959348,https://github.com/hyperledger/caliper/issues/266#issuecomment-448959348,aklenik,"@zsh122958 Could you give more details, please? For me, it looks like a custom version of Caliper. Also, could you keep the language of the issue English, so it reaches more people? :sweat_smile: ",2018-12-20 11:07:17,2018-12-20 11:07:17
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449065793,https://github.com/hyperledger/caliper/issues/266#issuecomment-449065793,zsh122958,"@houqinghui  
The underlying service that sent the post request did not receive it
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
案例来源于 https://github.com/hyperledger/caliper/blob/master/benchmark/simple/open.js
行
返回bc.invokeSmartContract（contx，'simple'，'v0'，{verb：' open'，account：newAcc，money：initMoney}，30）; 

",2018-12-20 16:58:42,2018-12-20 16:58:42
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449066930,https://github.com/hyperledger/caliper/issues/266#issuecomment-449066930,zsh122958,"@aklenik  Thank you, I want to send many transactions, but the client side did not receive, and the server side did not receive a response.",2018-12-20 17:02:14,2018-12-20 17:02:14
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449674725,https://github.com/hyperledger/caliper/issues/266#issuecomment-449674725,panyu4,"@zsh122958 , I think at the beginning the client is busy at sending transactions, limited by the machine's performance the child processes are unable to run invoke function immediately. So there would appear a lot transactions which have already waited 30 seconds  unfinished. This phenomenon can easily occur over a long  time testing or test with large volume of transactions.   What caliper can do with this now is  that  let user change your rate control property(as my experience, fixed-feedback-rate is able to  relieve clients' pressure) in the test configuration file and set a long timeout value ( 30 is too small).  But we are trying to figure out a method to resolve this. Hope it can help you.",2018-12-24 01:28:11,2018-12-24 23:45:35
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449784883,https://github.com/hyperledger/caliper/issues/266#issuecomment-449784883,zsh122958,"@panyu4 @houqinghui @aklenik 
Thank you. I re-referenced a sync-request package and sent the request request. The transaction was successfully sent.Now we're doing a query",2018-12-25 01:38:56,2018-12-25 01:38:56
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449785414,https://github.com/hyperledger/caliper/issues/266#issuecomment-449785414,panyu4,@zsh122958 ， Good News. Would you please list some more details? It might be one choice to resolve this problem.    ,2018-12-25 01:45:16,2018-12-25 01:45:16
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449786307,https://github.com/hyperledger/caliper/issues/266#issuecomment-449786307,zsh122958,"
@panyu4  
sync-request
https://www.npmjs.com/package/sync-request
https://www.jianshu.com/p/8112efecb0ad      Test ",2018-12-25 01:54:47,2018-12-25 01:54:47
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449813172,https://github.com/hyperledger/caliper/issues/266#issuecomment-449813172,zsh122958,@panyu4 I would like to know the setting of the timeout and whether the number of submissions can be set.,2018-12-25 06:54:13,2018-12-25 06:54:13
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449818588,https://github.com/hyperledger/caliper/issues/266#issuecomment-449818588,panyu4,"@zsh122958 ， the timeout you can set in your test file( the callback property you defined in configuration file).  Just as an example, in the file `benchmark/simple/open.js`  the run function calls the blockchain NBI invokeSmartContract and the last parameter is the timeout setting.  In the file `Config/default.yaml`, the property [client-request-timeout](https://github.com/hyperledger/caliper/blob/e7409cc847cd87f36f4456905fc7e5e3b4584c20/config/default.yaml#L2) can be set by yourself. 
The number of submissions ==> Do you mean the total transactions' number? If so, you can defined like [this](https://github.com/hyperledger/caliper/blob/e7409cc847cd87f36f4456905fc7e5e3b4584c20/benchmark/simple/config.yaml#L11)",2018-12-25 07:46:13,2018-12-25 07:46:13
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449821170,https://github.com/hyperledger/caliper/issues/266#issuecomment-449821170,zsh122958,"@panyu4  sorry，I development project is https://github.com/TrustedBlockchain/TrustedBench，The configuration file is not available，The problem I am facing now is that the txnumber I set according to the config.json configuration file is 1000, and the result of submitting the transaction does not stop, but is executed all the time.You don't go to the query method queryState。  

",2018-12-25 08:08:38,2018-12-25 08:08:38
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449821860,https://github.com/hyperledger/caliper/issues/266#issuecomment-449821860,panyu4,"@zsh122958 ， the cause of your problem is just what I said above. In that fork, I submitted a pr and it has not been merged. You can use it and set the rate control to be fixed-feedback-rate. ",2018-12-25 08:14:44,2018-12-25 08:14:44
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449826364,https://github.com/hyperledger/caliper/issues/266#issuecomment-449826364,zsh122958,I'm breaking down. Smile @panyu4 ,2018-12-25 08:53:33,2018-12-25 08:53:33
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449827103,https://github.com/hyperledger/caliper/issues/266#issuecomment-449827103,panyu4,"@zsh122958 ， now we are trying to fix this problem. You may try later.
You'd better reduce the tx number, and there will be a boundary value. Set the number less than this value ,  it can run well.  ",2018-12-25 08:59:12,2018-12-25 08:59:12
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449827640,https://github.com/hyperledger/caliper/issues/266#issuecomment-449827640,zsh122958,"Thanks,Txnumber100 TPS 10,query 100 TPS 10. Still sending transactions continuously, may I ask you privately? @panyu4 ",2018-12-25 09:03:16,2018-12-25 09:03:16
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449881208,https://github.com/hyperledger/caliper/issues/266#issuecomment-449881208,panyu4,"@zsh122958 , of course. Rocket channel would be better https://chat.hyperledger.org/channel/caliper,  https://chat.hyperledger.org/direct/panyu2",2018-12-26 00:26:20,2018-12-26 00:39:42
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449881236,https://github.com/hyperledger/caliper/issues/266#issuecomment-449881236,panyu4,"@zsh122958 , how many clients did you set ?",2018-12-26 00:27:01,2018-12-26 00:27:01
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449881840,https://github.com/hyperledger/caliper/issues/266#issuecomment-449881840,panyu4,"@zsh122958 , I think put the resolve process here would be better. Other people will know how to handle the same problem.",2018-12-26 00:41:25,2018-12-26 00:41:25
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/449882226,https://github.com/hyperledger/caliper/issues/266#issuecomment-449882226,zsh122958,"This is good, help more people solve the problem. I upload the error to #271, trouble




| |
校长
|
|
邮箱：18234444581@163.com
|

签名由 网易邮箱大师 定制

在2018年12月26日 08:41，panyu4 写道：

@zsh122958 , I think put the resolve process here would be better. Other people will know how to handle the same problem.

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or mute the thread.",2018-12-26 00:49:44,2018-12-26 00:49:44
https://api.github.com/repos/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/comments/462565352,https://github.com/hyperledger/caliper/issues/266#issuecomment-462565352,panyu4,"Current Caliper is able to support file mode which means it can run with large scale test, so the time out errors will be reduced.   Actually, this issue was caused by the incorrect writing of adapters. Please refer to  [the related adapter's documentation](https://hyperledger.github.io/caliper/docs/Writing_Adapters.html) and this issue will be closed. ",2019-02-12 01:04:41,2019-02-12 01:04:41
https://api.github.com/repos/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/comments/448566028,https://github.com/hyperledger/caliper/issues/264#issuecomment-448566028,zsh122958,"The problem I had was sending an http.request at invokeSmartContract () and forcing no response
 commUtils.log('  >>> Into invokeSmartContract >>>>');
        args.forEach(function(item,index) {
            let con = require('../../benchmark/uchains_simple/uchains.json');
            let restApiUrl = con.uchains.network.restapi.url;
            let configPort = con.uchains.network.restapi.port;
            const http = require('http');
            let options = {
                hostname:restApiUrl,     //此处不能写协议，如 ： http://,https://  否则会报错
                port:configPort,
                path:'/UChains/poe/poe/transaction',
                method:'POST',
                headers: {
                    'Content-Type':'application/x-www-form-urlencoded',
                    'Content-Length':Buffer.byteLength(item.acount)
                }
            };
            commUtils.log('________Send__________',restApiUrl,configPort);
            let req ;
            try{
                req = http.request(options,function(res){
                    commUtils.log('________success_________');
                    commUtils.log('STATUS:'+res.statusCode);
                    commUtils.log('HEADERS:'+JSON.stringify(res.headers));
                    res.on('data',function(chunk){
                        commUtils.log('BODY:'+chunk);
                    });
                });
            }
            catch(err) {
                commUtils.log(err);
            }
            req.write(item.acount);
            req.end();
            commUtils.log('  >>>index>>>>');
        });",2018-12-19 11:43:43,2018-12-19 11:43:43
https://api.github.com/repos/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/comments/448608203,https://github.com/hyperledger/caliper/issues/264#issuecomment-448608203,RobertDiebels,@zsh122958 I don't see how that's related to Fabric's invokebycontext exceeding the users' timeout value.,2018-12-19 14:08:00,2018-12-19 14:08:00
https://api.github.com/repos/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/comments/448614359,https://github.com/hyperledger/caliper/issues/264#issuecomment-448614359,zsh122958,"I don't know if this is my problem




| |
校长
|
|
邮箱：18234444581@163.com
|

签名由 网易邮箱大师 定制

On 12/19/2018 22:08, Robert Diebels wrote:

@zsh122958 I don't see how that's related to Fabric's invokebycontext exceeding the users' timeout value.

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or mute the thread.",2018-12-19 14:27:37,2018-12-19 14:27:37
https://api.github.com/repos/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/comments/448958192,https://github.com/hyperledger/caliper/issues/264#issuecomment-448958192,aklenik,"@RobertDiebels Good catch :+1:  Although wrapping everything in a promise with a timeout is kind of against the principle of ""Don't throw exceptions during Tx processing"". 
So the initial timeout has to be properly propagated through the transaction's lifecycle. I'll look out for this in the new adapter, thx :sweat_smile: ",2018-12-20 11:02:56,2018-12-20 11:02:56
https://api.github.com/repos/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/comments/449024206,https://github.com/hyperledger/caliper/issues/264#issuecomment-449024206,RobertDiebels,@aklenik Agreed. You could also just return the `invokeStatus` instead of rejecting but I'll leave the implementation up for the Caliper maintainers to decide 😄.,2018-12-20 14:52:49,2018-12-20 14:52:49
https://api.github.com/repos/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/comments/469419386,https://github.com/hyperledger/caliper/issues/264#issuecomment-469419386,aklenik,@RobertDiebels The new adapter has been merged. Can you confirm that it handles your use case correctly?,2019-03-04 20:59:28,2019-03-04 20:59:28
https://api.github.com/repos/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/comments/469636084,https://github.com/hyperledger/caliper/issues/264#issuecomment-469636084,RobertDiebels,"@aklenik I've looked at the code instead because I don't have to time to do a full testing round. Won't [this bit of code](https://github.com/hyperledger/caliper/blob/5c1da72673b5dfadc1c98c583397eac67f9914c0/src/adapters/fabric/e2eUtils.js#L863) and [this bit](https://github.com/hyperledger/caliper/blob/5c1da72673b5dfadc1c98c583397eac67f9914c0/src/adapters/fabric/e2eUtils.js#L870) potentially cause the total time for a transaction to exceed the timeout provided by a user?

Since it potentially adds another 100 seconds to the total time taken unless the events are received sooner.",2019-03-05 10:55:14,2019-03-05 10:56:35
https://api.github.com/repos/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/comments/469636597,https://github.com/hyperledger/caliper/issues/264#issuecomment-469636597,aklenik,"@RobertDiebels I meant the fabric-ccp adapter in `src/adapters/fabric-ccp/fabric.js` :)
",2019-03-05 10:56:46,2019-03-05 10:56:46
https://api.github.com/repos/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/comments/470083251,https://github.com/hyperledger/caliper/issues/264#issuecomment-470083251,RobertDiebels,@aklenik Looked through the code. Lgtm 👌 ,2019-03-06 12:05:52,2019-03-06 12:05:52
https://api.github.com/repos/hyperledger/caliper/issues/263,https://api.github.com/repos/hyperledger/caliper/issues/comments/448559068,https://github.com/hyperledger/caliper/issues/263#issuecomment-448559068,houqinghui,"@RobertDiebels this is a good idea, you can fork the caliper  modify it and submit a PR, if you want.",2018-12-19 11:15:44,2018-12-19 11:15:44
https://api.github.com/repos/hyperledger/caliper/issues/263,https://api.github.com/repos/hyperledger/caliper/issues/comments/448610498,https://github.com/hyperledger/caliper/issues/263#issuecomment-448610498,RobertDiebels,"@houqinghui I ended up solving this by increasing the amount of clients. It seems that the loop gets blocked when there are high numbers of transactions (tens of thousands), high input-rates (in the hundreds), high amounts of peers (16+) and low amounts of clients (1-4). You can consider the issue closed afaic. But it might be useful to verify which amounts cause the event loop to start cracking.

I would love to start contributing but it might take a while before I can do so.",2018-12-19 14:15:25,2018-12-19 14:15:25
https://api.github.com/repos/hyperledger/caliper/issues/263,https://api.github.com/repos/hyperledger/caliper/issues/comments/448956622,https://github.com/hyperledger/caliper/issues/263#issuecomment-448956622,aklenik,"@RobertDiebels Yes, this is an inherent issue of NodeJs's programming model. Since it's basically single threaded (so async doesn't mean parallel), there's an inherent limit on the throughput. Imagine the following:
Putting the number of promises and IO wait aside, there are some pure CPU instructions (basic operations) that take some time. If this time amounts to a total of 10ms for each transaction, then setting an input rate above 100TPS will mean that 1s pure CPU time is burned for that 100 Tx. And at this point, the rate controller won't get the program control in time to be accurate. So basically, to maintain a 100TPS load, your program needs to reach the rate controller code every 10ms.

(Fun fact: Fabric 0.x had the same issue with sequential Tx execution :) )

This is mitigated by distributing the load among more clients, so 1 client has ""more time"" for Tx processing. Usually, I draw the limit around 50, max 70 TPS per client, but this also depends on your hardware.

So to sum it up:
1. Generating high rate workloads is not trivial, and therefore distributed among multiple clients.
2. After a certain rate, you will even reach the limits of a single machine, in which case you distribute the load among multiple clients of multiple machines. This is the long-term plan for Caliper, and we'll get there eventually :) ",2018-12-20 10:57:17,2018-12-20 10:57:17
https://api.github.com/repos/hyperledger/caliper/issues/262,https://api.github.com/repos/hyperledger/caliper/issues/comments/448557069,https://github.com/hyperledger/caliper/issues/262#issuecomment-448557069,houqinghui,"@lenoAlex have you solved your problem? the error is ""failed to instantiate chaincodes, failed to send instantiate proposal or receive valid response response null or status is not 200""
please run the command again, if the error still appear, please check the version of grpc, make the verison is 1.10.1 ",2018-12-19 11:08:35,2018-12-19 11:08:35
https://api.github.com/repos/hyperledger/caliper/issues/262,https://api.github.com/repos/hyperledger/caliper/issues/comments/448881906,https://github.com/hyperledger/caliper/issues/262#issuecomment-448881906,lenoAlex,"@houqinghui the versions of libraries are:

npm list grpc
caliper@0.1.0 /root/gopath/src/github.com/hyperledger/caliper
├─┬ fabric-client@1.1.0
│ └── grpc@1.10.1  deduped
└── grpc@1.10.1
npm list fabric-client
caliper@0.1.0 /root/gopath/src/github.com/hyperledger/caliper
└── fabric-client@1.1.0
 npm list fabric-ca-client
caliper@0.1.0 /root/gopath/src/github.com/hyperledger/caliper
└── fabric-ca-client@1.1.0

**After running the same command again, the error still appear. And the strange thing is there is only two peers of docker created and running, as you can seen in logs.**



info: [bench-flow.js]: ####### Caliper Test ######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml up -d;sleep 3s
**Creating ca.org1.example.com ... done
Creating orderer.example.com ... done
Creating ca.org2.example.com    ... done
Creating peer0.org2.example.com ... done**
**Creating peer0.org1.example.com ... done**
info: [create-channel.js]: Creating mychannel...
info: [create-channel.js]: Created mychannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining mychannel...
info: [join-channel.js]: Successfully joined peerOrg1's peers to mychannel
info: [join-channel.js]: Successfully joined peerOrg2's peers to mychannel
info: [join-channel.js]: Successfully joined mychannel
info: [install-chaincode.js]: Installing chaincodes...
info: [packager/Node.js]: packaging Node from /root/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/marbles-norichquery/node
info: [packager/Node.js]: packaging Node from /root/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/marbles-norichquery/node
info: [install-chaincode.js]: Installed chaincode marbles successfully in all peers
info: [packager/Node.js]: packaging Node from /root/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/simple/node
info: [packager/Node.js]: packaging Node from /root/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/simple/node
info: [install-chaincode.js]: Installed chaincode simple successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...

",2018-12-20 05:50:43,2018-12-20 05:54:50
https://api.github.com/repos/hyperledger/caliper/issues/262,https://api.github.com/repos/hyperledger/caliper/issues/comments/448952923,https://github.com/hyperledger/caliper/issues/262#issuecomment-448952923,aklenik,"@lenoAlex Timeout also occurs if there was an error during chaincode instantiation. Please ensure that there are no leftover Docker containers and chaincode Docker images (the end script should take care of this).

Then, while you're waiting for the instantiation (but before the timeout), take a look at the container logs of one of the chaincode containers:
`docker logs dev<something>` and its corresponding peer. ",2018-12-20 10:42:58,2018-12-20 10:42:58
https://api.github.com/repos/hyperledger/caliper/issues/262,https://api.github.com/repos/hyperledger/caliper/issues/comments/450312217,https://github.com/hyperledger/caliper/issues/262#issuecomment-450312217,houqinghui,"@lenoAlex i came accross the same question, follow the below steps that solve my problem.
1. run `docker ps ` to check the running docker containers.
2. run `docker rm all the docker names` to delete the running docker containers.
3. run the caliper. ",2018-12-28 07:58:41,2018-12-28 07:58:41
https://api.github.com/repos/hyperledger/caliper/issues/262,https://api.github.com/repos/hyperledger/caliper/issues/comments/452139919,https://github.com/hyperledger/caliper/issues/262#issuecomment-452139919,lenoAlex,"@houqinghui @aklenik after updating to the latest version, the testing successful.",2019-01-08 01:15:42,2019-01-08 01:15:42
https://api.github.com/repos/hyperledger/caliper/issues/262,https://api.github.com/repos/hyperledger/caliper/issues/comments/452184300,https://github.com/hyperledger/caliper/issues/262#issuecomment-452184300,lenoAlex,"it is strange that the timeout problem occurs casually. Sometimes, the testing running successful, but others failed. the version of caliper used for testing is the latest. And others as follows:
caliper@0.1.0 /root/gopath/src/github.com/hyperledger/caliper
├─┬ fabric-client@1.1.0
│ └── grpc@1.10.1  deduped
└── grpc@1.10.1
caliper@0.1.0 /root/gopath/src/github.com/hyperledger/caliper
└── fabric-ca-client@1.1.0",2019-01-08 05:54:16,2019-01-08 05:54:16
https://api.github.com/repos/hyperledger/caliper/issues/262,https://api.github.com/repos/hyperledger/caliper/issues/comments/452199668,https://github.com/hyperledger/caliper/issues/262#issuecomment-452199668,lenoAlex,"after replacing  ""src/contract/fabric/simple/node"" to ""contract/fabric/simple/go"" of the chaincode, the problem solved. as for the reason why chaincode is node type causes casually testing failed is still not clear.",2019-01-08 07:22:50,2019-01-08 07:22:50
https://api.github.com/repos/hyperledger/caliper/issues/262,https://api.github.com/repos/hyperledger/caliper/issues/comments/462696668,https://github.com/hyperledger/caliper/issues/262#issuecomment-462696668,panyu4,"Issues #165 gives the answer. Just run `npm install -g node-gyp node-pre-gyp` before you use command `node benchmark/simple/main.js` to run the simple test. 
If you still have doubt on it, feel free to open it again.",2019-02-12 10:04:46,2019-02-12 10:05:38
https://api.github.com/repos/hyperledger/caliper/issues/259,https://api.github.com/repos/hyperledger/caliper/issues/comments/448950941,https://github.com/hyperledger/caliper/issues/259#issuecomment-448950941,aklenik,Resolved by #260 ,2018-12-20 10:35:05,2018-12-20 10:35:05
https://api.github.com/repos/hyperledger/caliper/issues/258,https://api.github.com/repos/hyperledger/caliper/issues/comments/449017658,https://github.com/hyperledger/caliper/pull/258#issuecomment-449017658,gregdhill,@aklenik done,2018-12-20 14:31:19,2018-12-20 14:31:19
https://api.github.com/repos/hyperledger/caliper/issues/257,https://api.github.com/repos/hyperledger/caliper/issues/comments/449018544,https://github.com/hyperledger/caliper/pull/257#issuecomment-449018544,gregdhill,@aklenik can we get this merged?,2018-12-20 14:34:19,2018-12-20 14:34:19
https://api.github.com/repos/hyperledger/caliper/issues/255,https://api.github.com/repos/hyperledger/caliper/issues/comments/447672270,https://github.com/hyperledger/caliper/issues/255#issuecomment-447672270,aklenik,Resolved by PR #256 ,2018-12-16 20:15:22,2018-12-16 20:15:22
https://api.github.com/repos/hyperledger/caliper/issues/254,https://api.github.com/repos/hyperledger/caliper/issues/comments/447704200,https://github.com/hyperledger/caliper/issues/254#issuecomment-447704200,houqinghui,@lybyyy  do you solve your problem that modify the content in the file at ./src/contract/fabric/simple?,2018-12-17 02:29:11,2018-12-17 02:29:11
https://api.github.com/repos/hyperledger/caliper/issues/254,https://api.github.com/repos/hyperledger/caliper/issues/comments/447727243,https://github.com/hyperledger/caliper/issues/254#issuecomment-447727243,lybyyy,"@houqinghui
thank you, I think I may solve the above problem, but only 4 clients run benchmark(i see client number 5 is defined in the file ./benchmark/simple/config.yaml, the document mentioned 1 is for sorting, and 4 is peer client), I modify the 5 to 9 to test 8 clients but it doesn't work... 
If I want to test 8 or even 32 clients, what should I do?",2018-12-17 05:31:58,2018-12-17 05:31:58
https://api.github.com/repos/hyperledger/caliper/issues/254,https://api.github.com/repos/hyperledger/caliper/issues/comments/449788129,https://github.com/hyperledger/caliper/issues/254#issuecomment-449788129,houqinghui,"@lybyyy   there are 5 clients , 1 orderer for sorting and 4 peer in the default config.yaml. if you want to define more peers, you should do the steps below.
 a.	Before the test, you should regenerate the artifacts based on the network topology, for example certificates and private key.

b.	Modify the docker-compose.yaml according to your network topology, which can start the docker containers of the blockchain nodes.

c.	Modify the fabric network configuration file according to your fabric network, furthermore you can define your own chaincode to test your network.

d.	Run caliper to test your blockchain network.",2018-12-25 02:13:59,2018-12-25 02:13:59
https://api.github.com/repos/hyperledger/caliper/issues/254,https://api.github.com/repos/hyperledger/caliper/issues/comments/462664460,https://github.com/hyperledger/caliper/issues/254#issuecomment-462664460,panyu4,"Since it was resolved, it is closing.",2019-02-12 08:27:56,2019-02-12 08:27:56
https://api.github.com/repos/hyperledger/caliper/issues/253,https://api.github.com/repos/hyperledger/caliper/issues/comments/446209260,https://github.com/hyperledger/caliper/issues/253#issuecomment-446209260,panyu4," When using the fixed rate  with 900 tps and  100000 txNumber  , I had the same error. But it disappeared when the  [fixed-feedback-rate](https://github.com/hyperledger/caliper/blob/gh-pages/docs/RateControllers.md#fixed-feedback-rate) was used.  @nklincoln Is there some array limitations when using rate controllers?",2018-12-11 13:52:06,2018-12-11 13:52:06
https://api.github.com/repos/hyperledger/caliper/issues/253,https://api.github.com/repos/hyperledger/caliper/issues/comments/446273088,https://github.com/hyperledger/caliper/issues/253#issuecomment-446273088,RobertDiebels,"@panyu4 Personally I think there are some problems with the amount of calculations Caliper is trying to do per second. I found that the local-client is trying to calculate `getDefaultTxStats` every second, over the newly finished transactions. Even-though that data is only really used when the test is finished [ [link](https://github.com/hyperledger/caliper/blob/d7760133bed0ae5553ca3a0a353e6d5fe8775d37/src/comm/client/local-client.js#L46 ) ].

My suggestion would be to move transaction statistical analysis to the end and only show a user rudimentary information such as the amount of transactions to sent, the amount submitted, failed and succeeded. Detailed information can be provided after the test.

There are some other things I've noticed but I can't really dive into them right now.",2018-12-11 16:44:40,2018-12-11 16:53:03
https://api.github.com/repos/hyperledger/caliper/issues/253,https://api.github.com/repos/hyperledger/caliper/issues/comments/446288479,https://github.com/hyperledger/caliper/issues/253#issuecomment-446288479,aklenik,@RobertDiebels Long running and high rate testing is something that will require some changes to the data processing part of Caliper. A similar issue was already raised some time ago (#110). But keep these kinds of detailed issues coming so we can come up with an appropriate design 👍 ,2018-12-11 17:27:08,2018-12-11 17:27:08
https://api.github.com/repos/hyperledger/caliper/issues/253,https://api.github.com/repos/hyperledger/caliper/issues/comments/446314901,https://github.com/hyperledger/caliper/issues/253#issuecomment-446314901,RobertDiebels,@aklenik Will do 😄👍.,2018-12-11 18:44:45,2018-12-11 18:44:45
https://api.github.com/repos/hyperledger/caliper/issues/252,https://api.github.com/repos/hyperledger/caliper/issues/comments/446573888,https://github.com/hyperledger/caliper/issues/252#issuecomment-446573888,aklenik,"@Priyanshi52 This is a Fabric side error while building the docker image for the chaincode. Please consult a Fabric-related channel on how to deploy chaincodes on ARM architectures.

(But it looks like your custom peer containers try to build the chaincode image using the `hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6` which doesn't exist in the Hyperledger docker hub repository (https://hub.docker.com/r/hyperledger/fabric-ccenv/tags/))",2018-12-12 12:38:35,2018-12-12 12:38:35
https://api.github.com/repos/hyperledger/caliper/issues/252,https://api.github.com/repos/hyperledger/caliper/issues/comments/446863305,https://github.com/hyperledger/caliper/issues/252#issuecomment-446863305,Priyanshi52,@aklenik I have fabric-ccenv image for ARM architecture but I am not able to locate where I need to change from hyperledger/fabric-ccenv to ARM supporting image can you please help me with that.,2018-12-13 07:00:54,2018-12-13 07:00:54
https://api.github.com/repos/hyperledger/caliper/issues/251,https://api.github.com/repos/hyperledger/caliper/issues/comments/446574763,https://github.com/hyperledger/caliper/issues/251#issuecomment-446574763,aklenik,"@wwb2322079742 Please ask these kinds of questions on the appropriate channels ([mailing list](https://lists.hyperledger.org/g/caliper) or [Rocket.Chat #caliper](https://chat.hyperledger.org/channel/caliper)), and also make the question a little bit more detailed.",2018-12-12 12:41:32,2018-12-12 12:41:32
https://api.github.com/repos/hyperledger/caliper/issues/250,https://api.github.com/repos/hyperledger/caliper/issues/comments/444099148,https://github.com/hyperledger/caliper/issues/250#issuecomment-444099148,nklincoln,"The output is showing you what dockerstats reports, in this case it is showing that more than one core has been used (one core == 100%, two cores == 200% etc) 

The following link will give more information on this:
https://docs.docker.com/engine/reference/commandline/stats/

",2018-12-04 13:28:15,2018-12-04 13:28:15
https://api.github.com/repos/hyperledger/caliper/issues/250,https://api.github.com/repos/hyperledger/caliper/issues/comments/444836866,https://github.com/hyperledger/caliper/issues/250#issuecomment-444836866,aklenik,@zcyzhu For general questions please use the Rocket.Chat [#caliper](https://chat.hyperledger.org/channel/caliper) channel or the [Caliper mailing list](https://lists.hyperledger.org/g/caliper). GitHub issues should only be raised for confirmed bugs or enhancement suggestions.,2018-12-06 11:12:58,2018-12-06 11:12:58
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/444099680,https://github.com/hyperledger/caliper/issues/249#issuecomment-444099680,nklincoln,based on the existence of #250 - I'm assuming that you have managed to get the benchmark running and so this issue can be closed?,2018-12-04 13:29:49,2018-12-04 13:29:49
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/444317771,https://github.com/hyperledger/caliper/issues/249#issuecomment-444317771,houqinghui,"@zcyzhu  it means that the network config file is not parsed rightly , or the network config file donot have the property 'network'.  first check the newwork config file, if the file is complete, you can run the benchmark again.  
if you have solved the error, please share the way to solve the problem.",2018-12-05 01:00:31,2018-12-05 01:00:31
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/444348999,https://github.com/hyperledger/caliper/issues/249#issuecomment-444348999,zcyzhu,"@nklincoln This failed to test on cd caplier, and my success was tested on cd caliper/benchmark/composer",2018-12-05 03:49:18,2018-12-05 03:49:18
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/444473007,https://github.com/hyperledger/caliper/issues/249#issuecomment-444473007,chenshiok,"I got this error too. Error message:
`ubuntu@ubuntu02:~/caliper/benchmark/simple$ node ./main.js -c config-test.json -n fabric-test.json
info: [bench-flow.js]: ####### Caliper Test ######
error: [bench-flow.js]: Error: TypeError: Cannot read property 'network' of undefined
    at Object.module.exports.init (/home/ubuntu/caliper/src/fabric/util.js:140:15)
    at Fabric.init (/home/ubuntu/caliper/src/fabric/fabric.js:39:14)
    at Blockchain.init (/home/ubuntu/caliper/src/comm/blockchain.js:66:26)
    at Object.module.exports.run (/home/ubuntu/caliper/src/comm/bench-flow.js:313:26)
    at /home/ubuntu/caliper/benchmark/simple/main.js:78:29
    at main (/home/ubuntu/caliper/benchmark/simple/main.js:82:7)
    at Object.<anonymous> (/home/ubuntu/caliper/benchmark/simple/main.js:85:1)
    at Module._compile (module.js:652:30)
    at Object.Module._extensions..js (module.js:663:10)
    at Module.load (module.js:565:32)
`
And my network file:
`{
    ""caliper"" : {
        ""blockchain"": ""fabric"",
        ""command"" : {
         }
    },
    ""fabric"": {
        ""cryptodir"": ""network/fabric/config/crypto-config"",
        ""network"" : {
            ""orderer"" : {
                ""url"": ""grpcs://localhost:7050"",
                ""mspid"": ""OrdererMSP"",
  ...
`",2018-12-05 12:46:30,2018-12-05 12:46:30
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/444705774,https://github.com/hyperledger/caliper/issues/249#issuecomment-444705774,houqinghui,"@chenshiok you can try the command `node main.js -c config-test.json -n fabric-test.json`, now we change the config file format from json to yaml, you can folk the latest version.  
the value of the key command is blank, why?",2018-12-06 00:42:36,2018-12-06 00:43:52
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/444713575,https://github.com/hyperledger/caliper/issues/249#issuecomment-444713575,zcyzhu,"![1544059256 1](https://user-images.githubusercontent.com/38487249/49554727-48d1e480-f938-11e8-82ff-5ced07482497.jpg)
There is no fabric-related configuration file in the benchmark/simple file in the latest code I downloaded.
",2018-12-06 01:23:16,2018-12-06 01:23:16
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/444717754,https://github.com/hyperledger/caliper/issues/249#issuecomment-444717754,houqinghui,"@zcyzhu  
![image](https://user-images.githubusercontent.com/13465812/49555621-78ceb700-f93b-11e8-85f9-0fdb9ab1b701.png)
now  the network config is moved to other directory.
",2018-12-06 01:44:47,2018-12-06 01:44:47
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/444740970,https://github.com/hyperledger/caliper/issues/249#issuecomment-444740970,chenshiok,"@houqinghui Because I already start fabric network, so I set the command empty. And I tried the command ""node main.js -c config-test.json -n fabric-test.json"", but still not work. Maybe config and network file shoud  convert to yaml?",2018-12-06 04:02:15,2018-12-06 04:02:15
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/444756307,https://github.com/hyperledger/caliper/issues/249#issuecomment-444756307,houqinghui,"@chenshiok we convert the config file from json to jaml at the latest version, you can try the command `node main.js`  to use the default config file.",2018-12-06 05:49:57,2018-12-06 05:49:57
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/445154812,https://github.com/hyperledger/caliper/issues/249#issuecomment-445154812,chenshiok,"@houqinghui My test on fabric 1.2.0, so I installed fabric-client@1.2.0 and fabric-ca-client@1.2.0. I guess  may be the fabric-client version's problem, because fabric-client@1.1.0 is ok.",2018-12-07 08:08:50,2018-12-07 08:08:50
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/447232641,https://github.com/hyperledger/caliper/issues/249#issuecomment-447232641,lichanan,"> @houqinghui My test on fabric 1.2.0, so I installed fabric-client@1.2.0 and fabric-ca-client@1.2.0. I guess may be the fabric-client version's problem, because fabric-client@1.1.0 is ok.
不支持1.2的网络",2018-12-14 06:51:31,2018-12-14 06:51:31
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/447664097,https://github.com/hyperledger/caliper/issues/249#issuecomment-447664097,aklenik,"@chenshiok @lichanan For some unknown reason, the configuration file isn't loaded by the 1.2 SDK. I've worked around this issue, submitting it tonight/tomorrow morning.",2018-12-16 18:14:06,2018-12-16 18:14:06
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/447700636,https://github.com/hyperledger/caliper/issues/249#issuecomment-447700636,lichanan,"> @chenshiok @lichanan For some unknown reason, the configuration file isn't loaded by the 1.2 SDK. I've worked around this issue, submitting it tonight/tomorrow morning.
 it's also dose not work on fabric1.2 
",2018-12-17 02:02:13,2018-12-17 02:02:13
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/448961756,https://github.com/hyperledger/caliper/issues/249#issuecomment-448961756,aklenik,PR #260 solves the config load problem for SDK 1.2. @lichanan @chenshiok @zcyzhu Can you confirm this?,2018-12-20 11:15:48,2018-12-20 11:15:48
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/449208962,https://github.com/hyperledger/caliper/issues/249#issuecomment-449208962,lichanan,"> PR #260 solves the config load problem for SDK 1.2. @lichanan @chenshiok @zcyzhu Can you confirm this?

thank you for your contribution,i tried , on Instantiating chaincode phase ,it's timeout",2018-12-21 01:44:08,2018-12-21 01:46:10
https://api.github.com/repos/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/comments/449586941,https://github.com/hyperledger/caliper/issues/249#issuecomment-449586941,aklenik,"@lichanan But that means you get past the `network` not found error. Chaincode instantiation timeout can mean an error during the `Init` function of your chaincode. Check the chaincode container logs (before the timeout occurs, because then the container is cleaned up).",2018-12-22 17:44:52,2018-12-22 17:44:52
https://api.github.com/repos/hyperledger/caliper/issues/248,https://api.github.com/repos/hyperledger/caliper/issues/comments/444733152,https://github.com/hyperledger/caliper/pull/248#issuecomment-444733152,panyu4,LGTM :),2018-12-06 03:10:46,2018-12-06 03:10:46
https://api.github.com/repos/hyperledger/caliper/issues/247,https://api.github.com/repos/hyperledger/caliper/issues/comments/444519465,https://github.com/hyperledger/caliper/issues/247#issuecomment-444519465,houqinghui,"@lenoAlex   hello, the throughout TPS  = Success Tx / time. you can refer to  the function processResult and getResultValue at the  [https://github.com/hyperledger/caliper/blob/master/src/comm/bench-flow.js](url) to dive the code.",2018-12-05 15:12:22,2018-12-05 15:13:21
https://api.github.com/repos/hyperledger/caliper/issues/247,https://api.github.com/repos/hyperledger/caliper/issues/comments/449216558,https://github.com/hyperledger/caliper/issues/247#issuecomment-449216558,houqinghui,"Caliper will record the submitting time and committing time (the time when the tx is committed on the ledger or when the failure occurred) for each tx.
So the send rate is calculated by (Succ+Fail) / (last submitting time - first submitting time).
The throughput is calculated by Succ/(last committing time - first submitting time), here only successful committed txs will be calculated.
@lenoAlex ",2018-12-21 02:09:20,2018-12-21 02:09:20
https://api.github.com/repos/hyperledger/caliper/issues/247,https://api.github.com/repos/hyperledger/caliper/issues/comments/449309310,https://github.com/hyperledger/caliper/issues/247#issuecomment-449309310,lenoAlex,@houqinghui Got it. thanks for your reply.,2018-12-21 08:28:48,2018-12-21 08:28:48
https://api.github.com/repos/hyperledger/caliper/issues/247,https://api.github.com/repos/hyperledger/caliper/issues/comments/449587002,https://github.com/hyperledger/caliper/issues/247#issuecomment-449587002,aklenik,"Since the issue is a question, and it's answered, I'm closing it.",2018-12-22 17:46:02,2018-12-22 17:46:02
https://api.github.com/repos/hyperledger/caliper/issues/246,https://api.github.com/repos/hyperledger/caliper/issues/comments/446186250,https://github.com/hyperledger/caliper/pull/246#issuecomment-446186250,gregdhill,"Great! I'll write up the documentation this week (I presume just on the gh-pages branch), and hopefully we can review the smart contracting integration over the next few weeks.",2018-12-11 12:31:39,2018-12-11 12:31:39
https://api.github.com/repos/hyperledger/caliper/issues/245,https://api.github.com/repos/hyperledger/caliper/issues/comments/443171792,https://github.com/hyperledger/caliper/issues/245#issuecomment-443171792,aklenik,"@dattajadhav44 Can you provide more details about your network? It looks like a misconfigured endpoint address. What were the exacts steps you did (crypto/channel config modification, docker network, etc.)?",2018-11-30 11:10:55,2018-11-30 11:10:55
https://api.github.com/repos/hyperledger/caliper/issues/245,https://api.github.com/repos/hyperledger/caliper/issues/comments/443176844,https://github.com/hyperledger/caliper/issues/245#issuecomment-443176844,dattajadhav44,"Hi @aklenik . Below are the steps that i followed.
1. removed the Org2,peers and other related stuff.
2. generated the crypto certificate for newly added peers(5 peers, no anchor peer)
    help of this steps. 
     a. ../bin/cryptogen generate --config=./crypto-config.yaml
     b. export FABRIC_CFG_PATH=$PWD
     c. ../bin/configtxgen -profile TwoOrgsOrdererGenesis -outputBlock ./channel-artifacts/genesis.block
     4. export CHANNEL_NAME=mychannel  && ../bin/configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME
3. then ran the ./runAPI.sh. no error 
4. then ran ./testAPIs.sh...got error while creating channel

Please let me know if should i provide the file source code.",2018-11-30 11:32:32,2018-11-30 11:32:32
https://api.github.com/repos/hyperledger/caliper/issues/245,https://api.github.com/repos/hyperledger/caliper/issues/comments/443179481,https://github.com/hyperledger/caliper/issues/245#issuecomment-443179481,aklenik,"@dattajadhav44 As I see, you're using the example of the `fabric-samples` repository. How do you exactly use Caliper for testing the `balance-transfer` example?
(Since it's not part of the Caliper sample benchmarks, could you share the Caliper-related configuration files as GitHub gists?)",2018-11-30 11:44:14,2018-11-30 11:45:03
https://api.github.com/repos/hyperledger/caliper/issues/245,https://api.github.com/repos/hyperledger/caliper/issues/comments/443183114,https://github.com/hyperledger/caliper/issues/245#issuecomment-443183114,dattajadhav44,"Hi @aklenik  Yes, i am using fabric-sample, balance transfer. i didnt get your question quite. I have used the steps which are the README.md file.
1. 1st terminal ./runApp.sh
2. 2nd terminal ./testAPI.sh 
Have i answered your question. i am using base of the fabric sample project, just modified it.",2018-11-30 12:00:17,2018-11-30 12:00:17
https://api.github.com/repos/hyperledger/caliper/issues/245,https://api.github.com/repos/hyperledger/caliper/issues/comments/443544957,https://github.com/hyperledger/caliper/issues/245#issuecomment-443544957,aklenik,"@dattajadhav44 Since you raised this issue in the Hyperledger Caliper project, I assumed you use the `balance-transfer` example with Caliper. If that's not the case, please close this issue and ask around at the appropriate channels/lists/repos. But if you use Caliper, then share the related configuration files for the benchmark.",2018-12-02 21:43:38,2018-12-02 21:43:38
https://api.github.com/repos/hyperledger/caliper/issues/245,https://api.github.com/repos/hyperledger/caliper/issues/comments/443633439,https://github.com/hyperledger/caliper/issues/245#issuecomment-443633439,dattajadhav44,Thanks @aklenik ,2018-12-03 08:50:58,2018-12-03 08:50:58
https://api.github.com/repos/hyperledger/caliper/issues/243,https://api.github.com/repos/hyperledger/caliper/issues/comments/443077790,https://github.com/hyperledger/caliper/issues/243#issuecomment-443077790,houqinghui,@zcyzhu  are you sure that you execute the command `npm list grpc` to make sure the version of grpc?,2018-11-30 03:21:57,2018-11-30 03:21:57
https://api.github.com/repos/hyperledger/caliper/issues/243,https://api.github.com/repos/hyperledger/caliper/issues/comments/443101274,https://github.com/hyperledger/caliper/issues/243#issuecomment-443101274,zcyzhu,"zcy@ubuntu:~/new project/caliper$ npm list grpc
caliper@0.1.0 /home/zcy/new project/caliper
└─┬ fabric-client@1.1.0
  └── grpc@1.10.1",2018-11-30 06:04:31,2018-11-30 06:04:31
https://api.github.com/repos/hyperledger/caliper/issues/243,https://api.github.com/repos/hyperledger/caliper/issues/comments/443102361,https://github.com/hyperledger/caliper/issues/243#issuecomment-443102361,zcyzhu,"I deleted the source file, then re-created one, modified package.json, executed `npm install`, now it becomes:
```
zcy@ubuntu:~/new project/caliper$ sudo node ./benchmark/simple/main.js
info: [bench-flow.js]: ####### Caliper Test ######
Bus error

```
@houqinghui 
Are you working at Huawei?",2018-11-30 06:11:29,2018-11-30 06:48:02
https://api.github.com/repos/hyperledger/caliper/issues/243,https://api.github.com/repos/hyperledger/caliper/issues/comments/443586985,https://github.com/hyperledger/caliper/issues/243#issuecomment-443586985,houqinghui,"@zcyzhu  do you solve the error? before somebody meet the same error, make sure the  grpc version is right to solve the problem. if you still can not solve the error, please tell me the environment in your machine, such as the version of node.",2018-12-03 04:39:59,2019-04-03 02:26:22
https://api.github.com/repos/hyperledger/caliper/issues/243,https://api.github.com/repos/hyperledger/caliper/issues/comments/443600405,https://github.com/hyperledger/caliper/issues/243#issuecomment-443600405,zcyzhu,"I have problems testing on the fabric, but there is no problem testing on composer, because I wrote the program with composer, so the problem is not very big for me. And I am a graduate student. I am also preparing to go to work in Huawei. I still need you to help me in the future.
Can you talk privately? QQ or mail, because the blockchain still has many questions, please ask
@houqinghui 
",2018-12-03 06:16:08,2018-12-03 06:17:40
https://api.github.com/repos/hyperledger/caliper/issues/243,https://api.github.com/repos/hyperledger/caliper/issues/comments/444835488,https://github.com/hyperledger/caliper/issues/243#issuecomment-444835488,aklenik,"@zcyzhu I see you opened another issue for the bus error. If the grpc issue is solved, you can close this one.",2018-12-06 11:07:20,2018-12-06 11:07:20
https://api.github.com/repos/hyperledger/caliper/issues/243,https://api.github.com/repos/hyperledger/caliper/issues/comments/462696780,https://github.com/hyperledger/caliper/issues/243#issuecomment-462696780,feihujiang,"This is an inactive issue for long time. So close it. @zcyzhu  If you still have the same problem, reopen it.",2019-02-12 10:05:08,2019-02-12 10:05:08
https://api.github.com/repos/hyperledger/caliper/issues/242,https://api.github.com/repos/hyperledger/caliper/issues/comments/444858940,https://github.com/hyperledger/caliper/issues/242#issuecomment-444858940,houqinghui,"@ldesrosi you will find the log information at the directory ""log/"",  then please run the command `npm install ajv` to make sure the module exists.",2018-12-06 12:44:03,2018-12-06 12:44:03
https://api.github.com/repos/hyperledger/caliper/issues/242,https://api.github.com/repos/hyperledger/caliper/issues/comments/446873904,https://github.com/hyperledger/caliper/issues/242#issuecomment-446873904,clumsky,"@ldesrosi  You can run the command npm install in the caliper folder, then you will have module ajv.",2018-12-13 07:51:24,2018-12-13 07:51:24
https://api.github.com/repos/hyperledger/caliper/issues/242,https://api.github.com/repos/hyperledger/caliper/issues/comments/469420135,https://github.com/hyperledger/caliper/issues/242#issuecomment-469420135,aklenik,@ldesrosi Haven't run into this issue recently. Can you still reproduce the issue?,2019-03-04 21:01:39,2019-03-04 21:01:39
https://api.github.com/repos/hyperledger/caliper/issues/241,https://api.github.com/repos/hyperledger/caliper/issues/comments/462659641,https://github.com/hyperledger/caliper/issues/241#issuecomment-462659641,panyu4,"@HenryGits , Now Caliper is able to support fabric-v1.1 , 1.2 and 1.3+. You can fetch a new version of Caliper to do some tests. This issue is closing.",2019-02-12 08:13:04,2019-02-12 08:13:04
https://api.github.com/repos/hyperledger/caliper/issues/239,https://api.github.com/repos/hyperledger/caliper/issues/comments/442802457,https://github.com/hyperledger/caliper/pull/239#issuecomment-442802457,aklenik,"@houqinghui Please resolve the two conflicts (`config-composer.json` was probably modified by another PR, so modify the related yaml config, and you can delete the json version; the `monitor.js` file was moved into an other directory)",2018-11-29 11:36:44,2018-11-29 11:36:44
https://api.github.com/repos/hyperledger/caliper/issues/237,https://api.github.com/repos/hyperledger/caliper/issues/comments/442465126,https://github.com/hyperledger/caliper/pull/237#issuecomment-442465126,nklincoln,good spot! Updated and re-pushed 👍 ,2018-11-28 14:27:20,2018-11-28 14:27:20
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/442286032,https://github.com/hyperledger/caliper/pull/236#issuecomment-442286032,panyu4,@nklincoln @feihujiang @aklenik would you please review this pr?,2018-11-28 01:41:29,2018-11-28 01:41:29
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/442292832,https://github.com/hyperledger/caliper/pull/236#issuecomment-442292832,panyu4,"@nitesh7sid , would you please add your documentations on how to use it?",2018-11-28 02:15:51,2018-11-28 02:15:51
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/442310985,https://github.com/hyperledger/caliper/pull/236#issuecomment-442310985,nitesh7sid,@panyu4 since the documentation has moved to a different branch I will have to raise another PR for that. Will do that once this PR is merged.,2018-11-28 03:57:45,2018-11-28 04:04:19
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/449807473,https://github.com/hyperledger/caliper/pull/236#issuecomment-449807473,panyu4,"@nitesh7sid , there are a lot of others' commits . It would be better to remove them from your pr. I've sent an email to you about how to handle it. If there is any problems, please let me know. ",2018-12-25 06:03:03,2018-12-25 06:03:03
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/451074884,https://github.com/hyperledger/caliper/pull/236#issuecomment-451074884,panyu4,"@nitesh7sid , I left some minor comments under your lines.",2019-01-03 07:56:39,2019-01-03 07:56:39
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/451324696,https://github.com/hyperledger/caliper/pull/236#issuecomment-451324696,panyu4,"@nitesh7sid , I tested it again. The result is strange. 
+------+------+------+------+-----------+-------------+-------------+-------------+------------+
| Test | Name | Succ | Fail | Send Rate | Max Latency | Min Latency | Avg Latency | Throughput |
|------|------|------|------|-----------|-------------|-------------|-------------|------------|
| 1    | open | 587  | 0    | 38.7 tps  | 0.00 s      | -1.35 s     | -0.73 s     | 40.7 tps   |
+------+------+------+------+-----------+-------------+-------------+-------------+------------+

PS: Please add a documentation about this pr. 
",2019-01-04 00:47:50,2019-01-04 03:20:41
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/451358785,https://github.com/hyperledger/caliper/pull/236#issuecomment-451358785,nitesh7sid,"Is there any change in the tps and latency calculation? I really don't understand the new changes that is added to caliper. It's not yet documented well. The network setup config has been moved somewhere else, also no clear information on why only one round is executed. The new changes to caliper has affected my PR a lot and the documentation is still outdated",2019-01-04 05:52:10,2019-01-04 05:52:47
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/451366799,https://github.com/hyperledger/caliper/pull/236#issuecomment-451366799,panyu4,"@nitesh7sid , the round setting can be found  [here](https://hyperledger.github.io/caliper/docs/2_Architecture.html). If there is anything unclear, please let me know. The above two lines may have some relations with the result.",2019-01-04 07:01:33,2019-01-04 07:01:33
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/452359934,https://github.com/hyperledger/caliper/pull/236#issuecomment-452359934,nitesh7sid,"Hi @panyu4 when i execute the expt using `node main.js config.yaml` the test finishes after one round. here is the output:
```
root:~/caliper/benchmark/simple# node main.js config.yaml
info: [bench-flow.js]: ####### Caliper Test ######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compoCreating orderer.example.com ... done
Creating network ""2org1peergoleveldb_default"" with the default driver
Creating peer0.org2.example.com ... done
Creating ca.org2.example.com ...
Creating orderer.example.com ...
Creating peer0.org2.example.com ...
Creating peer0.org1.example.com ...
info: [create-channel.js]: Creating mychannel...
info: [create-channel.js]: Created mychannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining mychannel...
info: [join-channel.js]: Successfully joined peerOrg1's peers to mychannel
info: [join-channel.js]: Successfully joined peerOrg2's peers to mychannel
info: [join-channel.js]: Successfully joined mychannel
info: [install-chaincode.js]: Installing chaincodes...
info: [packager/Node.js]: packaging Node from /root/caliper/src/contract/fabric/marbles-norichquery/node
info: [packager/Node.js]: packaging Node from /root/caliper/src/contract/fabric/marbles-norichquery/node
info: [install-chaincode.js]: Installed chaincode marbles successfully in all peers
info: [packager/Node.js]: packaging Node from /root/caliper/src/contract/fabric/simple/node
info: [packager/Node.js]: packaging Node from /root/caliper/src/contract/fabric/simple/node
info: [install-chaincode.js]: Installed chaincode simple successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode marbles successfully
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode simple successfully
info: [instantiate-chaincode.js]: Sleeping 5s...
info: [bench-flow.js]: Started monitor successfully
info: [bench-flow.js]: ###### Testing 'open' ######
info: [bench-flow.js]: ------ Test round 1 ------
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 1 Succ: 0 Fail:0 Unfinished:1
info: [demo.js]: [Transaction Info] - Submitted: 8 Succ: 0 Fail:0 Unfinished:8
info: [demo.js]: [Transaction Info] - Submitted: 50 Succ: 20 Fail:0 Unfinished:30
info: [demo.js]: [Transaction Info] - Submitted: 75 Succ: 39 Fail:0 Unfinished:36
info: [demo.js]: [Transaction Info] - Submitted: 101 Succ: 75 Fail:0 Unfinished:26
info: [demo.js]: [Transaction Info] - Submitted: 128 Succ: 97 Fail:0 Unfinished:31
info: [demo.js]: [Transaction Info] - Submitted: 156 Succ: 125 Fail:0 Unfinished:31
info: [demo.js]: [Transaction Info] - Submitted: 185 Succ: 151 Fail:0 Unfinished:34
info: [demo.js]: [Transaction Info] - Submitted: 219 Succ: 189 Fail:0 Unfinished:30
info: [demo.js]: [Transaction Info] - Submitted: 254 Succ: 227 Fail:0 Unfinished:27
info: [demo.js]: [Transaction Info] - Submitted: 289 Succ: 251 Fail:0 Unfinished:38
info: [demo.js]: [Transaction Info] - Submitted: 329 Succ: 286 Fail:0 Unfinished:43
info: [demo.js]: [Transaction Info] - Submitted: 378 Succ: 347 Fail:0 Unfinished:31
info: [demo.js]: [Transaction Info] - Submitted: 420 Succ: 406 Fail:0 Unfinished:14
info: [demo.js]: [Transaction Info] - Submitted: 467 Succ: 410 Fail:0 Unfinished:57
info: [demo.js]: [Transaction Info] - Submitted: 498 Succ: 492 Fail:0 Unfinished:6
info: [demo.js]: [Transaction Info] - Submitted: 498 Succ: 498 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 498 Succ: 498 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 498 Succ: 498 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 498 Succ: 498 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 498 Succ: 498 Fail:0 Unfinished:0
info: [bench-flow.js]: ###test result:###
info: [bench-flow.js]:
+------+------+------+-----------+-------------+-------------+-------------+------------+
| Name | Succ | Fail | Send Rate | Max Latency | Min Latency | Avg Latency | Throughput |
|------|------|------|-----------|-------------|-------------|-------------|------------|
| open | 498  | 0    | 30.6 tps  | 0.37 s      | -2.43 s     | -0.96 s     | 32.6 tps   |
+------+------+------+-----------+-------------+-------------+-------------+------------+

info: [bench-flow.js]: ### resource stats ###
info: [bench-flow.js]:
+---------+-----------------------------------+-------------+-------------+----------+----------+------------+-------------+-----------+------------+
| TYPE    | NAME                              | Memory(max) | Memory(avg) | CPU(max) | CPU(avg) | Traffic In | Traffic Out | Disc Read | Disc Write |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Process | node local-client.js(avg)         | 101.4MB     | 100.3MB     | 56.38%   | 23.88%   | -          | -           | -         | -          |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker  | dev-peer0.org1.example.co...le-v0 | 45.3MB      | 43.3MB      | 36.30%   | 17.12%   | 996.5KB    | 483.7KB     | 0B        | 0B         |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker  | dev-peer0.org2.example.co...le-v0 | 45.7MB      | 43.8MB      | 41.49%   | 17.93%   | 994.0KB    | 474.3KB     | 0B        | 0B         |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker  | dev-peer0.org2.example.co...es-v1 | 48.9MB      | 48.9MB      | 0.14%    | 0.01%    | 0B         | 0B          | 0B        | 0B         |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker  | dev-peer0.org1.example.co...es-v1 | 49.0MB      | 49.0MB      | 0.13%    | 0.02%    | 0B         | 0B          | 0B        | 0B         |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker  | peer0.org1.example.com            | 273.9MB     | 272.1MB     | 96.06%   | 48.39%   | 3.3MB      | 10.7MB      | 0B        | 6.9MB      |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker  | peer0.org2.example.com            | 273.6MB     | 271.7MB     | 100.07%  | 47.42%   | 3.2MB      | 3.5MB       | 0B        | 6.9MB      |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker  | ca.org2.example.com               | 7.3MB       | 7.3MB       | 0.00%    | 0.00%    | 0B         | 0B          | 0B        | 0B         |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker  | orderer.example.com               | 18.7MB      | 16.2MB      | 50.86%   | 23.57%   | 2.3MB      | 4.3MB       | 0B        | 4.7MB      |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker  | ca.org1.example.com               | 7.3MB       | 7.3MB       | 0.00%    | 0.00%    | 0B         | 0B          | 0B        | 0B         |
+---------+-----------------------------------+-------------+-------------+----------+----------+------------+-------------+-----------+------------+

info: [bench-flow.js]: ------ Passed 'open' testing ------
info: [bench-flow.js]: ---------- Finished Test ----------

info: [bench-flow.js]: ###all test results:###
info: [bench-flow.js]:
+------+------+------+------+-----------+-------------+-------------+-------------+------------+
| Test | Name | Succ | Fail | Send Rate | Max Latency | Min Latency | Avg Latency | Throughput |
|------|------|------|------|-----------|-------------|-------------|-------------|------------|
| 1    | open | 498  | 0    | 30.6 tps  | 0.37 s      | -2.43 s     | -0.96 s     | 32.6 tps   |
+------+------+------+------+-----------+-------------+-------------+-------------+------------+

info: [monitor.js]:
 ### resource stats (maximum) ###
info: [monitor.js]:
+---------+-----------------------------------+-------------+----------+------------+-------------+-----------+------------+
| TYPE    | NAME                              | Memory(max) | CPU(max) | Traffic In | Traffic Out | Disc Read | Disc Write |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Process | node local-client.js(avg)         | 101.4MB     | 56.38%   | -          | -           | -         | -          |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker  | dev-peer0.org1.example.co...le-v0 | 45.3MB      | 36.30%   | 996.5KB    | 483.7KB     | 0B        | 0B         |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker  | dev-peer0.org2.example.co...le-v0 | 45.7MB      | 41.49%   | 994.0KB    | 474.3KB     | 0B        | 0B         |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker  | dev-peer0.org2.example.co...es-v1 | 48.9MB      | 0.14%    | 0B         | 0B          | 0B        | 0B         |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker  | dev-peer0.org1.example.co...es-v1 | 49.0MB      | 0.13%    | 0B         | 0B          | 0B        | 0B         |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker  | peer0.org1.example.com            | 273.9MB     | 96.06%   | 3.3MB      | 10.7MB      | 0B        | 6.9MB      |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker  | peer0.org2.example.com            | 273.6MB     | 100.07%  | 3.2MB      | 3.5MB       | 0B        | 6.9MB      |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker  | ca.org2.example.com               | 7.3MB       | 0.00%    | 0B         | 0B          | 0B        | 0B         |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker  | orderer.example.com               | 18.7MB      | 50.86%   | 2.3MB      | 4.3MB       | 0B        | 4.7MB      |
|---------|-----------------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker  | ca.org1.example.com               | 7.3MB       | 0.00%    | 0B         | 0B          | 0B        | 0B         |
+---------+-----------------------------------+-------------+----------+------------+-------------+-----------+------------+

info: [bench-flow.js]: Generated report at /root/caliper/benchmark/simple/report-20190108T155646.html
info: [demo.js]: [Transaction Info] - Submitted: 498 Succ: 498 Fail:0 Unfinished:0
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
info: [client-util.js]: Client exited
info: [client-util.js]: Client exited
info: [client-util.js]: Client exited
info: [client-util.js]: Client exited
info: [client-util.js]: Client exited
error: [monitor-docker.js]: TypeError: Cannot read property 'id' of undefined
Stopping peer0.org1.example.com ... done
Stopping peer0.org2.example.com ... done
Stopping ca.org2.example.com    ... done
Stopping orderer.example.com    ... done
Stopping ca.org1.example.com    ... done
Removing peer0.org1.example.com ... done
Removing peer0.org2.example.com ... done
Removing ca.org2.example.com    ... done
Removing orderer.example.com    ... done
Removing ca.org1.example.com    ... done
Removing network 2org1peergoleveldb_default
7832a5bb9664
c888f61e8114
6fe6295b3307
4c8c24e66ed5
Untagged: dev-peer0.org1.example.com-simple-v0-b845a7f88df0bd3a47a573b80bd5cfab0986278f024e8667a3c90fb0eb1f4d6d:latest
Deleted: sha256:daace75d85f9fccab76d5ad39a8097d4b4851e2ba4de48005ae9cea319630368
Deleted: sha256:bea5f7624271d44343dce560a14f10f287f286799de94c5119082f2d752cbe54
Deleted: sha256:94d425877b1d0a9fa7c1715b45b24e8b0a9b23fdf76feada26fbe3340ab1aae8
Deleted: sha256:2e9afcf41d1838973859f5607a06fc94f04fc98efad1db80a8a117852f3b7035
Untagged: dev-peer0.org2.example.com-simple-v0-7ebccf7a7fd05d8ac0a55ea61f1f0397ca89de629cef5f537c0950ecf302d423:latest
Deleted: sha256:acbba1a771c6ea839260519c68e91ff24da77ac4af3442cbe8450c19668a0ea6
Deleted: sha256:14bbb2f49d56be1a63cd89deb45d4536e813fe6b348552a9b9ad270281ceee5f
Deleted: sha256:7592ead5b1e8b2b65a7051c6667850000acf25c32e34a1bc5e1618fb17fc2dc8
Deleted: sha256:7e9084f5f0ac7d5c3b832fb4019e8dcbe9f72cbfb95c713bd90043c9975a3358
Untagged: dev-peer0.org2.example.com-marbles-v1-8e5a5a715f5ee1c76ff9c102dcb5c1937a2ef342fe0dd00b48d2f1a58faa09a2:latest
Deleted: sha256:525d2de4827faad6a8ebbc4a6ac80f341bcba5b8cb2359ff7fa15157029612b5
Deleted: sha256:2751a59cf3c4538b1125a7136a67f4118ac9ec5dc35b09af3a6d98d573116244
Deleted: sha256:5c186999e0f61f66db27e417a5dded26a4045d51aa49f573ddd0f935b70b52f5
Deleted: sha256:01751b2672030fdf8ddfbc53b3c240eb5e995eaa5b4744198a9c5b5aeeb7bd5f
Untagged: dev-peer0.org1.example.com-marbles-v1-a6cb10d46568463c6a5d95462ec8ed19eaa3145c0b63a2d905224fec13ad90ce:latest
Deleted: sha256:0b56cf5cff9ec6be75ce1def65795f668075c336c8ac4db3e72060406106b596
Deleted: sha256:8d5e25b4ffed753583beb14b46b008fb94a0c872f9e483753b591b2c79f75294
Deleted: sha256:ed4953b35acc155c39e267d2c824df5ca68f69de2a76df9bf4833856ecf40b09
Deleted: sha256:1af225d7ddf0c651c72b0c5b478dd0fc2c0257167cce7e27d242914a1660f813
info: [bench-flow.js]:

#######################################
# Test summary: 1 succeeded, 0 failed #
#######################################
```
Not sure why only 1 round is executed",2019-01-08 16:23:24,2019-01-08 16:23:43
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/452373525,https://github.com/hyperledger/caliper/pull/236#issuecomment-452373525,nitesh7sid,Resolved it by changing the command to `node main.js -c config.yaml` Thanks,2019-01-08 16:59:44,2019-01-08 16:59:44
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/452477855,https://github.com/hyperledger/caliper/pull/236#issuecomment-452477855,nitesh7sid,Hi @panyu i have fixed the latency issue. Please review,2019-01-08 22:39:39,2019-01-08 22:40:04
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/452575418,https://github.com/hyperledger/caliper/pull/236#issuecomment-452575418,panyu4,"@nitesh7sid , I'll do some tests.",2019-01-09 05:19:17,2019-01-09 05:19:17
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453437065,https://github.com/hyperledger/caliper/pull/236#issuecomment-453437065,panyu4,"@nitesh7sid ， the drm 'query' test always fail. And sometimes, it shows there is a memory issue. ",2019-01-11 08:55:53,2019-01-11 08:55:53
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453440025,https://github.com/hyperledger/caliper/pull/236#issuecomment-453440025,nitesh7sid,@panyu For query it's normal caliper non mq more. The PR code is not run against query.,2019-01-11 09:03:51,2019-01-11 09:04:18
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453441338,https://github.com/hyperledger/caliper/pull/236#issuecomment-453441338,panyu4,@nitesh7sid ， why does this pr not support query test?,2019-01-11 09:07:17,2019-01-11 09:07:17
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453441857,https://github.com/hyperledger/caliper/pull/236#issuecomment-453441857,nitesh7sid,It is only for transactions not for queries. Bcoz block events are generated only for transactions and not for queries.,2019-01-11 09:08:52,2019-01-11 09:08:52
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453456729,https://github.com/hyperledger/caliper/pull/236#issuecomment-453456729,panyu4,"@nitesh7sid , what I mean is that this pr should not affect the query test. Now the marbles and drm query tests are failed, while the simple query tests are successful. We should fix this issue and let it pass these query tests. ",2019-01-11 09:49:09,2019-01-11 09:49:09
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453457921,https://github.com/hyperledger/caliper/pull/236#issuecomment-453457921,nitesh7sid,@panyu4 But the query tests does not run my code so i am not sure why they are failing. can u confirm that the keys you are trying to query are actually stored in the leveldb or couchdb? also can u pls paste the output?,2019-01-11 09:52:19,2019-01-11 09:53:34
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453458968,https://github.com/hyperledger/caliper/pull/236#issuecomment-453458968,panyu4,"@nitesh7sid , the master branch's query tests are ok. We need to check if there are some problems on the functions txUpdate and pushUpdateForMQ.",2019-01-11 09:55:09,2019-01-11 09:55:09
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453477266,https://github.com/hyperledger/caliper/pull/236#issuecomment-453477266,nitesh7sid,@panyu4 i think it could be because of changing the PR back to make `with-mq` flag global. iirc @haojun had asked to set the flag specific to the type of transaction. so for query the flag would be false and the normal caliper would get executed. ??,2019-01-11 10:45:56,2019-01-11 10:49:11
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453710727,https://github.com/hyperledger/caliper/pull/236#issuecomment-453710727,panyu4,"@nitesh7sid , below is the output. It was tested under the drm. The network file is `/network/fabric-v1.1/2org1peergoleveldb/fabric-go.json`.
info: [bench-flow.js]: Started monitor successfully
info: [bench-flow.js]: ###### Testing 'publish' ######
info: [bench-flow.js]: ------ Test round 1 ------
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 1 Succ: 0 Fail:0 Unfinished:1
info: [demo.js]: [Transaction Info] - Submitted: 2 Succ: 0 Fail:0 Unfinished:2
info: [demo.js]: [Transaction Info] - Submitted: 3 Succ: 0 Fail:0 Unfinished:3
info: [demo.js]: [Transaction Info] - Submitted: 4 Succ: 0 Fail:0 Unfinished:4
info: [demo.js]: [Transaction Info] - Submitted: 5 Succ: 0 Fail:0 Unfinished:5
info: [demo.js]: [Transaction Info] - Submitted: 6 Succ: 0 Fail:0 Unfinished:6
info: [demo.js]: [Transaction Info] - Submitted: 7 Succ: 0 Fail:0 Unfinished:7
info: [demo.js]: [Transaction Info] - Submitted: 8 Succ: 0 Fail:0 Unfinished:8
info: [demo.js]: [Transaction Info] - Submitted: 9 Succ: 1 Fail:0 Unfinished:8
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 1 Fail:0 Unfinished:9
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 2 Fail:0 Unfinished:8
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 3 Fail:0 Unfinished:7
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 3 Fail:0 Unfinished:7
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 4 Fail:0 Unfinished:6
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 4 Fail:0 Unfinished:6
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 5 Fail:0 Unfinished:5
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 5 Fail:0 Unfinished:5
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 6 Fail:0 Unfinished:4
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 6 Fail:0 Unfinished:4
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 7 Fail:0 Unfinished:3
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 7 Fail:0 Unfinished:3
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 8 Fail:0 Unfinished:2
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 8 Fail:0 Unfinished:2
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 9 Fail:0 Unfinished:1
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 9 Fail:0 Unfinished:1
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [bench-flow.js]: ###test result:###
info: [bench-flow.js]: 
+---------+------+------+-----------+-------------+-------------+-------------+------------+
| Name    | Succ | Fail | Send Rate | Max Latency | Min Latency | Avg Latency | Throughput |
|---------|------|------|-----------|-------------|-------------|-------------|------------|
| publish | 10   | 0    | 1.1 tps   | 0.83 s      | 0.78 s      | 0.81 s      | 1.0 tps    |
+---------+------+------+-----------+-------------+-------------+-------------+------------+

info: [bench-flow.js]: ### resource stats ###
info: [bench-flow.js]: 
+--------+------------------------+-------------+-------------+----------+----------+------------+-------------+-----------+------------+
| TYPE   | NAME                   | Memory(max) | Memory(avg) | CPU(max) | CPU(avg) | Traffic In | Traffic Out | Disc Read | Disc Write |
|--------|------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker | peer0.org1.example.com | 342.4MB     | 294.1MB     | 25.70%   | 9.86%    | 50.0MB     | 73.4MB      | 0B        | 105.8MB    |
|--------|------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker | peer0.org2.example.com | 351.7MB     | 302.4MB     | 25.38%   | 9.92%    | 50.0MB     | 73.5MB      | 0B        | 105.8MB    |
|--------|------------------------|-------------|-------------|----------|----------|------------|-------------|-----------|------------|
| Docker | orderer.example.com    | 164.1MB     | 137.6MB     | 9.79%    | 3.05%    | 23.7MB     | 52.5MB      | 0B        | 105.6MB    |
+--------+------------------------+-------------+-------------+----------+----------+------------+-------------+-----------+------------+

info: [bench-flow.js]: ------ Passed 'publish' testing ------
info: [bench-flow.js]: Waiting 5 seconds for the next round...
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [bench-flow.js]: ###### Testing 'query' ######
info: [bench-flow.js]: ------ Test round 2 ------
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0

<--- Last few GCs --->

[25859:0x2cf60c0]   205503 ms: Mark-sweep 1572.2 (1631.0) -> 1572.1 (1633.5) MB, 1692.7 / 0.0 ms  allocation failure GC in old space requested
[25859:0x2cf60c0]   207205 ms: Mark-sweep 1572.1 (1633.5) -> 1572.0 (1602.5) MB, 1701.6 / 0.0 ms  last resort GC in old space requested
[25859:0x2cf60c0]   208955 ms: Mark-sweep 1572.0 (1602.5) -> 1572.0 (1602.5) MB, 1750.0 / 0.0 ms  last resort GC in old space requested


<--- JS stacktrace --->

==== JS stack trace =========================================

Security context: 0x13922fb25879 <JSObject>
    1: push(this=0x176066416971 <JSArray[10629608]>)
    2: /* anonymous */ [internal/process/promises.js:~21] [pc=0x32a07a44eef2](this=0x8048e028d1 <process map = 0x2e7c7150a341>,event=0,promise=0xada03516529 <Promise map = 0x2e7c715044b9>,reason=0xada03516391 <TypeError map = 0x2293525062a1>)
    7: /* anonymous */(aka /* anonymous */)(this=0x31b0afe822d1 <undefined>)

==== Details ===========...

FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
 1: node::Abort() [/usr/local/node-v8.12.0-linux-x64/bin/node]
 2: 0x8cbf4c [/usr/local/node-v8.12.0-linux-x64/bin/node]
 3: v8::Utils::ReportOOMFailure(char const*, bool) [/usr/local/node-v8.12.0-linux-x64/bin/node]
 4: v8::internal::V8::FatalProcessOutOfMemory(char const*, bool) [/usr/local/node-v8.12.0-linux-x64/bin/node]
 5: v8::internal::Factory::NewUninitializedFixedArray(int) [/usr/local/node-v8.12.0-linux-x64/bin/node]
 6: 0xd7fd2f [/usr/local/node-v8.12.0-linux-x64/bin/node]
 7: 0xd93e65 [/usr/local/node-v8.12.0-linux-x64/bin/node]
 8: v8::internal::JSObject::AddDataElement(v8::internal::Handle<v8::internal::JSObject>, unsigned int, v8::internal::Handle<v8::internal::Object>, v8::internal::PropertyAttributes, v8::internal::Object::ShouldThrow) [/usr/local/node-v8.12.0-linux-x64/bin/node]
 9: v8::internal::Object::AddDataProperty(v8::internal::LookupIterator*, v8::internal::Handle<v8::internal::Object>, v8::internal::PropertyAttributes, v8::internal::Object::ShouldThrow, v8::internal::Object::StoreFromKeyed) [/usr/local/node-v8.12.0-linux-x64/bin/node]
10: v8::internal::Object::SetProperty(v8::internal::LookupIterator*, v8::internal::Handle<v8::internal::Object>, v8::internal::LanguageMode, v8::internal::Object::StoreFromKeyed) [/usr/local/node-v8.12.0-linux-x64/bin/node]
11: v8::internal::Runtime_SetProperty(int, v8::internal::Object**, v8::internal::Isolate*) [/usr/local/node-v8.12.0-linux-x64/bin/node]
12: 0x32a07a2842fd
info: [client-util.js]: Client exited 
error: [bench-flow.js]: ------ Failed 'query' testing with the following error ------
Error: Client already exited
    at ChildProcess.<anonymous> (/home/panyu/projects/caliper/src/comm/client/client-util.js:176:32)
    at emitTwo (events.js:126:13)
    at ChildProcess.emit (events.js:214:7)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)
info: [bench-flow.js]: ---------- Finished Test ----------

info: [bench-flow.js]: ###all test results:###
info: [bench-flow.js]: 
+------+---------+------+------+-----------+-------------+-------------+-------------+------------+
| Test | Name    | Succ | Fail | Send Rate | Max Latency | Min Latency | Avg Latency | Throughput |
|------|---------|------|------|-----------|-------------|-------------|-------------|------------|
| 1    | publish | 10   | 0    | 1.1 tps   | 0.83 s      | 0.78 s      | 0.81 s      | 1.0 tps    |
+------+---------+------+------+-----------+-------------+-------------+-------------+------------+

info: [monitor.js]: 
 ### resource stats (maximum) ###
info: [monitor.js]: 
+--------+------------------------+-------------+----------+------------+-------------+-----------+------------+
| TYPE   | NAME                   | Memory(max) | CPU(max) | Traffic In | Traffic Out | Disc Read | Disc Write |
|--------|------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker | peer0.org1.example.com | 342.8MB     | 25.70%   | 50.0MB     | 73.4MB      | 0B        | 105.8MB    |
|--------|------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker | peer0.org2.example.com | 351.9MB     | 25.38%   | 50.0MB     | 73.5MB      | 0B        | 105.8MB    |
|--------|------------------------|-------------|----------|------------|-------------|-----------|------------|
| Docker | orderer.example.com    | 164.1MB     | 9.79%    | 23.7MB     | 52.5MB      | 0B        | 105.6MB    |
+--------+------------------------+-------------+----------+------------+-------------+-----------+------------+
",2019-01-12 02:09:14,2019-01-12 02:09:14
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453710990,https://github.com/hyperledger/caliper/pull/236#issuecomment-453710990,panyu4,"@nitesh7sid , I remembered in the original version, this flag was set in the test configuration file. The flag is not set as a single round parameter.",2019-01-12 02:13:12,2019-01-12 02:13:12
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/453751869,https://github.com/hyperledger/caliper/pull/236#issuecomment-453751869,nitesh7sid,"@panyu4 I tried running the marbles test and it looks like its not an issue of flag. This is the error which is coming directly coming from the chaincode:
```
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message: Received unknown function invocation)
    at new createStatusError (/root/caliper/node_modules/grpc/src/client.js:64:15)
    at /root/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message: Received unknown function invocation)
    at new createStatusError (/root/caliper/node_modules/grpc/src/client.js:64:15)
    at /root/caliper/node_modules/grpc/src/client.js:583:15
error: [e2eUtils.js]: Failed to complete transaction [8a8b4...]:Error: Endorsement denied: Error: 2 UNKNOWN: chaincode error (status: 500, message: Received unknown function invocation)
    at Object.invokebycontext (/root/caliper/src/fabric/e2eUtils.js:624:27)
    at <anonymous>

```",2019-01-12 14:28:45,2019-01-12 14:28:45
https://api.github.com/repos/hyperledger/caliper/issues/236,https://api.github.com/repos/hyperledger/caliper/issues/comments/458928186,https://github.com/hyperledger/caliper/pull/236#issuecomment-458928186,nitesh7sid,Withdrawing,2019-01-30 12:35:10,2019-01-30 12:35:10
https://api.github.com/repos/hyperledger/caliper/issues/235,https://api.github.com/repos/hyperledger/caliper/issues/comments/442069397,https://github.com/hyperledger/caliper/issues/235#issuecomment-442069397,aklenik,"@lxb325710 Which benchmark are you running on which sample network? And at which part of the test are you getting this error (init phase, TX submitting phase)?",2018-11-27 14:04:44,2018-11-27 14:04:44
https://api.github.com/repos/hyperledger/caliper/issues/235,https://api.github.com/repos/hyperledger/caliper/issues/comments/442682935,https://github.com/hyperledger/caliper/issues/235#issuecomment-442682935,houqinghui,"@lxb325710 please list the command that you use, so that we can locate the problem.",2018-11-29 02:28:03,2018-11-29 02:28:03
https://api.github.com/repos/hyperledger/caliper/issues/235,https://api.github.com/repos/hyperledger/caliper/issues/comments/462699276,https://github.com/hyperledger/caliper/issues/235#issuecomment-462699276,panyu4,"This is an inactive issue for long time. @lxb325710  If you still have the same problem, reopen it.",2019-02-12 10:12:31,2019-02-12 10:12:31
https://api.github.com/repos/hyperledger/caliper/issues/234,https://api.github.com/repos/hyperledger/caliper/issues/comments/443783745,https://github.com/hyperledger/caliper/issues/234#issuecomment-443783745,nklincoln,You will need to get some logs from the containers that will hopefully help guide you towards the error root cause,2018-12-03 16:56:54,2018-12-03 16:56:54
https://api.github.com/repos/hyperledger/caliper/issues/234,https://api.github.com/repos/hyperledger/caliper/issues/comments/443931295,https://github.com/hyperledger/caliper/issues/234#issuecomment-443931295,zcyzhu,"Yes, Thanks",2018-12-04 01:09:48,2018-12-04 01:09:48
https://api.github.com/repos/hyperledger/caliper/issues/234,https://api.github.com/repos/hyperledger/caliper/issues/comments/469420365,https://github.com/hyperledger/caliper/issues/234#issuecomment-469420365,aklenik,@zcyzhu Did you resolve the issue?,2019-03-04 21:02:21,2019-03-04 21:02:21
https://api.github.com/repos/hyperledger/caliper/issues/231,https://api.github.com/repos/hyperledger/caliper/issues/comments/442040659,https://github.com/hyperledger/caliper/issues/231#issuecomment-442040659,aklenik,"@zcyzhu What version did you install? 
`npm ls fabric-ca-client`",2018-11-27 12:27:07,2018-11-27 12:27:07
https://api.github.com/repos/hyperledger/caliper/issues/231,https://api.github.com/repos/hyperledger/caliper/issues/comments/446740632,https://github.com/hyperledger/caliper/issues/231#issuecomment-446740632,MuckT,@aklenik I am receiving the same error using the same steps with fabric-ca-client@1.3.0.,2018-12-12 20:56:29,2018-12-12 20:56:29
https://api.github.com/repos/hyperledger/caliper/issues/231,https://api.github.com/repos/hyperledger/caliper/issues/comments/449587104,https://github.com/hyperledger/caliper/issues/231#issuecomment-449587104,aklenik,@MuckT @zcyzhu The current adapter only supports Fabric up to the 1.2 version (inclusive). The required CA implementation file is probably moved into another directory in 1.3.0.,2018-12-22 17:47:37,2018-12-22 17:47:37
https://api.github.com/repos/hyperledger/caliper/issues/231,https://api.github.com/repos/hyperledger/caliper/issues/comments/455060929,https://github.com/hyperledger/caliper/issues/231#issuecomment-455060929,YanLIU0822,"I  meet the same issue. I solve this issue by uninstalling fabric-ca-client@1.14.0 and installing fabric-ca-client@1.2.0
hope it works for you guys",2019-01-17 06:45:55,2019-01-17 06:45:55
https://api.github.com/repos/hyperledger/caliper/issues/231,https://api.github.com/repos/hyperledger/caliper/issues/comments/462666015,https://github.com/hyperledger/caliper/issues/231#issuecomment-462666015,panyu4,"@zcyzhu , this is caused by the not match fabric SDK and Caliper. Now this problem is resolved by recently pr #279 . So close it. ",2019-02-12 08:32:48,2019-02-12 08:32:48
https://api.github.com/repos/hyperledger/caliper/issues/229,https://api.github.com/repos/hyperledger/caliper/issues/comments/441809075,https://github.com/hyperledger/caliper/issues/229#issuecomment-441809075,aklenik,PR #230 resolves this issue,2018-11-26 21:39:55,2018-11-26 21:39:55
https://api.github.com/repos/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/comments/441808753,https://github.com/hyperledger/caliper/issues/227#issuecomment-441808753,aklenik,"@lenoAlex The support for Fabric 1.3 is on the way, sometimes this week (upper bound). ",2018-11-26 21:38:47,2018-11-26 21:38:47
https://api.github.com/repos/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/comments/442288023,https://github.com/hyperledger/caliper/issues/227#issuecomment-442288023,lenoAlex,@aklenik  Is there a working fork that I could test? I developed some features base on  Fabric v1.3 and want to get some benchmark.,2018-11-28 01:51:42,2018-11-28 02:23:34
https://api.github.com/repos/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/comments/443513906,https://github.com/hyperledger/caliper/issues/227#issuecomment-443513906,luigima,Does the release date for 1.3 support still hold @aklenik?,2018-12-02 14:58:27,2018-12-02 14:58:27
https://api.github.com/repos/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/comments/443959444,https://github.com/hyperledger/caliper/issues/227#issuecomment-443959444,lenoAlex,@aklenik Any news regarding the release date for 1.3 support?,2018-12-04 03:41:02,2018-12-04 03:41:02
https://api.github.com/repos/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/comments/444070537,https://github.com/hyperledger/caliper/issues/227#issuecomment-444070537,luigima,Reminds me of my issue some weeks ago :P #185,2018-12-04 11:38:48,2018-12-04 11:38:48
https://api.github.com/repos/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/comments/444834962,https://github.com/hyperledger/caliper/issues/227#issuecomment-444834962,aklenik,"@luigima @lenoAlex The new adapter is basically finished, but I still have to add example benchmarks and networks, plus the documentation of course :) But it's good to know that everyone is anxious to try it, it's a good kind of pressure :P",2018-12-06 11:05:26,2018-12-06 11:05:26
https://api.github.com/repos/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/comments/447777607,https://github.com/hyperledger/caliper/issues/227#issuecomment-447777607,modood,"@aklenik @luigima ~~This fork(temporary) support fabric v1.3, you can have a try.
https://github.com/mwnf/caliper/tree/feature/fabric-v1.3~~",2018-12-17 09:29:42,2019-02-13 01:04:38
https://api.github.com/repos/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/comments/462667618,https://github.com/hyperledger/caliper/issues/227#issuecomment-462667618,panyu4,"@lenoAlex @luigima @aklenik currently, caliper is able to support fabric v1.3 by the pr #279 . Pr #296 has tried a new fabric adapter, and after it is merged, you can play with fabric v1.3 by this new adapter. ",2019-02-12 08:37:56,2019-02-12 08:37:56
https://api.github.com/repos/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/comments/469414221,https://github.com/hyperledger/caliper/issues/227#issuecomment-469414221,aklenik,Both Fabric adapters now support newer Fabric releases,2019-03-04 20:43:40,2019-03-04 20:43:40
https://api.github.com/repos/hyperledger/caliper/issues/226,https://api.github.com/repos/hyperledger/caliper/issues/comments/448142113,https://github.com/hyperledger/caliper/issues/226#issuecomment-448142113,houqinghui,@hariharan-avs  do you solve your problem? or you can list the detailed log.,2018-12-18 08:46:16,2018-12-18 08:46:16
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/440899590,https://github.com/hyperledger/caliper/issues/225#issuecomment-440899590,houqinghui,"@funkol2007  
1.  i want to know how you define your network, and can you list the error detailedly ?
2.  do you want to produce the msp of the peer?",2018-11-22 03:09:12,2018-11-22 03:09:38
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/440921225,https://github.com/hyperledger/caliper/issues/225#issuecomment-440921225,funkol2007,"> @funkol2007
> 
> 1. i want to know how you define your network, and can you list the error detailedly ?
> 2. do you want to produce the msp of the peer?

hi   I  define my network with crypto-config.yaml and generate orgs with command ""cryptogen"" . And I have  deploy my network with 1 orderer and 3peers successfully (No CA and orderer an peers deployed in different machine and not use docker) . 
Errors below:
（caplier console） 
![image](https://user-images.githubusercontent.com/3076515/48884196-511d2080-ee5e-11e8-989a-4ad051c4806d.png)
 (fabric peer)
![image](https://user-images.githubusercontent.com/3076515/48884217-62fec380-ee5e-11e8-81fe-97b97c08ffae.png)
",2018-11-22 05:56:29,2018-11-22 05:56:29
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/440921781,https://github.com/hyperledger/caliper/issues/225#issuecomment-440921781,funkol2007,"my command is :  node benchmark/simple/main.js -c config-test.json -n fabric-test.json

config-test.json:
![image](https://user-images.githubusercontent.com/3076515/48884291-cbe63b80-ee5e-11e8-8e93-1d3e11c8e32b.png)
fabric-test.json:
![image](https://user-images.githubusercontent.com/3076515/48884311-e8827380-ee5e-11e8-8964-f9b89a81ceca.png)
",2018-11-22 06:00:11,2018-11-22 06:00:11
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/440925337,https://github.com/hyperledger/caliper/issues/225#issuecomment-440925337,houqinghui,"**this error is not same with the error in  chat , do you solve the error in chat?** @funkol2007 
chat中是这个错误“But when I start the caliper it report the err msg: error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: access denied: channel [] creator org [Org1MSP]. Then I check the peer log, it says that: 2018-11-21 17:00:52.775 CST [protoutils] ValidateProposalMessage -> WARN 04d channel []: MSP error: the supplied identity is not valid: x509: certificate signed by unknown authority . So I think the client access peer node with wrong msp. But I don't where to configurate this item. Who can help me with this problem. Very Thanks.”",2018-11-22 06:23:09,2018-11-22 06:23:46
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/440935065,https://github.com/hyperledger/caliper/issues/225#issuecomment-440935065,funkol2007,"> **this error is not same with the error in chat , do you solve the error in chat?** @funkol2007
> chat中是这个错误“But when I start the caliper it report the err msg: error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: access denied: channel [] creator org [Org1MSP]. Then I check the peer log, it says that: 2018-11-21 17:00:52.775 CST [protoutils] ValidateProposalMessage -> WARN 04d channel []: MSP error: the supplied identity is not valid: x509: certificate signed by unknown authority . So I think the client access peer node with wrong msp. But I don't where to configurate this item. Who can help me with this problem. Very Thanks.”

yes .. but I don't know why. I pull the newest code and do the same work again. ",2018-11-22 07:17:36,2018-11-22 07:17:36
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/440940170,https://github.com/hyperledger/caliper/issues/225#issuecomment-440940170,panyu4,"This pr #162 may resolve your problem. But we have not merged it because the proposer did not squash. When using this, the first time you have to set the deployed to false and from then on it should be set to true.
According to your error, you can set the deployed to true.",2018-11-22 07:42:25,2018-11-22 07:48:39
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/440947707,https://github.com/hyperledger/caliper/issues/225#issuecomment-440947707,funkol2007,"> This pr #162 may resolve your problem. But we have not merged it because the proposer did not squash. When using this, the first time you have to set the deployed to false and from then on it should be set to true.
> According to your error, you can set the deployed to true.

You can see the config file. I have setted the deployed to true.  But the fabric peer error show that the chainID  is """" not ""mychannel"" ... I don't konw why..",2018-11-22 08:16:28,2018-11-22 08:16:28
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/440953334,https://github.com/hyperledger/caliper/issues/225#issuecomment-440953334,panyu4,"@funkol2007 , I mean you should use the Pr162 which add a property ""deployed"" in chaincodes section. And in order to avoid the repeated chaincode  installation you can set the property deployed in chaincodes section ",2018-11-22 08:39:08,2018-11-22 08:41:03
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/440997064,https://github.com/hyperledger/caliper/issues/225#issuecomment-440997064,funkol2007,"I have down with Pr162 but it still not working. @panyu4 
![image](https://user-images.githubusercontent.com/3076515/48899343-52644280-ee8a-11e8-9b70-a47f2c7478f6.png)
![image](https://user-images.githubusercontent.com/3076515/48899369-6ad45d00-ee8a-11e8-929e-3465a3b1f0c9.png)
",2018-11-22 11:11:53,2018-11-22 11:11:53
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/441011257,https://github.com/hyperledger/caliper/issues/225#issuecomment-441011257,panyu4,"@funkol2007 ,  please check if  your endorsement policy is corresponding to  your chaincode",2018-11-22 12:10:36,2018-11-22 12:10:36
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/441016586,https://github.com/hyperledger/caliper/issues/225#issuecomment-441016586,funkol2007," @panyu4  I just use the default chaincode and  endorsement policy.  ""policy"": { ""2-of"": [{""signed-by"": 0},{""signed-by"": 1}]}   chaincode source code :src/contract/fabric/simple/go/simpletest.go",2018-11-22 12:31:53,2018-11-22 12:32:08
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/441147774,https://github.com/hyperledger/caliper/issues/225#issuecomment-441147774,panyu4,@funkol2007 ， I'm wondering if your network is running well without caliper. ,2018-11-23 03:03:43,2018-11-23 03:03:43
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/441495771,https://github.com/hyperledger/caliper/issues/225#issuecomment-441495771,funkol2007,@panyu4  According to the Pr162 I finished the multi-node testing successfully. Thank you for your help！！,2018-11-26 01:48:50,2018-11-26 01:48:50
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/441505249,https://github.com/hyperledger/caliper/issues/225#issuecomment-441505249,panyu4,"@funkol2007  That's ok .  Good News.  BTW, how did you deal with the error you encountered in chaincode and endorsement policy? 
PS: If you think this issue is resolved, you can close it. ",2018-11-26 03:00:25,2018-11-26 03:00:25
https://api.github.com/repos/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/comments/441506176,https://github.com/hyperledger/caliper/issues/225#issuecomment-441506176,funkol2007,@panyu4  I think the problem is due to my environment.  When I clean my  environment and rerun the test and it worked.  I should set the  'deployed' item to 'false' when I run the test at first time and then I should change it to be 'true'  In the following tests. ,2018-11-26 03:07:53,2018-11-26 03:07:53
https://api.github.com/repos/hyperledger/caliper/issues/222,https://api.github.com/repos/hyperledger/caliper/issues/comments/440491792,https://github.com/hyperledger/caliper/issues/222#issuecomment-440491792,houqinghui," the problem is related to docker，please executive `docker stop $(docker ps -aq)`  and `docker rm $(docker ps -aq)`， you can try it .
@RobertDiebels ",2018-11-21 01:15:20,2018-11-21 01:15:38
https://api.github.com/repos/hyperledger/caliper/issues/222,https://api.github.com/repos/hyperledger/caliper/issues/comments/440612691,https://github.com/hyperledger/caliper/issues/222#issuecomment-440612691,RobertDiebels,@houqinghui The issue is unrelated to docker. I'm executing Caliper in Kubernetes and I've fixed the issue in my own fork by removing the bit of code that I mentioned.,2018-11-21 10:24:31,2018-11-21 10:24:31
https://api.github.com/repos/hyperledger/caliper/issues/219,https://api.github.com/repos/hyperledger/caliper/issues/comments/440268468,https://github.com/hyperledger/caliper/issues/219#issuecomment-440268468,aklenik,"@RobertDiebels Thanks for raising the issue, I'll try to submit a fix soon.",2018-11-20 13:12:37,2018-11-20 13:12:37
https://api.github.com/repos/hyperledger/caliper/issues/218,https://api.github.com/repos/hyperledger/caliper/issues/comments/463473665,https://github.com/hyperledger/caliper/issues/218#issuecomment-463473665,feihujiang,"This was resolved, close it.",2019-02-14 03:28:27,2019-02-14 03:28:27
https://api.github.com/repos/hyperledger/caliper/issues/217,https://api.github.com/repos/hyperledger/caliper/issues/comments/439190245,https://github.com/hyperledger/caliper/pull/217#issuecomment-439190245,aklenik,"@panyu4 Could you review it, please?",2018-11-15 21:07:10,2018-11-15 21:07:10
https://api.github.com/repos/hyperledger/caliper/issues/217,https://api.github.com/repos/hyperledger/caliper/issues/comments/439245772,https://github.com/hyperledger/caliper/pull/217#issuecomment-439245772,panyu4,"> @panyu4 Could you review it, please?

I'll review it right now.",2018-11-16 01:04:16,2018-11-16 01:37:31
https://api.github.com/repos/hyperledger/caliper/issues/217,https://api.github.com/repos/hyperledger/caliper/issues/comments/439255141,https://github.com/hyperledger/caliper/pull/217#issuecomment-439255141,panyu4,"@aklenik , LGTM.  
There is one suggestion:  when using tape in the original code , the user will get a summary information such like ""9 tests, 9 pass, 0 fail "" at the end of the test.  But now, without tape, the user has to go through all of the information to see if all the tests are successfully finished. I think this information should be added into the framework  as a tip which indicates if the tests were going well.   ",2018-11-16 01:55:42,2018-11-16 02:01:48
https://api.github.com/repos/hyperledger/caliper/issues/217,https://api.github.com/repos/hyperledger/caliper/issues/comments/439379633,https://github.com/hyperledger/caliper/pull/217#issuecomment-439379633,aklenik,"@panyu4 Added the final test report. I count the executed rounds only. 

There were some fail counts for adapter errors previously, but those shouldn't be counted, in my opinion. The numbers should correspond to the rounds defined in the config, and that's the philosophy I followed now.",2018-11-16 12:32:47,2018-11-16 12:32:47
https://api.github.com/repos/hyperledger/caliper/issues/217,https://api.github.com/repos/hyperledger/caliper/issues/comments/439579366,https://github.com/hyperledger/caliper/pull/217#issuecomment-439579366,panyu4,@aklenik I agree.,2018-11-17 02:11:09,2018-11-17 02:11:09
https://api.github.com/repos/hyperledger/caliper/issues/215,https://api.github.com/repos/hyperledger/caliper/issues/comments/440172012,https://github.com/hyperledger/caliper/pull/215#issuecomment-440172012,feihujiang,"@aklenik I updated this PR as your advice, please take a look. And I'll document the rate controller in another PR.",2018-11-20 07:31:10,2018-11-20 07:31:10
https://api.github.com/repos/hyperledger/caliper/issues/215,https://api.github.com/repos/hyperledger/caliper/issues/comments/441148472,https://github.com/hyperledger/caliper/pull/215#issuecomment-441148472,feihujiang,"@aklenik I updated this PR according to your comments, please review again.",2018-11-23 03:13:13,2018-11-23 03:13:13
https://api.github.com/repos/hyperledger/caliper/issues/215,https://api.github.com/repos/hyperledger/caliper/issues/comments/441212384,https://github.com/hyperledger/caliper/pull/215#issuecomment-441212384,aklenik,"@feihujiang Merged it, now only the documentation is needed to the `gh-pages` branch.",2018-11-23 11:03:08,2018-11-23 11:03:08
https://api.github.com/repos/hyperledger/caliper/issues/214,https://api.github.com/repos/hyperledger/caliper/issues/comments/437005884,https://github.com/hyperledger/caliper/issues/214#issuecomment-437005884,aklenik,"@Priyanshi52 The following is from [my comment](https://chat.hyperledger.org/channel/caliper?msg=SFxFqHGk8XrqNJFwy) in RocketChat:

Timeout during a chaincode instantiation is a tricky thing. You would expect that it is an actual timeout, but in my experience, it is an error during executing (or trying to execute) the chaincode `Init` function. 

The confusing part is, that this error appears/logged in the `dev***` chaincode container that is created by the peer (and not the peer container itself). But since the peer doesn't receive an OK from the CC init in time (because of the error), it will report a timeout, and delete the container, and yessss, the error message with it 🙂 

So to observe the actual error, you have to follow the logs of the `dev***` container once it is created ( `docker logs --follow dev***`), but before the peer deletes it. For this, you should increase the timeout on the client/Caliper side AND on the peer side with the `CORE_CHAINCODE_STARTUPTIMEOUT=300s` env setting for example.",2018-11-08 14:09:51,2018-11-08 14:09:51
https://api.github.com/repos/hyperledger/caliper/issues/214,https://api.github.com/repos/hyperledger/caliper/issues/comments/437092216,https://github.com/hyperledger/caliper/issues/214#issuecomment-437092216,Priyanshi52,"@aklenik  I got this -

2018-11-08 17:22:20.749 UTC [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/etc/hyperledger/msp/peer/msp/intermediatecerts]. Skipping.: [stat /etc/hyperledger/msp/peer/msp/intermediatecerts: no such file or directory]
2018-11-08 17:22:20.750 UTC [msp] getMspConfig -> INFO 002 crls folder not found at [/etc/hyperledger/msp/peer/msp/intermediatecerts]. Skipping.: [stat /etc/hyperledger/msp/peer/msp/crls: no such file or directory]
2018-11-08 17:22:20.750 UTC [msp] getMspConfig -> INFO 003 MSP configuration file not found at [/etc/hyperledger/msp/peer/msp/config.yaml]: [stat /etc/hyperledger/msp/peer/msp/config.yaml: no such file or directory]
2018-11-08 17:22:20.977 UTC [nodeCmd] serve -> INFO 004 Starting peer:
 Version: 1.0.0-beta
 Go version: go1.7.5
 OS/Arch: linux/arm
 Chaincode:
  Base Image Version: 0.3.1
  Base Docker Namespace: talium
  Base Docker Label: org.talium.fabric
  Docker Namepace: talium

2018-11-08 17:22:20.977 UTC [ledgermgmt] initialize -> INFO 005 Initializing ledger mgmt
2018-11-08 17:22:20.977 UTC [kvledger] NewProvider -> INFO 006 Initializing ledger provider
2018-11-08 17:22:24.897 UTC [kvledger] NewProvider -> INFO 007 ledger provider Initialized
2018-11-08 17:22:24.898 UTC [ledgermgmt] initialize -> INFO 008 ledger mgmt initialized
2018-11-08 17:22:24.915 UTC [nodeCmd] serve -> INFO 009 Starting peer with TLS enabled
2018-11-08 17:22:24.928 UTC [eventhub_producer] start -> INFO 00a Event processor started
2018-11-08 17:22:24.932 UTC [chaincode] NewChaincodeSupport -> INFO 00b Chaincode support using peerAddress: peer0.org2.example.com:7051
2018-11-08 17:22:24.937 UTC [sccapi] RegisterSysCC -> INFO 00c system chaincode cscc(github.com/hyperledger/fabric/core/scc/cscc) registered
2018-11-08 17:22:24.938 UTC [sccapi] RegisterSysCC -> INFO 00d system chaincode lscc(github.com/hyperledger/fabric/core/scc/lscc) registered
2018-11-08 17:22:24.939 UTC [sccapi] RegisterSysCC -> INFO 00e system chaincode escc(github.com/hyperledger/fabric/core/scc/escc) registered
2018-11-08 17:22:24.940 UTC [sccapi] RegisterSysCC -> INFO 00f system chaincode vscc(github.com/hyperledger/fabric/core/scc/vscc) registered
2018-11-08 17:22:24.941 UTC [sccapi] RegisterSysCC -> INFO 010 system chaincode qscc(github.com/hyperledger/fabric/core/chaincode/qscc) registered
2018-11-08 17:22:24.945 UTC [gossip/service] func1 -> INFO 011 Initialize gossip with endpoint peer0.org2.example.com:7051 and bootstrap set [127.0.0.1:7051]
2018-11-08 17:22:24.946 UTC [msp] DeserializeIdentity -> INFO 012 Obtaining identity
2018-11-08 17:22:25.056 UTC [msp] DeserializeIdentity -> INFO 013 Obtaining identity
2018-11-08 17:22:25.108 UTC [gossip/discovery] NewDiscoveryService -> INFO 014 Started {peer0.org2.example.com:7051 [] [23 3 141 140 92 60 43 136 186 32 94 164 8 215 61 180 84 156 91 71 138 94 173 44 140 205 249 1 125 91 102 112] peer0.org2.example.com:7051} incTime is 1541697745105002356
2018-11-08 17:22:25.109 UTC [gossip/gossip] NewGossipService -> INFO 015 Creating gossip service with self membership of {peer0.org2.example.com:7051 [] [23 3 141 140 92 60 43 136 186 32 94 164 8 215 61 180 84 156 91 71 138 94 173 44 140 205 249 1 125 91 102 112] peer0.org2.example.com:7051}
2018-11-08 17:22:25.109 UTC [msp] DeserializeIdentity -> INFO 016 Obtaining identity
2018-11-08 17:22:25.199 UTC [gossip/gossip] start -> INFO 017 Gossip instance peer0.org2.example.com:7051 started
2018-11-08 17:22:25.202 UTC [cscc] Init -> INFO 018 Init CSCC
2018-11-08 17:22:25.203 UTC [sccapi] deploySysCC -> INFO 019 system chaincode cscc/(github.com/hyperledger/fabric/core/scc/cscc) deployed
2018-11-08 17:22:25.206 UTC [sccapi] deploySysCC -> INFO 01a system chaincode lscc/(github.com/hyperledger/fabric/core/scc/lscc) deployed
2018-11-08 17:22:25.209 UTC [escc] Init -> INFO 01b Successfully initialized ESCC
2018-11-08 17:22:25.210 UTC [sccapi] deploySysCC -> INFO 01c system chaincode escc/(github.com/hyperledger/fabric/core/scc/escc) deployed
2018-11-08 17:22:25.212 UTC [sccapi] deploySysCC -> INFO 01d system chaincode vscc/(github.com/hyperledger/fabric/core/scc/vscc) deployed
2018-11-08 17:22:25.215 UTC [qscc] Init -> INFO 01e Init QSCC
2018-11-08 17:22:25.216 UTC [sccapi] deploySysCC -> INFO 01f system chaincode qscc/(github.com/hyperledger/fabric/core/chaincode/qscc) deployed
2018-11-08 17:22:25.216 UTC [nodeCmd] initSysCCs -> INFO 020 Deployed system chaincodess
2018-11-08 17:22:25.218 UTC [nodeCmd] serve -> INFO 021 Starting peer with ID=[name:""peer0.org2.example.com"" ], network ID=[dev], address=[peer0.org2.example.com:7051]
2018-11-08 17:22:25.236 UTC [nodeCmd] serve -> INFO 022 Started peer with ID=[name:""peer0.org2.example.com"" ], network ID=[dev], address=[peer0.org2.example.com:7051]
2018-11-08 17:22:37.394 UTC [ledgermgmt] CreateLedger -> INFO 023 Creating ledger [mychannel] with genesis block
2018-11-08 17:22:38.674 UTC [kvledger] Commit -> INFO 024 Channel [mychannel]: Created block [0] with 1 transaction(s)
2018-11-08 17:22:38.701 UTC [ledgermgmt] CreateLedger -> INFO 025 Created ledger [mychannel] with genesis block
2018-11-08 17:22:39.172 UTC [cscc] Init -> INFO 026 Init CSCC
2018-11-08 17:22:39.173 UTC [sccapi] deploySysCC -> INFO 027 system chaincode cscc/mychannel(github.com/hyperledger/fabric/core/scc/cscc) deployed
2018-11-08 17:22:39.176 UTC [sccapi] deploySysCC -> INFO 028 system chaincode lscc/mychannel(github.com/hyperledger/fabric/core/scc/lscc) deployed
2018-11-08 17:22:39.179 UTC [escc] Init -> INFO 029 Successfully initialized ESCC
2018-11-08 17:22:39.179 UTC [sccapi] deploySysCC -> INFO 02a system chaincode escc/mychannel(github.com/hyperledger/fabric/core/scc/escc) deployed
2018-11-08 17:22:39.182 UTC [sccapi] deploySysCC -> INFO 02b system chaincode vscc/mychannel(github.com/hyperledger/fabric/core/scc/vscc) deployed
2018-11-08 17:22:39.184 UTC [qscc] Init -> INFO 02c Init QSCC
2018-11-08 17:22:39.184 UTC [sccapi] deploySysCC -> INFO 02d system chaincode qscc/mychannel(github.com/hyperledger/fabric/core/chaincode/qscc) deployed
2018-11-08 17:22:39.185 UTC [eventhub_producer] SendProducerBlockEvent -> INFO 02e Channel [mychannel]: Sending event for block number [0]
2018-11-08 17:22:45.439 UTC [ConnProducer] NewConnection -> ERRO 02f Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
2018-11-08 17:22:45.440 UTC [deliveryClient] connect -> ERRO 030 Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2018-11-08 17:22:46.468 UTC [ConnProducer] NewConnection -> ERRO 031 Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
2018-11-08 17:22:46.468 UTC [deliveryClient] connect -> ERRO 032 Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2018-11-08 17:22:48.533 UTC [ConnProducer] NewConnection -> ERRO 033 Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
2018-11-08 17:22:48.533 UTC [deliveryClient] connect -> ERRO 034 Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2018-11-08 17:22:52.574 UTC [ConnProducer] NewConnection -> ERRO 035 Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
2018-11-08 17:22:52.575 UTC [deliveryClient] connect -> ERRO 036 Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2018-11-08 17:23:00.619 UTC [ConnProducer] NewConnection -> ERRO 037 Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
2018-11-08 17:23:00.619 UTC [deliveryClient] connect -> ERRO 038 Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2018-11-08 17:23:16.669 UTC [ConnProducer] NewConnection -> ERRO 039 Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
2018-11-08 17:23:16.670 UTC [deliveryClient] connect -> ERRO 03a Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2018-11-08 17:23:48.720 UTC [ConnProducer] NewConnection -> ERRO 03b Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
2018-11-08 17:23:48.720 UTC [deliveryClient] connect -> ERRO 03c Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2018-11-08 17:24:52.783 UTC [ConnProducer] NewConnection -> ERRO 03d Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
2018-11-08 17:24:52.784 UTC [deliveryClient] connect -> ERRO 03e Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2018-11-08 17:26:59.271 UTC [chaincode-platform] func1 -> ERRO 03f Failed to generate platform-specific docker build: Error returned from build: 2 ""# contract/fabric/simple/go
/opt/go/pkg/tool/linux_arm/link: running gcc failed: fork/exec /usr/bin/gcc: cannot allocate memory

""
2018-11-08 17:26:59.275 UTC [dockercontroller] deployImage -> ERRO 040 Error building images: Failed to generate platform-specific docker build: Error returned from build: 2 ""# contract/fabric/simple/go
/opt/go/pkg/tool/linux_arm/link: running gcc failed: fork/exec /usr/bin/gcc: cannot allocate memory

""
2018-11-08 17:26:59.276 UTC [dockercontroller] deployImage -> ERRO 041 Image Output:
********************

********************
2018-11-08 17:26:59.276 UTC [chaincode] Launch -> ERRO 042 launchAndWaitForRegister failed Error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 ""# contract/fabric/simple/go
/opt/go/pkg/tool/linux_arm/link: running gcc failed: fork/exec /usr/bin/gcc: cannot allocate memory

""
2018-11-08 17:26:59.276 UTC [endorser] simulateProposal -> ERRO 043 failed to invoke chaincode name:""lscc""  on transaction 9734873d304930c2aced6d72bdf7b186356892efcd6dbe1272d6ebfc3c9a3cf3, error: Error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 ""# contract/fabric/simple/go
/opt/go/pkg/tool/linux_arm/link: running gcc failed: fork/exec /usr/bin/gcc: cannot allocate memory

""
2018-11-08 17:27:01.462 UTC [ConnProducer] NewConnection -> ERRO 044 Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
2018-11-08 17:27:01.463 UTC [deliveryClient] connect -> ERRO 045 Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]",2018-11-08 17:45:17,2018-11-08 17:45:17
https://api.github.com/repos/hyperledger/caliper/issues/214,https://api.github.com/repos/hyperledger/caliper/issues/comments/437272458,https://github.com/hyperledger/caliper/issues/214#issuecomment-437272458,aklenik,"The following errors all seem Fabric-related (orderer cert setup, build CC image):
```
[ConnProducer] NewConnection -> ERRO 02f Failed connecting to orderer.example.com:7050 , error: x509: certificate signed by unknown authority
[deliveryClient] connect -> ERRO 030 Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
```

```
[chaincode-platform] func1 -> ERRO 03f Failed to generate platform-specific docker build: Error returned from build: 2 ""# contract/fabric/simple/go
/opt/go/pkg/tool/linux_arm/link: running gcc failed: fork/exec /usr/bin/gcc: cannot allocate memory
```

So you should ask around Fabric channels (or the creators of the docker images), because it doesn't seem like a Caliper-related issue.",2018-11-09 07:21:14,2018-11-09 07:21:14
https://api.github.com/repos/hyperledger/caliper/issues/214,https://api.github.com/repos/hyperledger/caliper/issues/comments/439260227,https://github.com/hyperledger/caliper/issues/214#issuecomment-439260227,zsh122958,"vi src/fabric/e2eUtils.js

211行 Client.setConfigSetting('request-timeout', 120000);

改为：Client.setConfigSetting('request-timeout', 720000);",2018-11-16 02:25:25,2018-11-16 02:25:25
https://api.github.com/repos/hyperledger/caliper/issues/214,https://api.github.com/repos/hyperledger/caliper/issues/comments/469421705,https://github.com/hyperledger/caliper/issues/214#issuecomment-469421705,aklenik,"@Priyanshi52 Since the error occurs in the backend network, I'm closing the issue. If you run into Caliper-related errors with your network, feel free to reopen the issue.",2019-03-04 21:06:37,2019-03-04 21:06:37
https://api.github.com/repos/hyperledger/caliper/issues/211,https://api.github.com/repos/hyperledger/caliper/issues/comments/435296999,https://github.com/hyperledger/caliper/issues/211#issuecomment-435296999,zsh122958,Have you solved your problem?I have the same problem,2018-11-02 07:43:02,2018-11-02 07:43:02
https://api.github.com/repos/hyperledger/caliper/issues/211,https://api.github.com/repos/hyperledger/caliper/issues/comments/435306642,https://github.com/hyperledger/caliper/issues/211#issuecomment-435306642,Priyanshi52,No. Not yet,2018-11-02 08:30:27,2018-11-02 08:30:27
https://api.github.com/repos/hyperledger/caliper/issues/211,https://api.github.com/repos/hyperledger/caliper/issues/comments/436156758,https://github.com/hyperledger/caliper/issues/211#issuecomment-436156758,houqinghui,"the problem is like the issue #109 , 
Please try to stop and remove all fabric containers first, then run the test again.
docker stop $(docker ps -aq)
docker rm $(docker ps -aq)
@Priyanshi52 @zsh122958 ",2018-11-06 07:31:31,2018-11-06 07:32:41
https://api.github.com/repos/hyperledger/caliper/issues/211,https://api.github.com/repos/hyperledger/caliper/issues/comments/436212199,https://github.com/hyperledger/caliper/issues/211#issuecomment-436212199,aklenik,"@Priyanshi52 @zsh122958 Also take a look at Issue #210, it has the same error. Also, can you provide the logs of the orderer node (directly here in a formatted manner, or as a gist)?",2018-11-06 10:53:36,2018-11-06 10:53:36
https://api.github.com/repos/hyperledger/caliper/issues/211,https://api.github.com/repos/hyperledger/caliper/issues/comments/436372091,https://github.com/hyperledger/caliper/issues/211#issuecomment-436372091,Priyanshi52,"@aklenik Thanks for your response, I narrowed down the actual issue may be, the above issue caused because of following issue
on running **docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up**

I got 

Creating network ""simplenetwork_default"" with the default driver
Creating orderer.example.com
Creating simplenetwork_ca_1
Creating simplenetwork_peer_1
Creating ca_peerOrg2
Creating ca_peerOrg1
Creating peer0.org2.example.com
Creating peer1.org1.example.com
Creating peer0.org1.example.com
Creating peer1.org2.example.com
Attaching to orderer.example.com, simplenetwork_peer_1, simplenetwork_ca_1, ca_peerOrg1, ca_peerOrg2, peer1.org1.example.com, peer0.org2.example.com, peer1.org2.example.com, peer0.org1.example.com
orderer.example.com       | standard_init_linux.go:190: exec user process caused ""exec format error""
peer_1                    | standard_init_linux.go:190: exec user process caused ""exec format error""
orderer.example.com exited with code 1
ca_peerOrg1               | standard_init_linux.go:190: exec user process caused ""exec format error""
simplenetwork_peer_1 exited with code 1
ca_1                      | standard_init_linux.go:190: exec user process caused ""exec format error""
ca_peerOrg1 exited with code 1
ca_peerOrg2               | standard_init_linux.go:190: exec user process caused ""exec format error""
peer1.org1.example.com    | standard_init_linux.go:190: exec user process caused ""exec format error""
peer0.org2.example.com    | standard_init_linux.go:190: exec user process caused ""exec format error""
ca_peerOrg2 exited with code 1
simplenetwork_ca_1 exited with code 1
peer0.org1.example.com    | standard_init_linux.go:190: exec user process caused ""exec format error""
peer1.org2.example.com    | standard_init_linux.go:190: exec user process caused ""exec format error""
peer1.org1.example.com exited with code 1
peer0.org2.example.com exited with code 1
peer1.org2.example.com exited with code 1
peer0.org1.example.com exited with code 1

I am running it on Raspberry Pi which has **Linux raspberrypi 4.14.71-v7+ #1145 SMP Fri Sep 21 15:38:35 BST 2018 armv7l GNU/Linux** architecture.",2018-11-06 19:09:53,2018-11-06 19:09:53
https://api.github.com/repos/hyperledger/caliper/issues/211,https://api.github.com/repos/hyperledger/caliper/issues/comments/436488539,https://github.com/hyperledger/caliper/issues/211#issuecomment-436488539,aklenik,"@Priyanshi52 So the problem is bringing up a Fabric network on a pi. You should ask around on Fabric-specific channels about this. Also, I'm closing this issue since it's not Caliper-related. But feel free to report back if you succeed in bringing up the network on a pi. ",2018-11-07 03:05:02,2018-11-07 03:05:02
https://api.github.com/repos/hyperledger/caliper/issues/211,https://api.github.com/repos/hyperledger/caliper/issues/comments/437002054,https://github.com/hyperledger/caliper/issues/211#issuecomment-437002054,Priyanshi52,@aklenik please see issue #214 ,2018-11-08 13:57:36,2018-11-08 13:57:36
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/434685231,https://github.com/hyperledger/caliper/issues/210#issuecomment-434685231,nklincoln,If you check the docker container logs you should get some more detailed information. My initial suspicion is that the re-generated crypto-material has UUIDs within it for the PEM files. Have a look at the `generate.sh` file that we have in `caliper/network/fabric/config/` that performs the action you are describing but subsequently renames PEM files,2018-10-31 13:24:53,2018-10-31 13:24:53
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/434896030,https://github.com/hyperledger/caliper/issues/210#issuecomment-434896030,weijinxy,same question?  any solution? +1,2018-11-01 00:57:58,2018-11-01 00:57:58
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/434987380,https://github.com/hyperledger/caliper/issues/210#issuecomment-434987380,nklincoln,"@weijinxy - same answer as above. When you regenerate the crypto material, the PEM files change name. In the `generate.sh` script, there is a step in there that normalises these random file names so that caliper can use them during the setup and performance runs",2018-11-01 09:44:04,2018-11-01 09:44:04
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/434989051,https://github.com/hyperledger/caliper/issues/210#issuecomment-434989051,kulics,"@nklincoln I did not regenerate  crypto material, only genesis blocks and channels are generated.",2018-11-01 09:50:38,2018-11-01 09:50:38
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/435022483,https://github.com/hyperledger/caliper/issues/210#issuecomment-435022483,nklincoln,"@kulics did you change the relevant paths/variables in the docker compose files too (i see you renamed the genesis block etc)?

You will get *lots* more information if you perform a `docker logs <container>` that should help diagnose what is going wrong",2018-11-01 12:14:27,2018-11-01 12:14:27
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/435246654,https://github.com/hyperledger/caliper/issues/210#issuecomment-435246654,kulics,"@nklincoln no, I didn't change the docker compose file.
This is the git status -s
```
 M network/fabric/simplenetwork/generate.sh
 M network/fabric/simplenetwork/mychannel.tx
 M network/fabric/simplenetwork/twoorgs.genesis.block
```
The generate.sh diff
```
old mode 100644
new mode 100755
index 9289d88..c8d848b
--- a/network/fabric/simplenetwork/generate.sh
+++ b/network/fabric/simplenetwork/generate.sh
@@ -1,4 +1,4 @@
 #!/usr/bin/env bash
-~/go/src/github.com/hyperledger/fabric/build/bin/cryptogen generate --config=./
-~/go/src/github.com/hyperledger/fabric/build/bin/configtxgen -profile TwoOrgsOr
-~/go/src/github.com/hyperledger/fabric/build/bin/configtxgen -profile TwoOrgsCh
\ No newline at end of file
+#cryptogen generate --config=./crypto-config.yaml
+configtxgen -profile TwoOrgsOrdererGenesis -outputBlock twoorgs.genesis.block
+configtxgen -profile TwoOrgsChannel -outputCreateChannelTx mychannel.tx -channe
(END)
```
This is the full `node main.js` log
```
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
Creating network ""simplenetwork_default"" with the default driver
Creating simplenetwork_peer_1_e5ff01a712d9 ... done
Creating ca_peerOrg1                       ... done
Creating ca_peerOrg2                       ... done
Creating simplenetwork_ca_1_7266490d51da   ... done
Creating orderer.example.com               ... done
Creating peer1.org1.example.com            ... done
Creating peer0.org2.example.com            ... done
Creating peer0.org1.example.com            ... done
Creating peer1.org2.example.com            ... done
# create mychannel......
not ok 1 Failed to create channels Error: create status is SERVICE_UNAVAILABLE at channel.organizations.reduce.then.then.then (/home/fabric/caliper/src/fabric/create-channel.js:145:43) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/home/fabric/caliper/src/fabric/create-channel.js:159:19)
    stack: |-
      Error: Failed to create channels Error: create status is SERVICE_UNAVAILABLE
          at channel.organizations.reduce.then.then.then (/home/fabric/caliper/src/fabric/create-channel.js:145:43)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/home/fabric/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/fabric/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/fabric/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/fabric/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/home/fabric/caliper/src/fabric/create-channel.js:159:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/fabric/caliper/src/fabric/create-channel.js:160:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/fabric/caliper/src/fabric/create-channel.js:160:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)

1..1
# tests 1
# pass  0
# fail  1
``` 
This is the peer logs
```
2018-11-02 01:49:01.576 UTC [nodeCmd] serve -> INFO 001 Starting peer:
 Version: 1.1.0
 Go version: go1.9.2
 OS/Arch: linux/amd64
 Experimental features: false
 Chaincode:
  Base Image Version: 0.4.6
  Base Docker Namespace: hyperledger
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger

2018-11-02 01:49:01.576 UTC [ledgermgmt] initialize -> INFO 002 Initializing ledger mgmt
2018-11-02 01:49:01.576 UTC [kvledger] NewProvider -> INFO 003 Initializing ledger provider
2018-11-02 01:49:01.914 UTC [kvledger] NewProvider -> INFO 004 ledger provider Initialized
2018-11-02 01:49:01.914 UTC [ledgermgmt] initialize -> INFO 005 ledger mgmt initialized
2018-11-02 01:49:01.914 UTC [peer] func1 -> INFO 006 Auto-detected peer address: 192.168.112.9:7051
2018-11-02 01:49:01.914 UTC [peer] func1 -> INFO 007 Returning peer1.org2.example.com:7051
2018-11-02 01:49:01.914 UTC [peer] func1 -> INFO 008 Auto-detected peer address: 192.168.112.9:7051
2018-11-02 01:49:01.914 UTC [peer] func1 -> INFO 009 Returning peer1.org2.example.com:7051
2018-11-02 01:49:01.918 UTC [nodeCmd] serve -> INFO 00a Starting peer with TLS enabled
2018-11-02 01:49:01.920 UTC [eventhub_producer] start -> INFO 00b Event processor started
2018-11-02 01:49:01.921 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 00c Entering computeChaincodeEndpoint with peerHostname: peer1.org2.example.com
2018-11-02 01:49:01.921 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 00d Exit with ccEndpoint: peer1.org2.example.com:7052
2018-11-02 01:49:01.921 UTC [nodeCmd] createChaincodeServer -> WARN 00e peer.chaincodeListenAddress is not set, using peer1.org2.example.com:7052
2018-11-02 01:49:01.924 UTC [chaincode] NewChaincodeSupport -> INFO 00f Chaincode support using peerAddress: peer1.org2.example.com:7052
2018-11-02 01:49:01.924 UTC [sccapi] registerSysCC -> INFO 010 system chaincode cscc(github.com/hyperledger/fabric/core/scc/cscc) registered
2018-11-02 01:49:01.924 UTC [sccapi] registerSysCC -> INFO 011 system chaincode lscc(github.com/hyperledger/fabric/core/scc/lscc) registered
2018-11-02 01:49:01.924 UTC [sccapi] registerSysCC -> INFO 012 system chaincode escc(github.com/hyperledger/fabric/core/scc/escc) registered
2018-11-02 01:49:01.924 UTC [sccapi] registerSysCC -> INFO 013 system chaincode vscc(github.com/hyperledger/fabric/core/scc/vscc) registered
2018-11-02 01:49:01.924 UTC [sccapi] registerSysCC -> INFO 014 system chaincode qscc(github.com/hyperledger/fabric/core/chaincode/qscc) registered
2018-11-02 01:49:01.926 UTC [gossip/service] func1 -> INFO 015 Initialize gossip with endpoint peer1.org2.example.com:7051 and bootstrap set [127.0.0.1:7051]
2018-11-02 01:49:01.928 UTC [msp] DeserializeIdentity -> INFO 016 Obtaining identity
2018-11-02 01:49:01.930 UTC [gossip/discovery] NewDiscoveryService -> INFO 017 Started {peer1.org2.example.com:7051 [] [11 68 119 38 191 58 43 167 239 184 224 155 16 24 189 30 86 123 122 208 19 44 255 163 132 195 78 56 113 245 171 250] peer1.org2.example.com:7051 <nil>} incTime is 1541123341930015909
2018-11-02 01:49:01.930 UTC [gossip/gossip] NewGossipService -> INFO 018 Creating gossip service with self membership of {peer1.org2.example.com:7051 [] [11 68 119 38 191 58 43 167 239 184 224 155 16 24 189 30 86 123 122 208 19 44 255 163 132 195 78 56 113 245 171 250] peer1.org2.example.com:7051 <nil>}
2018-11-02 01:49:01.932 UTC [gossip/gossip] start -> INFO 019 Gossip instance peer1.org2.example.com:7051 started
2018-11-02 01:49:01.933 UTC [cscc] Init -> INFO 01a Init CSCC
2018-11-02 01:49:01.933 UTC [sccapi] deploySysCC -> INFO 01b system chaincode cscc/(github.com/hyperledger/fabric/core/scc/cscc) deployed
2018-11-02 01:49:01.934 UTC [sccapi] deploySysCC -> INFO 01c system chaincode lscc/(github.com/hyperledger/fabric/core/scc/lscc) deployed
2018-11-02 01:49:01.935 UTC [escc] Init -> INFO 01d Successfully initialized ESCC
2018-11-02 01:49:01.935 UTC [sccapi] deploySysCC -> INFO 01e system chaincode escc/(github.com/hyperledger/fabric/core/scc/escc) deployed
2018-11-02 01:49:01.936 UTC [sccapi] deploySysCC -> INFO 01f system chaincode vscc/(github.com/hyperledger/fabric/core/scc/vscc) deployed
2018-11-02 01:49:01.936 UTC [qscc] Init -> INFO 020 Init QSCC
2018-11-02 01:49:01.937 UTC [sccapi] deploySysCC -> INFO 021 system chaincode qscc/(github.com/hyperledger/fabric/core/chaincode/qscc) deployed
2018-11-02 01:49:01.937 UTC [nodeCmd] initSysCCs -> INFO 022 Deployed system chaincodes
2018-11-02 01:49:01.937 UTC [nodeCmd] serve -> INFO 023 Starting peer with ID=[name:""peer1.org2.example.com"" ], network ID=[dev], address=[peer1.org2.example.com:7051]
```
This is the orderer logs
```
2018-11-02 01:48:54.910 UTC [orderer/common/server] prettyPrintStruct -> INFO 001 Orderer config values:
	General.LedgerType = ""file""
	General.ListenAddress = ""0.0.0.0""
	General.ListenPort = 7050
	General.TLS.Enabled = true
	General.TLS.PrivateKey = ""/etc/hyperledger/msp/orderer/tls/server.key""
	General.TLS.Certificate = ""/etc/hyperledger/msp/orderer/tls/server.crt""
	General.TLS.RootCAs = [/etc/hyperledger/msp/orderer/tls/ca.crt /etc/hyperledger/msp/peerOrg1/tls/ca.crt /etc/hyperledger/msp/peerOrg2/tls/ca.crt]
	General.TLS.ClientAuthRequired = false
	General.TLS.ClientRootCAs = []
	General.Keepalive.ServerMinInterval = 1m0s
	General.Keepalive.ServerInterval = 2h0m0s
	General.Keepalive.ServerTimeout = 20s
	General.GenesisMethod = ""file""
	General.GenesisProfile = ""SampleInsecureSolo""
	General.SystemChannel = ""testchainid""
	General.GenesisFile = ""/etc/hyperledger/configtx/twoorgs.genesis.block""
	General.Profile.Enabled = false
	General.Profile.Address = ""0.0.0.0:6060""
	General.LogLevel = ""info""
	General.LogFormat = ""%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}""
	General.LocalMSPDir = ""/etc/hyperledger/msp/orderer/msp""
	General.LocalMSPID = ""OrdererMSP""
	General.BCCSP.ProviderName = ""SW""
	General.BCCSP.SwOpts.SecLevel = 256
	General.BCCSP.SwOpts.HashFamily = ""SHA2""
	General.BCCSP.SwOpts.Ephemeral = false
	General.BCCSP.SwOpts.FileKeystore.KeyStorePath = ""/etc/hyperledger/msp/orderer/msp/keystore""
	General.BCCSP.SwOpts.DummyKeystore =
	General.BCCSP.PluginOpts =
	General.BCCSP.Pkcs11Opts =
	General.Authentication.TimeWindow = 15m0s
	FileLedger.Location = ""/var/hyperledger/production/orderer""
	FileLedger.Prefix = ""hyperledger-fabric-ordererledger""
	RAMLedger.HistorySize = 1000
	Kafka.Retry.ShortInterval = 5s
	Kafka.Retry.ShortTotal = 10m0s
	Kafka.Retry.LongInterval = 5m0s
	Kafka.Retry.LongTotal = 12h0m0s
	Kafka.Retry.NetworkTimeouts.DialTimeout = 10s
	Kafka.Retry.NetworkTimeouts.ReadTimeout = 10s
	Kafka.Retry.NetworkTimeouts.WriteTimeout = 10s
	Kafka.Retry.Metadata.RetryMax = 3
	Kafka.Retry.Metadata.RetryBackoff = 250ms
	Kafka.Retry.Producer.RetryMax = 3
	Kafka.Retry.Producer.RetryBackoff = 100ms
	Kafka.Retry.Consumer.RetryBackoff = 2s
	Kafka.Verbose = false
	Kafka.Version = 0.10.2.0
	Kafka.TLS.Enabled = false
	Kafka.TLS.PrivateKey = """"
	Kafka.TLS.Certificate = """"
	Kafka.TLS.RootCAs = []
	Kafka.TLS.ClientAuthRequired = false
	Kafka.TLS.ClientRootCAs = []
	Debug.BroadcastTraceDir = """"
	Debug.DeliverTraceDir = """"
2018-11-02 01:48:54.911 UTC [orderer/common/server] initializeServerConfig -> INFO 002 Starting orderer with TLS enabled
2018-11-02 01:48:55.296 UTC [fsblkstorage] newBlockfileMgr -> INFO 003 Getting block information from block storage
2018-11-02 01:48:55.484 UTC [orderer/consensus/kafka] newChain -> INFO 004 [channel: testchainid] Starting chain with last persisted offset -3 and last recorded block 0
2018-11-02 01:48:55.484 UTC [orderer/commmon/multichannel] NewRegistrar -> INFO 005 Starting system channel 'testchainid' with genesis block hash 61574dbc1a4879f3e74cbb73a4d63e83f9406993ccb19aff3a9bc4681f47a907 and orderer type kafka
2018-11-02 01:48:55.485 UTC [orderer/common/server] Start -> INFO 006 Starting orderer:
 Version: 1.1.0
 Go version: go1.9.2
 OS/Arch: linux/amd64
 Experimental features: false
2018-11-02 01:48:55.485 UTC [orderer/common/server] Start -> INFO 007 Beginning to serve requests
2018-11-02 01:48:55.485 UTC [orderer/consensus/kafka] setupProducerForChannel -> INFO 008 [channel: testchainid] Setting up the producer for this channel...
2018-11-02 01:48:55.493 UTC [orderer/consensus/kafka] startThread -> INFO 009 [channel: testchainid] Producer set up successfully
2018-11-02 01:48:55.493 UTC [orderer/consensus/kafka] sendConnectMessage -> INFO 00a [channel: testchainid] About to post the CONNECT message...
2018-11-02 01:49:01.913 UTC [orderer/common/broadcast] Handle -> WARN 00b [channel: mychannel] Rejecting broadcast of message from 192.168.112.1:43534 with SERVICE_UNAVAILABLE: rejected by Consenter: will not enqueue, consenter for this channel hasn't started yet
```

Thank you for your help;",2018-11-02 01:59:16,2018-11-02 01:59:16
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/435307049,https://github.com/hyperledger/caliper/issues/210#issuecomment-435307049,nklincoln,@kulics - if you do a `docker ps -a` are any containers showing in a stopped (error) state?,2018-11-02 08:32:15,2018-11-02 08:32:15
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/435310470,https://github.com/hyperledger/caliper/issues/210#issuecomment-435310470,kulics,@nklincoln emmmmmm I checked it and didn't see anything like it.,2018-11-02 08:47:14,2018-11-02 08:47:14
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/435313095,https://github.com/hyperledger/caliper/issues/210#issuecomment-435313095,nklincoln,"@kulics - any errors showing in the ca container(s)?
To save from using github as a messenger service, we could jump to the Caliper chat channel in RocketChat (https://chat.hyperledger.org/channel/caliper) and report any findings in this issue for anyone following it?",2018-11-02 08:58:02,2018-11-02 08:59:37
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/435320150,https://github.com/hyperledger/caliper/issues/210#issuecomment-435320150,kulics,"@nklincoln  the ca logs 
```
2018/11/02 01:48:52 [INFO] Created default configuration file at /etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
2018/11/02 01:48:52 [INFO] Starting server in home directory: /etc/hyperledger/fabric-ca-server
2018/11/02 01:48:52 [INFO] Server Version: 1.1.0
2018/11/02 01:48:52 [INFO] Server Levels: &{Identity:1 Affiliation:1 Certificate:1}
2018/11/02 01:48:52 [DEBUG] Making server filenames absolute
2018/11/02 01:48:52 [DEBUG] Initializing default CA in directory /etc/hyperledger/fabric-ca-server
2018/11/02 01:48:52 [DEBUG] Init CA with home /etc/hyperledger/fabric-ca-server and config {Version:1.1.0 Cfg:{Identities:{AllowRemove:false} Affiliations:{AllowRemove:false}} CA:{Name:ca-org2 Keyfile:/etc/hyperledger/fabric-ca-server-config/bf56c23fc917c718d3461b2c9de54e75c36575e883e808091e25e4d64520c4f9_sk Certfile:/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem Chainfile:ca-chain.pem} Signing:0xc420353240 CSR:{CN:fabric-ca-server Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[db2e4f9db063 localhost] KeyRequest:<nil> CA:0xc4202d94c0 SerialNumber:} Registry:{MaxEnrollments:-1 Identities:[{ Name:**** Pass:**** Type:client Affiliation: MaxEnrollments:0 Attrs:map[hf.GenCRL:1 hf.Registrar.Attributes:* hf.AffiliationMgr:1 hf.Registrar.Roles:peer,orderer,client,user hf.Registrar.DelegateRoles:peer,orderer,client,user hf.Revoker:1 hf.IntermediateCA:1]  }]} Affiliations:map[org2:[department1] org1:[department1 department2]] LDAP:{ Enabled:false URL:ldap://****:****@<host>:<port>/<base> UserFilter:(uid=%s) GroupFilter:(memberUid=%s) Attribute:{[uid member] [{ }] map[groups:[{ }]]} TLS:{false [] { }}  } DB:{ Type:sqlite3 Datasource:fabric-ca-server.db TLS:{false [] { }}  } CSP:0xc4203485a0 Client:<nil> Intermediate:{ParentServer:{ URL: CAName:  } TLS:{Enabled:false CertFiles:[] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** Profile: Label: CSR:<nil> CAName: AttrReqs:[]  }} CRL:{Expiry:24h0m0s}}
2018/11/02 01:48:52 [DEBUG] CA Home Directory: /etc/hyperledger/fabric-ca-server
2018/11/02 01:48:52 [DEBUG] Checking configuration file version '1.1.0' against server version: '1.1.0'
2018/11/02 01:48:52 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc420348600 PluginOpts:<nil> Pkcs11Opts:<nil>}
2018/11/02 01:48:52 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42035c330 DummyKeystore:<nil>}
2018/11/02 01:48:52 [DEBUG] Initialize key material
2018/11/02 01:48:52 [DEBUG] Making CA filenames absolute
2018/11/02 01:48:52 [INFO] The CA key and certificate files already exist
2018/11/02 01:48:52 [INFO] Key file location: /etc/hyperledger/fabric-ca-server-config/bf56c23fc917c718d3461b2c9de54e75c36575e883e808091e25e4d64520c4f9_sk
2018/11/02 01:48:52 [INFO] Certificate file location: /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
2018/11/02 01:48:52 [DEBUG] Validating the CA certificate and key
2018/11/02 01:48:52 [DEBUG] Check CA certificate for valid dates
2018/11/02 01:48:52 [DEBUG] Check CA certificate for valid usages
2018/11/02 01:48:52 [DEBUG] Check CA certificate for valid IsCA value
2018/11/02 01:48:52 [DEBUG] Check that key type is supported
2018/11/02 01:48:52 [DEBUG] Check that key size is of appropriate length
2018/11/02 01:48:52 [DEBUG] Check that public key and private key match
2018/11/02 01:48:52 [DEBUG] Validation of CA certificate and key successful
2018/11/02 01:48:52 [DEBUG] Loading CN from existing enrollment information
2018/11/02 01:48:52 [DEBUG] Initializing DB
2018/11/02 01:48:52 [DEBUG] Initializing 'sqlite3' database at '/etc/hyperledger/fabric-ca-server/fabric-ca-server.db'
2018/11/02 01:48:52 [DEBUG] Using sqlite database, connect to database in home (/etc/hyperledger/fabric-ca-server/fabric-ca-server.db) directory
2018/11/02 01:48:52 [DEBUG] Creating SQLite database (/etc/hyperledger/fabric-ca-server/fabric-ca-server.db) if it does not exist...
2018/11/02 01:48:52 [DEBUG] Creating users table if it does not exist
2018/11/02 01:48:52 [DEBUG] Creating affiliations table if it does not exist
2018/11/02 01:48:52 [DEBUG] Creating certificates table if it does not exist
2018/11/02 01:48:52 [DEBUG] Creating properties table if it does not exist
2018/11/02 01:48:52 [DEBUG] Successfully opened sqlite3 DB
2018/11/02 01:48:52 [DEBUG] Checking database schema...
2018/11/02 01:48:52 [DEBUG] Update SQLite schema, if using outdated schema
2018/11/02 01:48:52 [DEBUG] Upgrade identities table
2018/11/02 01:48:52 [DEBUG] Creating users table if it does not exist
2018/11/02 01:48:52 [DEBUG] Upgrade affiliation table
2018/11/02 01:48:52 [DEBUG] Creating affiliations table if it does not exist
2018/11/02 01:48:52 [DEBUG] Upgrade certificates table
2018/11/02 01:48:52 [DEBUG] Creating certificates table if it does not exist
2018/11/02 01:48:52 [DEBUG] Initializing identity registry
2018/11/02 01:48:52 [DEBUG] Initialized DB identity registry
2018/11/02 01:48:52 [DEBUG] DB: Get properties [identity.level affiliation.level certificate.level]
2018/11/02 01:48:52 [DEBUG] Checking database levels 'map[affiliation.level:0 certificate.level:0 identity.level:0]' against server levels '&{Identity:1 Affiliation:1 Certificate:1}'
2018/11/02 01:48:52 [DEBUG] Loading identity table
2018/11/02 01:48:52 [DEBUG] Loading identity 'admin'
2018/11/02 01:48:52 [DEBUG] DB: Getting identity admin
2018/11/02 01:48:52 [DEBUG] Max enrollment value verification - User specified max enrollment: 0, CA max enrollment: -1
2018/11/02 01:48:52 [DEBUG] DB: Add identity admin
2018/11/02 01:48:53 [DEBUG] Successfully added identity admin to the database
2018/11/02 01:48:53 [DEBUG] Registered identity: { Name:**** Pass:**** Type:client Affiliation: MaxEnrollments:-1 Attrs:map[hf.Registrar.DelegateRoles:peer,orderer,client,user hf.Revoker:1 hf.IntermediateCA:1 hf.GenCRL:1 hf.Registrar.Attributes:* hf.AffiliationMgr:1 hf.Registrar.Roles:peer,orderer,client,user]  }
2018/11/02 01:48:53 [DEBUG] Successfully loaded identity table
2018/11/02 01:48:53 [DEBUG] Loading affiliations table
2018/11/02 01:48:53 [DEBUG] DB: Add affiliation org2
2018/11/02 01:48:53 [DEBUG] Affiliation 'org2' added
2018/11/02 01:48:53 [DEBUG] DB: Add affiliation org2.department1
2018/11/02 01:48:53 [DEBUG] Affiliation 'org2.department1' added
2018/11/02 01:48:53 [DEBUG] DB: Add affiliation org1
2018/11/02 01:48:53 [DEBUG] Affiliation 'org1' added
2018/11/02 01:48:53 [DEBUG] DB: Add affiliation org1.department1
2018/11/02 01:48:53 [DEBUG] Affiliation 'org1.department1' added
2018/11/02 01:48:53 [DEBUG] DB: Add affiliation org1.department2
2018/11/02 01:48:53 [DEBUG] Affiliation 'org1.department2' added
2018/11/02 01:48:53 [DEBUG] Successfully loaded affiliations table
2018/11/02 01:48:53 [DEBUG] Checking and performing migration, if needed
2018/11/02 01:48:53 [DEBUG] Updating database level to &{Identity:1 Affiliation:1 Certificate:1}
2018/11/02 01:48:54 [INFO] Initialized sqlite3 database at /etc/hyperledger/fabric-ca-server/fabric-ca-server.db
2018/11/02 01:48:54 [DEBUG] Initializing enrollment signer
2018/11/02 01:48:54 [DEBUG] No key found in BCCSP keystore, attempting fallback
2018/11/02 01:48:54 [DEBUG] validating configuration
2018/11/02 01:48:54 [DEBUG] validate local profile
2018/11/02 01:48:54 [DEBUG] profile is valid
2018/11/02 01:48:54 [DEBUG] validate local profile
2018/11/02 01:48:54 [DEBUG] profile is valid
2018/11/02 01:48:54 [DEBUG] validate local profile
2018/11/02 01:48:54 [DEBUG] profile is valid
2018/11/02 01:48:54 [DEBUG] CA initialization successful
2018/11/02 01:48:54 [INFO] Home directory for default CA: /etc/hyperledger/fabric-ca-server
2018/11/02 01:48:54 [DEBUG] 1 CA instance(s) running on server
2018/11/02 01:48:54 [DEBUG] TLS is enabled
2018/11/02 01:48:54 [DEBUG] TLS Certificate: /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem, TLS Key: /etc/hyperledger/fabric-ca-server-config/bf56c23fc917c718d3461b2c9de54e75c36575e883e808091e25e4d64520c4f9_sk
2018/11/02 01:48:54 [DEBUG] Client authentication type requested: noclientcert
2018/11/02 01:48:54 [INFO] Listening on https://0.0.0.0:7054
```",2018-11-02 09:26:19,2018-11-02 09:26:19
https://api.github.com/repos/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/comments/436211296,https://github.com/hyperledger/caliper/issues/210#issuecomment-436211296,aklenik,"@kulics Based on the last log of the orderer, it isn't ready yet to serve requests, such as channel creation. Try the following: remove the start script from the config file, start the docker network manually, wait a few seconds, then start the benchmark.",2018-11-06 10:50:12,2018-11-06 10:50:12
https://api.github.com/repos/hyperledger/caliper/issues/208,https://api.github.com/repos/hyperledger/caliper/issues/comments/437586376,https://github.com/hyperledger/caliper/pull/208#issuecomment-437586376,aklenik,"@panyu4 Some suggestions before merging:

1. There are parts of the code-base that is executed many-many times. For example, callbacks and rate controllers are called for every client instance for every tx. The info logging in these should be changed to debug level, otherwise, the user will see every kind of (not really update) message, and won't really see the Tx progress. Hopefully, there aren't many callbacks and rate controllers, so this is easy to change.

1. The console transport of the default logger is created without a level. It should only write info and above (so not debug). The file logger can log everything.

1. Some files read the logger settings, then pass it to the `getLogger` method. I think the logger settings should be read inside the `getLogger` method only, consumers of the logger shouldn't care about the settings, they just have to use the logger. ",2018-11-10 14:08:36,2018-11-10 14:08:36
https://api.github.com/repos/hyperledger/caliper/issues/208,https://api.github.com/repos/hyperledger/caliper/issues/comments/437868831,https://github.com/hyperledger/caliper/pull/208#issuecomment-437868831,panyu4,"@aklenik , Thanks. I've finished the modifications according to your suggestions. Please review again. ",2018-11-12 12:52:42,2018-11-12 12:52:42
https://api.github.com/repos/hyperledger/caliper/issues/208,https://api.github.com/repos/hyperledger/caliper/issues/comments/437869423,https://github.com/hyperledger/caliper/pull/208#issuecomment-437869423,aklenik,@panyu4 When did you make the last modification? Because I just finished reviewing it. Did you make changes in the last 15 minutes? :),2018-11-12 12:54:32,2018-11-12 12:54:32
https://api.github.com/repos/hyperledger/caliper/issues/207,https://api.github.com/repos/hyperledger/caliper/issues/comments/438061597,https://github.com/hyperledger/caliper/issues/207#issuecomment-438061597,aklenik,Implemented by PR #208 ,2018-11-12 23:06:11,2018-11-12 23:06:11
https://api.github.com/repos/hyperledger/caliper/issues/206,https://api.github.com/repos/hyperledger/caliper/issues/comments/434304913,https://github.com/hyperledger/caliper/issues/206#issuecomment-434304913,nklincoln,@vamdivd - could you fill out the template so that we can try to recreate this?,2018-10-30 13:41:06,2018-10-30 13:41:06
https://api.github.com/repos/hyperledger/caliper/issues/206,https://api.github.com/repos/hyperledger/caliper/issues/comments/434310268,https://github.com/hyperledger/caliper/issues/206#issuecomment-434310268,aklenik,"@vamdivd Have you installed the required `grpc` version?
`npm install grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0`",2018-10-30 13:55:40,2018-10-30 13:55:40
https://api.github.com/repos/hyperledger/caliper/issues/206,https://api.github.com/repos/hyperledger/caliper/issues/comments/434576496,https://github.com/hyperledger/caliper/issues/206#issuecomment-434576496,vamdivd,"@aklenik according to your reply, I solved the problem. I forgot to install grpc@1.10.1. 
thx!",2018-10-31 06:31:56,2018-10-31 06:31:56
https://api.github.com/repos/hyperledger/caliper/issues/205,https://api.github.com/repos/hyperledger/caliper/issues/comments/433924523,https://github.com/hyperledger/caliper/issues/205#issuecomment-433924523,luigima,"Hey, my experiance showed that caliper error messages will not help you at all. Have a look at the logs of the docker container and search for errors there. To do so type `docker ps -a`. If you are lucky there will be docker containers that ""exited"". Type `docker logs org2.example.com` or whatever container caused issues.",2018-10-29 14:11:57,2018-10-29 14:11:57
https://api.github.com/repos/hyperledger/caliper/issues/205,https://api.github.com/repos/hyperledger/caliper/issues/comments/434147946,https://github.com/hyperledger/caliper/issues/205#issuecomment-434147946,wenshuohan,"> 嘿，我的经验表明，卡尺错误信息根本无法帮助你。查看docker容器的日志并在那里搜索错误。这样做类型`docker ps -a`。如果幸运的话，会有“退出”的泊坞容器。键入`docker logs org2.example.com`或任何容器导致问题。

thankyou very much,when i watch the peer0.org1.example.com docker logs,I find there has a wrong:2018-10-29 13:45:58.021 UTC [couchdb] handleRequest -> WARN 004 Retrying couchdb request in 125ms. Attempt:1  Error:Get http://couchdb.peer0.org1.example.com:5984/: dial tcp 172.22.0.2:5984: getsockopt: connection refused.
may be it is the point.
",2018-10-30 02:21:27,2018-10-30 02:21:27
https://api.github.com/repos/hyperledger/caliper/issues/205,https://api.github.com/repos/hyperledger/caliper/issues/comments/434302165,https://github.com/hyperledger/caliper/issues/205#issuecomment-434302165,aklenik,"@wenshuohan running many peer containers with couchDB is really resource demanding. In this case, the connection could be lost between the peer and its DB under high (or even smaller) load.
Try to spread your network among different machines and see if the error persists.",2018-10-30 13:33:21,2018-10-30 13:34:00
https://api.github.com/repos/hyperledger/caliper/issues/205,https://api.github.com/repos/hyperledger/caliper/issues/comments/434526158,https://github.com/hyperledger/caliper/issues/205#issuecomment-434526158,wenshuohan,"@aklenik Thankyou,I will have a try.",2018-10-31 01:12:28,2018-10-31 01:12:28
https://api.github.com/repos/hyperledger/caliper/issues/205,https://api.github.com/repos/hyperledger/caliper/issues/comments/437723047,https://github.com/hyperledger/caliper/issues/205#issuecomment-437723047,houqinghui,"have you resolved the problem ?    refer to #112 
A:  One solution: 
a.	docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d in another shell
b.	remove ""start"": ""docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d"", from config.json
c.	node benchmark/simple/main.js
another solution: 
Execute commands under root privileges. @wenshuohan 
",2018-11-12 01:01:34,2018-11-16 02:53:54
https://api.github.com/repos/hyperledger/caliper/issues/205,https://api.github.com/repos/hyperledger/caliper/issues/comments/440900108,https://github.com/hyperledger/caliper/issues/205#issuecomment-440900108,wenshuohan,@aklenik  have you take a try about stronger machine/VM，could you tell me how can i spread the network among different machines。,2018-11-22 03:13:12,2018-11-22 03:13:12
https://api.github.com/repos/hyperledger/caliper/issues/205,https://api.github.com/repos/hyperledger/caliper/issues/comments/469424068,https://github.com/hyperledger/caliper/issues/205#issuecomment-469424068,aklenik,"@wenshuohan Any luck with your network? There is no ultimate method for deploying Fabric on multiple machines. Try to take a look at Hyperledger Cello. Or start the Fabric binaries manually on each machine. 
But once your network is running, Caliper doesn't care about its location, just set the right endpoint addresses. ",2019-03-04 21:14:04,2019-03-04 21:14:04
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/435302843,https://github.com/hyperledger/caliper/issues/204#issuecomment-435302843,zsh122958,Have you solved your problem?I have the same problem,2018-11-02 08:13:02,2018-11-02 08:13:02
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/435303483,https://github.com/hyperledger/caliper/issues/204#issuecomment-435303483,wenshuohan,"no，a person tell me “running many peer containers with couchDB is really resource demanding. In this case, the connection could be lost between the peer and its DB under high (or even smaller) load.
Try to spread your network among different machines and see if the error persists.”maybe you can have a try",2018-11-02 08:16:12,2018-11-02 08:16:12
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/435304110,https://github.com/hyperledger/caliper/issues/204#issuecomment-435304110,zsh122958,"In private, I discussed two nodes vx yangyang602112",2018-11-02 08:19:18,2018-11-02 08:19:18
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436160007,https://github.com/hyperledger/caliper/issues/204#issuecomment-436160007,houqinghui,"@wenshuohan  @zsh122958  the problem is like the issue #112 , you can take a look at the issue.
one solution: 
1. docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d in another shell
2. remove ""start"": ""docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d"", from config.json
3.node benchmark/simple/main.js

another solution:
1. change user to root user.



",2018-11-06 07:47:34,2018-11-06 07:47:34
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436180104,https://github.com/hyperledger/caliper/issues/204#issuecomment-436180104,zsh122958,"
Thank you very much for solving the problem
Now the error is port occupancy let me set it up first


非常感谢您 问题解决啦 
现在报错是端口占用 我先设置一下






18234444581@163.com
 
From: houqinghui
Date: 2018-11-06 15:47
To: hyperledger/caliper
CC: zsh122958; Mention
Subject: Re: [hyperledger/caliper] error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed at new createStatusError (/home/hanwenshuo/caliper/node_modules/grpc/src/client.js:64:15) at /home/hanwenshuo/caliper/node_modules/grpc/src/client.js:583:15 (#204)
@wenshuohan @zsh122958 the problem is like the issue #112 , you can take a look at the issue.
one solution:
docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d in another shell
remove ""start"": ""docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d"", from config.json
3.node benchmark/simple/main.js
another solution:
change user to root user.
—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or mute the thread.
",2018-11-06 09:06:32,2018-11-06 09:06:32
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436206736,https://github.com/hyperledger/caliper/issues/204#issuecomment-436206736,zsh122958,"









我使用不同的节点放到不同的服务器上 还是不行 
是否我该去了解一下网络配置方面的问题
我应该直接修修改docker-compose.yaml 文件么？
I can't put different nodes on different servers
Should I learn about network configuration
Should I modify the docker-composer. Yaml file directly?



18234444581@163.com
 
From: houqinghui
Date: 2018-11-06 15:47
To: hyperledger/caliper
CC: zsh122958; Mention
Subject: Re: [hyperledger/caliper] error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed at new createStatusError (/home/hanwenshuo/caliper/node_modules/grpc/src/client.js:64:15) at /home/hanwenshuo/caliper/node_modules/grpc/src/client.js:583:15 (#204)
@wenshuohan @zsh122958 the problem is like the issue #112 , you can take a look at the issue.
one solution:
docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d in another shell
remove ""start"": ""docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d"", from config.json
3.node benchmark/simple/main.js
another solution:
change user to root user.
―
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or mute the thread.
",2018-11-06 10:34:12,2018-11-06 10:34:12
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436213014,https://github.com/hyperledger/caliper/issues/204#issuecomment-436213014,aklenik,"@wenshuohan Can you share your callback implementation as a gist, so I can reproduce the problem? Also note, that your chaincode endorsement policy doesn't require a signature from Org3. I don't know whether this is intentional or not.",2018-11-06 10:56:39,2018-11-06 10:56:39
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436236628,https://github.com/hyperledger/caliper/issues/204#issuecomment-436236628,wenshuohan,"@aklenik my prolem is same as #205，when I look at the peer2.org1.example.com,there is a error:
2018-11-06 12:23:12.436 UTC [couchdb] handleRequest -> WARN 004 Retrying couchdb request in 125ms. Attempt:1  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.19.0.10:5984: getsockopt: connection refused
2018-11-06 12:23:12.562 UTC [couchdb] handleRequest -> WARN 005 Retrying couchdb request in 250ms. Attempt:2  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.19.0.10:5984: getsockopt: connection refused
2018-11-06 12:23:12.813 UTC [couchdb] handleRequest -> WARN 006 Retrying couchdb request in 500ms. Attempt:3  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.19.0.10:5984: getsockopt: connection refused
2018-11-06 12:23:13.314 UTC [couchdb] handleRequest -> WARN 007 Retrying couchdb request in 1s. Attempt:4  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.19.0.10:5984: getsockopt: connection refused
2018-11-06 12:23:14.315 UTC [couchdb] handleRequest -> WARN 008 Retrying couchdb request in 2s. Attempt:5  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.19.0.10:5984: getsockopt: connection refused
",2018-11-06 12:31:47,2018-11-06 12:31:47
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436249855,https://github.com/hyperledger/caliper/issues/204#issuecomment-436249855,aklenik,"@wenshuohan Take a look at the CouchDB container logs, maybe it couldn't start properly. Or you have misconfigured the admin access to the DB in the peer settings.",2018-11-06 13:20:18,2018-11-06 13:20:18
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436255510,https://github.com/hyperledger/caliper/issues/204#issuecomment-436255510,wenshuohan,"@aklenik when I look at the couchdb.peer2.org1.example.com,there is the error:
[error] 2018-11-06T13:26:08.239858Z nonode@nohost emulator -------- Error in process <0.325.0> with exit value:
{database_does_not_exist,[{mem3_shards,load_shards_from_db,""_users"",[{file,""src/mem3_shards.erl""},{line,403}]},{mem3_shards,load_shards_from_disk,1,[{file,""src/mem3_shards.erl""},{line,378}]},{mem3_shards,load_shards_from_disk,2,[{file,""src/mem3_shards.erl""},{line,407}]},{mem3_shards,for_docid,3,[{file,""src/mem3_shards.erl""},{line,91}]},{fabric_doc_open,go,3,[{file,""src/fabric_doc_open.erl""},{line,38}]},{chttpd_auth_cache,ensure_auth_ddoc_exists,2,[{file,""src/chttpd_auth_cache.erl""},{line,187}]},{chttpd_auth_cache,listen_for_changes,1,[{file,""src/chttpd_auth_cache.erl""},{line,134}]}]}
",2018-11-06 13:39:28,2018-11-06 13:39:28
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436256097,https://github.com/hyperledger/caliper/issues/204#issuecomment-436256097,wenshuohan,"@aklenik when I look at the couchdb.peer2.org1.example.com's docker logs,there is the warning：
****************************************************
WARNING: CouchDB is running in Admin Party mode.
         This will allow anyone with access to the
         CouchDB port to access your database. In
         Docker's default configuration, this is
         effectively any other container on the same
         system.
         Use ""-e COUCHDB_USER=admin -e COUCHDB_PASSWORD=password""
         to set it in ""docker run"".
****************************************************
",2018-11-06 13:41:33,2018-11-06 13:41:33
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436259853,https://github.com/hyperledger/caliper/issues/204#issuecomment-436259853,aklenik,"@wenshuohan This seems like a CouchDB issue. Try setting the admin user and password for both the CouchDB and peer containers, as [suggested here](https://github.com/hyperledger/fabric-samples/blob/release-1.3/first-network/docker-compose-couch.yaml#L12-L37) to avoid Admin Party mode. 

If it doesn't solve your problem, then try to set up the network on multiple machines (a 3 org network might be too much for a single machine), or try a Fabric specific forum (RocketChat, mailing list), because this is not Caliper-related.",2018-11-06 13:54:00,2018-11-06 13:54:00
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436479276,https://github.com/hyperledger/caliper/issues/204#issuecomment-436479276,wenshuohan,"@coulde you please tell me how to set the admin user and password for couchDB,I I try to modify docker-compose-tls.yaml ,add"" - COUCHDB_USER=    - COUCHDB_PASSWORD= ""to couchdb.peer0.org1.example.com's environment,but it Report errors",2018-11-07 02:14:17,2018-11-07 02:14:17
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436487118,https://github.com/hyperledger/caliper/issues/204#issuecomment-436487118,aklenik,"@wenshuohan You have to fill in the values you want to use:
```
- COUCHDB_USER=admin
- COUCHDB_PASSWORD=adminpw
```

And don't forget to set the (almost) same for the corresponding peer container:
```
- CORE_LEDGER_STATE_STATEDATABASE=CouchDB
- CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=<container_name>:<port>
- CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
- CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
```",2018-11-07 02:56:43,2018-11-07 02:56:43
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436491216,https://github.com/hyperledger/caliper/issues/204#issuecomment-436491216,wenshuohan,"@aklenik I do fill in the values：
couchdb.peer2.org2.example.com:
    container_name: couchdb.peer2.org2.example.com
    image: hyperledger/fabric-couchdb:x86_64-0.4.6
    ports:
      - 6986:5984
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
      DB_URL: http://localhost:5984/member_db
And set same for the corresponding peer container：
- CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      -CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer2.org2.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw

but  it report errors：
docker-compose -f network/fabric/2-org-3-peer/docker-compose-tls.yaml up -d
yaml.parser.ParserError: while parsing a block collection
  in ""./network/fabric/2-org-3-peer/docker-compose-tls.yaml"", line 109, column 7
expected <block end>, but found '?'
  in ""./network/fabric/2-org-3-peer/docker-compose-tls.yaml"", line 111, column 7
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Command failed: docker-compose -f network/fabric/2-org-3-peer/docker-compose-tls.yaml up -d
yaml.parser.ParserError: while parsing a block collection

The line 109 is what i added：
 - COUCHDB_USER=admin
- COUCHDB_PASSWORD=adminpw
and the line 111 is:
 DB_URL: http://localhost:5984/member_db
I think this format is clash, but I don't know how to modify it
",2018-11-07 03:20:59,2018-11-07 03:20:59
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/436543765,https://github.com/hyperledger/caliper/issues/204#issuecomment-436543765,aklenik,"```
yaml.parser.ParserError: while parsing a block collection
in ""./network/fabric/2-org-3-peer/docker-compose-tls.yaml"", line 109, column 7
expected , but found '?'
```

This is your first error, complaining about the yaml syntax. Can you share your docker compose file as a [GitHub Gist](https://gist.github.com/)?",2018-11-07 08:28:30,2018-11-07 08:28:30
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/437226917,https://github.com/hyperledger/caliper/issues/204#issuecomment-437226917,wenshuohan,"@aklenik    hey，This is my cofig files
 https://gist.github.com/wenshuohan/7996452492060f05ad36e24a51c0dc7b",2018-11-09 02:20:58,2018-11-09 02:20:58
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/437273378,https://github.com/hyperledger/caliper/issues/204#issuecomment-437273378,aklenik,"@wenshuohan Remove all `DB_URL: http://localhost:5984/member_db` lines, the sample config doesn't use it either. And if you use it, you should put a `-` before it, because it's also an environment variable.",2018-11-09 07:26:03,2018-11-09 07:26:03
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/437295657,https://github.com/hyperledger/caliper/issues/204#issuecomment-437295657,wenshuohan,"@aklenik I have removed all DB_URL: http://localhost:5984/member_db lines,the error still existence，docker logs peer2.org1.example.com has error：
`2018-11-09 08:58:10.880 UTC [couchdb] handleRequest -> WARN 004 Retrying couchdb request in 125ms. Attempt:1  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.20.0.5:5984: getsockopt: connection refused
2018-11-09 08:58:11.013 UTC [couchdb] handleRequest -> WARN 005 Retrying couchdb request in 250ms. Attempt:2  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.20.0.5:5984: getsockopt: connection refused
2018-11-09 08:58:11.265 UTC [couchdb] handleRequest -> WARN 006 Retrying couchdb request in 500ms. Attempt:3  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.20.0.5:5984: getsockopt: connection refused
2018-11-09 08:58:11.766 UTC [couchdb] handleRequest -> WARN 007 Retrying couchdb request in 1s. Attempt:4  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.20.0.5:5984: getsockopt: connection refused
2018-11-09 08:58:12.767 UTC [couchdb] handleRequest -> WARN 008 Retrying couchdb request in 2s. Attempt:5  Error:Get http://couchdb.peer2.org1.example.com:5984/: dial tcp 172.20.0.5:5984: getsockopt: connection refused
2018-11-09 08:58:14.822 UTC [couchdb] CreateDatabaseIfNotExist -> INFO 009 Created state database _users
2018-11-09 08:58:14.838 UTC [couchdb] CreateDatabaseIfNotExist -> INFO 00a Created state database _replicator
2018-11-09 08:58:14.873 UTC [couchdb] CreateDatabaseIfNotExist -> INFO 00b Created state database `_global_change`

docker logs couchdb.peer2.org1.example.com has error：
`[error] 2018-11-09T08:58:13.697758Z nonode@nohost emulator -------- Error in process <0.326.0> with exit value:
{database_does_not_exist,[{mem3_shards,load_shards_from_db,""_users"",[{file,""src/mem3_shards.erl""},{line,403}]},{mem3_shards,load_shards_from_disk,1,[{file,""src/mem3_shards.erl""},{line,378}]},{mem3_shards,load_shards_from_disk,2,[{file,""src/mem3_shards.erl""},{line,407}]},{mem3_shards,for_docid,3,[{file,""src/mem3_shards.erl""},{line,91}]},{fabric_doc_open,go,3,[{file,""src/fabric_doc_open.erl""},{line,38}]},{chttpd_auth_cache,ensure_auth_ddoc_exists,2,[{file,""src/chttpd_auth_cache.erl""},{line,187}]},{chttpd_auth_cache,listen_for_changes,1,[{file,""src/chttpd_auth_cache.erl""},{line,134}]}]}

[notice] 2018-11-09T08:58:13.697780Z nonode@nohost <0.325.0> -------- chttpd_auth_cache changes listener died database_does_not_exist at mem3_shards:load_shards_from_db/6(line:403) <= mem3_shards:load_shards_from_disk/1(line:378) <= mem3_shards:load_shards_from_disk/2(line:407) <= mem3_shards:for_docid/3(line:91) <= fabric_doc_open:go/3(line:38) <= chttpd_auth_cache:ensure_auth_ddoc_exists/2(line:187) <= chttpd_auth_cache:listen_for_changes/1(line:134)
`
maybe I should use more computs have a try",2018-11-09 09:06:04,2018-11-09 09:06:04
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/437303615,https://github.com/hyperledger/caliper/issues/204#issuecomment-437303615,aklenik,"@wenshuohan Definitely try it with a smaller network. There is an example dev network in this repo, you can add a CouchDB container to it. If it works that way, then it's a resource issue. If the error still persists, try a Fabric channel/mailing list, maybe others also encountered similar errors.",2018-11-09 09:35:41,2018-11-09 09:35:41
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/437359404,https://github.com/hyperledger/caliper/issues/204#issuecomment-437359404,wenshuohan,"@aklenik yeah，when my network‘s peers is less than four，such as 2-org-1-peer,2-org-2-peer,and 3-org-1-peer,they all worked well,but when the number is more than 6,such as 2-org-3-peer and 3-org-2-peer or more,it has the error.",2018-11-09 13:28:53,2018-11-09 13:28:53
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/437385084,https://github.com/hyperledger/caliper/issues/204#issuecomment-437385084,aklenik,Then I vote for resource issue. Can you provide some info about the machine you're using? Maybe I can try a stronger machine/VM to see if the network can be started with more resources.,2018-11-09 15:00:16,2018-11-09 15:00:16
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/437564045,https://github.com/hyperledger/caliper/issues/204#issuecomment-437564045,wenshuohan,"VMware Workstation10
ubuntu14.04 
memory 4G
processer 1
SCSI 30GB
network adapter NAT
USB controller exits",2018-11-10 07:08:54,2018-11-10 07:08:54
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/440099569,https://github.com/hyperledger/caliper/issues/204#issuecomment-440099569,houqinghui,"@wenshuohan  hi,  i have the same error,  i want to know how you the newwork incluing two organizations and four nodes ?   do you just change the fabric.json ?",2018-11-20 01:10:03,2018-11-20 01:10:03
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/440269264,https://github.com/hyperledger/caliper/issues/204#issuecomment-440269264,wenshuohan,@houqinghui  I changed notonly fabric.json，but also config.json,2018-11-20 13:15:12,2018-11-20 13:15:12
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/440883286,https://github.com/hyperledger/caliper/issues/204#issuecomment-440883286,houqinghui,"@wenshuohan this is the information ""peer2"": {
""requests"": ""grpcs://localhost:9057"",
""events"": ""grpcs://localhost:9059"",
""server-hostname"": ""peer1.org3.example.com"",
""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/tls/ca.crt""
} in Org3,   
can you find the file `network/fabric/config/crypto-config/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/tls/ca.crt`
",2018-11-22 01:32:04,2018-11-22 01:32:38
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/440884022,https://github.com/hyperledger/caliper/issues/204#issuecomment-440884022,houqinghui,"when i add one peer in org,  i cannot find the certificate file? 
then  i have the same error with you.
@wenshuohan ",2018-11-22 01:34:10,2018-11-22 02:59:00
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/440898737,https://github.com/hyperledger/caliper/issues/204#issuecomment-440898737,wenshuohan,@houqinghui Key Storage Path in Configuration File,2018-11-22 03:02:40,2018-11-22 03:02:40
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/441337353,https://github.com/hyperledger/caliper/issues/204#issuecomment-441337353,houqinghui,"@wenshuohan  do you generate  the centificate and key about org3 by yourself before the test? or that  you just change the config file, then you run the test?",2018-11-24 02:06:55,2018-11-24 02:06:55
https://api.github.com/repos/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/comments/469425249,https://github.com/hyperledger/caliper/issues/204#issuecomment-469425249,aklenik,@wenshuohan @houqinghui Is this issue resolved?,2019-03-04 21:17:34,2019-03-04 21:17:34
https://api.github.com/repos/hyperledger/caliper/issues/202,https://api.github.com/repos/hyperledger/caliper/issues/comments/435352767,https://github.com/hyperledger/caliper/pull/202#issuecomment-435352767,feihujiang,@aklenik Changed. Please take a look.,2018-11-02 11:42:39,2018-11-02 11:42:39
https://api.github.com/repos/hyperledger/caliper/issues/202,https://api.github.com/repos/hyperledger/caliper/issues/comments/436151579,https://github.com/hyperledger/caliper/pull/202#issuecomment-436151579,feihujiang,"@aklenik Updated, please take a look.",2018-11-06 07:05:16,2018-11-06 07:05:16
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/432930945,https://github.com/hyperledger/caliper/issues/201#issuecomment-432930945,panyu4,Now Caliper has not been able to support FabricV1.2. But @aklenik are working on this.  Please look at issue #185.,2018-10-25 06:30:25,2018-10-25 06:30:25
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/432936036,https://github.com/hyperledger/caliper/issues/201#issuecomment-432936036,kite007,"> Now Caliper has not been able to support FabricV1.2. But @aklenik are working on this. Please look at issue #185.

Thanks for your comment. 
I see. I read caliper readme file. But, I tried to run benchmark for fabric 1.2 and Caliper works well on Fabric 1.2. 
I installed grpc@1.10.1, fabric-ca-client@1.2.2, fabric-client@1.2.2. 

I have only problem to run benchmark on distributed clients installed on multi hosts.
",2018-10-25 06:55:03,2018-10-29 04:14:53
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/432960927,https://github.com/hyperledger/caliper/issues/201#issuecomment-432960927,aklenik,"@panyu4 @kite007 Caliper can run against Fabric v1.2 with the 1.2.0 SDK, however, the 1.2 features are not supported (like private collections). But at least you get a nice performance improvement with Fabric 1.2 :)

As for zookeeper, double check your endpoint addresses and that the hosts can reach eachother. ",2018-10-25 08:27:53,2018-10-25 08:27:53
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/433046604,https://github.com/hyperledger/caliper/issues/201#issuecomment-433046604,kite007,"> @panyu4 @kite007 Caliper can run against Fabric v1.2 with the 1.2.0 SDK, however, the 1.2 features are not supported (like private collections). But at least you get a nice performance improvement with Fabric 1.2 :)
> 
> As for zookeeper, double check your endpoint addresses and that the hosts can reach eachother.

Thanks for your comment. 

Like your comment, I used Caliper well to run benchmark for Fabric v1.2 without private collection.
I love Caliper! ^^

But, I am so sorry I don't understand your comment for Zookeeper. 
What do you mean ""double check your endpoint addresses and that hosts can reach each other.""

1. endpoint address
Are these endpoint addresses host7 address(e.g, 192.168.100.17) and host 8 address(e.g, 192.168.100.18)?

2. hosts can reach each other.
Ping work well between host7 and host8. 
",2018-10-25 13:17:07,2018-10-29 04:14:42
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/433766811,https://github.com/hyperledger/caliper/issues/201#issuecomment-433766811,kite007,"![image](https://user-images.githubusercontent.com/16068648/47625718-36f76780-db6a-11e8-920a-30182345f029.png)

Is it right?
Is it possible?

What causes the ""Failed to getData from zookeeper"" log?
line 208 in zoo-util.js
...
return getData(zookeeper, path+'/'+item, null, '**Failed to getData from zookeeper'**);
...

For those who do not know zookeeper,
I hope to have a little more detailed explanation(e.g, installation and configuration) of the zookeeper in Caliper's readme.",2018-10-29 02:04:12,2018-10-29 07:43:11
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/435243900,https://github.com/hyperledger/caliper/issues/201#issuecomment-435243900,houqinghui,"@kite007    are there some clients running on the host8, or host8 is just for the zk?
",2018-11-02 01:41:39,2018-11-02 01:41:39
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/435244977,https://github.com/hyperledger/caliper/issues/201#issuecomment-435244977,kite007,"> @kite007 are there some clients running on the host8, or host8 is just for the zk?

I executed zookeeper server at host8 only. 
* I installed zookeeper at /usr/local/zookeeper. 
*. zookeeper is standalone type. ",2018-11-02 01:48:06,2018-11-02 01:49:40
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/438853971,https://github.com/hyperledger/caliper/issues/201#issuecomment-438853971,aklenik,@kite007 Maybe [this issue](https://github.com/SOHU-Co/kafka-node/issues/12) can point you to the right direction. Let us know how it goes!,2018-11-14 23:11:11,2018-11-14 23:11:11
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/438885178,https://github.com/hyperledger/caliper/issues/201#issuecomment-438885178,kite007,"> @kite007 Maybe [this issue](https://github.com/SOHU-Co/kafka-node/issues/12) can point you to the right direction. Let us know how it goes!

Thanks for your comment.
I will try again it according to your comment. ",2018-11-15 01:44:36,2018-11-15 01:44:36
https://api.github.com/repos/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/comments/469425980,https://github.com/hyperledger/caliper/issues/201#issuecomment-469425980,aklenik,@kite007 Did you succeed? ,2019-03-04 21:19:51,2019-03-04 21:19:51
https://api.github.com/repos/hyperledger/caliper/issues/200,https://api.github.com/repos/hyperledger/caliper/issues/comments/434319101,https://github.com/hyperledger/caliper/pull/200#issuecomment-434319101,aklenik,Transparent Caliper logo from Wiki: https://wiki.hyperledger.org/_media/projects/hyperledger_caliper_logo_color.png,2018-10-30 14:18:38,2018-10-30 14:18:38
https://api.github.com/repos/hyperledger/caliper/issues/200,https://api.github.com/repos/hyperledger/caliper/issues/comments/434642383,https://github.com/hyperledger/caliper/pull/200#issuecomment-434642383,winslet,Replaced by #209 ,2018-10-31 10:49:46,2018-10-31 10:49:46
https://api.github.com/repos/hyperledger/caliper/issues/199,https://api.github.com/repos/hyperledger/caliper/issues/comments/438853202,https://github.com/hyperledger/caliper/issues/199#issuecomment-438853202,aklenik,"@luigima The query is endorsed (i.e., the transaction is simulated by executing the chaincode), however, it [isn't submitted](https://github.com/hyperledger/caliper/blob/7d70116f83e64dc604319440e84d79a7765c9564/src/fabric/e2eUtils.js#L764) for ordering and committing. 

What example did you run? Note, that the query API can only receive 1 argument for the query function.",2018-11-14 23:07:48,2018-11-14 23:07:48
https://api.github.com/repos/hyperledger/caliper/issues/199,https://api.github.com/repos/hyperledger/caliper/issues/comments/469426277,https://github.com/hyperledger/caliper/issues/199#issuecomment-469426277,aklenik,@luigima Is this issue still present?,2019-03-04 21:20:46,2019-03-04 21:20:46
https://api.github.com/repos/hyperledger/caliper/issues/198,https://api.github.com/repos/hyperledger/caliper/issues/comments/438973193,https://github.com/hyperledger/caliper/issues/198#issuecomment-438973193,vamdivd,I have the same problem with you. Has the problems be solved? ,2018-11-15 09:22:23,2018-11-15 09:22:23
https://api.github.com/repos/hyperledger/caliper/issues/198,https://api.github.com/repos/hyperledger/caliper/issues/comments/439023323,https://github.com/hyperledger/caliper/issues/198#issuecomment-439023323,aklenik,"@vamdivd Well, for now, use a newer docker-compose version (1.22.0), that doesn't remove the dashes from the name. But we should rename the network directories (removing the dashes) and changing the docker network names for the peer containers accordingly. 

The latter is the preferable solution that doesn't depend on the docker-compose version. But we have some higher priority issues right now, so feel free to lend a hand to the Caliper team by doing this renaming/refactoring :)",2018-11-15 12:26:28,2018-11-15 12:26:28
https://api.github.com/repos/hyperledger/caliper/issues/198,https://api.github.com/repos/hyperledger/caliper/issues/comments/439584343,https://github.com/hyperledger/caliper/issues/198#issuecomment-439584343,vamdivd,"I really appreciate it, have a good day :)",2018-11-17 03:31:45,2018-11-17 03:31:45
https://api.github.com/repos/hyperledger/caliper/issues/198,https://api.github.com/repos/hyperledger/caliper/issues/comments/439887156,https://github.com/hyperledger/caliper/issues/198#issuecomment-439887156,aklenik,@vamdivd Fixed by PR #220 ,2018-11-19 13:09:27,2018-11-19 13:09:27
https://api.github.com/repos/hyperledger/caliper/issues/197,https://api.github.com/repos/hyperledger/caliper/issues/comments/430906405,https://github.com/hyperledger/caliper/issues/197#issuecomment-430906405,cao0507,"Oh，I have known the answer of these questions. These endorsement policies are the expression of the SDK, and have some differences with the CLI's expressions. I would close this issue.",2018-10-18 07:36:34,2018-10-18 07:36:34
https://api.github.com/repos/hyperledger/caliper/issues/197,https://api.github.com/repos/hyperledger/caliper/issues/comments/459593611,https://github.com/hyperledger/caliper/issues/197#issuecomment-459593611,lenoAlex,"@cao0507 , could you give me a specification about these questions you mentioned above? I am also confused about them. Or any net referred to? thank you.",2019-02-01 03:33:19,2019-02-01 03:33:19
https://api.github.com/repos/hyperledger/caliper/issues/196,https://api.github.com/repos/hyperledger/caliper/issues/comments/432887613,https://github.com/hyperledger/caliper/pull/196#issuecomment-432887613,feihujiang,"Calling process.exit(), however, forces the process to exit before those additional writes to stdout can be performed. It is not a recommended practice.",2018-10-25 02:03:30,2018-10-25 02:03:30
https://api.github.com/repos/hyperledger/caliper/issues/195,https://api.github.com/repos/hyperledger/caliper/issues/comments/431133539,https://github.com/hyperledger/caliper/issues/195#issuecomment-431133539,aklenik,@rupc See [this file](https://github.com/hyperledger/caliper/blob/master/network/fabric/2-org-1-peer/docker-compose.yaml) for an example docker-compose network definition that has TLS disabled. ,2018-10-18 19:31:15,2018-10-18 19:31:15
https://api.github.com/repos/hyperledger/caliper/issues/195,https://api.github.com/repos/hyperledger/caliper/issues/comments/431157356,https://github.com/hyperledger/caliper/issues/195#issuecomment-431157356,rupc,"@aklenik I tried, but it still gets an error. I attached logs from orderer

```
2018-10-18 20:42:26.909 UTC [orderer/common/server] Start -> INFO 0c5 Starting orderer:
 Version: 1.1.0
 Go version: go1.9.2
 OS/Arch: linux/amd64
 Experimental features: false
2018-10-18 20:42:26.909 UTC [orderer/common/server] Start -> INFO 0c6 Beginning to serve requests
2018-10-18 20:42:34.248 UTC [grpc] Printf -> DEBU 0c7 transport: http2Server.HandleStreams received bogus greeting from client: ""\x16\x03\x01\x00\xc1\x01\x00\x00\xbd\x03\x03\x97-\x03[\x13\x95#\xf47{\xee\xb1\xe2""
2018-10-18 20:42:35.247 UTC [grpc] Printf -> DEBU 0c8 transport: http2Server.HandleStreams received bogus greeting from client: ""\x16\x03\x01\x00\xc1\x01\x00\x00\xbd\x03\x03i\x8b8(\xdc\xca\xe2\x83\a\x04nU\xea""

```",2018-10-18 20:48:35,2018-10-18 20:48:35
https://api.github.com/repos/hyperledger/caliper/issues/195,https://api.github.com/repos/hyperledger/caliper/issues/comments/431164877,https://github.com/hyperledger/caliper/issues/195#issuecomment-431164877,aklenik,"@rupc How are your endpoints specified in the `fabric.json` network configuration? `grpcs/https` or `grpc/http`? Try the latter. If it doesn't solve your problem, share your configuration files (preferably as GitHub gist) and I'll try to reproduce your problem.",2018-10-18 21:11:05,2018-10-18 21:12:38
https://api.github.com/repos/hyperledger/caliper/issues/195,https://api.github.com/repos/hyperledger/caliper/issues/comments/438851097,https://github.com/hyperledger/caliper/issues/195#issuecomment-438851097,aklenik,@rupc Did you resolve the issue?,2018-11-14 22:59:17,2018-11-14 22:59:17
https://api.github.com/repos/hyperledger/caliper/issues/195,https://api.github.com/repos/hyperledger/caliper/issues/comments/439063455,https://github.com/hyperledger/caliper/issues/195#issuecomment-439063455,rupc,"Actually, no.  After I modified the instructions that you mentioned, an error from different place which seems to be relevant came out. The error is about docker network settings, indicating network namespace issues. I think the error is related in some way, but I can't figure how. (I just switched to TLS-enabled version.) But thanks for your concern.",2018-11-15 14:43:34,2018-11-15 14:43:52
https://api.github.com/repos/hyperledger/caliper/issues/195,https://api.github.com/repos/hyperledger/caliper/issues/comments/454270683,https://github.com/hyperledger/caliper/issues/195#issuecomment-454270683,DevProvider,"I have a detailed blog written on this topic. You can give it a look here. 
[https://www.devprovider.com/hyperledger-fabric-tls-disabled/](url)
",2019-01-15 05:22:09,2019-01-15 05:22:09
https://api.github.com/repos/hyperledger/caliper/issues/193,https://api.github.com/repos/hyperledger/caliper/issues/comments/439692421,https://github.com/hyperledger/caliper/issues/193#issuecomment-439692421,aklenik,Resolved by PR #217 ,2018-11-18 13:21:37,2018-11-18 13:21:37
https://api.github.com/repos/hyperledger/caliper/issues/191,https://api.github.com/repos/hyperledger/caliper/issues/comments/430065385,https://github.com/hyperledger/caliper/pull/191#issuecomment-430065385,hurf,Thanks @mtrubs for the contribution. Can you squash the commits? And @feihujiang please take a look.,2018-10-16 01:06:05,2018-10-16 01:06:05
https://api.github.com/repos/hyperledger/caliper/issues/191,https://api.github.com/repos/hyperledger/caliper/issues/comments/430070829,https://github.com/hyperledger/caliper/pull/191#issuecomment-430070829,mtrubs,@hurf squashed.,2018-10-16 01:38:36,2018-10-16 01:38:36
https://api.github.com/repos/hyperledger/caliper/issues/191,https://api.github.com/repos/hyperledger/caliper/issues/comments/430911980,https://github.com/hyperledger/caliper/pull/191#issuecomment-430911980,feihujiang,"LGTM, Thanks.",2018-10-18 07:56:22,2018-10-18 07:56:22
https://api.github.com/repos/hyperledger/caliper/issues/190,https://api.github.com/repos/hyperledger/caliper/issues/comments/430072398,https://github.com/hyperledger/caliper/pull/190#issuecomment-430072398,feihujiang,"@Ram-srini The code looks good to me, but DCO not passed:
‘’‘You only have one commit incorrectly signed off! To fix, head to your local branch and run:

git commit --amend --signoff
Now your commits will have your sign off. Next run

git push --force origin sawtooth_fix
Commit sha: a70ac49, Author: Ramakrishna S, Committer: Ramakrishna S; Expected ""Ramakrishna S ramakrishna.srinivasamurthy@intel.com"", but got ""Ubuntu ubuntu@ip-172-31-3-204.ap-southeast-1.compute.internal"".‘’‘’’",2018-10-16 01:48:04,2018-10-16 01:48:04
https://api.github.com/repos/hyperledger/caliper/issues/190,https://api.github.com/repos/hyperledger/caliper/issues/comments/430085744,https://github.com/hyperledger/caliper/pull/190#issuecomment-430085744,Ram-srini,Updated with with right sign off info..,2018-10-16 03:11:40,2018-10-16 03:11:40
https://api.github.com/repos/hyperledger/caliper/issues/189,https://api.github.com/repos/hyperledger/caliper/issues/comments/429483729,https://github.com/hyperledger/caliper/issues/189#issuecomment-429483729,mtrubs,"here is roughly what i was thinking anyways.

the paths in all the files are still all wonk but it works.

https://github.com/mtrubs/caliper/commit/052e59a42216a43cbde207ff106cf41723914f35",2018-10-12 22:53:28,2018-10-12 22:53:28
https://api.github.com/repos/hyperledger/caliper/issues/189,https://api.github.com/repos/hyperledger/caliper/issues/comments/442281041,https://github.com/hyperledger/caliper/issues/189#issuecomment-442281041,feihujiang,"This was resolved, so closed it.",2018-11-28 01:16:53,2018-11-28 01:16:53
https://api.github.com/repos/hyperledger/caliper/issues/187,https://api.github.com/repos/hyperledger/caliper/issues/comments/429727322,https://github.com/hyperledger/caliper/pull/187#issuecomment-429727322,panyu4,I am accepting this PR  and  closing the Issue #142 ,2018-10-15 06:47:34,2018-10-15 06:47:34
https://api.github.com/repos/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/comments/428582522,https://github.com/hyperledger/caliper/issues/185#issuecomment-428582522,aklenik,"@luigima I'm almost (~80%) finished with the support for newer versions (and features). As soon as I have a working code-base (with a minimal documentation), I'll drop you the link of the fork here, so you can help the reviewers test it :) Expect it in 2-3 days.",2018-10-10 13:58:49,2018-10-10 13:58:49
https://api.github.com/repos/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/comments/428583331,https://github.com/hyperledger/caliper/issues/185#issuecomment-428583331,luigima,This would be awesome! Thank you in advance!,2018-10-10 14:00:49,2018-10-10 14:00:49
https://api.github.com/repos/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/comments/429734185,https://github.com/hyperledger/caliper/issues/185#issuecomment-429734185,jiawanggao,@aklenik how to get the code for supporting Fabric v1.2?thanks!,2018-10-15 07:17:53,2018-10-15 07:17:53
https://api.github.com/repos/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/comments/429867974,https://github.com/hyperledger/caliper/issues/185#issuecomment-429867974,aklenik,"@jiawanggao it's not integrated into Caliper (or a fork) yet, but as soon as I have a working fork, I'll drop the repo url here",2018-10-15 14:11:31,2018-10-15 14:11:31
https://api.github.com/repos/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/comments/430064635,https://github.com/hyperledger/caliper/issues/185#issuecomment-430064635,hurf,@aklenik Would create a PR and marked with WIP be better? People can disscuss here instead of looking for other repos. ,2018-10-16 01:00:55,2018-10-16 01:00:55
https://api.github.com/repos/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/comments/430164668,https://github.com/hyperledger/caliper/issues/185#issuecomment-430164668,aklenik,"@hurf Will do that, good idea, but currently, my Fabric adapter implementation is in a sandbox project, but I'll open a WIP PR as soon as it's integrated into my Caliper fork.",2018-10-16 09:19:11,2018-10-16 09:19:11
https://api.github.com/repos/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/comments/431032342,https://github.com/hyperledger/caliper/issues/185#issuecomment-431032342,luigima,@aklenik Any news regarding a working fork that I could test?,2018-10-18 14:32:41,2018-10-18 14:32:41
https://api.github.com/repos/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/comments/447231371,https://github.com/hyperledger/caliper/issues/185#issuecomment-447231371,lichanan,"> @jiawanggao it's not integrated into Caliper (or a fork) yet, but as soon as I have a working fork, I'll drop the repo url here
where is the url?could you publish it here
",2018-12-14 06:43:51,2018-12-14 06:43:51
https://api.github.com/repos/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/comments/469413992,https://github.com/hyperledger/caliper/issues/185#issuecomment-469413992,aklenik,New releases of Fabric are now supported by both adapter,2019-03-04 20:42:58,2019-03-04 20:42:58
https://api.github.com/repos/hyperledger/caliper/issues/183,https://api.github.com/repos/hyperledger/caliper/issues/comments/428497971,https://github.com/hyperledger/caliper/issues/183#issuecomment-428497971,panyu4,"We have no plan to support tronprotocol.  If you'd like to contribute supporting it,  we appreciate it.",2018-10-10 09:12:12,2018-10-10 09:12:12
https://api.github.com/repos/hyperledger/caliper/issues/183,https://api.github.com/repos/hyperledger/caliper/issues/comments/438850763,https://github.com/hyperledger/caliper/issues/183#issuecomment-438850763,aklenik,"Since the support is not planned in the foreseeable future, I'm closing this thread.",2018-11-14 22:58:02,2018-11-14 22:58:02
https://api.github.com/repos/hyperledger/caliper/issues/181,https://api.github.com/repos/hyperledger/caliper/issues/comments/429075411,https://github.com/hyperledger/caliper/issues/181#issuecomment-429075411,aklenik,"@cao0507 Using Caliper is completely independent of setting up the blockchain backend. The convenience `command.start` script simplifies setting up things in development time, but it is optional. 

You can connect to an already running remote Fabric network by setting the appropriate endpoints in the network config that is passed to Caliper.

An example network config can be found [here](https://github.com/hyperledger/caliper/blob/master/benchmark/simple/fabric-remote.json). Note the URLs of different nodes, they point to a remote location (DNS names can also be used).

Since this is an existing feature, I'm closing this issue.",2018-10-11 18:47:31,2018-10-11 18:47:31
https://api.github.com/repos/hyperledger/caliper/issues/181,https://api.github.com/repos/hyperledger/caliper/issues/comments/465014761,https://github.com/hyperledger/caliper/issues/181#issuecomment-465014761,lakshaygaur,@aklenik The fabric-remote.json file is not there anymore. Could you please share it again ?,2019-02-19 07:18:56,2019-02-19 07:18:56
https://api.github.com/repos/hyperledger/caliper/issues/181,https://api.github.com/repos/hyperledger/caliper/issues/comments/465053129,https://github.com/hyperledger/caliper/issues/181#issuecomment-465053129,aklenik,"@lakshaygaur Yes, it's been removed, but you can take any file from the `network/fabric-v1.X/` directories. The only difference should be the url properties of the nodes. For example, a public IP and port instead of localhost.",2019-02-19 09:21:48,2019-02-19 09:21:48
https://api.github.com/repos/hyperledger/caliper/issues/175,https://api.github.com/repos/hyperledger/caliper/issues/comments/427796980,https://github.com/hyperledger/caliper/issues/175#issuecomment-427796980,aklenik,"@litx This is a mismatch between the version of the SDK and the Fabric docker images. Make sure you install the v1.1.0 SDK images: 
`npm install grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0`

You can check the installed version from the root Caliper dir with:
`npm ls fabric-client fabric-ca-client`",2018-10-08 11:16:16,2018-10-08 11:16:16
https://api.github.com/repos/hyperledger/caliper/issues/175,https://api.github.com/repos/hyperledger/caliper/issues/comments/428030686,https://github.com/hyperledger/caliper/issues/175#issuecomment-428030686,litx,THS,2018-10-09 01:35:34,2018-10-09 01:35:34
https://api.github.com/repos/hyperledger/caliper/issues/175,https://api.github.com/repos/hyperledger/caliper/issues/comments/428456070,https://github.com/hyperledger/caliper/issues/175#issuecomment-428456070,feihujiang,This was resolved.,2018-10-10 06:41:33,2018-10-10 06:41:33
https://api.github.com/repos/hyperledger/caliper/issues/174,https://api.github.com/repos/hyperledger/caliper/issues/comments/436162238,https://github.com/hyperledger/caliper/issues/174#issuecomment-436162238,houqinghui,@knurherb   i cannot get your point. your meaning is that the location of the .html file is wrong? ,2018-11-06 07:57:14,2018-11-06 07:57:14
https://api.github.com/repos/hyperledger/caliper/issues/174,https://api.github.com/repos/hyperledger/caliper/issues/comments/436213925,https://github.com/hyperledger/caliper/issues/174#issuecomment-436213925,aklenik,"@knurherb I think the HTML file is generated in the current working directory, which is the root Caliper folder in the second case. As for the `npm test` problem, I'll try to reproduce the issue.",2018-11-06 10:59:59,2018-11-06 10:59:59
https://api.github.com/repos/hyperledger/caliper/issues/174,https://api.github.com/repos/hyperledger/caliper/issues/comments/438235031,https://github.com/hyperledger/caliper/issues/174#issuecomment-438235031,houqinghui,"@knurherb 

1. now the command `npm test ` and `node` will generate the .html file whose location is the current working directory. so it will help you find the .html file quickly. 
2. the command `npm test` is the encapsulation of `node`,  you can test your own config files, but please write the complete command. ",2018-11-13 11:34:54,2018-11-14 01:24:50
https://api.github.com/repos/hyperledger/caliper/issues/174,https://api.github.com/repos/hyperledger/caliper/issues/comments/438235351,https://github.com/hyperledger/caliper/issues/174#issuecomment-438235351,houqinghui,@panyu4   i think the issue can be closed. ,2018-11-13 11:36:03,2018-11-13 11:36:03
https://api.github.com/repos/hyperledger/caliper/issues/174,https://api.github.com/repos/hyperledger/caliper/issues/comments/442069194,https://github.com/hyperledger/caliper/issues/174#issuecomment-442069194,panyu4,"since no more activities and it looks be resolved, I'm closing this issue.",2018-11-27 14:04:01,2018-11-27 14:04:01
https://api.github.com/repos/hyperledger/caliper/issues/173,https://api.github.com/repos/hyperledger/caliper/issues/comments/427264493,https://github.com/hyperledger/caliper/issues/173#issuecomment-427264493,cao0507,"> iMac-2:simple rjj$ node -v
> v8.11.4
> iMac-2:simple rjj$ npm -v
> 5.6.0
> 
> ```
> # Instantiate chaincode......
> error: [Peer.js]: sendProposal - timed out after:1020000
> error: [Peer.js]: sendProposal - timed out after:1020000
> error: [Peer.js]: sendProposal - timed out after:1020000
> error: [Peer.js]: sendProposal - timed out after:1020000
> error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
>     at Timeout._onTimeout (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
>     at ontimeout (timers.js:498:11)
>     at tryOnTimeout (timers.js:323:5)
>     at Timer.listOnTimeout (timers.js:290:5)
> error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
>     at Timeout._onTimeout (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
>     at ontimeout (timers.js:498:11)
>     at tryOnTimeout (timers.js:323:5)
>     at Timer.listOnTimeout (timers.js:290:5)
> error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
>     at Timeout._onTimeout (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
>     at ontimeout (timers.js:498:11)
>     at tryOnTimeout (timers.js:323:5)
>     at Timer.listOnTimeout (timers.js:290:5)
> error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
>     at Timeout._onTimeout (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
>     at ontimeout (timers.js:498:11)
>     at tryOnTimeout (timers.js:323:5)
>     at Timer.listOnTimeout (timers.js:290:5)
> not ok 4 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7) at Client.newDefaultKeyValueStore.then.then.then.then.then (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
>   ---
>     operator: fail
>     at: chaincodes.reduce.then.catch (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
>     stack: |-
>       Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
>           at Client.newDefaultKeyValueStore.then.then.then.then (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19)
>           at <anonymous>
>           at process._tickCallback (internal/process/next_tick.js:188:7)
>           at Client.newDefaultKeyValueStore.then.then.then.then.then (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15)
>           at <anonymous>
>           at process._tickCallback (internal/process/next_tick.js:188:7)
>           at Test.assert [as _assert] (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
>           at Test.bound [as _assert] (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
>           at Test.fail (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
>           at Test.bound [as fail] (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
>           at chaincodes.reduce.then.catch (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
>           at <anonymous>
>           at process._tickCallback (internal/process/next_tick.js:188:7)
>   ...
> fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
>     at chaincodes.reduce.then.catch (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
>     at <anonymous>
>     at process._tickCallback (internal/process/next_tick.js:188:7)
> [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
> unexpected error, Error: Fabric: instantiate chaincodes failed
>     at chaincodes.reduce.then.catch (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
>     at <anonymous>
>     at process._tickCallback (internal/process/next_tick.js:188:7)
> ```
> I tried to change request_time, but time out appeared anyway. Is there any other reason for this problem?

Hi, have you solve this problem? I have tried to increase the request_time too, but it doesn't work!",2018-10-05 06:54:09,2018-10-05 06:54:09
https://api.github.com/repos/hyperledger/caliper/issues/173,https://api.github.com/repos/hyperledger/caliper/issues/comments/427789247,https://github.com/hyperledger/caliper/issues/173#issuecomment-427789247,aklenik,"@PoormaJin Take a look at Issue #137 , maybe it solves your problem. The gist is:
* The timeout error can also mean that an error occurred in your chaincode `Init` function. Take a look at the chaincode logs: `docker logs dev-something`. For some reason, this hangs the execution and times out (for Fabric v1.1 at least).
* Or try the solution of @cao0507 ",2018-10-08 10:42:29,2018-10-08 10:42:29
https://api.github.com/repos/hyperledger/caliper/issues/173,https://api.github.com/repos/hyperledger/caliper/issues/comments/438849977,https://github.com/hyperledger/caliper/issues/173#issuecomment-438849977,aklenik,@PoormaJin @cao0507 Did you resolve this?,2018-11-14 22:55:04,2018-11-14 22:55:04
https://api.github.com/repos/hyperledger/caliper/issues/173,https://api.github.com/repos/hyperledger/caliper/issues/comments/438886473,https://github.com/hyperledger/caliper/issues/173#issuecomment-438886473,cao0507,"> @PoormaJin @cao0507 Did you resolve this?

Yes, I have resolve this problem. Sometimes I tried to increase the request_time to 480000 but it didn't work，and then I decrease the request_time to 240000，finally it works. I don't know why, it's weird.",2018-11-15 01:51:31,2018-11-15 01:51:31
https://api.github.com/repos/hyperledger/caliper/issues/173,https://api.github.com/repos/hyperledger/caliper/issues/comments/439021651,https://github.com/hyperledger/caliper/issues/173#issuecomment-439021651,aklenik,@cao0507 Time sensitivity in distributed systems is a beautiful problem :) Then I'm closing this issue. ,2018-11-15 12:20:02,2018-11-15 12:20:02
https://api.github.com/repos/hyperledger/caliper/issues/172,https://api.github.com/repos/hyperledger/caliper/issues/comments/429099660,https://github.com/hyperledger/caliper/issues/172#issuecomment-429099660,aklenik,"@ml16a6a Well, initially the `end` function of the user callback module received every transaction statistics, so you could calculate anything you want. However, this was removed.

@jiangyaoguo What was the reason for removing this result propagation with [this commit](https://github.com/hyperledger/caliper/commit/edd8649740423ba30ec0ef7d5b83bfc42fb7a2ad)? It mostly fixes things with the DRM benchmark, and changes [this line](https://github.com/hyperledger/caliper/commit/edd8649740423ba30ec0ef7d5b83bfc42fb7a2ad#diff-ca693faafecb49948be869d8c2bdf5fbR227) in the `local-client.js` file.",2018-10-11 20:05:57,2018-10-11 20:05:57
https://api.github.com/repos/hyperledger/caliper/issues/172,https://api.github.com/repos/hyperledger/caliper/issues/comments/438097778,https://github.com/hyperledger/caliper/issues/172#issuecomment-438097778,houqinghui,"@ml16a6a   do you already know how to calculate the execution time for every round?  you can add the code `var t1 = new Date().getTime();` at the beginning , then add the line `t2 = new Date().getTime(); console.log(t2-t1)` at the end for every round. if so,  you can calculate the time.",2018-11-13 01:42:43,2018-11-13 01:42:43
https://api.github.com/repos/hyperledger/caliper/issues/172,https://api.github.com/repos/hyperledger/caliper/issues/comments/438098277,https://github.com/hyperledger/caliper/issues/172#issuecomment-438098277,houqinghui,@aklenik is it possible that the project add the functioin to calculate every round execution time as a optional function?,2018-11-13 01:45:16,2018-11-13 01:45:16
https://api.github.com/repos/hyperledger/caliper/issues/172,https://api.github.com/repos/hyperledger/caliper/issues/comments/438215096,https://github.com/hyperledger/caliper/issues/172#issuecomment-438215096,aklenik,"@houqinghui @ml16a6a Yes, I think it is possible. If the transaction results are annotated with the round ID, then the reporting module could also calculate the round execution time. Plus we shouldn't discard the individual transaction data when aggregating them, because it prohibits detailed data analysis.",2018-11-13 10:27:04,2018-11-13 10:27:04
https://api.github.com/repos/hyperledger/caliper/issues/172,https://api.github.com/repos/hyperledger/caliper/issues/comments/441972867,https://github.com/hyperledger/caliper/issues/172#issuecomment-441972867,lenoAlex,"@aklenik @houqinghui  As far as I know, the capliper may use fabric-sdk-node to accomplish transaction. Then when calculating execution time, it consists of three parts, the time of capliper invocation, the time of fabric-sdk-node running and the time of fabric running. Is there a way to calculate the time of capliper invocation  and fabric-sdk-node running? In another word, how to calculate the performance loss about using caplier?",2018-11-27 08:39:34,2018-11-27 08:39:34
https://api.github.com/repos/hyperledger/caliper/issues/172,https://api.github.com/repos/hyperledger/caliper/issues/comments/442074948,https://github.com/hyperledger/caliper/issues/172#issuecomment-442074948,aklenik,"@lenoAlex The transaction timings are measured from the point of submitting a TX through the SDK to the point of receiving the event notification about the TX result. So the overhead of Caliper is not included, and every SDK interaction (checking results, inputs, etc.) will also be part of Fabric client applications, so those should be included in the results. ",2018-11-27 14:21:41,2018-11-27 14:21:41
https://api.github.com/repos/hyperledger/caliper/issues/171,https://api.github.com/repos/hyperledger/caliper/issues/comments/427785410,https://github.com/hyperledger/caliper/issues/171#issuecomment-427785410,aklenik,"@jamievaravara The `orderer.yaml` file is the configuration that is processed when the `orderer` node/binary is started. Caliper doesn't care about the topology of the ordering service, it just needs an orderer endpoint (currently only one endpoint is supported) to submit transactions to.

You can either modify the yaml file **before** starting the orderer node (not that simple with prebuilt docker images), or you can modify every setting available in that file through environment variables, which can be easily set in a `docker-compose` file.

For example, if the yaml has the setting `General.GenesisFile`, then you can insert the following line into the `environment` section of your compose file, under the orderer container:
`- ORDERER_GENERAL_GENESISFILE=/path/to/your/genesisfile`, like [here](https://github.com/hyperledger/caliper/blob/1fe8ba5bc3b5e9c9d9c5f0c905b2db487be3f1b7/network/fabric/2-org-1-peer/docker-compose-tls.yaml#L47).

Basically the rule is the following: for the orderer, prepend every environment variable with `ORDERER_`, and for every hierarchy in the setting, change the `.` to `_`, plus use capital letters.",2018-10-08 10:25:22,2018-10-08 10:25:22
https://api.github.com/repos/hyperledger/caliper/issues/171,https://api.github.com/repos/hyperledger/caliper/issues/comments/438849159,https://github.com/hyperledger/caliper/issues/171#issuecomment-438849159,aklenik,"Since the question is not a Caliper issue, I'm closing this thread.",2018-11-14 22:52:16,2018-11-14 22:52:16
https://api.github.com/repos/hyperledger/caliper/issues/170,https://api.github.com/repos/hyperledger/caliper/issues/comments/427803562,https://github.com/hyperledger/caliper/pull/170#issuecomment-427803562,panyu4,Thank you! @modood ,2018-10-08 11:45:30,2018-10-08 11:45:30
https://api.github.com/repos/hyperledger/caliper/issues/169,https://api.github.com/repos/hyperledger/caliper/issues/comments/428458126,https://github.com/hyperledger/caliper/issues/169#issuecomment-428458126,feihujiang,"The same error as #175, So I am closing this issue. @sudhakaran25 
Make sure you install the v1.1.0 SDK images:
npm install grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0",2018-10-10 06:51:28,2018-10-10 06:52:30
https://api.github.com/repos/hyperledger/caliper/issues/168,https://api.github.com/repos/hyperledger/caliper/issues/comments/428461228,https://github.com/hyperledger/caliper/issues/168#issuecomment-428461228,panyu4,"Did you use the composer? 
If you did, it is important to note that the current framework has been written to support:
Hyperledger Composer v0.19.0 and higher
Hyperledger Fabric v1.1.0

Or it may be a sdk compatibility issue. Please install fabric sdk v1.1.0 and retry the test. For example, npm install grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0",2018-10-10 07:04:47,2018-10-10 07:04:47
https://api.github.com/repos/hyperledger/caliper/issues/168,https://api.github.com/repos/hyperledger/caliper/issues/comments/438848487,https://github.com/hyperledger/caliper/issues/168#issuecomment-438848487,aklenik,@dharuq Does the issue still persists? How is your network deployed?,2018-11-14 22:49:40,2018-11-14 22:49:40
https://api.github.com/repos/hyperledger/caliper/issues/167,https://api.github.com/repos/hyperledger/caliper/issues/comments/416100259,https://github.com/hyperledger/caliper/pull/167#issuecomment-416100259,Ram-srini,@panyu4 @jiangyaoguo @feihujiang Please review these changes,2018-08-27 02:55:17,2018-08-27 02:55:17
https://api.github.com/repos/hyperledger/caliper/issues/167,https://api.github.com/repos/hyperledger/caliper/issues/comments/427303826,https://github.com/hyperledger/caliper/pull/167#issuecomment-427303826,Ram-srini,@feihujiang @haojun  - Please review this PR,2018-10-05 09:34:03,2018-10-05 09:34:03
https://api.github.com/repos/hyperledger/caliper/issues/167,https://api.github.com/repos/hyperledger/caliper/issues/comments/427738737,https://github.com/hyperledger/caliper/pull/167#issuecomment-427738737,feihujiang,LGTM but for the two removed lines. @Nidhiintel ,2018-10-08 07:10:08,2018-10-08 07:10:08
https://api.github.com/repos/hyperledger/caliper/issues/166,https://api.github.com/repos/hyperledger/caliper/issues/comments/416090158,https://github.com/hyperledger/caliper/issues/166#issuecomment-416090158,lotty02cho,"I think it cause chaincode version. I changed my chaincode version in fabric.json, the error is solved.",2018-08-27 01:31:54,2018-08-27 01:32:22
https://api.github.com/repos/hyperledger/caliper/issues/166,https://api.github.com/repos/hyperledger/caliper/issues/comments/416090256,https://github.com/hyperledger/caliper/issues/166#issuecomment-416090256,lotty02cho,"however, when caliper try to instantiate it, error appears like this.

```
hyper@hyperledger001:/opt/gopath/src/github.com/hyperledger/caliper$ node benchmark/simple/main.js -c config.json -n fabric.json
TAP version 13
# #######Caliper Test######
# Sleep 5s......
# Join channel......
# install all chaincodes......
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
ok 1 Installed chaincode simple successfully in all peers
# Instantiate chaincode......
not ok 2 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19) at <anonymous> at Client.newDefaultKeyValueStore.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15) at <anonymous>
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19)
          at <anonymous>
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15)
          at <anonymous>
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
          at <anonymous>
  ...
fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>

1..2
# tests 2
# pass  1
# fail  1
```
I saw my docker container by using cli, Installing chaincode is fine, but instantiated not completed.",2018-08-27 01:32:48,2018-08-28 01:31:40
https://api.github.com/repos/hyperledger/caliper/issues/166,https://api.github.com/repos/hyperledger/caliper/issues/comments/416142155,https://github.com/hyperledger/caliper/issues/166#issuecomment-416142155,lotty02cho,"when I enter my peer logs.

I saw that kinds of error, doe anyone knows about ""lscc""?

`
2018-08-27 07:30:26.321 UTC [lscc] executeInstall -> INFO 30a3 Installed Chaincode [traceability] Version [v2.9] to peer
2018-08-27 07:30:26.385 UTC [endorser] ProcessProposal -> ERRO 30a4 [honeybeechannel][a9a602d9] simulateProposal() resulted in chaincode name:""lscc""  response status 500 for txid: a9a602d9988bb7ad23b1604dd66c299ddf24dc408b37036b91341264bcf76721
`",2018-08-27 07:38:20,2018-08-27 07:38:20
https://api.github.com/repos/hyperledger/caliper/issues/166,https://api.github.com/repos/hyperledger/caliper/issues/comments/416159499,https://github.com/hyperledger/caliper/issues/166#issuecomment-416159499,lotty02cho,"when I restart my network, and start, there is some error in my docker chaincode.

`docker logs dev-peer0.org1.honeybee.com-traceability-v1.0`

```
> traceability@0.0.0 start /usr/local/src
> node traceability.js ""--peer.address"" ""peer0.org1.honeybee.com:7052""

E0827 08:26:26.412150365      20 ssl_transport_security.cc:238] Could not get common name of subject from certificate.
=========== Instantiated Chaincode ===========
hyper@hyperledger001:~$
hyper@hyperledger001:~$ > traceability@0.0.0 start /usr/local/src
The program 'start' is currently not installed. You can install it by typing:
sudo apt install upstart
hyper@hyperledger001:~$ > node traceability.js ""--peer.address"" ""peer0.org1.honeybee.com:7052""
traceability.js: command not found
hyper@hyperledger001:~$
hyper@hyperledger001:~$ E0827 08:26:26.412150365      20 ssl_transport_security.cc:238] Could not get common name of subject from certificate.
E0827: command not found
hyper@hyperledger001:~$ =========== Instantiated Chaincode ===========
===========: command not found
```",2018-08-27 08:48:59,2018-08-28 01:31:17
https://api.github.com/repos/hyperledger/caliper/issues/166,https://api.github.com/repos/hyperledger/caliper/issues/comments/416163999,https://github.com/hyperledger/caliper/issues/166#issuecomment-416163999,lotty02cho,"I also try to simpletest.go. but when chaincode is instantiated, it occurs like this.
```
 node benchmark/simple/main.js -c config.json -n fabric.json
TAP version 13
# #######Caliper Test######
# Sleep 5s......
# Join channel......
# install all chaincodes......
info: [packager/Node.js]: packaging Node from /opt/gopath/src/github.com/hyperledger/caliper/contract/fabric/simple/go
info: [packager/Node.js]: packaging Node from /opt/gopath/src/github.com/hyperledger/caliper/contract/fabric/simple/go
not ok 1 Failed to install chaincodes, Error: Failed to send install proposal due to error: Error: ENOENT: no such file or directory, scandir '/opt/gopath/src/github.com/hyperledger/caliper/contract/fabric/simple/go' at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:148:15) at <anonymous>
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/install-chaincode.js:65:19)
    stack: |-
      Error: Failed to install chaincodes, Error: Failed to send install proposal due to error: Error: ENOENT: no such file or directory, scandir '/opt/gopath/src/github.com/hyperledger/caliper/contract/fabric/simple/go'
          at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:148:15)
          at <anonymous>
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/install-chaincode.js:65:19)
          at <anonymous>
  ...
fabric.installSmartContract() failed, Error: Failed to send install proposal due to error: Error: ENOENT: no such file or directory, scandir '/opt/gopath/src/github.com/hyperledger/caliper/contract/fabric/simple/go'
    at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:148:15)
    at <anonymous>
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Failed to send install proposal due to error: Error: ENOENT: no such file or directory, scandir '/opt/gopath/src/github.com/hyperledger/caliper/contract/fabric/simple/go'
    at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:148:15)
    at <anonymous>

1..1
# tests 1
# pass  0
# fail  1

hyper@hyperledger001:/opt/gopath/src/github.com/hyperledger/caliper$ vi benchmark/simple/fabric.json
hyper@hyperledger001:/opt/gopath/src/github.com/hyperledger/caliper$ node benchmark/simple/main.js -c config.json -n fabric.json
TAP version 13
# #######Caliper Test######
# Sleep 5s......
# Join channel......
# install all chaincodes......
info: [packager/Node.js]: packaging Node from /opt/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/simple/go
info: [packager/Node.js]: packaging Node from /opt/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/simple/go
ok 1 Installed chaincode simple successfully in all peers
# Instantiate chaincode......
error: [Peer.js]: sendProposal - timed out after:120000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [Peer.js]: sendProposal - timed out after:120000
error: [Peer.js]: sendProposal - timed out after:120000
error: [Peer.js]: sendProposal - timed out after:120000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
not ok 2 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7) at Client.newDefaultKeyValueStore.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
```
",2018-08-27 09:05:56,2018-08-28 01:32:36
https://api.github.com/repos/hyperledger/caliper/issues/166,https://api.github.com/repos/hyperledger/caliper/issues/comments/416423355,https://github.com/hyperledger/caliper/issues/166#issuecomment-416423355,lotty02cho,"I think it might be cause chaincode id, but I don't know why.
chaincodes.id should be changed in fabric.json.

I remember when I test caliper around 2 weeks ago, I just changed my chaincodes.version, but when I cloned this project yesterday, it doesn't work.

`""chaincodes"": [{""id"": ""traceability"", ""path"": ""src/contract/fabric/traceability/node"", ""language"":""node"", ""version"": ""v1.0"", ""channel"": ""honeybeechannel""}],`

after I changed my chaincodes.id like below, it works.
`""chaincodes"": [{""id"": ""traceability1_3"", ""path"": ""src/contract/fabric/traceability/node"", ""language"":""node"", ""version"": ""v1.3"", ""channel"": ""honeybeechannel""}],`",2018-08-28 01:44:38,2018-08-28 01:45:05
https://api.github.com/repos/hyperledger/caliper/issues/165,https://api.github.com/repos/hyperledger/caliper/issues/comments/420560506,https://github.com/hyperledger/caliper/issues/165#issuecomment-420560506,lzh5261,"I meet the same question,""info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go"",it means we should install go ? ,but i have installed it , happened yet",2018-09-12 08:32:17,2018-09-12 08:32:17
https://api.github.com/repos/hyperledger/caliper/issues/165,https://api.github.com/repos/hyperledger/caliper/issues/comments/427831387,https://github.com/hyperledger/caliper/issues/165#issuecomment-427831387,nklincoln,"you appear to be running the build tests (used as part of the travis build) instead of running the actual benchmark locally.

The 'Run benchmark' section in the readme.md indicates how to run the benchmark and not the current test suite. ",2018-10-08 13:24:41,2018-10-08 13:24:41
https://api.github.com/repos/hyperledger/caliper/issues/165,https://api.github.com/repos/hyperledger/caliper/issues/comments/438847764,https://github.com/hyperledger/caliper/issues/165#issuecomment-438847764,aklenik,@fooock @lzh5261 Issue #137 has additional comments since it was referenced from here. Can you check the suggested approach?,2018-11-14 22:46:54,2018-11-14 22:46:54
https://api.github.com/repos/hyperledger/caliper/issues/165,https://api.github.com/repos/hyperledger/caliper/issues/comments/462694871,https://github.com/hyperledger/caliper/issues/165#issuecomment-462694871,panyu4,"@fooock @lzh5261 as our experiences and said in the issue #137 , instantiating chaincode error is caused by the pre-requisites. Since there are lack of some modules, it need to download corresponding packages, meanwhile the time is short 
 which results in the timeout error. So run `npm install -g node-gyp  node-pre-gyp` before you use command `node benchmark/simple/main.js` to run the simple test. ",2019-02-12 09:59:45,2019-02-12 09:59:45
https://api.github.com/repos/hyperledger/caliper/issues/164,https://api.github.com/repos/hyperledger/caliper/issues/comments/428486141,https://github.com/hyperledger/caliper/pull/164#issuecomment-428486141,feihujiang,LGTM，Thanks.,2018-10-10 08:35:02,2018-10-10 08:35:02
https://api.github.com/repos/hyperledger/caliper/issues/163,https://api.github.com/repos/hyperledger/caliper/issues/comments/414358292,https://github.com/hyperledger/caliper/issues/163#issuecomment-414358292,nklincoln,specify a target network that has TLS configured to be 'on'. There are numerous topologies within the `network/fabric` directory that you can pick from - use a docker compose file that is flagged as TLS,2018-08-20 15:27:10,2018-08-20 15:27:10
https://api.github.com/repos/hyperledger/caliper/issues/163,https://api.github.com/repos/hyperledger/caliper/issues/comments/462702361,https://github.com/hyperledger/caliper/issues/163#issuecomment-462702361,panyu4,"Since there are not more activities, it will be closed.",2019-02-12 10:21:25,2019-02-12 10:21:25
https://api.github.com/repos/hyperledger/caliper/issues/162,https://api.github.com/repos/hyperledger/caliper/issues/comments/459190550,https://github.com/hyperledger/caliper/pull/162#issuecomment-459190550,feihujiang,"This  is resolved by #248, caliper now check whether a chaincode has been installed and instantiated for fabric. ",2019-01-31 02:26:35,2019-01-31 02:26:35
https://api.github.com/repos/hyperledger/caliper/issues/161,https://api.github.com/repos/hyperledger/caliper/issues/comments/413414456,https://github.com/hyperledger/caliper/pull/161#issuecomment-413414456,ski2per,"Currently we are using Caliper as our performance test tool. Our environment is in Docker Swarm, I think this feature will be convenient for us to test same chaincode repeatly",2018-08-16 03:34:56,2018-08-16 03:34:56
https://api.github.com/repos/hyperledger/caliper/issues/160,https://api.github.com/repos/hyperledger/caliper/issues/comments/413178177,https://github.com/hyperledger/caliper/pull/160#issuecomment-413178177,push1st1k,@jiangyaoguo @panyu4 please review the PR,2018-08-15 12:06:29,2018-08-15 12:06:29
https://api.github.com/repos/hyperledger/caliper/issues/160,https://api.github.com/repos/hyperledger/caliper/issues/comments/427799410,https://github.com/hyperledger/caliper/pull/160#issuecomment-427799410,panyu4,@push1st1k  Thanks! Please sign-off the commit using git commit -s.,2018-10-08 11:27:03,2018-10-08 11:27:03
https://api.github.com/repos/hyperledger/caliper/issues/160,https://api.github.com/repos/hyperledger/caliper/issues/comments/427815706,https://github.com/hyperledger/caliper/pull/160#issuecomment-427815706,push1st1k,"@panyu4 As I can see, both commits are signed-off. Is there any other way to do that?",2018-10-08 12:35:47,2018-10-08 12:35:47
https://api.github.com/repos/hyperledger/caliper/issues/160,https://api.github.com/repos/hyperledger/caliper/issues/comments/428124470,https://github.com/hyperledger/caliper/pull/160#issuecomment-428124470,panyu4,"Yes ,you signed. Thanks for your contribution.",2018-10-09 09:28:37,2018-10-09 09:28:37
https://api.github.com/repos/hyperledger/caliper/issues/159,https://api.github.com/repos/hyperledger/caliper/issues/comments/412767777,https://github.com/hyperledger/caliper/pull/159#issuecomment-412767777,Ram-srini,@haojun @feihujiang - Please review changes for event subscription approach to get the block commit status instead of commit status query using rest-api.,2018-08-14 06:26:28,2018-08-14 06:26:28
https://api.github.com/repos/hyperledger/caliper/issues/159,https://api.github.com/repos/hyperledger/caliper/issues/comments/412772980,https://github.com/hyperledger/caliper/pull/159#issuecomment-412772980,haojun,@jiangyaoguo @panyu4 ,2018-08-14 06:53:54,2018-08-14 06:53:54
https://api.github.com/repos/hyperledger/caliper/issues/159,https://api.github.com/repos/hyperledger/caliper/issues/comments/413769139,https://github.com/hyperledger/caliper/pull/159#issuecomment-413769139,Ram-srini,@jiangyaoguo  @panyu4 @haojun  I have some improvements to event subscription code changes. I am doing one time event subscription in init() method and handling event every time it got the event. Please review changes.,2018-08-17 06:19:18,2018-08-17 06:19:18
https://api.github.com/repos/hyperledger/caliper/issues/159,https://api.github.com/repos/hyperledger/caliper/issues/comments/427304001,https://github.com/hyperledger/caliper/pull/159#issuecomment-427304001,Ram-srini,@feihujiang  @haojun   - Please review this PR,2018-10-05 09:34:36,2018-10-05 09:34:36
https://api.github.com/repos/hyperledger/caliper/issues/158,https://api.github.com/repos/hyperledger/caliper/issues/comments/413409704,https://github.com/hyperledger/caliper/pull/158#issuecomment-413409704,jiangyaoguo,@nklincoln Can we close coverage check for now. New PRs may break limit of this PR. ,2018-08-16 03:04:19,2018-08-16 03:04:19
https://api.github.com/repos/hyperledger/caliper/issues/155,https://api.github.com/repos/hyperledger/caliper/issues/comments/414397363,https://github.com/hyperledger/caliper/issues/155#issuecomment-414397363,fooock,"@gantleman install grpc version 1.10.1 instead of 1.13.1

```
npm install grpc@1.10.1
```",2018-08-20 17:26:46,2018-08-20 17:26:46
https://api.github.com/repos/hyperledger/caliper/issues/155,https://api.github.com/repos/hyperledger/caliper/issues/comments/428461982,https://github.com/hyperledger/caliper/issues/155#issuecomment-428461982,panyu4,"@fooock you are right.
And long time no activity, I think this is fixed. I am closing this issue.",2018-10-10 07:07:54,2018-10-10 07:07:54
https://api.github.com/repos/hyperledger/caliper/issues/154,https://api.github.com/repos/hyperledger/caliper/issues/comments/410688225,https://github.com/hyperledger/caliper/issues/154#issuecomment-410688225,jamievaravara,Block size and timeout can be changed through the channel config. How about the rest?,2018-08-06 12:16:52,2018-08-06 12:16:52
https://api.github.com/repos/hyperledger/caliper/issues/154,https://api.github.com/repos/hyperledger/caliper/issues/comments/412895464,https://github.com/hyperledger/caliper/issues/154#issuecomment-412895464,jamievaravara,Any help?,2018-08-14 14:39:36,2018-08-14 14:39:36
https://api.github.com/repos/hyperledger/caliper/issues/154,https://api.github.com/repos/hyperledger/caliper/issues/comments/436164785,https://github.com/hyperledger/caliper/issues/154#issuecomment-436164785,houqinghui,@jamievaravara   do you find the solution ?,2018-11-06 08:07:47,2018-11-06 08:07:47
https://api.github.com/repos/hyperledger/caliper/issues/154,https://api.github.com/repos/hyperledger/caliper/issues/comments/438846087,https://github.com/hyperledger/caliper/issues/154#issuecomment-438846087,aklenik,"@jamievaravara 4. and 5. can be configured from the Caliper side, as stated in the [related docs](https://hyperledger.github.io/caliper/docs/Fabric_Configuration.html). For the other points, refer to the Fabric project documentation and samples (or the Fabric SDK documentation for the endrosement policy).

Since these are questions rather than issues, I'm closing this thread. Feel free to ask further questions about the Caliper configurations in the [#caliper RocketChat channel](https://chat.hyperledger.org/channel/caliper), or through the mailing list: caliper@lists.hyperledger.org",2018-11-14 22:40:33,2018-11-14 22:40:33
https://api.github.com/repos/hyperledger/caliper/issues/154,https://api.github.com/repos/hyperledger/caliper/issues/comments/438903922,https://github.com/hyperledger/caliper/issues/154#issuecomment-438903922,houqinghui,"@jamievaravara  I think  you want to use caliper to test your blockchain network based on fabric, then you want to change these parameter. 

1. block size: [https://github.com/hyperledger/fabric-samples/blob/release-1.3/first-network/configtx.yaml#L211-L215](url), you can change the parameter batchsize or batch timeout to change block size. because new block will be generated when one of these conditions.
2. block timeout : i think your meaning is that the block timeout is batch timeout, please refer to the above.
3. the stateDB: Current state data is stored in a state database for efficient reads and queries from chaincode. Supported databases include levelDB and couchDB. please refer to [https://hyperledger-fabric.readthedocs.io/en/latest/couchdb_tutorial.html](url), this is the tutorial to change the stateDB from levelDB to couchDB.
4. Number of channels: i will try it , than answer you .
5. endorsement policy: The idea behind the endorsement policy, is that the peer block processing logic wants to be able to ""know"" that the transaction contains a write set (values that mutate the world state) which was executed ""correctly"". you can refer to [https://hyperledger-fabric.readthedocs.io/en/latest/endorsement-policies.html#](url)
6. Consensus protocol: the only options for ordering service in Hyperledger Fabric are 1):Solo orderer (mainly used for development and testing);2):Kafka based orderer (provides CFT agreement), if you can use kafka-base ordering service, you can refer to [https://hyperledger-fabric.readthedocs.io/en/latest/kafka.html#kafka-caveat](url)
7. Data format stored in the StateDB: now the fabric support  databases include levelDB and couchDB, LevelDB is the default state database embedded in the peer node and stores chaincode data as simple key-value pairs and supports key, key range, and composite key queries only,  CouchDB is a JSON document datastoreand support rich queries when chaincode data values are modeled as JSON. so you can change the data format.
8. maybe you cannot hange the communication protocol,please refer to the details [https://hyperledger-fabric.readthedocs.io/en/latest/gossip.html](url)",2018-11-15 03:26:38,2018-11-15 03:26:38
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/415406904,https://github.com/hyperledger/caliper/issues/153#issuecomment-415406904,stanly-johnson,"I have the same issue. Any solutions?
",2018-08-23 13:05:26,2018-08-23 13:05:26
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/422426389,https://github.com/hyperledger/caliper/issues/153#issuecomment-422426389,kaiknight,"Hi same issue here.
I've this issue in Ubuntu 16.04 when connecting through NodeJS SDK.
The issue doesn't occur when submitting transaction through peer command in cli container.
It doesn't occur in OSX either when connecting through NodeJS SDK.
Any workaround?",2018-09-18 14:53:04,2018-09-18 14:53:04
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/422626259,https://github.com/hyperledger/caliper/issues/153#issuecomment-422626259,kaiknight,"

It seems to be a permission issue. When I start the client side with sudo, assigning it root previlige. The issue is resolved. Still not sure about the root cause.

sudo env ""PATH=$PATH"" ./fabric.sh start

",2018-09-19 02:26:07,2018-09-19 02:26:07
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/427002667,https://github.com/hyperledger/caliper/issues/153#issuecomment-427002667,anchit93,"Hello @kaiknight , 
I am also facing the same issue while trying to setup my network using Node SDK on my Ubuntu VMs.
I am facing it while creating a common channel and joining my orgs. I also tried running my JS file with sudo permission but still facing the same issue. I would really appreciate if you can assist me in solving this issue.",2018-10-04 12:38:42,2018-10-04 12:38:42
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/427214207,https://github.com/hyperledger/caliper/issues/153#issuecomment-427214207,gantleman,"> Hi same issue here.
> I've this issue in Ubuntu 16.04 when connecting through NodeJS SDK.
> The issue doesn't occur when submitting transaction through peer command in cli container.
> It doesn't occur in OSX either when connecting through NodeJS SDK.
> Any workaround?

@kaiknight thank you, have already been solved",2018-10-05 00:54:35,2018-10-05 00:54:35
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/434216627,https://github.com/hyperledger/caliper/issues/153#issuecomment-434216627,Macaret,I have the same issue... when trying to invoke from the NodeJS app. Any help?,2018-10-30 08:43:44,2018-10-30 08:43:44
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/438843346,https://github.com/hyperledger/caliper/issues/153#issuecomment-438843346,aklenik,"@anchit93 @Macaret Looks like a connection issue with the orderer. Could you do the following steps?
1. Remove the start and end scripts from the config.
1. Start the docker network manually (execute the removed start script)
1. Wait a few seconds for the network to start
1. Execute the benchmark

If the error is still there, inspect your orderer logs (and post it here as a GitHub gist if you can't figure out the reason for the error)",2018-11-14 22:30:12,2018-11-14 22:30:12
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/442824358,https://github.com/hyperledger/caliper/issues/153#issuecomment-442824358,dattajadhav44,"I have the same error, Can someone please suggest

error: [Remote.js]: Error: Failed to connect before the deadline URL:grpcs://localhost:7050
[2018-11-29 18:23:48.445] [ERROR] Join-Channel - Error: Failed to connect before the deadline URL:grpcs://localhost:7050
    at checkState (/home/djadhav/Desktop/fabric-samples/balance-transfer/node_modules/grpc/src/client.js:720:16)
[2018-11-29 18:23:48.445] [ERROR] Join-Channel - Failed to join all peers to channel. cause:Error: Failed to connect before the deadline URL:grpcs://localhost:7050
(node:7079) UnhandledPromiseRejectionWarning: Error: Failed to join all peers to channel. cause:Error: Failed to connect before the deadline URL:grpcs://localhost:7050
    at Object.joinChannel (/home/djadhav/Desktop/fabric-samples/balance-transfer/app/join-channel.js:101:9)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
(node:7079) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3)
",2018-11-29 12:58:10,2018-11-29 12:58:10
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/443703022,https://github.com/hyperledger/caliper/issues/153#issuecomment-443703022,Macaret,"> @anchit93 @Macaret Looks like a connection issue with the orderer. Could you do the following steps?
> 
> 1. Remove the start and end scripts from the config.
> 2. Start the docker network manually (execute the removed start script)
> 3. Wait a few seconds for the network to start
> 4. Execute the benchmark
> 
> If the error is still there, inspect your orderer logs (and post it here as a GitHub gist if you can't figure out the reason for the error)

I still have the issue, only on invoke, on query - everything works fine... And from the CLI container I can invoke the chaincode.

Here are the logs from my orderer:

[2018-12-03T12:58:59.843] [ERROR] app - asyncMiddleware Error: Failed to connect before the deadline URL:grpcs://orderer.test.com:7050  at checkState (/home/pc-01/fabric-samples/project/fabric-starter-rest/node_modules/grpc/src/client.js:720:16)

```
2018-12-03 12:34:56.225 UTC [localconfig] completeInitialization -> INFO 001 Kafka.Version unset, setting to 0.10.2.0
2018-12-03 12:34:56.237 UTC [orderer/common/server] prettyPrintStruct -> INFO 002 Orderer config values:
	General.LedgerType = ""file""
	General.ListenAddress = ""0.0.0.0""
	General.ListenPort = 7050
	General.TLS.Enabled = true
	General.TLS.PrivateKey = ""/var/hyperledger/orderer/tls/server.key""
	General.TLS.Certificate = ""/var/hyperledger/orderer/tls/server.crt""
	General.TLS.RootCAs = [/var/hyperledger/orderer/tls/ca.crt]
	General.TLS.ClientAuthRequired = false
	General.TLS.ClientRootCAs = []
	General.Keepalive.ServerMinInterval = 1m0s
	General.Keepalive.ServerInterval = 2h0m0s
	General.Keepalive.ServerTimeout = 20s
	General.GenesisMethod = ""file""
	General.GenesisProfile = ""SampleInsecureSolo""
	General.SystemChannel = ""test-system-channel-name""
	General.GenesisFile = ""/var/hyperledger/orderer/orderer.genesis.block""
	General.Profile.Enabled = false
	General.Profile.Address = ""0.0.0.0:6060""
	General.LogLevel = ""INFO""
	General.LogFormat = ""%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}""
	General.LocalMSPDir = ""/var/hyperledger/orderer/msp""
	General.LocalMSPID = ""OrdererMSP""
	General.BCCSP.ProviderName = ""SW""
	General.BCCSP.SwOpts.SecLevel = 256
	General.BCCSP.SwOpts.HashFamily = ""SHA2""
	General.BCCSP.SwOpts.Ephemeral = false
	General.BCCSP.SwOpts.FileKeystore.KeyStorePath = ""/var/hyperledger/orderer/msp/keystore""
	General.BCCSP.SwOpts.DummyKeystore =
	General.BCCSP.PluginOpts =
	General.Authentication.TimeWindow = 15m0s
	FileLedger.Location = ""/var/hyperledger/production/orderer""
	FileLedger.Prefix = ""hyperledger-fabric-ordererledger""
	RAMLedger.HistorySize = 1000
	Kafka.Retry.ShortInterval = 5s
	Kafka.Retry.ShortTotal = 10m0s
	Kafka.Retry.LongInterval = 5m0s
	Kafka.Retry.LongTotal = 12h0m0s
	Kafka.Retry.NetworkTimeouts.DialTimeout = 10s
	Kafka.Retry.NetworkTimeouts.ReadTimeout = 10s
	Kafka.Retry.NetworkTimeouts.WriteTimeout = 10s
	Kafka.Retry.Metadata.RetryMax = 3
	Kafka.Retry.Metadata.RetryBackoff = 250ms
	Kafka.Retry.Producer.RetryMax = 3
	Kafka.Retry.Producer.RetryBackoff = 100ms
	Kafka.Retry.Consumer.RetryBackoff = 2s
	Kafka.Verbose = false
	Kafka.Version = 0.10.2.0
	Kafka.TLS.Enabled = false
	Kafka.TLS.PrivateKey = """"
	Kafka.TLS.Certificate = """"
	Kafka.TLS.RootCAs = []
	Kafka.TLS.ClientAuthRequired = false
	Kafka.TLS.ClientRootCAs = []
	Kafka.SASLPlain.Enabled = false
	Kafka.SASLPlain.User = """"
	Kafka.SASLPlain.Password = """"
	Kafka.Topic.ReplicationFactor = 3
	Debug.BroadcastTraceDir = """"
	Debug.DeliverTraceDir = """"
2018-12-03 12:34:56.237 UTC [orderer/common/server] initializeServerConfig -> INFO 003 Starting orderer with TLS enabled
2018-12-03 12:34:56.257 UTC [fsblkstorage] newBlockfileMgr -> INFO 004 Getting block information from block storage
2018-12-03 12:34:56.270 UTC [orderer/commmon/multichannel] NewRegistrar -> INFO 005 Starting system channel 'testchainid' with genesis block hash d4c076f5307b417cdd952126560f6b8e8d67143e6f57b69a30ab05f16280eec4 and orderer type solo
2018-12-03 12:34:56.271 UTC [orderer/common/server] Start -> INFO 006 Starting orderer:
 Version: 1.3.0
 Commit SHA: ab0a67a
 Go version: go1.10.4
 OS/Arch: linux/amd64
 Experimental features: false
2018-12-03 12:34:56.271 UTC [orderer/common/server] Start -> INFO 007 Beginning to serve requests
2018-12-03 12:35:02.822 UTC [fsblkstorage] newBlockfileMgr -> INFO 008 Getting block information from block storage
2018-12-03 12:35:02.835 UTC [orderer/commmon/multichannel] newChain -> INFO 009 Created and starting new chain mychannel
2018-12-03 12:35:02.840 UTC [common/deliver] Handle -> WARN 00a Error reading from 10.0.0.36:51508: rpc error: code = Canceled desc = context canceled
2018-12-03 12:35:15.673 UTC [orderer/common/broadcast] Handle -> WARN 00b Error reading from 10.0.0.36:51528: rpc error: code = Canceled desc = context canceled
2018-12-03 12:35:15.673 UTC [common/deliver] Handle -> WARN 00c Error reading from 10.0.0.36:51526: rpc error: code = Canceled desc = context canceled
2018-12-03 12:35:18.728 UTC [common/deliver] Handle -> WARN 00d Error reading from 10.0.0.36:51534: rpc error: code = Canceled desc = context canceled
2018-12-03 12:35:18.728 UTC [orderer/common/broadcast] Handle -> WARN 00e Error reading from 10.0.0.36:51536: rpc error: code = Canceled desc = context canceled
2018-12-03 12:35:46.102 UTC [orderer/common/broadcast] Handle -> WARN 00f Error reading from 10.0.0.36:51576: rpc error: code = Canceled desc = context canceled
2018-12-03 12:41:14.568 UTC [orderer/common/broadcast] Handle -> WARN 010 Error reading from 10.0.0.36:51766: rpc error: code = Canceled desc = context canceled
```
",2018-12-03 13:04:24,2018-12-03 14:44:04
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/455595422,https://github.com/hyperledger/caliper/issues/153#issuecomment-455595422,raky35,"Face same issue on Mac at step 11 and 12 https://hyperledger.github.io/composer/latest/tutorials/deploy-to-fabric-multi-org 


 $composer network install --card PeerAdmin@byfn-network-org1 --archiveFile trade-network.bna
⠹ Installing business network. This may take a minute...E0117 21:32:32.532056000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0117 21:32:32.532847000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed. E0117 21:32:32.533437000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.E0117 21:32:32.534208000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.E0117 21:32:32.537892000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0117 21:32:32.546455000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.E0117 21:32:32.547008000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.E0117 21:32:32.547544000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
⠸ Installing business network. This may take a minute...E0117 21:32:32.658260000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0117 21:32:32.658921000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.E0117 21:32:32.662836000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.E0117 21:32:32.664557000 4371604928 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
⠴ Installing business ",2019-01-18 15:58:45,2019-01-18 15:58:45
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/459181689,https://github.com/hyperledger/caliper/issues/153#issuecomment-459181689,nhannamsiu,"This is compatible problem with grpc on nodejs. Please try downgrading your node to v8 latest, npm rebuild and try again.",2019-01-31 01:42:03,2019-01-31 01:42:03
https://api.github.com/repos/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/comments/469429362,https://github.com/hyperledger/caliper/issues/153#issuecomment-469429362,aklenik,"@raky35 @Macaret @dattajadhav44 @anchit93 Handshake errors usually occur when the communication protocols don't match on the client and server side. Double check that if your network configuration file uses `grpcs://` and `https://` protocols, then your Fabric network is also configured for TLS (and viceversa).

The example networks were made more robust regarding this error, so make sure you use an up-2-date version of Caliper.",2019-03-04 21:30:47,2019-03-04 21:30:47
https://api.github.com/repos/hyperledger/caliper/issues/152,https://api.github.com/repos/hyperledger/caliper/issues/comments/409818230,https://github.com/hyperledger/caliper/issues/152#issuecomment-409818230,sathishNS,Try running node main.js -c config.json without giving fabric.json. Make sure you followed all the pre-reqs before running this and cross check the config and fabric.json.,2018-08-02 06:16:23,2018-08-02 06:16:23
https://api.github.com/repos/hyperledger/caliper/issues/152,https://api.github.com/repos/hyperledger/caliper/issues/comments/437785304,https://github.com/hyperledger/caliper/issues/152#issuecomment-437785304,houqinghui,"@lotty02cho   can you list the steps to reproduce, if you have not solved the problem?",2018-11-12 07:42:23,2018-11-12 07:42:23
https://api.github.com/repos/hyperledger/caliper/issues/152,https://api.github.com/repos/hyperledger/caliper/issues/comments/469429620,https://github.com/hyperledger/caliper/issues/152#issuecomment-469429620,aklenik,@lotty02cho Any progress on this issue?,2019-03-04 21:31:33,2019-03-04 21:31:33
https://api.github.com/repos/hyperledger/caliper/issues/151,https://api.github.com/repos/hyperledger/caliper/issues/comments/428160851,https://github.com/hyperledger/caliper/pull/151#issuecomment-428160851,panyu4,Thanks for your contribution. @anfimovoleh You need to use 'git commit -s' to sign off your commit. And then need a rebase. ,2018-10-09 11:44:00,2018-10-09 11:44:50
https://api.github.com/repos/hyperledger/caliper/issues/151,https://api.github.com/repos/hyperledger/caliper/issues/comments/463682634,https://github.com/hyperledger/caliper/pull/151#issuecomment-463682634,aklenik,"Due to the unreachable repository, inactivity, missing DCO, unsquashed commits and unclear purpose, I'm closing the PR.",2019-02-14 16:00:41,2019-02-14 16:00:41
https://api.github.com/repos/hyperledger/caliper/issues/150,https://api.github.com/repos/hyperledger/caliper/issues/comments/414360082,https://github.com/hyperledger/caliper/issues/150#issuecomment-414360082,nklincoln,"... can you expand on the above issue please? What were you trying to achieve, what did you do, etc",2018-08-20 15:31:50,2018-08-20 15:31:50
https://api.github.com/repos/hyperledger/caliper/issues/150,https://api.github.com/repos/hyperledger/caliper/issues/comments/448825538,https://github.com/hyperledger/caliper/issues/150#issuecomment-448825538,houqinghui,@gantleman TLS is the way that fabric support ，you can refer to [https://hyperledger-fabric.readthedocs.io/en/release-1.4/enable_tls.html]，or you can use the default tls network config file or the defautl no tls network config file.,2018-12-20 01:32:01,2018-12-20 01:32:01
https://api.github.com/repos/hyperledger/caliper/issues/150,https://api.github.com/repos/hyperledger/caliper/issues/comments/469430328,https://github.com/hyperledger/caliper/issues/150#issuecomment-469430328,aklenik,"@gantleman Any progress on the issue? The network examples have been reworked, for both TLS and no-TLS.",2019-03-04 21:33:32,2019-03-04 21:33:32
https://api.github.com/repos/hyperledger/caliper/issues/149,https://api.github.com/repos/hyperledger/caliper/issues/comments/408988045,https://github.com/hyperledger/caliper/issues/149#issuecomment-408988045,anfimovoleh,"Yes, have the same problem. I was spend a lot of time, but not resolve this issue",2018-07-30 19:50:35,2018-07-30 19:51:32
https://api.github.com/repos/hyperledger/caliper/issues/149,https://api.github.com/repos/hyperledger/caliper/issues/comments/409122647,https://github.com/hyperledger/caliper/issues/149#issuecomment-409122647,haojun,"It may be a sdk compatibility issue. Please install fabric sdk v1.1.0 and retry the test. For example, npm install grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0",2018-07-31 07:26:00,2018-07-31 07:26:00
https://api.github.com/repos/hyperledger/caliper/issues/149,https://api.github.com/repos/hyperledger/caliper/issues/comments/409134024,https://github.com/hyperledger/caliper/issues/149#issuecomment-409134024,michielmulders,"@haojun Yes that solves the issue, accurate answer!",2018-07-31 08:08:22,2018-07-31 08:08:22
https://api.github.com/repos/hyperledger/caliper/issues/149,https://api.github.com/repos/hyperledger/caliper/issues/comments/416345978,https://github.com/hyperledger/caliper/issues/149#issuecomment-416345978,wompeter,"Another solution is to simply update the network to use containers matching the client/sdk version you are trying to test.

If you're running 1.2.0 for example, just go into `network/fabric/simplenetwork/docker-compose.yml`, and change all the image references from `hyperledger/fabric-peer:x86_64-1.1.0` to `hyperledger/fabric-peer:1.2.0`.   ",2018-08-27 19:48:47,2018-08-27 19:48:47
https://api.github.com/repos/hyperledger/caliper/issues/149,https://api.github.com/repos/hyperledger/caliper/issues/comments/428151512,https://github.com/hyperledger/caliper/issues/149#issuecomment-428151512,oralloj,"Is there any workaround for this issue when using IBM images instead of hyperledger's?
I need to use fabric sdk 1.2.x and it was working fine with hyperledger images, now I'm trying the same with IBM's and can't get past this error.",2018-10-09 11:06:24,2018-10-09 11:06:24
https://api.github.com/repos/hyperledger/caliper/issues/149,https://api.github.com/repos/hyperledger/caliper/issues/comments/453977122,https://github.com/hyperledger/caliper/issues/149#issuecomment-453977122,nileshbhoskar,"I received same issue as below while starting server from Ubuntu local machine for every network,

✖ Starting business network definition. This may take a minute...
Error: Error trying to start business network. Error: No valid responses from any peers.
Response from attempted peer comms was an error: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
Command failed

And if I create new network then it will work smoothly without any issue.
",2019-01-14 11:40:04,2019-01-14 11:40:04
https://api.github.com/repos/hyperledger/caliper/issues/148,https://api.github.com/repos/hyperledger/caliper/issues/comments/413409859,https://github.com/hyperledger/caliper/pull/148#issuecomment-413409859,jiangyaoguo, duplicated PR #158,2018-08-16 03:05:18,2018-08-16 03:05:18
https://api.github.com/repos/hyperledger/caliper/issues/145,https://api.github.com/repos/hyperledger/caliper/issues/comments/408695620,https://github.com/hyperledger/caliper/issues/145#issuecomment-408695620,aklenik,"@ml16a6a By default, docker compose names the docker network based on the directory name that contains the compose.yaml file. Some versions remove the `-` symbols, some don't. Try modifying [this line](https://github.com/hyperledger/caliper/blob/master/network/fabric/2-org-1-peer/docker-compose.yaml#L56) (and for every other peer) to `- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=2-org-1-peer_default`",2018-07-29 18:17:53,2018-07-30 10:00:49
https://api.github.com/repos/hyperledger/caliper/issues/145,https://api.github.com/repos/hyperledger/caliper/issues/comments/409468799,https://github.com/hyperledger/caliper/issues/145#issuecomment-409468799,ml16a6a,"@aklenik Thanks, it works now",2018-08-01 06:51:33,2018-08-01 06:51:33
https://api.github.com/repos/hyperledger/caliper/issues/143,https://api.github.com/repos/hyperledger/caliper/issues/comments/408178220,https://github.com/hyperledger/caliper/issues/143#issuecomment-408178220,aklenik,"@sathishNS The submitted transactions that should create those accounts probably timed out. So when you want to query it, it doesn't exist, and the chaincode handles this by throwing this error. So this is the expected behavior of the chaincode.

This chaincode line throws the error: https://github.com/hyperledger/caliper/blob/master/src/contract/fabric/simple/go/simpletest.go#L107",2018-07-26 17:44:55,2018-07-26 17:44:55
https://api.github.com/repos/hyperledger/caliper/issues/143,https://api.github.com/repos/hyperledger/caliper/issues/comments/409547296,https://github.com/hyperledger/caliper/issues/143#issuecomment-409547296,sathishNS,"@aklenik so basically how to increase the timeout for this ? is it hardcoded value?

Also in the final ""All test results"" there are number of failures. what does that mean?",2018-08-01 11:45:25,2018-08-01 11:45:25
https://api.github.com/repos/hyperledger/caliper/issues/143,https://api.github.com/repos/hyperledger/caliper/issues/comments/436171210,https://github.com/hyperledger/caliper/issues/143#issuecomment-436171210,houqinghui,"@sathishNS   have you solved the problem?   you can take a look at Issue #175 
if you wang increase the timeout , you can refer to Issue #137 ",2018-11-06 08:33:50,2018-11-06 08:33:50
https://api.github.com/repos/hyperledger/caliper/issues/143,https://api.github.com/repos/hyperledger/caliper/issues/comments/436252463,https://github.com/hyperledger/caliper/issues/143#issuecomment-436252463,aklenik,"@sathishNS You can increase the transaction timeout on the client/Caliper side in your callback module when calling the `invokeSmartContract()` function (the last parameter is the timeout in seconds, but take a look at the sample callbacks, like the ones in the `simple` benchmark directory).

You can increase the transaction timeout on the peer side by passing the following environment setting somehow (in the docker compose file for example): `CORE_CHAINCODE_EXECUTETIMEOUT=120s`",2018-11-06 13:29:21,2018-11-06 13:29:21
https://api.github.com/repos/hyperledger/caliper/issues/143,https://api.github.com/repos/hyperledger/caliper/issues/comments/438833662,https://github.com/hyperledger/caliper/issues/143#issuecomment-438833662,aklenik,"Since this is a timeout configuration issue and the benchmark exhibits the expected behavior, I'm closing the issue.",2018-11-14 21:57:18,2018-11-14 21:57:18
https://api.github.com/repos/hyperledger/caliper/issues/141,https://api.github.com/repos/hyperledger/caliper/issues/comments/407458242,https://github.com/hyperledger/caliper/issues/141#issuecomment-407458242,aklenik,"@WaedSaleh I'm not sure that this should be a Caliper issue :) Nevertheless, this (Fabric SDK) error indicates that the event hub connection was terminated for some reason (network issues, overloaded peers, etc.).",2018-07-24 15:56:30,2018-07-24 15:56:30
https://api.github.com/repos/hyperledger/caliper/issues/141,https://api.github.com/repos/hyperledger/caliper/issues/comments/438832951,https://github.com/hyperledger/caliper/issues/141#issuecomment-438832951,aklenik,"Since this is `blockchain-explorer`-related, I'm closing the issue.",2018-11-14 21:54:58,2018-11-14 21:54:58
https://api.github.com/repos/hyperledger/caliper/issues/140,https://api.github.com/repos/hyperledger/caliper/issues/comments/406925959,https://github.com/hyperledger/caliper/issues/140#issuecomment-406925959,haojun,"@pplam I'm not 100% sure, but @jiangyaoguo we can investigate on it.",2018-07-23 03:03:05,2018-07-23 03:17:53
https://api.github.com/repos/hyperledger/caliper/issues/140,https://api.github.com/repos/hyperledger/caliper/issues/comments/442800988,https://github.com/hyperledger/caliper/issues/140#issuecomment-442800988,aklenik,Resolved by PR #237 ,2018-11-29 11:30:42,2018-11-29 11:30:42
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/406259087,https://github.com/hyperledger/caliper/issues/139#issuecomment-406259087,aklenik,"The feature to specify custom target peers and orderers will probably build upon the Common Connection Profile of the Fabric SDK (see Issue #37). However, this requires the almost complete rewrite of the Fabric adapter, which will take some time (both the implementation and the proper testing/review). In the meantime a quick&dirty solution could be hacked together in a fork.",2018-07-19 12:28:31,2018-07-19 12:28:31
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/406477985,https://github.com/hyperledger/caliper/issues/139#issuecomment-406477985,pplam,"Got it, so i need to do some hacking on `caliper` and keep looking forward to this feature. Thanks",2018-07-20 03:23:31,2018-07-20 03:23:31
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/406522468,https://github.com/hyperledger/caliper/issues/139#issuecomment-406522468,aklenik,"If you need the feature right away, then yes :) But I'm working on the issue, hopefully, it will be ready soon.",2018-07-20 08:08:04,2018-07-20 08:08:04
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/423424273,https://github.com/hyperledger/caliper/issues/139#issuecomment-423424273,pplam,"That's great, I've done my job with some other monitor tools and if the feature is ready, I may use it later. Thanks again.",2018-09-21 06:09:43,2018-09-21 06:09:43
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/427639480,https://github.com/hyperledger/caliper/issues/139#issuecomment-427639480,cao0507,"> That's great, I've done my job with some other monitor tools and if the feature is ready, I may use it later. Thanks again.

What monitor tools have you find?",2018-10-07 09:41:15,2018-10-07 09:41:15
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/432218299,https://github.com/hyperledger/caliper/issues/139#issuecomment-432218299,cao0507,@aklenik Hello，does caliper support multiple orderers now?,2018-10-23 12:02:58,2018-10-23 12:02:58
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/432325850,https://github.com/hyperledger/caliper/issues/139#issuecomment-432325850,aklenik,"@cao0507 There will be a work-in-progress PR soon (hopefully within a day or two), and you can start playing around with the new features. ",2018-10-23 16:42:13,2018-10-23 16:42:13
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/452272155,https://github.com/hyperledger/caliper/issues/139#issuecomment-452272155,samlee1203,is it ready now? I am also looking for caliper's fabric testing on multiple orderers (not solo). ,2019-01-08 11:52:16,2019-01-08 11:52:16
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/456281661,https://github.com/hyperledger/caliper/issues/139#issuecomment-456281661,rohitkhatri,Is there any workaround to test this on multiple orderer until It's added?,2019-01-22 06:05:41,2019-01-22 06:05:41
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/464033591,https://github.com/hyperledger/caliper/issues/139#issuecomment-464033591,aklenik,"@samlee1203 @rohitkhatri Check out PR #296 and the corresponding documentation. It's not merged yet, and every feedback is welcome!",2019-02-15 12:34:04,2019-02-15 12:34:04
https://api.github.com/repos/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/comments/469413672,https://github.com/hyperledger/caliper/issues/139#issuecomment-469413672,aklenik,Resolved by PR #296 ,2019-03-04 20:41:49,2019-03-04 20:41:49
https://api.github.com/repos/hyperledger/caliper/issues/138,https://api.github.com/repos/hyperledger/caliper/issues/comments/406123001,https://github.com/hyperledger/caliper/issues/138#issuecomment-406123001,haojun,@panyu4 @jiangyaoguo ,2018-07-19 01:14:48,2018-07-19 01:14:48
https://api.github.com/repos/hyperledger/caliper/issues/138,https://api.github.com/repos/hyperledger/caliper/issues/comments/438831753,https://github.com/hyperledger/caliper/issues/138#issuecomment-438831753,aklenik,Implemented by PR #202 ,2018-11-14 21:51:04,2018-11-14 21:51:04
https://api.github.com/repos/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/comments/405875829,https://github.com/hyperledger/caliper/issues/137#issuecomment-405875829,aklenik,"Based on the default settings you use for the benchmark, you are running 7 nodes/containers (1 orderer, 2 CAs, 4 peers) on the same physical machine. If that machine is not ""strong"" enough (the containers interfere with each other due to the common physical resource), 2 minutes won't be enough to instantiate a chaincode (which involves building a docker image, and running the chaincode `Init` function on each peer).

Try increasing the timeout value. Unfortunately, it is currently hard-coded, so you have to modify [this line.](https://github.com/hyperledger/caliper/blob/6cf2891736c60dfd5c0a3221f36b1841dc79318d/src/fabric/e2eUtils.js#L214)",2018-07-18 09:49:22,2018-07-18 09:49:22
https://api.github.com/repos/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/comments/405889089,https://github.com/hyperledger/caliper/issues/137#issuecomment-405889089,bitpeng,"@aklenik thanks a lot, your kind help came to my rescue.",2018-07-18 10:42:34,2018-07-18 10:48:56
https://api.github.com/repos/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/comments/418626212,https://github.com/hyperledger/caliper/issues/137#issuecomment-418626212,PoormaJin,"@aklenik     I tried to add up to six minutes, but time out came. Is there any other reason for this problem?",2018-09-05 07:21:36,2018-09-05 07:21:36
https://api.github.com/repos/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/comments/427263604,https://github.com/hyperledger/caliper/issues/137#issuecomment-427263604,cao0507,"> @aklenik I tried to add up to six minutes, but time out came. Is there any other reason for this problem?

I set up the caliper environment in a VM. I meet the same problem and can't solve it according to your advise. @aklenik ",2018-10-05 06:49:28,2018-10-05 06:49:28
https://api.github.com/repos/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/comments/427782266,https://github.com/hyperledger/caliper/issues/137#issuecomment-427782266,aklenik,"@PoormaJin @cao0507 The timeout error can also mean that an error occurred in your chaincode `Init` function. Take a look at the chaincode logs: `docker logs dev-something`
For some reason, this hangs the execution and times out (for Fabric v1.1 at least).",2018-10-08 10:11:28,2018-10-08 10:11:28
https://api.github.com/repos/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/comments/427783835,https://github.com/hyperledger/caliper/issues/137#issuecomment-427783835,cao0507,"> @PoormaJin @cao0507 The timeout error can also mean that an error occurred in your chaincode `Init` function. Take a look at the chaincode logs: `docker logs dev-something`
> For some reason, this hangs the execution and times out (for Fabric v1.1 at least).

Thank you for your reply, but I have solved the problem. My problem maybe result from the pre-requisites, when i install the node-gyp correctly the benchmark run successfully.",2018-10-08 10:18:22,2018-10-08 10:18:22
https://api.github.com/repos/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/comments/430204192,https://github.com/hyperledger/caliper/issues/137#issuecomment-430204192,revobd,"> > @PoormaJin @cao0507 The timeout error can also mean that an error occurred in your chaincode `Init` function. Take a look at the chaincode logs: `docker logs dev-something`
> > For some reason, this hangs the execution and times out (for Fabric v1.1 at least).
> 
> Thank you for your reply, but I have solved the problem. My problem maybe result from the pre-requisites, when i install the node-gyp correctly the benchmark run successfully.

How did you install node-gyp? I am facing the same issue during instantiation of chaincode.",2018-10-16 11:37:43,2018-10-16 11:37:43
https://api.github.com/repos/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/comments/430205356,https://github.com/hyperledger/caliper/issues/137#issuecomment-430205356,cao0507,"@revobd 
`$ npm install -g node-gyp`",2018-10-16 11:42:21,2018-10-16 11:42:21
https://api.github.com/repos/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/comments/430403766,https://github.com/hyperledger/caliper/issues/137#issuecomment-430403766,revobd,"> @revobd
> `$ npm install -g node-gyp`

Thanks. I did that but still had the same issue. It finally worked after doubling the timeout.",2018-10-16 21:15:57,2018-10-16 21:15:57
https://api.github.com/repos/hyperledger/caliper/issues/136,https://api.github.com/repos/hyperledger/caliper/issues/comments/405832846,https://github.com/hyperledger/caliper/issues/136#issuecomment-405832846,bitpeng,@gongchuanhua  try to run :  `npm i grpc@1.10.1 --unsafe-perm`,2018-07-18 07:11:52,2018-07-18 07:14:07
https://api.github.com/repos/hyperledger/caliper/issues/136,https://api.github.com/repos/hyperledger/caliper/issues/comments/428464359,https://github.com/hyperledger/caliper/issues/136#issuecomment-428464359,panyu4,"@gongchuanhua  it may be a permission problem. Try to run : sudo npm install grpc@1.10.1 , or switch to another user and run: sudo npm install grpc@1.10.1",2018-10-10 07:17:46,2018-10-10 07:17:46
https://api.github.com/repos/hyperledger/caliper/issues/136,https://api.github.com/repos/hyperledger/caliper/issues/comments/428466918,https://github.com/hyperledger/caliper/issues/136#issuecomment-428466918,aklenik,"@gongchuanhua My experience is that it's simpler to install local packages as a non-root user. Way less headache (and no need for root privileges anyway):
```
git clone https://github.com/hyperledger/caliper.git
cd caliper
npm install
npm install grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0
```",2018-10-10 07:27:52,2018-10-10 07:28:04
https://api.github.com/repos/hyperledger/caliper/issues/136,https://api.github.com/repos/hyperledger/caliper/issues/comments/428469761,https://github.com/hyperledger/caliper/issues/136#issuecomment-428469761,llhl001,"thanks ,It Works!",2018-10-10 07:38:22,2018-10-10 07:38:22
https://api.github.com/repos/hyperledger/caliper/issues/135,https://api.github.com/repos/hyperledger/caliper/issues/comments/406923797,https://github.com/hyperledger/caliper/pull/135#issuecomment-406923797,haojun,"@Ram-srini @Nidhiintel , would you please help to review this PR?",2018-07-23 02:46:42,2018-07-23 02:46:42
https://api.github.com/repos/hyperledger/caliper/issues/135,https://api.github.com/repos/hyperledger/caliper/issues/comments/406988365,https://github.com/hyperledger/caliper/pull/135#issuecomment-406988365,Ram-srini,"@haojun Changes looks good for me.
",2018-07-23 08:58:32,2018-07-23 08:58:32
https://api.github.com/repos/hyperledger/caliper/issues/135,https://api.github.com/repos/hyperledger/caliper/issues/comments/406989393,https://github.com/hyperledger/caliper/pull/135#issuecomment-406989393,Nidhiintel,Changes are verified and looks good,2018-07-23 09:02:06,2018-07-23 09:02:06
https://api.github.com/repos/hyperledger/caliper/issues/133,https://api.github.com/repos/hyperledger/caliper/issues/comments/405514995,https://github.com/hyperledger/caliper/pull/133#issuecomment-405514995,haojun,@stinger112 can help to review the iroha part,2018-07-17 09:11:50,2018-07-17 09:11:50
https://api.github.com/repos/hyperledger/caliper/issues/133,https://api.github.com/repos/hyperledger/caliper/issues/comments/405541849,https://github.com/hyperledger/caliper/pull/133#issuecomment-405541849,nklincoln,works with Composer 🥇 ,2018-07-17 10:52:55,2018-07-17 10:52:55
https://api.github.com/repos/hyperledger/caliper/issues/133,https://api.github.com/repos/hyperledger/caliper/issues/comments/408281087,https://github.com/hyperledger/caliper/pull/133#issuecomment-408281087,haojun,"@stinger112 , would you please review it?",2018-07-27 01:11:23,2018-07-27 01:11:23
https://api.github.com/repos/hyperledger/caliper/issues/133,https://api.github.com/repos/hyperledger/caliper/issues/comments/408789332,https://github.com/hyperledger/caliper/pull/133#issuecomment-408789332,haojun,"@stinger112 I've tested it with iroha, it works according to my test. So i'd like to approve this pr first. If you find any problem later, you can open an issue on it. ",2018-07-30 08:37:01,2018-07-30 08:37:01
https://api.github.com/repos/hyperledger/caliper/issues/132,https://api.github.com/repos/hyperledger/caliper/issues/comments/405508025,https://github.com/hyperledger/caliper/pull/132#issuecomment-405508025,JulienGuo,@nklincoln this pull request hasn't be merged,2018-07-17 08:48:10,2018-07-17 08:48:10
https://api.github.com/repos/hyperledger/caliper/issues/132,https://api.github.com/repos/hyperledger/caliper/issues/comments/405541563,https://github.com/hyperledger/caliper/pull/132#issuecomment-405541563,nklincoln,"@JulienGuo - i don't have write access so cannot merge, though the fix is good 👍 
",2018-07-17 10:51:34,2018-07-17 10:51:34
https://api.github.com/repos/hyperledger/caliper/issues/131,https://api.github.com/repos/hyperledger/caliper/issues/comments/405203181,https://github.com/hyperledger/caliper/issues/131#issuecomment-405203181,JulienGuo,@nklincoln @haojun ,2018-07-16 10:14:57,2018-07-16 10:14:57
https://api.github.com/repos/hyperledger/caliper/issues/131,https://api.github.com/repos/hyperledger/caliper/issues/comments/405218614,https://github.com/hyperledger/caliper/issues/131#issuecomment-405218614,nklincoln,@JulienGuo - could you expand on this issue description please?,2018-07-16 11:32:04,2018-07-16 11:32:04
https://api.github.com/repos/hyperledger/caliper/issues/131,https://api.github.com/repos/hyperledger/caliper/issues/comments/405225397,https://github.com/hyperledger/caliper/issues/131#issuecomment-405225397,JulienGuo,"The timeout of tx is set at https://github.com/hyperledger/caliper/blob/master/benchmark/simple/open.js 
Line     
return bc.invokeSmartContract(contx, 'simple', 'v0', {verb: 'open', account: newAcc, money: initMoney}, 30);
timeout is 30s, it is a constant value
Sometimes , I need set txNumber as a big number like 100,000, then some txs be executed early , timeout should  be a few seconds , some txs be executed very later , and because of backlog tx timeout is long, maybe the tx start early ,but end later, so  timeout should be long.  So, I want change timeout to a variable value.",2018-07-16 12:04:00,2018-07-16 12:04:00
https://api.github.com/repos/hyperledger/caliper/issues/131,https://api.github.com/repos/hyperledger/caliper/issues/comments/405299463,https://github.com/hyperledger/caliper/issues/131#issuecomment-405299463,nklincoln,"@JulienGuo - would the intention be to have a single ""high"" value set for a test run, or for the value to change through the tests?

If the former, then the change could be made to the test file, with a new argument being passed into the test and used locally for the duration. For instance, in the `init` function, `args.timeout` could be bound to a variable to use in the test, with the corresponding change being made to the test runner specification to provide the argument and a value.",2018-07-16 16:07:27,2018-07-16 16:07:27
https://api.github.com/repos/hyperledger/caliper/issues/131,https://api.github.com/repos/hyperledger/caliper/issues/comments/405436825,https://github.com/hyperledger/caliper/issues/131#issuecomment-405436825,JulienGuo,"@nklincoln If I set a single ""high"" value, if I execute some invokes, maybe them would be error ,  but I should be waiting too long , then  the avg latency would be low. If all the success invokes have been executed complete,  what I can see is the console log never change , just print same log every second. Description: https://github.com/hyperledger/caliper/issues/130",2018-07-17 02:11:28,2018-07-17 02:11:28
https://api.github.com/repos/hyperledger/caliper/issues/131,https://api.github.com/repos/hyperledger/caliper/issues/comments/463038258,https://github.com/hyperledger/caliper/issues/131#issuecomment-463038258,feihujiang,"@JulienGuo Only the successful transactions are used for computing the avg latency, so setting a single ""high"" value would not affect the avg latency. We have submitted one PR(#215 ) with feedback rate controller to balance the high sending rate with  backend throughput. To avoid the high sending rate per client you would use zookeeper client  mode.  We also submitted one PRs with file mode(#286 ) to reduce the time consume.",2019-02-13 03:06:33,2019-02-13 03:06:33
https://api.github.com/repos/hyperledger/caliper/issues/131,https://api.github.com/repos/hyperledger/caliper/issues/comments/469432008,https://github.com/hyperledger/caliper/issues/131#issuecomment-469432008,aklenik,"@JulienGuo Additionally, the timeouts in the example benchmarks are just, well, examples. You can implement any logic to determine the timeout for the individual transactions. This is up to the user, whatever he/she sets, Caliper will enforce that timeout during the transaction life-cycle.

These examples are not production-ready applications, just simple user modules that demonstrate the Caliper API. So IMO it's kind of pointless to polish them till perfection.",2019-03-04 21:38:59,2019-03-04 21:38:59
https://api.github.com/repos/hyperledger/caliper/issues/130,https://api.github.com/repos/hyperledger/caliper/issues/comments/405201679,https://github.com/hyperledger/caliper/issues/130#issuecomment-405201679,JulienGuo," I changed the timeout of invoke, it is very long. please don't use a const value to be timeout ",2018-07-16 10:07:39,2018-07-16 10:07:39
https://api.github.com/repos/hyperledger/caliper/issues/130,https://api.github.com/repos/hyperledger/caliper/issues/comments/405506248,https://github.com/hyperledger/caliper/issues/130#issuecomment-405506248,nklincoln,"Ah - OK, so there was a regression in the Composer plugin where a callback was introduced in the main framework but was unfortunately missed in the Composer transactions. The transactions (smart contract invocations) were being run, but the fact that they had run was not being registered and so the test never finished.

To my knowledge this has now been fixed with a recent PR, so if you were to update to the latest code base you should be good to go.

",2018-07-17 08:41:55,2018-07-17 08:41:55
https://api.github.com/repos/hyperledger/caliper/issues/130,https://api.github.com/repos/hyperledger/caliper/issues/comments/405507409,https://github.com/hyperledger/caliper/issues/130#issuecomment-405507409,JulienGuo,@nklincoln This is the fabric thing and it has nothing to do with composer,2018-07-17 08:46:04,2018-07-17 08:46:04
https://api.github.com/repos/hyperledger/caliper/issues/130,https://api.github.com/repos/hyperledger/caliper/issues/comments/410512434,https://github.com/hyperledger/caliper/issues/130#issuecomment-410512434,abhi201191,Facing this same issue. @JulienGuo any luck in this?,2018-08-05 11:01:18,2018-08-05 11:01:18
https://api.github.com/repos/hyperledger/caliper/issues/130,https://api.github.com/repos/hyperledger/caliper/issues/comments/414925877,https://github.com/hyperledger/caliper/issues/130#issuecomment-414925877,modood,Facing this same issue. @JulienGuo any luck in this?,2018-08-22 06:28:42,2018-08-22 06:28:42
https://api.github.com/repos/hyperledger/caliper/issues/130,https://api.github.com/repos/hyperledger/caliper/issues/comments/449061856,https://github.com/hyperledger/caliper/issues/130#issuecomment-449061856,zsh122958,"@JulienGuo Can you share your experience?I had a problem submitting the transaction
Thank you very much for your help",2018-12-20 16:46:15,2018-12-20 16:46:15
https://api.github.com/repos/hyperledger/caliper/issues/130,https://api.github.com/repos/hyperledger/caliper/issues/comments/469432515,https://github.com/hyperledger/caliper/issues/130#issuecomment-469432515,aklenik,@abhi201191 @modood @zsh122958 Any luck with the issue?,2019-03-04 21:40:34,2019-03-04 21:40:34
https://api.github.com/repos/hyperledger/caliper/issues/127,https://api.github.com/repos/hyperledger/caliper/issues/comments/404728539,https://github.com/hyperledger/caliper/issues/127#issuecomment-404728539,aklenik,"@nktuan286 I experienced this issue when the Fabric network was overloaded, so basically the used resources are not enough. Did you run every node on the same machine? 

Some options to ""push down"" the system requirements (during development time):
- Decrease the TPS rate while you are developing/testing on a local network
- Use only one organization, with one peer and one CA, and solo orderer (adjust the chaincode policy to 1-of-1)
- If it's possible, avoid CouchDB, unless you need the rich query functionality 

Hope these tips help.",2018-07-13 05:20:46,2018-07-13 05:20:46
https://api.github.com/repos/hyperledger/caliper/issues/127,https://api.github.com/repos/hyperledger/caliper/issues/comments/404736450,https://github.com/hyperledger/caliper/issues/127#issuecomment-404736450,nktuan286,"@aklenik Thanks for your help. 
I assume that this issue is not Fabric network was overload.
My local network is OK but this error occurs on Azure.
Currently i running one CA, one Order and one Peer (every node running on a virtual machine on Azure).
Sometime i request to peer then occurs error but try again (one or two more time) then it success  ",2018-07-13 06:12:31,2018-07-13 06:12:31
https://api.github.com/repos/hyperledger/caliper/issues/127,https://api.github.com/repos/hyperledger/caliper/issues/comments/404740986,https://github.com/hyperledger/caliper/issues/127#issuecomment-404740986,aklenik,"Take a look at the peer/orderer logs. My guess is that it is some kind of transient connection failure between the nodes. 

Anyway, these errors are returned by the Fabric SDK, which receives the error from the Fabric network, so it's not originating from inside Caliper. Can you share some details about your setup? Type/number of VMs, network speed, transaction rate, the complexity of  the chaincode?",2018-07-13 06:38:52,2018-07-13 06:38:52
https://api.github.com/repos/hyperledger/caliper/issues/127,https://api.github.com/repos/hyperledger/caliper/issues/comments/404767045,https://github.com/hyperledger/caliper/issues/127#issuecomment-404767045,nktuan286,@aklenik Thanks so much. I will try to fix it.,2018-07-13 08:38:09,2018-07-13 08:38:09
https://api.github.com/repos/hyperledger/caliper/issues/127,https://api.github.com/repos/hyperledger/caliper/issues/comments/428468588,https://github.com/hyperledger/caliper/issues/127#issuecomment-428468588,panyu4,"Since the errors are not originating from inside Caliper, I'm closing this issue. ",2018-10-10 07:34:11,2018-10-10 07:34:11
https://api.github.com/repos/hyperledger/caliper/issues/126,https://api.github.com/repos/hyperledger/caliper/issues/comments/404750066,https://github.com/hyperledger/caliper/pull/126#issuecomment-404750066,haojun,"@aklenik I just noticed there is no explanation for the 'domain' attribute in the Fabric Configuration document. Can you add it, or I can do it by myself.",2018-07-13 07:26:25,2018-07-13 07:26:25
https://api.github.com/repos/hyperledger/caliper/issues/126,https://api.github.com/repos/hyperledger/caliper/issues/comments/404781829,https://github.com/hyperledger/caliper/pull/126#issuecomment-404781829,aklenik,"Ah, you are right, I knew I forgot something. I'll add it soon.",2018-07-13 09:37:34,2018-07-13 09:37:34
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/404448937,https://github.com/hyperledger/caliper/pull/124#issuecomment-404448937,haojun,"Hi @nitesh7sid ,
Thanks for this contribution, I'll try it next week. 

Before that, I have some quick questions and comments:
1. I'd like to make it an 'optional' feature so people who don't want to install mq can still use the old method. And it also can help people to compare results of using different ways. An addiontional parameter can be added in the configuration file to specify this.
2. It would be better to start the listener in bench-flow.js instead of main.js
3. Is there only one global listener for multiple local or remote (zookeeper mode) senders (clients)? Would the listener itself be a bottleneck?",2018-07-12 09:23:12,2018-07-12 09:23:12
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/404451657,https://github.com/hyperledger/caliper/pull/124#issuecomment-404451657,haojun,"4. I just noticed the confirmation results are fetched at the end of the round, which means it's impossible to calculate the realtime metrics as we do now by the txUpdateInter object. Right?",2018-07-12 09:32:56,2018-07-12 09:32:56
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/404461130,https://github.com/hyperledger/caliper/pull/124#issuecomment-404461130,nitesh7sid,"Hi @haojun 

- yes, there will be only one global listener for multiple local or remote (zookeeper mode) senders (ZK mode not tested yet). I don't think listener will be a bottleneck as it will be running entirely on a separate process. I have also tested with multiple clients at higher send rates and didn't encounter any bottleneck issues yet.

- yes, confirmation results are fetched at the end of the round. so it will not be possible to calculate the realtime metrics. 
",2018-07-12 10:05:45,2018-07-12 11:34:14
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/404463386,https://github.com/hyperledger/caliper/pull/124#issuecomment-404463386,haojun,"@nitesh7sid 
Since all results are maintained by the listener, there it no need for clients to fetch results from the listener then send them to the master process (bench-flow.js). The listener itself can calculate the statistics and send them to the master process. And the listener can also calculate the realtime metrics.

The capability to calculate realtime metrics is very important, as we can implement the GUI based on those informations.",2018-07-12 10:14:05,2018-07-12 10:15:21
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/404465047,https://github.com/hyperledger/caliper/pull/124#issuecomment-404465047,nitesh7sid,"@haojun 
- listener process only notes the confirmation time of every block arrived and then publishes to kafka. After the round has finished, the local-client.js makes a call to the function ""getTransactionConfirmationTime"" to consume the blocks and confirmation time for every txn. (https://github.com/nitesh7sid/caliper/blob/master/src/comm/client/local-client.js#L187)

- listener process doesn't have the resultsArray which includes time-created, time_endorse, etc.
Since `time_final` is calculated only at the end of the round, i am not sure how we could allow realtime metrics
",2018-07-12 10:20:32,2018-07-12 10:25:46
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/404468688,https://github.com/hyperledger/caliper/pull/124#issuecomment-404468688,nitesh7sid,"@haojun how about this?
a) spawn a third process which will run in parallel and fetch the confirmation_time of committed transactions from MQ, and also read the data about submitted transactions from the ""sender process"" which includes the creation_time . This third process can then calculate the required metrics and emit.?
",2018-07-12 10:35:31,2018-07-12 11:49:41
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/404693286,https://github.com/hyperledger/caliper/pull/124#issuecomment-404693286,haojun,"@nitesh7sid 

It sounds good. I'd like to review after you finished the modification aforementioned (add the feature as optional and support calculating realtime metrics)",2018-07-13 00:52:11,2018-07-13 00:52:11
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/407643712,https://github.com/hyperledger/caliper/pull/124#issuecomment-407643712,nitesh7sid,Hi @haojun  I have made all the changes as suggested above. ,2018-07-25 06:06:17,2018-07-25 06:06:38
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/407648388,https://github.com/hyperledger/caliper/pull/124#issuecomment-407648388,haojun,"@nitesh7sid , thanks. Please resolve the conflicting so that I can merge and test the code. 

PS: 
1. I add some minor comments after a quick code review
2. Please run the linting to check the code style and correct any possible eslint errors/warnings, thanks.",2018-07-25 06:32:07,2018-07-25 07:02:08
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/407693757,https://github.com/hyperledger/caliper/pull/124#issuecomment-407693757,nitesh7sid,"@haojun what is the procedure to run the linting?can u please provide the steps ?thanks.
",2018-07-25 09:30:23,2018-07-25 09:30:23
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/407941127,https://github.com/hyperledger/caliper/pull/124#issuecomment-407941127,haojun,"@nitesh7sid , run `npm run lint` at the root folder.",2018-07-26 00:50:59,2018-07-26 00:50:59
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408036169,https://github.com/hyperledger/caliper/pull/124#issuecomment-408036169,nitesh7sid,"Hi @haojun I have resolved the merge conflicts. Please review the PR.
By mistake clicked on close button. Sorry for that.
Thanks.",2018-07-26 09:26:43,2018-07-26 09:26:43
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408162450,https://github.com/hyperledger/caliper/pull/124#issuecomment-408162450,aklenik,"@nitesh7sid @haojun If you allow me some remarks before merging:
1) The `package.json` file shouldn't contain dependencies that are specific to one of the blockchain platforms (in this case: `fabric-ca-client`, `fabric-client`, `grpc`, `kafka-node` )
2) The source files should be under the `src/` hierarchy. Since this extension is not Fabric specific, I suggest `src/listener/`
3) The kafka compose file should be in `network/kafka-listener`, for example. 
4) Configurations shouldn't be repeated in multiple files, for example, the `peerEventUrl` is also available in the network config files (same for the other attributes)
5) Are we sure that listening to one peer for events is enough? What if that peer crashes? The transaction still can be successfully committed on other peers. Plus if we want to measure how fast transactions are committed across the network, we will need all event sources (see the PSWG docs about these questions)
6) I think it would be better to set `WITH_MQ` as an environment variable for now. There should be proper configuration support for Caliper soon (see issue #138). And it should also be named `CALIPER_CORE_USEMQ` :)

That's all for now. I'll deep dive into the code in more details tonight, and write an actual review if you're interested.",2018-07-26 16:50:55,2018-07-26 16:53:34
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408283156,https://github.com/hyperledger/caliper/pull/124#issuecomment-408283156,haojun,"@nitesh7sid I got an error when running the simple test with mq. Any idea?

```
# install all chaincodes......
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
Error while publishing block in kafka Error: UnknownTopicOrPartition
    at Object.<anonymous> (/home/haojun/project/caliper/node_modules/kafka-node/lib/protocol/protocol.js:562:17)
    at Object.self.tap (/home/haojun/project/caliper/node_modules/binary/index.js:248:12)
    at Object.decodePartitions (/home/haojun/project/caliper/node_modules/kafka-node/lib/protocol/protocol.js:560:73)
    at Object.self.loop (/home/haojun/project/caliper/node_modules/binary/index.js:267:16)
    at Object.<anonymous> (/home/haojun/project/caliper/node_modules/kafka-node/lib/protocol/protocol.js
    at Object.self.loop (/home/haojun/project/caliper/node_modules/binary/index.js:267:16)
    at decodeProduceResponse (/home/haojun/project/caliper/node_modules/kafka-node/lib/protocol/protocol.js:555:6)
    at Client.handleReceivedData (/home/haojun/project/caliper/node_modules/kafka-node/lib/client.js:763:20)
    at Socket.<anonymous> (/home/haojun/project/caliper/node_modules/kafka-node/lib/client.js:723:10)
    at emitOne (events.js:116:13)
```",2018-07-27 01:25:03,2018-07-27 01:25:45
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408304178,https://github.com/hyperledger/caliper/pull/124#issuecomment-408304178,nitesh7sid,Hi @haojun thanks for the comments! I am not able to reproduce the same error. It worked fine for me. Did you start the kafka cluster and change the IP in the listener-config.json file ?,2018-07-27 03:55:55,2018-07-27 03:55:55
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408321679,https://github.com/hyperledger/caliper/pull/124#issuecomment-408321679,haojun,"@nitesh7sid , the kafak cluster has been started (kafaka0/1/2 and zookeeper0/1/2 can be found by 'docker ps') and I also changed the listener-config.json as below:
```
{
    ""broker_urls"": ""localhost:9092,localhost:7092,localhost:8092"",
""zk_url"": ""localhost:2181"",
""topic"": ""client-b"",
""peerOrg"":""org1"",
""peerEventUrl"":""grpcs://localhost:7053"",
""peerEventHostnameOverride"":""peer0.org1.example.com"",
""peerEventTlscaPath"":""network/fabric/simplenetwork/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt""
 }
``` 

Now the error becomes ```Error while publishing block in kafka [ 'LeaderNotAvailable' ]```. 
",2018-07-27 06:11:08,2018-07-27 06:11:08
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408322448,https://github.com/hyperledger/caliper/pull/124#issuecomment-408322448,nitesh7sid,"oh, it looks like you are running the kafka cluster on the same machine where fabric and caliper is running. I run the kafka cluster on a separate vm or machine. since kafka cluster is composed of 6 docker containers, its better to allocate a separate resource for it.  
Also make sure the docker-compose file for kafka has correct IP set for KAFKA_ADVERTISED_HOST_NAME variable. this should be changed for every broker service:
(https://github.com/nitesh7sid/caliper/blob/master/kafka-setup/docker-compose-kafka.yaml#L45)",2018-07-27 06:16:22,2018-07-27 06:21:42
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408340302,https://github.com/hyperledger/caliper/pull/124#issuecomment-408340302,haojun,"@nitesh7sid , I started the kafka on another machine(139.159.243.213) as you suggested, now there was another error:
```
Producer is not ready { Error: connect ECONNREFUSED 127.0.0.1:9092
    at Object._errnoException (util.js:1022:11)
    at _exceptionWithHostPort (util.js:1044:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1198:14)
  code: 'ECONNREFUSED',
  errno: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 9092 }
```

Here is the new listener-config.json:
```
{
    ""broker_urls"": ""139.159.243.213:9092,139.159.243.213:7092,139.159.243.213:8092"",
     ""zk_url"": ""139.159.243.213:2181"",
     ""topic"": ""client-b"",
     ""peerOrg"":""org1"",
     ""peerEventUrl"":""grpcs://localhost:7053"",
     ""peerEventHostnameOverride"":""peer0.org1.example.com"",
     ""peerEventTlscaPath"":""network/fabric/simplenetwork/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt""
 } 
```
PS: which ip address should I use for KAFKA_ADVERTISED_HOST_NAME, since all kafka nodes are on the same machine, i guess localhost is ok.

I guess it may caused by some wrong configuration, did i miss something?",2018-07-27 07:47:08,2018-07-27 08:06:52
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408349829,https://github.com/hyperledger/caliper/pull/124#issuecomment-408349829,nitesh7sid,Hi @haojun the producer is not able to connect to the kafka cluster. Please set KAFKA_ADVERTISED_HOST_NAME to 139.159.243.213 assuming that the cluster is running on machine with accessible IP '139.159.243.213',2018-07-27 08:27:32,2018-07-27 08:33:17
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408370280,https://github.com/hyperledger/caliper/pull/124#issuecomment-408370280,haojun,"@nitesh7sid It works now, thanks. I'll do more test later on zk mode and other blockchains.

2 comments after the quick test:

1. The console log of the realtime metrics refreshes too quickly. 
For reference, demo.js will generate an output every one second(base on the value of the global demoInterval), and the output will also be saved for a GUI to draw performance charts whose x-axis scale is also one second. 
I strongly recomend to modify demo.js to support mq mode instead of introducing a new demoOptional.js. There are many tricks on the demo, and two implementation would make later modification more difficult :(

2. The process didn't quit after the test, i had to use ctrl-c to kill it. ",2018-07-27 09:49:35,2018-07-27 09:49:35
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408398690,https://github.com/hyperledger/caliper/pull/124#issuecomment-408398690,nitesh7sid,"Thanks @aklenik for your time in reviewing the PR.

@aklenik
1)	Agreed. Removing the fabric-client, fabric-ca-client, grpc and kafka-node dependencies from package.json
2)	Agreed. Moving the listener module src/listener directory and kafka compose set up file at network/ directory
3)	The peerEventUrl configurations are repeated in listener-config.json file to give users the flexibility to choose different peers to listen to events for overall load balancing. We recommend each listener connect to a single peer to avoid receiving duplicate tx confirmation events. This problem adds extra  processing burden on the client and worsens when additional channels are present. Assuming that the tool will be run in controlled settings for benchmarking, this is the design choice we made to keep the event listener light-weight. 

@haojun 
1)	In demoOptional.js file there is a check made to determine the type of benchmark i.e. invoke or query. If it is query, then there would be no blocks in the MQ and hence demoOptional.js would not have to connect to the kafka MQ. To remove the use of  test case specific information, the best approach will be to accept a Boolean argument in the startWatch function and based on the argument determine whether to connect to MQ or not. For this to happen, the `WITH_MQ` flag should be set for every test case in the rounds array in config.json file. So before starting any round, there can be a check made in the bench-flow.js - if the `WITH_MQ` is true or false and depending on that it can instruct the startWatch function whether to connect to MQ or not.
2)	With this approach we can eliminate the global `WITH_MQ` flag. While starting the benchmark, we can accept an ENV variable for Caliper tool to know that it has to now spawn a listener process.
3)	I will update the readme as suggested.
4)	Currently kafka mode is supported only for Fabric only. Zk mode is still an experimental feature and I couldn’t find sufficient documentation on how to run ZK mode to test the newly added functionality. We will need to work together to make it work for the Zk mode. 
5)	demoOptional.js prints the metrics information once per second only. That code has not changed. It looks like the `success` counter gets incremented very fast, because with the new design, the timestamps have a higher accuracy as the listener is only listening to events and timestamping. That is the intended improvement that this design is expected to provide.
",2018-07-27 12:02:39,2018-07-27 12:02:39
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/408576283,https://github.com/hyperledger/caliper/pull/124#issuecomment-408576283,haojun,"@nitesh7sid thanks for you reply, below is my thoughts:

1  I'm not sure moving WITH_MQ flag to each test round is a good idea. The tester may not be a skilled person who understands the difference between invoking and querying. And how to set the flag if a test round do both invoking and querying (please note people can do whatever they want in the callback script)? It's very easy to distinguish invoking and querying, they are using different functions, one is invokesmartcontract() and another is querystate(). So my idea to solve the problem is:
(1). Do not block results from callback.run(). You can change the invokesmartcontract() to return an empty array if mq is enabled.
(2). Reuse the current txUpdated and testResult message for the block handler (the one which parses the block and generates the statistics, i don't know how you call it) and save the results in the buffer in client.js as usual. 
(3). It may be better to fork the listener from client.js, for example in the client.init() 
So the client.js can get the statistics from local clients in case of querying as the old way and block handler in case of invoking with mq. And you don't even need to modify the demo.js or processing result in bench-flow.js, since the buffer in client.js is used as usual.

4  Got it. Then you should add some words in the readme to explain it only support local test with fabric now. And since it only support local client, it may be better to move the flag into 'clients' property with type=local

5  From what I saw, the console prints dozens of statistics lines every second.

6  IMHO, copying & modifying an old file to produce an optional version (such as demoOptional.js and e2eUtils_withMQ.js) is not a good way. Most functions of those files are the same as old ones. From a maintainer's point of view, it is bad for project maintance.",2018-07-28 02:21:22,2018-07-28 02:22:32
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/409591545,https://github.com/hyperledger/caliper/pull/124#issuecomment-409591545,nitesh7sid,"Hi @haojun - I am trying to move the code from demoOptional.js to client-util.js file. I could achieve the following:
1) add a new status field 'NeedVerifyWithMQ' in the TxStatus object and set it true if MQ mode is running.
2) from local-client.js send the un-verified transactions to the client-util.js using a different type of message.
3) In client-util.js, handle the new message and push the un-verified transactions in some buffer.
4) In the init function of client.js, invoke a function from client-util.js 'cosumeEvents' which connects to kafka and stores the confirmation time in a hash map. the hash map is defined in client-util.js
4) in the startTest function of client-util.js, start the interval object to traverse the unconfirmed transactions buffer and find the time_final for each transactions. But now i am facing couple of issues:

* before all the transactions are verified from the buffer, the round exists and the tool starts the next round. how should i handle this condition? 
* how do I confirm that the round is over and clear the interval object ?

below is the code of client-util.js. I am not sure if I am missing anything. Could you please check ? Thanks
```/**
* Copyright 2017 HUAWEI. All Rights Reserved.
*
* SPDX-License-Identifier: Apache-2.0
*
*/


'use strict';
const log          = require('../util.js').log;
let processes  = {}; // {pid:{obj, promise}}
let txUpdateTime = 1000;
const kafka = require('kafka-node');
const listener_config = require(""../../listener/listener-config.json"");
let confirmedTransactions = [];
let cachedEvents = new Map();
let unConfirmedTransactions;
var txUpdateInter = null;
var globalConsumer;
const TxStatus = require('../transaction.js');
var updateTail;

function _consumeEvents(){
    var Consumer = kafka.Consumer;
    var KafkaClient = new kafka.KafkaClient({ kafkaHost: listener_config.broker_urls, requestTimeout: 300000000 });
    var options = {
    autoCommit: true,
    fetchMaxWaitMs: 1000,
    fetchMaxBytes: 5120 * 5120,
    encoding: 'buffer',
    groupId: ""groupID"" + Math.floor(Math.random() * Math.floor(100))};
 
    var topics = [{
        topic: listener_config.topic
    }];
 
    var consumer = new Consumer(KafkaClient, topics, options);
    globalConsumer = consumer;
    consumer.on('message', function (message) {
        var buf = new Buffer(message.value); // Read string into a buffer.
        var data = buf.toString('utf-8')
        var block = JSON.parse(data).block
        
        for (var index = 0; index < block.data.data.length; index++) {
            var channel_header = block.data.data[index].payload.header.channel_header;
            var transaction_id = channel_header.tx_id
            var confirmation_time = JSON.parse(data).validTime;
            if (cachedEvents.get(transaction_id)  == undefined)
           {
                cachedEvents.set(transaction_id, confirmation_time)
           }
            else if (cachedEvents.get(transaction_id) != undefined){
 
                var transactionObject = cachedEvents.get(transaction_id);
                transactionObject.Set('time_final', confirmation_time);
                transactionObject.SetVerification(true);
                transactionObject.Set('status','success');
                cachedEvents.set(transaction_id, transactionObject);
                confirmedTransactions.push(transactionObject);
            }
        }
    });
 
    consumer.on('error', function(err){   
        // retry if unable to connect to kafka
        _consumeEvents()
    })
} 
module.exports._consumeEvents = _consumeEvents;
/**
 * Call the Promise function for a process
 * @param {String} pid pid of the process
 * @param {Boolean} isResolve indicates resolve(true) or reject(false)
 * @param {Object} msg input for the Promise function
 */
function setPromise(pid, isResolve, msg) {
    let p = processes[pid];
    if(p && p.promise && typeof p.promise !== 'undefined') {
        if(isResolve) {
               
            p.promise.resolve(msg);
        }
        else {
            p.promise.reject(msg);
        }
    }
}

/**
 * Push test result from a child process into the global array
 * @param {String} pid pid of the child process
 * @param {Object} data test result
 */
function pushResult(pid, data) {
    let p = processes[pid];
    if(p && p.results && typeof p.results !== 'undefined') {
        p.results.push(data);
    }
}

/**
 * Push update value from a child process into the global array
 * @param {String} pid pid of the child process
 * @param {Object} data update value
 */
function pushUpdate(pid, data) {
    let p = processes[pid];
    if(p && p.updates && typeof p.updates !== 'undefined') {

        p.updates.push(data);
    }
}

/**
 * Push update value from a child process into the global array
 * @param {String} pid pid of the child process
 * @param {Object} data update value
 */
function pushUpdateForMQ(pid, data) {
    unConfirmedTransactions.push(data);
    /*let p = processes[pid];
    if(p && p.updatesWithMQ && typeof p.updatesWithMQ !== 'undefined') {
        p.updatesWithMQ = data;
    }*/
}


/**
 * Launch a child process to do the test
 * @param {Array} updates array to save txUpdate results
 * @param {Array} results array to save the test results
 */
function launchClient(updates, results) {
    let path = require('path');
    let childProcess = require('child_process');
    let child = childProcess.fork(path.join(__dirname, 'local-client.js'));
    let pid   = child.pid.toString();
    processes[pid] = {obj: child, results: results, updates: updates};

    child.on('message', function(msg) {
        if(msg.type === 'testResult') {

            pushResult(pid, msg.data);
            setPromise(pid, true, msg.data);
        }
        else if(msg.type === 'error') {
            setPromise(pid, false, new Error('Client encountered error:' + msg.data));
        }
        else if(msg.type === 'txUpdated') {
            pushUpdate(pid, msg.data);
        }
        else if(msg.type === 'txUpdatedWithMQ') {
            pushUpdateForMQ(pid, msg.data);
        }
    });

    child.on('error', function(){
        setPromise(pid, false, new Error('Client encountered unexpected error'));
    });

    child.on('exit', function(){
        log('Client exited');
        setPromise(pid, true, null);
    });
}

/**
 * Start a test
 * @param {Number} number test clients' count
 * @param {JSON} message start message
 * @param {Array} clientArgs each element contains specific arguments for a client
 * @param {Array} updates array to save txUpdate results
 * @param {Array} results array to save the test results
 * @return {Promise} promise object
 */

function update() {
    console.log(""Pending transactions length"", unConfirmedTransactions.length)
    var data = [];
    var len  = unConfirmedTransactions.length;
    if(len > updateTail) {
        data = unConfirmedTransactions.slice(updateTail, len);
        updateTail = len;
    }
     demoRefreshData(data);
}

function demoRefreshData(updates) {

    for (let i = 0; i < updates.length; i++) {
        var sub = updates[i].submitted;
        var submitted_transactions = updates[i].committed;
        for (let j =0; j < submitted_transactions.length; j++) {
            var transactionStatus = submitted_transactions[j].status
            var TransactionStatus = new TxStatus(transactionStatus.id, transactionStatus.status, transactionStatus.time_create, transactionStatus.time_final, 
                transactionStatus.result, transactionStatus.verified, transactionStatus.flags, transactionStatus.error_messages);
                
            if (cachedEvents.get(TransactionStatus.GetID()) == undefined) {
                // make an entry into map only if it is not a query OR the error flag == 0
                if (TransactionStatus.GetFlag() == 0) {
                    cachedEvents.set(TransactionStatus.GetID(), TransactionStatus)
                } else {
                    confirmedTransactions.push(TransactionStatus)
                }
            }
            else {
                TransactionStatus.Set('time_final', cachedEvents.get(TransactionStatus.GetID()))
                TransactionStatus.SetVerification(true)
                TransactionStatus.Set('status', 'success')
                cachedEvents.set(TransactionStatus.GetID(), TransactionStatus)
                confirmedTransactions.push(TransactionStatus)
                //getDefaultStats(totalSubmitted, confirmedTransactions, label)
            }   
        }  
    }
    console.log(""confirmed"", confirmedTransactions.length)
    //newStats = blockchain.getDefaultTxStats(confirmedTransactions, false);
   //getDefaultStats(totalSubmitted, label)
}

function startTest(number, message, clientArgs, updates, results) {
    let count = 0;
    for(let i in processes) {
        i;  // avoid eslint error
        count++;
    }
    if(count === number) {
        txUpdateInter = null;  
        unConfirmedTransactions = [];
        updateTail = 0;
    if(txUpdateInter === null) {
        // start a interval to query updates
        txUpdateInter = setInterval(update, 1 * 1000);
    } 

        // already launched clients
        let txPerClient;
        if (message.numb) {
            // Run specified number of transactions
            txPerClient  = Math.floor(message.numb / number);

            // trim should be based on client number if specified with txNumber
            if (message.trim) {
                message.trim = Math.floor(message.trim / number);
            }

            if(txPerClient < 1) {
                txPerClient = 1;
            }
            message.numb = txPerClient;
        } else if (message.txDuration) {
            // Run for time specified txDuration based on clients
            // Do nothing, we run for the time specified within message.txDuration
        } else {
            return Promise.reject(new Error('Unconditioned transaction rate driving mode'));
        }

        message.clients = number;

        let promises = [];
        let idx = 0;

        for(let id in processes) {
            let client = processes[id];
            let p = new Promise((resolve, reject) => {
                client.promise = {
                    resolve: resolve,
                    reject:  reject
                };
            });
            promises.push(p);
            client.results = results;
            client.updates = updates;
            message.clientargs = clientArgs[idx];
            message.clientIdx = idx;
            idx++;
            client.obj.send(message);
        }

        return Promise.all(promises).then(()=>{
            // clear promises
            
                for(let client in processes) {
                    delete client.promise;
                }   
                return Promise.resolve();
         
        }).catch((err)=>{
            return Promise.reject(err);
        });

    }

    // launch clients
    processes = {};
    for(let i = 0 ; i < number ; i++) {
        launchClient(updates, results);
    }

    // start test
    return startTest(number, message, clientArgs, updates, results);
}
module.exports.startTest = startTest;

/**
 * Send message to all child processes
 * @param {JSON} message message
 * @return {Number} number of child processes
 */
function sendMessage(message) {
    for(let pid in processes) {
        processes[pid].obj.send(message);
    }
    return processes.length;
}
module.exports.sendMessage = sendMessage;

/**
 * Stop all test clients(child processes)
 */
function stop() {
    for(let pid in processes) {
        processes[pid].obj.kill();
    }
    processes = {};
}
module.exports.stop = stop;
```
",2018-08-01 14:19:26,2018-08-01 14:20:38
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/409779026,https://github.com/hyperledger/caliper/pull/124#issuecomment-409779026,haojun,"@nitesh7sid , you can create a promise object to indicate whether the all the transactions are verified from the buffer, for example (I do it in _startLocalTest(), you can also do it in startest())
_startLocalTest(message, clientArgs) {
        let testfinished = false;                   // indicator to show whether the clients have finished the test
        let mqPromise = new Promise(...);  // create a new promise
        ......                                                // start an interval to check the buffer, if testfinished is true and there is no pending txns, resolve mqPromise and kill itself
        message.totalClients = this.number;
        return clientUtil.startTest(this.number, message, clientArgs, this.updates.data, this.results)
                      .then(()=>{
                           testfinished = true;
                           return mqPromise;
                      })
                      .then(()=>{
                           ... // push statistcs of txns confirmed by mq into this.results array
                      })
                      .catch((err)=>{
                           ... // exception, kill the interval obj, etc.
                      });
}

Some questions about client_util.js
1.  It seems that the txns in unConfirmedTransactions are not removed even after they have already been verified in demoRefreshData(), it may cause a txn to be checked multiple times
2. The statistics of new confirmed txns should be pushed to updates array
3. Names of some functions such as demoRefreshData are not suitable. ",2018-08-02 01:49:15,2018-08-02 01:49:15
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/409782810,https://github.com/hyperledger/caliper/pull/124#issuecomment-409782810,nitesh7sid,"Thanks @haojun . Let me give it a shot. Also, the thing's you mentioned will b taken care of. For time being had used same fn names as in demo.js",2018-08-02 02:11:24,2018-08-02 02:59:01
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/412621361,https://github.com/hyperledger/caliper/pull/124#issuecomment-412621361,nitesh7sid,"Hi @haojun I was able to get things working but found one issue in the txUpdate function of local-client.js and for which I would need your suggestions:
```
function txUpdate() {
    let newNum = txNum - txLastNum;
    txLastNum += newNum;

    let newResults = results.slice(0);
    results = [];
    let bufferToSend = [];
   
    if(newResults.length === 0 && newNum === 0) {
        return;
    }

    let newStats;
    if(newResults.length === 0) {
        newStats = bc.createNullDefaultTxStats();
    }
    else {
        newStats = blockchain.getDefaultTxStats(newResults, false);
        for (var i =0; i < newResults.length; i++){
            var txObject = newResults[i];
            // it is running in kafka mode or it is a query
            if (txObject.GetneedVerifyWithMQFlag()){
                bufferToSend.push(txObject)
            }
        }
    }

    if (bufferToSend.length !=0) {
        process.send({type: 'txUpdatedWithMQ', data: {submitted: newNum, committed: bufferToSend}}); 
    }
    else if (bufferToSend.length == 0) {
       
        process.send({type: 'txUpdated', data: {submitted: newNum, committed: newStats}});

        if (resultStats.length === 0) {
            switch (trimType) {
            case 0: // no trim
                resultStats[0] = newStats;
                break;
            case 1: // based on duration
                if (trim < (Date.now() - startTime)/1000) {
                    resultStats[0] = newStats;
                }
                break;
            case 2: // based on number
                if (trim < newResults.length) {
                    newResults = newResults.slice(trim);
                    newStats = blockchain.getDefaultTxStats(newResults, false);
                    resultStats[0] = newStats;
                    trim = 0;
                } else {
                    trim -= newResults.length;
                }
                break;
            }
        } else {
            resultStats[1] = newStats;
            bc.mergeDefaultTxStats(resultStats);
        }
    }
}
```
The issue basically is =>while running in MQ mode, sometimes the count of submitted transactions received in client-utils.js exceeds the actual transactions being sent. This is happening because both the ""if"" and ""else"" block in the txUpdate function of local-client.js is executed. So basically in txUpadte function I am traversing the newResults array and determining which txns are to supposed to be processed with MQ and accordingly populating the ""bufferToSend"" array. If bufferToSend is empty then send message to client-util.js using `txUpdated` as usual and if its not empty then send a new message 'txUpdatedWithMQ' to the client-util.js. So when the caliper is running in non-mq mode, it might so happen that the **If** block as well as **else** block is executed and hence the client-util.js will get messages from txUpdated as well as txUpdatedWithMQ. this results in client-util.js getting extra count of submitted transactions. one from txUpdatedWithMQ and another from txUpdated.  Hope I am clear in conveying the issue. let me know if you need more clarity on that.
Below is the code of client-util.js
```


'use strict';
const log          = require('../util.js').log;
let processes  = {}; // {pid:{obj, promise}}
let txUpdateTime = 1000;
const kafka = require('kafka-node');
const listener_config = require(""../../listener/listener-config.json"");
let confirmedTransactions = [];
let cachedEvents = new Map();
let unConfirmedTransactions = [];
var txUpdateInter = null;
var globalConsumer;
const TxStatus = require('../transaction.js');
var updateTail;
const bc   = require('../blockchain.js');
let path = require('path');
const blockchain = new bc(path.join(__dirname, '../../../', 'benchmark/simple/fabric'));
let testfinished = false; 
var newNum = 0;
let global_pid;
let confirmTail = 0;
var totalTransactionsRecieved = 0;
var totalTransactionsCommitted = 0;

function _consumeEvents(){

    var Consumer = kafka.Consumer;
    var KafkaClient = new kafka.KafkaClient({ kafkaHost: listener_config.broker_urls, requestTimeout: 300000000 });
    var options = {
    autoCommit: true,
    fetchMaxWaitMs: 1000,
    fetchMaxBytes: 5120 * 5120,
    encoding: 'buffer',
    groupId: ""groupID"" + Math.floor(Math.random() * Math.floor(100))};
 
    var topics = [{
        topic: listener_config.topic
    }];
 
    var consumer = new Consumer(KafkaClient, topics, options);
    globalConsumer = consumer;
    consumer.on('message', function (message) {
        
        var buf = new Buffer(message.value); // Read string into a buffer.
        var data = buf.toString('utf-8')
        var block = JSON.parse(data).block
        
        for (var index = 0; index < block.data.data.length; index++) {
            var channel_header = block.data.data[index].payload.header.channel_header;
            var transaction_id = channel_header.tx_id
            var confirmation_time = JSON.parse(data).validTime;
            if (cachedEvents.get(transaction_id)  == undefined)
            {
                cachedEvents.set(transaction_id, confirmation_time)
            }
           else if (cachedEvents.get(transaction_id) != undefined) {
               
                var transactionObject = cachedEvents.get(transaction_id);
                transactionObject.Set('time_final', confirmation_time);
                transactionObject.SetVerification(true);
                transactionObject.Set('status','success');
                cachedEvents.set(transaction_id, transactionObject);
                confirmedTransactions.push(transactionObject);
                totalTransactionsCommitted++;
            
            }
        }
    });
 
    consumer.on('error', function(err){   
        // retry if unable to connect to kafka
        _consumeEvents()
    });
   
} 
module.exports._consumeEvents = _consumeEvents;
/**
 * Call the Promise function for a process
 * @param {String} pid pid of the process
 * @param {Boolean} isResolve indicates resolve(true) or reject(false)
 * @param {Object} msg input for the Promise function
 */
function setPromise(pid, isResolve, msg) {
    let p = processes[pid];
    if(p && p.promise && typeof p.promise !== 'undefined') {
        if(isResolve) {            
            p.promise.resolve(msg);
        }
        else {
            p.promise.reject(msg);
        }
    }
}

/**
 * Push test result from a child process into the global array
 * @param {String} pid pid of the child process
 * @param {Object} data test result
 */
function pushResult(pid, data) {
    let p = processes[pid];
    if(p && p.results && typeof p.results !== 'undefined') {
        p.results.push(data);
    }
}

/**
 * Push update value from a child process into the global array
 * @param {String} pid pid of the child process
 * @param {Object} data update value
 */
function pushUpdate(pid, data) {
    let p = processes[pid];
    if(p && p.updates && typeof p.updates !== 'undefined') {

        p.updates.push(data);
    }
}

/**
 * Push update value from a child process into the global array
 * @param {String} pid pid of the child process
 * @param {Object} data update value
 */
function pushUpdateForMQ(pid, data) {
    totalTransactionsRecieved += data.submitted;
    unConfirmedTransactions.push(data); 
}


/**
 * Launch a child process to do the test
 * @param {Array} updates array to save txUpdate results
 * @param {Array} results array to save the test results
 */
function launchClient(updates, results) {
    //let path = require('path');
    let childProcess = require('child_process');
    let child = childProcess.fork(path.join(__dirname, 'local-client.js'));
    let pid   = child.pid.toString();
    processes[pid] = {obj: child, results: results, updates: updates};

    child.on('message', function(msg) {
        if(msg.type === 'testResult') {
            pushResult(pid, msg.data);
            setPromise(pid, true, msg.data);
        }
        else if(msg.type === 'error') {
            setPromise(pid, false, new Error('Client encountered error:' + msg.data));
        }
        else if(msg.type === 'txUpdated') {
            pushUpdate(pid, msg.data);
        }
        else if(msg.type === 'txUpdatedWithMQ') {
            global_pid = pid;
            pushUpdateForMQ(pid, msg.data);
        }
    });

    child.on('error', function(){
        setPromise(pid, false, new Error('Client encountered unexpected error'));
    });

    child.on('exit', function(){
        log('Client exited');
        setPromise(pid, true, null);
    });
}

/**
 * Start a test
 * @param {Number} number test clients' count
 * @param {JSON} message start message
 * @param {Array} clientArgs each element contains specific arguments for a client
 * @param {Array} updates array to save txUpdate results
 * @param {Array} results array to save the test results
 * @return {Promise} promise object
 */

function update() {
    var data = [];
    var len  = unConfirmedTransactions.length;
    if(len > updateTail) {
        data = unConfirmedTransactions.slice(updateTail, len);
        updateTail = len;
    }
      verifyUnconfirmedTransactions(data);    
}

function verifyUnconfirmedTransactions(updates) {
  
        newNum = 0;
        for (let i = 0; i < updates.length; i++) {
            var sub = updates[i].submitted;
            newNum += sub;
            var submitted_transactions = updates[i].committed;

            for (let j =0; j < submitted_transactions.length; j++) {
                var transactionStatus = submitted_transactions[j].status
                var TransactionStatus = new TxStatus(transactionStatus.id, transactionStatus.status, transactionStatus.time_create, transactionStatus.time_final, 
                    transactionStatus.result, transactionStatus.verified, transactionStatus.flags, transactionStatus.error_messages);
                
                if (cachedEvents.get(TransactionStatus.GetID()) == undefined) {
                    
                    // make an entry into map only if it is not a query OR the error flag == 0
                    if (TransactionStatus.GetFlag() == 0) { 
                        cachedEvents.set(TransactionStatus.GetID(), TransactionStatus)
                    } else {
                        confirmedTransactions.push(TransactionStatus);
                        totalTransactionsCommitted++;
                    }
                }
                else  {
                    TransactionStatus.Set('time_final', cachedEvents.get(TransactionStatus.GetID()))
                    TransactionStatus.SetVerification(true)
                    TransactionStatus.Set('status', 'success')
                    cachedEvents.set(TransactionStatus.GetID(), TransactionStatus)
                    confirmedTransactions.push(TransactionStatus);
                    totalTransactionsCommitted++;
                }   
            }
        }
            let newResults = [];
            var len  = confirmedTransactions.length;
            if(len > confirmTail) {
                newResults = confirmedTransactions.slice(confirmTail, len);
                confirmTail = len;
            }
                let newStats = blockchain.getDefaultTxStats(newResults, false);
                var dataToUpdate = {submitted: newNum, committed: newStats};
                pushUpdate(global_pid, dataToUpdate);  
               
    }
 
function updateResults(withMQ) {
    if (withMQ && unConfirmedTransactions.length != 0) {
        return new Promise(function(resolve, reject){
                (function wait(){
                    if (totalTransactionsCommitted ==  totalTransactionsRecieved && testfinished == true) { 
                        let finalStats = blockchain.getDefaultTxStats(confirmedTransactions, false);
                        pushResult(global_pid, finalStats);
                        clearInterval(txUpdateInter);
                        return resolve();
                    }
                    setTimeout(wait, 5000);
                })();
        })    
    }
    else {
        return new Promise(function(resolve, reject){
                resolve();
        }) 
    }
}

function startTest(number, message, clientArgs, updates, results, withMQ) {

    testfinished = false;   
    let count = 0;
    for(let i in processes) {
        i;  // avoid eslint error
        count++;
    }
    if(count === number) {
        
        if (withMQ) {
            txUpdateInter = setInterval(update, txUpdateTime);
            updateTail = 0;
            confirmTail = 0;
            unConfirmedTransactions = [];
            confirmedTransactions = [];
        }
       
        // already launched clients
        let txPerClient;
        if (message.numb) {
            // Run specified number of transactions
            txPerClient  = Math.floor(message.numb / number);

            // trim should be based on client number if specified with txNumber
            if (message.trim) {
                message.trim = Math.floor(message.trim / number);
            }

            if(txPerClient < 1) {
                txPerClient = 1;
            }
            message.numb = txPerClient;
        } else if (message.txDuration) {
            // Run for time specified txDuration based on clients
            // Do nothing, we run for the time specified within message.txDuration
        } else {
            return Promise.reject(new Error('Unconditioned transaction rate driving mode'));
        }

        message.clients = number;

        let promises = [];
        let idx = 0;

        for(let id in processes) {
            let client = processes[id];
            let p = new Promise((resolve, reject) => {
                client.promise = {
                    resolve: resolve,
                    reject:  reject
                };
            });
            promises.push(p);
            client.results = results;
            client.updates = updates;
            message.clientargs = clientArgs[idx];
            message.clientIdx = idx;
            idx++;
            client.obj.send(message);
        }
        return Promise.all(promises).then(() =>{
            for(let client in processes) {
                delete client.promise;
            }
            testfinished = true;
            //if (withMQ) {  }
            return updateResults(withMQ);
           
        }) .then(() => {
            clearInterval(txUpdateInter);
            return Promise.resolve();
        })
    }
    // launch clients
    processes = {};
    for(let i = 0 ; i < number ; i++) {
        launchClient(updates, results);
    }

    // start test
     return startTest(number, message, clientArgs, updates, results, withMQ);
}
module.exports.startTest = startTest;

/**
 * Send message to all child processes
 * @param {JSON} message message
 * @return {Number} number of child processes
 */
function sendMessage(message) {
    for(let pid in processes) {
        processes[pid].obj.send(message);
    }
    return processes.length;
}
module.exports.sendMessage = sendMessage;

/**
 * Stop all test clients(child processes)
 */
function stop() {
    for(let pid in processes) {
        processes[pid].obj.kill();
    }
    processes = {};
}
module.exports.stop = stop;

/**
 * Close kafka consumer
 */
function closeKafkaConsumer() {
      globalConsumer.close(() => {});
}
module.exports.closeKafkaConsumer = closeKafkaConsumer;
``` 
",2018-08-13 18:40:29,2018-08-13 18:40:29
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/412729402,https://github.com/hyperledger/caliper/pull/124#issuecomment-412729402,haojun,"@nitesh7sid 
I'm not sure to fully get your point. When you say the problem happens because ""both the ""if"" and ""else"" block in the txUpdate function of local-client.js is executed"", do you mean there are mq txns as well as non-mq txns in this test round?
I think the problem is caused by the newNum which is calculated for all txns (including those txns which have not included in the newResults array). One solution is to use txUpdated message to update the submitted value, and in verifyUnconfirmedTransactions(), set 0 to submitted property of dataToPush to avoid duplicate calculation. 

(Just an example, not sure it's 100% correct since i can not test it)
```
function txUpdate() {
......
let newStats;
let nonMqBuffer = [];
for (var i =0; i < newResults.length; i++){
     let txObject = newResults[i];
     if (txObject.GetneedVerifyWithMQFlag()){
           bufferToSend.push(txObject)
     }
     else {
           nonMqBuffer.push(txObject);
    }
}

// always send a txUpdated message to notify submitted count as well as non-mq results
if (nonMqBuffer.length === 0) {
    newStats = bc.createNullDefaultTxStats();
} else {
    newStats = blockchain.getDefaultTxStats(nonMqBuffer, false);
}
process.send({type: 'txUpdated', data: {submitted: newNum, committed: newStats}});

// send txUpdatedWithMq, the submitted attribute is only used to tell how many mq txns need to be check
if (bufferToSend.length !=0) {
    process.send({type: 'txUpdatedWithMQ', data: {submitted: bufferToSend.length, committed: bufferToSend}}); 
}

// apply trim, not sure how to apply trim to mq txns......
......
}
```
```
function verifyUnconfirmedTransactions(updates) {
   ......
   let newStats = blockchain.getDefaultTxStats(newResults, false);
   // the submitted value has already been counted, so set it as 0 here
   let dataToUpdate = {submitted: 0, committed: newStats};
   pushUpdate(global_pid, dataToUpdate);
}
```

Hope it answers your question : ）

BTW：I've handed over my caliper work to @panyu4 and @jiangyaoguo , they can help to review and merge this feature. I'm still happy to answer any questions if you need my help.",2018-08-14 02:08:38,2018-08-14 02:09:18
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/431756365,https://github.com/hyperledger/caliper/pull/124#issuecomment-431756365,panyu4,"@nitesh7sid ， when I run this code, I found my screen was continuing printing the same information ""[Transaction Info] - Submitted: 1000 Succ: 0 Failed:0 Unfinished:1000"" after the submitted transaction was increased from 30 to 1000.  Do you know what's the matter . I've already started kafka from another machine. ",2018-10-22 07:08:02,2018-10-22 07:08:02
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/431817922,https://github.com/hyperledger/caliper/pull/124#issuecomment-431817922,nitesh7sid,"@panyu4 this implies that event listener is not able to receive transactions and publish them into kafka queue. Could you please check the below things:
1) the event listner configuration file https://github.com/nitesh7sid/caliper/blob/master/src/listener/listener-config.json with correct URL's
2) 'KAFKA_ADVERTISED_HOST_NAME' is set to the IP address of the machine running the kafka cluster
https://github.com/nitesh7sid/caliper/blob/master/network/kafka-setup/docker-compose-kafka.yaml
",2018-10-22 12:17:38,2018-10-22 12:18:18
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/432119512,https://github.com/hyperledger/caliper/pull/124#issuecomment-432119512,panyu4,"@nitesh7sid ，Thanks . It works now. I'm sorry for sending you so many repeated questions. That was happened just because of the shutting down of github I found  I was not able to comment it.
There are some problems that I think maybe you need to modify them.
1. the program  can not exit by itself when the test is finished. I have to manually exit with ctrl+c.
2. when I tried to run the test again, I have to remove the docker containers on the machine where the kafka is running, and then start the kafka again. After these have been done ,  I can run caliper in the withMQ mode.  I don't know if these are your test operations.  I think these operations are complex for people without professional skills.
3. I see there are some conflicting files. Would you please resolve them?",2018-10-23 07:00:44,2018-10-23 07:00:44
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/432733213,https://github.com/hyperledger/caliper/pull/124#issuecomment-432733213,nitesh7sid,"Hi @panyu4 i tried the above code and seems to be working fine.
1) After the tests are complete, the program exists without ctrl+c
2) After the tests are complete its a good practice to clear the MQ since the data already in MQ(transaction id's and confirmation time) will be irrelevant to the subsequent tests. Also time required to compute the statistics would be more if the MQ isn't cleared. Similar to how we clear the fabric ledger after the tests are done, users can also clear the MQ containers.
3) I have resolved merge conflicts. 

-Thanks",2018-10-24 16:38:03,2018-10-24 16:38:31
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/433596013,https://github.com/hyperledger/caliper/pull/124#issuecomment-433596013,panyu4,"@nitesh7sid ,Thanks. 1 and 3 seems good to me.
2. ==> I mean if I do not clear the MQ container, the program will encounter an error to stop the tests. But  when I clear the MQ container first, it runs well. 
I list the operations below.
(1) run `docker-compose -f docker-compose-kafka.yaml up -d` on kafka machine
(2) run `node main.js -c config-with-mq.json`
(3) after the tests are completed , run `node main.js -c config-with-mq.json` again
The error Information got after the above operations is like this.
`TypeError: transactionObject.Set is not a function
    at Consumer.<anonymous> (/home/panyu/projects/caliper/src/comm/client/client-util.js:63:35)
    at emitOne (events.js:116:13)
    at Consumer.emit (events.js:211:7)
    at /home/panyu/projects/caliper/node_modules/kafka-node/lib/client.js:202:16
    at Object.<anonymous> (/home/panyu/projects/caliper/node_modules/kafka-node/lib/protocol/protocol.js:212:20)
    at Object.self.tap (/home/panyu/projects/caliper/node_modules/binary/index.js:248:12)
    at decodeMessageSet (/home/panyu/projects/caliper/node_modules/kafka-node/lib/protocol/protocol.js:174:8)
    at /home/panyu/projects/caliper/node_modules/kafka-node/lib/protocol/protocol.js:216:13
    at Gunzip.onEnd (zlib.js:131:5)
    at emitNone (events.js:111:20)`
`Error [ERR_IPC_CHANNEL_CLOSED]: channel closed
    at process.target.send (internal/child_process.js:578:16)
    at Timeout.txUpdate [as _onTimeout] (/home/panyu/projects/caliper/src/comm/client/local-client.js:66:13)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)`

I think it would be better to avoid this. Maybe we should clear the MQ Containers automatically and also should give some instruction to these errors like adding error information, adding instructions in the document ",2018-10-27 06:38:52,2018-10-27 06:38:52
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/433609987,https://github.com/hyperledger/caliper/pull/124#issuecomment-433609987,nitesh7sid,"Hi @panyu4 , thanks! I have handled the above error and it displays useful information for users to clear the MQ before running the tests.",2018-10-27 10:43:50,2018-10-27 10:43:50
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/433759122,https://github.com/hyperledger/caliper/pull/124#issuecomment-433759122,panyu4,"@nitesh7sid  Thanks. 
It runs well for me. Now  when the program encounter the error, it will just show the information then exit. It may forget to remove the containers for the Fabric as what the original Caliper is done after completing all of the tests.  I think this step should be added. ",2018-10-29 00:54:44,2018-10-29 00:54:44
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/439597020,https://github.com/hyperledger/caliper/pull/124#issuecomment-439597020,nitesh7sid,"Hi Panyu, I have made the suggested changes and resolved linting issues.",2018-11-17 07:48:44,2018-11-17 07:48:44
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/439832311,https://github.com/hyperledger/caliper/pull/124#issuecomment-439832311,panyu4,"@nitesh7sid , there are some conflicts in bench-flow.js.",2018-11-19 09:46:22,2018-11-19 09:46:22
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/439869988,https://github.com/hyperledger/caliper/pull/124#issuecomment-439869988,nitesh7sid,"@panyu4 changes made as suggested.. Here are the logs of travis CI jobs https://travis-ci.org/hyperledger/caliper/jobs/456921827 and it looks like some fabric txns are failing because event listener in invokeByContext is not able to capture the events and hence caliper marks those transactions as failed. But the transactions are actually committed into the ledger.
",2018-11-19 12:00:23,2018-11-19 19:36:06
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/441540131,https://github.com/hyperledger/caliper/pull/124#issuecomment-441540131,panyu4,@aklenik would you please review this pr?,2018-11-26 07:15:04,2018-11-26 07:15:04
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/441976657,https://github.com/hyperledger/caliper/pull/124#issuecomment-441976657,panyu4,@feihujiang @nklincoln would you please review it?,2018-11-27 08:52:18,2018-11-27 08:52:18
https://api.github.com/repos/hyperledger/caliper/issues/124,https://api.github.com/repos/hyperledger/caliper/issues/comments/442109179,https://github.com/hyperledger/caliper/pull/124#issuecomment-442109179,nitesh7sid,"As discussed with @panyu4 closing this PR since it got too large and raised new one here:
https://github.com/hyperledger/caliper/pull/236",2018-11-27 15:51:43,2018-11-27 15:51:43
https://api.github.com/repos/hyperledger/caliper/issues/123,https://api.github.com/repos/hyperledger/caliper/issues/comments/404089199,https://github.com/hyperledger/caliper/issues/123#issuecomment-404089199,aklenik,"@Miraczpp Based on the line numbers in the error, you didn't pull the latest version of Caliper.
The latest version [contains](https://github.com/hyperledger/caliper/blob/6131f4fca8881d9bb2f3a0fdc829b7df7036659e/src/comm/rate-control/rateControl.js#L58) the `linear-rate` controller:
```
case 'linear-rate': {
            const LinearRateController = require('./linearRate.js');
            this.controller = new LinearRateController(blockchain, rateControl.opts);
            break;
        }
```",2018-07-11 08:32:57,2018-07-11 08:32:57
https://api.github.com/repos/hyperledger/caliper/issues/123,https://api.github.com/repos/hyperledger/caliper/issues/comments/428469233,https://github.com/hyperledger/caliper/issues/123#issuecomment-428469233,panyu4,"As this issue is not existed in latest version, I'm closing it. ",2018-10-10 07:36:21,2018-10-10 07:36:21
https://api.github.com/repos/hyperledger/caliper/issues/122,https://api.github.com/repos/hyperledger/caliper/issues/comments/403725898,https://github.com/hyperledger/caliper/pull/122#issuecomment-403725898,haojun,"Hi @nklincoln @stinger112 @Ram-srini , please help to review this PR to check if your adapters (composer, iroha,  sawtooth) have been modified correctly and can run with no error.  

Thanks :grinning: ",2018-07-10 07:20:29,2018-07-10 07:20:29
https://api.github.com/repos/hyperledger/caliper/issues/122,https://api.github.com/repos/hyperledger/caliper/issues/comments/403726496,https://github.com/hyperledger/caliper/pull/122#issuecomment-403726496,haojun,And I'll try to modify the result processing base on this PR to reduce client memory consumption for better long time test supporting.,2018-07-10 07:22:57,2018-07-10 07:22:57
https://api.github.com/repos/hyperledger/caliper/issues/122,https://api.github.com/repos/hyperledger/caliper/issues/comments/404142901,https://github.com/hyperledger/caliper/pull/122#issuecomment-404142901,nklincoln,"Hi @haojun,
Whilst testing this I noticed that the change made in `local-client.js` has broken the ability to run composer tests.

The current while loop within `runFixedNumber` isn't behaving quite as expected. I made a change to a for loop, conditioned on the required number of invokes. I think the unexpected operation is because the global variable `txNum` relies upon an update performed once the `cb.run()` has completed, which means it is possible to send in excess of the number of intended invokes if the cb.run() duration is in excess of the apply rate control duration ... as is current using a while loop. 

The required change for  test completion (inclusive of changes in this PR) is:

```
for(let i = 0 ; i < msg.numb ; i++) {
        promises.push(cb.run().then((result) => {
            addResult(result);
            return Promise.resolve();
        }));
        await rateControl.applyRateControl(start, txNum, results);
    }
```

 ",2018-07-11 11:56:03,2018-07-11 11:57:44
https://api.github.com/repos/hyperledger/caliper/issues/122,https://api.github.com/repos/hyperledger/caliper/issues/comments/404303175,https://github.com/hyperledger/caliper/pull/122#issuecomment-404303175,aklenik,"Although the Fabric query API is hardcoded right now, in the `src/fabric/e2eUtils.js` file before L771 a `txStatus.SetVerification(true)`, and before L781 a `txStatus.SetVerification(false)` is missing (although the latter is the default behavior). But it's not critical since this part needs to be implemented properly anyway.",2018-07-11 20:43:38,2018-07-11 20:43:38
https://api.github.com/repos/hyperledger/caliper/issues/122,https://api.github.com/repos/hyperledger/caliper/issues/comments/404366742,https://github.com/hyperledger/caliper/pull/122#issuecomment-404366742,haojun,"@nklincoln, 

By #66 a 'submitCallback' is injected into the output of getcontext() to count the actual tx submitting(see from https://github.com/hyperledger/caliper/blob/6131f4fca8881d9bb2f3a0fdc829b7df7036659e/src/comm/client/local-client.js#L165).

Sorry I forgot to change composer accordingly, and I think that's the real cause of the composer test failure.

Can you check and help to fix it? Thanks.",2018-07-12 02:09:24,2018-07-12 02:09:24
https://api.github.com/repos/hyperledger/caliper/issues/122,https://api.github.com/repos/hyperledger/caliper/issues/comments/404566812,https://github.com/hyperledger/caliper/pull/122#issuecomment-404566812,nklincoln,"@haojun, ok - thanks... in which case the 'quick fix' there is to modify `composer.js` `submitTransaction()` method to include:

```
submitTransaction(connection, transaction) {
        let invoke_status = new TxStatus(transaction.getIdentifier());
        if(connection.engine) {
            connection.engine.submitCallback(1);
        }
       return connection.submitTransaction(transaction)
...
```

This is likely to have emerged due to the bad naming convention used in the composer plug, which does not retain the `invokeSmartContract` convention used by the other plugins ... happy to raise a PR and fix this if desired.",2018-07-12 16:12:53,2018-07-12 16:12:53
https://api.github.com/repos/hyperledger/caliper/issues/122,https://api.github.com/repos/hyperledger/caliper/issues/comments/404696911,https://github.com/hyperledger/caliper/pull/122#issuecomment-404696911,haojun,@nklincoln done,2018-07-13 01:18:50,2018-07-13 01:18:50
https://api.github.com/repos/hyperledger/caliper/issues/122,https://api.github.com/repos/hyperledger/caliper/issues/comments/405140103,https://github.com/hyperledger/caliper/pull/122#issuecomment-405140103,haojun,Checked with Sawtooth and Iroha,2018-07-16 03:04:16,2018-07-16 03:04:16
https://api.github.com/repos/hyperledger/caliper/issues/122,https://api.github.com/repos/hyperledger/caliper/issues/comments/405202866,https://github.com/hyperledger/caliper/pull/122#issuecomment-405202866,JulienGuo,"thanks @nklincoln 
Can you help me to add a new feature of pidrate, I want change the invoke timeout from a constant value to a variable value , and Please make the value related to sleep time.
https://github.com/hyperledger/caliper/issues/131",2018-07-16 10:13:26,2018-07-16 10:15:22
https://api.github.com/repos/hyperledger/caliper/issues/119,https://api.github.com/repos/hyperledger/caliper/issues/comments/403727315,https://github.com/hyperledger/caliper/issues/119#issuecomment-403727315,aklenik,"Another possible code improvement: replace the `Promise` chains with `async\await`.
This way the error messages and stack traces would be more user-friendly, and the code would be more readable.

Maybe this issue should be renamed as `Extract common structures into separate files` and another issue could be opened as `Replace Promise chains with async\await`",2018-07-10 07:26:18,2018-07-10 07:26:18
https://api.github.com/repos/hyperledger/caliper/issues/119,https://api.github.com/repos/hyperledger/caliper/issues/comments/455768966,https://github.com/hyperledger/caliper/issues/119#issuecomment-455768966,gregdhill,"PR #287 simplifies how benchmarks are run, removing some of the overhead from managing multiple `main.js` scripts.",2019-01-19 10:40:46,2019-01-19 10:40:46
https://api.github.com/repos/hyperledger/caliper/issues/118,https://api.github.com/repos/hyperledger/caliper/issues/comments/403415980,https://github.com/hyperledger/caliper/issues/118#issuecomment-403415980,aklenik,"Are you trying to run one of the samples or your own benchmark? Which Fabric SDK version are you using? Run `npm ls fabric-client` in the Caliper directory, what is the output?",2018-07-09 09:21:38,2018-07-09 09:21:38
https://api.github.com/repos/hyperledger/caliper/issues/118,https://api.github.com/repos/hyperledger/caliper/issues/comments/403461806,https://github.com/hyperledger/caliper/issues/118#issuecomment-403461806,llhl001,"npm ls fabric-client
caliper@0.1.0 /opt/gopath/src/github.com/hyperledger/caliper
└── fabric-client@1.2.0  extraneous


npm uninstall  fabric-client@1.2.0  and npm install  fabric-client@1.1.0 

OK",2018-07-09 12:28:01,2018-07-09 12:28:01
https://api.github.com/repos/hyperledger/caliper/issues/117,https://api.github.com/repos/hyperledger/caliper/issues/comments/403742933,https://github.com/hyperledger/caliper/pull/117#issuecomment-403742933,haojun,"@aklenik I like the idea and I've tested the linear rate controller with 25(startingTps), 150(finishingTps) and 30(txDuration). The actual tps increased very slowly at the beginning and very quick at the end. The average sending rate was 51 tps which I thought should be nearly 90tps ((25+150)/2) before testing. Does it  match your design??
```
[Transaction Info] - Submitted: 15 Succ: 0 Fail:0 Unfinished:15
[Transaction Info] - Submitted: 40 Succ: 25 Fail:0 Unfinished:15
[Transaction Info] - Submitted: 65 Succ: 52 Fail:0 Unfinished:13
[Transaction Info] - Submitted: 95 Succ: 79 Fail:0 Unfinished:16
[Transaction Info] - Submitted: 120 Succ: 105 Fail:0 Unfinished:15
[Transaction Info] - Submitted: 150 Succ: 135 Fail:0 Unfinished:15
[Transaction Info] - Submitted: 179 Succ: 165 Fail:0 Unfinished:14
[Transaction Info] - Submitted: 209 Succ: 195 Fail:0 Unfinished:14
[Transaction Info] - Submitted: 240 Succ: 228 Fail:0 Unfinished:12
[Transaction Info] - Submitted: 270 Succ: 260 Fail:0 Unfinished:10
[Transaction Info] - Submitted: 305 Succ: 295 Fail:0 Unfinished:10
[Transaction Info] - Submitted: 340 Succ: 330 Fail:0 Unfinished:10
[Transaction Info] - Submitted: 375 Succ: 369 Fail:0 Unfinished:6
[Transaction Info] - Submitted: 415 Succ: 406 Fail:0 Unfinished:9
[Transaction Info] - Submitted: 455 Succ: 446 Fail:0 Unfinished:9
[Transaction Info] - Submitted: 495 Succ: 489 Fail:0 Unfinished:6
[Transaction Info] - Submitted: 540 Succ: 531 Fail:0 Unfinished:9
[Transaction Info] - Submitted: 585 Succ: 577 Fail:0 Unfinished:8
[Transaction Info] - Submitted: 632 Succ: 625 Fail:0 Unfinished:7
[Transaction Info] - Submitted: 685 Succ: 646 Fail:0 Unfinished:39
[Transaction Info] - Submitted: 735 Succ: 700 Fail:0 Unfinished:35
[Transaction Info] - Submitted: 795 Succ: 744 Fail:0 Unfinished:51
[Transaction Info] - Submitted: 855 Succ: 790 Fail:0 Unfinished:65
[Transaction Info] - Submitted: 920 Succ: 854 Fail:0 Unfinished:66
[Transaction Info] - Submitted: 991 Succ: 920 Fail:0 Unfinished:71
[Transaction Info] - Submitted: 1070 Succ: 992 Fail:0 Unfinished:78
[Transaction Info] - Submitted: 1153 Succ: 1069 Fail:0 Unfinished:84
[Transaction Info] - Submitted: 1246 Succ: 1154 Fail:0 Unfinished:92
[Transaction Info] - Submitted: 1350 Succ: 1247 Fail:0 Unfinished:103
[Transaction Info] - Submitted: 1465 Succ: 1350 Fail:0 Unfinished:115
[Transaction Info] - Submitted: 1517 Succ: 1468 Fail:0 Unfinished:49
```

BTW, it would be better if we can define tps schema across test rounds. For example increasing tps for each test round and stop testing when meeting some termination condition (such as finding too many failures). By doing that, performance reports for each test round can be generated. But if we want to support this, we need to support defining dynamic test rounds :)",2018-07-10 08:29:20,2018-07-10 08:29:20
https://api.github.com/repos/hyperledger/caliper/issues/117,https://api.github.com/repos/hyperledger/caliper/issues/comments/403777846,https://github.com/hyperledger/caliper/pull/117#issuecomment-403777846,aklenik,"@haojun The linear rate controller is memoryless, so it only uses the current time/Tx index to determine the current sleep time (unlike the fixed rate controller, that kind of precalculates the submit times). 
So if the client doesn't reach the rate control part ""often enough"", it won't generate as much transaction as needed (unlike the fixed rate controller, that can ""catch up"" in a bursty way).

Can you increase the number of clients? It should yield a more accurate result that way.",2018-07-10 10:34:48,2018-07-10 10:34:48
https://api.github.com/repos/hyperledger/caliper/issues/116,https://api.github.com/repos/hyperledger/caliper/issues/comments/403669611,https://github.com/hyperledger/caliper/pull/116#issuecomment-403669611,haojun,"@aklenik , there was an error when running marble test
```
# Instantiate chaincode......
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: error starting container: API error (404): {""message"":""network 2org1peer_def
ault not found""}
```
I checked the docker network, the bridge name is '2-org-1-peer_default'. Are you sure the network name is correct in the yaml file and you can pass the test??
",2018-07-10 01:27:13,2018-07-10 01:27:13
https://api.github.com/repos/hyperledger/caliper/issues/116,https://api.github.com/repos/hyperledger/caliper/issues/comments/403735689,https://github.com/hyperledger/caliper/pull/116#issuecomment-403735689,aklenik,"@haojun Sorry, got confused since there was a refactor with the `network/fabric*` directories on the master branch.
 
Amended my commit with the correct paths according to this PR. However, during merging, the following adjustments need to be made to the network paths to be compatible with the current master branch:

`benchmark/marbles/config-fabric-[go|node].json` lines 7 and 8: `network/fabric-v11` to `network/fabric`

`benchmark/marbles/fabric-[go|node].json` lines 3, 9, 10, 13, 19, 20, 30, 44 and 51: `network/fabric-v11` to `network/fabric`

Can you apply these changes during the merge?",2018-07-10 08:01:31,2018-07-10 08:04:32
https://api.github.com/repos/hyperledger/caliper/issues/116,https://api.github.com/repos/hyperledger/caliper/issues/comments/403748469,https://github.com/hyperledger/caliper/pull/116#issuecomment-403748469,haojun,I've removed '-v11' postfix but still got the error. I think the reason is that the auto-generated network name is not the same as the one defines in the yaml file. I just wondering if you can pass the test?,2018-07-10 08:48:33,2018-07-10 08:48:33
https://api.github.com/repos/hyperledger/caliper/issues/116,https://api.github.com/repos/hyperledger/caliper/issues/comments/403767837,https://github.com/hyperledger/caliper/pull/116#issuecomment-403767837,aklenik,"Yes, the test completes successfully for me. The network name is explicitly set in the docker-compose yamls, I haven't modified the network files. Could it be a difference between docker(-compose) versions? One version removes the - characters from the containing folder, while the other doesn't?
What if the following line is set to a network name with - characters?
https://github.com/hyperledger/caliper/blob/master/network/fabric/2-org-1-peer/docker-compose-tls.yaml#L83",2018-07-10 09:55:51,2018-07-10 09:55:51
https://api.github.com/repos/hyperledger/caliper/issues/116,https://api.github.com/repos/hyperledger/caliper/issues/comments/404021606,https://github.com/hyperledger/caliper/pull/116#issuecomment-404021606,haojun,"That's strange, i thought the network name is inherited from the folder name (so in my testing the network name returned by 'docker network ls' is 2-org-1-peer_default, not 2org1peer_default) or the project name. I'm not very familiar with it, so maybe I miss something.

My docker-compose version is 1.21.2. What's your version？",2018-07-11 02:07:36,2018-07-11 02:07:36
https://api.github.com/repos/hyperledger/caliper/issues/116,https://api.github.com/repos/hyperledger/caliper/issues/comments/404056170,https://github.com/hyperledger/caliper/pull/116#issuecomment-404056170,aklenik,"My network after running the test:
```
$ docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
53eeb36eda86        2org1peer_default   bridge              local
```

Docker(-compose) version:
```
$ docker --version
Docker version 18.03.1-ce, build 9ee9f40
$ docker-compose --version
docker-compose version 1.16.1, build 6d1ac21
```

So we get different default names with different compose versions... That's not desirable. So for now, try setting the network name explicitly to `2org1peer_default` with the `-p 2org1peer_default` compose setting. 

But I think we will need a separate PR that explicitly defines the network name in the yaml files: https://docs.docker.com/compose/networking/#specify-custom-networks",2018-07-11 06:10:34,2018-07-11 06:10:34
https://api.github.com/repos/hyperledger/caliper/issues/116,https://api.github.com/repos/hyperledger/caliper/issues/comments/404057741,https://github.com/hyperledger/caliper/pull/116#issuecomment-404057741,haojun,OK. So I can approve this PR after you fix the path problem (removing -v11 postfix).,2018-07-11 06:19:10,2018-07-11 06:19:10
https://api.github.com/repos/hyperledger/caliper/issues/116,https://api.github.com/repos/hyperledger/caliper/issues/comments/404060517,https://github.com/hyperledger/caliper/pull/116#issuecomment-404060517,aklenik,Done.,2018-07-11 06:33:58,2018-07-11 06:33:58
https://api.github.com/repos/hyperledger/caliper/issues/115,https://api.github.com/repos/hyperledger/caliper/issues/comments/469413341,https://github.com/hyperledger/caliper/issues/115#issuecomment-469413341,aklenik,The adapter in PR #296 adds proper query API for Fabric.,2019-03-04 20:40:52,2019-03-04 20:40:52
https://api.github.com/repos/hyperledger/caliper/issues/114,https://api.github.com/repos/hyperledger/caliper/issues/comments/403671957,https://github.com/hyperledger/caliper/issues/114#issuecomment-403671957,haojun,"@RobertDiebels , thanks for pointing out this  issue. Would you like to submit a PR?",2018-07-10 01:41:38,2018-07-10 01:41:38
https://api.github.com/repos/hyperledger/caliper/issues/114,https://api.github.com/repos/hyperledger/caliper/issues/comments/405177114,https://github.com/hyperledger/caliper/issues/114#issuecomment-405177114,RobertDiebels,@haojun I'd love to contribute to Caliper I just don't have the time to do so right now. I've tested the solution above in a fork and it's worked so far. If you'd like you can just take that bit of code and add it.,2018-07-16 08:20:35,2018-07-16 08:20:35
https://api.github.com/repos/hyperledger/caliper/issues/114,https://api.github.com/repos/hyperledger/caliper/issues/comments/440494148,https://github.com/hyperledger/caliper/issues/114#issuecomment-440494148,houqinghui,"@haojun @RobertDiebels @panyu4 ,  the question is solved, i will commit a PR.",2018-11-21 01:27:49,2018-11-21 01:27:49
https://api.github.com/repos/hyperledger/caliper/issues/114,https://api.github.com/repos/hyperledger/caliper/issues/comments/440564126,https://github.com/hyperledger/caliper/issues/114#issuecomment-440564126,panyu4,"Since it is fixed, I'm closing this issue.",2018-11-21 07:28:09,2018-11-21 07:28:09
https://api.github.com/repos/hyperledger/caliper/issues/113,https://api.github.com/repos/hyperledger/caliper/issues/comments/401549081,https://github.com/hyperledger/caliper/pull/113#issuecomment-401549081,stinger112,"@haojun Please, check this PR if you can. 
Sorry, I know I should create an issue first, but my team already want to use this.",2018-06-30 15:50:25,2018-06-30 15:50:49
https://api.github.com/repos/hyperledger/caliper/issues/112,https://api.github.com/repos/hyperledger/caliper/issues/comments/401746732,https://github.com/hyperledger/caliper/issues/112#issuecomment-401746732,aklenik,"@EG-easy In my experience, this kind of error originates from a CouchDB access error. Based on your logs, you start the entire network (quite a number of containers) on a single machine. 

This results in scarce resources for the containers, and connection failures between a peer and its CouchDB instance. Try to look at a peer and CouchDB container log to see the exact cause. 

Try a smaller network (1 peer per org), or a ""stronger"" (virtual)machine, or distribute your network on different machines.",2018-07-02 10:05:44,2018-07-02 10:05:44
https://api.github.com/repos/hyperledger/caliper/issues/112,https://api.github.com/repos/hyperledger/caliper/issues/comments/402419867,https://github.com/hyperledger/caliper/issues/112#issuecomment-402419867,EG-easy,"Thnak you!!
i solved this problem as below after all.

1. docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d in another shell
2. remove ""start"": ""docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d"", from config.json 
3. node benchmark/simple/main.js 

",2018-07-04 09:21:50,2018-07-04 09:21:50
https://api.github.com/repos/hyperledger/caliper/issues/112,https://api.github.com/repos/hyperledger/caliper/issues/comments/424601231,https://github.com/hyperledger/caliper/issues/112#issuecomment-424601231,ArvonHuang,"I change my linux user to root and it works, I don't know why.",2018-09-26 06:34:17,2018-09-26 06:34:17
https://api.github.com/repos/hyperledger/caliper/issues/111,https://api.github.com/repos/hyperledger/caliper/issues/comments/401530295,https://github.com/hyperledger/caliper/issues/111#issuecomment-401530295,yodash,solved when I double-checked the path,2018-06-30 09:44:33,2018-06-30 09:45:18
https://api.github.com/repos/hyperledger/caliper/issues/111,https://api.github.com/repos/hyperledger/caliper/issues/comments/405827916,https://github.com/hyperledger/caliper/issues/111#issuecomment-405827916,bitpeng,"@yodash the same error, how to solve it?",2018-07-18 06:50:00,2018-07-18 07:26:49
https://api.github.com/repos/hyperledger/caliper/issues/111,https://api.github.com/repos/hyperledger/caliper/issues/comments/432503616,https://github.com/hyperledger/caliper/issues/111#issuecomment-432503616,shichangzhi,"@yodash hello，i get the same error,but i don not know how to solve this problem,can you share your solution?Thanks",2018-10-24 03:54:29,2018-10-24 03:54:29
https://api.github.com/repos/hyperledger/caliper/issues/109,https://api.github.com/repos/hyperledger/caliper/issues/comments/401220256,https://github.com/hyperledger/caliper/issues/109#issuecomment-401220256,haojun,"Please try to stop and remove all fabric containers first, then run the test again.

docker stop $(docker ps -aq)
docker rm $(docker ps -aq)

",2018-06-29 01:26:12,2018-06-29 01:26:12
https://api.github.com/repos/hyperledger/caliper/issues/109,https://api.github.com/repos/hyperledger/caliper/issues/comments/402168473,https://github.com/hyperledger/caliper/issues/109#issuecomment-402168473,jamievaravara,"Thank you @haojun that saved me.
I had to write sudo in front of docker though, so these are the commands I had to run:

sudo docker stop $(sudo docker ps -aq)
sudo docker rm $(sudo docker ps -aq)
",2018-07-03 14:02:52,2018-07-03 14:02:52
https://api.github.com/repos/hyperledger/caliper/issues/109,https://api.github.com/repos/hyperledger/caliper/issues/comments/402217967,https://github.com/hyperledger/caliper/issues/109#issuecomment-402217967,aklenik,"@jamievaravara To avoid sudo with docker, follow [these steps.](https://docs.docker.com/install/linux/linux-postinstall/)",2018-07-03 16:33:27,2018-07-03 16:33:27
https://api.github.com/repos/hyperledger/caliper/issues/109,https://api.github.com/repos/hyperledger/caliper/issues/comments/402473778,https://github.com/hyperledger/caliper/issues/109#issuecomment-402473778,jamievaravara,Thank you very much @aklenik ,2018-07-04 13:06:38,2018-07-04 13:06:38
https://api.github.com/repos/hyperledger/caliper/issues/108,https://api.github.com/repos/hyperledger/caliper/issues/comments/401220636,https://github.com/hyperledger/caliper/issues/108#issuecomment-401220636,haojun,Never tried it. But i think it's possible if all dependencies can be installed successfully.,2018-06-29 01:29:04,2018-06-29 01:29:04
https://api.github.com/repos/hyperledger/caliper/issues/108,https://api.github.com/repos/hyperledger/caliper/issues/comments/405067469,https://github.com/hyperledger/caliper/issues/108#issuecomment-405067469,bitpeng,"@haojun, I work hard to try to run caliper on my MacBook Pro but unfortunately failed. It's wise to seek help, is it possible to run caliper on MacBook and which Linux distributions they are written in？thanks！
",2018-07-15 04:58:15,2018-07-15 04:58:15
https://api.github.com/repos/hyperledger/caliper/issues/108,https://api.github.com/repos/hyperledger/caliper/issues/comments/405133162,https://github.com/hyperledger/caliper/issues/108#issuecomment-405133162,haojun,I'm running caliper on ubuntu 14.04/16.04. I've never tried MacBook......,2018-07-16 01:28:30,2018-07-16 01:28:30
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/401223403,https://github.com/hyperledger/caliper/issues/107#issuecomment-401223403,haojun,"Emm, I can't see why there is such big performance difference.
Are you starting all nodes on the same machine in kafka mode? If yes, have you checked the system resources(cpu, memory) to see if the resources are exhausted? Also you can reduce the sending rate for example to 300 to see if fabric can handle and you can also test for a longer time to avoid possible cold start.",2018-06-29 01:49:01,2018-06-29 01:49:01
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/401665273,https://github.com/hyperledger/caliper/issues/107#issuecomment-401665273,BeanChan1987,"1、4 machine
2、sending rate set to 40
3、cpu loading < 50% ,memory loading< 40%
4、caliper send TS failed and TPS is very low.",2018-07-02 03:53:23,2018-07-02 03:53:59
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/401665754,https://github.com/hyperledger/caliper/issues/107#issuecomment-401665754,BeanChan1987,"I had changed the sending rate to 300，200，150，100，80，50，40 and so on, unable to  promoted the TPS.",2018-07-02 03:57:27,2018-07-02 03:57:54
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/432227795,https://github.com/hyperledger/caliper/issues/107#issuecomment-432227795,cao0507,@BeanChan1987 您好，请问您是怎么用 caliper 来测试多个 Orderer 节点的 fabric 网络的呢？网络配置文件 fabric.json 文件中的 orderer 部分该如何配置啊？,2018-10-23 12:34:39,2018-10-23 12:34:39
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/462636163,https://github.com/hyperledger/caliper/issues/107#issuecomment-462636163,shiningfrog,"hello, is there some details in how to fill the fabric.json file to test the performance under kafka mode?",2019-02-12 06:40:03,2019-02-12 06:40:03
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/464034544,https://github.com/hyperledger/caliper/issues/107#issuecomment-464034544,aklenik,"@shiningfrog The current Fabric adapter only supports a single orderer node. Check out PR #296 that supports multiple orderer endpoints. Not merged yet, and any feedback is welcome!",2019-02-15 12:36:45,2019-02-15 12:36:45
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/465015915,https://github.com/hyperledger/caliper/issues/107#issuecomment-465015915,shiningfrog,"hello, i've clone this tree and tesed in multi orderers. when i try to test tps in my own fabirc network(1.2 kafka) , i got this error in Instantiating Step(installing ok) :'commit timeout for simple@v0' in XXX_channel for peer1.org2.example.com. i want to know if this is caused by the smart contract? @aklenik ",2019-02-19 07:23:27,2019-02-19 07:23:27
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/465053416,https://github.com/hyperledger/caliper/issues/107#issuecomment-465053416,aklenik,@shiningfrog Check the peer logs or the chaincode container log for details.,2019-02-19 09:22:43,2019-02-19 09:22:43
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/465446846,https://github.com/hyperledger/caliper/issues/107#issuecomment-465446846,shiningfrog,"thank you. now the  contract 'simple@v0' has instantiated in mychannel(i create a fabric network with 2 orderers and 4 peers, 2 orgs). but there is another problrm: [ChannelEventHub.js]: _connect - timed out after:45000 and unable to connect to the peer event hub.
i use fabric-1.2 to build up the whole network. is there any advice for me? @aklenik 
![image](https://user-images.githubusercontent.com/10084283/53071708-fa3aec00-351d-11e9-8b25-9318861c334a.png)
![image](https://user-images.githubusercontent.com/10084283/53071718-045cea80-351e-11e9-832d-5475c594ed8f.png)


",2019-02-20 06:44:45,2019-02-20 06:44:45
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/465537482,https://github.com/hyperledger/caliper/issues/107#issuecomment-465537482,aklenik,"@shiningfrog Hmm, it looks like that the transactions are not even processed. But it seems that the peers are available as an endpoint. Can you check the peer logs whether they're started successfully? The eventhub connect timeout suggest some peer errors",2019-02-20 11:31:41,2019-02-20 11:31:41
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/469415388,https://github.com/hyperledger/caliper/issues/107#issuecomment-469415388,aklenik,@shiningfrog Did you resolve this error?,2019-03-04 20:47:22,2019-03-04 20:47:22
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/469523066,https://github.com/hyperledger/caliper/issues/107#issuecomment-469523066,shiningfrog," @aklenik thank you very much!.sometimes it works well, but sometimes it doesn't. if i create a new chain network, this problrm fixed itself.   however when i test in the same chain, the problem raises again. i cannot see any error in peer logs and orderer logs.",2019-03-05 03:32:16,2019-03-05 03:32:16
https://api.github.com/repos/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/comments/469599562,https://github.com/hyperledger/caliper/issues/107#issuecomment-469599562,aklenik,"@shiningfrog If you test it on an already running network, make sure you don't try to create channels again, and there is no conflict between the tests if you run them again without clearing their effects.

Since the testing of multiple orderers works, I'm closing this issue. If you run into any problem, open a new issue, with the detailed error logs from the network side.",2019-03-05 09:08:23,2019-03-05 09:08:23
https://api.github.com/repos/hyperledger/caliper/issues/106,https://api.github.com/repos/hyperledger/caliper/issues/comments/400559479,https://github.com/hyperledger/caliper/issues/106#issuecomment-400559479,Caoxuyang,"I know that the sleepTime * idx means the total time this tx should wait for.
But why we compare the diff with 5 ?",2018-06-27 06:37:21,2018-06-27 06:51:38
https://api.github.com/repos/hyperledger/caliper/issues/106,https://api.github.com/repos/hyperledger/caliper/issues/comments/400563344,https://github.com/hyperledger/caliper/issues/106#issuecomment-400563344,Caoxuyang,Sorry I got it.,2018-06-27 06:55:34,2018-06-27 06:55:34
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/400560795,https://github.com/hyperledger/caliper/issues/105#issuecomment-400560795,JulienGuo,"Please try this operation :  
1. exec command ""docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d ""
2. delete start command from config-xxx.json
3. wait seconds. (10s )
4. exec command ""node benchmark/simple/main.js -c config-fabric.json -n fabric.json""",2018-06-27 06:43:52,2018-06-27 06:43:52
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/400565278,https://github.com/hyperledger/caliper/issues/105#issuecomment-400565278,zhulingyanc,"Follow your steps(1~4), still return the same errors。",2018-06-27 07:04:14,2018-06-27 07:04:14
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/400568583,https://github.com/hyperledger/caliper/issues/105#issuecomment-400568583,JulienGuo,Did you change the port of peer or orderer? Are the ports same with .json file?,2018-06-27 07:18:34,2018-06-27 07:18:34
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/400590523,https://github.com/hyperledger/caliper/issues/105#issuecomment-400590523,zhulingyanc,"in fabric.json file,  ip,port and server-hostname in orderer,peer and ca had been modified, but it still returned the same errors",2018-06-27 08:39:18,2018-06-27 08:39:18
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/401337421,https://github.com/hyperledger/caliper/issues/105#issuecomment-401337421,EG-easy,"im using caliper/network/fabric-v11/3-org-3-peer/docker-compose.yaml and change the mychannel.tx, twoorgs.genesis.block, crypto-config  in my environment...
Then i have a similar error.

$ node benchmark/simple/main.js -n fabric.json
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric-v11/3-org-3-peer/docker-compose.yaml up -d
Creating couchdb.peer1.org3.example.com ... done
Creating couchdb.peer2.org1.example.com ... done
Creating orderer.example.com            ... done
Creating couchdb.peer1.org1.example.com ... done
Creating couchdb.peer2.org3.example.com ... done
Creating ca.org1.example.com            ... done
Creating couchdb.peer1.org2.example.com ... done
Creating couchdb.peer2.org2.example.com ... done
Creating ca.org2.example.com            ... done
Creating couchdb.peer0.org1.example.com ... done
Creating ca.org3.example.com            ... done
Creating couchdb.peer0.org3.example.com ... done
Creating couchdb.peer0.org2.example.com ... done
Creating peer0.org3.example.com         ... done
Creating peer1.org2.example.com         ... done
Creating peer1.org3.example.com         ... done
Creating peer0.org1.example.com         ... done
Creating peer0.org2.example.com         ... done
Creating peer2.org3.example.com         ... done
Creating peer1.org1.example.com         ... done
Creating peer2.org2.example.com         ... done
Creating peer2.org1.example.com         ... done
# create mychannel......
E0629 21:10:57.958212000 140736024703872 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number.
E0629 21:10:57.980125000 140736024703872 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number.
error: [Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: Connect Failed\n    at createStatusError (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:64:15)\n    at ClientDuplexStream._emitStatusIfDone (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:270:19)\n    at ClientDuplexStream._readsDone (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:236:8)\n    at readCallback (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:296:12)""
not ok 1 Failed to create channels Error: SERVICE_UNAVAILABLE at ClientDuplexStream.<anonymous> (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/lib/Orderer.js:138:21) at ClientDuplexStream.emit (events.js:127:13) at ClientDuplexStream._emitStatusIfDone (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:271:12) at ClientDuplexStream._readsDone (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:236:8) at readCallback (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:296:12)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/Users/shizuka/caliper1/caliper/src/fabric/create-channel.js:160:19)
    stack: |-
      Error: Failed to create channels Error: SERVICE_UNAVAILABLE
          at ClientDuplexStream.<anonymous> (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/lib/Orderer.js:138:21)
          at ClientDuplexStream.emit (events.js:127:13)
          at ClientDuplexStream._emitStatusIfDone (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:271:12)
          at ClientDuplexStream._readsDone (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:236:8)
          at readCallback (/Users/shizuka/caliper1/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:296:12)
          at Test.assert [as _assert] (/Users/shizuka/caliper1/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/Users/shizuka/caliper1/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/Users/shizuka/caliper1/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/Users/shizuka/caliper1/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/Users/shizuka/caliper1/caliper/src/fabric/create-channel.js:160:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:160:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/Users/shizuka/caliper1/caliper/src/fabric/create-channel.js:161:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:160:7)
not ok 2 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/Users/shizuka/caliper1/caliper/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/Users/shizuka/caliper1/caliper/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/Users/shizuka/caliper1/caliper/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/Users/shizuka/caliper1/caliper/src/comm/bench-flow.js:347:18)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:160:7)
  ...

1..2
# tests 2
# pass  0
# fail  2

is it possible to increase Peers in caliper benchmark test? Thanks!",2018-06-29 12:19:36,2018-06-29 12:19:36
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/409769078,https://github.com/hyperledger/caliper/issues/105#issuecomment-409769078,lotty02cho,I have same issue with EG-easy. Does anyone know about this issues?,2018-08-02 00:42:21,2018-08-02 00:42:21
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/414094466,https://github.com/hyperledger/caliper/issues/105#issuecomment-414094466,nagarajasr,👍 ,2018-08-19 00:23:45,2018-08-19 00:23:45
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/414173005,https://github.com/hyperledger/caliper/issues/105#issuecomment-414173005,jianzi123,me too.,2018-08-20 01:23:10,2018-08-20 01:23:10
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/414247989,https://github.com/hyperledger/caliper/issues/105#issuecomment-414247989,nagarajasr,in my case it was a misconfigured network-config.yaml which had the wrong port number for fabric-ca and peers. resolved after correcting the port numbers.,2018-08-20 09:03:22,2018-08-20 09:03:22
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/429121981,https://github.com/hyperledger/caliper/issues/105#issuecomment-429121981,fivepapertigers,"In case this helps anyone: I was running into handshake issues with fabric on Mac OSX using node 10.X, but 8.X seems to work alright.",2018-10-11 21:18:06,2018-10-11 21:18:06
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/435300188,https://github.com/hyperledger/caliper/issues/105#issuecomment-435300188,zsh122958,Have you solved your problem?I have the same problem,2018-11-02 07:59:34,2018-11-02 07:59:34
https://api.github.com/repos/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/comments/436255537,https://github.com/hyperledger/caliper/issues/105#issuecomment-436255537,aklenik,"If someone is still encountering this issue after the proposed fixes, take a look at [my comment](https://github.com/hyperledger/caliper/issues/93#issuecomment-436253920) in a similar issue.",2018-11-06 13:39:31,2018-11-06 13:39:31
https://api.github.com/repos/hyperledger/caliper/issues/104,https://api.github.com/repos/hyperledger/caliper/issues/comments/399760665,https://github.com/hyperledger/caliper/issues/104#issuecomment-399760665,JulienGuo,"good in Mac OS  , wrong in ubuntu",2018-06-24 14:28:00,2018-06-24 14:28:00
https://api.github.com/repos/hyperledger/caliper/issues/104,https://api.github.com/repos/hyperledger/caliper/issues/comments/400555709,https://github.com/hyperledger/caliper/issues/104#issuecomment-400555709,Caoxuyang,"Hi Julien,
The problem is that the code can't find one of the contexts in your Fabric config file.
The error message is quite clear about this: 

> UnhandledPromiseRejectionWarning: Error: could not find context's information in config file
> at Fabric.getContext (/home/ubuntu/caliper/src/fabric/fabric.js:84:35)

Go and check the path or the variable name of that specific context in your config file.

",2018-06-27 06:18:47,2018-06-27 06:18:47
https://api.github.com/repos/hyperledger/caliper/issues/104,https://api.github.com/repos/hyperledger/caliper/issues/comments/400559689,https://github.com/hyperledger/caliper/issues/104#issuecomment-400559689,JulienGuo,"@Caoxuyang Thanks, I changed rounds.label from ""open""n to ""invoke"" , but didn't change it in code  ",2018-06-27 06:38:29,2018-06-27 06:38:29
https://api.github.com/repos/hyperledger/caliper/issues/104,https://api.github.com/repos/hyperledger/caliper/issues/comments/411328469,https://github.com/hyperledger/caliper/issues/104#issuecomment-411328469,Caoxuyang,@JulienGuo NP.,2018-08-08 08:26:45,2018-08-08 08:26:45
https://api.github.com/repos/hyperledger/caliper/issues/103,https://api.github.com/repos/hyperledger/caliper/issues/comments/399003341,https://github.com/hyperledger/caliper/pull/103#issuecomment-399003341,aklenik,Something is still not right with proposal rejection handling. Opening a new PR when it's fixed.,2018-06-21 07:26:31,2018-06-21 07:26:31
https://api.github.com/repos/hyperledger/caliper/issues/103,https://api.github.com/repos/hyperledger/caliper/issues/comments/399339358,https://github.com/hyperledger/caliper/pull/103#issuecomment-399339358,aklenik,"The error was in my user module, so the fix works :)",2018-06-22 06:48:25,2018-06-22 06:48:25
https://api.github.com/repos/hyperledger/caliper/issues/102,https://api.github.com/repos/hyperledger/caliper/issues/comments/398373687,https://github.com/hyperledger/caliper/issues/102#issuecomment-398373687,JulienGuo,fabric network is available,2018-06-19 11:59:12,2018-06-19 11:59:12
https://api.github.com/repos/hyperledger/caliper/issues/102,https://api.github.com/repos/hyperledger/caliper/issues/comments/398645272,https://github.com/hyperledger/caliper/issues/102#issuecomment-398645272,JulienGuo,"# joinChannel 7
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
# joinChannel 8
error: [E2E testing]: install proposal was bad
not ok 3 Failed to install chaincodes, Error: Failed to send install Proposal or receive valid response: Error: 14 UNAVAILABLE: Connect Failed at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:139:19) at <anonymous>
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/install-chaincode.js:65:19)
    stack: |-
      Error: Failed to install chaincodes, Error: Failed to send install Proposal or receive valid response: Error: 14 UNAVAILABLE: Connect Failed
          at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:139:19)
          at <anonymous>
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/install-chaincode.js:65:19)
          at <anonymous>
  ...
fabric.installSmartContract() failed, Error: Failed to send install Proposal or receive valid response: Error: 14 UNAVAILABLE: Connect Failed
    at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:139:19)
    at <anonymous>
not ok 4 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/opt/gopath/src/github.com/hyperledger/caliper/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/opt/gopath/src/github.com/hyperledger/caliper/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/comm/bench-flow.js:347:18)
          at <anonymous>
  ...
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
# joinChannel 10
(node:8675) UnhandledPromiseRejectionWarning: undefined
(node:8675) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 5)
(node:8675) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.

1..4
# tests 4
# pass  2
# fail  2
",2018-06-20 07:00:04,2018-06-20 07:00:04
https://api.github.com/repos/hyperledger/caliper/issues/102,https://api.github.com/repos/hyperledger/caliper/issues/comments/398655504,https://github.com/hyperledger/caliper/issues/102#issuecomment-398655504,JulienGuo,"2018-06-20 06:49:34.950 UTC [common/deliver] deliverBlocks -> DEBU 411 [channel: mychannel] Received seekInfo (0xc420b8b800) start:<specified:<number:1 > > stop:<specified:<number:18446744073709551615 > >  from 172.20.0.6:40732
2018-06-20 06:49:34.950 UTC [fsblkstorage] waitForBlock -> DEBU 412 Going to wait for newer blocks. maxAvailaBlockNumber=[0], waitForBlockNum=[1]
2018-06-20 06:58:03.033 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 413 client/metadata fetching metadata for all topics from broker kafka2:9092
2018-06-20 06:58:03.511 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 414 client/metadata fetching metadata for all topics from broker kafka3:9092
2018-06-20 06:59:23.764 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 415 client/metadata fetching metadata for all topics from broker kafka0:9092
2018-06-20 06:59:24.251 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 416 client/metadata fetching metadata for all topics from broker kafka0:9092
2018-06-20 07:08:03.032 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 417 client/metadata fetching metadata for all topics from broker kafka2:9092
2018-06-20 07:08:03.511 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 418 client/metadata fetching metadata for all topics from broker kafka3:9092
2018-06-20 07:09:23.763 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 419 client/metadata fetching metadata for all topics from broker kafka0:9092
2018-06-20 07:09:24.251 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 41a client/metadata fetching metadata for all topics from broker kafka0:9092
2018-06-20 07:11:30.513 UTC [orderer/consensus/kafka/sarama] subscriptionConsumer -> DEBU 41b consumer/broker/1 disconnecting due to error processing FetchRequest: read tcp 172.20.0.12:48750->172.20.0.10:9092: i/o timeout
2018-06-20 07:11:30.521 UTC [orderer/consensus/kafka/sarama] subscriptionConsumer -> DEBU 41c consumer/broker/1 disconnecting due to error processing FetchRequest: read tcp 172.20.0.12:48760->172.20.0.10:9092: i/o timeout
2018-06-20 07:11:30.523 UTC [orderer/consensus/kafka/sarama] Close -> DEBU 41d Closed connection to broker 6e41cad75a6c:9092
2018-06-20 07:11:30.523 UTC [orderer/consensus/kafka] processMessagesToBlocks -> ERRO 41e [channel: testchainid] Error during consumption: kafka: error while consuming testchainid/0: read tcp 172.20.0.12:48750->172.20.0.10:9092: i/o timeout
2018-06-20 07:11:30.523 UTC [orderer/consensus/kafka] processMessagesToBlocks -> WARN 41f [channel: testchainid] Deliver sessions will be dropped if consumption errors continue.
2018-06-20 07:11:30.524 UTC [orderer/consensus/kafka/sarama] Close -> DEBU 420 Closed connection to broker 6e41cad75a6c:9092
2018-06-20 07:11:30.524 UTC [orderer/consensus/kafka] processMessagesToBlocks -> ERRO 421 [channel: mychannel] Error during consumption: kafka: error while consuming mychannel/0: read tcp 172.20.0.12:48760->172.20.0.10:9092: i/o timeout
2018-06-20 07:11:30.525 UTC [orderer/consensus/kafka] processMessagesToBlocks -> WARN 422 [channel: mychannel] Deliver sessions will be dropped if consumption errors continue.
2018-06-20 07:11:29.867 UTC [orderer/consensus/kafka/sarama] dispatcher -> DEBU 423 consumer/testchainid/0 finding new broker
2018-06-20 07:11:29.867 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 424 client/metadata fetching metadata for [testchainid] from broker kafka3:9092
2018-06-20 07:11:29.869 UTC [orderer/consensus/kafka/sarama] dispatcher -> DEBU 425 consumer/mychannel/0 finding new broker
2018-06-20 07:11:29.869 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 426 client/metadata fetching metadata for [mychannel] from broker kafka0:9092
2018-06-20 07:11:29.872 UTC [orderer/consensus/kafka/sarama] Validate -> DEBU 427 ClientID is the default of 'sarama', you should consider setting it to something application-specific.
2018-06-20 07:11:29.873 UTC [orderer/consensus/kafka/sarama] updateSubscriptions -> DEBU 428 consumer/broker/1 added subscription to testchainid/0
2018-06-20 07:11:29.873 UTC [orderer/consensus/kafka] processMessagesToBlocks -> WARN 429 [channel: testchainid] Consumption will resume.
2018-06-20 07:11:29.874 UTC [orderer/consensus/kafka/sarama] func1 -> DEBU 42a Connected to broker at 6e41cad75a6c:9092 (registered as #1)
2018-06-20 07:11:29.876 UTC [orderer/consensus/kafka/sarama] Validate -> DEBU 42b ClientID is the default of 'sarama', you should consider setting it to something application-specific.
2018-06-20 07:11:29.877 UTC [orderer/consensus/kafka/sarama] updateSubscriptions -> DEBU 42c consumer/broker/1 added subscription to mychannel/0
2018-06-20 07:11:29.877 UTC [orderer/consensus/kafka] processMessagesToBlocks -> WARN 42d [channel: mychannel] Consumption will resume.
2018-06-20 07:11:29.877 UTC [orderer/consensus/kafka/sarama] func1 -> DEBU 42e Connected to broker at 6e41cad75a6c:9092 (registered as #1)
2018-06-20 07:18:00.375 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 42f client/metadata fetching metadata for all topics from broker kafka2:9092
2018-06-20 07:18:00.854 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 430 client/metadata fetching metadata for all topics from broker kafka3:9092
2018-06-20 07:19:21.106 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 431 client/metadata fetching metadata for all topics from broker kafka0:9092
2018-06-20 07:19:21.594 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 432 client/metadata fetching metadata for all topics from broker kafka0:9092
2018-06-20 07:28:00.375 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 433 client/metadata fetching metadata for all topics from broker kafka2:9092
2018-06-20 07:28:00.854 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 434 client/metadata fetching metadata for all topics from broker kafka3:9092
2018-06-20 07:29:21.105 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 435 client/metadata fetching metadata for all topics from broker kafka0:9092
2018-06-20 07:29:21.593 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 436 client/metadata fetching metadata for all topics from broker kafka0:9092
2018-06-20 07:38:00.375 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 437 client/metadata fetching metadata for all topics from broker kafka2:9092
2018-06-20 07:38:00.854 UTC [orderer/consensus/kafka/sarama] tryRefreshMetadata -> DEBU 438 client/metadata fetching metadata for all topics from broker kafka3:9092",2018-06-20 07:42:37,2018-06-20 07:42:37
https://api.github.com/repos/hyperledger/caliper/issues/102,https://api.github.com/repos/hyperledger/caliper/issues/comments/398988054,https://github.com/hyperledger/caliper/issues/102#issuecomment-398988054,JulienGuo,the request port is wrong,2018-06-21 06:13:29,2018-06-21 06:13:29
https://api.github.com/repos/hyperledger/caliper/issues/102,https://api.github.com/repos/hyperledger/caliper/issues/comments/404708124,https://github.com/hyperledger/caliper/issues/102#issuecomment-404708124,nktuan286,@JulienGuo  Did you resolve this bug? I have a same problem.,2018-07-13 02:38:19,2018-07-13 02:38:19
https://api.github.com/repos/hyperledger/caliper/issues/102,https://api.github.com/repos/hyperledger/caliper/issues/comments/404712877,https://github.com/hyperledger/caliper/issues/102#issuecomment-404712877,JulienGuo,"@nktuan286 Yes, I did. my grpc request  ports were wrong. keep them right , json config same to yaml config ",2018-07-13 03:11:27,2018-07-13 03:11:27
https://api.github.com/repos/hyperledger/caliper/issues/102,https://api.github.com/repos/hyperledger/caliper/issues/comments/404714768,https://github.com/hyperledger/caliper/issues/102#issuecomment-404714768,nktuan286,@JulienGuo Thanks. I will try to fix it.,2018-07-13 03:25:29,2018-07-13 03:25:29
https://api.github.com/repos/hyperledger/caliper/issues/101,https://api.github.com/repos/hyperledger/caliper/issues/comments/400506300,https://github.com/hyperledger/caliper/issues/101#issuecomment-400506300,ski2per,I have the same issue when running composer test,2018-06-27 00:37:25,2018-06-27 00:37:25
https://api.github.com/repos/hyperledger/caliper/issues/101,https://api.github.com/repos/hyperledger/caliper/issues/comments/403674555,https://github.com/hyperledger/caliper/issues/101#issuecomment-403674555,haojun,@nklincoln Do you have any suggestions for this issue?,2018-07-10 01:57:46,2018-07-10 01:57:46
https://api.github.com/repos/hyperledger/caliper/issues/101,https://api.github.com/repos/hyperledger/caliper/issues/comments/403759453,https://github.com/hyperledger/caliper/issues/101#issuecomment-403759453,nklincoln,"🤔 Hmm, that would possibly depend at the time of the failure. From the above, it looks like there might have been a failure in CouchDB during a lookup (possible fail in a 'get') which would manifest as an unidentified user. That is assuming that the failure was within the 'main' test and not the initialisation phase",2018-07-10 09:26:13,2018-07-10 09:26:13
https://api.github.com/repos/hyperledger/caliper/issues/101,https://api.github.com/repos/hyperledger/caliper/issues/comments/410541401,https://github.com/hyperledger/caliper/issues/101#issuecomment-410541401,vyalla,"I am also getting the similar error while running ""composer network ping ..."".
Composer version: 0.19.13
Fabric version: 1.2
Node version: 8.11.3",2018-08-05 19:16:20,2018-08-05 19:16:20
https://api.github.com/repos/hyperledger/caliper/issues/101,https://api.github.com/repos/hyperledger/caliper/issues/comments/428478081,https://github.com/hyperledger/caliper/issues/101#issuecomment-428478081,panyu4,"@vyalla , it looks you should use fabric 1.1.0",2018-10-10 08:07:43,2018-10-10 08:07:43
https://api.github.com/repos/hyperledger/caliper/issues/99,https://api.github.com/repos/hyperledger/caliper/issues/comments/401221802,https://github.com/hyperledger/caliper/pull/99#issuecomment-401221802,haojun,@nklincoln Please confirm if composer still needs a separate folder and help to check if all corresponding paths are updated. Thanks.,2018-06-29 01:36:58,2018-06-29 01:36:58
https://api.github.com/repos/hyperledger/caliper/issues/99,https://api.github.com/repos/hyperledger/caliper/issues/comments/401785516,https://github.com/hyperledger/caliper/pull/99#issuecomment-401785516,nklincoln,@haojun - the changes will not break Composer performance tests 👍 All required paths have been updated,2018-07-02 12:18:37,2018-07-02 12:18:37
https://api.github.com/repos/hyperledger/caliper/issues/98,https://api.github.com/repos/hyperledger/caliper/issues/comments/404729468,https://github.com/hyperledger/caliper/issues/98#issuecomment-404729468,aklenik,"@RobertDiebels After a fix, the mspid and domain names are read from the configuration file. Can you verify that it solves your problem?",2018-07-13 05:27:47,2018-07-13 05:27:47
https://api.github.com/repos/hyperledger/caliper/issues/98,https://api.github.com/repos/hyperledger/caliper/issues/comments/404732883,https://github.com/hyperledger/caliper/issues/98#issuecomment-404732883,haojun,closed by #126 ,2018-07-13 05:50:34,2018-07-13 05:50:34
https://api.github.com/repos/hyperledger/caliper/issues/98,https://api.github.com/repos/hyperledger/caliper/issues/comments/405212443,https://github.com/hyperledger/caliper/issues/98#issuecomment-405212443,RobertDiebels,@aklenik I looked at the fix and I implemented the same one in my fork. I can confirm it works. Excuse the late reply btw. I didn't see a notification for this issue for some reason.,2018-07-16 10:59:20,2018-07-16 10:59:20
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/397609914,https://github.com/hyperledger/caliper/issues/97#issuecomment-397609914,JulienGuo,"2018-06-15 20:35:40.005 CST [orderer/common/broadcast] Handle -> WARN 009 [channel: mychannel] Rejecting broadcast of message from 172.20.0.1:51068 with SERVICE_UNAVAILABLE: rejected by Consenter: will not enqueue, consenter for this channel hasn't started yet",2018-06-15 12:48:15,2018-06-15 12:48:15
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/397625767,https://github.com/hyperledger/caliper/issues/97#issuecomment-397625767,JulienGuo,"guolidong:/opt/gopath/src/github.com/hyperledger/caliper$ docker logs zookeeper0
ZooKeeper JMX enabled by default
Using config: /conf/zoo.cfg
2018-06-15 13:37:43,415 [myid:] - INFO  [main:QuorumPeerConfig@124] - Reading configuration from: /conf/zoo.cfg
2018-06-15 13:37:43,518 [myid:] - INFO  [main:QuorumPeer$QuorumServer@149] - Resolved hostname: zookeeper2 to address: zookeeper2/172.20.0.5
2018-06-15 13:37:43,522 [myid:] - INFO  [main:QuorumPeer$QuorumServer@149] - Resolved hostname: zookeeper1 to address: zookeeper1/172.20.0.6
2018-06-15 13:37:43,523 [myid:] - INFO  [main:QuorumPeer$QuorumServer@149] - Resolved hostname: zookeeper0 to address: zookeeper0/172.20.0.4
2018-06-15 13:37:43,524 [myid:] - INFO  [main:QuorumPeerConfig@352] - Defaulting to majority quorums
2018-06-15 13:37:43,534 [myid:1] - INFO  [main:DatadirCleanupManager@78] - autopurge.snapRetainCount set to 3
2018-06-15 13:37:43,534 [myid:1] - INFO  [main:DatadirCleanupManager@79] - autopurge.purgeInterval set to 1
2018-06-15 13:37:43,548 [myid:1] - INFO  [PurgeTask:DatadirCleanupManager$PurgeTask@138] - Purge task started.
2018-06-15 13:37:43,577 [myid:1] - INFO  [main:QuorumPeerMain@127] - Starting quorum peer
2018-06-15 13:37:43,586 [myid:1] - INFO  [PurgeTask:DatadirCleanupManager$PurgeTask@144] - Purge task completed.
2018-06-15 13:37:43,651 [myid:1] - INFO  [main:NIOServerCnxnFactory@89] - binding to port 0.0.0.0/0.0.0.0:2181
2018-06-15 13:37:43,661 [myid:1] - INFO  [main:QuorumPeer@1019] - tickTime set to 2000
2018-06-15 13:37:43,661 [myid:1] - INFO  [main:QuorumPeer@1039] - minSessionTimeout set to -1
2018-06-15 13:37:43,662 [myid:1] - INFO  [main:QuorumPeer@1050] - maxSessionTimeout set to -1
2018-06-15 13:37:43,662 [myid:1] - INFO  [main:QuorumPeer@1065] - initLimit set to 5
2018-06-15 13:37:43,691 [myid:1] - INFO  [main:QuorumPeer@533] - currentEpoch not found! Creating with a reasonable default of 0. This should only happen when you are upgrading your installation
2018-06-15 13:37:43,702 [myid:1] - INFO  [main:QuorumPeer@548] - acceptedEpoch not found! Creating with a reasonable default of 0. This should only happen when you are upgrading your installation
2018-06-15 13:37:43,713 [myid:1] - INFO  [ListenerThread:QuorumCnxManager$Listener@534] - My election bind port: zookeeper0/172.20.0.4:3888
2018-06-15 13:37:43,735 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumPeer@774] - LOOKING
2018-06-15 13:37:43,742 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@818] - New election. My id =  1, proposed zxid=0x0
2018-06-15 13:37:43,743 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@600] - Notification: 1 (message format version), 1 (n.leader), 0x0 (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0x0 (n.peerEpoch) LOOKING (my state)
2018-06-15 13:37:43,764 [myid:1] - WARN  [WorkerSender[myid=1]:QuorumCnxManager@400] - Cannot open channel to 2 at election address zookeeper1/172.20.0.6:3888
java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:381)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:354)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:452)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:433)
	at java.lang.Thread.run(Thread.java:748)
2018-06-15 13:37:43,771 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumPeer$QuorumServer@149] - Resolved hostname: zookeeper1 to address: zookeeper1/172.20.0.6
2018-06-15 13:37:43,772 [myid:1] - WARN  [WorkerSender[myid=1]:QuorumCnxManager@400] - Cannot open channel to 3 at election address zookeeper2/172.20.0.5:3888
java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:381)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:354)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:452)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:433)
	at java.lang.Thread.run(Thread.java:748)
2018-06-15 13:37:43,772 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumPeer$QuorumServer@149] - Resolved hostname: zookeeper2 to address: zookeeper2/172.20.0.5
2018-06-15 13:37:43,860 [myid:1] - INFO  [zookeeper0/172.20.0.4:3888:QuorumCnxManager$Listener@541] - Received connection request /172.20.0.5:48192
2018-06-15 13:37:43,878 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@600] - Notification: 1 (message format version), 3 (n.leader), 0x0 (n.zxid), 0x1 (n.round), LOOKING (n.state), 3 (n.sid), 0x0 (n.peerEpoch) LOOKING (my state)
2018-06-15 13:37:43,878 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@600] - Notification: 1 (message format version), 3 (n.leader), 0x0 (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0x0 (n.peerEpoch) LOOKING (my state)
2018-06-15 13:37:43,879 [myid:1] - WARN  [WorkerSender[myid=1]:QuorumCnxManager@400] - Cannot open channel to 2 at election address zookeeper1/172.20.0.6:3888
java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:381)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:354)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:452)
	at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:433)
	at java.lang.Thread.run(Thread.java:748)
2018-06-15 13:37:43,879 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumPeer$QuorumServer@149] - Resolved hostname: zookeeper1 to address: zookeeper1/172.20.0.6
2018-06-15 13:37:44,080 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumPeer@844] - FOLLOWING
2018-06-15 13:37:44,083 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Learner@86] - TCP NoDelay set to: true
2018-06-15 13:37:44,104 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:zookeeper.version=3.4.9-1757313, built on 08/23/2016 06:50 GMT
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:host.name=zookeeper0
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:java.version=1.8.0_151
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:java.vendor=Oracle Corporation
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:java.class.path=/zookeeper-3.4.9/bin/../build/classes:/zookeeper-3.4.9/bin/../build/lib/*.jar:/zookeeper-3.4.9/bin/../lib/slf4j-log4j12-1.6.1.jar:/zookeeper-3.4.9/bin/../lib/slf4j-api-1.6.1.jar:/zookeeper-3.4.9/bin/../lib/netty-3.10.5.Final.jar:/zookeeper-3.4.9/bin/../lib/log4j-1.2.16.jar:/zookeeper-3.4.9/bin/../lib/jline-0.9.94.jar:/zookeeper-3.4.9/bin/../zookeeper-3.4.9.jar:/zookeeper-3.4.9/bin/../src/java/lib/*.jar:/conf:
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:java.io.tmpdir=/tmp
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:java.compiler=<NA>
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:os.name=Linux
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:os.arch=amd64
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:os.version=4.9.87-linuxkit-aufs
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:user.name=zookeeper
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:user.home=/home/zookeeper
2018-06-15 13:37:44,105 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Environment@100] - Server environment:user.dir=/zookeeper-3.4.9
2018-06-15 13:37:44,106 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:ZooKeeperServer@173] - Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir /datalog/version-2 snapdir /data/version-2
2018-06-15 13:37:44,107 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Follower@61] - FOLLOWING - LEADER ELECTION TOOK - 365
2018-06-15 13:37:44,111 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumPeer$QuorumServer@149] - Resolved hostname: zookeeper2 to address: zookeeper2/172.20.0.5
2018-06-15 13:37:44,161 [myid:1] - INFO  [zookeeper0/172.20.0.4:3888:QuorumCnxManager$Listener@541] - Received connection request /172.20.0.6:39628
2018-06-15 13:37:44,172 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@600] - Notification: 1 (message format version), 2 (n.leader), 0x0 (n.zxid), 0x1 (n.round), LOOKING (n.state), 2 (n.sid), 0x0 (n.peerEpoch) FOLLOWING (my state)
2018-06-15 13:37:44,173 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@600] - Notification: 1 (message format version), 3 (n.leader), 0x0 (n.zxid), 0x1 (n.round), LOOKING (n.state), 2 (n.sid), 0x0 (n.peerEpoch) FOLLOWING (my state)
2018-06-15 13:37:44,183 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:Learner@326] - Getting a diff from the leader 0x0
2018-06-15 13:37:44,185 [myid:1] - INFO  [QuorumPeer[myid=1]/0.0.0.0:2181:FileTxnSnapLog@240] - Snapshotting: 0x0 to /data/version-2/snapshot.0
2018-06-15 13:37:47,043 [myid:1] - WARN  [QuorumPeer[myid=1]/0.0.0.0:2181:Follower@116] - Got zxid 0x100000001 expected 0x1
2018-06-15 13:37:47,044 [myid:1] - INFO  [SyncThread:1:FileTxnLog@203] - Creating new log file: log.100000001
2018-06-15 13:37:47,302 [myid:1] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@192] - Accepted socket connection from /172.20.0.9:48164
2018-06-15 13:37:47,328 [myid:1] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@928] - Client attempting to establish new session at /172.20.0.9:48164
2018-06-15 13:37:47,390 [myid:1] - INFO  [CommitProcessor:1:ZooKeeperServer@673] - Established session 0x16403aa84f90000 with negotiated timeout 6000 for client /172.20.0.9:48164
guolidong:/opt/gopath/src/github.com/hyperledger/caliper$ 
",2018-06-15 13:49:22,2018-06-15 13:49:22
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/398988150,https://github.com/hyperledger/caliper/issues/97#issuecomment-398988150,JulienGuo,the request port is wrong,2018-06-21 06:14:01,2018-06-21 06:14:01
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/428405794,https://github.com/hyperledger/caliper/issues/97#issuecomment-428405794,pyraman,Hi JulienGuo! I am facing the same issue with message: SERVICE_UNAVAILABLE consenter for this channal hasn't start yet. Please clarify your case.,2018-10-10 01:22:10,2018-10-10 01:22:26
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/428424232,https://github.com/hyperledger/caliper/issues/97#issuecomment-428424232,JulienGuo,"> Hi JulienGuo! I am facing the same issue with message: SERVICE_UNAVAILABLE consenter for this channal hasn't start yet. Please clarify your case.

hi , @pyraman  The reason for my problem is "" my request port of order is wrong"" , the ports config in json config files and yaml config files .  ",2018-10-10 03:17:34,2018-10-10 03:17:34
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/428427407,https://github.com/hyperledger/caliper/issues/97#issuecomment-428427407,pyraman,"hi @jiangyaoguo here is my problem:

from CLI: ./peer.sh channel create -o orderer0.trade.com:7050 -c tradechannel -f ./tradechannel.tx --cafile tlsca.trade.com-cert.pem

--> Error: got unexpected status: SERVICE_UNAVAILABLE -- will not enqueue, consenter for this channel hasn't started yet.

from Orderer:

--> 2018-10-10 09:52:52.147 ICT [orderer/common/server] Deliver -> DEBU 74a Starting new Deliver handler

2018-10-10 09:52:52.147 ICT [common/deliver] Handle -> DEBU 74b Starting new deliver loop for 192.168.171.146:49401

2018-10-10 09:52:52.148 ICT [common/deliver] Handle -> DEBU 74c Attempting to read seek info message from 192.168.171.146:49401

2018-10-10 09:52:52.149 ICT [orderer/common/server] Broadcast -> DEBU 74d Starting new Broadcast handler

2018-10-10 09:52:52.149 ICT [orderer/common/broadcast] Handle -> DEBU 74e Starting new broadcast loop for 192.168.171.146:49402

2018-10-10 09:52:52.149 ICT [orderer/common/broadcast] Handle -> WARN 74f [channel: tradechannel] Rejecting broadcast of message from 192.168.171.146:49402 with SERVICE_UNAVAILABLE: rejected by Consenter: will not enqueue, consenter for this channel hasn't started yet

2018-10-10 09:52:52.149 ICT [orderer/common/server] func1 -> DEBU 750 Closing Broadcast stream

2018-10-10 09:52:52.153 ICT [grpc] Printf -> DEBU 751 transport: http2Server.HandleStreams failed to read frame: read tcp 192.168.171.33:7050->192.168.171.146:49402: read: connection reset by peer

2018-10-10 09:52:52.153 ICT [common/deliver] Handle -> WARN 752 Error reading from 192.168.171.146:49401: rpc error: code = Canceled desc = context canceled

2018-10-10 09:52:52.154 ICT [orderer/common/server] func1 -> DEBU 753 Closing Deliver stream.

do you have any ideas for my case?",2018-10-10 03:39:45,2018-10-10 03:39:45
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/428542053,https://github.com/hyperledger/caliper/issues/97#issuecomment-428542053,JulienGuo,"@pyraman can you try this solution：
1、add depend_on in yaml , such as zookeeper is depend by kafka , kafka is depend by orderer ,orderer is depend by peer
2、start fabric network by command ： docker-compose docker-compose.yaml up ....
3、delete start command in config.json ( about start network)
4、wait some seconds , more than 20s, then exec node command",2018-10-10 11:49:44,2018-10-10 11:49:44
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/428788647,https://github.com/hyperledger/caliper/issues/97#issuecomment-428788647,pyraman,"@JulienGuo thanks for supporting but I deploy the network manually without docker on different physical machines. 3 zookeepers, 4 brokers, 3 orderers, 4 orgs (one peer peer org).
https://jira.hyperledger.org/plugins/servlet/mobile#issue/FAB-11088/comment/52064",2018-10-11 01:40:10,2018-10-11 01:40:10
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/432224661,https://github.com/hyperledger/caliper/issues/97#issuecomment-432224661,cao0507,"@JulienGuo Hello, why you create a fabric network with kafka and zookeeper cluster but only have one orderer node? What's the significance? And have you test the multiple orderers?",2018-10-23 12:24:57,2018-10-23 12:24:57
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/432225619,https://github.com/hyperledger/caliper/issues/97#issuecomment-432225619,cao0507,"@pyraman Hello, have you tried the caliper with multiple orderer nodes with kafka and zookeeper cluster?",2018-10-23 12:28:13,2018-10-23 12:28:13
https://api.github.com/repos/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/comments/433770034,https://github.com/hyperledger/caliper/issues/97#issuecomment-433770034,pyraman,@cao0507 I've not try with Caliper but I found the reason that the kafka/zookeeper has been configured incorrectly.,2018-10-29 02:30:01,2018-10-29 02:30:01
https://api.github.com/repos/hyperledger/caliper/issues/96,https://api.github.com/repos/hyperledger/caliper/issues/comments/403674108,https://github.com/hyperledger/caliper/issues/96#issuecomment-403674108,haojun,@nklincoln It has not been answered for a long time. I'm not sure if it is a problem of composer or configuration? What do we need to do?,2018-07-10 01:54:57,2018-07-10 01:54:57
https://api.github.com/repos/hyperledger/caliper/issues/96,https://api.github.com/repos/hyperledger/caliper/issues/comments/403765400,https://github.com/hyperledger/caliper/issues/96#issuecomment-403765400,nklincoln,"@ATMarcks - can you confirm if you were deploying the network to the 'Composer Dev Servers' successfully, or the Fabric network created by Caliper please",2018-07-10 09:47:17,2018-07-10 09:47:17
https://api.github.com/repos/hyperledger/caliper/issues/96,https://api.github.com/repos/hyperledger/caliper/issues/comments/403999464,https://github.com/hyperledger/caliper/issues/96#issuecomment-403999464,ATMarcks,"@nklincoln IIRC the network failed to deploy on the Fabric instance created by caliper, but would deploy fine on the composer dev servers that I downloaded with composer separately. With that being said I don't have my configs or any of the logs saved any longer, so feel free to close if you cannot repro",2018-07-10 23:41:18,2018-07-10 23:41:18
https://api.github.com/repos/hyperledger/caliper/issues/96,https://api.github.com/repos/hyperledger/caliper/issues/comments/404091041,https://github.com/hyperledger/caliper/issues/96#issuecomment-404091041,nklincoln,"@ATMarcks thanks - iirc the Composer Dev servers have a larger timeout value set within the configuration to permit the time necessary for the node modules to be pulled when building and deploying the chaincode container. If your business network was quite large, it is possible that the timeout was exceeded in this case.",2018-07-11 08:39:31,2018-07-11 08:39:31
https://api.github.com/repos/hyperledger/caliper/issues/96,https://api.github.com/repos/hyperledger/caliper/issues/comments/434520686,https://github.com/hyperledger/caliper/issues/96#issuecomment-434520686,houqinghui,"@ATMarcks  you can modify CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE = 2-org-1-peer_default in the docker-composer.yaml at /network/fabric/2-org-1-peer.  someone has the same problime, he resolve s it.",2018-10-31 00:39:48,2018-10-31 00:39:48
https://api.github.com/repos/hyperledger/caliper/issues/95,https://api.github.com/repos/hyperledger/caliper/issues/comments/428478780,https://github.com/hyperledger/caliper/issues/95#issuecomment-428478780,panyu4,"Since PR #133 had resolved this issue, I'm closing it.",2018-10-10 08:10:12,2018-10-10 08:10:12
https://api.github.com/repos/hyperledger/caliper/issues/94,https://api.github.com/repos/hyperledger/caliper/issues/comments/401221481,https://github.com/hyperledger/caliper/pull/94#issuecomment-401221481,haojun,"Sorry for the late reply. Thanks for the contribution, but first you should use 'commit -s' to sign the commitment.
And I think the simple benchmark is only an 'example' to show how to write a benchmark. We have another benchmark named smallbank which implements a more comprehensive benchmark including transferring money.",2018-06-29 01:34:24,2018-06-29 01:34:24
https://api.github.com/repos/hyperledger/caliper/issues/94,https://api.github.com/repos/hyperledger/caliper/issues/comments/402036018,https://github.com/hyperledger/caliper/pull/94#issuecomment-402036018,ski2per,"OK, then I will close the pull request",2018-07-03 07:11:05,2018-07-03 07:11:05
https://api.github.com/repos/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/comments/399949937,https://github.com/hyperledger/caliper/issues/93#issuecomment-399949937,EG-easy,i have a same error ,2018-06-25 13:23:04,2018-06-25 13:23:04
https://api.github.com/repos/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/comments/400977528,https://github.com/hyperledger/caliper/issues/93#issuecomment-400977528,jamievaravara,I also have the same error. The channel does not start up and I get the BAD_REQUEST.,2018-06-28 09:43:29,2018-06-28 09:43:29
https://api.github.com/repos/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/comments/403938371,https://github.com/hyperledger/caliper/issues/93#issuecomment-403938371,Ryan-Ouyang,Same error here as well.,2018-07-10 19:26:25,2018-07-10 19:26:25
https://api.github.com/repos/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/comments/404031403,https://github.com/hyperledger/caliper/issues/93#issuecomment-404031403,Miraczpp,"same error...
# create mychannel......
not ok 1 Failed to create channels Error: create status is BAD_REQUEST at channel.organizations.reduce.then.then.then (/opt/caliper/src/fabric/create-channel.js:146:43) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/opt/caliper/src/fabric/create-channel.js:160:19)
    stack: |-
      Error: Failed to create channels Error: create status is BAD_REQUEST
          at channel.organizations.reduce.then.then.then (/opt/caliper/src/fabric/create-channel.js:146:43)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/opt/caliper/src/fabric/create-channel.js:160:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/opt/caliper/src/fabric/create-channel.js:161:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
not ok 2 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/opt/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/opt/caliper/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/opt/caliper/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/opt/caliper/src/comm/bench-flow.js:347:18)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

1..2
# tests 2
# pass  0
# fail  2
",2018-07-11 03:14:00,2018-07-11 03:14:00
https://api.github.com/repos/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/comments/409771516,https://github.com/hyperledger/caliper/issues/93#issuecomment-409771516,lotty02cho,i have a same error too,2018-08-02 00:59:29,2018-08-02 00:59:29
https://api.github.com/repos/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/comments/435306007,https://github.com/hyperledger/caliper/issues/93#issuecomment-435306007,zsh122958,Still not resolved?,2018-11-02 08:27:42,2018-11-02 08:27:42
https://api.github.com/repos/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/comments/436253920,https://github.com/hyperledger/caliper/issues/93#issuecomment-436253920,aklenik,"@starrycheng @lotty02cho @zsh122958 @EG-easy @Miraczpp @Ryan-Ouyang @jamievaravara 
Can you please provide the logs of the orderer node after you encountered the error? (as a GitHub gist preferably)

It is possible, that the orderer is not ready yet to serve the request. In this case, remove the start script from the config, start the network manually, wait a few more seconds, then execute the benchmark.",2018-11-06 13:34:13,2018-11-06 13:34:13
https://api.github.com/repos/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/comments/443566438,https://github.com/hyperledger/caliper/issues/93#issuecomment-443566438,lotty02cho,"@aklenik 
Like you said, I already run my network by using byfn.sh. and I deleted command in config.json. Moreover, I changed `channel.""deployed"": true` to stop deploying mychannel. 
but I encounter below error. 

Here is my orderer logs.
```
$ docker container logs orderer.example.com 
2018-12-03 01:54:50.138 UTC [localconfig] completeInitialization -> INFO 001 Kafka.Version unset, setting to 0.10.2.0
2018-12-03 01:54:50.160 UTC [orderer/common/server] prettyPrintStruct -> INFO 002 Orderer config values:
	General.LedgerType = ""file""
	General.ListenAddress = ""0.0.0.0""
	General.ListenPort = 7050
	General.TLS.Enabled = true
	General.TLS.PrivateKey = ""/var/hyperledger/orderer/tls/server.key""
	General.TLS.Certificate = ""/var/hyperledger/orderer/tls/server.crt""
	General.TLS.RootCAs = [/var/hyperledger/orderer/tls/ca.crt]
	General.TLS.ClientAuthRequired = false
	General.TLS.ClientRootCAs = []
	General.Keepalive.ServerMinInterval = 1m0s
	General.Keepalive.ServerInterval = 2h0m0s
	General.Keepalive.ServerTimeout = 20s
	General.GenesisMethod = ""file""
	General.GenesisProfile = ""SampleInsecureSolo""
	General.SystemChannel = ""test-system-channel-name""
	General.GenesisFile = ""/var/hyperledger/orderer/orderer.genesis.block""
	General.Profile.Enabled = false
	General.Profile.Address = ""0.0.0.0:6060""
	General.LogLevel = ""INFO""
	General.LogFormat = ""%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}""
	General.LocalMSPDir = ""/var/hyperledger/orderer/msp""
	General.LocalMSPID = ""OrdererMSP""
	General.BCCSP.ProviderName = ""SW""
	General.BCCSP.SwOpts.SecLevel = 256
	General.BCCSP.SwOpts.HashFamily = ""SHA2""
	General.BCCSP.SwOpts.Ephemeral = false
	General.BCCSP.SwOpts.FileKeystore.KeyStorePath = ""/var/hyperledger/orderer/msp/keystore""
	General.BCCSP.SwOpts.DummyKeystore =
	General.BCCSP.PluginOpts =
	General.Authentication.TimeWindow = 15m0s
	FileLedger.Location = ""/var/hyperledger/production/orderer""
	FileLedger.Prefix = ""hyperledger-fabric-ordererledger""
	RAMLedger.HistorySize = 1000
	Kafka.Retry.ShortInterval = 5s
	Kafka.Retry.ShortTotal = 10m0s
	Kafka.Retry.LongInterval = 5m0s
	Kafka.Retry.LongTotal = 12h0m0s
	Kafka.Retry.NetworkTimeouts.DialTimeout = 10s
	Kafka.Retry.NetworkTimeouts.ReadTimeout = 10s
	Kafka.Retry.NetworkTimeouts.WriteTimeout = 10s
	Kafka.Retry.Metadata.RetryMax = 3
	Kafka.Retry.Metadata.RetryBackoff = 250ms
	Kafka.Retry.Producer.RetryMax = 3
	Kafka.Retry.Producer.RetryBackoff = 100ms
	Kafka.Retry.Consumer.RetryBackoff = 2s
	Kafka.Verbose = false
	Kafka.Version = 0.10.2.0
	Kafka.TLS.Enabled = false
	Kafka.TLS.PrivateKey = """"
	Kafka.TLS.Certificate = """"
	Kafka.TLS.RootCAs = []
	Kafka.TLS.ClientAuthRequired = false
	Kafka.TLS.ClientRootCAs = []
	Debug.BroadcastTraceDir = """"
	Debug.DeliverTraceDir = """"
2018-12-03 01:54:50.160 UTC [orderer/common/server] initializeServerConfig -> INFO 003 Starting orderer with TLS enabled
2018-12-03 01:54:50.181 UTC [fsblkstorage] newBlockfileMgr -> INFO 004 Getting block information from block storage
2018-12-03 01:54:50.221 UTC [orderer/commmon/multichannel] NewRegistrar -> INFO 005 Starting system channel 'testchainid' with genesis block hash 82312e773f3d76e71927b33d85d25f42596fc5ce113390e1d34666df2151c9f7 and orderer type solo
2018-12-03 01:54:50.222 UTC [orderer/common/server] Start -> INFO 006 Starting orderer:
 Version: 1.2.0
 Commit SHA: cae2ad4
 Go version: go1.10
 OS/Arch: linux/amd64
 Experimental features: false
2018-12-03 01:54:50.222 UTC [orderer/common/server] Start -> INFO 007 Beginning to serve requests
2018-12-03 01:54:52.788 UTC [msp] DeserializeIdentity -> INFO 008 Obtaining identity
2018-12-03 01:54:52.790 UTC [msp] DeserializeIdentity -> INFO 009 Obtaining identity
2018-12-03 01:54:52.795 UTC [msp] DeserializeIdentity -> INFO 00a Obtaining identity
2018-12-03 01:54:52.810 UTC [fsblkstorage] newBlockfileMgr -> INFO 00b Getting block information from block storage
2018-12-03 01:54:52.845 UTC [orderer/commmon/multichannel] newChain -> INFO 00c Created and starting new chain mychannel
2018-12-03 01:54:53.016 UTC [msp] DeserializeIdentity -> INFO 00d Obtaining identity
2018-12-03 01:54:59.254 UTC [msp] DeserializeIdentity -> INFO 00e Obtaining identity
2018-12-03 01:55:06.133 UTC [msp] DeserializeIdentity -> INFO 00f Obtaining identity
2018-12-03 01:55:06.148 UTC [orderer/common/broadcast] Handle -> WARN 010 Error reading from 172.18.0.7:35334: rpc error: code = Canceled desc = context canceled
2018-12-03 01:55:06.151 UTC [common/deliver] Handle -> WARN 011 Error reading from 172.18.0.7:35332: rpc error: code = Canceled desc = context canceled
2018-12-03 01:55:06.167 UTC [msp] DeserializeIdentity -> INFO 012 Obtaining identity
2018-12-03 01:55:09.001 UTC [msp] DeserializeIdentity -> INFO 013 Obtaining identity
2018-12-03 01:55:09.254 UTC [msp] DeserializeIdentity -> INFO 014 Obtaining identity
2018-12-03 01:55:09.263 UTC [msp] DeserializeIdentity -> INFO 015 Obtaining identity
2018-12-03 01:55:09.267 UTC [orderer/common/broadcast] Handle -> WARN 016 Error reading from 172.18.0.7:35376: rpc error: code = Canceled desc = context canceled
2018-12-03 01:55:09.267 UTC [common/deliver] Handle -> WARN 017 Error reading from 172.18.0.7:35374: rpc error: code = Canceled desc = context canceled
2018-12-03 01:55:09.288 UTC [msp] DeserializeIdentity -> INFO 018 Obtaining identity
2018-12-03 01:55:09.288 UTC [msp] DeserializeIdentity -> INFO 019 Obtaining identity
2018-12-03 01:55:14.887 UTC [msp] DeserializeIdentity -> INFO 01a Obtaining identity
2018-12-03 01:55:14.890 UTC [orderer/common/broadcast] Handle -> WARN 01b Error reading from 172.18.0.7:35438: rpc error: code = Canceled desc = context canceled
```",2018-12-03 02:00:08,2018-12-03 06:09:33
https://api.github.com/repos/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/comments/443649688,https://github.com/hyperledger/caliper/issues/93#issuecomment-443649688,aklenik,"@lotty02cho What kind of error do you get? (Since you don't create the channel, I guess it's not a ""can't create mychannel"" error)

Could you also provide the following information:
* Version of the Fabric SDK you use (the backend is v1.2 as I see)
* Versions of additional packages, like grpc, node
* Where is your network (local docker containers, remotely, etc)
* Anything you think is relevant

Also note, that Caliper provides some network examples that are much easier to deploy in my opinion :)",2018-12-03 09:48:24,2018-12-03 09:48:24
https://api.github.com/repos/hyperledger/caliper/issues/92,https://api.github.com/repos/hyperledger/caliper/issues/comments/398629565,https://github.com/hyperledger/caliper/issues/92#issuecomment-398629565,Caoxuyang,I've already started to work on it.,2018-06-20 05:35:25,2018-06-20 05:35:25
https://api.github.com/repos/hyperledger/caliper/issues/92,https://api.github.com/repos/hyperledger/caliper/issues/comments/401755514,https://github.com/hyperledger/caliper/issues/92#issuecomment-401755514,aklenik,"@Caoxuyang Every contribution is welcome of course :) The [CONTRIBUTING.md](https://github.com/hyperledger/caliper/blob/master/CONTRIBUTING.md) file contains some guidelines, and also feel free to ask about implementation details in the [#caliper-contributors](https://chat.hyperledger.org/channel/caliper-contributors) RocketChat channel. ",2018-07-02 10:28:15,2018-07-02 10:28:15
https://api.github.com/repos/hyperledger/caliper/issues/92,https://api.github.com/repos/hyperledger/caliper/issues/comments/411319527,https://github.com/hyperledger/caliper/issues/92#issuecomment-411319527,Caoxuyang,"@aklenik Sorry for late reply, I was busy doing my intern project. :)
Now actually I've finished my extended version of Caliper which can give benchmark tests on Ethereum/Parity network. As long as I have a RPC address of the target network.
I implemented benchmark tests for both with or without smart contranct, and both in the same way which is signing the transaction locally and send signed transaction to the network.
My tps test result of Parity Network is around 3000. And I usually do tests like sending 200000 transactions totally. 
I do willing to contribute, and I will clean up my code first and see what't next.
Thanks a million!
",2018-08-08 07:52:48,2018-08-08 07:52:48
https://api.github.com/repos/hyperledger/caliper/issues/92,https://api.github.com/repos/hyperledger/caliper/issues/comments/428481301,https://github.com/hyperledger/caliper/issues/92#issuecomment-428481301,panyu4,"@Caoxuyang thanks for using caliper as your test tool. If you'd like to contribute, you can submit a PR according to the guidelines :)",2018-10-10 08:19:17,2018-10-10 08:19:17
https://api.github.com/repos/hyperledger/caliper/issues/91,https://api.github.com/repos/hyperledger/caliper/issues/comments/396511830,https://github.com/hyperledger/caliper/issues/91#issuecomment-396511830,haojun,"It's a problem caused by the newest grpc library.
You can  install grpc@1.10.1 manually (using npm install grpc@1.10.1) and try again.",2018-06-12 08:37:58,2018-06-12 08:37:58
https://api.github.com/repos/hyperledger/caliper/issues/88,https://api.github.com/repos/hyperledger/caliper/issues/comments/396511109,https://github.com/hyperledger/caliper/issues/88#issuecomment-396511109,haojun,"The original caliper as well as simplenetwork only support fabric v1.0 at the beginning, and then composer team added a new folder to include files they needed and named as fabric-v11 to distinguish with the old folder. But now caliper have been updated to support fabric v1.1, the names of those two folders may be confusing.",2018-06-12 08:35:12,2018-06-12 08:35:12
https://api.github.com/repos/hyperledger/caliper/issues/88,https://api.github.com/repos/hyperledger/caliper/issues/comments/396858489,https://github.com/hyperledger/caliper/issues/88#issuecomment-396858489,ynamiki,"Thanks, I understand the background.",2018-06-13 08:31:28,2018-06-13 08:31:28
https://api.github.com/repos/hyperledger/caliper/issues/85,https://api.github.com/repos/hyperledger/caliper/issues/comments/396504313,https://github.com/hyperledger/caliper/pull/85#issuecomment-396504313,haojun,"Hi @JulienGuo, you must use -s to sign off your proposal when submitting a PR",2018-06-12 08:10:30,2018-06-12 08:10:30
https://api.github.com/repos/hyperledger/caliper/issues/83,https://api.github.com/repos/hyperledger/caliper/issues/comments/393049576,https://github.com/hyperledger/caliper/pull/83#issuecomment-393049576,haojun,"@feihujiang @Ram-srini 
This is the replacement PR of the old one. I've updated codes according to previous reviews, and change the workload generation a little to avoid conflict txns as much as possible.
Please check it.",2018-05-30 06:49:50,2018-05-30 06:49:50
https://api.github.com/repos/hyperledger/caliper/issues/83,https://api.github.com/repos/hyperledger/caliper/issues/comments/393434260,https://github.com/hyperledger/caliper/pull/83#issuecomment-393434260,Ram-srini,"@haojun - Getting many errors for amalgamate operation in fabric.  Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message: {""error"":Wrong arguments of function amalgamate}). Please check",2018-05-31 07:21:35,2018-05-31 07:21:35
https://api.github.com/repos/hyperledger/caliper/issues/83,https://api.github.com/repos/hyperledger/caliper/issues/comments/393444426,https://github.com/hyperledger/caliper/pull/83#issuecomment-393444426,haojun,@Ram-srini Please remove the old smallbank cc images (whose names as dev-peerxxorgx.example.com-smallbank-v0-xxx) and re-run the test,2018-05-31 07:57:28,2018-05-31 07:57:28
https://api.github.com/repos/hyperledger/caliper/issues/83,https://api.github.com/repos/hyperledger/caliper/issues/comments/393468482,https://github.com/hyperledger/caliper/pull/83#issuecomment-393468482,Ram-srini,"@haojun Where are those files located? I have removed files from ./network/fabric/simplenetwork/crypto-config, still i am getting same error. ",2018-05-31 09:16:06,2018-05-31 09:16:06
https://api.github.com/repos/hyperledger/caliper/issues/83,https://api.github.com/repos/hyperledger/caliper/issues/comments/393470853,https://github.com/hyperledger/caliper/pull/83#issuecomment-393470853,haojun,@Ram-srini It's docker images. you can list images using `docker images` and remove images using `docker rmi`,2018-05-31 09:24:15,2018-05-31 09:24:15
https://api.github.com/repos/hyperledger/caliper/issues/83,https://api.github.com/repos/hyperledger/caliper/issues/comments/393484592,https://github.com/hyperledger/caliper/pull/83#issuecomment-393484592,Ram-srini,@haojun Removing old docker images fixed the amalgamate error. But still there exists the problem in fabric if we generate the frequent and multiple updates on same account. Fabric rejects many transaction if there is frequent and multiple update to same block. Assume the case if tps>accounts. For example number of accounts is 30 and input tps rate 50. ,2018-05-31 10:16:00,2018-05-31 10:16:00
https://api.github.com/repos/hyperledger/caliper/issues/83,https://api.github.com/repos/hyperledger/caliper/issues/comments/393725418,https://github.com/hyperledger/caliper/pull/83#issuecomment-393725418,haojun,"@Ram-srini 
Yes, but that's the nature of fabric, we can't avoid it 100%.",2018-06-01 00:45:36,2018-06-01 00:45:36
https://api.github.com/repos/hyperledger/caliper/issues/82,https://api.github.com/repos/hyperledger/caliper/issues/comments/393086232,https://github.com/hyperledger/caliper/issues/82#issuecomment-393086232,JulienGuo,never reproduce,2018-05-30 09:02:08,2018-05-30 09:02:08
https://api.github.com/repos/hyperledger/caliper/issues/81,https://api.github.com/repos/hyperledger/caliper/issues/comments/393086438,https://github.com/hyperledger/caliper/issues/81#issuecomment-393086438,JulienGuo,"solved :
stop old containers",2018-05-30 09:02:46,2018-05-30 09:02:46
https://api.github.com/repos/hyperledger/caliper/issues/81,https://api.github.com/repos/hyperledger/caliper/issues/comments/394496814,https://github.com/hyperledger/caliper/issues/81#issuecomment-394496814,tingdai,"I encounter the same problem.
I have stopped the old containers but the same error still popped out.",2018-06-04 20:57:10,2018-06-04 20:57:10
https://api.github.com/repos/hyperledger/caliper/issues/81,https://api.github.com/repos/hyperledger/caliper/issues/comments/397229539,https://github.com/hyperledger/caliper/issues/81#issuecomment-397229539,starrycheng,"I have met the same problem. Do you mean 'stop old containers' by using the command `doker container prune`? If not, would you like to provide a more specific solution to your issue?",2018-06-14 09:19:40,2018-06-15 02:48:28
https://api.github.com/repos/hyperledger/caliper/issues/81,https://api.github.com/repos/hyperledger/caliper/issues/comments/400999320,https://github.com/hyperledger/caliper/issues/81#issuecomment-400999320,jamievaravara,"I also have this error, closing the old containers did not solve this. @JulienGuo ",2018-06-28 11:09:41,2018-06-28 11:09:41
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/393085888,https://github.com/hyperledger/caliper/issues/80#issuecomment-393085888,JulienGuo,"solved :
1、do not use root user
2、install node-gyp in global way . Such as install in ubuntu : sudo apt-get install node-gyp",2018-05-30 09:01:01,2018-05-30 09:01:01
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/426547190,https://github.com/hyperledger/caliper/issues/80#issuecomment-426547190,mabatak1,npm install react-native  firebase@4.6.2 --save,2018-10-03 08:04:37,2018-10-03 08:04:37
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/450688968,https://github.com/hyperledger/caliper/issues/80#issuecomment-450688968,biletron,"> 
> 
> npm install react-native firebase@4.6.2 --save

it definitely saved hours of mine. could you please explain the reason behind? (for me just to understand) ",2018-12-31 20:44:55,2018-12-31 20:44:55
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/452573375,https://github.com/hyperledger/caliper/issues/80#issuecomment-452573375,samthomson,"Changing firebase from 4.6.0 to 4.6.2 worked for me too, thanks.
",2019-01-09 05:06:06,2019-01-09 05:06:06
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/453808574,https://github.com/hyperledger/caliper/issues/80#issuecomment-453808574,Nazeerahmad1996,"> npm install react-native firebase@4.6.2 --save

I have been looking for the solution for 1 month.
Thank you so much.
Can you please tell why firebase was causing error?",2019-01-13 07:29:20,2019-01-13 07:29:20
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/459697442,https://github.com/hyperledger/caliper/issues/80#issuecomment-459697442,RevanthSivalingam,"> npm install react-native firebase@4.6.2 --save

Thanks, it's working !!",2019-02-01 11:46:49,2019-02-01 11:46:49
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/468225301,https://github.com/hyperledger/caliper/issues/80#issuecomment-468225301,adimunteanu,"> npm install react-native firebase@4.6.2 --save
This saved my day, it's working!",2019-02-28 10:42:47,2019-02-28 10:42:47
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/469892082,https://github.com/hyperledger/caliper/issues/80#issuecomment-469892082,rjcallahan,"It worked for me as well. THANKS!
",2019-03-05 22:54:21,2019-03-05 22:54:21
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/472217001,https://github.com/hyperledger/caliper/issues/80#issuecomment-472217001,andypapmedialight,"> 

> npm install react-native firebase@4.6.2 --save

BINGO!
Cheers. ",2019-03-12 23:15:54,2019-03-12 23:15:54
https://api.github.com/repos/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/comments/475271754,https://github.com/hyperledger/caliper/issues/80#issuecomment-475271754,komalbarge45,It works for me. Thanks!,2019-03-21 15:16:56,2019-03-21 15:16:56
https://api.github.com/repos/hyperledger/caliper/issues/79,https://api.github.com/repos/hyperledger/caliper/issues/comments/392636978,https://github.com/hyperledger/caliper/issues/79#issuecomment-392636978,JulienGuo,"root@vm10-210-0-10:/opt/gopath/src/github.com/hyperledger/caliper# node-gyp rebuild
gyp info it worked if it ends with ok
gyp info using node-gyp@3.6.2
gyp info using node@8.11.2 | linux | x64
gyp http GET https://nodejs.org/download/release/v8.11.2/node-v8.11.2-headers.tar.gz
gyp http 200 https://nodejs.org/download/release/v8.11.2/node-v8.11.2-headers.tar.gz
gyp http GET https://nodejs.org/download/release/v8.11.2/SHASUMS256.txt
gyp http 200 https://nodejs.org/download/release/v8.11.2/SHASUMS256.txt
gyp info spawn /usr/bin/python2
gyp info spawn args [ '/root/.nvm/versions/node/v8.11.2/lib/node_modules/node-gyp/gyp/gyp_main.py',
gyp info spawn args   'binding.gyp',
gyp info spawn args   '-f',
gyp info spawn args   'make',
gyp info spawn args   '-I',
gyp info spawn args   '/opt/gopath/src/github.com/hyperledger/caliper/build/config.gypi',
gyp info spawn args   '-I',
gyp info spawn args   '/root/.nvm/versions/node/v8.11.2/lib/node_modules/node-gyp/addon.gypi',
gyp info spawn args   '-I',
gyp info spawn args   '/root/.node-gyp/8.11.2/include/node/common.gypi',
gyp info spawn args   '-Dlibrary=shared_library',
gyp info spawn args   '-Dvisibility=default',
gyp info spawn args   '-Dnode_root_dir=/root/.node-gyp/8.11.2',
gyp info spawn args   '-Dnode_gyp_dir=/root/.nvm/versions/node/v8.11.2/lib/node_modules/node-gyp',
gyp info spawn args   '-Dnode_lib_file=/root/.node-gyp/8.11.2/<(target_arch)/node.lib',
gyp info spawn args   '-Dmodule_root_dir=/opt/gopath/src/github.com/hyperledger/caliper',
gyp info spawn args   '-Dnode_engine=v8',
gyp info spawn args   '--depth=.',
gyp info spawn args   '--no-parallel',
gyp info spawn args   '--generator-output',
gyp info spawn args   'build',
gyp info spawn args   '-Goutput_dir=.' ]
gyp: binding.gyp not found (cwd: /opt/gopath/src/github.com/hyperledger/caliper) while trying to load binding.gyp
gyp ERR! configure error 
gyp ERR! stack Error: `gyp` failed with exit code: 1
gyp ERR! stack     at ChildProcess.onCpExit (/root/.nvm/versions/node/v8.11.2/lib/node_modules/node-gyp/lib/configure.js:336:16)
gyp ERR! stack     at emitTwo (events.js:126:13)
gyp ERR! stack     at ChildProcess.emit (events.js:214:7)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)
gyp ERR! System Linux 4.4.0-62-generic
gyp ERR! command ""/root/.nvm/versions/node/v8.11.2/bin/node"" ""/root/.nvm/versions/node/v8.11.2/bin/node-gyp"" ""rebuild""
gyp ERR! cwd /opt/gopath/src/github.com/hyperledger/caliper
gyp ERR! node -v v8.11.2
gyp ERR! node-gyp -v v3.6.2
gyp ERR! not ok 
root@vm10-210-0-10:/opt/gopath/src/github.com/hyperledger/caliper# node-gyp -v
v3.6.2",2018-05-29 02:39:12,2018-05-29 02:39:12
https://api.github.com/repos/hyperledger/caliper/issues/79,https://api.github.com/repos/hyperledger/caliper/issues/comments/393008910,https://github.com/hyperledger/caliper/issues/79#issuecomment-393008910,haojun,That might help: https://docs.npmjs.com/getting-started/fixing-npm-permissions,2018-05-30 02:19:52,2018-05-30 02:19:52
https://api.github.com/repos/hyperledger/caliper/issues/79,https://api.github.com/repos/hyperledger/caliper/issues/comments/393085778,https://github.com/hyperledger/caliper/issues/79#issuecomment-393085778,JulienGuo,"solved : 
1、do not use root user 
2、install node-gyp in global way . Such as install in ubuntu : sudo apt-get install node-gyp
",2018-05-30 09:00:37,2018-05-30 09:00:37
https://api.github.com/repos/hyperledger/caliper/issues/79,https://api.github.com/repos/hyperledger/caliper/issues/comments/395954128,https://github.com/hyperledger/caliper/issues/79#issuecomment-395954128,shaiknoorahamed,"I am facing the same issue..

C:\Users\NoorShaik\Downloads\softwares\callforcode\global-citizen\node_modules\pkcs11js>if not defined npm_config_node_gyp (node ""C:\Program Files\nodejs\node_modules\npm\node_modules\npm-lifecycle\node-gyp-bin\\..\..\node_modules\node-gyp\bin\node-gyp.js"" rebuild )  else (node ""C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\bin\node-gyp.js"" rebuild )
Traceback (most recent call last):
  File ""C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\gyp\gyp_main.py"", line 16, in <module>
    sys.exit(gyp.script_main())
  File ""C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\__init__.py"", line 545, in script_main
    return main(sys.argv[1:])
  File ""C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\__init__.py"", line 538, in main
    return gyp_main(args)
  File ""C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\__init__.py"", line 514, in gyp_main
    options.duplicate_basename_check)
  File ""C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\__init__.py"", line 98, in Load
    generator.CalculateVariables(default_variables, params)
  File ""C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\generator\msvs.py"", line 1916, in CalculateVariables
    generator_flags.get('msvs_version', 'auto'))
  File ""C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\MSVSVersion.py"", line 434, in SelectVisualStudioVersion
    versions = _DetectVisualStudioVersions(version_map[version], 'e' in version)
KeyError: '2014'
gyp ERR! configure error
gyp ERR! stack Error: `gyp` failed with exit code: 1
gyp ERR! stack     at ChildProcess.onCpExit (C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\lib\configure.js:336:16)
gyp ERR! stack     at emitTwo (events.js:126:13)
gyp ERR! stack     at ChildProcess.emit (events.js:214:7)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)
gyp ERR! System Windows_NT 10.0.16299
gyp ERR! command ""C:\\Program Files\\nodejs\\node.exe"" ""C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js"" ""rebuild""
gyp ERR! cwd C:\Users\NoorShaik\Downloads\softwares\callforcode\global-citizen\node_modules\pkcs11js
gyp ERR! node -v v8.10.0
gyp ERR! node-gyp -v v3.6.2
gyp ERR! not ok
npm WARN global-citizens-network@0.0.1 No repository field.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! pkcs11js@1.0.15 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the pkcs11js@1.0.15 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:",2018-06-09 09:17:20,2018-06-09 09:17:20
https://api.github.com/repos/hyperledger/caliper/issues/78,https://api.github.com/repos/hyperledger/caliper/issues/comments/392303180,https://github.com/hyperledger/caliper/issues/78#issuecomment-392303180,GiveMeSunShine,"Please click here to get a complete error log：
[https://github.com/GiveMeSunShine/caliper-ErroLog/blob/master/errlog.log](url)",2018-05-27 03:40:37,2018-05-27 03:40:37
https://api.github.com/repos/hyperledger/caliper/issues/78,https://api.github.com/repos/hyperledger/caliper/issues/comments/428455580,https://github.com/hyperledger/caliper/issues/78#issuecomment-428455580,feihujiang,"Did you encounter this error again? If you did, could you please post your operation?",2018-10-10 06:39:18,2018-10-10 06:39:18
https://api.github.com/repos/hyperledger/caliper/issues/76,https://api.github.com/repos/hyperledger/caliper/issues/comments/390916840,https://github.com/hyperledger/caliper/pull/76#issuecomment-390916840,feihujiang,"Smallbank amalgamate operation doesn't need amount payload, so remove it. @Ram-srini please review.",2018-05-22 09:02:16,2018-05-22 09:02:16
https://api.github.com/repos/hyperledger/caliper/issues/76,https://api.github.com/repos/hyperledger/caliper/issues/comments/390926087,https://github.com/hyperledger/caliper/pull/76#issuecomment-390926087,Ram-srini,Yes amount is not required for amalgamate.,2018-05-22 09:32:02,2018-05-22 09:32:02
https://api.github.com/repos/hyperledger/caliper/issues/75,https://api.github.com/repos/hyperledger/caliper/issues/comments/390922909,https://github.com/hyperledger/caliper/pull/75#issuecomment-390922909,haojun,please sign-off the commit,2018-05-22 09:22:02,2018-05-22 09:22:02
https://api.github.com/repos/hyperledger/caliper/issues/75,https://api.github.com/repos/hyperledger/caliper/issues/comments/404067862,https://github.com/hyperledger/caliper/pull/75#issuecomment-404067862,aklenik,"@haojun PR #116 fixes these bugs, so I guess you can close this PR.",2018-07-11 07:09:29,2018-07-11 07:09:41
https://api.github.com/repos/hyperledger/caliper/issues/75,https://api.github.com/repos/hyperledger/caliper/issues/comments/427796656,https://github.com/hyperledger/caliper/pull/75#issuecomment-427796656,panyu4,"Yes, this is fixed. So close it.",2018-10-08 11:14:54,2018-10-08 11:14:54
https://api.github.com/repos/hyperledger/caliper/issues/73,https://api.github.com/repos/hyperledger/caliper/issues/comments/390917647,https://github.com/hyperledger/caliper/issues/73#issuecomment-390917647,haojun,"Hi, could you try with node v8.10?",2018-05-22 09:04:59,2018-05-22 09:04:59
https://api.github.com/repos/hyperledger/caliper/issues/73,https://api.github.com/repos/hyperledger/caliper/issues/comments/390933488,https://github.com/hyperledger/caliper/issues/73#issuecomment-390933488,aklenik,"It should work with any 8.x version. Are you sure you are using the right runtime? What is the output of the following command(s) inside the caliper directory?
`node -v` or `nvm ls`",2018-05-22 09:56:12,2018-05-22 09:56:41
https://api.github.com/repos/hyperledger/caliper/issues/73,https://api.github.com/repos/hyperledger/caliper/issues/comments/391244694,https://github.com/hyperledger/caliper/issues/73#issuecomment-391244694,JulienGuo,"Problem solved
THKS @aklenik 
It's strange .  I run “nvm use v8.9.4”in a terminal，and run “node -v”in another terminal , it will be show v6.9.5.

guolidong:~$ node -v
v6.9.5
guolidong:~$ nvm ls
->       v6.9.5
         v8.9.4
         system
default -> v6.9 (-> v6.9.5)
node -> stable (-> v8.9.4) (default)
stable -> 8.9 (-> v8.9.4) (default)
iojs -> N/A (default)
lts/* -> lts/carbon (-> N/A)
lts/argon -> v4.9.1 (-> N/A)
lts/boron -> v6.14.1 (-> N/A)
lts/carbon -> v8.11.1 (-> N/A)
guolidong:~$ 



",2018-05-23 07:13:56,2018-05-23 07:13:56
https://api.github.com/repos/hyperledger/caliper/issues/71,https://api.github.com/repos/hyperledger/caliper/issues/comments/390087017,https://github.com/hyperledger/caliper/pull/71#issuecomment-390087017,haojun,"@Ram-srini @feihujiang , this is the PR for smallbank with fabric",2018-05-18 03:56:14,2018-05-18 03:56:14
https://api.github.com/repos/hyperledger/caliper/issues/71,https://api.github.com/repos/hyperledger/caliper/issues/comments/390089380,https://github.com/hyperledger/caliper/pull/71#issuecomment-390089380,Ram-srini,"@haojun Why did you remove amalgamate operation? What is the failure you are getting with amalgamate operation. We can fix that issue. I didn't see any issue with sawtooth, is it failing only on fabric?",2018-05-18 04:15:41,2018-05-18 04:15:41
https://api.github.com/repos/hyperledger/caliper/issues/71,https://api.github.com/repos/hyperledger/caliper/issues/comments/390106770,https://github.com/hyperledger/caliper/pull/71#issuecomment-390106770,haojun,"@Ram-srini 
Amalgamate causes the saving balance of source account becoming 0. So some txns on the source account such as SendPayment will fail since there is no money in that account. 

Although I removed some fund sufficiency checking to avoid such failure caused by business logical, I think a better way is to avoid using amalgamate transaction along with other type of transactions. So if you still want to test amalgamate, you can add a new test round and testing the performance of this operation individually. ",2018-05-18 06:22:34,2018-05-18 06:22:34
https://api.github.com/repos/hyperledger/caliper/issues/71,https://api.github.com/repos/hyperledger/caliper/issues/comments/390590610,https://github.com/hyperledger/caliper/pull/71#issuecomment-390590610,Ram-srini,"@haojun I ran the benchmark test with your chain code of small bank. I got the many errors (500/1500) in the transactions, error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message: {""error"":Could not find specified account}). When this is happening? Is it trying to do operations on those accounts before their creation? Are you creating all accounts first and then performing operations on them?",2018-05-21 08:38:07,2018-05-21 08:38:07
https://api.github.com/repos/hyperledger/caliper/issues/71,https://api.github.com/repos/hyperledger/caliper/issues/comments/390605112,https://github.com/hyperledger/caliper/pull/71#issuecomment-390605112,haojun,"@Ram-srini 
1. The error happens when operating on an account that has not been created. 
2. I have not change the logic of workload generation of smallbankOperations.js. So account should be created first.

I've not encountered so many errors in my test (usually less than 20 errors for 4000 txns). Can you try to lower the 'tps' of the rate controller to see if the situation gets better?

I guess it is because the process of create-account txns have not been finished while following operations were submitted. One way to prevent it is to design a two phase test which includes two Caliper test rounds, the first round is to only test creating accounts, and the second is to test other operations. Since the second test round only starts after the first round has been finished, such errors should be avoided. ",2018-05-21 09:39:15,2018-05-21 09:39:15
https://api.github.com/repos/hyperledger/caliper/issues/71,https://api.github.com/repos/hyperledger/caliper/issues/comments/390607135,https://github.com/hyperledger/caliper/pull/71#issuecomment-390607135,Ram-srini,"@haojun small bank payload generation logic will first generate the account creation and later the other operations to those accounts. You shouldn't get the account shouldn't be exist error later. Not sure how fabric handles it. In sawtooth i am not getting any such error. In sawtooth if I submit transaction at higher rate, validator will throw exception(http status 429) of queue full error and those transactions are moving to failed state. Exception has to be handled and resubmit those transactions again.",2018-05-21 09:48:04,2018-05-21 09:48:04
https://api.github.com/repos/hyperledger/caliper/issues/71,https://api.github.com/repos/hyperledger/caliper/issues/comments/390627826,https://github.com/hyperledger/caliper/pull/71#issuecomment-390627826,haojun,"@Ram-srini 
Let's assume the first create_account transaction is submitted at 0s and committed on the ledger at 1s. And a send_payment transaction is submitted at 0.5s, endorsor gets the txns and try to lookup account from the ledger but it can not get it, so it will return an error to the client. Until now, fabric adapter won't do any re-submit for any error.

Does sawtooth adapter support re-submitting?",2018-05-21 11:25:58,2018-05-21 11:25:58
https://api.github.com/repos/hyperledger/caliper/issues/71,https://api.github.com/repos/hyperledger/caliper/issues/comments/390900708,https://github.com/hyperledger/caliper/pull/71#issuecomment-390900708,haojun,"Summarize the current discussion:
Smallbank is a benchmark designed with *batch* which is supported by some blockchain systems such as Sawtooth. While Fabric does not support *batch*, here are some options:
1. Submit txns in batch as usual without any special handling, which may cause many txn failures as explained in the README
2. Simulate the batch behavior, a txn should not be submitted until the previous txn in the same batch has been committed (the client has gotten the notification from the event hub). That could resolve txn conflict in the same batch, but has no effect on txns across batch. This would also increase delay for fabric, so not sure if it's a proper way.
3. Modify the test flow to lower the chance of txns conflict as mentioned before, which makes the benchmark more friendly to blockchain systems without batch support. But this may reduce advantage for blockchain systems which support batch.
4. Only apply this benchmark for blockchain systems which support batch. For other systems such as fabric, we should notice users that batch is not supported and recommend them to disable batch feature by setting *txPerBatch* to 1.
5. Other options??",2018-05-22 08:07:00,2018-05-22 08:17:04
https://api.github.com/repos/hyperledger/caliper/issues/71,https://api.github.com/repos/hyperledger/caliper/issues/comments/393049731,https://github.com/hyperledger/caliper/pull/71#issuecomment-393049731,haojun,A new PR is created to replace this one. Closed.,2018-05-30 06:50:35,2018-05-30 06:50:35
https://api.github.com/repos/hyperledger/caliper/issues/70,https://api.github.com/repos/hyperledger/caliper/issues/comments/393204305,https://github.com/hyperledger/caliper/issues/70#issuecomment-393204305,charlieporth1,I've got that same error,2018-05-30 15:23:23,2018-05-30 15:23:23
https://api.github.com/repos/hyperledger/caliper/issues/70,https://api.github.com/repos/hyperledger/caliper/issues/comments/393801628,https://github.com/hyperledger/caliper/issues/70#issuecomment-393801628,haojun,"I've no idea about it...... but I found a similar issue here:
https://github.com/grpc/grpc-node/issues/341

Not sure if it can solve your problem.",2018-06-01 08:05:58,2018-06-01 08:05:58
https://api.github.com/repos/hyperledger/caliper/issues/70,https://api.github.com/repos/hyperledger/caliper/issues/comments/398439245,https://github.com/hyperledger/caliper/issues/70#issuecomment-398439245,nicolasnoble,"gRPC author here - if anyone can provide a reproducible environment where this happens, please do so.",2018-06-19 15:23:13,2018-06-19 15:23:13
https://api.github.com/repos/hyperledger/caliper/issues/70,https://api.github.com/repos/hyperledger/caliper/issues/comments/431431156,https://github.com/hyperledger/caliper/issues/70#issuecomment-431431156,Titogelo,"I've got the same error while creating a channel as well. I am running the balance-transfer tutorial from Fabric. While invoking the API call that creates a channel I get this error back

```
node: symbol lookup error: /home/****/hyperledger/fabric-samples/balance-transfer/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64-glibc/grpc_node.node: undefined symbol: SSL_library_init
```",2018-10-19 17:03:59,2018-10-19 17:03:59
https://api.github.com/repos/hyperledger/caliper/issues/70,https://api.github.com/repos/hyperledger/caliper/issues/comments/431572477,https://github.com/hyperledger/caliper/issues/70#issuecomment-431572477,aklenik,@Titogelo This behavior isn't related to Caliper as it turned out in the above-mentioned issue. Have you tried the proposed fixes starting from [this comment](https://github.com/grpc/grpc-node/issues/341#issuecomment-401504537)?,2018-10-20 11:33:55,2018-10-20 11:33:55
https://api.github.com/repos/hyperledger/caliper/issues/70,https://api.github.com/repos/hyperledger/caliper/issues/comments/431642787,https://github.com/hyperledger/caliper/issues/70#issuecomment-431642787,nicolasnoble,Note that this should've been fixed by Ubuntu.,2018-10-21 06:30:25,2018-10-21 06:30:25
https://api.github.com/repos/hyperledger/caliper/issues/69,https://api.github.com/repos/hyperledger/caliper/issues/comments/390575941,https://github.com/hyperledger/caliper/pull/69#issuecomment-390575941,haojun,"@Hatuw 
Thanks for your contribution.
We are now considering changing the directory structure for benchmarks, moving main.js outside is an option and we'd like to consider it together later.",2018-05-21 07:30:01,2018-05-21 07:30:01
https://api.github.com/repos/hyperledger/caliper/issues/69,https://api.github.com/repos/hyperledger/caliper/issues/comments/390887777,https://github.com/hyperledger/caliper/pull/69#issuecomment-390887777,Hatuw,yet..how to contribute to this project? It seems that it is unable to pass the checks. Tks~,2018-05-22 07:17:21,2018-05-22 07:17:21
https://api.github.com/repos/hyperledger/caliper/issues/69,https://api.github.com/repos/hyperledger/caliper/issues/comments/390888749,https://github.com/hyperledger/caliper/pull/69#issuecomment-390888749,haojun,You should using 'git commit -s' to sign off your commit.,2018-05-22 07:21:24,2018-05-22 07:21:24
https://api.github.com/repos/hyperledger/caliper/issues/69,https://api.github.com/repos/hyperledger/caliper/issues/comments/428159275,https://github.com/hyperledger/caliper/pull/69#issuecomment-428159275,panyu4,Since there's no activity there I'm closing this PR.,2018-10-09 11:37:41,2018-10-09 11:37:41
https://api.github.com/repos/hyperledger/caliper/issues/67,https://api.github.com/repos/hyperledger/caliper/issues/comments/390640795,https://github.com/hyperledger/caliper/issues/67#issuecomment-390640795,nklincoln,"Hi,
i'd recommend upping the Composer version in the package to 0.19.5 and re-installing.

It would be worth inspecting the peer logs, as it looks like the channel is not being created - there has been a change in Docker with regards to the naming of the host config ... which has changed to being hyphen delimited. If that is the case the docker-compose.yaml file will need a slight tweak ",2018-05-21 12:32:23,2018-05-21 12:32:23
https://api.github.com/repos/hyperledger/caliper/issues/66,https://api.github.com/repos/hyperledger/caliper/issues/comments/387669865,https://github.com/hyperledger/caliper/pull/66#issuecomment-387669865,haojun,"@Ram-srini @feihujiang 
I've updated the code to correct the method of calculating txns count for batch. 
Please note now in case of batch, the txNumb as well as tps in configuration file are also used to represent txn's count (rather than batch's count) as in no-batch case. 
I also update the Sawtooth code to obey eslint rules. ",2018-05-09 08:51:44,2018-05-09 08:51:44
https://api.github.com/repos/hyperledger/caliper/issues/66,https://api.github.com/repos/hyperledger/caliper/issues/comments/387679865,https://github.com/hyperledger/caliper/pull/66#issuecomment-387679865,Ram-srini,"@haojun 
Is it requires any changes to simple benchmark config file? As it is not having multiple transactions in a batch. Is simple benchmark use case works as expected with you changes?",2018-05-09 09:27:19,2018-05-09 09:27:19
https://api.github.com/repos/hyperledger/caliper/issues/66,https://api.github.com/repos/hyperledger/caliper/issues/comments/387680646,https://github.com/hyperledger/caliper/pull/66#issuecomment-387680646,haojun,"@Ram-srini 
Nothing to change for simple benchmark, the current code is compatible with no-batch case",2018-05-09 09:30:14,2018-05-09 09:30:14
https://api.github.com/repos/hyperledger/caliper/issues/66,https://api.github.com/repos/hyperledger/caliper/issues/comments/388248046,https://github.com/hyperledger/caliper/pull/66#issuecomment-388248046,Ram-srini,"@haojun if we specify txNumber and tps in terms of transactions then how caliper will submit the transaction rate? For example suppose txNumber=1000, tps=100 and if i choose txnPerBatch=10, will caliper submits at a rate 10batches/sec? And what if change txnPerBatch=20, whether rate change to 5batches/sec? ",2018-05-11 03:18:00,2018-05-11 03:18:00
https://api.github.com/repos/hyperledger/caliper/issues/66,https://api.github.com/repos/hyperledger/caliper/issues/comments/388288982,https://github.com/hyperledger/caliper/pull/66#issuecomment-388288982,haojun,"@Ram-srini yes, the rate is 10 and 5 batches/sec for your cases. Actually, rate controllers have no idea about batch, they only control the speed according to the configured value as well as the number of txns that have already been submitted. 
You can find a submitCallback which is added in the context and used to count the number of txns once new txns are submitted (in case of batch, multiple txns will be counted).",2018-05-11 07:49:33,2018-05-11 07:49:33
https://api.github.com/repos/hyperledger/caliper/issues/66,https://api.github.com/repos/hyperledger/caliper/issues/comments/389711762,https://github.com/hyperledger/caliper/pull/66#issuecomment-389711762,haojun,@feihujiang  Fixed,2018-05-17 01:02:00,2018-05-17 01:02:00
https://api.github.com/repos/hyperledger/caliper/issues/66,https://api.github.com/repos/hyperledger/caliper/issues/comments/389732846,https://github.com/hyperledger/caliper/pull/66#issuecomment-389732846,feihujiang,"Mark, calculate batch throughput for sawtooth.",2018-05-17 03:24:44,2018-05-17 03:24:44
https://api.github.com/repos/hyperledger/caliper/issues/65,https://api.github.com/repos/hyperledger/caliper/issues/comments/387384411,https://github.com/hyperledger/caliper/issues/65#issuecomment-387384411,dpdornseifer,Installing the 1.1 libs fixed the error```npm install fabric-ca-client@1.1.0 fabric-client@1.1.0```,2018-05-08 12:23:34,2018-05-08 12:26:13
https://api.github.com/repos/hyperledger/caliper/issues/65,https://api.github.com/repos/hyperledger/caliper/issues/comments/406580165,https://github.com/hyperledger/caliper/issues/65#issuecomment-406580165,AnwinAshok,"or else you can Reinstall node report module inside the tape-promise

 1.Change directory into the tape-promise:

    cd /usr/lib/node_modules/tape-promise

2.Reinstall node report locally inside the tape-promise:

    sudo npm install node-report --unsafe-perm

Note : Don't put -g param in sudo npm install. Make the installation local to the tape-promise itself.

The node-report will run make with g++ to compile something (which for some reason was not run during tape-promise installation) and it just works...",2018-07-20 12:02:06,2018-07-20 12:02:06
https://api.github.com/repos/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/comments/428453516,https://github.com/hyperledger/caliper/issues/64#issuecomment-428453516,feihujiang,"Could you please list the version of your fabric and composer. @Akash76 
Prior to running performance tests, it is important to note that the current framework has been written to support:
Hyperledger Composer v0.19.0 and higher
Hyperledger Fabric v1.1.0

The framework has been verified with the following dependencies:
    ""composer-admin"": ""0.19.0"",
    ""composer-client"": ""0.19.0"",
    ""composer-common"": ""0.19.0"",
    ""fabric-ca-client"": ""1.1.0"",
    ""fabric-client"": ""1.1.0"",",2018-10-10 06:29:28,2018-10-10 06:29:28
https://api.github.com/repos/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/comments/432147498,https://github.com/hyperledger/caliper/issues/64#issuecomment-432147498,sidraamalik,"> Could you please list the version of your fabric and composer. @Akash76
> Prior to running performance tests, it is important to note that the current framework has been written to support:
> Hyperledger Composer v0.19.0 and higher
> Hyperledger Fabric v1.1.0
> 
> The framework has been verified with the following dependencies:
> ""composer-admin"": ""0.19.0"",
> ""composer-client"": ""0.19.0"",
> ""composer-common"": ""0.19.0"",
> ""fabric-ca-client"": ""1.1.0"",
> ""fabric-client"": ""1.1.0"",

I am getting  the same error.... ibhave several times downloaded and installed the dependencies with same version as mentioned.
",2018-10-23 08:25:46,2018-10-23 08:25:46
https://api.github.com/repos/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/comments/432207107,https://github.com/hyperledger/caliper/issues/64#issuecomment-432207107,sidraamalik,"> ![screenshot from 2018-05-08 15-16-31](https://user-images.githubusercontent.com/29705984/39750469-f4ac6206-52d2-11e8-8ed0-0400d905613a.png)
> 
> I have made all the necessary changes in my config files but it has raised this error...Failed to load connector module ""composer-connector-undefined""...
> The expected output is it have to show the performance results of my application...

were you able to solve this issue?",2018-10-23 11:23:17,2018-10-23 11:23:17
https://api.github.com/repos/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/comments/434525143,https://github.com/hyperledger/caliper/issues/64#issuecomment-434525143,houqinghui,@Akash76  @ @sidraamalik   have you solve the problem ?    are you sure to install the composer correctly?,2018-10-31 01:06:27,2018-10-31 01:06:27
https://api.github.com/repos/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/comments/434527199,https://github.com/hyperledger/caliper/issues/64#issuecomment-434527199,sidraamalik,"I havent been able to install it. Can you tell me the and steps of
installing each component on ubuntu ?

On Wed, 31 Oct. 2018, 12:06 houqinghui <notifications@github.com wrote:

> @Akash76 <https://github.com/Akash76> @ @sidraamalik
> <https://github.com/sidraamalik> have you solve the problem ? are you
> sure to install the composer correctly?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/hyperledger/caliper/issues/64#issuecomment-434525143>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AZqvmwtlFWkelux61Sv-7nf-hmjqkc0rks5uqPeVgaJpZM4T2WCr>
> .
>
",2018-10-31 01:18:06,2018-10-31 01:18:06
https://api.github.com/repos/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/comments/434539828,https://github.com/hyperledger/caliper/issues/64#issuecomment-434539828,houqinghui,"@sidraamalik   i suggest   you should  run benchmark test of fabric first ,  if successful, than  you run the test of composer that is based on fabric.  after a time , i will list the steps of running the composer test.",2018-10-31 02:33:13,2018-10-31 02:33:13
https://api.github.com/repos/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/comments/434540122,https://github.com/hyperledger/caliper/issues/64#issuecomment-434540122,houqinghui,"![image](https://user-images.githubusercontent.com/13465812/47762653-82d81700-dcf8-11e8-8a02-cb8dd7bb25dd.png)
follow these steps to run fabric test. [https://github.com/hyperledger/caliper]",2018-10-31 02:35:07,2018-10-31 02:35:07
https://api.github.com/repos/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/comments/438772205,https://github.com/hyperledger/caliper/issues/64#issuecomment-438772205,aklenik,"@nklincoln @Akash76 @sidraamalik The exact steps to run the sample Composer-based benchmark:
```
git clone https://github.com/hyperledger/caliper.git
cd caliper
npm install
npm install grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0 composer-admin@0.19.0 composer-client@0.19.0 composer-common@0.19.0
cd benchmark/composer
node main.js
```

If the error still persists, please provide some information about your environment: 
* `npm ls grpc fabric-ca-client fabric-client composer-admin composer-client composer-common`
* `node --version`
* OS version
* the exact steps/modifications performed to reproduce the error starting from `git clone`",2018-11-14 18:42:06,2018-11-14 18:42:06
https://api.github.com/repos/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/comments/463014893,https://github.com/hyperledger/caliper/issues/64#issuecomment-463014893,panyu4,"Since there are no more activities, it will be closed. ",2019-02-13 01:22:26,2019-02-13 01:22:26
https://api.github.com/repos/hyperledger/caliper/issues/61,https://api.github.com/repos/hyperledger/caliper/issues/comments/387221657,https://github.com/hyperledger/caliper/pull/61#issuecomment-387221657,aklenik,@haojun Here are the rate controller-related changes.,2018-05-07 22:06:51,2018-05-07 22:06:51
https://api.github.com/repos/hyperledger/caliper/issues/55,https://api.github.com/repos/hyperledger/caliper/issues/comments/386485830,https://github.com/hyperledger/caliper/pull/55#issuecomment-386485830,haojun,"hi @subhodi 

There are still some warnings/errors as below, please fix it, thanks.
(BTW: You can use log defined in src/comm/util.js to replace console.log to remove the no-console warning.)

haojun@ecs-haojun:~/project/caliper$ ./node_modules/.bin/eslint .

/home/haojun/project/caliper/benchmark/drm/main.js
  50:9   warning  Unexpected console statement  no-console
  62:13  warning  Unexpected console statement  no-console
  70:9   warning  Unexpected console statement  no-console

/home/haojun/project/caliper/benchmark/simple/main.js
  50:9   warning  Unexpected console statement  no-console
  62:13  warning  Unexpected console statement  no-console
  70:9   warning  Unexpected console statement  no-console

/home/haojun/project/caliper/benchmark/simple/open.js
  20:22  error  [""money""] is better written in dot notation  dot-notation
  27:1   error  Missing JSDoc comment                        require-jsdoc
  37:1   error  Missing JSDoc comment                        require-jsdoc",2018-05-04 01:40:14,2018-05-04 01:40:14
https://api.github.com/repos/hyperledger/caliper/issues/55,https://api.github.com/repos/hyperledger/caliper/issues/comments/386499360,https://github.com/hyperledger/caliper/pull/55#issuecomment-386499360,subhodi,"@haojun Sure, Working on it. Thanks for the suggestions.  ",2018-05-04 03:48:08,2018-05-04 03:48:08
https://api.github.com/repos/hyperledger/caliper/issues/55,https://api.github.com/repos/hyperledger/caliper/issues/comments/386502953,https://github.com/hyperledger/caliper/pull/55#issuecomment-386502953,subhodi,"@haojun I have fixed all the warnings and errors. Please review.
I can help you with more contribution, let me know if there is any.",2018-05-04 04:27:30,2018-05-04 04:27:30
https://api.github.com/repos/hyperledger/caliper/issues/52,https://api.github.com/repos/hyperledger/caliper/issues/comments/385917022,https://github.com/hyperledger/caliper/pull/52#issuecomment-385917022,haojun,"@davidkhala 
Thanks for the contribution, you should use 'git commit -s ...' to sign-off the committment",2018-05-02 09:22:19,2018-05-02 09:22:19
https://api.github.com/repos/hyperledger/caliper/issues/52,https://api.github.com/repos/hyperledger/caliper/issues/comments/386000270,https://github.com/hyperledger/caliper/pull/52#issuecomment-386000270,davidkhala,noted，will update later,2018-05-02 14:37:46,2018-05-02 14:37:46
https://api.github.com/repos/hyperledger/caliper/issues/51,https://api.github.com/repos/hyperledger/caliper/issues/comments/386238557,https://github.com/hyperledger/caliper/pull/51#issuecomment-386238557,feihujiang,@haojun please squash your commits.,2018-05-03 09:27:26,2018-05-03 09:27:26
https://api.github.com/repos/hyperledger/caliper/issues/49,https://api.github.com/repos/hyperledger/caliper/issues/comments/385136483,https://github.com/hyperledger/caliper/issues/49#issuecomment-385136483,haojun,"We could do that, but it's not high priority.",2018-04-28 03:28:52,2018-04-28 03:28:52
https://api.github.com/repos/hyperledger/caliper/issues/49,https://api.github.com/repos/hyperledger/caliper/issues/comments/386549076,https://github.com/hyperledger/caliper/issues/49#issuecomment-386549076,aklenik,"@michielmulders in the meantime you can deploy nodejs CCs from the official fabric-samples repo. Note, that currently you have to provide absolute path to the cc dir. The fabric sdk should take care of the rest. (haven't tested it yet) ",2018-05-04 09:28:05,2018-05-04 09:28:05
https://api.github.com/repos/hyperledger/caliper/issues/49,https://api.github.com/repos/hyperledger/caliper/issues/comments/404289293,https://github.com/hyperledger/caliper/issues/49#issuecomment-404289293,aklenik,"@michielmulders @haojun PR #116 fixes this problem, so the issue can be closed",2018-07-11 19:50:07,2018-07-11 19:50:07
https://api.github.com/repos/hyperledger/caliper/issues/49,https://api.github.com/repos/hyperledger/caliper/issues/comments/427785886,https://github.com/hyperledger/caliper/issues/49#issuecomment-427785886,aklenik,@panyu4 This issue has been resolved for some time now,2018-10-08 10:27:28,2018-10-08 10:27:28
https://api.github.com/repos/hyperledger/caliper/issues/49,https://api.github.com/repos/hyperledger/caliper/issues/comments/428017055,https://github.com/hyperledger/caliper/issues/49#issuecomment-428017055,panyu4,@aklenik  OK，it can be closed.,2018-10-09 00:05:40,2018-10-09 00:05:40
https://api.github.com/repos/hyperledger/caliper/issues/48,https://api.github.com/repos/hyperledger/caliper/issues/comments/384893356,https://github.com/hyperledger/caliper/issues/48#issuecomment-384893356,aklenik,I can help in the refactoring if you want to split the work. ,2018-04-27 07:48:20,2018-04-27 07:48:20
https://api.github.com/repos/hyperledger/caliper/issues/48,https://api.github.com/repos/hyperledger/caliper/issues/comments/384914652,https://github.com/hyperledger/caliper/issues/48#issuecomment-384914652,haojun,"That would be very helpful. 
I'm working on comm folder now, can you help with the fabric adapter?",2018-04-27 09:16:55,2018-04-27 09:16:55
https://api.github.com/repos/hyperledger/caliper/issues/48,https://api.github.com/repos/hyperledger/caliper/issues/comments/384943028,https://github.com/hyperledger/caliper/issues/48#issuecomment-384943028,aklenik,"Of course, I'll start working on it",2018-04-27 11:26:20,2018-04-27 11:26:20
https://api.github.com/repos/hyperledger/caliper/issues/48,https://api.github.com/repos/hyperledger/caliper/issues/comments/385421608,https://github.com/hyperledger/caliper/issues/48#issuecomment-385421608,nklincoln,"Happy to assist with any further linting changes - just let me know which items you would like tackled 👍 
",2018-04-30 14:49:06,2018-04-30 14:49:06
https://api.github.com/repos/hyperledger/caliper/issues/48,https://api.github.com/repos/hyperledger/caliper/issues/comments/385865921,https://github.com/hyperledger/caliper/issues/48#issuecomment-385865921,subhodi,@haojun i can help with you with linting bechmark/simple directory files. Not sure why those are ignored.,2018-05-02 05:05:08,2018-05-02 05:23:46
https://api.github.com/repos/hyperledger/caliper/issues/48,https://api.github.com/repos/hyperledger/caliper/issues/comments/385891501,https://github.com/hyperledger/caliper/issues/48#issuecomment-385891501,haojun,"@subhodi OK, that's great",2018-05-02 07:41:32,2018-05-02 07:41:32
https://api.github.com/repos/hyperledger/caliper/issues/48,https://api.github.com/repos/hyperledger/caliper/issues/comments/386195500,https://github.com/hyperledger/caliper/issues/48#issuecomment-386195500,subhodi,"i think arrow functions should be preferred over normal functions. If then eslint rule `""prefer-arrow-callback"":""warn""`  should be updated",2018-05-03 05:34:49,2018-05-03 05:34:49
https://api.github.com/repos/hyperledger/caliper/issues/48,https://api.github.com/repos/hyperledger/caliper/issues/comments/387227623,https://github.com/hyperledger/caliper/issues/48#issuecomment-387227623,aklenik,@haojun Fabric lint fixes in #62 ,2018-05-07 22:35:32,2018-05-07 22:35:32
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/384720823,https://github.com/hyperledger/caliper/pull/47#issuecomment-384720823,Ram-srini,@feihujiang @haojun Please review the code changes for new small bank benchmark use case.,2018-04-26 17:20:03,2018-04-26 17:20:03
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/384891562,https://github.com/hyperledger/caliper/pull/47#issuecomment-384891562,haojun,"@Ram-srini 
ESlint is used in the latest version to check the JS code, and now it's based on manually check. 
So please run it manually to ensure passing the check before merging, thanks.",2018-04-27 07:40:12,2018-04-27 07:40:12
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/384905801,https://github.com/hyperledger/caliper/pull/47#issuecomment-384905801,nklincoln,"@Ram-srini - licence headers should now be Apache 2.0, the inbound Travis build process will start to check those headers as part of the build and fail if either not present or incorrect",2018-04-27 08:41:00,2018-04-27 08:41:00
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/385307023,https://github.com/hyperledger/caliper/pull/47#issuecomment-385307023,Ram-srini,"@haojun which coding style should i use it for ESlint?
ESLint initialization asks for following arguments, it may vary based on the code style.
? How would you like to configure ESLint? 
? Which style guide do you want to follow? 
? What format do you want your config file to be in?",2018-04-30 03:24:44,2018-04-30 03:24:44
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/385307149,https://github.com/hyperledger/caliper/pull/47#issuecomment-385307149,Ram-srini,@nklincoln Any specific format you recommend to add the license text? ,2018-04-30 03:26:19,2018-04-30 03:26:19
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/385370104,https://github.com/hyperledger/caliper/pull/47#issuecomment-385370104,nklincoln,"@Ram-srini 
You should be able to run the linting directly via `npm run lint` from the root directory. This will pick up the existing linting file and use it to check against the code base. If you have an eslint plugin for your code editor, it should also detect the linting file and show any issues locally in your files.

For the license file, there is a standard file header for the Apache 2.0 which is:

```
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
```",2018-04-30 11:16:26,2018-04-30 11:16:26
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/386233515,https://github.com/hyperledger/caliper/pull/47#issuecomment-386233515,feihujiang,"@Ram-srini I tried to run this benchmark use case, but it couldn't get 'success' invoke_status. The output is '[Transaction Info]  - Submitted: 20 Succ: 0 Fail: 20 Unfinished: 0'.",2018-05-03 09:06:21,2018-05-03 09:06:21
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/386235257,https://github.com/hyperledger/caliper/pull/47#issuecomment-386235257,feihujiang,"And please use 'const log          = require('../util.js').log' to disable ""unexpected console statement""",2018-05-03 09:13:37,2018-05-03 09:13:37
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/386243663,https://github.com/hyperledger/caliper/pull/47#issuecomment-386243663,Ram-srini,"@feihujiang I have fixed that error, now it is working please try again.",2018-05-03 09:49:38,2018-05-03 09:49:38
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/386247754,https://github.com/hyperledger/caliper/pull/47#issuecomment-386247754,haojun,"@Ram-srini ,
After reading the code, I've some questions:
1. It seems this test case don't support testing with multiple clients since different clients will create accounts with same identities. Why doing like that?
2. Now a single invoke_status is returned even for batch with multiple txns. That means those txns will be treated as one transaction when calculating performance metrics. Is it what you want?
3. I'm not sure how to implement it with fabric, since fabric don't support batch now (am i right?). I have some ideas now, current blockchain interfaces may have to be changed. But anyway, we can handle it later .",2018-05-03 10:07:02,2018-05-03 10:07:02
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/386260936,https://github.com/hyperledger/caliper/pull/47#issuecomment-386260936,Ram-srini,@feihujiang Fixed the lint warnings related to console.log as well.,2018-05-03 11:10:42,2018-05-03 11:10:42
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/386264702,https://github.com/hyperledger/caliper/pull/47#issuecomment-386264702,Ram-srini,"@haojun 
My Answers to your questions in order
1. Once test is started it creates number of accounts specified and remaining operations are performed on those operations. Suppose the config file contains txNumber =10, accounts =10 and txnPerBatch=10 means it is 10 batches will be created and first batch with 10 transactions are create account operation and remaining 9 batches means 90 transactions are random operations(send payment, writecheck, etc) on those accounts. I have used  no_accounts global variable in smallbankOperations.js. If clients are calling one by one then it should create the different accounts. How multiple multiple clients will call smallbankOperations.js in parallel or serially?
2. Batch statuses response will have number transactions status in that batch, it should be completed/pending. We should change framework to handle the batches and come up with right tps count. What if i send the invoke_status with additional parameter says txnCount which will have transactions count in that batch and it will be used for the tps calculation.
3. Yes for fabric we should submit one transactions at time because it doesn't support batches. In smallbankOperations we are sending array of json objects and while invoking smart contract we should 1 transactions at a time.

 ",2018-05-03 11:29:31,2018-05-03 11:29:31
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/386481171,https://github.com/hyperledger/caliper/pull/47#issuecomment-386481171,haojun,"@Ram-srini If you set 'clients.number' more than 1, multiple clients will be launched to run the test (call smallbankOperations.js) in parallel. That is to improve clients' own performance, because nodejs runs in single thread. And since clients are actually new forked child processes, they don't share the global variable.

Regarding 2 and 3, I can help to change the framework after merging this PR",2018-05-04 01:05:17,2018-05-04 01:06:29
https://api.github.com/repos/hyperledger/caliper/issues/47,https://api.github.com/repos/hyperledger/caliper/issues/comments/387279639,https://github.com/hyperledger/caliper/pull/47#issuecomment-387279639,Ram-srini,"@haojun @feihujiang 
I have fixed the issue with running multiple client. i have used the pid approach to generate the unique account numbers. Please review the changes",2018-05-08 04:18:14,2018-05-08 04:18:14
https://api.github.com/repos/hyperledger/caliper/issues/46,https://api.github.com/repos/hyperledger/caliper/issues/comments/386045682,https://github.com/hyperledger/caliper/pull/46#issuecomment-386045682,nklincoln,updated the PR to merge with latest and include the required npm install of grpc to ensure e2e tests pass for fabric benchmarks,2018-05-02 16:52:08,2018-05-02 16:52:08
https://api.github.com/repos/hyperledger/caliper/issues/43,https://api.github.com/repos/hyperledger/caliper/issues/comments/384915658,https://github.com/hyperledger/caliper/issues/43#issuecomment-384915658,haojun,"Never met that before, I will try the PR to see if i can reproduce it.",2018-04-27 09:21:14,2018-04-27 09:21:14
https://api.github.com/repos/hyperledger/caliper/issues/43,https://api.github.com/repos/hyperledger/caliper/issues/comments/385132779,https://github.com/hyperledger/caliper/issues/43#issuecomment-385132779,haojun,"The problem is caused by a bug in runDuraion, I've fixed it by PR #50 ",2018-04-28 02:20:28,2018-04-28 02:20:28
https://api.github.com/repos/hyperledger/caliper/issues/43,https://api.github.com/repos/hyperledger/caliper/issues/comments/386809043,https://github.com/hyperledger/caliper/issues/43#issuecomment-386809043,filippoboiani,Thank you! I also had the same problem!,2018-05-05 14:20:28,2018-05-05 14:20:28
https://api.github.com/repos/hyperledger/caliper/issues/43,https://api.github.com/repos/hyperledger/caliper/issues/comments/401752654,https://github.com/hyperledger/caliper/issues/43#issuecomment-401752654,aklenik,"After some extensive (high TPS and long-running) stress-testing, the problem seems to be fixed by the PR, so I'm closing the issue. Thx! ",2018-07-02 10:20:22,2018-07-02 10:20:22
https://api.github.com/repos/hyperledger/caliper/issues/42,https://api.github.com/repos/hyperledger/caliper/issues/comments/386495169,https://github.com/hyperledger/caliper/pull/42#issuecomment-386495169,haojun,"Hi @aklenik, could you please split it into two different PRs, since those commits are totally for different purpose. Thanks.",2018-05-04 03:02:20,2018-05-04 03:02:20
https://api.github.com/repos/hyperledger/caliper/issues/42,https://api.github.com/repos/hyperledger/caliper/issues/comments/386558230,https://github.com/hyperledger/caliper/pull/42#issuecomment-386558230,aklenik,"Will do that (possibly by opening an other PR, this got complicated) ",2018-05-04 10:10:29,2018-05-04 10:10:29
https://api.github.com/repos/hyperledger/caliper/issues/41,https://api.github.com/repos/hyperledger/caliper/issues/comments/384131846,https://github.com/hyperledger/caliper/pull/41#issuecomment-384131846,haojun,"Great, thanks. 
Please resolve the conflicts which I thinks is caused by the new merged PID branch :grinning: 

BTW, we are moving to a new cloud environment so I can't test any code recently, I'll review it later.",2018-04-25 01:28:25,2018-04-25 01:28:25
https://api.github.com/repos/hyperledger/caliper/issues/41,https://api.github.com/repos/hyperledger/caliper/issues/comments/384291078,https://github.com/hyperledger/caliper/pull/41#issuecomment-384291078,nklincoln,Sure - the requirement to manually check for regressions should be removed soon as I have a working Travis build/ CI ready for #33 once the linting is available to merge.,2018-04-25 13:42:56,2018-04-25 13:42:56
https://api.github.com/repos/hyperledger/caliper/issues/40,https://api.github.com/repos/hyperledger/caliper/issues/comments/384128532,https://github.com/hyperledger/caliper/pull/40#issuecomment-384128532,haojun,"Hi @michielmulders , you should sign the PR using -s option. Thanks",2018-04-25 01:10:54,2018-04-25 01:10:54
https://api.github.com/repos/hyperledger/caliper/issues/40,https://api.github.com/repos/hyperledger/caliper/issues/comments/427747031,https://github.com/hyperledger/caliper/pull/40#issuecomment-427747031,panyu4,These changes fixed by other committer.,2018-10-08 07:49:48,2018-10-08 07:49:48
https://api.github.com/repos/hyperledger/caliper/issues/39,https://api.github.com/repos/hyperledger/caliper/issues/comments/383861092,https://github.com/hyperledger/caliper/issues/39#issuecomment-383861092,haojun,"That must be a bug. I'll check it later, thanks.",2018-04-24 09:11:24,2018-04-24 09:11:24
https://api.github.com/repos/hyperledger/caliper/issues/39,https://api.github.com/repos/hyperledger/caliper/issues/comments/383865237,https://github.com/hyperledger/caliper/issues/39#issuecomment-383865237,friends110110,"Thank your very much, In fact , I know a littile of nodejs . If the project is written by go or java could satisfy  me",2018-04-24 09:25:05,2018-04-24 09:25:05
https://api.github.com/repos/hyperledger/caliper/issues/39,https://api.github.com/repos/hyperledger/caliper/issues/comments/385136224,https://github.com/hyperledger/caliper/issues/39#issuecomment-385136224,haojun,"I've submit a PR to try to fix it. 
But I don't know how to reproduce the problem, so please check and tell me if it is fixed correctly.",2018-04-28 03:23:35,2018-04-28 03:23:35
https://api.github.com/repos/hyperledger/caliper/issues/39,https://api.github.com/repos/hyperledger/caliper/issues/comments/387776696,https://github.com/hyperledger/caliper/issues/39#issuecomment-387776696,aklenik,"@friends110110 @haojun The problem is present only during debugging, when nodejs is executed with the `--inspect` argument. When Caliper creates the children processes, they inherit this switch, but all of them try to use the same default port for the inspector (which is already used by the parent process), so they fail.

I'll try to think of a solution for this, but now that we have identified the problem, anyone can work on a solution :)",2018-05-09 15:23:22,2018-05-09 15:23:22
https://api.github.com/repos/hyperledger/caliper/issues/38,https://api.github.com/repos/hyperledger/caliper/issues/comments/383863489,https://github.com/hyperledger/caliper/issues/38#issuecomment-383863489,haojun,"sorry, i can't fully get your point. 
The send rate indicates how many transactions are sent per second, and the throughput indicates how many transactions are actually committed on the ledger per second.",2018-04-24 09:19:18,2018-04-24 09:19:18
https://api.github.com/repos/hyperledger/caliper/issues/38,https://api.github.com/repos/hyperledger/caliper/issues/comments/383866797,https://github.com/hyperledger/caliper/issues/38#issuecomment-383866797,friends110110,Does the 100 tps  is calculated by (Succ+Fail )/time ？besides the cli processProposal successfully every request.,2018-04-24 09:30:15,2018-04-24 09:30:15
https://api.github.com/repos/hyperledger/caliper/issues/38,https://api.github.com/repos/hyperledger/caliper/issues/comments/383870213,https://github.com/hyperledger/caliper/issues/38#issuecomment-383870213,haojun,"Caliper will record the submitting time and committing time (the time when the tx is committed on the ledger or when the failure occurred) for each tx.
So the send rate is calculated by (Succ+Fail) / (last submitting time - first submitting time).
The throughput is calculated by Succ/(last committing time - first submitting time), here only successful committed txs will be calculated.",2018-04-24 09:41:56,2018-04-24 09:41:56
https://api.github.com/repos/hyperledger/caliper/issues/38,https://api.github.com/repos/hyperledger/caliper/issues/comments/383888078,https://github.com/hyperledger/caliper/issues/38#issuecomment-383888078,friends110110,"1.nodejs has one thread in the lifecycle, the submitting process is in one thread, while goland has goroutine ,java have the multiple thread,
2.When to record committing time? Is the eventhub receives the blockevent from the block?
3.From my table, 100 tps   200 tps ... ,they are different , but how to control or adjust  the send rate ?",2018-04-24 10:48:53,2018-04-24 13:23:29
https://api.github.com/repos/hyperledger/caliper/issues/38,https://api.github.com/repos/hyperledger/caliper/issues/comments/384130990,https://github.com/hyperledger/caliper/issues/38#issuecomment-384130990,haojun,"1. Although nodejs process is in one thread actually, the submitting process is in asynchronous mode. Meanwhile, we are using multiple child processes to improve the capability.
2. That's the case for fabric. 
3. You can find the 'ratecontrol' property in config file, which defines how to control the sending rate.",2018-04-25 01:24:01,2018-04-25 01:24:01
https://api.github.com/repos/hyperledger/caliper/issues/38,https://api.github.com/repos/hyperledger/caliper/issues/comments/384168500,https://github.com/hyperledger/caliper/issues/38#issuecomment-384168500,friends110110,"You are so kind, thank you very much !",2018-04-25 05:52:21,2018-04-25 05:52:21
https://api.github.com/repos/hyperledger/caliper/issues/37,https://api.github.com/repos/hyperledger/caliper/issues/comments/406926114,https://github.com/hyperledger/caliper/issues/37#issuecomment-406926114,haojun,"@aklenik Do you mind if i assign this to you, so other people know you are working on this?",2018-07-23 03:04:31,2018-07-23 03:04:31
https://api.github.com/repos/hyperledger/caliper/issues/37,https://api.github.com/repos/hyperledger/caliper/issues/comments/469413081,https://github.com/hyperledger/caliper/issues/37#issuecomment-469413081,aklenik,"PR #296 resolves this issue, finally :)",2019-03-04 20:40:07,2019-03-04 20:40:07
https://api.github.com/repos/hyperledger/caliper/issues/36,https://api.github.com/repos/hyperledger/caliper/issues/comments/384129470,https://github.com/hyperledger/caliper/issues/36#issuecomment-384129470,haojun,"Great, thannks @stinger112 . I'll review it later (we are moving to new cloud environment and unable to test any PR recently)",2018-04-25 01:16:08,2018-04-25 01:16:08
https://api.github.com/repos/hyperledger/caliper/issues/36,https://api.github.com/repos/hyperledger/caliper/issues/comments/394695584,https://github.com/hyperledger/caliper/issues/36#issuecomment-394695584,stinger112,"Finally, PR has been merged. :+1: 
Thanks!",2018-06-05 12:46:19,2018-06-05 12:46:19
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/384487462,https://github.com/hyperledger/caliper/pull/35#issuecomment-384487462,haojun,"Error occurred when installing iroha-lib, any idea??
```
> iroha-lib@0.0.5 install /home/haojun/project/caliper/node_modules/iroha-lib
> node-pre-gyp install --fallback-to-build

node-pre-gyp ERR! Tried to download(404): https://github.com/hyperledger/iroha-javascript/releases/download/0.0.5/node-v57-linux-x64-glibc.tar.gz 
node-pre-gyp ERR! Pre-built binaries not found for iroha-lib@0.0.5 and node@8.10.0 (node-v57 ABI, glibc) (falling back to source compile with node-gyp) 
make: Entering directory '/home/haojun/project/caliper/node_modules/iroha-lib/build'
make: *** No rule to make target '../../../../shared_model/bindings/CMakeLists.txt', needed by 'Release/obj/gen/shared_model/bindings/Makefile'.  Stop.
make: Leaving directory '/home/haojun/project/caliper/node_modules/iroha-lib/build'
gyp ERR! build error 
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:258:23)
gyp ERR! stack     at emitTwo (events.js:126:13)
gyp ERR! stack     at ChildProcess.emit (events.js:214:7)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)
gyp ERR! System Linux 4.4.0-121-generic
gyp ERR! command ""/usr/local/bin/node"" ""/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""build"" ""--fallback-to-build"" ""--module=/home/haojun/pr
oject/caliper/node_modules/iroha-lib/lib/node-v57-linux-x64-glibc/iroha_lib.node"" ""--module_name=iroha_lib"" ""--module_path=/home/haojun/project/caliper/node_modules/i
roha-lib/lib/node-v57-linux-x64-glibc""
gyp ERR! cwd /home/haojun/project/caliper/node_modules/iroha-lib
gyp ERR! node -v v8.10.0
gyp ERR! node-gyp -v v3.6.2
gyp ERR! not ok 
node-pre-gyp ERR! build error 
node-pre-gyp ERR! stack Error: Failed to execute '/usr/local/bin/node /usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js build --fallback-to-build 
--module=/home/haojun/project/caliper/node_modules/iroha-lib/lib/node-v57-linux-x64-glibc/iroha_lib.node --module_name=iroha_lib --module_path=/home/haojun/project/ca
liper/node_modules/iroha-lib/lib/node-v57-linux-x64-glibc' (1)
node-pre-gyp ERR! stack     at ChildProcess.<anonymous> (/home/haojun/project/caliper/node_modules/iroha-lib/node_modules/node-pre-gyp/lib/util/compile.js:83:29)
node-pre-gyp ERR! stack   at emitTwo (events.js:126:13)
node-pre-gyp ERR! stack     at ChildProcess.emit (events.js:214:7)
node-pre-gyp ERR! stack     at maybeClose (internal/child_process.js:925:16)
node-pre-gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)
node-pre-gyp ERR! System Linux 4.4.0-121-generic
node-pre-gyp ERR! command ""/usr/local/bin/node"" ""/home/haojun/project/caliper/node_modules/iroha-lib/node_modules/.bin/node-pre-gyp"" ""install"" ""--fallback-to-build""
node-pre-gyp ERR! cwd /home/haojun/project/caliper/node_modules/iroha-lib
node-pre-gyp ERR! node -v v8.10.0
node-pre-gyp ERR! node-pre-gyp -v v0.6.39
node-pre-gyp ERR! not ok 
Failed to execute '/usr/local/bin/node /usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js build --fallback-to-build --module=/home/haojun/project/c
aliper/node_modules/iroha-lib/lib/node-v57-linux-x64-glibc/iroha_lib.node --module_name=iroha_lib --module_path=/home/haojun/project/caliper/node_modules/iroha-lib/li
b/node-v57-linux-x64-glibc' (1)
npm WARN ajv-keywords@3.1.0 requires a peer of ajv@^6.0.0 but none is installed. You must install peer dependencies yourself.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! iroha-lib@0.0.5 install: `node-pre-gyp install --fallback-to-build`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the iroha-lib@0.0.5 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/haojun/.npm/_logs/2018-04-26T01_44_12_075Z-debug.log
```",2018-04-26 01:52:48,2018-04-26 01:52:48
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/386197727,https://github.com/hyperledger/caliper/pull/35#issuecomment-386197727,haojun,"@stinger112 , can you help solve the problem??",2018-05-03 05:55:09,2018-05-03 05:55:09
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/386197959,https://github.com/hyperledger/caliper/pull/35#issuecomment-386197959,stinger112,@haojun please try to use iroha-lib 0.0.6. It seems required ABI in 0.0.5 is missing.,2018-05-03 05:57:18,2018-05-03 06:01:11
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/386198353,https://github.com/hyperledger/caliper/pull/35#issuecomment-386198353,stinger112,"I'm sorry for late response.
I need to fix a couple of things in this PR according to new changes in Iroha.",2018-05-03 06:00:49,2018-05-03 06:00:49
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/386976836,https://github.com/hyperledger/caliper/pull/35#issuecomment-386976836,lebdron,Please also apply this diff for genesis block and txCounter fixes https://gist.github.com/victordrobny/02cbeeed165bb7226e67f57e8712c6a0,2018-05-07 07:04:42,2018-05-07 07:04:42
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/389493787,https://github.com/hyperledger/caliper/pull/35#issuecomment-389493787,neewy,"@haojun please review and approve so that we can use Caliper for our CI routine :)
",2018-05-16 12:01:25,2018-05-16 12:01:25
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/389501420,https://github.com/hyperledger/caliper/pull/35#issuecomment-389501420,stinger112,"Dear @haojun sorry for this mess up!

We no need to merge this PR because I have to wait new release version of Iroha. 
In the nutshell: we have no version's comprehension between **Iroha** and **iroha-lib**. I can't fix on current develop container by hash as you do because I build **iroha-lib** just for *release* versions of Iroha.
If I build **iroha-lib** for develop, users can have weird bugs because of interfaces incompatibility without any warnings. Also I can't use old available release of Iroha, because it contains some bugs itself.

So I suggest to wait when new version will be released (it's very very soon) and fix library and Iroha container on such version.",2018-05-16 12:31:10,2018-05-16 12:31:51
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/389709621,https://github.com/hyperledger/caliper/pull/35#issuecomment-389709621,haojun,"@stinger112 OK, got it",2018-05-17 00:47:37,2018-05-17 00:47:37
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/391633162,https://github.com/hyperledger/caliper/pull/35#issuecomment-391633162,neewy,"@haojun @stinger112 let's merge since we have released? Arsenii, please confirm and fix conflicts
",2018-05-24 08:29:40,2018-05-24 08:29:40
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/391912800,https://github.com/hyperledger/caliper/pull/35#issuecomment-391912800,haojun,@neewy Great! And please run eslint to check if the code follows current linting rules (remove iroha folder from the .eslintignore file and run `npm run lint`). ,2018-05-25 01:19:53,2018-05-25 01:19:53
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/392579245,https://github.com/hyperledger/caliper/pull/35#issuecomment-392579245,stinger112,"@haojun, I updated the code.
Please review PR.",2018-05-28 17:59:52,2018-05-28 17:59:52
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/393083130,https://github.com/hyperledger/caliper/pull/35#issuecomment-393083130,haojun,"A node-pre-gyp error happened when installing grpc@1.12.2, any idea how to fix it?

```
haojun@ecs-haojun:~/project/caliper$ npm install iroha-lib

> grpc@1.12.2 install /home/haojun/project/caliper/node_modules/grpc
> node-pre-gyp install --fallback-to-build --library=static_library

node-pre-gyp ERR! Completion callback never invoked! 
node-pre-gyp ERR! System Linux 4.4.0-124-generic
node-pre-gyp ERR! command ""/usr/local/bin/node"" ""/home/haojun/project/caliper/node_modules/grpc/node_modules/.bin/node-pre-gyp"" ""install"" ""--fallback-to-build"" ""--lib
rary=static_library""
node-pre-gyp ERR! cwd /home/haojun/project/caliper/node_modules/grpc
node-pre-gyp ERR! node -v v8.10.0
node-pre-gyp ERR! node-pre-gyp -v v0.10.0
node-pre-gyp ERR! This is a bug in `node-pre-gyp`.
node-pre-gyp ERR! Try to update node-pre-gyp and file an issue if it does not help:
node-pre-gyp ERR!     <https://github.com/mapbox/node-pre-gyp/issues>
npm ERR! code ELIFECYCLE
npm ERR! errno 6
npm ERR! grpc@1.12.2 install: `node-pre-gyp install --fallback-to-build --library=static_library`
npm ERR! Exit status 6
npm ERR! 
npm ERR! Failed at the grpc@1.12.2 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/haojun/.npm/_logs/2018-05-30T08_47_26_764Z-debug.log
```",2018-05-30 08:52:27,2018-05-30 08:52:27
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/393134298,https://github.com/hyperledger/caliper/pull/35#issuecomment-393134298,stinger112,"I can install Caliper with dependencies from scratch in empty docker containers.

**Checked systems:**
ubuntu:16.04
node v8.11.2
npm 5.6.0
node-pre-gyp v0.10.0

ubuntu:18.04
node v10.3.0
npm 6.1.0
node-pre-gyp v0.10.0

So, I can't reproduce the bug. Please check your environment.",2018-05-30 11:57:49,2018-05-30 11:57:49
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/393811023,https://github.com/hyperledger/caliper/pull/35#issuecomment-393811023,haojun,"@stinger112 
It somehow works today, I think it was a problem of npmjs.
",2018-06-01 08:38:05,2018-06-01 08:38:05
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/394349528,https://github.com/hyperledger/caliper/pull/35#issuecomment-394349528,stinger112,"@haojun  Please add the following line in the **package.json** 
```
""grpc"": ""^1.10.1"",
""iroha-lib"": ""^0.1.4""
```
It has not been pushed, I forget!",2018-06-04 13:12:48,2018-06-04 13:12:48
https://api.github.com/repos/hyperledger/caliper/issues/35,https://api.github.com/repos/hyperledger/caliper/issues/comments/394555227,https://github.com/hyperledger/caliper/pull/35#issuecomment-394555227,haojun,@stinger112 Got it. I didn't notice it either.,2018-06-05 01:53:29,2018-06-05 01:53:29
https://api.github.com/repos/hyperledger/caliper/issues/34,https://api.github.com/repos/hyperledger/caliper/issues/comments/383450755,https://github.com/hyperledger/caliper/pull/34#issuecomment-383450755,Ram-srini,@haojun #32 I accidentally clicked on close and comment.,2018-04-23 04:26:12,2018-04-23 04:26:12
https://api.github.com/repos/hyperledger/caliper/issues/34,https://api.github.com/repos/hyperledger/caliper/issues/comments/383451285,https://github.com/hyperledger/caliper/pull/34#issuecomment-383451285,Ram-srini,"@haojun  Idea is to not change the sawtooth adapter for every new use case. Building payload and address calculation is use case specific. Use case which defines iniit(), run() and end(), is also meant to generic. Because we it is going consumed by other hyper ledger.",2018-04-23 04:30:19,2018-04-23 08:18:08
https://api.github.com/repos/hyperledger/caliper/issues/34,https://api.github.com/repos/hyperledger/caliper/issues/comments/383794508,https://github.com/hyperledger/caliper/pull/34#issuecomment-383794508,Ram-srini,@dcmiddle thanks Dan for pointing out typo error. I have corrected the typo error.,2018-04-24 03:46:58,2018-04-24 03:46:58
https://api.github.com/repos/hyperledger/caliper/issues/34,https://api.github.com/repos/hyperledger/caliper/issues/comments/383836591,https://github.com/hyperledger/caliper/pull/34#issuecomment-383836591,Ram-srini,@feihujiang Please review changes.,2018-04-24 07:47:43,2018-04-24 07:47:43
https://api.github.com/repos/hyperledger/caliper/issues/34,https://api.github.com/repos/hyperledger/caliper/issues/comments/383962087,https://github.com/hyperledger/caliper/pull/34#issuecomment-383962087,Ram-srini,@feihujiang I have removed those changes.,2018-04-24 14:52:05,2018-04-24 14:52:05
https://api.github.com/repos/hyperledger/caliper/issues/33,https://api.github.com/repos/hyperledger/caliper/issues/comments/383996137,https://github.com/hyperledger/caliper/issues/33#issuecomment-383996137,nklincoln,"Have started working on this, the proposal is to:
- Use Travis (I have more experience setting up/using this CI environment, and it is great for OS projects such as Caliper 👍 )
- add a `pretest` package command that runs the lint checker
- Use the existing `npm test` command 
- Run multiple environments, one per available benchmark, using the `npm test --<benchmark>`

The above will ensure that:
- No linting regressions creep in
- All published benchmarks (local only) will not regress",2018-04-24 16:28:35,2018-04-24 16:28:48
https://api.github.com/repos/hyperledger/caliper/issues/33,https://api.github.com/repos/hyperledger/caliper/issues/comments/384311169,https://github.com/hyperledger/caliper/issues/33#issuecomment-384311169,nklincoln,"Currently have a working (local) Travis CI system in place which is running each benchmark contained in the project. Each benchmark runs in a separate environment, and the scripting is configured to run a benchmark with a target version. It has been proven to fail-out correctly (required files missing, no benchmark, test failure etc)

The framework runs the e2e tests as started by `test.js` within the scripts folder.

Once the initial drop of the linting checking has been made, I will incorporate the lint checker into the `pretest` section so that it is run before the main regression check.

I have not yet considered the running of the zookeeper based functionality as part of the regression suite

",2018-04-25 14:39:47,2018-04-25 14:39:47
https://api.github.com/repos/hyperledger/caliper/issues/32,https://api.github.com/repos/hyperledger/caliper/issues/comments/381867707,https://github.com/hyperledger/caliper/pull/32#issuecomment-381867707,Ram-srini,@feihujiang @haojun I have made changes sawtooth adapter to have a application independent code and moved application specific logic to application adapter. Please review the changes. I will raise one more PR for small bank use this week.,2018-04-17 06:48:57,2018-04-17 06:48:57
https://api.github.com/repos/hyperledger/caliper/issues/32,https://api.github.com/repos/hyperledger/caliper/issues/comments/383446002,https://github.com/hyperledger/caliper/pull/32#issuecomment-383446002,haojun,"Hi @Ram-srini,
One of my concern is that ideally the adapter should be independent of use cases, and use the configuration file to fit various use case. But according to your new design, developers have to extend the implementation of adapter (add new builder) for each new use case, that may be not a good way.

A simple idea is to implement builder as external script and specify it in the configuration file, so an adapter can invoke the use case specified batch builder. 

BTW, I'm not a sawtooth expert, I just wonder why it is not feasible to have a common batch builder for all use cases?",2018-04-23 03:43:06,2018-04-23 03:43:06
https://api.github.com/repos/hyperledger/caliper/issues/32,https://api.github.com/repos/hyperledger/caliper/issues/comments/383446684,https://github.com/hyperledger/caliper/pull/32#issuecomment-383446684,Ram-srini,"@haojun Yes sawtooth adapter should be independent of use case, But application can different data format to store eg. json, protobug, csv etc. For that use case sawtooth adapter shouldn't be changed. Also address calculation is also dependent on application. So i moved those 2 parts payload construction and address  calculation from sawtooth adapter and created to application adapter. Writing new bench mark use case user has to write the logic build payload data and address calculation logic.",2018-04-23 03:49:39,2018-04-23 03:49:39
https://api.github.com/repos/hyperledger/caliper/issues/30,https://api.github.com/repos/hyperledger/caliper/issues/comments/382630118,https://github.com/hyperledger/caliper/pull/30#issuecomment-382630118,haojun,"Hi @nklincoln , I still don't understand how to set the targetLoad as well as P/I/D. And sorry I don't have time to investigate the code.
I tried to run the 'simple' test with a rate-control as {""type"": ""pid-rate"", ""opts"": {""targetLoad"": 5, ""initialTPS"": 100, ""proportional"": 0.2, ""integral"": 0.0001, ""derrivative"": 0.1, ""showVars"": true}} for 5000 txs, and got a result of 42 tps. Why the actual tps is that low?",2018-04-19 06:53:14,2018-04-19 06:53:14
https://api.github.com/repos/hyperledger/caliper/issues/30,https://api.github.com/repos/hyperledger/caliper/issues/comments/382764023,https://github.com/hyperledger/caliper/pull/30#issuecomment-382764023,nklincoln,"Hi @haojun,
That is what I would have expected and I get the same results running locally on my machine. The aim of the control mechanism is to adjust the TPS to maintain a specified (and steady) number of unfinished transactions per client. 

When I run the simple test with a fixed rate, the transaction backlog grows to a peak of approx 450. Whilst this means that the maximum possible throughput will be reached, if i was to run the test for 500000 txn, there would be a timeout at some point.

Bringing down the maximum number of backlog transactions prevents the issue of timeouts, but does reduce the overall TPS as there is a deliberate limitation on the placement of transactions to be completed. 

",2018-04-19 14:46:32,2018-04-19 14:46:32
https://api.github.com/repos/hyperledger/caliper/issues/30,https://api.github.com/repos/hyperledger/caliper/issues/comments/382949708,https://github.com/hyperledger/caliper/pull/30#issuecomment-382949708,haojun,"OK, I see. But what's the purpose of restricting the number of backlogs?
There are several factors that may affect the number of backlogs:
1. SUT's processing capability. If the TPS is out of the capability, the number grows continuously. In this case, the TPS should be lowered. 
2. Latency (network latency and processing latency). For example, if submitting txs at 200 tps while the e2e latency for each tx is 1 second, the number of backlogs will grow to 200 even if the actual processing capability on the server side is over 200 ( and the backlogs number should fluctuate around 200). In this case, a high backlogs number(200) looks normal.",2018-04-20 02:34:26,2018-04-23 02:24:28
https://api.github.com/repos/hyperledger/caliper/issues/30,https://api.github.com/repos/hyperledger/caliper/issues/comments/383372996,https://github.com/hyperledger/caliper/pull/30#issuecomment-383372996,aklenik,"Maybe maintaining a given e2e latency would be more appropriate here, if it's possible. ",2018-04-22 10:57:31,2018-04-22 10:57:31
https://api.github.com/repos/hyperledger/caliper/issues/30,https://api.github.com/repos/hyperledger/caliper/issues/comments/383933952,https://github.com/hyperledger/caliper/pull/30#issuecomment-383933952,nklincoln,"Sorry for the delay in response -

I'm not sure if I understand your point for item 2) above, but for 1) this is exactly why the rate controller should be used and is especially true for long running tests - for instance, how does a user know what TPS to lower it to when hitting a timeout, other than 'less than before'?

As you mention, there are many factors impacting the SUT performance, and the multiple factors will result in a highly non-linear system. Using a systematic approach, this can be overcome:
- by running the tests with varying load, the output will be a curve of maximum tps for a given load, which should be highly repeatable.
- through looking a the output graph, the highest TPS throughput can be determined (note that the highest throughput is not at the highest sustainable loading)

There is an additional benefit - since the controller will enable running performance tests for an extended time (which is not guaranteed from a pure TPS limit) it would be useful for possible extension of Caliper into a Performance *and* reliability tool in the future.

",2018-04-24 13:39:19,2018-04-24 13:39:19
https://api.github.com/repos/hyperledger/caliper/issues/30,https://api.github.com/repos/hyperledger/caliper/issues/comments/405173222,https://github.com/hyperledger/caliper/pull/30#issuecomment-405173222,JulienGuo,"Hi,@nklincoln 
I used pidrate. 
According to the console logs, I found many logs like deal pid and compute  sleep time, like this:
Current P value:  -23.6
Current I value:  -0.8427249989642626
Current I value:  -2.873340714337511
Current D value:  -0.00005253275121500009
New sleep time:  1928.0171704039135
Current D value:  -0.000028708512638230602
New sleep time:  3520.160757388461
Current load error:  -169
Current P value:  -33.800000000000004
Current I value:  -2.814124828742096
Current D value:  -0.000029013484368045606
New sleep time:  3483.287387965611


and then deal txs, like this:
[Transaction Info] - Submitted: 20000 Succ: 10457 Fail:0 Unfinished:9543
[Transaction Info] - Submitted: 20000 Succ: 10489 Fail:0 Unfinished:9511
[Transaction Info] - Submitted: 20000 Succ: 10510 Fail:0 Unfinished:9490
[Transaction Info] - Submitted: 20000 Succ: 10521 Fail:0 Unfinished:9479
[Transaction Info] - Submitted: 20000 Succ: 10550 Fail:0 Unfinished:9450
[Transaction Info] - Submitted: 20000 Succ: 10597 Fail:0 Unfinished:9403
[Transaction Info] - Submitted: 20000 Succ: 10685 Fail:0 Unfinished:9315
[Transaction Info] - Submitted: 20000 Succ: 11200 Fail:0 Unfinished:8800
[Transaction Info] - Submitted: 20000 Succ: 12066 Fail:0 Unfinished:7934
[Transaction Info] - Submitted: 20000 Succ: 13108 Fail:0 Unfinished:6892
[Transaction Info] - Submitted: 20000 Succ: 13976 Fail:0 Unfinished:6024
[Transaction Info] - Submitted: 20000 Succ: 14487 Fail:0 Unfinished:5513


I am confused, 

Isn't it that pidrate control changes sleeptime according to the results of txs？ ",2018-07-16 08:00:53,2018-07-16 08:00:53
https://api.github.com/repos/hyperledger/caliper/issues/30,https://api.github.com/repos/hyperledger/caliper/issues/comments/405199894,https://github.com/hyperledger/caliper/pull/30#issuecomment-405199894,nklincoln,"Hi, yes - it should. There have been a few upstream changes that broke the Composer plugin - these should have been resolved with the latest PR that has been merged - would recommend that you try again ensuring that #122 is included in your code base",2018-07-16 09:59:45,2018-07-16 09:59:45
https://api.github.com/repos/hyperledger/caliper/issues/30,https://api.github.com/repos/hyperledger/caliper/issues/comments/405222867,https://github.com/hyperledger/caliper/pull/30#issuecomment-405222867,JulienGuo,"@nklincoln Hi, in  https://github.com/hyperledger/caliper/pull/122 Maybe the problem is resolved in composer, but my problem is occurring  in fabric",2018-07-16 11:52:46,2018-07-16 11:52:46
https://api.github.com/repos/hyperledger/caliper/issues/30,https://api.github.com/repos/hyperledger/caliper/issues/comments/405437666,https://github.com/hyperledger/caliper/pull/30#issuecomment-405437666,JulienGuo,"@nklincoln I use latest code , And the problem is still happened. I use Fabric network",2018-07-17 02:16:51,2018-07-17 02:16:51
https://api.github.com/repos/hyperledger/caliper/issues/27,https://api.github.com/repos/hyperledger/caliper/issues/comments/436168484,https://github.com/hyperledger/caliper/issues/27#issuecomment-436168484,houqinghui,@WilsonGao   do you resolve the problem?,2018-11-06 08:23:06,2018-11-06 08:23:06
https://api.github.com/repos/hyperledger/caliper/issues/24,https://api.github.com/repos/hyperledger/caliper/issues/comments/380298051,https://github.com/hyperledger/caliper/issues/24#issuecomment-380298051,haojun,"If I understand you correctly, the problem is that a transaction may has been committed even if sendTransaction returns a rejected promise.

A easy way to correct it is ignoring the REQUEST_TIMEOUT error and continuing waiting for all event promises. For other known errors such as SERVICE_UNAVAILABLE, there is no reason to continue, right?

What's your opinion?

BTW: since step 6 is optional, when would it be applied? ",2018-04-11 01:33:39,2018-04-11 01:33:39
https://api.github.com/repos/hyperledger/caliper/issues/24,https://api.github.com/repos/hyperledger/caliper/issues/comments/380302459,https://github.com/hyperledger/caliper/issues/24#issuecomment-380302459,aklenik,"Exactly. In my fork, I essentially ignore the orderer response (only log the error). The event results will determine the final status of the transaction. 

Another thought: I use `Promise.All` on the event promises, but `Promise.Any` would be enough I think. If one peer successfully commits the transaction, then every other peer will commit it eventually, so the occasional event hub error of one/some peers should not deem the transaction failed. However, if I want to calculate percentile-based commit times (as discussed by the PSWG), then I need every event notification. 

About step 6: it is a little fuzzy whether this should be performed in the `invokebycontext` function, or as a post-processing step after the round that queries every failed, but not verified transaction. And whether to incorporate that query time somewhere or not. As a first step, I think Caliper should be able to mark such transactions as ""verified after the life-cycle"" to avoid false negative results and give the option for data analysts to ignore such transaction times during the analysis.",2018-04-11 02:02:18,2018-04-11 02:02:18
https://api.github.com/repos/hyperledger/caliper/issues/24,https://api.github.com/repos/hyperledger/caliper/issues/comments/380313823,https://github.com/hyperledger/caliper/issues/24#issuecomment-380313823,haojun,"It sounds good. Would you please submit the PR? I'll be very happy to review it, thanks.",2018-04-11 03:17:32,2018-04-11 03:17:32
https://api.github.com/repos/hyperledger/caliper/issues/23,https://api.github.com/repos/hyperledger/caliper/issues/comments/380372683,https://github.com/hyperledger/caliper/pull/23#issuecomment-380372683,nklincoln,"Hi -I've updated the PR with a new 'rate controllers' section within the docs 👍 

The rate controller doc can easily be extended for any newly contributed rate controllers too",2018-04-11 08:34:05,2018-04-11 08:34:05
https://api.github.com/repos/hyperledger/caliper/issues/23,https://api.github.com/repos/hyperledger/caliper/issues/comments/380480784,https://github.com/hyperledger/caliper/pull/23#issuecomment-380480784,nklincoln,Going to close this PR for now as I'm observing some rather strange behaviour on different test systems that are showing difficulty in reaching a steady state level ... will investigate and resubmit once solved 👍 ,2018-04-11 14:51:26,2018-04-11 14:51:26
https://api.github.com/repos/hyperledger/caliper/issues/22,https://api.github.com/repos/hyperledger/caliper/issues/comments/380291013,https://github.com/hyperledger/caliper/issues/22#issuecomment-380291013,haojun,"+1, @feihujiang will help handle it",2018-04-11 00:45:08,2018-04-11 00:45:08
https://api.github.com/repos/hyperledger/caliper/issues/22,https://api.github.com/repos/hyperledger/caliper/issues/comments/381603629,https://github.com/hyperledger/caliper/issues/22#issuecomment-381603629,nklincoln,"I'm happy to initiate this one and start working on it. My proposal would be to:
- add an eslint package dependancy
- add an npm script command to run the lint checker
- introduce a standard javascript linting file
- fix all Composer contributions to resect the linting configuration
- add an eslintignore file with all other files ignored

It would then be possible to address linting considerations in all other files in a systematic way, and once all required linting errors are corrected, we could make this as complete?

A side issue here is that there is looking to be a need for some kind of automated build mechanism for Caliper (Jenkins/Travis) that could automatically run the linting as a build task and prevent any new code being added that does not adhere to the linting rules.
",2018-04-16 13:42:47,2018-04-16 13:42:47
https://api.github.com/repos/hyperledger/caliper/issues/22,https://api.github.com/repos/hyperledger/caliper/issues/comments/381800293,https://github.com/hyperledger/caliper/issues/22#issuecomment-381800293,feihujiang,:+1: ,2018-04-17 01:27:52,2018-04-17 01:27:52
https://api.github.com/repos/hyperledger/caliper/issues/22,https://api.github.com/repos/hyperledger/caliper/issues/comments/381908529,https://github.com/hyperledger/caliper/issues/22#issuecomment-381908529,haojun,"Hi @nklincoln, that's great :+1: 
To be honest, @feihujiang and I don't have much time to do it recently. So it would be very helpful if you could take over the work to add support for eslint and CI (travis, maybe) .",2018-04-17 08:58:16,2018-04-17 08:58:16
https://api.github.com/repos/hyperledger/caliper/issues/22,https://api.github.com/repos/hyperledger/caliper/issues/comments/381918988,https://github.com/hyperledger/caliper/issues/22#issuecomment-381918988,nklincoln,"OK -I will start the above, is there a way that you can assign this to me so that nobody else picks it up in the interim?",2018-04-17 09:27:17,2018-04-17 09:27:17
https://api.github.com/repos/hyperledger/caliper/issues/22,https://api.github.com/repos/hyperledger/caliper/issues/comments/383525497,https://github.com/hyperledger/caliper/issues/22#issuecomment-383525497,subhodi,@nklincoln I can help you with JSlinting. I have done JS linting for Caliper forked REPO with the help of eslint file and [VS code extension](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint).,2018-04-23 10:14:24,2018-04-23 10:14:24
https://api.github.com/repos/hyperledger/caliper/issues/22,https://api.github.com/repos/hyperledger/caliper/issues/comments/385419424,https://github.com/hyperledger/caliper/issues/22#issuecomment-385419424,nklincoln,"Hi @subhodi - it looks like this issue has now been replaced by #48, which is splitting out the remaining files to be made compatible with the linting.

@haojun - would you like this issue closed off so that #48 can be worked on instead?",2018-04-30 14:42:09,2018-04-30 14:42:09
https://api.github.com/repos/hyperledger/caliper/issues/22,https://api.github.com/repos/hyperledger/caliper/issues/comments/386494467,https://github.com/hyperledger/caliper/issues/22#issuecomment-386494467,haojun,Closed,2018-05-04 02:55:37,2018-05-04 02:55:37
https://api.github.com/repos/hyperledger/caliper/issues/20,https://api.github.com/repos/hyperledger/caliper/issues/comments/379804646,https://github.com/hyperledger/caliper/issues/20#issuecomment-379804646,nklincoln,The following npm module may assist here: https://www.npmjs.com/package/license-check-and-add,2018-04-09 16:04:37,2018-04-09 16:04:37
https://api.github.com/repos/hyperledger/caliper/issues/20,https://api.github.com/repos/hyperledger/caliper/issues/comments/381038063,https://github.com/hyperledger/caliper/issues/20#issuecomment-381038063,haojun,"@tkuhrt , I've removed files with Attribution license, and added the license declaration in README",2018-04-13 06:34:15,2018-04-13 06:34:15
https://api.github.com/repos/hyperledger/caliper/issues/20,https://api.github.com/repos/hyperledger/caliper/issues/comments/428451996,https://github.com/hyperledger/caliper/issues/20#issuecomment-428451996,panyu4,This was resolved by @haojun. So I am closing this issue.,2018-10-10 06:21:56,2018-10-10 06:21:56
https://api.github.com/repos/hyperledger/caliper/issues/19,https://api.github.com/repos/hyperledger/caliper/issues/comments/379600656,https://github.com/hyperledger/caliper/pull/19#issuecomment-379600656,feihujiang,"@haojun You need at caliper root directory when lanuching the sawtooth-simple.yaml. or change WORKDIR ""/project/src/contract/sawtooth/simple/simple_python"" to locate simple-tp-python in  sawtooth-simple.yaml . The /project is your working dir.",2018-04-09 01:18:10,2018-04-09 01:19:10
https://api.github.com/repos/hyperledger/caliper/issues/19,https://api.github.com/repos/hyperledger/caliper/issues/comments/380046316,https://github.com/hyperledger/caliper/pull/19#issuecomment-380046316,Ram-srini,"@haojun , @feihujiang Addressed the review comments. Moved the docker files to network folder and added the start and end commands in the config file.",2018-04-10 10:07:08,2018-04-10 10:07:31
https://api.github.com/repos/hyperledger/caliper/issues/19,https://api.github.com/repos/hyperledger/caliper/issues/comments/380307557,https://github.com/hyperledger/caliper/pull/19#issuecomment-380307557,feihujiang,@Ram-srini please squash your commits.,2018-04-11 02:35:54,2018-04-11 02:35:54
https://api.github.com/repos/hyperledger/caliper/issues/19,https://api.github.com/repos/hyperledger/caliper/issues/comments/380336795,https://github.com/hyperledger/caliper/pull/19#issuecomment-380336795,Ram-srini,"@feihujiang , @haojun 
I did the squash, please merge.",2018-04-11 06:00:15,2018-04-11 06:00:15
https://api.github.com/repos/hyperledger/caliper/issues/15,https://api.github.com/repos/hyperledger/caliper/issues/comments/377871802,https://github.com/hyperledger/caliper/issues/15#issuecomment-377871802,haojun,"After several test, the error is caused by cgo dns resolver. 
To fix it, add environment `GODEBUG=netdns=cgo` for all containers which are defined in corresponding docker-compose file (e.g. network/fabric-v11/2-org-1-peer/docker-compose.yaml for my case). ",2018-04-02 07:10:59,2018-04-02 07:10:59
https://api.github.com/repos/hyperledger/caliper/issues/10,https://api.github.com/repos/hyperledger/caliper/issues/comments/376746472,https://github.com/hyperledger/caliper/issues/10#issuecomment-376746472,haojun,Good idea. Will do it later.,2018-03-28 03:10:16,2018-03-28 03:10:16
https://api.github.com/repos/hyperledger/caliper/issues/10,https://api.github.com/repos/hyperledger/caliper/issues/comments/386495266,https://github.com/hyperledger/caliper/issues/10#issuecomment-386495266,haojun,Closed since the file is available now,2018-05-04 03:03:34,2018-05-04 03:03:34
https://api.github.com/repos/hyperledger/caliper/issues/9,https://api.github.com/repos/hyperledger/caliper/issues/comments/376746344,https://github.com/hyperledger/caliper/issues/9#issuecomment-376746344,haojun,"1. The reason of high failures may be due to the configured transaction rate exceeding the processing capacity of fabric and caliper itself. You can check the cpu usage of peers or bench-clients (it should be printed after each test round) to see if it is too high. You can lower the tps value in 'config-fabric.json' and run the test again to find out the maximum performance your SUT can reach.

2 The error in the end is a bug, the config-fabric.json uses an old property 'txNumbAndTps' which is not used now. You can change it to 'txNumber'. I will update caliper later to fix it, thanks. ",2018-03-28 03:09:31,2018-03-28 03:09:31
https://api.github.com/repos/hyperledger/caliper/issues/9,https://api.github.com/repos/hyperledger/caliper/issues/comments/381557683,https://github.com/hyperledger/caliper/issues/9#issuecomment-381557683,neewy,"Okay, thank you for clarification, I will try running it once again",2018-04-16 10:43:34,2018-04-16 10:43:34
https://api.github.com/repos/hyperledger/caliper/issues/9,https://api.github.com/repos/hyperledger/caliper/issues/comments/386495311,https://github.com/hyperledger/caliper/issues/9#issuecomment-386495311,haojun,Closes since no more comments,2018-05-04 03:04:07,2018-05-04 03:04:07
https://api.github.com/repos/hyperledger/caliper/issues/8,https://api.github.com/repos/hyperledger/caliper/issues/comments/376741476,https://github.com/hyperledger/caliper/issues/8#issuecomment-376741476,haojun,"The design of 'phase' is only to reduce duplicate definitions, so each phase will be treated as an independent test round. 

If you want to define a continuous test with changing tx rate, you should implement a new type of 'rate-control' . 

In fact this is the reason why the modularized rate-control was introduced.",2018-03-28 02:40:13,2018-03-28 02:40:13
https://api.github.com/repos/hyperledger/caliper/issues/8,https://api.github.com/repos/hyperledger/caliper/issues/comments/376821540,https://github.com/hyperledger/caliper/issues/8#issuecomment-376821540,aklenik,"Ah, thank you for the clarification! ",2018-03-28 09:26:59,2018-03-28 09:26:59
https://api.github.com/repos/hyperledger/caliper/issues/5,https://api.github.com/repos/hyperledger/caliper/issues/comments/375292501,https://github.com/hyperledger/caliper/pull/5#issuecomment-375292501,nklincoln,"Apologies, I neglected to copy that one across when creating a separate branch to pull from, I have updated the PR to include the required documentation",2018-03-22 12:50:15,2018-03-22 12:50:15
https://api.github.com/repos/hyperledger/caliper/issues/5,https://api.github.com/repos/hyperledger/caliper/issues/comments/376215305,https://github.com/hyperledger/caliper/pull/5#issuecomment-376215305,nklincoln,"Closing PR as Composer is planning to release with breaking changes in the APIs, thus breaking the deployment mechanisms used within the Caliper flow. Making edits to retain compatibility and will resubmit once Composer has released.",2018-03-26 15:51:22,2018-03-26 15:51:22
https://api.github.com/repos/hyperledger/caliper/issues/4,https://api.github.com/repos/hyperledger/caliper/issues/comments/374824395,https://github.com/hyperledger/caliper/issues/4#issuecomment-374824395,gerryyang,"By the way, another problem is, there is no reporter html generated after above error. And how to get it ?",2018-03-21 03:23:02,2018-03-21 04:11:54
https://api.github.com/repos/hyperledger/caliper/issues/4,https://api.github.com/repos/hyperledger/caliper/issues/comments/374826255,https://github.com/hyperledger/caliper/issues/4#issuecomment-374826255,feihujiang,"Is there a 'cannot find module xxx(dockerode etc)‘ error? if it is, please install the requested module. 'npm install dockerode'",2018-03-21 03:39:15,2018-03-21 03:39:15
https://api.github.com/repos/hyperledger/caliper/issues/4,https://api.github.com/repos/hyperledger/caliper/issues/comments/374828322,https://github.com/hyperledger/caliper/issues/4#issuecomment-374828322,gerryyang,"yes, that's due to missing systeminformation and dockerode module in node actually. I suggest adding these dependencies on Wiki is better because the log is too long to find. Maybe add a Prerequisites like Fabric docs is best. ",2018-03-21 03:57:26,2018-03-21 04:09:54
https://api.github.com/repos/hyperledger/caliper/issues/4,https://api.github.com/repos/hyperledger/caliper/issues/comments/374830540,https://github.com/hyperledger/caliper/issues/4#issuecomment-374830540,gerryyang,"Here are some node modules need to install firstly.
`npm install systeminformation dockerode mustache ps-node pidusage `",2018-03-21 04:19:20,2018-03-21 04:19:20
https://api.github.com/repos/hyperledger/caliper/issues/4,https://api.github.com/repos/hyperledger/caliper/issues/comments/375147108,https://github.com/hyperledger/caliper/issues/4#issuecomment-375147108,haojun,"@gerryyang , actually those node modules are defined in package.json, so you can run `npm install` to install all dependencies ",2018-03-22 01:18:45,2018-03-22 01:18:45
https://api.github.com/repos/hyperledger/caliper/issues/4,https://api.github.com/repos/hyperledger/caliper/issues/comments/386495454,https://github.com/hyperledger/caliper/issues/4#issuecomment-386495454,haojun,Closed since no more comments,2018-05-04 03:05:41,2018-05-04 03:05:41
