name repository,creator user,url_html issue,url_api issue,title,body,state,pull request,data open,updated at
caliper,robiharid,https://github.com/hyperledger/caliper/issues/403,https://api.github.com/repos/hyperledger/caliper/issues/403,How to run caliper with distributed clients,"Hi guys

I am trying to run zookeeper to run the benchmark across multiple Azure VMs in the cloud. I want to send transactions across the network at scale so I can benchmark the performance.

With Zookeeper:
1. What do I specify in the conf/zoo.cfg file? (https://zookeeper.apache.org/doc/r3.1.2/zookeeperStarted.html)

With Launch clients on target machine seperately:
1. Does this mean I have to install npm, node, fabric-ca, etc on each machine?
2. Does this mean I pull caliper on each machine? 
3. Do I then run npm run startclient -- zookeeper-server for each machine?

Thank you, I am really new to this - just trying to do some basic things.

When I try to run `npm run startclient -- ip.azure.com:2181` I get this:

>caliper@0.1.0 startclient /home/user/caliper
>node ./src/comm/client/zoo-client.js ""ip:2181""


and then the process just hangs and doesn't update",open,False,2019-04-02 22:28:32,2019-04-03 13:39:03
caliper,ig0rsky,https://github.com/hyperledger/caliper/issues/402,https://api.github.com/repos/hyperledger/caliper/issues/402,Channel Creation fails when using fabric-ccp with Fabric v1.4+,"## Context
I'm trying to run Caliper with the fabric-ccp profile + fabric v1.4 images + binaries. 
I tried to run on a single orderer as well as a multi-orderer using raft. (Tested both on 1.4.0 binaries as well as 1.4.1-rc1 binaries)
I have created new crypto + config files using the generate.sh script. (1.4.0 binaries)
I keep getting the same error every time. Could you share some v1.4 examples with fabric-ccp? @aklenik Or how did you get it to work so far? 

EDIT: Changing a fabric-ccp-go.yaml file in fabric-v1.2 and making it point to a docker-compose file from v.1.4 works, but only if no new configuration is generated. Meaning only the old configuration files generated with presumably older versions of configtxgen cryptogen etc. works. If new configuration files are used, the same WritePolicy issue occurs. 
 
## Expected Behavior
The Caliper client should be able to create the channel

## Actual Behavior
The channel creation is denied because the write policy is not fulfilled.

From the logs of the orderer container: 
```bash
[channel: mychannel] Rejecting broadcast of config message from 192.168.224.1:38788 because of error: Failed to reach implicit threshold of 1 sub-policies, required 1 remaining: permission denied
```

Docker-compose file:
```yaml
version: ""3.7""
services:
  ca.org1.example.com:
    image: hyperledger/fabric-ca:1.4.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/key.pem
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/key.pem
    ports:
      - ""7056:7054""
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/key.pem'
    volumes:
      - ../config/crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ../config/crypto-config/peerOrganizations/org1.example.com/tlsca/:/etc/hyperledger/fabric-ca-server-tls
    container_name: ca.org1.example.com
    networks:
      - fabric

  ca.org2.example.com:
    image: hyperledger/fabric-ca:1.4.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.org2.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/key.pem
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/key.pem
    ports:
      - ""8056:7054""
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/key.pem'
    volumes:
      - ../config/crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ../config/crypto-config/peerOrganizations/org2.example.com/tlsca/:/etc/hyperledger/fabric-ca-server-tls
    container_name: ca.org2.example.com
    networks:
      - fabric

  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:1.4.0
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/orgs.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt, /etc/hyperledger/msp/peerOrg1/tls/ca.crt, /etc/hyperledger/msp/peerOrg2/tls/ca.crt]
      # - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      # - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      # - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    ports:
      - 7050:7050
    volumes:
      - ../config/:/etc/hyperledger/configtx
      - ../config/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/etc/hyperledger/msp/orderer
      - ../config/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
      - ../config/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/msp/peerOrg2
    networks:
      - fabric
    depends_on: 
      - ca.org1.example.com
      - ca.org2.example.com

  # orderer2.example.com:
  #   container_name: orderer2.example.com
  #   image: hyperledger/fabric-orderer:latest
  #   environment:
  #     - ORDERER_GENERAL_LOGLEVEL=debug
  #     - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
  #     - ORDERER_GENERAL_GENESISMETHOD=file
  #     - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/orgs.genesis.block
  #     - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
  #     - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
  #     - ORDERER_GENERAL_TLS_ENABLED=true
  #     - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
  #     - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
  #     - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt, /etc/hyperledger/msp/peerOrg1/tls/ca.crt, /etc/hyperledger/msp/peerOrg2/tls/ca.crt]
  #     - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
  #     - ORDERER_KAFKA_VERBOSE=true
  #     - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
  #     - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
  #     - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
  #   working_dir: /opt/gopath/src/github.com/hyperledger/fabric
  #   command: orderer
  #   ports:
  #     - 7049:7050
  #   volumes:
  #     - ../config/:/etc/hyperledger/configtx
  #     - ../config/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/:/etc/hyperledger/msp/orderer
  #     - ../config/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
  #     - ../config/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/msp/peerOrg2
  #   networks:
  #     - fabric
  #   depends_on: 
  #     - ca.org1.example.com
  #     - ca.org2.example.com

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      # - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp/
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 7051:7051
    volumes:
      - /var/run/:/host/var/run/
      - ../config/mychannel.tx:/etc/hyperledger/configtx/mychannel.tx
      - ../config/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/etc/hyperledger/msp/orderer
      - ../config/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peer
      - ../config/crypto-config/peerOrganizations/org1.example.com/users/:/etc/hyperledger/msp/users
    depends_on:
      - orderer.example.com
    networks:
      - fabric

  peer1.org1.example.com:
    container_name: peer1.org1.example.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.org1.example.com
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      # - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp/
      - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 7052:7051
    volumes:
      - /var/run/:/host/var/run/
      - ../config/mychannel.tx:/etc/hyperledger/configtx/mychannel.tx
      - ../config/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/etc/hyperledger/msp/orderer
      - ../config/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/:/etc/hyperledger/msp/peer
      - ../config/crypto-config/peerOrganizations/org1.example.com/users/:/etc/hyperledger/msp/users
    depends_on:
      - orderer.example.com
    networks:
      - fabric


  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      # - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org2.example.com/msp/
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 8051:7051
    volumes:
      - /var/run/:/host/var/run/
      - ../config/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/:/etc/hyperledger/msp/orderer
      - ../config/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/msp/peer
      - ../config/crypto-config/peerOrganizations/org2.example.com/users/:/etc/hyperledger/msp/users
    # depends_on:
    #   - orderer2.example.com
    networks:
      - fabric

  peer1.org2.example.com:
    container_name: peer1.org2.example.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.org2.example.com
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      # - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org2.example.com/msp/
      - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.example.com:7051
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 8052:7051
    volumes:
      - /var/run/:/host/var/run/
      - ../config/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/:/etc/hyperledger/msp/orderer
      - ../config/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/:/etc/hyperledger/msp/peer
      - ../config/crypto-config/peerOrganizations/org2.example.com/users/:/etc/hyperledger/msp/users
    # depends_on:
    #   - orderer2.example.com
    networks:
      - fabric

networks:
  fabric:
```
fabric-ccp-go.yaml file
```yaml
name: Fabric
version: ""1.0""
mutual-tls: false
caliper:
  blockchain: fabric-ccp
  command:
    start: ""docker-compose -f network/fabric-custom/2org2peergoleveldb/docker-compose.yaml up -d;sleep 3s""
    end: ""docker-compose -f network/fabric-custom/2org2peergoleveldb/docker-compose.yaml down -v --remove-orphans;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q);rm -rf /tmp/hfc-*""
info:
  Version: 1.4.0
  Size: ""2 Orgs with 5 Peers""
  Orderer: ""2 Etcd Raft Orderers""
  Distribution: ""Single Host""
  StateDB: Couchdb
clients:
  client0.org1.example.com:
    client:
      organization: Org1
      role: Admin
      credentialStore:
        path: /tmp/hfc-kvs/org1
        cryptoStore:
          path: /tmp/hfc-cvs/org1
      clientPrivateKey:
        path: network/fabric-custom/config/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/keystore/key.pem
      clientSignedCert:
        path: network/fabric-custom/config/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/signcerts/Admin@example.com-cert.pem
  client0.org2.example.com:
    client:
      organization: Org2
      role: Admin
      credentialStore:
        path: /tmp/hfc-kvs/org2
        cryptoStore:
          path: /tmp/hfc-cvs/org2
      clientPrivateKey:
        path: network/fabric-custom/config/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/keystore/key.pem
      clientSignedCert:
        path: network/fabric-custom/config/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/signcerts/Admin@example.com-cert.pem
channels:
  mychannel:
    configBinary: network/fabric-custom/config/mychannel.tx
    created: false
    orderers:
      - orderer.example.com
      # - orderer2.example.com
    peers:
      peer0.org1.example.com:
        eventSource: true
      peer1.org1.example.com:
        eventSource: true
      peer0.org2.example.com:
        eventSource: true
      peer1.org2.example.com:
        eventSource: true
    chaincodes:
      - id: simple
        version: v0
        language: golang
        path: contract/fabric/simple/go
      - id: smallbank
        version: v0
        language: golang
        path: contract/fabric/smallbank
        endorsement-policy:
          identities:
            - role:
                name: member
                mspId: Org1MSP
            - role:
                name: member
                mspId: Org2MSP
          policy:
            2-of:
              - signed-by: 0
              - signed-by: 1
organizations:
  Org1:
    mspid: Org1MSP
    peers:
      - peer0.org1.example.com
      - peer1.org1.example.com
    certificateAuthorities:
      - ca.org1.example.com
    adminPrivateKey:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/key.pem
    signedCert:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem
  Org2:
    mspid: Org2MSP
    peers:
      - peer0.org2.example.com
      - peer1.org2.example.com
    certificateAuthorities:
      - ca.org2.example.com
    adminPrivateKey:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore/key.pem
    signedCert:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/signcerts/Admin@org2.example.com-cert.pem
orderers:
  orderer.example.com:
    url: ""grpcs://localhost:7050""
    grpcOptions:
      ssl-target-name-override: orderer.example.com
    tlsCACerts:
      path: network/fabric-custom/config/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
  # orderer2.example.com:
  #   url: ""grpcs://localhost:7049""
  #   grpcOptions:
  #     ssl-target-name-override: orderer2.example.com
  #   tlsCACerts:
  #     path: network/fabric-custom/config/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
peers:
  peer0.org1.example.com:
    url: ""grpcs://localhost:7051""
    grpcOptions:
      ssl-target-name-override: peer0.org1.example.com
      grpc.keepalive_time_ms: 600000
    tlsCACerts:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/tlscacerts/tlsca.org1.example.com-cert.pem
  peer1.org1.example.com:
    url: ""grpcs://localhost:7052""
    grpcOptions:
      ssl-target-name-override: peer1.org1.example.com
      grpc.keepalive_time_ms: 600000
    tlsCACerts:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/tlscacerts/tlsca.org1.example.com-cert.pem
  peer0.org2.example.com:
    url: ""grpcs://localhost:8051""
    grpcOptions:
      ssl-target-name-override: peer0.org2.example.com
      grpc.keepalive_time_ms: 600000
    tlsCACerts:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/tlscacerts/tlsca.org2.example.com-cert.pem
  peer1.org2.example.com:
    url: ""grpcs://localhost:8052""
    grpcOptions:
      ssl-target-name-override: peer1.org2.example.com
      grpc.keepalive_time_ms: 600000
    tlsCACerts:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/tlscacerts/tlsca.org2.example.com-cert.pem
certificateAuthorities:
  ca.org1.example.com:
    url: ""https://localhost:7056""
    httpOptions:
      verify: false
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    tlsCACerts:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem
  ca.org2.example.com:
    url: ""https://localhost:8056""
    httpOptions:
      verify: false
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    tlsCACerts:
      path: network/fabric-custom/config/crypto-config/peerOrganizations/org2.example.com/tlsca/tlsca.org2.example.com-cert.pem

```

configtx.yaml file inside of my config dir
```yaml
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---

################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererMSP

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: crypto-config/ordererOrganizations/example.com/msp


        Policies:
            Readers:
                Type: Signature
                Rule: ""OR('OrdererMSP.member', 'OrdererMSP.client')""
            Writers:
                Type: Signature
                Rule: ""OR('OrdererMSP.member', 'OrdererMSP.client')""
            Admins:
                Type: Signature
                Rule: ""OR('OrdererMSP.admin')""

    - &Org0
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Org1MSP

        # ID to load the MSP definition as
        ID: Org1MSP

        MSPDir: crypto-config/peerOrganizations/org1.example.com/msp


        Policies:
            Readers:
                Type: Signature
                Rule: ""OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')""
            Writers:
                Type: Signature
                Rule: ""OR('Org1MSP.admin', 'Org1MSP.client')""
            Admins:
                Type: Signature
                Rule: ""OR('Org1MSP.admin')""
            Endorsement:
                Type: Signature
                Rule: ""OR('Org1MSP.peer')""

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.org1.example.com
              Port: 7051
            # - Host: peer1.org1.example.com
            #   Port: 7051
            # - Host: peer2.org1.example.com
            #   Port: 7051

    - &Org1
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Org2MSP

        # ID to load the MSP definition as
        ID: Org2MSP

        MSPDir: crypto-config/peerOrganizations/org2.example.com/msp


        Policies:
            Readers:
                Type: Signature
                Rule: ""OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')""
            Writers:
                Type: Signature
                Rule: ""OR('Org2MSP.admin', 'Org2MSP.client')""
            Admins:
                Type: Signature
                Rule: ""OR('Org2MSP.admin')""
            Endorsement:
                Type: Signature
                Rule: ""OR('Org2MSP.peer')""

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.org2.example.com
              Port: 7051
            # - Host: peer1.org2.example.com
            #   Port: 7051
            # - Host: peer2.org2.example.com
            #   Port: 7051

    # - &Org2
    #     # DefaultOrg defines the organization which is used in the sampleconfig
    #     # of the fabric.git development environment
    #     Name: Org3MSP

    #     # ID to load the MSP definition as
    #     ID: Org3MSP

    #     MSPDir: crypto-config/peerOrganizations/org3.example.com/msp

    #     # AdminPrincipal: Role.ADMIN

    #     Policies:
    #         Readers:
    #             Type: Signature
    #             Rule: ""OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')""
    #         Writers:
    #             Type: Signature
    #             Rule: ""OR('Org2MSP.admin', 'Org2MSP.client')""
    #         Admins:
    #             Type: Signature
    #             Rule: ""OR('Org2MSP.admin')""
    #         Endorsement:
    #             Type: Signature
    #             Rule: ""OR('Org2MSP.peer')""

    #     AnchorPeers:
    #         # AnchorPeers defines the location of peers which can be used
    #         # for cross org gossip communication.  Note, this value is only
    #         # encoded in the genesis block in the Application section context
    #         - Host: peer0.org3.example.com
    #           Port: 7051
    #         # - Host: peer1.org3.example.com
    #         #   Port: 7051
    #         # - Host: peer2.org3.example.com
    #         #   Port: 7051

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.3 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.3.x
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.3 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.3.0 or later.
        V1_3: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.1.x
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.1 orderer capabilities, ensure that all
        # orderers on a channel are at v1.1.0 or later.
        V1_1: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V2.0 for Application enables the new non-backwards compatible
        # features and fixes of fabric v2.0.
        V2_0: false
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3 (note, this need not be set if
        # later version capabilities are set)
        V1_3: true
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are ""solo"" and ""kafka""
    OrdererType: solo

    Addresses:
        - orderer.example.com:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 250ms

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    MaxChannels: 0

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 127.0.0.1:9092

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: ""ANY Readers""
        Writers:
            Type: ImplicitMeta
            Rule: ""ANY Writers""
        Admins:
            Type: ImplicitMeta
            Rule: ""MAJORITY Admins""
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: ""ANY Writers""

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: ""ANY Readers""
        Writers:
            Type: ImplicitMeta
            Rule: ""ANY Writers""
        Admins:
            Type: ImplicitMeta
            Rule: ""ANY Admins""
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: ""MAJORITY Endorsement""
        Endorsement:
            Type: ImplicitMeta
            Rule: ""MAJORITY Endorsement""

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    Capabilities:
        <<: *ApplicationCapabilities

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: ""ANY Readers""
        Writers:
            Type: ImplicitMeta
            Rule: ""ANY Writers""
        Admins:
            Type: ImplicitMeta
            Rule: ""ANY Admins""
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: ""MAJORITY Endorsement""
        Endorsement:
            Type: ImplicitMeta
            Rule: ""MAJORITY Endorsement""

    ################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:
  TwoOrgsOrdererGenesis:
      <<: *ChannelDefaults
      Orderer:
          <<: *OrdererDefaults
          Organizations:
              - *OrdererOrg
          Capabilities:
              <<: *OrdererCapabilities
      Consortiums:
          SampleConsortium2:
              Organizations:
                  - *Org1
                  - *Org0

  TwoOrgsChannel:
      Consortium: SampleConsortium2
      <<: *ChannelDefaults
      Application:
          <<: *ApplicationDefaults
          Organizations:
            - *Org0
            - *Org1
          Capabilities:
              <<: *ApplicationCapabilities

  # ThreeOrgsChannel:
  #     Consortium: SampleConsortium3
  #     <<: *ChannelDefaults
  #     Application:
  #         <<: *ApplicationDefaults
  #         Organizations:
  #           - *Org1
  #           - *Org2
  #           - *Org0
  #         Capabilities:
  #             <<: *ApplicationCapabilities

  SampleDevModeKafka:
      <<: *ChannelDefaults
      Capabilities:
          <<: *ChannelCapabilities
      Orderer:
          <<: *OrdererDefaults
          OrdererType: kafka
          Kafka:
              Brokers:
              - kafka.example.com:9092
          Organizations:
          - *OrdererOrg
          Capabilities:
              <<: *OrdererCapabilities
      Application:
          <<: *ApplicationDefaults
          Organizations:
          - <<: *OrdererOrg
      Consortiums:
          SampleConsortium:
              Organizations:
              - *Org1
              - *Org0

  SampleMultiNodeEtcdRaft:
    <<: *ChannelDefaults
    Capabilities:
      <<: *ChannelCapabilities
    Orderer:
      <<: *OrdererDefaults 
      OrdererType: etcdraft
      EtcdRaft:
        Consenters:
        - Host: orderer.example.com
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
        # - Host: orderer2.example.com
        #   Port: 7050
        #   ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
        #   ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
        Options:
          # TickInterval is the time interval between two Node.Tick invocations.
          TickInterval: 500ms

          # ElectionTick is the number of Node.Tick invocations that must pass
          # between elections. That is, if a follower does not receive any
          # message from the leader of current term before ElectionTick has
          # elapsed, it will become candidate and start an election.
          # ElectionTick must be greater than HeartbeatTick.
          ElectionTick: 10

          # HeartbeatTick is the number of Node.Tick invocations that must
          # pass between heartbeats. That is, a leader sends heartbeat
          # messages to maintain its leadership every HeartbeatTick ticks.
          HeartbeatTick: 1

          # MaxInflightBlocks limits the max number of in-flight append messages
          # during optimistic replication phase.
          MaxInflightBlocks: 5

          # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
          SnapshotIntervalSize: 20 MB
      Addresses:
        - orderer.example.com:7050
        # - orderer2.example.com:7050
      Organizations:
      - *OrdererOrg
      Capabilities:
        <<: *OrdererCapabilities
    Application:
      <<: *ApplicationDefaults
      Organizations:
      - <<: *OrdererOrg
    Consortiums:
      SampleConsortium2:
        Organizations:
        - *Org1
        - *Org0
```
## Your Environment
* Version used: Fabric v1.4.0
* Environment name and version: Nodejs 8.15.0 (running node-v10 on macOS caused another issue which is why I reverted back to 8.15.0
* Operating System and version (desktop or mobile): macOS 
",open,False,2019-04-02 17:43:57,2019-04-04 08:57:37
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/401,https://api.github.com/repos/hyperledger/caliper/issues/401,Added compose files for fabric 1.4 with kafka consensus with golevel db,"Signed-off-by: Ramakrishna Srinivasamurthy <ramakrishna.srinivasamurthy@intel.com>

<!--- Provide a general summary of the pull request in the Title above -->

## Checklist
 - [ ]  A link to the issue/user story that the pull request relates to
 - [ ]  How to recreate the problem without the fix
 - [ ]  Design of the fix
 - [ ]  How to prove that the fix works
 - [ ]  Automated tests that prove the fix keeps on working
 - [ ]  Documentation - any JSDoc, website, or Stackoverflow answers?


## Issue/User story
<!--- What issue / user story is this for -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.


## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Design of the fix
<!-- Focus on why you designed this fix this way, and what was discounted. Do not describe just the code - we can read that! -->

## Validation of the fix
<!-- Over and above the tests, what has been done to prove this works? -->

## Automated Tests
<!-- Please describe the automated tests that are put in place to stop this recurring -->

## What documentation has been provided for this pull request
<!-- JSDocs, WebSite and answers to Stack Overflow questions are possible documentation sources -->
",open,True,2019-04-02 07:04:58,2019-04-03 10:26:59
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/400,https://api.github.com/repos/hyperledger/caliper/issues/400,Fix undefined error,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

Fix the error: ""error: [monitor-docker.js]: TypeError: Cannot read property 'id' of undefined"".",open,True,2019-04-01 11:37:13,2019-04-01 11:37:13
caliper,panyu4,https://github.com/hyperledger/caliper/pull/399,https://api.github.com/repos/hyperledger/caliper/issues/399,Fix TPS computation for batch mode,"Signed-off-by: panyu2 <PY.panyu@huawei.com>


## Issue/User story
<!--- What issue / user story is this for -->
When the  transactions are not sent evenly eg. sending several transactions with one workload, current TPS may give some strange throughtput since in some situations the time used for transactions is not accurately computed. 


## Existing issues
#226 

## Design of the fix
<!-- Focus on why you designed this fix this way, and what was discounted. Do not describe just the code - we can read that! -->
1. record the maximum final time of all successful and failed transactions;
2. modify the computation of successful transactions time to the all transactions used time 

## Validation of the fix
<!-- Over and above the tests, what has been done to prove this works? -->
1. start Caliper normally with 'open' test module and 'txnPerBatch' set larger than TPS ;
2. open another terminal and stop the running blockchain network.",open,True,2019-04-01 11:11:31,2019-04-01 11:11:32
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/398,https://api.github.com/repos/hyperledger/caliper/issues/398,Throw new error when query but no committed transaction,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>
",open,True,2019-04-01 07:49:08,2019-04-01 07:49:09
caliper,houqinghui,https://github.com/hyperledger/caliper/pull/397,https://api.github.com/repos/hyperledger/caliper/issues/397,add environment check script,"The script `env_check.sh`  can check whethe the pre-requisites of Caliper have been installed and gives the version. @panyu4 @aklenik 
#376 ",open,True,2019-04-01 02:16:34,2019-04-02 05:55:59
caliper,clumsky,https://github.com/hyperledger/caliper/issues/396,https://api.github.com/repos/hyperledger/caliper/issues/396,The fabric-ccp don't have network file for fabric-v1.3/v1.4. I want to use fabric-v1.3/1.4 to test adapters' fabric-ccp and fabric,"@aklenik 
<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
 #393 ",open,False,2019-04-01 01:18:20,2019-04-03 10:32:07
caliper,quangtdn,https://github.com/hyperledger/caliper/pull/395,https://api.github.com/repos/hyperledger/caliper/issues/395,Fix conflicts between smallbank benchmark and fabric-ccp configuration ,"Signed-off-by: quangtdn <nmquang229@yahoo.com.vn>

This is just to fix the issue #394 . 

In the benchmarking methods smallbankOperations.js and query.js, for fabric-ccp type the test should convert transactions' arguments into Strings before sending the transactions. ",open,True,2019-03-30 15:50:16,2019-03-31 09:44:49
caliper,quangtdn,https://github.com/hyperledger/caliper/issues/394,https://api.github.com/repos/hyperledger/caliper/issues/394,errors running smallbank chaincode with fabric-ccp,"Hi people,

I just run a simple bencmark:
npm run bench -- -c benchmark/smallbank/config.yaml -n network/fabric-v1.1/3org1peergoleveldb/fabric-ccp-go.yaml

But I got these errors. Other chaincodes are fine.

Thank you.

info: [bench-flow.js]: Started monitor successfully
info: [bench-flow.js]: ####### Testing 'smallOperations' #######
info: [bench-flow.js]: ------ Test round 1 ------
error: [adapters/fabric-ccp]: Transaction[5d8b589359] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[c7a6e1e842] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[a433e0365d] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[89660ac33a] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[a4bf36597c] life-cycle errors:
	- ""value"" argument must not be a number
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
error: [adapters/fabric-ccp]: Transaction[512d6f9a38] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[67263cf71a] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[bcc827ecad] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[0821a77478] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[3bfa87d522] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[8c5c0c3338] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[915c070598] life-cycle errors:
	- ""value"" argument must not be a number
error: [adapters/fabric-ccp]: Transaction[97e5e7d01c] life-cycle errors:",open,False,2019-03-30 09:38:43,2019-03-31 09:45:40
caliper,quangtdn,https://github.com/hyperledger/caliper/issues/393,https://api.github.com/repos/hyperledger/caliper/issues/393,clients in fabric-ccp.yaml file,"Hi there,

I want to ask about the clients specified in fabric-ccp.yaml files. As I see, the clients that Caliper uses to run the benchmark are those specified in the config.yaml file (with type local or Zookeeper). Then what are those clients specified in fabric-ccp.yaml? In the fabric.yaml files, there is actually no specification for clients. 

Thank you.",closed,False,2019-03-30 08:12:20,2019-04-03 12:14:41
caliper,quangtdn,https://github.com/hyperledger/caliper/issues/392,https://api.github.com/repos/hyperledger/caliper/issues/392,errors benchmarking with multiple orderers,"Hi everyone,

I recently have problems with running Caliper under fabric-ccp config with multiple orderers.
I already successfully ran Caliper under fabric-ccp (connected to all 3 orderers) to benchmark a Kafka-based fabric network with 3 orderers.

For this time, I regenerate the configs file, bring up the same fabric network again. The fabric network still works fine. I can also successfully use Caliper to benchmark it under fabric.json config (i.e. connect to only 1 orderer). However, when I try it with fabric-ccp on 3 orderers, I receive the errors.

Update: I tried to run the basic default test of caliper 2org1peergoleveldb with fabric-ccp, but it gave me the same error. This is weird. Maybe Caliper might have clashed with my system in previous run !?

Updat1: Okay, I just rebuild the whole caliper (npm rebuild, then npm install). It works fine now. I think this is not a random error as I got the error on both my laptop and nodes on cluster.


info: [bench-flow.js]: ####### Caliper Test #######
info: [adapters/fabric-ccp]: Fabric SDK version: 1.1.0; TLS: none
warn: [adapters/fabric-ccp]: Org1's registrar's materials found locally. Make sure it is the right one!
warn: [adapters/fabric-ccp]: Org1's admin's materials found locally. Make sure it is the right one!
warn: [adapters/fabric-ccp]: client0.org1.example.com's materials found locally. Make sure it is the right one!
info: [adapters/fabric-ccp]: mychannel successfully created
info: [adapters/fabric-ccp]: Sleeping 5s...
info: [adapters/fabric-ccp]: Org1's peers successfully joined mychannel: peer0.org1.example.com,peer1.org1.example.com,peer2.org1.example.com
info: [adapters/fabric-ccp]: Sleeping 5s...
info: [adapters/fabric-ccp]: Installing chaincodes for mychannel...
info: [packager/Node.js]: packaging Node from /users/quangtdn/caliper/src/contract/fabric/simple/node
info: [adapters/fabric-ccp]: simple@v0 successfully installed on Org1's peers: peer0.org1.example.com,peer1.org1.example.com,peer2.org1.example.com
info: [adapters/fabric-ccp]: Instantiating simple@v0 in mychannel. This might take some time...
error: [adapters/fabric-ccp]: The following errors occured while instantiating simple@v0 in mychannel:
	- Event hub error from peer0.org1.example.com during instantiating simple@v0 in mychannel: Received status message on the event stream. status:FORBIDDEN
	- Event hub error from peer1.org1.example.com during instantiating simple@v0 in mychannel: Received status message on the event stream. status:FORBIDDEN
	- Event hub error from peer2.org1.example.com during instantiating simple@v0 in mychannel: Received status message on the event stream. status:FORBIDDEN
error: [bench-flow.js]: Error: Error: Event hub error from peer2.org1.example.com during instantiating simple@v0 in mychannel: Received status message on the event stream. status:FORBIDDEN
    at EventRegistration.es.eventHub.registerTxEvent [as onError] (/users/quangtdn/caliper/src/adapters/fabric-ccp/fabric.js:1129:41)
    at ChannelEventHub._closeAllCallbacks (/users/quangtdn/caliper/node_modules/fabric-client/lib/ChannelEventHub.js:559:15)
    at ChannelEventHub._disconnect (/users/quangtdn/caliper/node_modules/fabric-client/lib/ChannelEventHub.js:451:8)
    at ClientDuplexStream.<anonymous> (/users/quangtdn/caliper/node_modules/fabric-client/lib/ChannelEventHub.js:381:11)
    at emitOne (events.js:116:13)
    at ClientDuplexStream.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
    at readCallback (/users/quangtdn/caliper/node_modules/grpc/src/client.js:312:14)
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [bench-flow.js]: 
#######################################
# Test summary: 0 succeeded, 0 failed #
#######################################

info: [scripts/main.js]: Benchmark run successfully


Thank you !",closed,False,2019-03-26 12:04:04,2019-04-03 11:00:38
caliper,nimaafraz,https://github.com/hyperledger/caliper/issues/391,https://api.github.com/repos/hyperledger/caliper/issues/391,Benchmark drm fails,"<!--- Provide a general summary of the issue in the Title above -->
The following command fails:
npm run bench -- -c benchmark/drm/config.yaml -n network/fabric-v1.1/dev/fabric-node.json
## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
(node:76178) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 226715)
(node:76178) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'toString' of undefined
    at Fabric.queryState (/Users/nima/caliper2/caliper/src/adapters/fabric/fabric.js:213:82)
    at Blockchain.queryState (/Users/nima/caliper2/caliper/src/comm/blockchain.js:162:33)
    at Object.module.exports.run (/Users/nima/caliper2/caliper/benchmark/drm/query.js:36:19)
    at runFixedNumber (/Users/nima/caliper2/caliper/src/comm/client/local-client.js:140:26)
    at <anonymous>
## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",open,False,2019-03-26 10:44:36,2019-03-30 13:38:58
caliper,skyhuihui,https://github.com/hyperledger/caliper/issues/390,https://api.github.com/repos/hyperledger/caliper/issues/390,"Failed to instantiate chaincodes: Error: ""target"" parameter not specified and no peers are set on this Channel instance or specfied for this channel in the network ","info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [install-chaincode.js]: installing all chaincodes......
info: [install-chaincode.js]: Installing chaincode simple...
info: [install-chaincode.js]: Installed chaincode simple successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...
error: [instantiate-chaincode.js]: Failed to instantiate chaincodes: Error: ""target"" parameter not specified and no peers are set on this Channel instance or specfied for this channel in the network 
    at Channel._getTargets (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:3488:10)
    at Channel._getFirstAvailableTarget (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:3432:24)
    at Channel._initialize (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:350:23)
    at Channel.initialize (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:250:25)
    at <anonymous>
error: [fabric.js]: Fabric chaincode install failed: Error: ""target"" parameter not specified and no peers are set on this Channel instance or specfied for this channel in the network 
    at Channel._getTargets (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:3488:10)
    at Channel._getFirstAvailableTarget (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:3432:24)
    at Channel._initialize (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:350:23)
    at Channel.initialize (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:250:25)
    at <anonymous>
error: [bench-flow.js]: Error: Error: ""target"" parameter not specified and no peers are set on this Channel instance or specfied for this channel in the network 
    at Channel._getTargets (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:3488:10)
    at Channel._getFirstAvailableTarget (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:3432:24)
    at Channel._initialize (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:350:23)
    at Channel.initialize (/home/js/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Channel.js:250:25)
    at <anonymous>
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0


{
	""caliper"": {
		""blockchain"": ""fabric"",
		""command"": {
			""start"": ""echo '启动'"",
			""end"": ""echo '失败'""
		}
	},
	""fabric"": {
		""cryptodir"": ""/home/js/go/src/github.com/hyperledger/caliper/network/suyuan/crypto-config"",
		""network"": {
			""orderer"": {
				""url"": ""grpc://localhost:7050"",
				""mspid"": ""hf.chainhero.io"",
				""msp"": ""/home/js/go/src/github.com/hyperledger/caliper/network/suyuan/crypto-config/ordererOrganizations/hf.chainhero.io/msp"",
				""server-hostname"": ""orderer.hf.chainhero.io"",
				""tls_cacerts"": ""/home/js/go/src/github.com/hyperledger/caliper/network/suyuan/crypto-config/ordererOrganizations/hf.chainhero.io/orderers/orderer.hf.chainhero.io/tls/ca.crt""
			},
			""Org1ChainHero"": {
				""name"": ""ChainHeroOrganization1"",
				""mspid"": ""org1.hf.chainhero.io"",
				""domain"": ""org1.hf.chainhero.io"",
				""msp"": ""/home/js/go/src/github.com/hyperledger/caliper/network/suyuan/crypto-config/peerOrganizations/org1.hf.chainhero.io/msp"",
				""peer1"": {
					""requests"": ""grpcs://localhost:7051"",
					""events"": ""grpcs://localhost:7053"",
					""server-hostname"": ""peer0.org1.hf.chainhero.io"",
					""tls_cacerts"": ""/home/js/go/src/github.com/hyperledger/caliper/network/suyuan/crypto-config/peerOrganizations/org1.hf.chainhero.io/peers/peer0.org1.hf.chainhero.io/tls/ca.crt""
				}
			}
		},
		""channel"": [{
			""name"": ""chainhero"",
			""deployed"": true,
			""config"": ""/home/js/go/src/github.com/hyperledger/caliper/network/suyuan/artifacts/chainhero.channel.tx"",
			""organizations"": [""Org1ChainHero""]
		},
		{
			""name"": ""token"",
			""deployed"": true,
			""config"": ""/home/js/go/src/github.com/hyperledger/caliper/network/suyuan/artifacts/token.channel.tx"",
			""organizations"": [""Org1ChainHero""]
		}],
		""chaincodes"": [{
			""id"": ""simple"",
			""path"": ""contract/fabric/simple/go"",
			""language"": ""golang"",
			""version"": ""v0"",
			""channel"": ""token"",
			""installed"":false,
			""instantiated"":false
		}],
		""endorsement-policy"": {
			""identities"": [{
					""role"": {
						""name"": ""member"",
						""mspId"": ""org1.hf.chainhero.io""
					}
				},
				{
					""role"": {
						""name"": ""admin"",
						""mspId"": ""org1.hf.chainhero.io""
					}
				}
			],
			""policy"": {
				""2-of"": [{
					""signed-by"": 0
				}, {
					""signed-by"": 1
				}]
			}

		},
		""context"": {
			""open"": ""token"",
			""query"": ""token""
		}
	},
	""info"": {
		""Version"": ""1.2.0"",
		""Size"": ""1 Orgs with 1 Peer"",
		""Orderer"": ""kafka"",
		""Distribution"": ""Single Host""
	}
}",open,False,2019-03-26 09:04:23,2019-03-30 01:17:24
caliper,zcqzcg,https://github.com/hyperledger/caliper/issues/389,https://api.github.com/repos/hyperledger/caliper/issues/389,If there is no result comming back after you commit the transactions,"It's like ""**unfinished**"" forever on command line.

And all transactions has been committed and sucess in peer.

Only the result was not comming back to my local machine.

So, here would be a little bug I have found in the Caliper fabric config file.

In the secter ""info"", as you can see below:
```json 
{
  ""info"": {
    ""Version"": ""1.0.0"",
    ""Size"": ""4 Peers"",
    ""Orderer"": ""Solo"",
    ""Distribution"": ""Single Host"",
    ""details"": ""not provided""
  }
}
```

### You MUST get the ""Version"" right with your current fabric network.

For me, it writes ""1.0.3"" from nowhere, and it took me two days to find this bug, which is ignored in the [caliper site](https://hyperledger.github.io/caliper/docs/Fabric_Configuration.html).

Please add this note on your site. 
Thanks!",open,False,2019-03-26 02:27:14,2019-03-27 10:37:52
caliper,quangtdn,https://github.com/hyperledger/caliper/issues/388,https://api.github.com/repos/hyperledger/caliper/issues/388,zookeeper clients setup,"Hi people!

I am going to use the Zookeeper service for benchmarking with distributed clients now. I have  some questions about the settings on Caliper. 

Firstly, do all the clients on distributed machines under Zookeeper service benchmark with the same exactly one channel specified in the master node? I want to make sure that distributed clients will not independently launch independent channels to test the same fabric network.

Secondly, if I run on nodes of a cluster, should time synchronization be inherent within the cluster?

Lastly, I just want to justify my understanding of the documentation. Please correct me if I am wrong. As far as I understand, the following steps are required for benchmarking distributed clients:

1) Run Zookeeper on 1 machine with some IP address, say 10.229.42.159.
2) On any machine that you want to launch Caliper client(s) for benchmarking, you run 'npm run startclient -- 10.229.42.159:2181' where 2181 is the port that Zookeeper uses to listen to client connection.
3) Add this to the config.json (or yaml) file of Caliper:
""clients"": {
   ""type"": ""zookeeper"",
   ""zoo"" : {
     ""server"": ""10.229.42.159:2181"",
     ""clientsPerHost"": 5
   }
 }
And you don't have to specify anything about machines connected to Zookeeper server at 10.229.42.159 and the number of such machines. Caliper will automatically run benchmark on all of them.

Thank you very much for your time!",closed,False,2019-03-25 10:58:03,2019-03-25 18:28:01
caliper,nimaafraz,https://github.com/hyperledger/caliper/issues/387,https://api.github.com/repos/hyperledger/caliper/issues/387,Installing Fabric dependencies fails,"npm run fabric-v1.1-deps                                                                                                                                                                             


> caliper@0.1.0 fabric-v1.1-deps /Users/nima/caliper2/caliper
> npm install --no-save grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0


> dtrace-provider@0.8.7 install /Users/nima/caliper2/caliper/node_modules/dtrace-provider
> node-gyp rebuild || node suppress-error.js

  ACTION binding_gyp_ndtp_target_build_ndtp .
  TOUCH Release/obj.target/ndtp.stamp

> grpc@1.10.1 install /Users/nima/caliper2/caliper/node_modules/grpc
> node-pre-gyp install --fallback-to-build --library=static_library

node-pre-gyp ERR! Tried to download(403): https://storage.googleapis.com/grpc-precompiled-binaries/node/grpc/v1.10.1/node-v67-darwin-x64-unknown.tar.gz
node-pre-gyp ERR! Pre-built binaries not found for grpc@1.10.1 and node@11.10.0 (node-v67 ABI, unknown) (falling back to source compile with node-gyp)
node-pre-gyp ERR! Pre-built binaries not installable for grpc@1.10.1 and node@11.10.0 (node-v67 ABI, unknown) (falling back to source compile with node-gyp)
node-pre-gyp ERR! Hit error Connection closed while downloading tarball file
  CXX(target) Release/obj.target/grpc/deps/grpc/src/core/lib/surface/init.o
  CXX(target) Release/obj.target/grpc/deps/grpc/src/core/lib/surface/init.o
rm: ./Release/.deps/Release/obj.target/grpc/deps/grpc/src/core/lib/surface/init.o.d.raw: No such file or directory
make: *** [Release/obj.target/grpc/deps/grpc/src/core/lib/surface/init.o] Error 1
  CXX(target) Release/obj.target/grpc/deps/grpc/src/core/lib/avl/avl.o
gyp ERR! build error
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:262:23)
gyp ERR! stack     at ChildProcess.emit (events.js:197:13)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:254:12)
gyp ERR! System Darwin 18.5.0
gyp ERR! command ""/Users/nima/.nvm/versions/node/v11.10.0/bin/node"" ""/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""build"" ""--fallback-to-build"" ""--library=static_library"" ""--module=/Users/nima/caliper2/caliper/node_modules/grpc/src/node/extension_binary/node-v67-darwin-x64-unknown/grpc_node.node"" ""--module_name=grpc_node"" ""--module_path=/Users/nima/caliper2/caliper/node_modules/grpc/src/node/extension_binary/node-v67-darwin-x64-unknown""
gyp ERR! cwd /Users/nima/caliper2/caliper/node_modules/grpc
gyp ERR! node -v v11.10.0
gyp ERR! node-gyp -v v3.8.0
gyp ERR! not ok
node-pre-gyp ERR! build error
node-pre-gyp ERR! stack Error: Failed to execute '/Users/nima/.nvm/versions/node/v11.10.0/bin/node /usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js build --fallback-to-build --library=static_library --module=/Users/nima/caliper2/caliper/node_modules/grpc/src/node/extension_binary/node-v67-darwin-x64-unknown/grpc_node.node --module_name=grpc_node --module_path=/Users/nima/caliper2/caliper/node_modules/grpc/src/node/extension_binary/node-v67-darwin-x64-unknown' (1)
node-pre-gyp ERR! stack     at ChildProcess.<anonymous> (/Users/nima/caliper2/caliper/node_modules/grpc/node_modules/node-pre-gyp/lib/util/compile.js:83:29)
node-pre-gyp ERR! stack     at ChildProcess.emit (events.js:197:13)
node-pre-gyp ERR! stack     at maybeClose (internal/child_process.js:984:16)
node-pre-gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:265:5)
node-pre-gyp ERR! System Darwin 18.5.0
node-pre-gyp ERR! command ""/Users/nima/.nvm/versions/node/v11.10.0/bin/node"" ""/Users/nima/caliper2/caliper/node_modules/grpc/node_modules/.bin/node-pre-gyp"" ""install"" ""--fallback-to-build"" ""--library=static_library""
node-pre-gyp ERR! cwd /Users/nima/caliper2/caliper/node_modules/grpc
node-pre-gyp ERR! node -v v11.10.0
node-pre-gyp ERR! node-pre-gyp -v v0.7.0
node-pre-gyp ERR! not ok
Failed to execute '/Users/nima/.nvm/versions/node/v11.10.0/bin/node /usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js build --fallback-to-build --library=static_library --module=/Users/nima/caliper2/caliper/node_modules/grpc/src/node/extension_binary/node-v67-darwin-x64-unknown/grpc_node.node --module_name=grpc_node --module_path=/Users/nima/caliper2/caliper/node_modules/grpc/src/node/extension_binary/node-v67-darwin-x64-unknown' (1)
make: *** No rule to make target `Release/obj.target/grpc/deps/grpc/src/core/lib/backoff/backoff.o', needed by `Release/libgrpc.a'.  Stop.
gyp ERR! build error
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:262:23)
gyp ERR! stack     at ChildProcess.emit (events.js:197:13)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:254:12)
gyp ERR! System Darwin 18.5.0
gyp ERR! command ""/Users/nima/.nvm/versions/node/v11.10.0/bin/node"" ""/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""build"" ""--fallback-to-build"" ""--library=static_library"" ""--module=/Users/nima/caliper2/caliper/node_modules/grpc/src/node/extension_binary/node-v67-darwin-x64-unknown/grpc_node.node"" ""--module_name=grpc_node"" ""--module_path=/Users/nima/caliper2/caliper/node_modules/grpc/src/node/extension_binary/node-v67-darwin-x64-unknown""
gyp ERR! cwd /Users/nima/caliper2/caliper/node_modules/grpc
gyp ERR! node -v v11.10.0
gyp ERR! node-gyp -v v3.8.0
gyp ERR! not ok
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! grpc@1.10.1 install: `node-pre-gyp install --fallback-to-build --library=static_library`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the grpc@1.10.1 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /Users/nima/.npm/_logs/2019-03-24T17_22_39_161Z-debug.log
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! caliper@0.1.0 fabric-v1.1-deps: `npm install --no-save grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the caliper@0.1.0 fabric-v1.1-deps script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /Users/nima/.npm/_logs/2019-03-24T17_22_39_323Z-debug.log
## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior

## Actual Behavior

## Possible Fix

## Steps to Reproduce
1.Clone Caliper
2. npm i
3. npm run fabric-v1.1-deps                                                                                                                                                                             

## Existing issues


## Context

## Your Environment
Mac os
npm 6.4.1
node v11.10.0
grpc 6.4.1",closed,False,2019-03-24 17:28:34,2019-03-25 10:04:53
caliper,shiningfrog,https://github.com/hyperledger/caliper/issues/386,https://api.github.com/repos/hyperledger/caliper/issues/386,how to re-implement the real tps performance as fabric mentioned?,"some real test environment help?

## Context
hello, i'm test the fabric tps on caliper. but i can't achive the 3k+ tps mentioned by fabric. i use about 4 servers (1t hdd, totally 12 core+ cpu). i think my computing resources are enough. but how can i use them to achive a better perfomace? 

please tell me how you desingers can build the test environment to test the fabric ? and how to achieve such a high performance?

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2019-03-22 02:20:30,2019-03-22 07:18:47
caliper,Salmanah,https://github.com/hyperledger/caliper/issues/385,https://api.github.com/repos/hyperledger/caliper/issues/385,Hyperledger caliper with composer tests fail when running,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

I have created a test environment locally and now I am trying to test my transactions, the issue here is that all my tests fail. I do not know why, as when I use any of the other test folders like perishable-network or vehicle-lifecycle-network, with my fabric network some of the tests succeed.

This is the output of me running my own tests on the files below, I want to know why they fail and how i can possibly fix the issues:

![failed](https://user-images.githubusercontent.com/15213174/54827858-35624380-4cb3-11e9-8f45-1bde4f7c288a.png)

## Expected Behavior
<!--- Tell us what should happen -->
Expecting some of the test iterations to succeed
## Actual Behavior
<!--- Tell us what happens instead -->
Every test iteration fails
## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1. My logic.js file 
```
/**
 *A participant of type home in the network
 */
participant Home identified by homeId {
  o   String homeId
  -->   Owner	 homeOwner
  o   Address   address
  --> Service[] services optional
  --> Device[] devices optional 
}
/**
 *A participant of type Service in the network
 */
participant Service identified by serviceId{
  o   String serviceId
  o   String serviceName
}

/**
 *A participant of type Owner in the network
 */
participant Owner identified by personId{
 o  String personId
 o  String  firstname optional
 o  String  lastname optional
}

/**
 *An asset of type Device in the network
 */
participant Device identified by deviceId{
  o     String    deviceId
  -->   Home		  home 
  o	    String	  deviceLocation
  o     Double   minimumTemperature
  o     Double   maximumTemperature
  o     String    nickname 
  o     DeviceReading[]   deviceReadings optional 
}

abstract transaction DeviceTransaction{
	--> Device device
}

concept Address{
  o String  street
  o String  city
}

transaction DeviceReading extends DeviceTransaction{
  	o	Double	temperature
    o	String	readingTime
    o	String	readingDate
}

transaction AddingHome{
  --> Home  home
}

transaction AddDevice extends DeviceTransaction{
}

event HomeAdded{
--> Owner homeOwner
--> Home  home
  o String  message
}

event DeviceAdded{
--> Device device
o String message
}

event DeviceReadingSent{
  o String    message
  --> Device  device
}

event TemperatureThresholdEvent{
   o String message
   o Double temperature
   o String readingTime 
}


transaction SetupDemo{

}
```
2. my logic.js file
```
'use strict';
 

/***
 * A temperature measurement has been sent from a device
 * @param {org.blockchain.model.DeviceReading} readings - the deviceReading transaction
 * @transaction
 */

 async function readingReceived(readings){
    const device = readings.device;
    const readingTime = readings.readingTime;
    const factory = getFactory(); 
     
    console.log(""Temperature received at: ""+readingTime);
    console.log(""From Device: ""+device.deviceId); 

    if(device.deviceReadings){
        device.deviceReadings.push(readings); 
    }else{
        device.deviceReadings = [readings]; 
    }

    if(readings.temperature < device.minimumTemperature || readings.temperature > device.maximumTemperature){
      var temperatureEvent = factory.newEvent(""org.blockchain.model"",""TemperatureThresholdEvent"");
      temperatureEvent.device = device; 
      temperatureEvent.message = ""Temperature has reached threshold! ""+device.deviceId+"" has a temperature of ""+readings.temperature;
      temperatureEvent.readingTime = reading.readingTime; 
      emit(temperatureEvent); 
    }
    //add the temperature reading to the device
    const deviceRegistry = await getParticipantRegistry('org.blockchain.model.Device'); 
    await deviceRegistry.update(device);
 }
```
3. This is the js file inside the benchmark/composer/composer-samples 
```
'use strict';

const removeExisting = require('../composer-test-utils').clearAll;
const logger = require('../../../src/comm/util').getLogger('smarthomes.js');
const os = require('os');
const uuid = os.hostname() + process.pid; // UUID for client within test

module.exports.info  = 'Smarthomes Network Performance Test';

let bc;
let busNetConnection;
let testAssetNum;
let factory;
let assetId;
let testTransaction; 
const namespace = 'org.blockchain.model';

module.exports.init = async function(blockchain, context, args) {
    // Create Participants and Assets to use in main test
    bc = blockchain;
    busNetConnection = context;
    testAssetNum = args.testAssets;
    testTransaction = args.transaction; 
    assetId = 0;
     

    factory = busNetConnection.getBusinessNetwork().getFactory();

    let homeRegistry = await busNetConnection.getParticipantRegistry(namespace + '.Home');
    let ownerRegistry = await busNetConnection.getParticipantRegistry(namespace + '.Owner');
    let deviceRegistry = await busNetConnection.getParticipantRegistry(namespace + '.Device');


    let homes = new Array();
    let owners = new Array();
    let devices = new Array();
    let populated;

    switch(testTransaction){
    case 'DeviceReading':
        //Received a device reading, require Homes, owners and devices. 
            // Test specified number of Owners
        owners.push(factory.newResource(namespace, 'Owner', 'OWNER_' + uuid + '_0'));

        // Test specified number of Homes
        for(let i = 0; i<testAssetNum; i++){
            let home = factory.newResource(namespace, 'Home', 'HOME_' + uuid + '_'+i);
            let homeAddress = factory.newConcept(namespace, 'Address');
            homeAddress.street = 'Problemveien '+i;
            homeAddress.city ='Oslo';
            home.address = homeAddress;
            home.homeOwner = factory.newRelationship(namespace,'Owner','OWNER_' +uuid + '_0'); 
            homes.push(home);
        }
        //Test specified number of Devices
        for(let i = 0; i <testAssetNum; i++){
            let device = factory.newResource(namespace,'Device','DEVICE_'+uuid + '_' +i); 
            device.deviceLocation = 'Kitchen'; 
            device.minimumTemperature = 25.0; 
            device.maximumTemperature = 30.0
            device.nickname = uuid;
            device.home = factory.newRelationship(namespace, 'Home', 'HOME_' + uuid + '_0');
            devices.push(device);  
        }
        populated = await ownerRegistry.exists(owners[0].getIdentifier());
        break;
    case 'addingHome':
        //Transaction to add a new Home
        
        let home = factory.newResource(namespace,'Home', 'HOME_'+ uuid + '_0');
        home.homeOwner = factory.newRelationship(namespace,'Owner', factory.newResource(namespace,'Owner','OWNER_'+uuid + '_'+testAssetNum)); 
        let homeAddress = factory.newConcept(namespace, 'Address');
        homeAddress.street = 'Problemveien 221';
        homeAddress.city ='Oslo';
        home.address = homeAddress;
        homes.push(home); 
        populated = await homeRegistry.exists(homes[0].getIdentifier());
        break;
    default:
        throw new Error(""No test transaction specified in module.init""); 
    }

    try {
        // Conditionally add/update registries
        
        if (!populated) {
            logger.debug('Adding test assets ...');
            await homeRegistry.addAll(homes);
            await ownerRegistry.addAll(owners);
            await deviceRegistry.addAll(devices);
            logger.debug('Asset addition complete ...');
        } else {
            logger.debug('Updating test assets ...');
            await removeExisting(homeRegistry, 'HOME_' + uuid);
            await removeExisting(ownerRegistry, 'OWNER_' + uuid);
            await removeExisting(deviceRegistry, 'DEVICE_' + uuid);
            await homeRegistry.addAll(homes);
            await ownerRegistry.addAll(owners);
            await deviceRegistry.addAll(devices);
            logger.debug('Asset update complete ...');
        }
    } catch (error) {
        logger.error('error in test init(): ', error);
        return Promise.reject(error);
    }
};

module.exports.run = function() {
    let transaction; 
    switch(testTransaction){
    case 'DeviceReading': {
        transaction = factory.newTransaction(namespace, 'DeviceReading');
        transaction.device = factory.newRelationship(namespace, 'Device', 'DEVICE_' + uuid + '_' +  assetId++);
        transaction.temperature = 40.0; 
        let now = new Date(); 
        now.setDate(now.getDate());
        transaction.readingDate = now; 
        transaction.readingTime = ""12:00"";
        break;
    }
    case 'addingHome': {
        transaction = factory.newTransaction(namespace, 'AddingHome'); 
        transaction.home = factory.newRelationship(namespace, 'Home', 'HOME_'+uuid+'_');
        break; 
    }
    default: {
        throw new Error(""No valid test transaction specified in module.run"");
    }
    }

    return bc.bcObj.submitTransaction(busNetConnection, transaction);
};

module.exports.end = function() {
    return Promise.resolve(true);
};

```

4. im using the fabric1.1/2org1peercouchdb setup i have also tried fabric1.2/2org1peercouchdb, and also both the goleveldb folders
5. the only difference from the standard docker setup, is that i have 1 org and 4 peers. One of them being the orderer

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4): node 8.9.4 and fabric 1.1.0
* Operating System and version (desktop or mobile): ubuntu 18.4
* Link to your project:

",open,False,2019-03-21 23:14:03,2019-03-27 22:32:35
caliper,rockyxiashilong,https://github.com/hyperledger/caliper/issues/384,https://api.github.com/repos/hyperledger/caliper/issues/384,Dear All：,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",open,False,2019-03-21 11:46:54,2019-03-21 13:55:54
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/383,https://api.github.com/repos/hyperledger/caliper/issues/383,Modify report template to list based on test label,"Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>

Suggested fix for #382

Following the generation of some Caliper reports, I noticed that the report structure could be enhanced. I have changed the template and associated report code to follow the config file more closely and make the report more readable by:
- Group test rounds under each test label, with each round starting at zero for each label.
- Link to test labels instead of test rounds from the metadata side navigation (this is a more meaningful link)
- Enable the provision of a description for each test label that is taken from the config file.

I have attached a file that is generated by the code.


[report-20190320T153655.html.zip](https://github.com/hyperledger/caliper/files/2991612/report-20190320T153655.html.zip)
",closed,True,2019-03-21 10:23:21,2019-03-22 16:07:23
caliper,nklincoln,https://github.com/hyperledger/caliper/issues/382,https://api.github.com/repos/hyperledger/caliper/issues/382,Report generation could be enhanced,"Current reports generated, whilst adequate, could be enhanced for readability

## Context
It would be nice if it was possible to provide a description to the test labels on the reports. It would also be more meaningful to link to test labels instead of test rounds in the LHS metadata links.
",closed,False,2019-03-21 10:22:48,2019-03-21 13:58:14
caliper,hnan1118,https://github.com/hyperledger/caliper/pull/381,https://api.github.com/repos/hyperledger/caliper/issues/381,Update js-yaml version,"With js-yaml@3.12.0, benchmarks for Fabric-v1.4 fails while
instantiating chaincode.

Signed-off-by: Jinwoo Hwang <hnan1118@ajou.ac.kr>",closed,True,2019-03-21 05:34:18,2019-03-23 04:17:22
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/380,https://api.github.com/repos/hyperledger/caliper/issues/380,enable test round spec if runDuration,"Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>
Fix for #379 ",closed,True,2019-03-19 16:49:03,2019-03-22 16:07:25
caliper,nklincoln,https://github.com/hyperledger/caliper/issues/379,https://api.github.com/repos/hyperledger/caliper/issues/379,Generated Report Doesn't Respect runDuration Tests,"If you run a benchmark that includes a `runDuration` round, it is not populated in the report side bar ""number of rounds"" (metadata)

## Expected Behavior
transaction and duration based benchmarks should show in the report

## Actual Behavior
Only tx based transactions are enumerated

## Steps to Reproduce
run a `runDuration` test, look at report
",closed,False,2019-03-19 16:48:51,2019-03-19 22:40:00
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/378,https://api.github.com/repos/hyperledger/caliper/issues/378,Update network model function name,"The Network Model API name had a function name change from the beta to 1.4 release, this update reflects that change

Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>

Resolves #377 ",closed,True,2019-03-18 13:47:44,2019-03-22 16:07:29
caliper,nklincoln,https://github.com/hyperledger/caliper/issues/377,https://api.github.com/repos/hyperledger/caliper/issues/377,Network model function name changed in release code,"During the beta phase the network model method to execute a transaction without submitting to the ordering service was named `executeTransaction`. Following feedback, this was modified to `evaluateTransaction` for release. 

The Caliper code still uses the Beta code naming.

## Context
Will fail if used on non-beta source

## Expected Behavior
Should be able to evaluate a transaction using the network model path

## Actual Behavior
No named function error

## Possible Fix
Change the function name to `evaluateTransaction`
",closed,False,2019-03-18 13:46:56,2019-03-21 09:02:33
caliper,houqinghui,https://github.com/hyperledger/caliper/issues/376,https://api.github.com/repos/hyperledger/caliper/issues/376,add the Caliper running environment detection script  ,"When we run caliper to test our blockchain network, we should install many pre-requisity tools which is  fussy. So i want to write a static script to check whether they are installed, then install them if not. 
1. nodejs
2. nodegyp
3. docker
4. docker-compose
5. authority of linux user",open,False,2019-03-18 08:39:25,2019-03-19 01:05:55
caliper,quangtdn,https://github.com/hyperledger/caliper/issues/375,https://api.github.com/repos/hyperledger/caliper/issues/375,Sample config files with Kafka orderer ,"Hi there!

I already managed to run Caliper to benchmark a distributed Hyperledger Fabric Network. 
I really would like to now test Fabric under Kafka orderers. As I can see, the new Caliper with Fabric cpp now supports multiple orderers. Just for making sure, I want to ask if it is possible to benchmark a Fabric system using Kafka orderers. If so, is there any available sample config files with Kafka orderers in Caliper?

Thank you very much!",closed,False,2019-03-17 18:42:17,2019-04-01 09:33:55
caliper,CODEHLK,https://github.com/hyperledger/caliper/issues/374,https://api.github.com/repos/hyperledger/caliper/issues/374,Cannot find module 'fs-extra',"<!--- Provide a general summary of the issue in the Title above -->
I met a problem when I try to test the fabric with the latest caliper.
## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
I installed the environment that 'caliper' requires and try to test fabric with the latest version caliper.
I followed the instructions given by @aklenik, ""npm run bench -- -c benchmark/simple/config-linear-rate.yaml -n network/fabric-v1.1/dev/fabric-node.json"" and error happened.
![image](https://user-images.githubusercontent.com/21681224/54398269-4b6b7500-46b1-11e9-91a2-027399aa8539.png)
And here is the error log:
![image](https://user-images.githubusercontent.com/21681224/54398349-95545b00-46b1-11e9-9a56-f8382aea748c.png)

## Expected Behavior
<!--- Tell us what should happen -->
![image](https://user-images.githubusercontent.com/21681224/54398738-3859a480-46b3-11e9-99cc-dee5cb025f06.png)

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
I try to install the npm again, it doesn't fix the problem.

May the error appears because of the edition conflicts?
## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
fabric: 1.10.1
docker: 18.09.2 build 6247962
docker-compose: 1.17.1 build unknown
npm: 5.6.0
nodejs: 8.10.0
node-gyp: 3.6.2
Failed to install grpc@1.10.1
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",open,False,2019-03-14 23:45:57,2019-03-15 12:43:40
caliper,aklenik,https://github.com/hyperledger/caliper/pull/373,https://api.github.com/repos/hyperledger/caliper/issues/373,Update rate controller documentation with the new API,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

Documentation for the new features of PR #372 ",closed,True,2019-03-14 14:36:08,2019-03-20 10:28:13
caliper,aklenik,https://github.com/hyperledger/caliper/pull/372,https://api.github.com/repos/hyperledger/caliper/issues/372,Added factory functions to the rate controllers,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

Resolves enhancement issue #340 as suggested.
Also consolidates the API/implmenetations of existing rate controllers.",closed,True,2019-03-14 14:34:58,2019-03-20 10:33:50
caliper,Dingxining,https://github.com/hyperledger/caliper/issues/371,https://api.github.com/repos/hyperledger/caliper/issues/371,"When I tested the example chaincode:chaincode_example02, the parameters received by the chaincode were incorrect","
When I tested the example chaincode:chaincode_example02, the parameters received by the chaincode were incorrect

I use the command  `peer chaincode invoke -o orderer:7050 -C mychannel -n chaincode_example02 -c '{""Args"":[""invoke"",""A"",""B"",""1""]}'`   in  cli.The chaincode is ok.

I am sure there is no problem with my environment, the caliper example works fine.
But there is a problem with running the chaincode, maybe there is a problem with my inovke.js. 
I modified the chain code to print out the received args
The chaincode accepts only one args:A,B,1.
So,The query.js is ok.

I need help,thanks.

invoke.js:
```
module.exports.info  = 'Invoke chaincode_example02.';

let bc, contx;
let setting=[{""function"":""invoke"",""args"":[""A"",""B"",""1""]}];

module.exports.init = function(blockchain, context, args) {
    bc = blockchain;
    contx = context;
    return Promise.resolve();
};

module.exports.run = function() {
    // TODO: until Fabric query is implemented, use invoke
    return bc.invokeSmartContract(contx, 'chaincode_example02', 'v0',setting, 120);
};
```
query.js:
```
'use strict';

module.exports.info  = 'Querying chaincode_example02.';

let txIndex = 0;
let bc, contx;
module.exports.init = function(blockchain, context, args) {
    bc = blockchain;
    contx = context;
    return Promise.resolve();
};

module.exports.run = function() {
    txIndex++;
    // TODO: until Fabric query is implemented, use invoke
    return bc.invokeSmartContract(contx, 'chaincode_example02', 'v0',
        {
            chaincodeFunction: 'query',
            chaincodeArguments: [""B""]
        }, 120);
};

module.exports.end = function() {
    return Promise.resolve();
};

```

logs:
```
root@ubuntu:/opt/gopath/src/github.com/hyperledger/caliper# npm run bench -- -c benchmark/chaincode_example02/config.yaml -n network/fabric-v1.4/dev/fabric-go.json

> caliper@0.1.0 bench /opt/gopath/src/github.com/hyperledger/caliper
> node ./scripts/main.js ""-c"" ""benchmark/chaincode_example02/config.yaml"" ""-n"" ""network/fabric-v1.4/dev/fabric-go.json""

info: [bench-flow.js]: ####### Caliper Test #######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.4/dev/docker-compose.yaml up -d;sleep 3s
Creating ca.org1.example.com ... done
Creating orderer.example.com ... done
Creating cli                 ... done
Creating peer0.org1.example.com ... done
info: [create-channel.js]: Creating mychannel...
info: [create-channel.js]: Created mychannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining organization org1 to channel mychannel...
info: [join-channel.js]: Successfully joined peerOrg1's peers to mychannel
info: [join-channel.js]: Successfully joined mychannel
info: [install-chaincode.js]: installing all chaincodes......
info: [install-chaincode.js]: Installing chaincode chaincode_example02...
info: [install-chaincode.js]: Installed chaincode chaincode_example02 successfully in all peers
info: [install-chaincode.js]: Installing chaincode fabcar...
info: [install-chaincode.js]: Installed chaincode fabcar successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...
info: [e2eUtils.js]: instantiate proposal was good
info: [e2eUtils.js]: Successfully sent Proposal and received ProposalResponse
info: [e2eUtils.js]: The chaincode instantiate transaction has been committed on peer localhost:7051
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [e2eUtils.js]: Successfully sent instantiatetransaction to the orderer.
info: [instantiate-chaincode.js]: Instantiated chaincode chaincode_example02 successfully
info: [e2eUtils.js]: instantiate proposal was good
info: [e2eUtils.js]: Successfully sent Proposal and received ProposalResponse
info: [e2eUtils.js]: The chaincode instantiate transaction has been committed on peer localhost:7051
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [e2eUtils.js]: Successfully sent instantiatetransaction to the orderer.
info: [instantiate-chaincode.js]: Instantiated chaincode fabcar successfully
info: [instantiate-chaincode.js]: Sleeping 5s...
info: [bench-flow.js]: Started monitor successfully
info: [bench-flow.js]: ####### Testing 'invoke' #######
info: [bench-flow.js]: ------ Test round 1 ------
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
error: [e2eUtils.js]: Failed to complete transaction [bd1af...]:Error: Endorsement denied: Error: args1:A,B,1args2:args3:
    at Object.invokebycontext (/opt/gopath/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:1069:27)
    at <anonymous>
error: [e2eUtils.js]: Failed to complete transaction [08f15...]:Error: Endorsement denied: Error: args1:A,B,1args2:args3:
    at Object.invokebycontext (/opt/gopath/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:1069:27)
    at <anonymous>
error: [e2eUtils.js]: Failed to complete transaction [0a2a2...]:Error: Endorsement denied: Error: args1:A,B,1args2:args3:
    at Object.invokebycontext (/opt/gopath/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:1069:27)
    at <anonymous>
error: [e2eUtils.js]: Failed to complete transaction [40bd7...]:Error: Endorsement denied: Error: args1:A,B,1args2:args3:
    at Object.invokebycontext (/opt/gopath/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:1069:27)
    at <anonymous>
error: [e2eUtils.js]: Failed to complete transaction [5c174...]:Error: Endorsement denied: Error: args1:A,B,1args2:args3:
    at Object.invokebycontext (/opt/gopath/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:1069:27)
    at <anonymous>
error: [e2eUtils.js]: Failed to complete transaction [b291a...]:Error: Endorsement denied: Error: args1:A,B,1args2:args3:
    at Object.invokebycontext (/opt/gopath/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:1069:27)
    at <anonymous>
error: [e2eUtils.js]: Failed to complete transaction [b5342...]:Error: Endorsement denied: Error: args1:A,B,1args2:args3:
    at Object.invokebycontext (/opt/gopath/src/github.com/hyperledger/caliper/src/adapters/fabric/e2eUtils.js:1069:27)
    at <anonymous>
```
",closed,False,2019-03-14 03:00:45,2019-03-15 08:31:43
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/370,https://api.github.com/repos/hyperledger/caliper/issues/370,Fix CI composer test failure,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

The CI test had the error ```composer.getBusNetConnection() failed for cardName [PerfNetworkAdmin@basic-sample-network] with error: Error: Error trying to ping. SyntaxError: Unexpected end of JSON input```, https://travis-ci.org/hyperledger/caliper/jobs/505204991

The error is because using composer 0.19 with a fabric 1.2 environment and they are mismatch. ",closed,True,2019-03-13 02:40:16,2019-03-13 10:41:29
caliper,aklenik,https://github.com/hyperledger/caliper/pull/369,https://api.github.com/repos/hyperledger/caliper/issues/369,Add logging control documentation,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

Corresponding documentation for PR #368 ",closed,True,2019-03-12 12:53:25,2019-03-14 14:36:31
caliper,aklenik,https://github.com/hyperledger/caliper/pull/368,https://api.github.com/repos/hyperledger/caliper/issues/368,Enhance logging mechanism,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

Resolves Issue #338 in the recommended way.",closed,True,2019-03-12 12:52:13,2019-03-14 14:36:32
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/367,https://api.github.com/repos/hyperledger/caliper/issues/367,Using user tmp dir,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

When multi-users in one host use caliper to test, the directory '/tmp/hfc/ ' permission is denied for the sake of using the same directory.
",closed,True,2019-03-12 07:57:18,2019-03-12 13:27:22
caliper,aklenik,https://github.com/hyperledger/caliper/pull/366,https://api.github.com/repos/hyperledger/caliper/issues/366,Fix project path for Sawtooth example build,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

The Docker build script assumes that the Caliper repo is cloned into a `caliper` folder. But actually, the last `../caliper/` directory change is unnecessary. 

## Steps to Reproduce
```
git clone https://github.com/hyperledger/caliper.git caliper-fork
# remove the previous image to trigger a rebuild
docker rmi simple-tp-python
npm i
npm run sawtooth-deps
npm run bench -- -c benchmark/simple/config-sawtooth.yaml -n network/sawtooth/simplenetwork/sawtooth.json
```

## Design of the fix
The path reference is simplified in the build script, thus completely avoiding the Caliper directory name.

## Validation of the fix
Repeat the above steps to reproduce.
",closed,True,2019-03-11 12:57:02,2019-03-13 21:39:35
caliper,hehui0316,https://github.com/hyperledger/caliper/issues/365,https://api.github.com/repos/hyperledger/caliper/issues/365,deploy no-sample composer,"
info: [bench-flow.js]: ####### Testing 'pii4-network' #######
info: [bench-flow.js]: ------ Test round 1 ------
error: [bench-flow.js]: ------ Failed 'pii4-network' testing with the following error ------
Error: Client encountered error:SyntaxError: Missing catch or finally after try
    at ChildProcess.<anonymous> (/home/fz/caliper/src/comm/client/client-util.js:74:36)
    at emitTwo (events.js:126:13)
    at ChildProcess.emit (events.js:214:7)
    at emit (internal/child_process.js:772:12)
    at _combinedTickCallback (internal/process/next_tick.js:141:11)
    at process._tickCallback (internal/process/next_tick.js:180:9)
info: [bench-flow.js]: ---------- Finished Test ----------

error: [bench-flow.js]: Error: TypeError: Cannot read property 'unshift' of undefined
    at printResultsByRound (/home/fz/caliper/src/comm/bench-flow.js:136:23)
    at Object.module.exports.run (/home/fz/caliper/src/comm/bench-flow.js:373:9)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0

",open,False,2019-03-11 09:23:45,2019-03-11 13:04:06
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/364,https://api.github.com/repos/hyperledger/caliper/issues/364,Fix the versions of composer and fabric mismatch,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

When I did a composer test, The error ""SyntaxError: Unexpected end of JSON input"" occured. The error  is  because I'm using composer 0.19 with a fabric 1.2 environment and they are mismatch. So we need to fix this.


",closed,True,2019-03-11 07:55:43,2019-03-11 13:17:51
caliper,clumsky,https://github.com/hyperledger/caliper/pull/363,https://api.github.com/repos/hyperledger/caliper/issues/363,Provide error information,"#310  TaoChen <clumsky@163.com>

<!--- Provide a general summary of the pull request in the Title above -->

## Checklist
 - [ ]  A link to the issue/user story that the pull request relates to
 - [ ]  How to recreate the problem without the fix
 - [ ]  Design of the fix
 - [ ]  How to prove that the fix works
 - [ ]  Automated tests that prove the fix keeps on working
 - [ ]  Documentation - any JSDoc, website, or Stackoverflow answers?


## Issue/User story
<!--- What issue / user story is this for -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.


## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Design of the fix
<!-- Focus on why you designed this fix this way, and what was discounted. Do not describe just the code - we can read that! -->

## Validation of the fix
<!-- Over and above the tests, what has been done to prove this works? -->

## Automated Tests
<!-- Please describe the automated tests that are put in place to stop this recurring -->

## What documentation has been provided for this pull request
<!-- JSDocs, WebSite and answers to Stack Overflow questions are possible documentation sources -->
",closed,True,2019-03-11 06:42:21,2019-03-11 12:46:12
caliper,Arucald,https://github.com/hyperledger/caliper/pull/362,https://api.github.com/repos/hyperledger/caliper/issues/362,Translate arch md,"<!--- translate the architecture.md files into CH version -->

",open,True,2019-03-11 02:45:25,2019-03-18 10:43:27
caliper,panyu4,https://github.com/hyperledger/caliper/pull/361,https://api.github.com/repos/hyperledger/caliper/issues/361,Specify the supported sawtooth version,"Signed-off-by: panyu2 <PY.panyu@huawei.com>
",closed,True,2019-03-11 02:21:05,2019-03-11 03:29:57
caliper,Salmanah,https://github.com/hyperledger/caliper/issues/360,https://api.github.com/repos/hyperledger/caliper/issues/360,Hyperledger Caliper error on multihost network with composer,"<!--- Provide a general summary of the issue in the Title above -->
Hi, i am having an issue with Hyperledger Caliper when i try to run it on a running Hyperledger Fabric network with Composer. The Fabric network has 4 peers, each of them running in a VM-environment, and each of them uses docker to run the nodes. When i try to run caliper with the main.js and the network configuration file which has been edited to fit my network IP, keys and certificates i get an error. I have been struggling for weeks, i do not know what the issue is. Any help would be appreciated. 
## Expected Behavior
The tests should start at this point

## Actual Behavior
info: [bench-flow.js]: ####### Caliper Test #######
info: [composer.js]: Initializing target platform configuration
✖ Creating channels mychannel
error: [composer.js]: composer.init() failed at initialiseFabric(),  code=1, stdout=, stderr=Error: No such container: peer0.org1.example.com

error: [composer.js]: composer.init() failed,  code=1, stdout=, stderr=Error: No such container: peer0.org1.example.com

error: [bench-flow.js]: Error: [object Object]
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [bench-flow.js]: 

#######################################
# Test summary: 0 succeeded, 0 failed #
#######################################

info: [scripts/main.js]: Benchmark run successfully


## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
Docker version 18.06.1-ce, build e68fc7a
composer-admin@0.20.7 
composer-client@0.20.7 
composer-common@0.20.7 
fabric-ca-client@1.2.1 
fabric-client@1.2.1
ubuntu 18.4

",open,False,2019-03-10 22:35:50,2019-03-21 22:59:00
caliper,hehui0316,https://github.com/hyperledger/caliper/issues/359,https://api.github.com/repos/hyperledger/caliper/issues/359,"when testing no-sample composer, the error is error: [local-client.js]: Client[26550] encountered an error: TypeError: cb.init is not a function     at runFixedNumber (/home/fz/caliper/src/comm/client/local-client.js:135:14)     at <anonymous> error: [bench-flow.js]: ------ Failed 'pii4-network' testing with the following error ------ Error: Client encountered error:TypeError: cb.init is not a function","<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2019-03-10 13:42:55,2019-03-11 02:50:22
caliper,hehui0316,https://github.com/hyperledger/caliper/issues/358,https://api.github.com/repos/hyperledger/caliper/issues/358,how to test no-sample composer network?,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2019-03-10 09:38:46,2019-03-10 13:42:10
caliper,dzyand,https://github.com/hyperledger/caliper/issues/357,https://api.github.com/repos/hyperledger/caliper/issues/357,What I just want to know is that how to test fabric with the Latest version caliper，thank you!,"I have no config.json,fabric.json and so on,how can run 'npm run bench -- -c yourconfig.json -n yournetwork.json'
just run an example，i'm just a tiro。


",closed,False,2019-03-10 07:05:32,2019-03-25 10:28:18
caliper,Arucald,https://github.com/hyperledger/caliper/pull/356,https://api.github.com/repos/hyperledger/caliper/issues/356,Transtlate the architecture.md to CH version ," Signed-off-by: Arucald dadacheerup@163.com

This PR has update the architecture.md to the CH version. Hope it is helpful for Chinese  developer


",closed,True,2019-03-08 07:49:04,2019-03-08 08:20:13
caliper,hehui0316,https://github.com/hyperledger/caliper/issues/355,https://api.github.com/repos/hyperledger/caliper/issues/355,Error: Client encountered error:Error: Cannot find module 'composer-admin'     at ChildProcess.<anonymous> (/home/fz/caliper/src/comm/client/client-util.js:74:36) while testing composer networks ,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2019-03-08 07:44:35,2019-03-08 09:11:46
caliper,Arucald,https://github.com/hyperledger/caliper/pull/354,https://api.github.com/repos/hyperledger/caliper/issues/354,Modify docker rm error,"Try to resolve docker rm error
#352 

I am a fresh man on github who use the Github Client to pull request , so it doesn't show the sign-off procedure. 

However , the PR has been submitted successfully. ",open,True,2019-03-08 07:25:32,2019-04-02 09:23:05
caliper,hehui0316,https://github.com/hyperledger/caliper/issues/353,https://api.github.com/repos/hyperledger/caliper/issues/353,how to test composer?,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2019-03-08 07:23:21,2019-03-08 12:10:15
caliper,Arucald,https://github.com/hyperledger/caliper/issues/352,https://api.github.com/repos/hyperledger/caliper/issues/352,npm run test with sawtooth got docker rm errors,"when I type : `npm run test -- -- -c benchmark/simple/config-sawtooth.yaml -n network/sawtooth/simplenetwork/sawtooth.json`

it shows 
![image](https://user-images.githubusercontent.com/31911640/54012291-9ae10b00-41b0-11e9-985f-bd737d67b4cf.png)

this may caused by the container which is empty, so once we remove the container , it needs at least 1 argument.  This results in the output error of the CI test.",open,False,2019-03-08 06:52:09,2019-03-08 11:58:05
caliper,Arucald,https://github.com/hyperledger/caliper/issues/351,https://api.github.com/repos/hyperledger/caliper/issues/351,error of testing sawtooth,"**My computer is Mac.
And I have installed docker, docker-compose, node and nvm.
But when I test the sawtooth, I typed:**

npm run bench -- -c benchmark/simple/config-sawtooth.yaml -n network/sawtooth/simplenetwork/sawtooth.json

**Then it begins to run, and the opening round is ok , but the 'query' shows the error like this:**

info: [bench-flow.js]: ------ Passed 'open' testing ------
info: [bench-flow.js]: Waiting 5 seconds for the next round...
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
info: [bench-flow.js]: ####### Testing 'query' #######
info: [bench-flow.js]: ------ Test round 2 ------
error: [sawtooth.js]: Query failed, Error: no query responses
at /Users/dada/caliper/src/adapters/sawtooth/sawtooth.js:207:23
    at tryCatcher (/Users/dada/caliper/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:694:18)
    at _drainQueueStep (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:138:12)
    at _drainQueue (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:131:9)
    at Async._drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:147:5)
    at Immediate.Async.drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:810:20)
    at tryOnImmediate (timers.js:768:5)
    at processImmediate [as _immediateCallback] (timers.js:745:5)
Connected to tcp://127.0.0.1:4004
info: [demo.js]: [Transaction Info] - Submitted: 10 Succ: 10 Fail:0 Unfinished:0
error: [sawtooth.js]: Query failed, Error: no query responses
    at /Users/dada/caliper/src/adapters/sawtooth/sawtooth.js:207:23
    at tryCatcher (/Users/dada/caliper/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:694:18)
    at _drainQueueStep (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:138:12)
    at _drainQueue (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:131:9)
    at Async._drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:147:5)
    at Immediate.Async.drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:810:20)
    at tryOnImmediate (timers.js:768:5)
    at processImmediate [as _immediateCallback] (timers.js:745:5)
info: [demo.js]: [Transaction Info] - Submitted: 11 Succ: 10 Fail:1 Unfinished:0
error: [sawtooth.js]: Query failed, Error: no query responses
    at /Users/dada/caliper/src/adapters/sawtooth/sawtooth.js:207:23
    at tryCatcher (/Users/dada/caliper/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:694:18)
    at _drainQueueStep (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:138:12)
    at _drainQueue (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:131:9)
    at Async._drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:147:5)
    at Immediate.Async.drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:810:20)
    at tryOnImmediate (timers.js:768:5)
    at processImmediate [as _immediateCallback] (timers.js:745:5)
info: [demo.js]: [Transaction Info] - Submitted: 13 Succ: 10 Fail:2 Unfinished:1
error: [sawtooth.js]: Query failed, Error: no query responses
    at /Users/dada/caliper/src/adapters/sawtooth/sawtooth.js:207:23
    at tryCatcher (/Users/dada/caliper/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:694:18)
    at _drainQueueStep (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:138:12)
    at _drainQueue (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:131:9)
    at Async._drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:147:5)
    at Immediate.Async.drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:810:20)
    at tryOnImmediate (timers.js:768:5)
    at processImmediate [as _immediateCallback] (timers.js:745:5)
info: [demo.js]: [Transaction Info] - Submitted: 14 Succ: 10 Fail:3 Unfinished:1
error: [sawtooth.js]: Query failed, Error: no query responses
    at /Users/dada/caliper/src/adapters/sawtooth/sawtooth.js:207:23
    at tryCatcher (/Users/dada/caliper/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/Users/dada/caliper/node_modules/bluebird/js/release/promise.js:694:18)
    at _drainQueueStep (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:138:12)
    at _drainQueue (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:131:9)
    at Async._drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:147:5)
    at Immediate.Async.drainQueues (/Users/dada/caliper/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:810:20)
    at tryOnImmediate (timers.js:768:5)
    at processImmediate [as _immediateCallback] (timers.js:745:5)
info: [demo.js]: [Transaction Info] - Submitted: 15 Succ: 10 Fail:4 Unfinished:1
info: [bench-flow.js]: ###test result:###
info: [bench-flow.js]: 
+-------+------+------+-----------+-------------+-------------+-------------+------------+
| Name  | Succ | Fail | Send Rate | Max Latency | Min Latency | Avg Latency | Throughput |
|-------|------|------|-----------|-------------|-------------|-------------|------------|
| query | 0    | 5    | 1.2 tps   | 0.00 s      | 100000.00 s | NaN s       | 0.0 tps    |
+-------+------+------+-----------+-------------+-------------+-------------+------------+

**I am on the hyperledger HK bootcamp, and some guys using mac also face the same problems.**",closed,False,2019-03-08 03:31:53,2019-03-11 12:40:39
caliper,dzyand,https://github.com/hyperledger/caliper/issues/350,https://api.github.com/repos/hyperledger/caliper/issues/350,the troubles with running node benchmark/simple/main.js -c config.json -n fabric.json,"<!--- Provide a general summary of the issue in the Title above -->

## Context
not ok 2 Failed to join peers, TypeError: Cannot read property 'getConnectivityState' of undefined at EventHub._checkConnection (/home/dzy/caliper/node_modules/fabric-client/lib/EventHub.js:479:39) at EventHub.registerBlockEvent (/home/dzy/caliper/node_modules/fabric-client/lib/EventHub.js:658:8) at Promise (/home/dzy/caliper/src/fabric/join-channel.js:167:8) at new Promise (<anonymous>) at eventhubs.forEach (/home/dzy/caliper/src/fabric/join-channel.js:164:20) at Array.forEach (<anonymous>) at Client.newDefaultKeyValueStore.then.then.then.then (/home/dzy/caliper/src/fabric/join-channel.js:163:13) at <anonymous>
  ---
    operator: fail
    at: channels.reduce.then.catch (/home/dzy/caliper/src/fabric/join-channel.js:74:15)
    stack: |-
      Error: Failed to join peers, TypeError: Cannot read property 'getConnectivityState' of undefined
          at EventHub._checkConnection (/home/dzy/caliper/node_modules/fabric-client/lib/EventHub.js:479:39)
          at EventHub.registerBlockEvent (/home/dzy/caliper/node_modules/fabric-client/lib/EventHub.js:658:8)
          at Promise (/home/dzy/caliper/src/fabric/join-channel.js:167:8)
          at new Promise (<anonymous>)
          at eventhubs.forEach (/home/dzy/caliper/src/fabric/join-channel.js:164:20)
          at Array.forEach (<anonymous>)
          at Client.newDefaultKeyValueStore.then.then.then.then (/home/dzy/caliper/src/fabric/join-channel.js:163:13)
          at <anonymous>
          at Test.assert [as _assert] (/home/dzy/caliper/node_modules/tape/lib/test.js:226:54)
          at Test.bound [as _assert] (/home/dzy/caliper/node_modules/tape/lib/test.js:77:32)
          at Test.fail (/home/dzy/caliper/node_modules/tape/lib/test.js:319:10)
          at Test.bound [as fail] (/home/dzy/caliper/node_modules/tape/lib/test.js:77:32)
          at channels.reduce.then.catch (/home/dzy/caliper/src/fabric/join-channel.js:74:15)
          at <anonymous>
  ...
fabric.init() failed, Error: Fabric: Join channel failed
    at channels.reduce.then.catch (/home/dzy/caliper/src/fabric/join-channel.js:75:27)
    at <anonymous>
unexpected error, Error: Fabric: Join channel failed
    at channels.reduce.then.catch (/home/dzy/caliper/src/fabric/join-channel.js:75:27)
    at <anonymous>
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml down;docker rm $(docker ps -aq)
/home/dzy/caliper/node_modules/fabric-client/lib/EventHub.js:308
			if(self._stream) state = self._stream.call.channel_.getConnectivityState();
			                                                    ^

TypeError: Cannot read property 'getConnectivityState' of undefined
    at ClientDuplexStream.<anonymous> (/home/dzy/caliper/node_modules/fabric-client/lib/EventHub.js:308:56)
    at emitOne (events.js:116:13)
    at ClientDuplexStream.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
    at Object.onReceiveMessage (/home/dzy/caliper/node_modules/grpc/src/client_interceptors.js:1292:19)
    at InterceptingListener.recvMessageWithContext (/home/dzy/caliper/node_modules/grpc/src/client_interceptors.js:607:19)
    at /home/dzy/caliper/node_modules/grpc/src/client_interceptors.js:706:14

",closed,False,2019-03-08 03:26:18,2019-03-08 11:43:51
caliper,gregdhill,https://github.com/hyperledger/caliper/pull/349,https://api.github.com/repos/hyperledger/caliper/issues/349,update docs with bench cmd,Signed-off-by: Gregory Hill <greg.hill@monax.io>,closed,True,2019-03-07 16:22:23,2019-03-14 17:23:32
caliper,Arucald,https://github.com/hyperledger/caliper/pull/348,https://api.github.com/repos/hyperledger/caliper/issues/348,Transtlate the architecture.md to CH version,"Signed-off-by: Arucald <dadacheerup@163.com>

This PR has update the architecture.md to the CH version. Hope it is helpful for Chinese developer 



",closed,True,2019-03-07 09:25:10,2019-03-08 08:11:03
caliper,Arucald,https://github.com/hyperledger/caliper/issues/347,https://api.github.com/repos/hyperledger/caliper/issues/347,can not find main.js,"**When I am running the benchmark, I type this :**  
node main.js -c config.yaml -n ../../network/fabric-v1.4/2org1peergoleveldb/fabric-go.json

**Then it shows:**
Error: Cannot find module '/Users/dada/caliper/benchmark/simple/main.js'
    at Function.Module._resolveFilename (module.js:548:15)
    at Function.Module._load (module.js:475:25)
    at Function.Module.runMain (module.js:694:10)
    at startup (bootstrap_node.js:204:16)
    at bootstrap_node.js:625:3

**Hope to solve this problem.**",closed,False,2019-03-07 03:54:28,2019-03-07 17:06:33
caliper,aklenik,https://github.com/hyperledger/caliper/pull/346,https://api.github.com/repos/hyperledger/caliper/issues/346,Fixed Fabric CCP network configs and package.json,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

Resolves issues #344 and #345 (since both relate to Fabric versioning).",closed,True,2019-03-06 13:28:50,2019-03-11 12:40:08
caliper,aklenik,https://github.com/hyperledger/caliper/issues/345,https://api.github.com/repos/hyperledger/caliper/issues/345,Eventing URLs provided in Fabric 1.1+ CCP examples,"## Context
Event URLs for peers are only needed for the configuration file of Fabric 1.0 networks. From 1.1, the channel-based eventing service is used based on the peer address. 

## Expected Behavior
The adapter should notice the obvious cases. The configuration files for >v1.0 shouldn't contain event URLs.

## Actual Behavior
The following files contain the URLs (and only `fabric-v1.0/*` files should):
`cd network && grep -Ril ""eventUrl"" . --include=fabric-ccp*.yaml`",closed,False,2019-03-06 12:50:02,2019-03-11 12:19:07
caliper,aklenik,https://github.com/hyperledger/caliper/issues/344,https://api.github.com/repos/hyperledger/caliper/issues/344,Inconsistent Fabric install scripts in package.json,"## Expected Behavior
The run scripts should use the same format.

## Actual Behavior
The `fabric-deps` naming is not consistent.",closed,False,2019-03-06 12:17:15,2019-03-11 12:18:40
caliper,aklenik,https://github.com/hyperledger/caliper/pull/343,https://api.github.com/repos/hyperledger/caliper/issues/343,Update Fabric-CCP install instruction,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

Added the example `npm run` scripts for v1.3 and v1.4.
Preview: https://aklenik.github.io/caliper/docs/Fabric_Ccp_Configuration.html#installing-the-required-dependencies",closed,True,2019-03-06 12:15:05,2019-03-11 03:04:52
caliper,aklenik,https://github.com/hyperledger/caliper/issues/342,https://api.github.com/repos/hyperledger/caliper/issues/342,Improve the adapter life-cycle management,"## Context
Caliper is comprised of some basic building blocks: platform adapters, rate controllers, user modules, client processes, and the main process. 
While rate controllers and user modules are only instantiated by client processes, platform adapters can exist in two different environments: both in the main process and in the client processes.

The current life-cycle of the platform adapters (PA) in the main process (MP) is the following:
1. MP creates PA
1. MP initializes PA
1. MP instructs PA to install the (optionally) configured smart contracts
1. MP spawns the client processes

The current life-cycle of the platform adapters (PA) in the client processes (CP) is the following:
1. CP creates PA
1. Before a test round, CP requests the current context from PA
1. CP performs a test round
1. After a test round, CP releases the current context through PA
1. If there are more test rounds, repeat from 2.

This life-cycle management/protocol is not granular enough from a resource management point-of-view.

## Expected Behavior
The proposal is to extend the introduced life-cycle of platform adapters to include additional communication between the client/master process and the adapter. For example:

The proposed life-cycle of the platform adapters (PA) in the main process (MP):
1. MP creates PA (`contructor`)
1. MP initializes PA (`initialize`)
1. MP instructs PA to install the (optionally) configured smart contracts (`installSmartContracts`)
1. MP spawns the client processes
1. **MP disposes of PA after the clients finished their work** (`dispose`)

The proposed life-cycle of the platform adapters (PA) in the client processes (CP):
1. CP creates PA (`contructor`)
1. **CP initializes PA “in client mode”** (`initializeForClient`)
1. Before a test round, CP requests the current context from PA (`getContext`)
1. CP performs a test round
1. After a test round, CP releases the current context through PA (`releaseContext`)
1. If there are more test rounds, repeat from 2.
1. **CP disposes of PA “in client mode”** (`disposeForClient`)

## Possible Fix
The adapter interfaces need to be extended to support the new life-cycle phases. Specifically, the following classes need to be modified (extended with the aforementioned functions):
* `src/comm/blockchain.js`
* `src/comm/blockchain-interface.js`
* Platform adapters in `src/adapters`
* `src/comm/bench-flow.js`
* `src/comm/client/local-client.js`

",open,False,2019-03-05 09:30:57,2019-04-03 10:53:39
caliper,aklenik,https://github.com/hyperledger/caliper/issues/341,https://api.github.com/repos/hyperledger/caliper/issues/341,Modularize the user test modules,"## Context
Caliper uses user modules (or user test modules) to allow arbitrary workload logic to be [plugged in](https://hyperledger.github.io/caliper/docs/2_Architecture.html#user-defined-test-module). The user module must export the three required functions to be able to interact with Caliper. This design is not object-oriented and should be refactored.

## Expected Behavior
The proposal is to require only an exported factory function (e.g., `createUserModule`) from the user module JS file. This way the developer has more freedom to structure the implementation and explicitly manage the life-cycle of the user module instance. 

Corresponding documentation must also be provided that describes the general API of user modules.

## Possible Fix
The `src/comm/client/local-client.js/run*` functions must be refactored to use the new factory function of the referenced modules.
Additionally, the provided example user modules (in the `benchmark/` directory) must also be refactored.
",open,False,2019-03-05 09:24:10,2019-03-05 09:24:10
caliper,aklenik,https://github.com/hyperledger/caliper/issues/340,https://api.github.com/repos/hyperledger/caliper/issues/340,Modularize the rate controllers,"## Context
Caliper uses rate controllers to signal the user callback modules when they can submit transactions. Currently, rate controllers have to provide/export a class containing [some functions](https://hyperledger.github.io/caliper/docs/Rate_Controllers.html#custom-controllers) to be usable by Caliper (like a constructor, an init, apply and end functions). 

Also, Caliper can only use rate controllers that are explicitly listed in the [rate controller gateway](https://github.com/hyperledger/caliper/blob/master/src/comm/rate-control/rateControl.js). This limits the easy extensibility of the mechanism.

## Expected Behavior
The proposal is to modularize the rate controller implementations in the following way: a module implementing a rate controller should only expose/export a factory function, like `createRateContoller(bc, opts):object`, that should return an object that has the aforementioned functions. This way the rate controller developer would have explicit control over the lifetime of a rate controller object. 

Moreover, external rate controllers also should be supported, i.e., the `src/comm/rate-control/rateControl.js` class should be able to resolve paths to external JS files, provided that they export the necessary factory function.

Corresponding documentation should also be provided that describes the general API of rate controllers.

## Possible Fix
The existing rate controller files (in the `src/comm/rate-control` directory) should be modified to export the aforementioned factory function instead of the rate controller class. 
Additionally, the `src/comm/rate-control/rateControl.js` constructor should be modified to create the rate controllers through the factory function. 
Also, if it encounters an unknown rate controller type that is a path to a JS file, it should try to access its factory function if it’s provided.
",closed,False,2019-03-05 09:21:58,2019-03-20 11:10:02
caliper,aklenik,https://github.com/hyperledger/caliper/issues/339,https://api.github.com/repos/hyperledger/caliper/issues/339,Improve the configuration support,"## Context
Caliper uses a hierarchical configuration mechanism provided by the [nconf](https://github.com/indexzero/nconf) package. The priority between the different configuration sources are the following:

Runtime > Environment variable > Command line > Configuration file 

The provided environment variables (conventionally written in uppercase with underscore separators) are made lowercase and the underscores are changed to dashes. For example, `CORE_SOMESETTING=10` can be queried through the `“core-somesetting”` configuration key. 

The configuration file allows nested objects, that are flattened to separate keys for each “leaf” attribute. For example, the value of `somesetting` in 
```yaml
core:
  someSetting: 10
```
can be queried through the `“core:someSetting”` configuration key. These two examples demonstrate the inconsistency of the configuration mechanism: `someSetting` cannot be overridden by environment variables since `CORE_SOMESETTING` will be mapped to `“core:somesetting”` (note the missing camel casing).

## Expected Behavior
The goal would be to use a common format for settings from every source. The proposed format is the following: **all lowercase letters** for the setting hierarchies, **separated by dashes**. So the previous examples both could be queried with the same configuration key, `“core-somesetting”`, and could be overridden by the environment variable `CORE_SOMESETTING=10`, or through the command line with `--core-somesetting=10`.

Moreover, to prevent name collisions with settings outside of Caliper (especially for environment variables), the `“caliper-”` prefix should be used for every settings key. 

It is also important to parse well-know string values (e.g., `‘false’`, `‘true’`, `‘3’`, `‘5.1’` or JSON values) as their corresponding type (e.g., boolean, number, or object), both for command line arguments and environment variables.

Corresponding documentation should also be provided that describes the configuration mechanism of Caliper.

## Possible Fix
Using the `“caliper-”` prefix requires the modification of the default configuration file. Everything should be enclosed in a top-level `“caliper”` attribute. This way nconf automatically will append the prefix, since it's part of the configuration hierarchy. For example:
```yaml
caliper:
  core:
    somesetting: 10
```
The environment variables are set by the users, so it's their responsibility to correctly override, for example, the `“caliper-core-somesetting”` value by setting the `CALIPER_CORE_SOMESETTING` environment variable. 

Consistent naming can be achieved by using all lowercase names in the configuration file, plus setting the appropriate nconf option (`options.logicalSeparator`), so it uses dashes as a separator when parsing a configuration file. 

Parsing well-known string values can be achieved by using the [appropriate settings](https://github.com/indexzero/nconf#argv) for nconf.",open,False,2019-03-05 09:19:15,2019-03-14 19:03:22
caliper,aklenik,https://github.com/hyperledger/caliper/issues/338,https://api.github.com/repos/hyperledger/caliper/issues/338,Improve the logging support,"## Context
Caliper utilizes the [winston](https://github.com/winstonjs/winston) logging package to provide a flexible and common mechanism for modules for logging. Winston provides some core [transports/targets](https://github.com/winstonjs/winston/blob/master/docs/transports.md#winston-core) for logging. Currently, Caliper uses the following syntax in its default configuration file to configure targets:
```yaml
core:
  log-file:
    debug: log/caliper.log
    info: console
```
This will result in two targets: a file logger with debug level filtering and a console logger with info level filtering. 

## Expected Behavior
A more flexible approach would be to allow the definition of an arbitrary number of loggers (denoted by a unique name/attribute in the configuration), with configurable targets and target/winston-specific options (corresponding to the target API):
```yaml
core:
  logging:
    consolelogger:
      # indicates the Console transport
      target: console
      # console transport specific options, mostly optional
      level: info
      colorize: true
    filelogger:
      # indicates the File transport
      target: file
      # file transport specific options, mostly optional
      level: debug
      filename: path/to/logfile.log
```
This is a flexible way to define as many logging targets as we want with arbitrary settings, plus adding support for new types of logging targets (http, MongoDB, Syslog, etc) is easier, just check the target property, and add a new transport creation code for the new target.

Corresponding documentation should also be provided, detailing the available target types and the general logging mechanism (how to configure loggers, how to create loggers in a module).

## Possible Fix
The logging/winston-related codes are in the `src/comm/util.js` file. Specifically, the `Util.getLogger` function should be improved according to the above specification and examples. Moreover, it would be nice to extract the logging-related functions into their own utility file (`src/comm/logging-util.js`), similarly to `src/comm/config-util.js`.
",closed,False,2019-03-05 09:12:23,2019-03-14 14:32:52
caliper,panyu4,https://github.com/hyperledger/caliper/pull/337,https://api.github.com/repos/hyperledger/caliper/issues/337,change CA names for customdomain,"Change CA names of the customdomain networks for the fabric-ccp adapter
Signed-off-by: panyu2 <PY.panyu@huawei.com>",closed,True,2019-03-04 09:19:50,2019-03-04 12:30:36
caliper,gtt116,https://github.com/hyperledger/caliper/issues/336,https://api.github.com/repos/hyperledger/caliper/issues/336,"Endorsement denied: Error: {""code"":302, ""reason"": ""account already exists""}","<!--- Provide a general summary of the issue in the Title above -->

## Context
After running benchmark `simple` many times, there is more changes to see lots failed endorsement request. Also with logs like following:

```
error: [e2eUtils.js]: Failed to complete transaction [a3ba0...]:Error: Endorsement denied: Error: {""code"":302, ""reason"": ""account already exists""}
    at Object.invokebycontext (/root/caliper/src/adapters/fabric/e2eUtils.js:1070:27)
    at <anonymous>
Add peer:Peer:{url:grpcs://peer2.benchlow1.aliyunbaas.top:31121}
error: [e2eUtils.js]: Failed to complete transaction [6999e...]:Error: Endorsement denied: Error: {""code"":302, ""reason"": ""account already exists""}
    at Object.invokebycontext (/root/caliper/src/adapters/fabric/e2eUtils.js:1070:27)
    at <anonymous>
info: [demo.js]: [Transaction Info] - Submitted: 336 Succ: 205 Fail:0 Unfinished:131
error: [e2eUtils.js]: Failed to complete transaction [0bc96...]:Error: Endorsement denied: Error: {""code"":302, ""reason"": ""account already exists""}
    at Object.invokebycontext (/root/caliper/src/adapters/fabric/e2eUtils.js:1070:27)
    at <anonymous>
Add peer:Peer:{url:grpcs://peer1.benchlow1.aliyunbaas.top:31111}
```

## Expected Behavior
The account should not be conflict with the others.

## Actual Behavior
Endorsement denied: Error: {""code"":302, ""reason"": ""account already exists""}

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
Add more random character in account name.

```nodejs
--- a/benchmark/simple/open.js
+++ b/benchmark/simple/open.js
@@ -53,7 +53,7 @@ function generateAccount() {
     if(typeof prefix === 'undefined') {
         prefix = get26Num(process.pid);
     }
-    return prefix + get26Num(account_array.length+1);
+    return prefix + get26Num(account_array.length+1) + Math.floor(Math.random()*100000);
 }
```

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used: commit 392d6cbc90b3e029a7782a99bd011eda4cce255d
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2019-03-04 07:32:29,2019-03-04 15:46:46
caliper,robiharid,https://github.com/hyperledger/caliper/issues/335,https://api.github.com/repos/hyperledger/caliper/issues/335,Error benchmarking default network (cannot find module fabric-ca-client/lib/FabricCAClientImpl.js),"<!--- Provide a general summary of the issue in the Title above -->
I receive an error running node benchmark/simple/main.js
## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
I just want to measure throughput/etc to benchmark a sample Hyperledger network ( I don't need to create one, but I want to see benchmarks for 1 transaction, 100, 1k etc).
## Actual Behavior
<!--- Tell us what happens instead -->
Running node benchmark/simple/main.js gives me this error:
`node benchmark/simple/main.js
info: [bench-flow.js]: ####### Caliper Test #######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml up -d;sleep 3s
Creating network ""2org1peergoleveldb_default"" with the default driver
Creating ca.org1.example.com ... done
Creating orderer.example.com ... done
Creating ca.org2.example.com ... done
Creating peer0.org2.example.com ... done
Creating peer0.org1.example.com ... done
error: [bench-flow.js]: Error: Error: Cannot find module 'fabric-ca-client/lib/FabricCAClientImpl.js'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:571:15)
    at Function.Module._load (internal/modules/cjs/loader.js:497:25)    at Module.require (internal/modules/cjs/loader.js:626:17)
    at require (internal/modules/cjs/helpers.js:20:18)
    at Object.module.exports.init (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/src/adapters/fabric/uti
l.js:141:22)
    at Fabric.init (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/src/adapters/fabric/fabric.js:39:14)
    at Blockchain.init (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/src/comm/blockchain.js:71:26)
    at Object.module.exports.run (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/src/comm/bench-flow.js:3
44:26)
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org1.example.com ... done
Stopping peer0.org2.example.com ... done
Stopping orderer.example.com    ... done
Stopping ca.org2.example.com    ... done
Stopping ca.org1.example.com    ... done
Removing peer0.org1.example.com ... done
Removing peer0.org2.example.com ... done
Removing orderer.example.com    ... done
Removing ca.org2.example.com    ... done
Removing ca.org1.example.com    ... done
Removing network 2org1peergoleveldb_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images
error: [bench-flow.js]: Unsuccessful command execution. Error code: 1. Terminating signal: null
error: [benchmark/simple/main.js]: Error while executing the benchmark: Error: Command failed: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org1.example.com ... done
Stopping peer0.org2.example.com ... done
Stopping orderer.example.com    ... done
Stopping ca.org2.example.com    ... done
Stopping ca.org1.example.com    ... done
Removing peer0.org1.example.com ... done
Removing peer0.org2.example.com ... done
Removing orderer.example.com    ... done
Removing ca.org2.example.com    ... done
Removing ca.org1.example.com    ... done
Removing network 2org1peergoleveldb_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images

    at ChildProcess.exithandler (child_process.js:282:12)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)`
## Possible Fix
I was told to revert to fabric-ca-client and fabric-client to 1.10 by using (npm run fabric-v1.1-deps) but I get this error:
`node benchmark/simple/main.js
info: [bench-flow.js]: ####### Caliper Test #######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml up -d;sleep 3s
Creating network ""2org1peergoleveldb_default"" with the default driver
Creating orderer.example.com ... done
Creating ca.org2.example.com    ... done
Creating ca.org1.example.com    ... done
Creating peer0.org1.example.com ... done
Creating peer0.org2.example.com ... done
info: [create-channel.js]: Creating mychannel...
E0303 21:17:45.886797000 4372706752 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.
E0303 21:17:45.895233000 4372706752 ssl_transport_security.cc:989]     Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.
error: [Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: Connect Failed\n    at createStatusError (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:64:15)\n    at ClientDuplexStream._emitStatusIfDone (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:270:19)\n    at ClientDuplexStream._readsDone (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:236:8)\n    at readCallback (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:296:12)""
error: [create-channel.js]: Failed to create channels: Error: SERVICE_UNAVAILABLE
    at ClientDuplexStream.<anonymous> (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/fabric-client/lib/Orderer.js:136:21)
    at ClientDuplexStream.emit (events.js:182:13)
    at ClientDuplexStream._emitStatusIfDone (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:271:12)
    at ClientDuplexStream._readsDone (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:236:8)
    at readCallback (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:296:12)
error: [fabric.js]: Fabric initialization failed: Error: SERVICE_UNAVAILABLE
    at ClientDuplexStream.<anonymous> (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/fabric-client/lib/Orderer.js:136:21)
    at ClientDuplexStream.emit (events.js:182:13)
    at ClientDuplexStream._emitStatusIfDone (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:271:12)
    at ClientDuplexStream._readsDone (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:236:8)
    at readCallback (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:296:12)
error: [bench-flow.js]: Error: Error: SERVICE_UNAVAILABLE
    at ClientDuplexStream.<anonymous> (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/fabric-client/lib/Orderer.js:136:21)
    at ClientDuplexStream.emit (events.js:182:13)
    at ClientDuplexStream._emitStatusIfDone (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:271:12)
    at ClientDuplexStream._readsDone (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:236:8)
    at readCallback (/Users/robiharid/OneDrive/Web Development/Development Work/Hyperledger/caliper/node_modules/grpc/src/client.js:296:12)
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org1.example.com ...
Stopping peer0.org2.example.com ...
Stopping orderer.example.com    ...
Stopping ca.org1.example.com    ...
Stopping peer0.org1.example.com ... done
Stopping peer0.org2.example.com ... doneStopping orderer.example.com    ... done
Stopping ca.org1.example.com    ... doneStopping ca.org2.example.com    ... done
Removing peer0.org1.example.com ... done
Removing peer0.org2.example.com ... done
Removing orderer.example.com    ... done
Removing ca.org1.example.com    ... done
Removing ca.org2.example.com    ... done
Removing network 2org1peergoleveldb_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images
error: [bench-flow.js]: Unsuccessful command execution. Error code: 1. Terminating signal: null
error: [benchmark/simple/main.js]: Error while executing the benchmark: Error: Command failed: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org1.example.com ... done
Stopping peer0.org2.example.com ... done
Stopping orderer.example.com    ... done
Stopping ca.org1.example.com    ... done
Stopping ca.org2.example.com    ... done
Removing peer0.org1.example.com ... done
Removing peer0.org2.example.com ... done
Removing orderer.example.com    ... done
Removing ca.org1.example.com    ... done
Removing ca.org2.example.com    ... done
Removing network 2org1peergoleveldb_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images

    at ChildProcess.exithandler (child_process.js:282:12)
    at ChildProcess.emit (events.js:182:13)
    at maybeClose (internal/child_process.js:947:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:236:5)`
## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->
Trying to run first test
## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used: fabric-ca-client and fabric-client is 1.4.0",open,False,2019-03-03 21:26:38,2019-03-04 20:48:18
caliper,gtt116,https://github.com/hyperledger/caliper/issues/334,https://api.github.com/repos/hyperledger/caliper/issues/334,Support specify username and password in network config,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
Currently, the user which used to invoke smart contract is hard code with password ""adminpw"". but  when we use caliper to test a product environment, we need to specify the username and password.
## Expected Behavior
<!--- Tell us what should happen -->
We can override the default username and password.
## Actual Behavior
<!--- Tell us what happens instead -->
Not support yet.
## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
getSubmitter() support read username and password from config.

## Steps to Reproduce
Null

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",open,False,2019-03-01 06:49:27,2019-03-01 10:36:12
caliper,zsh122958,https://github.com/hyperledger/caliper/issues/333,https://api.github.com/repos/hyperledger/caliper/issues/333,Caliper generates reports of TPS issues encountered!!!  6Tps?,"Caliper generates reports of TPS issues encountered
Pressure test 1000 trades 100tps
The first problem arose when the transaction was sent
Below the figure is the generated TPS report
![image](https://user-images.githubusercontent.com/44695130/53557890-df055780-3b81-11e9-8934-3637eabfca58.png)


The sync-request function is introduced in sending transactions
The success of the transaction is shown in the figure below.
{ code: '0000',
  msg: 'exec successfully',
  txid: '74ee9d9890ae45d687ac58cad26d07fb' }

![image](https://user-images.githubusercontent.com/44695130/53558047-3277a580-3b82-11e9-9309-c58b8554772b.png)


Use the function request-promise introduced by asynchronous sending transactions
The blockchain network could not receive information if the transaction failed, as shown in the figure

![image](https://user-images.githubusercontent.com/44695130/53558157-62bf4400-3b82-11e9-82e1-e612a092d0cb.png)

Here is the TPS I tested manually

![image](https://user-images.githubusercontent.com/44695130/53558319-c0539080-3b82-11e9-9816-cbebd27e6f82.png)


How to better position the way of the problem!!!
I think it's because the synchronization function affects TPS",open,False,2019-02-28 10:04:04,2019-03-11 13:49:14
caliper,houqinghui,https://github.com/hyperledger/caliper/pull/332,https://api.github.com/repos/hyperledger/caliper/issues/332,modify package.json,"
1. Delete the dependences package: fabric-ca-client, fabric-client, fabric-network. in the package.json.",closed,True,2019-02-26 10:39:24,2019-02-27 08:53:44
caliper,aklenik,https://github.com/hyperledger/caliper/issues/331,https://api.github.com/repos/hyperledger/caliper/issues/331,Allow to skip start and end scripts even when they are defined,"## Context
This issue is a rework of #329.

During the development of user callback or chaincodes, it would be nice to reuse an already started (through the start script) local network. Currently, we need to remove the `start` script from the network configuration file to achieve this.

Also, during the debugging of an error, it would be nice to keep the network running at the end of a benchmark to inspect the logs, for example. Currently, we need to remove the `end` script from the network configuration file to achieve this.

## Expected Behavior
Provide a mechanism to skip the start and/or end scripts even when they are present in the configuration. 

## Actual Behavior
Currently, we need to remove the `start`/`end` scripts from the network configuration file.

## Possible Fix
Caliper already provides a flexible configuration mechanism. Two options should be added to the general Caliper configuration file (`config/default.yaml`):

```yaml
core:
    skipStartScript: false
    skipEndScript: false
```
This way the settings can be easily overridden through environment variables or command line arguments. 

Finally, [this](https://github.com/hyperledger/caliper/blob/027528a5f5e142f17c694e6648baec51cb4c2139/src/comm/bench-flow.js#L336) and [this](https://github.com/hyperledger/caliper/blob/027528a5f5e142f17c694e6648baec51cb4c2139/src/comm/bench-flow.js#L382) line should be changed to take the settings into account.
 
## Existing issues
- #329 ",closed,False,2019-02-22 12:33:34,2019-03-05 09:20:43
caliper,clumsky,https://github.com/hyperledger/caliper/pull/330,https://api.github.com/repos/hyperledger/caliper/issues/330,Providing a argv to control whether create default fabric network,"Signed-off-by: TaoChen <clumsky@163.com>

## Issue/User story
#329 

after this PR
node main.js -n ../../network/fabric-v1.1/2org1peergoleveldb/fabric-go.json -d false
bench-flows.js will not call execAsync(command) to create default fabric network.

",closed,True,2019-02-22 07:07:27,2019-03-04 15:30:13
caliper,clumsky,https://github.com/hyperledger/caliper/issues/329,https://api.github.com/repos/hyperledger/caliper/issues/329,"When fabric network is created, caliper don't need to execute command. ","<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
For example,user use caliper to run benchmark/simple.
node main.js -n ../../network/fabric-v1.1/2org1peergoleveldb/fabric-go.json 
test run success.
But when use has own fabric network, user don't need to create default fabric network. Now the solution is user modify fabric-go.json to remove caliper.command.start and caliper.command.end.
## Expected Behavior
<!--- Tell us what should happen -->
User  use node main.js -argv  -n ../../network/fabric-v1.1/2org1peergoleveldb/fabric-go.json  to start testing. The argv can control whether creating the default fabric network. 
## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2019-02-22 06:50:10,2019-02-22 11:42:37
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/328,https://api.github.com/repos/hyperledger/caliper/issues/328,Fix fabric1.4 customdomain CA name errors,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

",closed,True,2019-02-22 03:55:56,2019-02-22 08:27:41
caliper,sidraamalik,https://github.com/hyperledger/caliper/issues/327,https://api.github.com/repos/hyperledger/caliper/issues/327,Caliper Composer Benchmark -- Transactions failure when asset/participant registry is updated,"<!--- Provide a general summary of the issue in the Title above -->
I have a sample network running in composer. The transactions are successful and the assets are being updated accordingly. However when i test the same network using caliper, transactions fail. I have figured out that the problem appears whenever ""await registry update"" is executed in logic.js. 

## Context - TemperatureReading transaction from perishable network

Model: 
transaction TemperatureReading{
  o Double centigrade
  --> Commodity commodity
}

Logic.js

async function temperatureReading(temperatureReading) {  // eslint-disable-line no-unused-vars
    const shipmentRegistry = await getAssetRegistry('org.example.trading.Commodity');
    const comm = shipmentRegistry.get(temperatureReading.commodity);
   if (comm.temperatureReadings) {
        comm.temperatureReadings.push(temperatureReading);
    } else {
        comm.temperatureReadings = [temperatureReading];
    }

   //  if I comment this line, transactions are successful in caliper. This works fine in composer. i have no ACL rules which might restrict this. 
   **await shipmentRegistry.update(comm);**  

}

## Expected Behavior
The commodity should be updated as a result with a temperature reading transaction.

",open,False,2019-02-21 23:01:41,2019-03-01 10:51:28
caliper,clumsky,https://github.com/hyperledger/caliper/issues/326,https://api.github.com/repos/hyperledger/caliper/issues/326,The success of channel creation should be verified.,"<!--- Provide a general summary of the issue in the Title above -->
In caliper/src/adapters/fabric/create-channel.js. line120:
const result = await client.createChannel(request);

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
The Hyperledger Fabric SDK for Node.js  API  introduces class Client createChannel(request)
Returns:
Promise for a result object with status on the acceptance of the create request by the orderer. Note that this is not the confirmation of successful creation of the channel. The client application must poll the orderer to discover whether the channel has been created completely or not.

## Expected Behavior
<!--- Tell us what should happen -->
After client create channel, verifying whether the channel has been created completely. 

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",open,False,2019-02-20 12:38:11,2019-03-01 10:51:58
caliper,panyu4,https://github.com/hyperledger/caliper/pull/325,https://api.github.com/repos/hyperledger/caliper/issues/325,Add customdomain network for fabric1.4,"Signed-off-by: panyu4 <PY.panyu@huawei.com>
",closed,True,2019-02-20 10:21:21,2019-02-21 02:00:05
caliper,clumsky,https://github.com/hyperledger/caliper/issues/324,https://api.github.com/repos/hyperledger/caliper/issues/324,In caliper/src/adapters/fabric/create-channel.js line120:client.createChannel(request);,"
<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2019-02-20 08:57:44,2019-02-20 08:58:24
caliper,houqinghui,https://github.com/hyperledger/caliper/pull/323,https://api.github.com/repos/hyperledger/caliper/issues/323,add fabric v1.3 network file,"I add the remaining fabric v1.3 network files. @aklenik @panyu4 please review it.
",closed,True,2019-02-20 03:08:50,2019-02-27 11:14:04
caliper,paramesh,https://github.com/hyperledger/caliper/issues/322,https://api.github.com/repos/hyperledger/caliper/issues/322,specifying multiple endorsers from a same org in caliper?,"## Context
Incase of network having 1Org and 2peer per Org. Is it possible to specify that every transaction should be endorsed by all the four peers? (all the peers in all the orgs?)

We tried the following configuration but it does not seem to work.
""endorsement-policy"": {
      ""identities"": [
        {
          ""role"": {
            ""name"": ""member"",
            ""mspId"": ""Org1MSP""
          }
        },
        {
          ""role"": {
            ""name"": ""member"",
            ""mspId"": ""Org1MSP""
          }
        }
      ],
      ""policy"": {""2-of"":[{""signed-by"" : 0}, { ""signed-by"" : 1}]}
",closed,False,2019-02-20 00:39:16,2019-02-20 18:58:04
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/321,https://api.github.com/repos/hyperledger/caliper/issues/321,[consult]endorsement policy impact on throughput,"## Context
Env:
2 orgs, each org has 2 peers

Benchmark configuration file:
[config-marbles-only-init.zip](https://github.com/hyperledger/caliper/files/2874558/config-marbles-only-init.zip)
Network configuration file:
[fabric-node-marbles.zip](https://github.com/hyperledger/caliper/files/2874561/fabric-node-marbles.zip)

Testing steps:
1.Set endorsement-policy as 2-of:
![a32b5754b00ded2cdb4f3f0f8ebc687](https://user-images.githubusercontent.com/12689769/52937022-e7e37580-3398-11e9-865c-2b97e52598e4.png)
Then run test, the test report is as following:
![818cb9c7f21505b2258e5d06e516419](https://user-images.githubusercontent.com/12689769/52937076-16f9e700-3399-11e9-8e69-cad59185079b.png)
2.Set endorsement-policy as 1-of:
![8253a1af9cc99086f9a753db4267968](https://user-images.githubusercontent.com/12689769/52937115-342eb580-3399-11e9-8065-d6ad9ebff512.png)
Then run test, the test report is as following:
![1402b76ce4e3cb018ec57cf251ed3bb](https://user-images.githubusercontent.com/12689769/52937162-51fc1a80-3399-11e9-85b1-0db6f6235a19.png)


## Expected Behavior
I read some articles, and in my understanding, endorsement-policy should have significant impact on the throughput. So, the throughput of endorsement-policy ""1-of"" should be much higher than that of endorsement-policy ""2-of"".

## Actual Behavior
Based on the generated testing report, there is not much difference between them. Both are around 100 tps.
Here I just want to consult your professional advice and experience about this. Does endorsement-policy have significant impact on throughput or not? Do you have any idea to improve the throughput? Thank you.",closed,False,2019-02-18 08:31:44,2019-03-05 13:53:09
caliper,houqinghui,https://github.com/hyperledger/caliper/issues/320,https://api.github.com/repos/hyperledger/caliper/issues/320,Control more aspects of the generated report,"For example, I want to have more automated control over the name of the report and where it is saved. It would also be nice to have the report formatted as a CSV or something more data-friendly. I think  the datas that Caliper produces should be acessibale to user, and User can present the datas in many visualization methods.",open,False,2019-02-18 01:11:38,2019-03-27 10:49:01
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/319,https://api.github.com/repos/hyperledger/caliper/issues/319,The actual Send Rate is not equal to the configured fixed-rate,"## Context
The context and env is totally same as #314
The configured send rate of ""query"" label is 5:
![9ba139efd9cf21563aa2aef396b91f1](https://user-images.githubusercontent.com/12689769/52895794-2f7fcb00-31fa-11e9-857e-2bff7c9d472f.png)
But in the test log, the send rate is about 7.5:
![b6585afd16337d78a761fdf8f9878c8](https://user-images.githubusercontent.com/12689769/52895814-71a90c80-31fa-11e9-8741-f864999eecd8.png)
![7c848f9482409eafceb86817c174454](https://user-images.githubusercontent.com/12689769/52895816-75d52a00-31fa-11e9-9bc9-541c8f008366.png)
Could you please check it? Thanks. :blush:",closed,False,2019-02-16 06:55:17,2019-02-16 09:26:08
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/318,https://api.github.com/repos/hyperledger/caliper/issues/318,error: [monitor-docker.js]: TypeError: Cannot read property 'id' of undefined,"## Context
The context and env is totally same as #314
In the ending part of the test log, there is an error ""error: [monitor-docker.js]: TypeError: Cannot read property 'id' of undefined""
![a2e8739bd69afeb3551893121bb4831](https://user-images.githubusercontent.com/12689769/52894388-9c3b9b00-31e3-11e9-8b2e-7a34299271c8.png)
![2691fcc899c3e2db04a50505e289080](https://user-images.githubusercontent.com/12689769/52894389-9e9df500-31e3-11e9-9368-955fe63dbad1.png)

Could you please check it? Thanks.",open,False,2019-02-16 04:09:25,2019-02-16 09:31:01
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/317,https://api.github.com/repos/hyperledger/caliper/issues/317,"[consult]how to tuning parameters to prevent ""timeout expired while executing transaction""","## Context
The context and env is totally same as #314
In the test log, when the sending tps was increased to some extent, transaction failure happened due to error ""timeout expired while executing transaction"".
![bd7d451ead5d799dbc636dc92da7fe7](https://user-images.githubusercontent.com/12689769/52894258-c2603b80-31e1-11e9-87d0-2580b0374156.png)
I have two questions in my mind:
1.What does this error mean from fabric theoretical point of view?
2.Can we take any measure(e.g. tuning some parameters) to prevent such error, or reduce the error count to minimum count? Could you please share your experience?
Thank you very much!",closed,False,2019-02-16 03:58:28,2019-02-18 08:14:14
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/316,https://api.github.com/repos/hyperledger/caliper/issues/316,"""Succ"" count in the test report is 0","## Context
The context and env is totally same as #314 
In the Testing ""query"" round log, actually the totally success transaction was 1500, but in the generated report, the ""Succ"" count is 0. I can't understand. Could you please tell me? Thanks.
![3f7123c7622810ce4442fda7664e42b](https://user-images.githubusercontent.com/12689769/52894189-bc1d8f80-31e0-11e9-8c5d-03190afb6b48.png)
![c2632f4485de42456f99436147bdc8f](https://user-images.githubusercontent.com/12689769/52894191-bf188000-31e0-11e9-8a75-0d57d9c7265e.png)
![574c4e2c7a3142bbea54fb8c0fe041d](https://user-images.githubusercontent.com/12689769/52894193-c17ada00-31e0-11e9-9f3b-e65010fe1002.png)",closed,False,2019-02-16 03:48:46,2019-02-16 09:32:37
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/315,https://api.github.com/repos/hyperledger/caliper/issues/315,"The difference between ""Fail"" and ""Unfinished"" in test log","## Context
Hello Caliper team, after I ran a test, I discovered that in test log, there are two fields: Fail, Unfinished.
![3d4b862699716ba33c42427a8121d72](https://user-images.githubusercontent.com/12689769/52894044-621bca80-31de-11e9-9a10-d90546bccd14.png)
And in the generated report, only Fail is presented, while Unfinished is not presented.
![0b5bb7328107a4518f5035bf97bd963](https://user-images.githubusercontent.com/12689769/52894059-9c856780-31de-11e9-9158-98c8e6e54e77.png)
I don't understand the difference between them. Could you please tell me? Thanks in advance.",closed,False,2019-02-16 03:33:11,2019-02-16 09:01:12
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/314,https://api.github.com/repos/hyperledger/caliper/issues/314,Disk Read and Disk Write is 0 for marbles init round,"## Context
Env:
2 orgs, each org has 2 peers

Benchmark config file:
[config-marbles.zip](https://github.com/hyperledger/caliper/files/2871535/config-marbles.zip)
Network config file:
[fabric-node-marbles.zip](https://github.com/hyperledger/caliper/files/2871536/fabric-node-marbles.zip)

Steps:
Execute command ""node benchmark/marbles/main.js -c /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/config-marbles.yaml -n /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/fabric-node-marbles.json""

## Expected Behavior
In my understanding, marbles init round would write some initial data to the ledger, which means that writing to disk. So in the testing report, the Disk Write should not be 0.

## Actual Behavior
In the testing report, the Disk Write is 0.
![a3c3d9d76729b65de06bdd2b834982e](https://user-images.githubusercontent.com/12689769/52893583-e2d7c800-31d8-11e9-9ab6-c76d3d9ae101.png)
![917feb1cc0894eb64cd70e6d15130f3](https://user-images.githubusercontent.com/12689769/52893587-e66b4f00-31d8-11e9-8a4e-21ee8497d7d9.png)

Could you please explain why Disk Write is 0? Thanks in advance.
",closed,False,2019-02-16 02:52:52,2019-02-22 13:33:55
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/313,https://api.github.com/repos/hyperledger/caliper/issues/313,"For ""simple"" chaincode: instantiate proposal was bad: Error: REQUEST_TIMEOUT","## Context
Env:
2 orgs, each org has 2 peers

Steps:
1.In network configuration file, use simple chaincode. Note: previously, I used marbles chaincode.
![42b6458c82cc567755a16ab5b202758](https://user-images.githubusercontent.com/12689769/52892841-6beb0100-31d1-11e9-824a-56c0f10efbe6.png)
2.Execute command ""node benchmark/simple/main.js -c /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/config-linear-rate.yaml -n /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/fabric-node.json""

## Expected Behavior
The simple chaincode should be instantiated successfully.

## Actual Behavior
The simple chaincode instantiation failed.
![536a0ff08fcc111d194859f31b90784](https://user-images.githubusercontent.com/12689769/52892883-dc921d80-31d1-11e9-93a4-59ba2f2665fb.png)
![6c2e730262a3fd3d7a96a7a0d0c22d4](https://user-images.githubusercontent.com/12689769/52892884-df8d0e00-31d1-11e9-9f76-863c764dc6a1.png)
The log is not very complete. I only captured the beginning and ending log.
Note: when I used marbles chaincode, the instantiation was successful. I only replaced chaincode from marbles to simple in the network configuration file.

Could you help check this? Thanks.",closed,False,2019-02-16 02:02:43,2019-02-16 09:51:42
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/312,https://api.github.com/repos/hyperledger/caliper/issues/312,chaincode simple not found,"## Context
Env:
2 orgs, each org has 2 peers

Steps:
1.In my fabric-node.json, the chaincodes configuration is as following:
![0983fbfa5fc25f4b5142be289ae8e0c](https://user-images.githubusercontent.com/12689769/52856775-4a056600-3160-11e9-8f59-94e05f1a4de8.png)
That is, only ""marbles"" chaincode is there. And there is not ""simple"" chaincode.
2.In caliper root folder, execute ""node benchmark/simple/main.js -c /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/config-linear-rate.yaml -n /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/fabric-node.json"" command to run the main.js test.

## Expected Behavior
1.Test is successful
2.There is no error
3.Test report is generated

## Actual Behavior
1.Error ""chaincode simple not found"" keeps being displayed:
![5f0c12100b6f6836f1b6ef0f7c75697](https://user-images.githubusercontent.com/12689769/52857006-d44dca00-3160-11e9-8a0d-34f237cc5ed4.png)
In my understanding, the chaincode is defined by myself only in the network configuration file. I only defined ""marbles"" in it. Why ""simple"" chaincode is being looked up?
Based on the error, I can infer there is some relationship between benchmark/simple/main.js and ""simple"" chaincode. They are tightly bonded, right?

2.Even though ""simple"" chaincode is not found, the test report was still generated, but the test result is incomplete, e.g. Avg Latency and Throughput seems not correct.
![31e3d3fe707d885a6f65952ecc66198](https://user-images.githubusercontent.com/12689769/52857261-969d7100-3161-11e9-8caf-b46c95bd0917.png)
![220ed49787fc0cc0d992717f8f36e78](https://user-images.githubusercontent.com/12689769/52857297-b0d74f00-3161-11e9-9848-acb9a9f365d2.png)

@aklenik Could you please help on this issue? Thanks in advance.",closed,False,2019-02-15 12:39:40,2019-02-16 08:54:45
caliper,aklenik,https://github.com/hyperledger/caliper/issues/311,https://api.github.com/repos/hyperledger/caliper/issues/311,CA services made mandatory in Fabric adapter,"## Context

The [following lines](https://github.com/hyperledger/caliper/blob/master/src/adapters/fabric/e2eUtils.js#L695-L700) requires a CA for every organization, even when the certs and keys would be available locally.

(The following is also unclear for me: just because the protocol is `https` for the CA, it doesn't mean that it's configured for mutual TLS, and as per the documentation, the  `setTlsClientCertAndKey` function sets the materials for mutual TLS.)

## Expected Behavior
CA specification should be optional.

## Actual Behavior
CA specification is mandatory without graceful failure.

## Possible Fix
Read certs and keys from a local directory if provided (typically the case when using the cryptogen tool), and turn to CA only if necessary. 

## Steps to Reproduce
1. Remove the CA properties from any Fabric network configuration.
2. Run an arbitrary benchmark.

## Existing issues
- #305 
- #308 


@nklincoln According to `git blame`, you modified these the last time. Any insight? :)",open,False,2019-02-15 12:03:38,2019-02-15 12:03:38
caliper,clumsky,https://github.com/hyperledger/caliper/pull/310,https://api.github.com/repos/hyperledger/caliper/issues/310,Provide error information,"Signed-off-by: TaoChen <clumsky@163.com>

",closed,True,2019-02-15 10:54:59,2019-02-15 12:44:37
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/309,https://api.github.com/repos/hyperledger/caliper/issues/309,"[consult]endorsement-policy ""member"" and ""admin""","## Context
When I lookup some configuration in official website of Caliper and some other engineers' blog, I found that for endorsement-policy, there is some minor difference.
Could you tell me what is the difference of the following two configuration:
![ff84622a399703697bfce1f50a07a4c](https://user-images.githubusercontent.com/12689769/52844306-40b7d180-313f-11e9-8704-608dc427a069.png)
And
![0dba0ef9d6eac55712cfc5e73672a30](https://user-images.githubusercontent.com/12689769/52844315-49100c80-313f-11e9-97e5-3b3d4b4a1838.png)

Thanks.",closed,False,2019-02-15 08:33:27,2019-02-15 12:43:30
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/308,https://api.github.com/repos/hyperledger/caliper/issues/308,Cannot read property 'url' of undefined,"## Context
Env:
2 orgs, each org has 2 peers

Steps:
Execute command ""node benchmark/simple/main.js -n /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/fabric-node.json""
note:1.omit ""-c"" parameter, which means using the default ""config-linear-rate.yaml"" as the benchmark config file
2.The content of used fabric-node.json is as following:
[fabric-node.zip](https://github.com/hyperledger/caliper/files/2868354/fabric-node.zip)


## Expected Behavior
The benchmark test(running ""marbles"" chaincode) ran successfully and report was generated normally.

## Actual Behavior
Three errors happened:
1.error: [monitor-docker.js]: monitor-docker: could not find active local container
2.Cannot read property 'url' of undefined
3.Cannot read property 'unshift' of undefined
The entire detailed log is below:
![555f179c176376ce66a76d33a7bd158](https://user-images.githubusercontent.com/12689769/52843467-2da40200-313d-11e9-8920-209b42ace177.png)
![437ba993c54272855a4fe26911fd8c8](https://user-images.githubusercontent.com/12689769/52843472-309ef280-313d-11e9-8128-01da9a3372b5.png)
![9ee05c30aab106c8c66c62d7e12e0af](https://user-images.githubusercontent.com/12689769/52843476-33014c80-313d-11e9-9882-acdf3d7a6117.png)
![6338bd5db2fb706a15c92e6fa58aed0](https://user-images.githubusercontent.com/12689769/52843480-35fc3d00-313d-11e9-8b1a-a9c818d21170.png)

Could you please help check this issue? Thanks in advance. @houqinghui ",closed,False,2019-02-15 08:18:58,2019-02-15 12:05:23
caliper,unknown7788,https://github.com/hyperledger/caliper/issues/307,https://api.github.com/repos/hyperledger/caliper/issues/307,"run the benchmark/simple/main.js demo and get an error,plz help me.","root@peer2:/opt/gopath/src/github.com/hyperledger/caliper# node ./benchmark/simple/main.js
info: [bench-flow.js]: ####### Caliper Test #######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml up -d;sleep 3s
Creating network ""2org1peergoleveldb_default"" with the default driver
Creating ca.org2.example.com ... done
Creating ca.org1.example.com ... done
Creating orderer.example.com ... done
Creating peer0.org2.example.com ... done
Creating peer0.org1.example.com ... done
info: [create-channel.js]: Creating mychannel...
2019-02-15T07:15:18.341Z - error: [Remote.js]: Error: Failed to connect before the deadline URL:grpcs://localhost:7050
2019-02-15T07:15:18.342Z - error: [Orderer.js]: Orderer grpcs://localhost:7050 has an error Error: Failed to connect before the deadline URL:grpcs://localhost:7050
error: [create-channel.js]: Failed to create channels: Error: Failed to connect before the deadline URL:grpcs://localhost:7050
    at checkState (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:720:16)
error: [fabric.js]: Fabric initialization failed: Error: Failed to connect before the deadline URL:grpcs://localhost:7050
    at checkState (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:720:16)
error: [bench-flow.js]: Error: Error: Failed to connect before the deadline URL:grpcs://localhost:7050
    at checkState (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:720:16)
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org1.example.com ... done


this is myenvironment

root@peer2:/opt/gopath/src/github.com/hyperledger/caliper# npm list grpc
caliper@0.1.0 /opt/gopath/src/github.com/hyperledger/caliper
├─┬ fabric-ca-client@1.4.0
│ └── grpc@1.14.2
├─┬ fabric-client@1.4.0
│ └── grpc@1.14.2
└── grpc@1.18.0

root@peer2:/opt/gopath/src/github.com/hyperledger/caliper#
",open,False,2019-02-15 07:25:22,2019-03-04 20:50:49
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/306,https://api.github.com/repos/hyperledger/caliper/issues/306,instantiate proposal was bad: Error: REQUEST_TIMEOUT,"## Context
Env:
2 orgs, each org has 2 peers

Steps:
Execute command ""node benchmark/simple/main.js -n /home/yzapps/hyperledger/yingzi/caliper/network/fabric-v1.4-yingzi/2org2peercouchdb/fabric-node.json""
note:1.omit ""-c"" parameter, which means using the default ""config-linear-rate.yaml"" as the benchmark config file
2.The content of used fabric-node.json is as following:
[fabric-node.zip](https://github.com/hyperledger/caliper/files/2868140/fabric-node.zip)

## Expected Behavior
The benchmark test ran successfully and report was generated normally.

## Actual Behavior
""instantiate proposal was bad: Error: REQUEST_TIMEOUT"" error happened. The detailed log is attached:
[benchmark_log.zip](https://github.com/hyperledger/caliper/files/2868153/benchmark_log.zip)

Could you please help me figure out what is wrong here? Thank you.",closed,False,2019-02-15 07:18:01,2019-02-15 07:57:57
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/305,https://api.github.com/repos/hyperledger/caliper/issues/305,"[consult]Is ""ca"" attribute not needed if cryptogen tool is used instead of CA","## Context
Hello Caliper team:
My network has 2 orgs, and each org has 2 peers. And I didn't use CA server to create and publish certificates. Instead, I use the official script cryptogen to generate certificates.
So I want to confirm with you that in network configuration file, whether ""ca"" can be removed or not?
![10](https://user-images.githubusercontent.com/12689769/52839073-ccc1fd00-312f-11e9-88d1-98aea80858b2.png)
Thanks in advance.",closed,False,2019-02-15 06:42:20,2019-02-15 12:11:36
caliper,jmj119,https://github.com/hyperledger/caliper/issues/304,https://api.github.com/repos/hyperledger/caliper/issues/304,Any step to do in advance to run on distribute clients (Could not connect to ZooKeeper)?,"Hi all,

Here is another test that has failed. I think there would be another work to do to run on distributed clients, which I guess are the source of the problem. Can anyone share how to fix the problem?

Thanks,
MJ

mjjeon@swarm06:~/caliper$ sudo node benchmark/simple/main.js -c config-zookeeper.yaml
info: [bench-flow.js]: ####### Caliper Test #######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/dCreating orderer.example.com ... done
Creating network ""2org1peergoleveldb_default"" with the default driver
Creating peer0.org2.example.com ... done
Creating ca.org1.example.com ...
Creating ca.org2.example.com ...
Creating peer0.org1.example.com ...
Creating peer0.org2.example.com ...
info: [create-channel.js]: Creating mychannel...
info: [create-channel.js]: Created mychannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining organization org1 to channel mychannel...
info: [join-channel.js]: Successfully joined peerOrg1's peers to mychannel
info: [join-channel.js]: Joining organization org2 to channel mychannel...
info: [join-channel.js]: Successfully joined peerOrg2's peers to mychannel
info: [join-channel.js]: Successfully joined mychannel
info: [install-chaincode.js]: installing all chaincodes......
info: [install-chaincode.js]: Installing chaincode drm...
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/drm
info: [install-chaincode.js]: Installing chaincode drm...
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/drm
info: [install-chaincode.js]: Installed chaincode drm successfully in all peers
info: [install-chaincode.js]: Installing chaincode marbles...
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/marbles-norichquery/go
info: [install-chaincode.js]: Installing chaincode marbles...
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/marbles-norichquery/go
info: [install-chaincode.js]: Installed chaincode marbles successfully in all peers
info: [install-chaincode.js]: Installing chaincode simple...
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [install-chaincode.js]: Installing chaincode simple...
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [install-chaincode.js]: Installed chaincode simple successfully in all peers
info: [install-chaincode.js]: Installing chaincode smallbank...
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/smallbank
info: [install-chaincode.js]: Installing chaincode smallbank...
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/smallbank
info: [install-chaincode.js]: Installed chaincode smallbank successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode drm successfully
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode marbles successfully
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode simple successfully
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode smallbank successfully
info: [instantiate-chaincode.js]: Sleeping 5s...
info: [client.js]: Connecting to ZooKeeper......
error: [client.js]: Could not connect to ZooKeeper
(node:19892) UnhandledPromiseRejectionWarning: Could not connect to ZooKeeper
(node:19892) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
(node:19892) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.",open,False,2019-02-15 04:43:07,2019-03-31 19:59:28
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/303,https://api.github.com/repos/hyperledger/caliper/issues/303,Provie debug info for channel,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

",closed,True,2019-02-14 09:56:09,2019-02-14 15:55:17
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/302,https://api.github.com/repos/hyperledger/caliper/issues/302,"grpc,fabric-client,fabric-ca-client installation failed","## Context
I did the following steps:
1.git clone the caliper source code to my server, then cd caliper folder
2.execute command ""npm install"". It is successful
![10](https://user-images.githubusercontent.com/12689769/52691315-83d93f80-2f9b-11e9-84db-3064d02b6f74.png)
3.execute command ""npm run fabric-v1.1-deps"". It is also successful.
![11](https://user-images.githubusercontent.com/12689769/52691331-8cca1100-2f9b-11e9-9667-9fae41696b50.png)
![12](https://user-images.githubusercontent.com/12689769/52691336-905d9800-2f9b-11e9-9426-23a4e2fb5558.png)
4.use npm list to check the installation of grpc, fabric-client,fabric-ca-client. It seems that they are not successfully installed.
![13](https://user-images.githubusercontent.com/12689769/52691488-df0b3200-2f9b-11e9-9579-d395ddef1ca3.png)

## Expected Behavior
grpc, fabric-client,fabric-ca-client are successfully installed

## Actual Behavior
npm list shows nothing

@houqinghui could you please help with this issue? Thank you!",closed,False,2019-02-13 06:31:11,2019-02-13 12:21:32
caliper,CoreyLin,https://github.com/hyperledger/caliper/issues/301,https://api.github.com/repos/hyperledger/caliper/issues/301,Cannot find module 'moment',"## Context
I installed Caliper from scratch in a server according to official guideline. And the steps are as following:
1.Install dependencies: NodeJS 8.X,node-gyp,docker,docker-compose
2.Gitclone the caliper source code from github to the server
3.Execute command ""npm run fabric-deps"". And error rised, saying that gcc can not be found.
4.Install gcc
5.Execute command ""npm run fabric-deps"", and this time it is successful.
So after finishing the above steps, I think the installation of caliper is successful.

Then I ran a simple test by executing command ""node benchmark/simple/main.js"" to test the basic function. But the following error happened:
Cannot find module 'moment'
![8](https://user-images.githubusercontent.com/12689769/52680583-e9193a80-2f73-11e9-8ed8-8c7d3a180c89.png)

Then I executed ""npm run list"". Another error arised:
![9](https://user-images.githubusercontent.com/12689769/52680614-0cdc8080-2f74-11e9-819b-842bff87e188.png)


## Expected Behavior
simple benchmark ran successfully and the performance report was reported

## Actual Behavior
Error ""Cannot find module 'moment'"" happened

@houqinghui could you please help me? Thank you very much.
",closed,False,2019-02-13 01:45:30,2019-02-13 02:06:14
caliper,jmj119,https://github.com/hyperledger/caliper/issues/300,https://api.github.com/repos/hyperledger/caliper/issues/300,channel.generateSignedTransaction is not a function in e2eUtils.js is not a function?,"Hi all,

I could not pass the below test while having failure report on channel.generateSignedTransaction. Can anyone please share any clue on the root cause?

Thanks,
MJ

mjjeon@swarm06:~/caliper$ sudo node benchmark/simple/main.js -c config-file.yaml
[sudo] password for mjjeon:
info: [bench-flow.js]: ####### Caliper Test #######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/dCreating orderer.example.com ... done
Creating network ""2org1peergoleveldb_default"" with the default driver
Creating peer0.org2.example.com ... done
Creating orderer.example.com ...
Creating ca.org2.example.com ...
Creating peer0.org1.example.com ...
Creating peer0.org2.example.com ...
info: [create-channel.js]: Creating mychannel...
info: [create-channel.js]: Created mychannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining mychannel...
info: [join-channel.js]: Successfully joined peerOrg1's peers to mychannel
info: [join-channel.js]: Successfully joined peerOrg2's peers to mychannel
info: [join-channel.js]: Successfully joined mychannel
info: [install-chaincode.js]: Installing chaincodes...
info: [packager/Node.js]: packaging Node from /home/mjjeon/caliper/src/contract/fabric/marbles-norichquery/node
info: [packager/Node.js]: packaging Node from /home/mjjeon/caliper/src/contract/fabric/marbles-norichquery/node
info: [install-chaincode.js]: Installed chaincode marbles successfully in all peers
info: [packager/Node.js]: packaging Node from /home/mjjeon/caliper/src/contract/fabric/simple/node
info: [packager/Node.js]: packaging Node from /home/mjjeon/caliper/src/contract/fabric/simple/node
info: [install-chaincode.js]: Installed chaincode simple successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode marbles successfully
info: [e2eUtils.js]: The chaincode instantiate transaction was valid.
info: [instantiate-chaincode.js]: Instantiated chaincode simple successfully
info: [instantiate-chaincode.js]: Sleeping 5s...
info: [bench-flow.js]: Started monitor successfully
info: [bench-flow.js]: ####### Testing 'open' #######
info: [bench-flow.js]: ------ Prepare(file-write) waiting ------
error: [e2eUtils.js]: Failed to send transaction error: TypeError: channel.generateSignedTransaction is not a function
error: [e2eUtils.js]: Failed to send transaction error: TypeError: channel.generateSignedTransaction is not a function
error: [e2eUtils.js]: Failed to send transaction error: TypeError: channel.generateSignedTransaction is not a function
error: [e2eUtils.js]: Failed to send transaction error: TypeError: channel.generateSignedTransaction is not a function
error: [e2eUtils.js]: Failed to send transaction error: TypeError: channel.generateSignedTransaction is not a function

",closed,False,2019-02-12 16:00:26,2019-02-15 04:04:46
caliper,shiningfrog,https://github.com/hyperledger/caliper/issues/299,https://api.github.com/repos/hyperledger/caliper/issues/299,How to test TPS in orderer with kafka(the json file?),"hello, how i can test performace of the fabric under kafka mode? how to fill the XX.json file in network/fabric-v1.2 ?",closed,False,2019-02-12 06:30:14,2019-03-04 20:38:54
caliper,amiecorso,https://github.com/hyperledger/caliper/issues/298,https://api.github.com/repos/hyperledger/caliper/issues/298,Stale Block Rate for PoET in Sawtooth,"## Context
""Stale blocks"" refer to blocks that are published and valid, but do not become part of the longest (or heaviest, etc.) chain in a Proof-of-Work style network (probabilistic finality).  A stale (orphan) block occurs when more than one node manages to publish and broadcast a valid block before receiving a previously published block, leading to a temporary fork.  The stale block rate depends on several factors, such as the target length of the block interval, network latency, block size, and information propagation mechanism.  The higher the rate of stale blocks, the higher the overhead involved in processing and validating them, leading to significant disruption of network throughput.  Additionally, the stale block rate is proportional to the ease with which an adversary could potentially generate a long chain with a <50% share of mining power.  Despite the current intention for Sawtooth to be a permissioned network (and thus the relaxed security assumptions) the stale block rate is a crucial metric for assessing performance and evaluating potential improvements to PoET or making network configuration suggestions.
The following paper has a thorough discussion of stale block rate and other PoW-style considerations: https://eprint.iacr.org/2016/555.pdf
This second paper references the above, and deals directly with PoET - proposing changes that may improve throughput at scale: https://arxiv.org/pdf/1804.00399.pdf

## Expected Behavior
It would be great to incorporate stale block rate as an available metric in Caliper for use with Sawtooth and potential future PoW-style blockchain systems.  Stale block rate would be expressed as the number of stale blocks / total blocks. 

## Actual Behavior
This is not currently available in Caliper.

## Possible Fix
I hope to contribute to the implementation of this feature, as I need it to perform performance evaluation and benchmarking work with Sawtooth.  I would appreciate ideas and guidance from those more familiar with the Caliper core and Sawtooth's event subscription system.  I believe that in order to evaluate the stale rate, it would be necessary to record all block events, keep track of block identities, and finally evaluate how many such blocks were ultimately not part of the longest chain.  

I understand that Caliper involves several layers of abstraction that make it possible to interface with different backend systems, not all of which require stale block rate (for example, Fabric and anything that uses deterministic consensus won't generate stale blocks), so it remains to be considered how to incorporate this option from an architectural standpoint.  A config file flag? 

",open,False,2019-02-06 01:05:24,2019-03-04 20:51:53
caliper,aklenik,https://github.com/hyperledger/caliper/pull/297,https://api.github.com/repos/hyperledger/caliper/issues/297,Documentation for the Fabric CCP adapter,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

Documentation for the new Fabric CCP adapter #296 
Preview: https://aklenik.github.io/caliper/docs/Fabric_Ccp_Configuration.html",closed,True,2019-02-04 20:57:18,2019-03-04 09:11:09
caliper,aklenik,https://github.com/hyperledger/caliper/pull/296,https://api.github.com/repos/hyperledger/caliper/issues/296,Add connection profile-based Fabric adapter,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

## Issue/User story
Changes related to the adapter:
* Updated the sample benchmarks to also support the new adapter API
* Added settings for the new adapter in the default Caliper configuration file
* Added sample network configurations for the new adapter (from v1.0 to v1.2, including mutual TLS networks from v1.1). Most of the additions originate from these example configurations, which are easy to check/test
* Added lightweight Caliper-level dependecies (for general use, not Fabric-specific packages), like `tmp` and `version-compare`
* Changed some `require` calls to YAML parsing for reading network configuration files in `bench-flow.js`
* Integrated the new adapter into `blockchain.js`
* Added general utility functions for checking/asserting property and version-related information

## Directly related issues (and many more regarding the other adapter)
#37 #115 #139 #185 #227 #292
## Validation of the fix
For each sample benchmark, pick a configuration file (like the linear rate config), and run it with every network version/topology/`fabric-ccp*` configuration combination.

## What documentation has been provided for this pull request
#297 

@hyperledger/caliper-committers @nklincoln Any help with the review if appreciated!",closed,True,2019-02-04 20:55:41,2019-03-04 11:21:50
caliper,panyu4,https://github.com/hyperledger/caliper/pull/295,https://api.github.com/repos/hyperledger/caliper/issues/295,Fix query chaincode ，create channel and file mode bugs,"Signed-off-by: panyu4 <PY.panyu@huawei.com>

Resolve PR #279  bugs, including querying chaincode bug， creating channel bug and file mode bug.
",closed,True,2019-02-03 09:28:19,2019-02-11 01:10:14
caliper,panyu4,https://github.com/hyperledger/caliper/pull/294,https://api.github.com/repos/hyperledger/caliper/issues/294,Fix page format's mistakes,"Signed-off-by: panyu4 <PY.panyu@huawei.com>

resolve the pr #283 format mistakes",closed,True,2019-02-02 02:55:47,2019-02-11 01:10:31
caliper,panyu4,https://github.com/hyperledger/caliper/pull/293,https://api.github.com/repos/hyperledger/caliper/issues/293,Add remote docker's disk monitor information,"Signed-off-by: panyu4 <PY.panyu@huawei.com>
",closed,True,2019-02-01 08:12:00,2019-02-22 13:33:28
caliper,lenoAlex,https://github.com/hyperledger/caliper/issues/292,https://api.github.com/repos/hyperledger/caliper/issues/292,how to specify the endorser?,"for example, using 2org2peer of network, how to specify one peer in each org to endorse a transaction?
In another word, there are four peers, but only need two peers to process endorsement. Could it be configurable on caliper?",closed,False,2019-02-01 03:28:59,2019-02-20 11:24:15
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/291,https://api.github.com/repos/hyperledger/caliper/issues/291,Add large number tests,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>


",open,True,2019-01-24 08:01:11,2019-02-15 12:54:42
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/290,https://api.github.com/repos/hyperledger/caliper/issues/290,Changes to support the latest fabric 1.4 release,"Signed-off-by: Ramakrishna S 

Changes to support the latest fabric 1.4 release and also has the backward compatibility to <1.2 release as well.

## Checklist
 - [ ]  A link to the issue/user story that the pull request relates to
 - [ ]  How to recreate the problem without the fix
 - [ ]  Design of the fix
 - [ ]  How to prove that the fix works
 - [ ]  Automated tests that prove the fix keeps on working
 - [ ]  Documentation - any JSDoc, website, or Stackoverflow answers?


## Issue/User story
<!--- What issue / user story is this for -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.


## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Design of the fix
<!-- Focus on why you designed this fix this way, and what was discounted. Do not describe just the code - we can read that! -->

## Validation of the fix
<!-- Over and above the tests, what has been done to prove this works? -->

## Automated Tests
<!-- Please describe the automated tests that are put in place to stop this recurring -->

## What documentation has been provided for this pull request
<!-- JSDocs, WebSite and answers to Stack Overflow questions are possible documentation sources -->
",closed,True,2019-01-22 10:51:59,2019-02-20 07:32:57
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/289,https://api.github.com/repos/hyperledger/caliper/issues/289,Fix file mode for Fabric not supporting sendSignedTransaction,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

To implement file mode need Fabric supporting sendSignedTransaction function.
",closed,True,2019-01-21 02:02:53,2019-01-21 02:12:11
caliper,YanLIU0822,https://github.com/hyperledger/caliper/issues/288,https://api.github.com/repos/hyperledger/caliper/issues/288,error: [instantiate-chaincode.js]: Failed to instantiate chaincodes: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.,"node benchmark/smallbank/main.js works in my system.
and the I run my own code to test TPS 
it met errors

##  Failed to instantiate chaincodes
info: [create-channel.js]: Creating supplychainchannel...
info: [create-channel.js]: Created supplychainchannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining supplychainchannel...
info: [join-channel.js]: Successfully joined crop's peers to supplychainchannel
info: [join-channel.js]: Successfully joined supplychainchannel
info: [install-chaincode.js]: Installing chaincodes...
info: [packager/Node.js]: packaging Node from /home/liuyan/supplychain/chaincode/crop/
info: [install-chaincode.js]: Installed chaincode cc_crop successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...
error: [instantiate-chaincode.js]: Failed to instantiate chaincodes: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.
    at Object.instantiateChaincode (/home/liuyan/caliper/src/adapters/fabric/e2eUtils.js:353:19)
    at <anonymous>
error: [fabric.js]: Fabric chaincode install failed: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.
    at Object.instantiateChaincode (/home/liuyan/caliper/src/adapters/fabric/e2eUtils.js:353:19)
    at <anonymous>
error: [bench-flow.js]: Error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.
    at Object.instantiateChaincode (/home/liuyan/caliper/src/adapters/fabric/e2eUtils.js:353:19)
    at <anonymous>
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0

## Environment
* liuyan@liuyan-hp:~/caliper$ npm ls grpc
caliper@0.1.0 /home/liuyan/caliper
├─┬ fabric-client@1.1.0
│ └── grpc@1.10.1 deduped
└── grpc@1.10.1

* liuyan@liuyan-hp:~/caliper$ npm ls fabric-client
caliper@0.1.0 /home/liuyan/caliper
└── fabric-client@1.1.0

* liuyan@liuyan-hp:~/caliper$ npm ls fabric-ca-client
caliper@0.1.0 /home/liuyan/caliper
└── fabric-ca-client@1.1.0

* liuyan@liuyan-hp:/caliper$ node -v
v8.15.0
* liuyan@liuyan-hp:/caliper$ npm -v
6.5.0
* liuyan@liuyan-hp:~/caliper$ node-gyp -v
v3.8.0

I also run npm install

ubuntu 16
",open,False,2019-01-19 13:49:29,2019-03-04 20:52:55
caliper,gregdhill,https://github.com/hyperledger/caliper/pull/287,https://api.github.com/repos/hyperledger/caliper/issues/287,extract separate benchmark starters into common test.js script,"Signed-off-by: greg <greg.hill@monax.io>

This PR de-duplicates each `main.js` within the benchmark directories by loading the relevant configs through `./scripts/test.js`. The config & network arguments are now required to ensure DLT neutrality and the `npm test` script can now directly take these arguments (appended after `--`). The next step will be to revise some of the documentation.",closed,True,2019-01-19 10:37:36,2019-03-06 12:21:01
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/286,https://api.github.com/repos/hyperledger/caliper/issues/286,Add a transactions' file generation mode,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

   Add a transactions' file generation mode, The `file` generation mode, which means the transactions generated by the clients will be buffered, and saved into files before they are sent to the backend systems. PR #283 has the detailed documentation. This PR has done part of the work. This mode is added for supporting large scale transactions' tests. And now it only support for fabric.

## Issue/User story
- [ #281] [GitHub Issues](https://github.com/hyperledger/caliper/issues)

",closed,True,2019-01-18 06:34:16,2019-01-19 02:00:17
caliper,sidraamalik,https://github.com/hyperledger/caliper/issues/285,https://api.github.com/repos/hyperledger/caliper/issues/285,[monitor.js]: Failed to read monitoring data ,"
## Context
while running caliper tests, everything else seems fine but then there is an error which states 

Failed to read monitoring data
error: [bench-flow.js]: ------ Failed 'test-network' testing with the following error ------
Error: Failed to find monitor in config file

## Expected Behavior
no error with full report generated

## Actual Behavior
the html report is generated but resource consumption results are missing.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
   https://github.com/hyperledger/caliper/issues/4

",closed,False,2019-01-17 18:09:01,2019-03-04 22:40:21
caliper,YanLIU0822,https://github.com/hyperledger/caliper/issues/284,https://api.github.com/repos/hyperledger/caliper/issues/284,error: [Peer.js]: sendProposal - timed out after:240000,"**liuyan@liuyan-hp:~/caliper$ node benchmark/smallbank/main.js** 
info: [bench-flow.js]: ####### Caliper Test ######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml up -d;sleep 3s
Creating network ""2org1peergoleveldb_default"" with the default driver
Creating orderer.example.com ... done
Creating ca.org2.example.com    ... done
Creating ca.org1.example.com    ... done
Creating peer0.org1.example.com ... done
Creating peer0.org2.example.com ... done
info: [create-channel.js]: Creating mychannel...
info: [create-channel.js]: Created mychannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining mychannel...
info: [join-channel.js]: Successfully joined peerOrg1's peers to mychannel
info: [join-channel.js]: Successfully joined peerOrg2's peers to mychannel
info: [join-channel.js]: Successfully joined mychannel
info: [install-chaincode.js]: Installing chaincodes...
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/drm
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/drm
info: [install-chaincode.js]: Installed chaincode drm successfully in all peers
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/marbles-norichquery/go
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/marbles-norichquery/go
info: [install-chaincode.js]: Installed chaincode marbles successfully in all peers
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [install-chaincode.js]: Installed chaincode simple successfully in all peers
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/smallbank
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/smallbank
info: [install-chaincode.js]: Installed chaincode smallbank successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...
error: [Peer.js]: sendProposal - timed out after:240000
error: [Peer.js]: sendProposal - timed out after:240000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/liuyan/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/liuyan/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [instantiate-chaincode.js]: Failed to instantiate chaincodes: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.
    at Object.instantiateChaincode (/home/liuyan/caliper/src/adapters/fabric/e2eUtils.js:353:19)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
error: [fabric.js]: Fabric chaincode install failed: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.
    at Object.instantiateChaincode (/home/liuyan/caliper/src/adapters/fabric/e2eUtils.js:353:19)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
error: [bench-flow.js]: Error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.
    at Object.instantiateChaincode (/home/liuyan/caliper/src/adapters/fabric/e2eUtils.js:353:19)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org2.example.com ... done
Stopping peer0.org1.example.com ... done
Stopping ca.org2.example.com    ... done
Stopping orderer.example.com    ... done
Stopping ca.org1.example.com    ... done
Removing peer0.org2.example.com ... done
Removing peer0.org1.example.com ... done
Removing ca.org2.example.com    ... done
Removing orderer.example.com    ... done
Removing ca.org1.example.com    ... done
Removing network 2org1peergoleveldb_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images
error: [bench-flow.js]: Unsuccessful command execution. Error code: 1. Terminating signal: null
error: [benchamark/smallbank/main.js]: Error while executing the benchmark: Error: Command failed: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org2.example.com ... done
Stopping peer0.org1.example.com ... done
Stopping ca.org2.example.com    ... done
Stopping orderer.example.com    ... done
Stopping ca.org1.example.com    ... done
Removing peer0.org2.example.com ... done
Removing peer0.org1.example.com ... done
Removing ca.org2.example.com    ... done
Removing orderer.example.com    ... done
Removing ca.org1.example.com    ... done
Removing network 2org1peergoleveldb_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images

    at ChildProcess.exithandler (child_process.js:281:12)
    at emitTwo (events.js:126:13)
    at ChildProcess.emit (events.js:214:7)
    at maybeClose (internal/child_process.js:915:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)

## TIMEOUT
**I modify the file caliper/src/fabric/e2eUtils.js request_time
and the file caliper/node_modules/fabric-client/config/default.json**
240000
I tried 720000
So i guess it is not from the request_time

I check the docker logs 

**only peer0.org1.example.com shows a error** the others work well

**liuyan@liuyan-hp:~/caliper$ docker logs peer0.org1.example.com** 
2019-01-17 09:08:44.896 UTC [nodeCmd] serve -> INFO 001 Starting peer:
 Version: 1.1.0
 Go version: go1.9.2
 OS/Arch: linux/amd64
 Experimental features: false
 Chaincode:
  Base Image Version: 0.4.6
  Base Docker Namespace: hyperledger
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger

2019-01-17 09:08:44.896 UTC [ledgermgmt] initialize -> INFO 002 Initializing ledger mgmt
2019-01-17 09:08:44.896 UTC [kvledger] NewProvider -> INFO 003 Initializing ledger provider
2019-01-17 09:08:45.826 UTC [kvledger] NewProvider -> INFO 004 ledger provider Initialized
2019-01-17 09:08:45.826 UTC [ledgermgmt] initialize -> INFO 005 ledger mgmt initialized
2019-01-17 09:08:45.826 UTC [peer] func1 -> INFO 006 Auto-detected peer address: 172.30.0.5:7051
2019-01-17 09:08:45.827 UTC [peer] func1 -> INFO 007 Returning peer0.org1.example.com:7051
2019-01-17 09:08:45.827 UTC [peer] func1 -> INFO 008 Auto-detected peer address: 172.30.0.5:7051
2019-01-17 09:08:45.827 UTC [peer] func1 -> INFO 009 Returning peer0.org1.example.com:7051
2019-01-17 09:08:45.830 UTC [nodeCmd] serve -> INFO 00a Starting peer with TLS enabled
2019-01-17 09:08:45.831 UTC [eventhub_producer] start -> INFO 00b Event processor started
2019-01-17 09:08:45.832 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 00c Entering computeChaincodeEndpoint with peerHostname: peer0.org1.example.com
2019-01-17 09:08:45.832 UTC [nodeCmd] computeChaincodeEndpoint -> INFO 00d Exit with ccEndpoint: peer0.org1.example.com:7052
2019-01-17 09:08:45.832 UTC [nodeCmd] createChaincodeServer -> WARN 00e peer.chaincodeListenAddress is not set, using peer0.org1.example.com:7052
2019-01-17 09:08:45.833 UTC [chaincode] NewChaincodeSupport -> INFO 00f Chaincode support using peerAddress: peer0.org1.example.com:7052
2019-01-17 09:08:45.834 UTC [sccapi] registerSysCC -> INFO 010 system chaincode cscc(github.com/hyperledger/fabric/core/scc/cscc) registered
2019-01-17 09:08:45.834 UTC [sccapi] registerSysCC -> INFO 011 system chaincode lscc(github.com/hyperledger/fabric/core/scc/lscc) registered
2019-01-17 09:08:45.834 UTC [sccapi] registerSysCC -> INFO 012 system chaincode escc(github.com/hyperledger/fabric/core/scc/escc) registered
2019-01-17 09:08:45.834 UTC [sccapi] registerSysCC -> INFO 013 system chaincode vscc(github.com/hyperledger/fabric/core/scc/vscc) registered
2019-01-17 09:08:45.834 UTC [sccapi] registerSysCC -> INFO 014 system chaincode qscc(github.com/hyperledger/fabric/core/chaincode/qscc) registered
2019-01-17 09:08:45.835 UTC [gossip/service] func1 -> INFO 015 Initialize gossip with endpoint peer0.org1.example.com:7051 and bootstrap set [127.0.0.1:7051]
2019-01-17 09:08:45.837 UTC [msp] DeserializeIdentity -> INFO 016 Obtaining identity
2019-01-17 09:08:45.838 UTC [gossip/discovery] NewDiscoveryService -> INFO 017 Started {peer0.org1.example.com:7051 [] [19 86 204 101 33 30 204 125 116 22 3 116 219 124 113 177 125 88 18 145 9 22 27 116 36 193 232 145 140 239 19 208] peer0.org1.example.com:7051 <nil>} incTime is 1547716125838537785
2019-01-17 09:08:45.838 UTC [gossip/gossip] NewGossipService -> INFO 018 Creating gossip service with self membership of {peer0.org1.example.com:7051 [] [19 86 204 101 33 30 204 125 116 22 3 116 219 124 113 177 125 88 18 145 9 22 27 116 36 193 232 145 140 239 19 208] peer0.org1.example.com:7051 <nil>}
2019-01-17 09:08:45.840 UTC [gossip/gossip] start -> INFO 019 Gossip instance peer0.org1.example.com:7051 started
2019-01-17 09:08:45.840 UTC [cscc] Init -> INFO 01a Init CSCC
2019-01-17 09:08:45.840 UTC [sccapi] deploySysCC -> INFO 01b system chaincode cscc/(github.com/hyperledger/fabric/core/scc/cscc) deployed
2019-01-17 09:08:45.841 UTC [sccapi] deploySysCC -> INFO 01c system chaincode lscc/(github.com/hyperledger/fabric/core/scc/lscc) deployed
2019-01-17 09:08:45.842 UTC [escc] Init -> INFO 01d Successfully initialized ESCC
2019-01-17 09:08:45.842 UTC [sccapi] deploySysCC -> INFO 01e system chaincode escc/(github.com/hyperledger/fabric/core/scc/escc) deployed
2019-01-17 09:08:45.843 UTC [sccapi] deploySysCC -> INFO 01f system chaincode vscc/(github.com/hyperledger/fabric/core/scc/vscc) deployed
2019-01-17 09:08:45.843 UTC [qscc] Init -> INFO 020 Init QSCC
2019-01-17 09:08:45.843 UTC [sccapi] deploySysCC -> INFO 021 system chaincode qscc/(github.com/hyperledger/fabric/core/chaincode/qscc) deployed
2019-01-17 09:08:45.843 UTC [nodeCmd] initSysCCs -> INFO 022 Deployed system chaincodes
2019-01-17 09:08:45.844 UTC [nodeCmd] serve -> INFO 023 Starting peer with ID=[name:""peer0.org1.example.com"" ], network ID=[dev], address=[peer0.org1.example.com:7051]
2019-01-17 09:08:45.844 UTC [nodeCmd] serve -> INFO 024 Started peer with ID=[name:""peer0.org1.example.com"" ], network ID=[dev], address=[peer0.org1.example.com:7051]
2019-01-17 09:08:53.996 UTC [ledgermgmt] CreateLedger -> INFO 025 Creating ledger [mychannel] with genesis block
2019-01-17 09:08:54.042 UTC [fsblkstorage] newBlockfileMgr -> INFO 026 Getting block information from block storage
2019-01-17 09:08:54.300 UTC [kvledger] CommitWithPvtData -> INFO 027 Channel [mychannel]: Committed block [0] with 1 transaction(s)
2019-01-17 09:08:54.451 UTC [ledgermgmt] CreateLedger -> INFO 028 Created ledger [mychannel] with genesis block
2019-01-17 09:08:54.512 UTC [cscc] Init -> INFO 029 Init CSCC
2019-01-17 09:08:54.513 UTC [sccapi] deploySysCC -> INFO 02a system chaincode cscc/mychannel(github.com/hyperledger/fabric/core/scc/cscc) deployed
2019-01-17 09:08:54.514 UTC [sccapi] deploySysCC -> INFO 02b system chaincode lscc/mychannel(github.com/hyperledger/fabric/core/scc/lscc) deployed
2019-01-17 09:08:54.514 UTC [escc] Init -> INFO 02c Successfully initialized ESCC
2019-01-17 09:08:54.514 UTC [sccapi] deploySysCC -> INFO 02d system chaincode escc/mychannel(github.com/hyperledger/fabric/core/scc/escc) deployed
2019-01-17 09:08:54.515 UTC [sccapi] deploySysCC -> INFO 02e system chaincode vscc/mychannel(github.com/hyperledger/fabric/core/scc/vscc) deployed
2019-01-17 09:08:54.515 UTC [qscc] Init -> INFO 02f Init QSCC
2019-01-17 09:08:54.515 UTC [sccapi] deploySysCC -> INFO 030 system chaincode qscc/mychannel(github.com/hyperledger/fabric/core/chaincode/qscc) deployed
2019-01-17 09:08:55.142 UTC [lscc] executeInstall -> INFO 031 Installed Chaincode [drm] Version [v0] to peer
2019-01-17 09:08:55.176 UTC [lscc] executeInstall -> INFO 032 Installed Chaincode [marbles] Version [v1] to peer
2019-01-17 09:08:55.207 UTC [lscc] executeInstall -> INFO 033 Installed Chaincode [simple] Version [v0] to peer
2019-01-17 09:08:55.239 UTC [lscc] executeInstall -> INFO 034 Installed Chaincode [smallbank] Version [v0] to peer
2019-01-17 09:08:55.294 UTC [golang-platform] GenerateDockerBuild -> INFO 035 building chaincode with ldflagsOpt: '-ldflags ""-linkmode external -extldflags '-static'""'
2019-01-17 09:08:55.294 UTC [golang-platform] GenerateDockerBuild -> INFO 036 building chaincode with tags: 
**2019-01-17 09:10:17.483 UTC [eventhub_producer] Chat -> ERRO 037 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled**


 
## Environment
liuyan@liuyan-hp:~/caliper$ npm ls grpc
caliper@0.1.0 /home/liuyan/caliper
├─┬ fabric-client@1.1.0
│ └── grpc@1.10.1  deduped
└── grpc@1.10.1 

liuyan@liuyan-hp:~/caliper$ npm ls fabric-client
caliper@0.1.0 /home/liuyan/caliper
└── fabric-client@1.1.0 

liuyan@liuyan-hp:~/caliper$ npm ls fabric-ca-client
caliper@0.1.0 /home/liuyan/caliper
└── fabric-ca-client@1.1.0 

liuyan@liuyan-hp:~/caliper$ node -v
v8.15.0
liuyan@liuyan-hp:~/caliper$ npm -v
6.5.0
liuyan@liuyan-hp:~/caliper$ node-gyp -v
v3.8.0

I also run npm install

ubuntu 16


",closed,False,2019-01-17 09:30:29,2019-01-17 11:52:03
caliper,panyu4,https://github.com/hyperledger/caliper/pull/283,https://api.github.com/repos/hyperledger/caliper/issues/283,Add documentation about adapters and test mode,"
Signed-off-by: panyu4 <PY.panyu@huawei.com>

## Issue/User story
Add a documentation about how to write your own adapter 
Add some specifications about testing with different txMode. The txMode is added for supporting the long time or large scale transactions' tests. 

## Existing issues
- [ #281 #270 ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
",closed,True,2019-01-16 07:49:22,2019-02-11 01:11:51
caliper,gregdhill,https://github.com/hyperledger/caliper/pull/282,https://api.github.com/repos/hyperledger/caliper/issues/282,burrow query,"Signed-off-by: greg <greg.hill@monax.io>

Provides the ability for the Burrow adaptor to query the installed contract.",closed,True,2019-01-15 20:52:28,2019-01-31 12:30:54
caliper,panyu4,https://github.com/hyperledger/caliper/issues/281,https://api.github.com/repos/hyperledger/caliper/issues/281, Time-out errors appear and the transactions‘ processing is delayed when testing with large scale transactions  ,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
When supporting the long time testing or running with a large scale txNumber,  Caliper appears the below two phenomena：
1. The transactions sent by the clients are unable to be handled immediately by the back-end systems. Caliper will  return the transactions' status success or fail until all of the transactions are generated and submitted to the corresponding back-end's system.
2. Since so many transactions are not handled immediately, the time-out errors appear frequently.

These phenomena might be caused by the clients' performance. Because when we test with the high performance CPU, they will disappear.  
 
## Expected Behavior
<!--- Tell us what should happen -->
1. After sending the few transactions, the clients should handle the transactions and generate the new workloads simultaneously ;
2. Time-out errors should not appear in the long time test or large scale transactions' test.


## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
1. Try to let the client stop sending the transactions and make the cpu be able to interact with the back-end system;
2. add a new mode (eg. submitting the transactions' file to the back-end system ) to support the long time test or large scale transactions' test.  

## Exist Issues
#110 ",open,False,2019-01-07 13:35:56,2019-02-11 09:22:16
caliper,zsh122958,https://github.com/hyperledger/caliper/issues/280,https://api.github.com/repos/hyperledger/caliper/issues/280,Benchmark return code:  null，后台local-client 一直运行。,"Benchmark return code:  null
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! caliper@0.1.0 e2e: `node ./scripts/test.js ""uchains_simple"" ""./benchmark/uchains_simple/config.json"" ""./benchmark/uchains_simple/uchains
.json""`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the caliper@0.1.0 e2e script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2019-01-04T01_24_06_679Z-debug.log
npm ERR! Test failed.  See above for more details.
",closed,False,2019-01-04 01:33:43,2019-02-12 01:16:09
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/279,https://api.github.com/repos/hyperledger/caliper/issues/279,Enable use of 1.3+ client and retain legacy code for fabric 1.0 and 1.1 benchmarks,"Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>

Resolves #277 

Changes:
- Move to use of channel events, since the event hub has been removed
- Retained ability to benchmark older fabric versions (v1.0 and v1.1) by inspecting the config.info.Version information and introduction of a `isLegacy` flag in the e2e utils
- Code introduced to enable a non-default use of fabric-network testing via contract APIs
- Update required in the fabric networks to ensure naming consistency for the ca names, with a change from ca-orgX to the fully qualified name
- Updated the package for `fabric-deps`

Tests:
- Local tests for v1.0, 1.1, 1.2 and 1.3 networks simple benchmark (2peer, 1 org)
- Passes the Travis build",closed,True,2019-01-03 14:41:31,2019-03-14 16:56:35
caliper,GingerMoon,https://github.com/hyperledger/caliper/issues/278,https://api.github.com/repos/hyperledger/caliper/issues/278,Execution error: No such command: down;docker,"Hi, 
When I execute the following command:
 MINGW64 /c/jsworkspace/caliper/benchmark/simple (master)
$ node main.js

I got the following error:
error: [bench-flow.js]: Unsuccessful command execution. Error code: 1. Terminating signal: null
error: [benchmark/simple/main.js]: Error while executing the benchmark: Error: Command failed: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
No such command: down;docker",closed,False,2019-01-02 01:06:09,2019-02-14 07:49:03
caliper,houqinghui,https://github.com/hyperledger/caliper/pull/277,https://api.github.com/repos/hyperledger/caliper/issues/277,add fabric v1.3 network,add the fabric v1.3 network.,closed,True,2019-01-01 11:11:07,2019-02-03 07:37:36
caliper,houqinghui,https://github.com/hyperledger/caliper/pull/276,https://api.github.com/repos/hyperledger/caliper/issues/276,fix the tps calculation,fix the tps calculation,closed,True,2019-01-01 09:16:57,2019-02-15 03:03:09
caliper,vamdivd,https://github.com/hyperledger/caliper/issues/275,https://api.github.com/repos/hyperledger/caliper/issues/275,Run Benchmark with Distributed Clients,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
I followed the Distributed Clients steps : node ./src/comm/client/zoo-client.js zookeeper-server
but can not continue to step 4, just stay in the following state.
what should I do next or what else do I need to configure?
## Expected Behavior
<!--- Tell us what should happen -->
Connected to ZooKeeper
 Created client node:/caliper/clients/client_1514532063571_0000000006
 Created receiving queue at:/caliper/client_1514532063571_0000000006_in
 Created sending queue at:/caliper/client_1514532063571_0000000006_out
 Waiting for messages at:/caliper/client_1514532063571_0000000006_in......
## Actual Behavior
<!--- Tell us what happens instead -->
Connected to ZooKeeper
 Created client node:/caliper/clients/client_1514532063571_0000000006
 Created receiving queue at:/caliper/client_1514532063571_0000000006_in
 Created sending queue at:/caliper/client_1514532063571_0000000006_out
 Waiting for messages at:/caliper/client_1514532063571_0000000006_in......
## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):zookeeper3.4.5
* Operating System and version (desktop or mobile):ubuntu 16.04
* Link to your project:
",closed,False,2018-12-29 08:02:32,2019-02-11 09:30:52
caliper,panyu4,https://github.com/hyperledger/caliper/pull/274,https://api.github.com/repos/hyperledger/caliper/issues/274,fix the tps's bug,"Signed-off-by: panyu4 <PY.panyu@huawei.com>

<!--- Provide a general summary of the pull request in the Title above -->
This pr is trying to fix the the issue #273 , which appears the tps is much larger than the sending rate and equals to the success number.

",closed,True,2018-12-26 07:49:22,2018-12-26 09:19:47
caliper,panyu4,https://github.com/hyperledger/caliper/issues/273,https://api.github.com/repos/hyperledger/caliper/issues/273,Throughout calculation bug,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
There is a bug in the throughout calculation, which should judge whether the largest finish time of the transactions  equals to the minimum create time.

## Expected Behavior
<!--- Tell us what should happen -->
The sending rate is larger than throughout of backend system. 
## Actual Behavior
<!--- Tell us what happens instead -->
Sometimes, the result shows the blockchain system's throughout is much larger than sending rate and the number of the throughout equals to the number of the success transactions

",closed,False,2018-12-26 07:12:22,2018-12-27 02:08:25
caliper,rupc,https://github.com/hyperledger/caliper/issues/272,https://api.github.com/repos/hyperledger/caliper/issues/272,Supporting caliper clients in container for swarm network?,"<!--- Provide a general summary of the issue in the Title above -->
Suggestions for deployment configuration of caliper clients in docker container.

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
Caliper needs to specify each address of peers, orderers, and CAs to communicate in network configuration file. 
When running networks in docker swarm, containers including peers, orderers and CAs can find each other through its container names due to a DNS support from swarm. In contrast, caliper clients should know its IP address to communicate with them.

If caliper clients can also run inside container, the clients can contact other containers by its name, not by its IP address.

This feature is especially important when running large-scale distributed networks with caliper because caliper clients should know a mapping between containers and physical machine that the container runs on. But, creating service in swarm network basically doesn't fix the mapping relationship unless using constraint option.

## Expected Behavior
<!--- Tell us what should happen -->
Running caliper client inside docker container

## Actual Behavior
<!--- Tell us what happens instead -->


## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
Provide option for running caliper client inside docker container
",open,False,2018-12-25 14:36:49,2019-03-04 20:56:01
caliper,zsh122958,https://github.com/hyperledger/caliper/issues/271,https://api.github.com/repos/hyperledger/caliper/issues/271,config.json  Configuring Txnumber and TPS does not take effect！！！ tx  Background transactions are being executed all the time,"""test"": {
    ""name"": ""zsh"",
    ""description"" : ""This is zshbenchmark for caliper"",
    ""clients"": {
      ""type"": ""local"",
      ""number"": 1
    },
    ""rounds"": [
      {
        ""label"" : ""SendTransaction"",
        ""txNumber"" : [100],
        ""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 10}}],
        ""arguments"": { ""money"": 100 },
        ""callback"" : ""benchmark/zsh_simple/SendTransaction.js""
      },
      {
        ""label"" : ""query"",
        ""txNumber"" : [100],
        ""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 10}}],
        ""callback"" : ""benchmark/zsh_simple/query.js""
      }]
  },",closed,False,2018-12-25 09:59:04,2019-02-12 01:09:53
caliper,panyu4,https://github.com/hyperledger/caliper/pull/270,https://api.github.com/repos/hyperledger/caliper/issues/270,Add adapters' documentation and change the adapters' file structures,"Signed-off-by: panyu4 <PY.panyu@huawei.com>

<!--- Provide a general summary of the pull request in the Title above -->

## Issue/User story
Now Caliper is lack of adapters' documentation and the file structure is not clear enough for user that make user is unable to know where are the adapters. 

## Design of the fix
<!-- Focus on why you designed this fix this way, and what was discounted. Do not describe just the code - we can read that! -->

- Movethe folders corresponding to the 5 blockchain (fabric, composer, iroha, sawtooth, burrow) adapters into the dir `src/adapters/`.
- Add a file `README.md`.
",closed,True,2018-12-24 08:54:24,2019-01-15 10:20:43
caliper,houqinghui,https://github.com/hyperledger/caliper/pull/269,https://api.github.com/repos/hyperledger/caliper/issues/269,add caliper FAQ,add caliper FAQ.,closed,True,2018-12-24 06:18:52,2019-02-19 06:15:08
caliper,zsh122958,https://github.com/hyperledger/caliper/issues/268,https://api.github.com/repos/hyperledger/caliper/issues/268,SyntaxError: Unexpected token function,"/home/mpsp/TrustedBench/src/comm/client/local-client.js:129
async function runFixedNumber(msg, cb, context) {
      ^^^^^^^^

SyntaxError: Unexpected token function
    at createScript (vm.js:56:10)
    at Object.runInThisContext (vm.js:97:10)
    at Module._compile (module.js:549:28)
    at Object.Module._extensions..js (module.js:586:10)
    at Module.load (module.js:494:32)
    at tryModuleLoad (module.js:453:12)
    at Function.Module._load (module.js:445:3)
    at Module.runMain (module.js:611:10)
    at run (bootstrap_node.js:394:7)
    at startup (bootstrap_node.js:160:9)
Client exited
",closed,False,2018-12-21 02:34:15,2019-02-12 01:11:12
caliper,lybyyy,https://github.com/hyperledger/caliper/issues/267,https://api.github.com/repos/hyperledger/caliper/issues/267,test more client with caliper？,"The simple only run 4 clients benchmark(i see client number 5 is defined in the file ./benchmark/simple/config.yaml, the document mentioned 1 is for sorting, and 4 is peer client, I modify the 5 to 9 to test 8 clients but it doesn't work...)
If I want to test 8 or even 32 clients, what should I do?",closed,False,2018-12-19 11:57:29,2019-02-11 09:33:57
caliper,zsh122958,https://github.com/hyperledger/caliper/issues/266,https://api.github.com/repos/hyperledger/caliper/issues/266,Hyperledger caliper TrustedBench  提交invokeSmartContract（）时，发送http.request请求   没有响应 到达一定时间 程序停止," /**
     * Invoke the given chaincode according to the specified options. Multiple transactions will be generated according to the length of args.
     * @param {object} context The Fabric context returned by {getContext}.
     * @param {string} contractID The name of the chaincode.
     * @param {string} contractVer The version of the chaincode.
     * @param {Array} args Array of JSON formatted arguments for transaction(s). Each element containts arguments (including the function name) passing to the chaincode. JSON attribute named transaction_type is used by default to specify the function name. If the attribute does not exist, the first attribute will be used as the function name.
     * @param {number} timeout The timeout to set for the execution in seconds.
     * @return {Promise<object>} The promise for the result of the execution.
     */
    invokeSmartContract(context, contractID, contractVer, args, timeout) {
        commUtils.log('  >>> Into invokeSmartContract >>>>');
        args.forEach(function(item,index) {
            let con = require('../../benchmark/uchains_simple/uchains.json');
            let restApiUrl = con.uchains.network.restapi.url;
            let configPort = con.uchains.network.restapi.port;
            const http = require('http');
            let options = {
                hostname:restApiUrl,     //此处不能写协议，如 ： http://,https://  否则会报错
                port:configPort,
                path:'/UChains/poe/poe/transaction',
                method:'POST',
                headers: {
                    'Content-Type':'application/x-www-form-urlencoded',
                    'Content-Length':Buffer.byteLength(item.acount)
                }
            };
            commUtils.log('________Send__________',restApiUrl,configPort);
            let req ;
            try{
                req = http.request(options,function(res){
                    commUtils.log('________success_________');
                    commUtils.log('STATUS:'+res.statusCode);
                    commUtils.log('HEADERS:'+JSON.stringify(res.headers));
                    res.on('data',function(chunk){
                        commUtils.log('BODY:'+chunk);
                    });
                });
            }
            catch(err) {
                commUtils.log(err);
            }
            req.write(item.acount);
            req.end();
            commUtils.log('  >>>index>>>>');
        });
        return Promise.resolve();
    }",closed,False,2018-12-19 11:48:20,2019-02-12 01:04:41
caliper,panyu4,https://github.com/hyperledger/caliper/pull/265,https://api.github.com/repos/hyperledger/caliper/issues/265,fix the total send transactions according to configuration file,"Signed-off-by: panyu4 <PY.panyu@huawei.com>

<!--- Provide a general summary of the pull request in the Title above -->


## Issue/User story
<!--- What issue / user story is this for -->
When txNumber set in the configuration file can't be divisible by clients' number, the total transactions' quantity is less than txNumber which the user expected. 

## Design of the fix
<!-- Focus on why you designed this fix this way, and what was discounted. Do not describe just the code - we can read that! -->
Add the remainder transactions to one client.
",closed,True,2018-12-19 03:19:35,2018-12-20 10:30:51
caliper,RobertDiebels,https://github.com/hyperledger/caliper/issues/264,https://api.github.com/repos/hyperledger/caliper/issues/264,Maximum transaction time-out for Hyperledger Fabric exceeds provided time-out,"<!--- Provide a general summary of the issue in the Title above -->
For each callback there is the possiblity to provide a time-out value to `invokeSmartContract()`. For Hyperledger Fabric that time-out value is exceeded by a maximum of 55 seconds.

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
For Hyperledger Fabcir `invokeSmartContract()` calls `e2eutils.invokebycontext()`. This function then calls several functions to which a time-out value can be provided.
These are: `channel.sendTransactionProposal(proposalRequest, timeout * 1000)` [ link ](https://github.com/hyperledger/caliper/blob/0f8795a89be0ceef7e98238c513b344dd63ca9ea/src/fabric/e2eUtils.js#L591) ,`setTimeout(() => reject(new Error('Timeout')), newTimeout);`[ link ](https://github.com/hyperledger/caliper/blob/0f8795a89be0ceef7e98238c513b344dd63ca9ea/src/fabric/e2eUtils.js#L660) and `await channel.sendTransaction(transactionRequest)` [ link ](https://github.com/hyperledger/caliper/blob/0f8795a89be0ceef7e98238c513b344dd63ca9ea/src/fabric/e2eUtils.js#L694).

The first time-out receives the time-out provided by the user. The second and third ones receive a maximum of 10 seconds and 45 seconds respectively. For the third time-out `channel.sendTransaction(transactionRequest)` no time-out is provided so the default request-timeout is supplied by the Fabric node-sdk which is 45 seconds.

For a user supplied timeout of 30 seconds this means that the maximum duration of a Fabric transaction is almost three times higher than expected.

## Expected Behavior
<!--- Tell us what should happen -->
I expect Caliper to honor the user-provided time-out for the entire duration of a transaction. Not just the gathering of transactionProposal responses.
## Actual Behavior
<!--- Tell us what happens instead -->
Caliper applies the time-out provided by the user to the gathering of transactionPorposal responses only.
## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
I would suggest that invokebycontext returns a promise and that a time-out is triggered according to the user-provided time-out which rejects the aforementioned promise.
## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->
Trying out caliper with high input-rates.
## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used: N/A
* Environment name and version (e.g. Chrome 39, node.js 5.4): Node 8+
* Operating System and version (desktop or mobile): Linux
* Link to your project:
",closed,False,2018-12-17 15:56:51,2019-03-09 11:30:00
caliper,RobertDiebels,https://github.com/hyperledger/caliper/issues/263,https://api.github.com/repos/hyperledger/caliper/issues/263,Event-loop gets blocked with high input-rate,"<!--- Provide a general summary of the issue in the Title above -->
As a follow-up to another issue I've been looking at how caliper handles the event-loop.
What I found was that the `updateInterval` in `local-client.js` ceases to be called for high input-rates.
## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
In `local-client.js` each transaction is started by a call to a rounds' `callback.run()` this in turn calls a blockchains' `invokeSmartContract()` method. For Fabric that results in a `e2eutils.invokebycontext()` call.

This function adds a minimum of 2 + N promises to the micro-tasks queue of the event-loop. Where N is the size of the network/channel. Furthermore it adds a promise for each transaction generated. So when generating 256 Tx/s it adds 256 promises to the micro-tasks queue each second.

Looking at `e2eutils.invokebycontext` we see the following being added to the respective event-queues:
```
channel.sendTransactionProposal -> micro-tasks
eventHubs.forEach() -> 1 promise per eventHub -> micro-tasks
eventHubs.forEach() -> 1 setTimeout per eventHub -> timers queue
eventHubs.forEach() -> 1 IO-callback -> IO events-queue
channel.sendTransaction() -> micro-tasks
await Promise.all(eventPromises) -> micro-tasks
```
The micro-tasks queue is read and only after it is emptied are any timers run. This means that it is possible that the setTimeout per eventHub timer is not processed in a timely manner. Possibly causing a block of in queues further down the line.

## Expected Behavior
<!--- Tell us what should happen -->
I expect caliper not to block the event-loop such that timers are no longer executed.
## Actual Behavior
<!--- Tell us what happens instead -->
Caliper blocks the event-loop for high input-rates.
## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
A possible fix would be to increase nodes'`UV_THREADPOOL_SIZE` so that file I/O, crypto or other threadpool-dependent tasks are spread across the systems cores. By default nodes' threadpool-size is set to 4.
## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1. Create a series of rounds with high input-rates. (over 140 Tx/s)
2. Run each round for at least 3 minutes.
3. The updatesInterval will no longer be displayed in the console because the event-loop is getting flooded with promises.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->
I was attempting high throughput tests.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used: N/A
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile): Linux
* Link to your project:
",closed,False,2018-12-17 15:39:07,2018-12-20 10:57:17
caliper,lenoAlex,https://github.com/hyperledger/caliper/issues/262,https://api.github.com/repos/hyperledger/caliper/issues/262,error: [Peer.js]: sendProposal - timed out after:480000,"I just run the latest version of caliper using **goleveldb**, but it doesn't work.  The command that I used is: npm test -- simple -c benchmark/simple/config.yaml -n network/fabric-v1.1/**2org2peergoleveldb**/fabric-go.json. Does it used wrong way?

The log as follows:
root@host3:~/gopath/src/github.com/hyperledger/caliper# npm test -- simple -c benchmark/simple/config.yaml -n network/fabric
-v1.1/2org2peergoleveldb/fabric-go.json

> caliper@0.1.0 test /root/gopath/src/github.com/hyperledger/caliper
> npm run lint && npm run nyc && npm run e2e ""simple"" ""-c"" ""benchmark/simple/config.yaml"" ""-n"" ""network/fabric-v1.1/2org2peergoleveldb/fabric-go.json""


> caliper@0.1.0 lint /root/gopath/src/github.com/hyperledger/caliper
> npx eslint .


> caliper@0.1.0 nyc /root/gopath/src/github.com/hyperledger/caliper
> nyc mocha --recursive -t 10000



  fixedRate controller implementation
    #init
      ✓ should set the sleep time for a single client if no clients are specified
      ✓ should set the sleep time for a single client
      ✓ should set the sleep time for multiple clients
      ✓ should set the sleep time to zero if 0 tps specified
    #applyRateControl
      ✓ should sleep for the full ammount of time if there is zero elapsed time
      ✓ should reduce the sleep time based on the elapsed time difference
      ✓ should not sleep if the elapsed time difference is below the 5ms threshold
      ✓ should not sleep if the sleepTime is zero

  pidRate controller implementation
    #init
      ✓ should set all gain values from constructor options
      ✓ should set a default sleep if no starting tps is provided
      ✓ should set logging if showVars option is provided
      ✓ should not set logging if no log option is provided
    #applyRateControl
      logging actions
        ✓ should provide logging if log option is set to be true
        ✓ should not provide logging if log option is not set
        ✓ should not provide logging if log option is set to be false
      sleep actions
        ✓ should not modify sleep time if no load error and isolated proportional gain
        ✓ should reduce sleep time if negative load error and isolated proportional gain
        ✓ should increase sleep time if positive load error and isolated proportional gain
        ✓ should not modify sleep time if no integral error and isolated integral gain
        ✓ should reduce sleep time if negative integral error and isolated integral gain
        ✓ should increase sleep time if positive integral error and isolated integral gain
        ✓ should not modify sleep time if no derivative error and isolated derivative gain
        ✓ should reduce sleep time if negative derivative error and isolated derivative gain
        ✓ should increase sleep time if positive derivative error and isolated derivative gain
        ✓ should sleep if above the 5ms threshold
        ✓ should not sleep if below the 5ms threshold

  BatchBuilderFactory implementation
    #getBatchBuilder
      ✓ should error with no batch builders defined
      ✓ should error if there is no matching family
      ✓ should error if there is no matching family+version
      ✓ should alter version v0 to 1.0
      ✓ should error if unable to import the file
      ✓ should be able to return a batch builder


  32 passing (20ms)


=============================== Coverage summary ===============================
Statements   : 5.67% ( 67/1181 )
Branches     : 7.39% ( 26/352 )
Functions    : 4.42% ( 10/226 )
Lines        : 5.72% ( 67/1171 )
================================================================================

> caliper@0.1.0 e2e /root/gopath/src/github.com/hyperledger/caliper
> node ./scripts/test.js ""simple"" ""benchmark/simple/config.yaml"" ""network/fabric-v1.1/2org2peergoleveldb/fabric-go.json""

info: [bench-flow.js]: ####### Caliper Test ######
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml up -d;sleep 3s
Creating network ""2org1peergoleveldb_default"" with the default driver
Creating orderer.example.com ... done
Creating ca.org2.example.com    ... done
Creating ca.org1.example.com    ... done
Creating peer0.org1.example.com ... done
Creating peer0.org2.example.com ... done
info: [create-channel.js]: Creating mychannel...
info: [create-channel.js]: Created mychannel successfully
info: [create-channel.js]: Sleeping 5s...
info: [join-channel.js]: Joining channels...
info: [join-channel.js]: Joining mychannel...
info: [join-channel.js]: Successfully joined peerOrg1's peers to mychannel
info: [join-channel.js]: Successfully joined peerOrg2's peers to mychannel
info: [join-channel.js]: Successfully joined mychannel
info: [install-chaincode.js]: Installing chaincodes...
info: [packager/Node.js]: packaging Node from /root/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/marbles-norichquery/node
info: [packager/Node.js]: packaging Node from /root/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/marbles-norichquery/node
info: [install-chaincode.js]: Installed chaincode marbles successfully in all peers
info: [packager/Node.js]: packaging Node from /root/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/simple/node
info: [packager/Node.js]: packaging Node from /root/gopath/src/github.com/hyperledger/caliper/src/contract/fabric/simple/node
info: [install-chaincode.js]: Installed chaincode simple successfully in all peers
info: [instantiate-chaincode.js]: Instantiating chaincodes...





**error: [Peer.js]: sendProposal - timed out after:480000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/root/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)**
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [instantiate-chaincode.js]: Failed to instantiate chaincodes: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.
    at Object.instantiateChaincode (/root/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:353:19)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
error: [fabric.js]: Fabric chaincode install failed: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.
    at Object.instantiateChaincode (/root/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:353:19)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
error: [bench-flow.js]: Error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200.
    at Object.instantiateChaincode (/root/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:353:19)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
info: [demo.js]: [Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
info: [bench-flow.js]: Executing command: docker-compose -f network/fabric-v1.1/2org1peergoleveldb/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org1.example.com ... done
Stopping peer0.org2.example.com ... done
Stopping ca.org2.example.com    ... done
Stopping ca.org1.example.com    ... done
Stopping orderer.example.com    ... done
Removing peer0.org1.example.com ... done
Removing peer0.org2.example.com ... done
Removing ca.org2.example.com    ... done
Removing ca.org1.example.com    ... done
",closed,False,2018-12-17 09:27:47,2019-02-12 10:05:38
caliper,aklenik,https://github.com/hyperledger/caliper/pull/261,https://api.github.com/repos/hyperledger/caliper/issues/261,Modify install instructions for Fabric dependencies,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

Aligned the documentation according to PR #260 
Preview at: https://aklenik.github.io/caliper/docs/Fabric_Configuration.html",closed,True,2018-12-16 19:55:49,2018-12-17 07:41:08
caliper,aklenik,https://github.com/hyperledger/caliper/pull/260,https://api.github.com/repos/hyperledger/caliper/issues/260,Consolidate and extend Fabric network examples,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

Addresses #259 

The PR includes:
1. Added example networks for Fabric 1.0, 1.1 and 1.2
1. Added separate examples for CouchDB and GoLevelDB backends
1. Added setup scripts for each version
1. Enhanced the Readme files for each network
1. Removed the `Xorg3peer` networks, since they're too resource consuming. For testing purposes the max 2 peer networks are enough
1. Each sample network (Composer or Fabric) is deployed with every available chaincodes (golang and node configs separately). See the network Readme files
1. Changed the default network configs to lightweight defaults (2 orgs, 1 peer with GoLevelDB)

Additional necessary fixes:
1. Parse the config directly in the Fabric adapter, since SDK@1.2 fails to add the file to the Client config
1. Check the type of the peers returned when querying installed chaincodes, since SDK@1.2 returns ChannelPeer instances instead of Peer instances that are required for the query

## Validation of the fix
Test the sample benchmarks with the compatible sample networks. E.g., in the Caliper root folder:
```
npm install
npm run fabric-v1.1-deps
node benchmark/simple/main.js -c config-linear-rate.yaml -n network/fabric-v1.1/2org1peergoleveldb/fabric-node-tls.json
node benchmark/smallbank/main.js -c config.yaml -n network/fabric-v1.1/2org1peergoleveldb/fabric-node-tls.json
# etc.
```

@panyu4 @nklincoln Could you review the PR?",closed,True,2018-12-16 19:41:36,2018-12-17 07:42:27
caliper,aklenik,https://github.com/hyperledger/caliper/issues/259,https://api.github.com/repos/hyperledger/caliper/issues/259,Enhancement - Provide sample networks for different Fabric versions and configurations,"## Context
Currently, the provided Fabric network example is version 1.1. Moreover, it is not clear whether the network uses CouchDB or GoLevelDB as state DB. 

## Expected Behavior
Different sample networks for different Fabric versions and state DB configurations.

## Actual Behavior
A single Fabric network example.

## Possible Fix
Add `fabric-v1.x` network examples, keeping the `XorgYpeer` structure with additional state DB variants.

## Your Environment
* Version used: master@f0bb14316bed9a127f934d9957a66840734af0fd
* Environment name and version (e.g. Chrome 39, node.js 5.4): nodejs 8.11.4
* Operating System and version (desktop or mobile): Ubuntu 18.04 LTS",closed,False,2018-12-16 19:04:26,2018-12-20 10:35:05
caliper,gregdhill,https://github.com/hyperledger/caliper/pull/258,https://api.github.com/repos/hyperledger/caliper/issues/258,Burrow Smart Contract Init,"Signed-off-by: greg <greg.hill@monax.io>

This provides a sample solidity contract which is now deployed after chain initialization.",closed,True,2018-12-15 12:19:38,2019-01-15 16:59:21
caliper,gregdhill,https://github.com/hyperledger/caliper/pull/257,https://api.github.com/repos/hyperledger/caliper/issues/257,cleanup docs & add burrow,"Signed-off-by: greg <greg.hill@monax.io>

Few spelling & grammatical tidy-ups, along with burrow introductory information.",closed,True,2018-12-14 15:58:45,2019-01-15 16:59:23
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/256,https://api.github.com/repos/hyperledger/caliper/issues/256,Assign target peers based on client index,"Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>

Addresses #255 ",closed,True,2018-12-14 14:15:53,2019-03-14 16:56:19
caliper,nklincoln,https://github.com/hyperledger/caliper/issues/255,https://api.github.com/repos/hyperledger/caliper/issues/255,Enhancement - Fabric adaptor should not use random target peers,"<!--- Provide a general summary of the issue in the Title above -->
The Fabric adaptor distributes load across peers using a Math.random operation, which is non-deterministic and can lead to unbalanced loading across the network for typical (n<100) client numbers

## Context
Target peers are chosen using: `peers[Math.floor(Math.random() * peers.length)];` this could be achieved in a more systematic way though `peers[clientIdx % peers.length]` which would cycle the client connections through the available peers

## Possible Fix
Use `peers[clientIdx % peers.length]` and modify interface where required to enable clientIdx to be passed to getContext()
",closed,False,2018-12-14 14:15:36,2018-12-16 20:15:22
caliper,lybyyy,https://github.com/hyperledger/caliper/issues/254,https://api.github.com/repos/hyperledger/caliper/issues/254,how to test my own smart contract ?,"I had run benchmark simple test with caliper.
Now i want to test my smart contract, it does some auditing work for one column of data, if auditing passed. then broadcast to the network, just a simulation, not on a real network.
My question is: which file should I modify?
* I see the path(./src/contract/fabric/simple) has go version and node.js version smart contract, may i edit one of them, modify the function content in the above file and config file in the path(./benchmark/simple/),then run command( node ./benchmark/simple main.js)?
thanks a lot",closed,False,2018-12-14 06:56:31,2019-02-12 08:27:56
caliper,RobertDiebels,https://github.com/hyperledger/caliper/issues/253,https://api.github.com/repos/hyperledger/caliper/issues/253,Memory issue for larger networks,"<!--- Provide a general summary of the issue in the Title above -->
Ran into a memory heap size issue when conducting tests with larger networks. The networks range in sizes of 4-32 peers. The network that ran into the issue had a size of 16 peers.

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
I think that the GC is struggling to keep up with the Transaction generation. I'm generating between 32 Tx/s min and 256 Tx/s max of load using one local client for a duration of 3 minutes.

```
FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory

<--- Last few GCs --->

[40:0x27906b0]  1875862 ms: Mark-sweep 1286.0 (1479.3) -> 1285.9 (1480.8) MB, 2603.6 / 6.8 ms  allocation failure GC in old space requested
[40:0x27906b0]  1878378 ms: Mark-sweep 1285.9 (1480.8) -> 1285.9 (1438.8) MB, 2516.0 / 7.2 ms  last resort GC in old space requested
[40:0x27906b0]  1880941 ms: Mark-sweep 1285.9 (1438.8) -> 1285.9 (1426.8) MB, 2562.8 / 7.0 ms  last resort GC in old space requested


<--- JS stacktrace --->

==== JS stack trace =========================================

Security context: 0x1021d2925879 <JSObject>
    1: /* anonymous */(aka /* anonymous */)(this=0xf31da9822d1 <undefined>)

==== Details ================================================

[1]: /* anonymous */(aka /* anonymous */)(this=0xf31da9822d1 <undefined>) {
// optimized frame
--------- s o u r c e   c o d e ---------
<No Source>
-----------------------------------------
}
=====================


 1: node::Abort() [/usr/local/bin/node]
 2: 0x8c21ec [/usr/local/bin/node]
 3: v8::Utils::ReportOOMFailure(char const*, bool) [/usr/local/bin/node]
 4: v8::internal::V8::FatalProcessOutOfMemory(char const*, bool) [/usr/local/bin/node]
 5: v8::internal::Factory::CopyFixedArrayAndGrow(v8::internal::Handle<v8::internal::FixedArray>, int, v8::internal::PretenureFlag) [/usr/local/bin/node]
 6: v8::internal::Isolate::EnqueueMicrotask(v8::internal::Handle<v8::internal::Object>) [/usr/local/bin/node]
 7: v8::internal::Runtime_EnqueuePromiseResolveThenableJob(int, v8::internal::Object**, v8::internal::Isolate*) [/usr/local/bin/node]
 8: 0x1ae1f5d042fd
[Transaction Info] - Submitted: 103680 Succ: 43532 Fail:41544 Unfinished:18604
```

## Expected Behavior
<!--- Tell us what should happen -->
I would expect that caliper does not crash but considering the stress it is under maybe this is an appropriate reaction.

## Actual Behavior
<!--- Tell us what happens instead -->
Caliper crashes due to memory shortage.

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
I've added a change to my fork setting `--max-old-space-size=10000`.
I've also set some some the objects to undefined when they were no longer used. This might be especially useful in invokebycontext.

I don't know how well node handles Garbage Collection (GC) but my guess is that if I generate 256 Tx/s with a time-out of 30 and 32 peer-responses that would be 245760 times the data-size of a response. Maybe more depending on GC speed.

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1. Create a network of 16 or 32 peers.
2. Generate 256 Tx/s for 3 minutes.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",open,False,2018-12-10 17:33:24,2018-12-12 12:38:57
caliper,Priyanshi52,https://github.com/hyperledger/caliper/issues/252,https://api.github.com/repos/hyperledger/caliper/issues/252,error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: error starting container: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6:,"I am running caliper on the following node-
_Name: raspberrypi
Kernel Version: 4.11.2-pi64+
Operating System: Debian GNU/Linux 9 (stretch)
OSType: linux
Architecture: aarch64_

and using 

**pesicsasa/fabric-ca:aarch64-1.1.0**
insted of 
hyperledger/fabric-ca:x86_64-1.1.0 image
same for orderer,peer and couchDB.

ok 3 Installed chaincode simple successfully in all peers
# Instantiate chaincode......
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: error starting container: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6: API error (404): {""message"":""manifest for hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6 not found""}

    at new createStatusError (/home/caliper-master/node_modules/grpc/src/client.js:64:15)
    at /home/caliper-master/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: error starting container: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6: API error (404): {""message"":""manifest for hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6 not found""}

    at new createStatusError (/home/caliper-master/node_modules/grpc/src/client.js:64:15)
    at /home/caliper-master/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: error starting container: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6: API error (404): {""message"":""manifest for hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6 not found""}

    at new createStatusError (/home/caliper-master/node_modules/grpc/src/client.js:64:15)
    at /home/caliper-master/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: error starting container: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6: API error (404): {""message"":""manifest for hyperledger/fabric-ccenv:arm64-1.1.1-snapshot-feed00ad6 not found""}

    at new createStatusError (/home/caliper-master/node_modules/grpc/src/client.js:64:15)
    at /home/caliper-master/node_modules/grpc/src/client.js:583:15
not ok 4 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/home/caliper-master/src/fabric/e2eUtils.js:372:19) at <anonymous> at Client.newDefaultKeyValueStore.then.then.then.then.then (/home/caliper-master/src/fabric/e2eUtils.js:385:15) at <anonymous>
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/home/caliper-master/src/fabric/instantiate-chaincode.js:60:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/home/caliper-master/src/fabric/e2eUtils.js:372:19)
          at <anonymous>
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/home/caliper-master/src/fabric/e2eUtils.js:385:15)
          at <anonymous>
          at Test.assert [as _assert] (/home/caliper-master/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/caliper-master/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/caliper-master/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/caliper-master/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/home/caliper-master/src/fabric/instantiate-chaincode.js:60:19)
          at <anonymous>
  ...
fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/home/caliper-master/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/home/caliper-master/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>",closed,False,2018-12-09 18:37:15,2018-12-13 07:00:54
caliper,wwb2322079742,https://github.com/hyperledger/caliper/issues/251,https://api.github.com/repos/hyperledger/caliper/issues/251,"After the network has run, how does caliper test the running network","<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2018-12-07 03:16:55,2018-12-12 12:41:32
caliper,zcyzhu,https://github.com/hyperledger/caliper/issues/250,https://api.github.com/repos/hyperledger/caliper/issues/250,"I successfully ran node main.js on composer, but the result of the test is this","![1543926568 1](https://user-images.githubusercontent.com/38487249/49442269-f8f20100-f803-11e8-86be-86e40ab760e9.png)
My cpu share has exceeded 100%!! Why?

What is the difference between dev-peer0.org1.example.co...0.1.0 and peer0.org1.example.com? What do they mean? What does Traffic In and Traffic Out and Disc Read mean? What do the names in docker mean? Why is there a difference between CPU(max) and CPU(avg)? Please explain
",closed,False,2018-12-04 12:33:33,2018-12-06 11:12:58
caliper,zcyzhu,https://github.com/hyperledger/caliper/issues/249,https://api.github.com/repos/hyperledger/caliper/issues/249,"I am using node benchmark/simple/main.js on caliper, I get an error.","```
error: [bench-flow.js]: Error: TypeError: Cannot read property 'network' of undefined
    at Object.module.exports.init (/home/zcy/new project/caliper/src/fabric/util.js:140:15)
    at Fabric.init (/home/zcy/new project/caliper/src/fabric/fabric.js:39:14)
    at Blockchain.init (/home/zcy/new project/caliper/src/comm/blockchain.js:66:26)
    at Object.module.exports.run (/home/zcy/new project/caliper/src/comm/bench-flow.js:313:26)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
```
This is my environment，
```
zcy@ubuntu:~/new project/caliper$ npm list grpc
caliper@0.1.0 /home/zcy/new project/caliper
├─┬ fabric-client@1.2.0
│ └── grpc@1.10.1  deduped
└── grpc@1.10.1 
```
",closed,False,2018-12-04 11:25:53,2018-12-22 17:44:52
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/248,https://api.github.com/repos/hyperledger/caliper/issues/248,Check whether a chaincode has been installed and instantiated,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

Check whether a chaincode has been installed and instantiated, if it has, not throw an error, to enable repeated tests.

<!--- Provide a general summary of the pull request in the Title above -->

## Checklist
 - [ ]  A link to the issue/user story that the pull request relates to
 - [ ]  How to recreate the problem without the fix
 - [ ]  Design of the fix
 - [ ]  How to prove that the fix works
 - [ ]  Automated tests that prove the fix keeps on working
 - [ ]  Documentation - any JSDoc, website, or Stackoverflow answers?


## Issue/User story
<!--- What issue / user story is this for -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.


## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Design of the fix
<!-- Focus on why you designed this fix this way, and what was discounted. Do not describe just the code - we can read that! -->

## Validation of the fix
<!-- Over and above the tests, what has been done to prove this works? -->

## Automated Tests
<!-- Please describe the automated tests that are put in place to stop this recurring -->

## What documentation has been provided for this pull request
<!-- JSDocs, WebSite and answers to Stack Overflow questions are possible documentation sources -->
",closed,True,2018-12-04 11:02:56,2018-12-06 03:11:15
caliper,lenoAlex,https://github.com/hyperledger/caliper/issues/247,https://api.github.com/repos/hyperledger/caliper/issues/247,principle of TPS calculation,"Recently I did some performance testing on fabric with caliper. However, I am confused about the principle of TPS calculation of caliper. Could you please give a brief specification about it? How it works?",closed,False,2018-12-04 09:42:35,2018-12-22 17:46:02
caliper,gregdhill,https://github.com/hyperledger/caliper/pull/246,https://api.github.com/repos/hyperledger/caliper/issues/246,Burrow Support,"Signed-off-by: greg <greg.hill@monax.io>

Provides basic [Hyperledger Burrow](https://github.com/hyperledger/burrow) support for Caliper based on the official (Alpha) [JavaScript API](https://www.npmjs.com/package/@monax/burrow). This PR includes a basic two node network and support for transactional based tests.

Installation: `npm i @monax/burrow@0.20.8`",closed,True,2018-12-02 17:48:57,2019-01-15 16:59:30
caliper,dattajadhav44,https://github.com/hyperledger/caliper/issues/245,https://api.github.com/repos/hyperledger/caliper/issues/245,Hyperleder Fabric configuration of multi peers,"I have modified the ""balance-transfer"" example adding total 5 peers and a Org1, removed the Org2. But while creating the channel i am facing the below issue. looks like its time out issue but unable to figure out. Can anyone help me over this please.

  r: <BN: 4debf915c59eeab7e1f12b43ec53dd85d70bb72df0c0178a803b03e3657ee92>,
  s: <BN: cf99377534970474a381e2fedcf92ee92597b2e46df2cb3cb3ced69dea88812>,
  recoveryParam: 0 }
error: [Remote.js]: Error: Failed to connect before the deadline URL:grpcs://localhost:7050
[2018-11-30 15:10:36.047] [ERROR] Join-Channel - Error: Failed to connect before the deadline URL:grpcs://localhost:7050
    at checkState (/home/djadhav/Desktop/new-balance-transfer/ncb-2.0-app/node_modules/grpc/src/client.js:720:16)
[2018-11-30 15:10:36.047] [ERROR] Join-Channel - Failed to join all peers to channel. cause:Error: Failed to connect before the deadline URL:grpcs://localhost:7050
(node:21122) UnhandledPromiseRejectionWarning: Error: Failed to join all peers to channel. cause:Error: Failed to connect before the deadline URL:grpcs://localhost:7050
    at Object.joinChannel (/home/djadhav/Desktop/new-balance-transfer/ncb-2.0-app/app/join-channel.js:101:9)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
(node:21122) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3)
[2018-11-30 15:14:32.976] [DEBUG] SampleWebApp -  ------>>>>>> new request for /chaincodes
[2018-11-30 15:14:32.977] [DEBUG] SampleWebApp - Decoded from JWT token: username - Jim, orgname - Org1
[2018-11-30 15:14:32.977] [DEBUG] SampleWebApp - ==================== INSTALL CHAINCODE ==================
[2018-11-30 15:14:32.977] [DEBUG] SampleWebApp - peers : peer0.org1.example.com,peer1.org1.example.com,peer2.org1.example.com,peer3.org1.example.com,peer4.org1.example.com
",closed,False,2018-11-30 09:48:33,2018-12-03 08:50:58
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/244,https://api.github.com/repos/hyperledger/caliper/issues/244,Add fixed feedback rate doc,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>

<!--- Provide a general summary of the pull request in the Title above -->

## Checklist
 - [ ]  A link to the issue/user story that the pull request relates to
 - [ ]  How to recreate the problem without the fix
 - [ ]  Design of the fix
 - [ ]  How to prove that the fix works
 - [ ]  Automated tests that prove the fix keeps on working
 - [ ]  Documentation - any JSDoc, website, or Stackoverflow answers?


## Issue/User story
<!--- What issue / user story is this for -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.


## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Design of the fix
<!-- Focus on why you designed this fix this way, and what was discounted. Do not describe just the code - we can read that! -->

## Validation of the fix
<!-- Over and above the tests, what has been done to prove this works? -->

## Automated Tests
<!-- Please describe the automated tests that are put in place to stop this recurring -->

## What documentation has been provided for this pull request
<!-- JSDocs, WebSite and answers to Stack Overflow questions are possible documentation sources -->
",closed,True,2018-11-30 09:12:37,2018-11-30 11:13:47
caliper,zcyzhu,https://github.com/hyperledger/caliper/issues/243,https://api.github.com/repos/hyperledger/caliper/issues/243,error: [join-channel.js]: Couldn't join peerOrg1's peers to mychannel: TypeError: Cannot read property 'getConnectivityState' of undefined,"When I execute the command` sudo node benchmark/simple/main.js`, an error occurs, showing：
```
 error: [join-channel.js]: Couldn't join peerOrg1's peers to mychannel: TypeError: Cannot read property 'getConnectivityState' of undefined
    at EventHub._checkConnection (/home/zcy/new project/caliper/node_modules/fabric-client/lib/EventHub.js:479:39)
    at EventHub.registerBlockEvent (/home/zcy/new project/caliper/node_modules/fabric-client/lib/EventHub.js:658:8)
    at Promise (/home/zcy/new project/caliper/src/fabric/join-channel.js:123:20)
    at new Promise (<anonymous>)
    at eventhubs.forEach (/home/zcy/new project/caliper/src/fabric/join-channel.js:120:29)
    at Array.forEach (<anonymous>)
    at joinChannel (/home/zcy/new project/caliper/src/fabric/join-channel.js:119:19)

info: [bench-flow.js]: Executing command: docker-compose -f network/fabric/2org2peer/docker-compose.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: TCP Read failed
    at Object.exports.createStatusError (/home/zcy/new project/caliper/node_modules/grpc/src/common.js:87:15)
    at Object.onReceiveStatus (/home/zcy/new project/caliper/node_modules/grpc/src/client_interceptors.js:1188:28)
    at InterceptingListener._callNext (/home/zcy/new project/caliper/node_modules/grpc/src/client_interceptors.js:564:42)
    at InterceptingListener.onReceiveStatus (/home/zcy/new project/caliper/node_modules/grpc/src/client_interceptors.js:614:8)
    at callback (/home/zcy/new project/caliper/node_modules/grpc/src/client_interceptors.js:841:24)


```
My software version is as follows:
```
── composer-admin@0.19.0
├── composer-cli@0.20.3
├── composer-client@0.19.0
├── composer-common@0.19.0
├── composer-playground@0.20.4
├── composer-rest-server@0.20.3
├── composer-runtime@0.19.1
├── composer-wallet-cloudant@0.0.13
├── fabric-ca-client@1.1.0
├── fabric-client@1.1.0
├── generator-hyperledger-composer@0.20.3
├── grpc@1.10.1
├── npm@6.4.1
└── yo@2.0.5

```
I also changed the grpc version in package.json under the installation package to 1.10.1.
But it didn't work",closed,False,2018-11-30 01:36:25,2019-04-03 02:26:22
caliper,ldesrosi,https://github.com/hyperledger/caliper/issues/242,https://api.github.com/repos/hyperledger/caliper/issues/242,Caliper fails silently due to changed dependency,"Downloaded a fresh copy of the caliper master branch today.  Running the basic marble test produced nothing. Meaning no output and no report.

## Context
Adding tracing to benchmark/marbles/main.js I can see this error:
{ Error: Cannot find module 'ajv/lib/compile/equal'
    at Function.Module._resolveFilename (module.js:543:15)
    at Function.Module._load (module.js:470:25)
    at Module.require (module.js:593:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/ldesrosi/Documents/Documents/Project/git/caliper/node_modules/table/dist/validateConfig.js:2:13)
    at Module._compile (module.js:649:30)
    at Object.Module._extensions..js (module.js:660:10)
    at Module.load (module.js:561:32)
    at tryModuleLoad (module.js:501:12)
    at Function.Module._load (module.js:493:3) code: 'MODULE_NOT_FOUND' }

Turns out this is a dependency of the table package and they found out that ajv removed the equal function, as per this github issue: https://github.com/gajus/table/issues/83

## Expected Behavior
I would expect the test to run and an output like:
`info: [bench-flow.js]: ####### Caliper Test ######` to be printed to the command line.

## Actual Behavior
Nothing gets printed on the console

## Possible Fix
Modify `package.json` from:
```
  ""optionalDependencies"": {
    ""ajv"": ""^6.0.0""
  },
```  
to:
```
  ""optionalDependencies"": {
    ""ajv"": ""6.5.4""
  },
```
## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1. Git clone caliper
2. npm install followed by npm install for the fabric sdk
3. node benchmark/marbles/main.js -c ... -n ...
4. Nothing happens

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
Cannot use Caliper as-is.  Applying the package.json allows me to work.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used: Caliper master branch
* Environment name and version (e.g. Chrome 39, node.js 5.4): Node.js v8.11.3 with Fabric 1.1
* Operating System and version (desktop or mobile): Mac OSX
* Link to your project:
",open,False,2018-11-29 16:30:47,2019-03-04 21:01:39
caliper,HenryGits,https://github.com/hyperledger/caliper/issues/241,https://api.github.com/repos/hyperledger/caliper/issues/241,Version problem,"Hello，author：
Now，I need validation fabric-v1.2。but，This app doesn't seem to meet my requirements。When will this version of the application be released?
thanks！",closed,False,2018-11-28 06:15:28,2019-02-12 08:13:04
caliper,HenryGits,https://github.com/hyperledger/caliper/issues/240,https://api.github.com/repos/hyperledger/caliper/issues/240,Version problem,"Hello，author：
    Now，I need validation fabric-v1.2。but，This app seems to meet my requirements。When will this version of the application be released?
    thanks！",closed,False,2018-11-28 06:13:19,2018-11-28 06:14:17
caliper,houqinghui,https://github.com/hyperledger/caliper/pull/239,https://api.github.com/repos/hyperledger/caliper/issues/239,modify config file format from json to yaml ,"modify config file format from json to yaml 
1. modify the config file format from to yaml.
2. change the config parsing codes.
@panyu4 @aklenik ",closed,True,2018-11-28 04:49:49,2018-11-30 11:36:32
caliper,panyu4,https://github.com/hyperledger/caliper/pull/238,https://api.github.com/repos/hyperledger/caliper/issues/238,Move the network configuration files into  network folders,"
Signed-off-by: panyu4 <PY.panyu@huawei.com>

<!--- Provide a general summary of the pull request in the Title above -->
## Issue/User story
1. move the network configuration files into the related network folder.
2. rename the network configuration files by adding a test name(such as: simple) into the file's name.
3. modify the default network configuration files' path in benchmark tests.

## Existing issues
#218 
#",closed,True,2018-11-28 01:52:07,2019-02-11 01:12:32
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/237,https://api.github.com/repos/hyperledger/caliper/issues/237,Enable display of disc r/w,"Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>

Targets #140 

This PR enables hooking into the the disc r/w portion of dockerstats output for local tests, and updates the output tables in the console.

It was not needed to update the html file for test output as the template deals with the additional column.

I have noticed in the output that disc read remains at zero, but this corresponds to the actual dockerstats output during the test run
",closed,True,2018-11-27 17:06:50,2019-03-14 16:56:13
caliper,nitesh7sid,https://github.com/hyperledger/caliper/pull/236,https://api.github.com/repos/hyperledger/caliper/issues/236,Split caliper into transaction sender and event listener,"Signed-off-by: Nitesh Solanki <nitesh_solanki@persistent.com>

<!--- Provide a general summary of the pull request in the Title above -->

## Checklist
 - [ ]  A link to the issue/user story that the pull request relates to
 - [ ]  How to recreate the problem without the fix
 - [ ]  Design of the fix
 - [ ]  How to prove that the fix works
 - [ ]  Automated tests that prove the fix keeps on working
 - [ ]  Documentation - any JSDoc, website, or Stackoverflow answers?


## Issue/User story
PR for spitting caliper process into transaction sender and event listener.

Short Description
Current version of the caliper relies on a single threaded process to send the transactions as well as to listen for the transaction confirmation event. This can cause an issue for clients with higher send rates since node.js is itself a single threaded. The callback of the eventhub may get queued in the event loop and hence may result in incorrect confirmation time or drop in events

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.


## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)

https://github.com/hyperledger/caliper/issues/9

## Design of the fix
To tackle this issue, caliper can be split into 2 sub processes namely,

sender who is just responsible for generating the transaction load
listener which connects to the event peer, listens for the block event, note the timestamp and then publish it to Apache Kafka MQ.
A persistence layer is required so that after the sender has finished generating the load, it can then consume blocks and associated confirmation time from the Queue and compute time_final property for every transaction.


## Validation of the fix
<!-- Over and above the tests, what has been done to prove this works? -->

## Automated Tests
<!-- Please describe the automated tests that are put in place to stop this recurring -->

## What documentation has been provided for this pull request
<!-- JSDocs, WebSite and answers to Stack Overflow questions are possible documentation sources -->
",closed,True,2018-11-27 15:46:03,2019-01-30 12:35:10
caliper,lxb325710,https://github.com/hyperledger/caliper/issues/235,https://api.github.com/repos/hyperledger/caliper/issues/235,error,"error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: TCP Write failed
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: TCP Write failed
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
error: [join-channel.js]: Failed to join peers: TypeError: Cannot read property 'stack' of undefined
    at joinChannel (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:162:85)
    at <anonymous>
error: [join-channel.js]: Failed to join peers: TypeError: Cannot read property 'stack' of undefined
    at joinChannel (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:162:85)
    at <anonymous>
error: [join-channel.js]: Failed to join peers: TypeError: Cannot read property 'stack' of undefined
    at joinChannel (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:162:85)
    at <anonymous>
error: [fabric.js]: Fabric initialization failed: TypeError: Cannot read property 'stack' of undefined
    at joinChannel (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:162:85)
    at <anonymous>
error: [fabric.js]: Fabric initialization failed: TypeError: Cannot read property 'stack' of undefined
    at joinChannel (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:162:85)
    at <anonymous>
error: [fabric.js]: Fabric initialization failed: TypeError: Cannot read property 'stack' of undefined
    at joinChannel (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:162:85)
    at <anonymous>
error: [bench-flow.js]: Error: TypeError: Cannot read property 'stack' of undefined
    at joinChannel (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:162:85)
    at <anonymous>
error: [bench-flow.js]: Error: TypeError: Cannot read property 'stack' of undefined
    at joinChannel (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:162:85)
    at <anonymous>
error: [bench-flow.js]: Error: TypeError: Cannot read property 'stack' of undefined
    at joinChannel (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:162:85)
    at <anonymous>
",closed,False,2018-11-27 13:05:37,2019-02-12 10:12:31
caliper,zcyzhu,https://github.com/hyperledger/caliper/issues/234,https://api.github.com/repos/hyperledger/caliper/issues/234,node main.js  Bus error,"When I execute this command, `node main.js`, there is a problem.
I deployed the project on my own downloaded fabric. When I use caliper, how do I connect to the network? Why is there a Bus error?

```
info: [composer.js]: Initializing target platform configuration
✔ Creating channels mychannel
✔ Attempting to join peer peer0.org1.example.com to channel mychannel (attempt 1/5)
✔ Attempting to join peer peer0.org2.example.com to channel mychannel (attempt 1/5)
Bus error
```
",open,False,2018-11-27 12:07:06,2019-03-04 21:02:30
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/233,https://api.github.com/repos/hyperledger/caliper/issues/233,Delete duplicated docs files,"Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>

With the delivery of the gh-pages website, the docs folder is now redundant ... this PR deletes the docs folder and modifies the Readme file to redirect users to the gh-pages",closed,True,2018-11-27 11:07:34,2019-03-14 16:56:51
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/232,https://api.github.com/repos/hyperledger/caliper/issues/232,update docs to use npm script shortcut,"Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>

Final component to #229 
- edits to the gh-pages to point out to users how to use the npm scripts

Also includes a change to the favicon location to make sure it appears on all pages",closed,True,2018-11-27 10:30:06,2019-03-14 16:57:11
caliper,zcyzhu,https://github.com/hyperledger/caliper/issues/231,https://api.github.com/repos/hyperledger/caliper/issues/231,Error while executing the benchmark: Error: Cannot find module 'fabric-ca-client/lib/FabricCAClientImpl.js',"When I use the command line 
`node benchmark/simple/main.js`
something goes wrong，

`Error while executing the benchmark: Error: Cannot find module 'fabric-ca-client/lib/FabricCAClientImpl.js'`
I have already installed fabric-ca-client

",closed,False,2018-11-27 08:59:53,2019-02-12 08:32:48
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/230,https://api.github.com/repos/hyperledger/caliper/issues/230,add config scripts to setup target test platform,"Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>

Part1 for #229 
- addition of npm scripts to package file
- modification of travis build file to use the npm script to configure for baseline test runs in build

Pending addition(s):
- website doc guide changes to indicate the presence/use of the scripts ",closed,True,2018-11-26 13:54:10,2018-11-27 11:15:37
caliper,nklincoln,https://github.com/hyperledger/caliper/issues/229,https://api.github.com/repos/hyperledger/caliper/issues/229,Simplify base configuration for tests using nom scripts,"It would streamline the user experience by having a set of npm scripts to run in order to install blockchain platform dependancies instead of having to search the docs

## Context
A user must run commands listed in the docs, rather than a simpler `npm run install-deps` script

## Expected Behavior
Life should be easy for a user

## Possible Fix
Add npm scripts and modify the docs to reflect the change",closed,False,2018-11-26 12:51:15,2018-11-26 21:39:55
caliper,panyu4,https://github.com/hyperledger/caliper/pull/228,https://api.github.com/repos/hyperledger/caliper/issues/228,move config files' platform related properties into network config files,"## Issue/User story
<!--- What issue / user story is this for -->
This PR consolidates network-related configuration files:
1. Removed the blockchain section and command section which were in the config.json files.
2. Added Caliper section which included blockchain subsection and command subsection into the network configuration files.
3. As the network related configurations   were removed from those configuration files,  there were many reduplicated configuration files. So removed the configuration files ended with -tls.json. 

## Existing issues
-  #218 
",closed,True,2018-11-26 11:45:43,2018-11-27 10:52:15
caliper,lenoAlex,https://github.com/hyperledger/caliper/issues/227,https://api.github.com/repos/hyperledger/caliper/issues/227,Support for Fabric versions 1.3,"I am currently working on a Fabric network test that are only available from Fabric v1.3.  Are there any tips or workarounds available? Are there any plans to support newer versions and if so, what is the current state?

Adjusting the versions of fabric-client and fabric-ca-client while using the correct docker images did not work.",closed,False,2018-11-26 06:19:33,2019-03-04 20:43:40
caliper,hariharan-avs,https://github.com/hyperledger/caliper/issues/226,https://api.github.com/repos/hyperledger/caliper/issues/226,Caliper test reports showing inflated values for throughput,"## Summary
The throughput obtained from test is very high than the provided input.

## Context
The caliper test is run in Sawtooth Nightly (1.1) on AWS

## Expected Behavior
Input 70 tps throughput 70 or lesser tps 

## Actual Behavior
Input 76 tps : throughput 117 and shows fabric docker images which are not used for this test.

## Steps to Reproduce
1. Install Sawtooth 1.1 Nightly on VMs in AWS instance
2. Install caliper on AWS
3. start sawtooth and run caliper tests with respective sawtooth.json rest end points
4. obtain caliper report

[report20181119T092133.zip](https://github.com/hyperledger/caliper/files/2607535/report20181119T092133.zip)


",open,False,2018-11-22 10:11:49,2019-02-12 08:39:23
caliper,funkol2007,https://github.com/hyperledger/caliper/issues/225,https://api.github.com/repos/hyperledger/caliper/issues/225,Peer access error in muti-nodes,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
Hi, I am testing a fabric network with caliper. And the nework contains 1 orderer 2 orgs (org1 has 2peers and org2 has 1 peer) with kafka ordering mode. I have successly create a channel on the three peers. But when I start the caliper it report the err msg: error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: access denied: channel [] creator org [Org1MSP]. Then I check the peer log, it says that: 2018-11-21 17:00:52.775 CST [protoutils] ValidateProposalMessage -> WARN 04d channel []: MSP error: the supplied identity is not valid: x509: certificate signed by unknown authority . So I think the client access peer node with wrong msp. But I don't where to configurate this item. Who can help me with this problem. Very Thanks.


## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2018-11-21 10:24:48,2018-11-26 03:11:17
caliper,houqinghui,https://github.com/hyperledger/caliper/pull/224,https://api.github.com/repos/hyperledger/caliper/issues/224,fix invalid CPU statistics,"Using percpu_usage.length can cause invalid CPU statistics
See the docker documentation:
""If either precpu_stats.online_cpus or cpu_stats.online_cpus is nil then for compatibility with older daemons the length of the corresponding cpu_usage.percpu_usage array should be used.""
#114 
@panyu4 ",closed,True,2018-11-21 03:51:19,2018-11-21 07:27:06
caliper,aklenik,https://github.com/hyperledger/caliper/pull/223,https://api.github.com/repos/hyperledger/caliper/issues/223,Refactored Promise chains in core/client/blockchain/Fabric parts,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

## Issue/User story
Refactored the `Promise` chains to the `async/await` pattern in the following components:
* Core benchmark code
* General blockchain classes
* Client classes (except for ZooKeeper-related code)
* Fabric adapter
* `main.js` files of the sample benchmarks

## Existing issues
#192 ",closed,True,2018-11-20 13:53:07,2018-11-30 11:50:35
caliper,RobertDiebels,https://github.com/hyperledger/caliper/issues/222,https://api.github.com/repos/hyperledger/caliper/issues/222,TypeError: Cannot read property 'getUpdates' of undefined,"<!--- Provide a general summary of the issue in the Title above -->
This issue is related to most of the issues reporting a bug with this error in it.
I've created a separate issue since this issue is unrelated to the actual errors in those issues.

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
This error-message is caused by a missing client variable in the gui demo [ [link](https://github.com/hyperledger/caliper/blob/687e91da79859f619c3e850afcae5a8c7aa1548b/src/gui/src/demo.js#L147) ]. Normally a line of code in bench-flow.js [ [link](https://github.com/hyperledger/caliper/blob/b03184354bdb0a7b620d60fee356b38ee94917fd/src/comm/bench-flow.js#L240) ] defines the client variable.

However when there is an issue initializing the blockchain and the benchmark fails before a call to `defaultTest()` [ [link](https://github.com/hyperledger/caliper/blob/b03184354bdb0a7b620d60fee356b38ee94917fd/src/comm/bench-flow.js#L329) ] the client variable remains undefined. Then in the catch statement of the run funciton in bench-flow.js `demo.stopWatch()` is called  [ [link](https://github.com/hyperledger/caliper/blob/b03184354bdb0a7b620d60fee356b38ee94917fd/src/comm/bench-flow.js#L363) ] which then produces the `undefined` error for `getUpdates()` in demo.js.

## Expected Behavior
<!--- Tell us what should happen -->
Proper handling of the undefined error.

## Actual Behavior
<!--- Tell us what happens instead -->
A TypeError is thrown because the client variable is undefined.

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
My suggestion would be to remove the gui demo all together. Afaik the demo code is currently unused, untested and most users use the html-reports to view their statistics. It can be added later when it is fully functional and tested.

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1. Insert a `throw new Error(""Some message"")` in any bit of code responsible for initialization of a blockchain.
2. Run the benchmark.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->
It causes Caliper to crash instead of gracefully shutting down.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",open,False,2018-11-20 12:57:05,2018-11-21 10:24:31
caliper,houqinghui,https://github.com/hyperledger/caliper/pull/221,https://api.github.com/repos/hyperledger/caliper/issues/221,add the  Caliper FAQ.md,"add the  Caliper FAQ.md 
@panyu4 @feihujiang  @aklenik ",closed,True,2018-11-18 14:59:28,2018-11-21 02:05:21
caliper,aklenik,https://github.com/hyperledger/caliper/pull/220,https://api.github.com/repos/hyperledger/caliper/issues/220,Consolidated network artifacts and configs,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

## Issue/User story
This PR consolidates network-related configuration files and samples targeting Fabric and Composer. The changes include:

1. Removed the `simplenetwork` example network, since it's basically the `2org2peer` network. Changed the configuration files where needed.
1. Renamed the Fabric network directories, so they don't contain dashes. Relates to Issue #198 
1. Added TLS and no-TLS versions for every Fabric-based config (see the design of the fix). This should solve many SSL-related errors (like the bogus request from client error in the orderer) that resulted from incompatible settings on client and network side.
1. Changed some TPS rates in the configs to lower values.
1. Fixed the cert paths in the Composer dev network config.

N.B.: Once Issue #218 is resolved, many of the configs can be deleted, but until that, this explicit separation of TLS and no-TLS configs is the less error-prone way to specify the configs. (The number of current configs is the main motivation behind Issue #218 ).

## Existing issues
* #198 

## Design of the fix
For every sample benchmark and for every configuration (`config*.json`) that target Fabric there are now two versions: without and with TLS (e.g., `config.json` and `config-tls.json`). The different versions start a different kind of network: without and with TLS, respectively (e.g., `fabric.json` and `fabric-tls.json`).

## Validation of the fix
Run every sample benchmark with every Fabric-based configuration (`config*.json`).

@panyu4 @nklincoln Can you please review these changes? The core Caliper code is unchanged, only the samples have been modified.",closed,True,2018-11-18 13:21:00,2018-11-19 13:09:05
caliper,RobertDiebels,https://github.com/hyperledger/caliper/issues/219,https://api.github.com/repos/hyperledger/caliper/issues/219,doTest() does not handle promiseRejection,"<!--- Provide a general summary of the issue in the Title above -->
Once a local-client has been created and receives a message to start a test the function `doTest()` is called.
This function returns a `Promise` which can be rejected. In my case the promise is rejected when a `channel.initialize()` promise returned in `getcontext` is reject, this rejection then bubbles up. Since there is no context available due to the promise rejection the test cannot proceed.
## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
Call order:
`local-client.js -> .on('message') -> doTest() -> blockchain.getContext() -> (fabric.js).getContext -> e2eUtils.getcontext() -> channel.initialize()`

The promise returned by `channel.initialize()` [[link]( https://github.com/hyperledger/caliper/blob/7d70116f83e64dc604319440e84d79a7765c9564/src/fabric/e2eUtils.js#L510)] is rejected, then caught and wrapped in a new rejection, This rejection then bubbles up to a doTest() call [[link](https://github.com/hyperledger/caliper/blob/7d70116f83e64dc604319440e84d79a7765c9564/src/comm/client/local-client.js#L270)] after which it is not handled.

## Expected Behavior
<!--- Tell us what should happen -->
I expect Caliper either to retry obtaining the context, or to gracefully fail. It should realize the test has no context and it cannot proceed.
## Actual Behavior
<!--- Tell us what happens instead -->
Caliper only reports the UnhandledRejectionWarning then continues as if nothing happened. Even-though it cannot proceed.
## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
```
case 'test': {
                let result;
                doTest(message).then((output) => {
                    result = output;
                    return Util.sleep(200);
                }).then(() => {
                    process.send({type: 'testResult', data: result});
                }).catch((e)=>{
                    // Option one. Retry the test.
                    doTest(message)
                    // Option two. Fail the test.
                    process.send({type: 'error', data: e);
                    // Option three. 
                   process.exit(0); //This is caught in client-util.js
                });
                break;
}
```
## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->
I ran a bunch of tests and a getcontext() call ended up being rejected for not meeting the response deadline for the channel.initialize() call.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used: This bug is present in all versions of Caliper.
* Environment name and version (e.g. Chrome 39, node.js 5.4): 8+
* Operating System and version (desktop or mobile): Linux
* Link to your project:
",open,False,2018-11-16 16:15:24,2018-11-20 13:12:49
caliper,aklenik,https://github.com/hyperledger/caliper/issues/218,https://api.github.com/repos/hyperledger/caliper/issues/218,Move platform dependent properties to the network config files,"## Context
Currently, every `command.start` and `command.end` scripts in the testing-related config files (`config*.json`) are used to start and stop the DLT network under test. This makes the config files platform dependent (like `config-fabric.json`, `config-iroha.json`, `config-sawtooth.json`), while (almost) every other part is platform-independent. The same goes for the `blockchain` property in these config files. 

## Expected Behavior
The test-related config files shouldn't contain platform-specific information, just testing/round-related settings.

## Possible Fix
The network config files should have a `caliper` section. This section could contain the `start` script, `end` script and blockchain type information. Bonus: this way the network config file will contain the script that starts the appropriate network, making it easier to ensure the consistency between the network and its config.

(The test-related config files can also contain start and end scripts, but these shouldn't be used for platform-specific initialization.)",closed,False,2018-11-16 12:59:20,2019-02-14 03:28:27
caliper,aklenik,https://github.com/hyperledger/caliper/pull/217,https://api.github.com/repos/hyperledger/caliper/issues/217,Removed tape-related code,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

## Issue/User story
Resolves Issue #193 
",closed,True,2018-11-15 21:06:38,2018-11-17 09:51:03
caliper,aklenik,https://github.com/hyperledger/caliper/pull/216,https://api.github.com/repos/hyperledger/caliper/issues/216,Add Google Analytics and privacy policy,"Signed-off-by: Attila Klenik <a.klenik@gmail.com>

The PR adds:
* Google Analytics to every page of the site (through `_includes/head.html`)
* Privacy policy link to TLF privacy policy (through `_includes/header.html`)
* The GitHub and Privacy Policy links open in a new tab.

Modified site: https://aklenik.github.io/caliper/",closed,True,2018-11-09 22:00:10,2018-11-11 01:58:36
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/215,https://api.github.com/repos/hyperledger/caliper/issues/215,Add fixed feedback rate controller,"The fixed feedback rate controller will send input transactions at a fixed interval, but when too many transactions are unfinished, it will sleep a period of time.
",closed,True,2018-11-09 02:51:23,2018-11-23 11:03:08
caliper,Priyanshi52,https://github.com/hyperledger/caliper/issues/214,https://api.github.com/repos/hyperledger/caliper/issues/214,error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT,"As default image **hyperledger/fabric-peer:x86_64-1.1.0** does not support armv71 so using talium/fabric-peer:armv7l-1.0.0-beta instead same for ca and orderer. Using this image I am able to run fabric first-network successfully on Raspberry Pi 3 but getting an error while running caliper-

root@raspberrypi:/home/caliper-master# node benchmark/simple/main.js -c config.json -n fabric.json
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
Creating network ""simplenetwork_default"" with the default driver
Creating ca_peerOrg2
Creating simplenetwork_peer_1
Creating simplenetwork_ca_1
Creating orderer.example.com
Creating ca_peerOrg1
Creating peer0.org1.example.com
Creating peer1.org1.example.com
Creating peer0.org2.example.com
Creating peer1.org2.example.com
# create mychannel......
ok 1 created mychannel successfully
# Sleep 5s......
# Join channel......
# join mychannel
ok 2 Successfully joined mychannel
# install all chaincodes......
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
ok 3 Installed chaincode simple successfully in all peers
# Instantiate chaincode......
error: [Peer.js]: sendProposal - timed out after:120000
error: [Peer.js]: sendProposal - timed out after:120000
error: [Peer.js]: sendProposal - timed out after:120000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/caliper-master/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/caliper-master/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/caliper-master/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [Peer.js]: sendProposal - timed out after:120000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/caliper-master/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
not ok 4 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/home/caliper-master/src/fabric/e2eUtils.js:372:19) at <anonymous> at process._tickCallback (internal/process/next_tick.js:189:7) at Client.newDefaultKeyValueStore.then.then.then.then.then (/home/caliper-master/src/fabric/e2eUtils.js:385:15) at <anonymous> at process._tickCallback (internal/process/next_tick.js:189:7)
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/home/caliper-master/src/fabric/instantiate-chaincode.js:60:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/home/caliper-master/src/fabric/e2eUtils.js:372:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:189:7)
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/home/caliper-master/src/fabric/e2eUtils.js:385:15)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:189:7)
          at Test.assert [as _assert] (/home/caliper-master/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/caliper-master/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/caliper-master/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/caliper-master/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/home/caliper-master/src/fabric/instantiate-chaincode.js:60:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:189:7)
  ...
fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/home/caliper-master/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/home/caliper-master/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org2.example.com ... done
Stopping peer1.org2.example.com ... done
Stopping peer1.org1.example.com ... done
Stopping peer0.org1.example.com ... done
Stopping simplenetwork_ca_1 ... done
Stopping ca_peerOrg1 ... done
Stopping orderer.example.com ... done
Stopping ca_peerOrg2 ... done
Removing peer0.org2.example.com ... done
Removing peer1.org2.example.com ... done
Removing peer1.org1.example.com ... done
Removing peer0.org1.example.com ... done
Removing simplenetwork_ca_1 ... done
Removing ca_peerOrg1 ... done
Removing orderer.example.com ... done
Removing ca_peerOrg2 ... done
Removing simplenetwork_peer_1 ... done
Removing network simplenetwork_default
Error response from daemon: You cannot remove a running container a724154af83911c36b80ce8737f25d049915bb314856ecc0de8ac709f45d32e6. Stop the container before attempting removal or force remove
Error response from daemon: You cannot remove a running container 8e62f5870abf169ed3248ed8c68e094eebc0db53f4a2996081e0060d5d60230a. Stop the container before attempting removal or force remove
Error response from daemon: You cannot remove a running container deb4c95dfdc4740e296c843562b721e8c9e6ae8613926c7a288010080ecac9ea. Stop the container before attempting removal or force remove
Error response from daemon: You cannot remove a running container ba62b00c331a134bd6f32bb54bae775eb0ff6de564ed2085073866460449fa0a. Stop the container before attempting removal or force remove
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images

1..4
# tests 4
# pass  3
# fail  1",closed,False,2018-11-08 13:54:27,2019-03-04 21:06:37
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/213,https://api.github.com/repos/hyperledger/caliper/issues/213,Add readme and faviocon to github pages,"Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>

This PR is to complete the initial GitHub pages site drop, and provides the following:
- A README.md file that explains the site structure and how to add/edit pages, as well as how to host them locally to ensure changes are good prior to raising a PR
- A favicon for the site pages
- removal of unnecessary files (related to travis builds on the master branch)

",closed,True,2018-11-07 14:52:51,2018-11-27 11:16:29
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/212,https://api.github.com/repos/hyperledger/caliper/issues/212,Fix sawtooth test not exit normally,"Signed-off-by: feihujiang <jiangfeihu@huawei.com>
",closed,True,2018-11-06 06:05:58,2018-11-06 06:56:24
caliper,Priyanshi52,https://github.com/hyperledger/caliper/issues/211,https://api.github.com/repos/hyperledger/caliper/issues/211,"error: [Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: Connect Failed ","# create mychannel......
error: [Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: Connect Failed\n    at createStatusError (/home/caliper-master/node_modules/grpc/src/client.js:64:15)\n    at ClientDuplexStream._emitStatusIfDone (/home/caliper-master/node_modules/grpc/src/client.js:270:19)\n    at ClientDuplexStream._readsDone (/home/caliper-master/node_modules/grpc/src/client.js:236:8)\n    at readCallback (/home/caliper-master/node_modules/grpc/src/client.js:296:12)""
not ok 1 Failed to create channels Error: SERVICE_UNAVAILABLE at ClientDuplexStream.<anonymous> (/home/caliper-master/node_modules/fabric-client/lib/Orderer.js:136:21) at emitOne (events.js:116:13) at ClientDuplexStream.emit (events.js:211:7) at ClientDuplexStream._emitStatusIfDone (/home/caliper-master/node_modules/grpc/src/client.js:271:12) at ClientDuplexStream._readsDone (/home/caliper-master/node_modules/grpc/src/client.js:236:8) at readCallback (/home/caliper-master/node_modules/grpc/src/client.js:296:12)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/home/caliper-master/src/fabric/create-channel.js:159:19)
    stack: |-
      Error: Failed to create channels Error: SERVICE_UNAVAILABLE
          at ClientDuplexStream.<anonymous> (/home/caliper-master/node_modules/fabric-client/lib/Orderer.js:136:21)
          at emitOne (events.js:116:13)
          at ClientDuplexStream.emit (events.js:211:7)
          at ClientDuplexStream._emitStatusIfDone (/home/caliper-master/node_modules/grpc/src/client.js:271:12)
          at ClientDuplexStream._readsDone (/home/caliper-master/node_modules/grpc/src/client.js:236:8)
          at readCallback (/home/caliper-master/node_modules/grpc/src/client.js:296:12)
          at Test.assert [as _assert] (/home/caliper-master/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/caliper-master/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/caliper-master/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/caliper-master/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/home/caliper-master/src/fabric/create-channel.js:159:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:189:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/caliper-master/src/fabric/create-channel.js:160:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/caliper-master/src/fabric/create-channel.js:160:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:189:7)
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Removing peer1.org1.example.com ... done
Removing peer1.org2.example.com ... done
Removing peer0.org2.example.com ... done
Removing peer0.org1.example.com ... done
Removing ca_peerOrg2 ... done
Removing simplenetwork_peer_1 ... done
Removing orderer.example.com ... done
Removing simplenetwork_ca_1 ... done
Removing ca_peerOrg1 ... done
Removing network simplenetwork_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images

1..1
# tests 1
# pass  0
# fail  1

Running caliper on raspberry pi 3 model b.",closed,False,2018-11-01 14:24:09,2018-11-08 13:57:36
caliper,kulics,https://github.com/hyperledger/caliper/issues/210,https://api.github.com/repos/hyperledger/caliper/issues/210,How to change MaxMessageCount,"I want to change the block size for testing, but I tried to modify the configuration without success.

## Context
I changed the configuration and regenerated the corresponding file, but an exception occurred when I tried to rerun. Detailed documentation should be provided on how to modify the configuration for testing. Now I can't tell where the exception is causing the problem.

## Expected Behavior
Run correctly

## Actual Behavior
```
not ok 1 Failed to create channels Error: create status is SERVICE_UNAVAILABLE at channel.organizations.reduce.then.then.then (/home/fabric/caliper/src/fabric/create-channel.js:145:43) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
```
## Steps to Reproduce
1. change MaxMessageCount value from caliper/network/fabric/simplenetwork/.configtx.yaml
2. run 
```
configtxgen -profile TwoOrgsOrdererGenesis -outputBlock twoorgs.genesis.block
configtxgen -profile TwoOrgsChannel -outputCreateChannelTx mychannel.tx -channelID mychannel 
```
3. run main.js in caliper/benchmark/simple
```
node main.js 
```
4. then appear 
```
not ok 1 Failed to create channels Error: create status is SERVICE_UNAVAILABLE at channel.organizations.reduce.then.then.then (/home/fabric/caliper/src/fabric/create-channel.js:145:43) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/home/fabric/caliper/src/fabric/create-channel.js:159:19)
    stack: |-
      Error: Failed to create channels Error: create status is SERVICE_UNAVAILABLE
          at channel.organizations.reduce.then.then.then (/home/fabric/caliper/src/fabric/create-channel.js:145:43)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/home/fabric/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/fabric/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/fabric/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/fabric/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/home/fabric/caliper/src/fabric/create-channel.js:159:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
```

## Environment
* Version used: Fabric v1.1; Caliper vCurrent; configtxgen v1.1;
* Environment name and version: Node v8.11.3;
* Operating System and version:CentOS;
",closed,False,2018-10-31 11:06:49,2018-11-08 15:26:48
caliper,winslet,https://github.com/hyperledger/caliper/pull/209,https://api.github.com/repos/hyperledger/caliper/issues/209,New caliper website - replaces #200,"<!--- Provide a general summary of the pull request in the Title above -->

Apologies if im going about this the wrong way, but working with @nklincoln to put together a new site for Caliper.

You can see a live demo at https://winslet.github.io/caliper/

Overview of updates:
- New homepage
- New docs structure (see https://winslet.github.io/caliper/docs/1_Getting_Started.html)
- Docs have been moved out of the master branch into separate gh-pages branch, uses Jekyll to build a site from .md files.
- Updates to text, consolidating the docs into a smaller number of pages, now with direct links!

To see what you're getting:

_Homepage_
![image](https://user-images.githubusercontent.com/13980028/47445155-2b91ee00-d7b0-11e8-8d77-5fa92f64d8e6.png)

_Example docs page_
![image](https://user-images.githubusercontent.com/13980028/47445182-449a9f00-d7b0-11e8-8794-e24457897987.png)

Cheers! 🌮 
",closed,True,2018-10-31 10:48:55,2018-11-05 17:09:20
caliper,panyu4,https://github.com/hyperledger/caliper/pull/208,https://api.github.com/repos/hyperledger/caliper/issues/208,Add unified logging framework,"Signed-off-by: panyu4 <PY.panyu@huawei.com>

",closed,True,2018-10-31 01:26:08,2018-11-22 01:22:48
caliper,panyu4,https://github.com/hyperledger/caliper/issues/207,https://api.github.com/repos/hyperledger/caliper/issues/207,Add unified logging framework,"<!--- Provide a general summary of the issue in the Title above -->
## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
Currently, logging is delegated directly to the console, which mixes the progress messages and the error messages. It would be easier if the console only contained filtered and readable progress/error messages, while log files contained detailed debug/trace messages that can be shared easily as files with the team instead of copying its content into the issue description.
## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
The Node SDK created a quite nice logging mechanism utilizing winston, it could be reused in a license-compatible way.
",closed,False,2018-10-30 09:51:19,2018-11-12 23:06:11
caliper,vamdivd,https://github.com/hyperledger/caliper/issues/206,https://api.github.com/repos/hyperledger/caliper/issues/206,Failed to join peers,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

Error: Failed to join peers, TypeError: Cannot read property 'getConnectivityState' of undefined
          at EventHub._checkConnection (/etc/docker/caliper/node_modules/fabric-client/lib/EventHub.js:479:39)
          at EventHub.registerBlockEvent (/etc/docker/caliper/node_modules/fabric-client/lib/EventHub.js:658:8)
          at Promise (/etc/docker/caliper/src/fabric/join-channel.js:139:20)
          at new Promise (<anonymous>)
          at eventhubs.forEach (/etc/docker/caliper/src/fabric/join-channel.js:136:29)
          at Array.forEach (<anonymous>)
          at Client.newDefaultKeyValueStore.then.then.then.then (/etc/docker/caliper/src/fabric/join-channel.js:135:19)
          at <anonymous>
          at Test.assert [as _assert] (/etc/docker/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/etc/docker/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/etc/docker/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/etc/docker/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.catch (/etc/docker/caliper/src/fabric/join-channel.js:215:19)
          at <anonymous>

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
node v8.12.0; npm v6.4.1; node-gyp v3.8.0; Docker version 18.06.1-ce, build e68fc7a; docker-compose version 1.22.0, build f46880fe; 
* Operating System and version (desktop or mobile):
* Link to your project:
",closed,False,2018-10-30 09:20:15,2018-10-31 06:32:25
caliper,wenshuohan,https://github.com/hyperledger/caliper/issues/205,https://api.github.com/repos/hyperledger/caliper/issues/205,2-org-3-peers or 3-org-2-peers marbles，I meet this problem,"When I tested the merbles example with caliper, I tried to replace its network configuration with two organizations, each with three peers. Or three organizations, each organization has two peers, but there is such a mistake when starting the network.In my previous tests, two organizations and four nodes could run normally.
the error is:
Creating orderer.example.com ... done
bric-go.json -n ./fabric-go.json
TAP version 13
Creating couchdb.peer1.org3.example.com ... done
Creating couchdb.peer0.org3.example.com ... done
Creating peer0.org1.example.com ... done
Creating peer1.org1.example.com ... done
Creating couchdb.peer1.org2.example.com ...
Creating couchdb.peer0.org1.example.com ...
Creating ca.org2.example.com ...
Creating ca.org3.example.com ...
Creating couchdb.peer1.org3.example.com ...
Creating couchdb.peer0.org3.example.com ...
Creating couchdb.peer1.org1.example.com ...
Creating orderer.example.com ...
Creating ca.org1.example.com ...
Creating peer1.org2.example.com ...
Creating peer0.org2.example.com ...
Creating peer0.org1.example.com ...
Creating peer1.org3.example.com ...
Creating peer0.org3.example.com ...
Creating peer1.org1.example.com ...

create mychannel......
ok 1 created mychannel successfully

Sleep 5s......
Join channel......
join mychannel
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
at new createStatusError (/home/hanwenshuo/caliper/node_modules/grpc/src/client.js:64:15)
at /home/hanwenshuo/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
at new createStatusError (/home/hanwenshuo/caliper/node_modules/grpc/src/client.js:64:15)
at /home/hanwenshuo/caliper/node_modules/grpc/src/client.js:583:15
not ok 2 TypeError: Cannot read property 'stack' of undefined
operator: error
expected: |-
  undefined
actual: |-
  [TypeError: Cannot read property 'stack' of undefined]
at: process.onetime (/home/hanwenshuo/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
stack: |-
  TypeError: Cannot read property 'stack' of undefined
      at channels.reduce.then.catch (/home/hanwenshuo/caliper/src/fabric/join-channel.js:215:56)
      at <anonymous>
...

1..2

tests 2
pass 1
fail 1
this is my fabric-go.json
{
""fabric"": {
""cryptodir"": ""network/fabric/config/crypto-config"",
""network"": {
""orderer"": {
""url"": ""grpcs://localhost:7050"",
""mspid"": ""OrdererMSP"",
""domain"": ""example.com"",
""user"": {
""key"": ""network/fabric/config/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/keystore/key.pem"",
""cert"": ""network/fabric/config/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/signcerts/Admin@example.com-cert.pem""
},
""server-hostname"": ""orderer.example.com"",
""tls_cacerts"": ""network/fabric/config/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt""
},
""org1"": {
""name"": ""peerOrg1"",
""mspid"": ""Org1MSP"",
""domain"": ""org1.example.com"",
""user"": {
""key"": ""network/fabric/config/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/key.pem"",
""cert"": ""network/fabric/config/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem""
},
""ca"": {
""url"": ""https://localhost:7054"",
""name"": ""ca-org1""
},
""peer1"": {
""requests"": ""grpcs://localhost:7051"",
""events"": ""grpcs://localhost:7053"",
""server-hostname"": ""peer0.org1.example.com"",
""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt""
},
""peer2"": {
""requests"": ""grpcs://localhost:7057"",
""events"": ""grpcs://localhost:7059"",
""server-hostname"": ""peer1.org1.example.com"",
""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt""
}
},
""org2"": {
""name"": ""peerOrg2"",
""mspid"": ""Org2MSP"",
""domain"": ""org2.example.com"",
""ca"": {
""url"": ""https://localhost:8054"",
""name"": ""ca-org2""
},
""peer1"": {
""requests"": ""grpcs://localhost:8051"",
""events"": ""grpcs://localhost:8053"",
""server-hostname"": ""peer0.org2.example.com"",
""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt""
},
""peer2"": {
""requests"": ""grpcs://localhost:8057"",
""events"": ""grpcs://localhost:8059"",
""server-hostname"": ""peer1.org2.example.com"",
""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt""
}
},
""org3"": {
""name"": ""peerOrg3"",
""mspid"": ""Org3MSP"",
""domain"": ""org3.example.com"",
""ca"": {
""url"": ""https://localhost:9054"",
""name"": ""ca-org3""
},
""peer1"": {
""requests"": ""grpcs://localhost:9051"",
""events"": ""grpcs://localhost:9053"",
""server-hostname"": ""peer0.org3.example.com"",
""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt""
},
""peer2"": {
""requests"": ""grpcs://localhost:9057"",
""events"": ""grpcs://localhost:9059"",
""server-hostname"": ""peer1.org3.example.com"",
""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/tls/ca.crt""
}
}
},
""channel"": [
{
""name"": ""mychannel"",
""config"": ""network/fabric/config/mychannel.tx"",
""organizations"": [""org1"", ""org2"", ""org3""],
""deployed"": false
}
],
""chaincodes"": [{""id"": ""marbles"", ""path"": ""contract/fabric/marbles/go"", ""language"":""golang"", ""version"": ""v1"", ""channel"": ""mychannel"", ""metadataPath"": ""src/contract/fabric/marbles/go/metadata""}],
""endorsement-policy"": {
""identities"": [
{
""role"": {
""name"": ""member"",
""mspId"": ""Org1MSP""
}
},
{
""role"": {
""name"": ""member"",
""mspId"": ""Org2MSP""
}
},
{
""role"": {
""name"": ""admin"",
""mspId"": ""Org1MSP""
}
}
],
""policy"": { ""2-of"": [{""signed-by"": 0}, {""signed-by"": 1}]}
},
""context"": {
""init"": ""mychannel"",
""read"": ""mychannel"",
""transfer"": ""mychannel"",
""query"": ""mychannel""
}
},
""info"" : {
""Version"": ""1.1.0"",
""Size"": ""6 Peers"",
""Orderer"": ""Solo"",
""Distribution"": ""Single Host""
}
}

this is my config-fabric-go.json
{
""blockchain"": {
""type"": ""fabric"",
""config"": ""benchmark/marbletest/fabric-go.json""
},
""command"" : {
""start"": ""docker-compose -f network/fabric/3-org-2-peer/docker-compose-tls.yaml up -d"",
""end"" : ""docker-compose -f network/fabric/3-org-2-peer/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)""
},
""test"": {
""clients"": {
""type"": ""local"",
""number"": 5
},
""rounds"": [{
""label"" : ""init"",
""txNumber"" : [500, 500, 500, 500, 500],
""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 25}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 35}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 45}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 55}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 65}}],
""callback"" : ""benchmark/marbletest/init.js""
},
{
""label"" : ""read"",
""txNumber"" : [500, 500, 500, 500, 500],
""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 50}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 60}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 70}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 80}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 90}}],
""callback"" : ""benchmark/marbletest/read.js""
},
{
""label"" : ""transfer"",
""txNumber"" : [500, 500, 500, 500, 500],
""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 25}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 35}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 45}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 55}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 65}}],
""callback"" : ""benchmark/marbletest/transfer.js""
},
{
""label"" : ""query"",
""txNumber"" : [20, 20, 20, 20, 20],
""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 4}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 6}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 8}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 10}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 12}}],
""callback"" : ""benchmark/marbletest/query.js""
}]
},
""monitor"": {
""type"": [""docker"", ""process""],
""docker"":{
""name"": [""all""]
},
""process"": [
{
""command"" : ""node"",
""arguments"" : ""local-client.js"",
""multiOutput"" : ""avg""
}
],
""interval"": 1

my Environment
ubuntu 14.04(64bit)
fabric 1.1.0
nodejs 8.11.4
docker 18.06
docker-compose 1.18.0
This is my first time to ask questions and look forward to a reply.<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1.
2.
3.
4.

## Existing issues
<!-- Have you searched for any existing issues or are their any similar issues that you've found? -->
- [ ] [Stack Overflow issues](http://stackoverflow.com/tags/hyperledger-caliper)
- [ ] [GitHub Issues](https://github.com/hyperledger/caliper/issues)
- [ ] [Rocket Chat history](https://chat.hyperledger.org/channel/caliper)

<!-- please include any links to issues here -->

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Environment name and version (e.g. Chrome 39, node.js 5.4):
* Operating System and version (desktop or mobile):
* Link to your project:
",open,False,2018-10-29 12:31:09,2019-03-04 21:14:26
caliper,wenshuohan,https://github.com/hyperledger/caliper/issues/204,https://api.github.com/repos/hyperledger/caliper/issues/204,error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed     at new createStatusError (/home/hanwenshuo/caliper/node_modules/grpc/src/client.js:64:15)     at /home/hanwenshuo/caliper/node_modules/grpc/src/client.js:583:15,"When I tested the merbles example with caliper, I tried to replace its network configuration with two organizations, each with three peers. Or three organizations, each organization has two peers, but there is such a mistake when starting the network.In my previous tests, two organizations and four nodes could run normally.
the error is:
Creating orderer.example.com ... done
bric-go.json -n ./fabric-go.json
TAP version 13
Creating couchdb.peer1.org3.example.com ... done
Creating couchdb.peer0.org3.example.com ... done
Creating peer0.org1.example.com ... done
Creating peer1.org1.example.com ... done
Creating couchdb.peer1.org2.example.com ... 
Creating couchdb.peer0.org1.example.com ... 
Creating ca.org2.example.com ... 
Creating ca.org3.example.com ... 
Creating couchdb.peer1.org3.example.com ... 
Creating couchdb.peer0.org3.example.com ... 
Creating couchdb.peer1.org1.example.com ... 
Creating orderer.example.com ... 
Creating ca.org1.example.com ... 
Creating peer1.org2.example.com ... 
Creating peer0.org2.example.com ... 
Creating peer0.org1.example.com ... 
Creating peer1.org3.example.com ... 
Creating peer0.org3.example.com ... 
Creating peer1.org1.example.com ... 
# create mychannel......
ok 1 created mychannel successfully
# Sleep 5s......
# Join channel......
# join mychannel
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
    at new createStatusError (/home/hanwenshuo/caliper/node_modules/grpc/src/client.js:64:15)
    at /home/hanwenshuo/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
    at new createStatusError (/home/hanwenshuo/caliper/node_modules/grpc/src/client.js:64:15)
    at /home/hanwenshuo/caliper/node_modules/grpc/src/client.js:583:15
not ok 2 TypeError: Cannot read property 'stack' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'stack' of undefined]
    at: process.onetime (/home/hanwenshuo/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'stack' of undefined
          at channels.reduce.then.catch (/home/hanwenshuo/caliper/src/fabric/join-channel.js:215:56)
          at <anonymous>
  ...

1..2
# tests 2
# pass  1
# fail  1


this is my fabric-go.json
{
  ""fabric"": {
    ""cryptodir"": ""network/fabric/config/crypto-config"",
    ""network"": {
      ""orderer"": {
        ""url"": ""grpcs://localhost:7050"",
        ""mspid"": ""OrdererMSP"",
        ""domain"": ""example.com"",
        ""user"": {
          ""key"": ""network/fabric/config/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/keystore/key.pem"",
          ""cert"": ""network/fabric/config/crypto-config/ordererOrganizations/example.com/users/Admin@example.com/msp/signcerts/Admin@example.com-cert.pem""
        },
        ""server-hostname"": ""orderer.example.com"",
        ""tls_cacerts"": ""network/fabric/config/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt""
      },
      ""org1"": {
        ""name"": ""peerOrg1"",
        ""mspid"": ""Org1MSP"",
        ""domain"": ""org1.example.com"",
        ""user"": {
          ""key"": ""network/fabric/config/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/key.pem"",
          ""cert"": ""network/fabric/config/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem""
        },
        ""ca"": {
          ""url"": ""https://localhost:7054"",
          ""name"": ""ca-org1""
        },
        ""peer1"": {
          ""requests"": ""grpcs://localhost:7051"",
          ""events"": ""grpcs://localhost:7053"",
          ""server-hostname"": ""peer0.org1.example.com"",
          ""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt""
        },
         ""peer2"": {
          ""requests"": ""grpcs://localhost:7057"",
          ""events"": ""grpcs://localhost:7059"",
          ""server-hostname"": ""peer1.org1.example.com"",
          ""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt""
        }
      },
      ""org2"": {
        ""name"": ""peerOrg2"",
        ""mspid"": ""Org2MSP"",
        ""domain"": ""org2.example.com"",
        ""ca"": {
          ""url"": ""https://localhost:8054"",
          ""name"": ""ca-org2""
        },
        ""peer1"": {
          ""requests"": ""grpcs://localhost:8051"",
          ""events"": ""grpcs://localhost:8053"",
          ""server-hostname"": ""peer0.org2.example.com"",
          ""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt""
        },
        ""peer2"": {
          ""requests"": ""grpcs://localhost:8057"",
          ""events"": ""grpcs://localhost:8059"",
          ""server-hostname"": ""peer1.org2.example.com"",
          ""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt""
        }
      },
      ""org3"": {
        ""name"": ""peerOrg3"",
        ""mspid"": ""Org3MSP"",
        ""domain"": ""org3.example.com"",
        ""ca"": {
          ""url"": ""https://localhost:9054"",
          ""name"": ""ca-org3""
        },
        ""peer1"": {
          ""requests"": ""grpcs://localhost:9051"",
          ""events"": ""grpcs://localhost:9053"",
          ""server-hostname"": ""peer0.org3.example.com"",
          ""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt""
        },
        ""peer2"": {
          ""requests"": ""grpcs://localhost:9057"",
          ""events"": ""grpcs://localhost:9059"",
          ""server-hostname"": ""peer1.org3.example.com"",
          ""tls_cacerts"": ""network/fabric/config/crypto-config/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/tls/ca.crt""
        }
      }
    },
    ""channel"": [
      {
        ""name"": ""mychannel"",
        ""config"": ""network/fabric/config/mychannel.tx"",
        ""organizations"": [""org1"", ""org2"", ""org3""],
        ""deployed"": false
      }
    ],
    ""chaincodes"": [{""id"": ""marbles"", ""path"": ""contract/fabric/marbles/go"", ""language"":""golang"", ""version"": ""v1"", ""channel"": ""mychannel"", ""metadataPath"": ""src/contract/fabric/marbles/go/metadata""}],
    ""endorsement-policy"": {
      ""identities"": [
        {
          ""role"": {
            ""name"": ""member"",
            ""mspId"": ""Org1MSP""
          }
        },
        {
          ""role"": {
            ""name"": ""member"",
            ""mspId"": ""Org2MSP""
          }
        },
        {
          ""role"": {
            ""name"": ""admin"",
            ""mspId"": ""Org1MSP""
          }
        }
      ],
      ""policy"": { ""2-of"": [{""signed-by"": 0}, {""signed-by"": 1}]}
    },
    ""context"": {
      ""init"": ""mychannel"",
      ""read"": ""mychannel"",
      ""transfer"": ""mychannel"",
      ""query"": ""mychannel""
    }
  },
  ""info"" : {
    ""Version"": ""1.1.0"",
    ""Size"": ""6 Peers"",
    ""Orderer"": ""Solo"",
    ""Distribution"": ""Single Host""
  }
}


this is my config-fabric-go.json
{
  ""blockchain"": {
    ""type"": ""fabric"",
    ""config"": ""benchmark/marbletest/fabric-go.json""
  },
  ""command"" : {
    ""start"": ""docker-compose -f network/fabric/3-org-2-peer/docker-compose-tls.yaml up -d"",
    ""end"" : ""docker-compose -f network/fabric/3-org-2-peer/docker-compose-tls.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)""
  },
  ""test"": {
    ""clients"": {
      ""type"": ""local"",
      ""number"": 5
    },
    ""rounds"": [{
        ""label"" : ""init"",
        ""txNumber"" : [500, 500, 500, 500, 500],
        ""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 25}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 35}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 45}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 55}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 65}}],
        ""callback"" : ""benchmark/marbletest/init.js""
      },
      {
	""label"" : ""read"",
        ""txNumber"" : [500, 500, 500, 500, 500],
        ""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 50}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 60}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 70}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 80}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 90}}],
        ""callback"" : ""benchmark/marbletest/read.js""
      },
      {
	""label"" : ""transfer"",
        ""txNumber"" : [500, 500, 500, 500, 500],
        ""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 25}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 35}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 45}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 55}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 65}}],
        ""callback"" : ""benchmark/marbletest/transfer.js""
      },
      {
        ""label"" : ""query"",
        ""txNumber"" : [20, 20, 20, 20, 20],
        ""rateControl"" : [{""type"": ""fixed-rate"", ""opts"": {""tps"" : 4}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 6}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 8}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 10}}, {""type"": ""fixed-rate"", ""opts"": {""tps"" : 12}}],
        ""callback"" : ""benchmark/marbletest/query.js""
      }]
  },
  ""monitor"": {
    ""type"": [""docker"", ""process""],
    ""docker"":{
      ""name"": [""all""]
    },
    ""process"": [
      {
        ""command"" : ""node"",
        ""arguments"" : ""local-client.js"",
        ""multiOutput"" : ""avg""
      }
    ],
    ""interval"": 1



my Environment
ubuntu 14.04(64bit)
fabric 1.1.0
nodejs 8.11.4
docker 18.06
docker-compose 1.18.0
This is my first time to ask questions and look forward to a reply.",open,False,2018-10-29 08:25:25,2019-03-04 21:17:49
caliper,bitpeng,https://github.com/hyperledger/caliper/pull/203,https://api.github.com/repos/hyperledger/caliper/issues/203,fix a bug of monitor.js,"in line 112 of file `src/comm/monitor.js`, it should check whether  `monitorTypes` is not defined, not the `m` which has been checked in line 107.",closed,True,2018-10-29 06:02:14,2018-10-30 11:56:43
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/202,https://api.github.com/repos/hyperledger/caliper/issues/202,Use unified config framework,"Using nconf to adopt a unified configuration system.
",closed,True,2018-10-27 03:21:07,2018-11-06 10:13:53
caliper,kite007,https://github.com/hyperledger/caliper/issues/201,https://api.github.com/repos/hyperledger/caliper/issues/201,NO_NODE: Exception: NO_NODE[-101],"<!--- Provide a general summary of the issue in the Title above -->
NO_NODE: Exception: NO_NODE[-101]

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
I am trying to run benchmark with Distributed Clients(using zookeeper).
(my environment)
1. host 1~host 5: Fabric Network
-   host 1: Orderer, Kafka, zookeeper
-   host 2: Peer1
-   host 3: Peer2
-   host 4: Peer3
-   host 5: Peer4
2. host 6: Zookeeper for Caliper (ex: ip 192.168.10.100)
3. host 7: Caliper Clients (clientsPerHosts: 5)
3. host 8: Caliper Clients (clientsPerHosts: 5)

I ran 'npm run starclient -- 192.168.10.100:2181' in terminal#1 and 'node benchmark/fabric/main.js' in terminal#2 on host7.
I ran 'npm run starclient -- 192.168.10.100:2181' in terminal#1 and 'node benchmark/fabric/main.js' in terminal#2 on host8.

Is it right?

I got error messages irregularly in this situation.
NO_NODE: Exception: NO_NODE[-101]
.....

I searched it on google. 
""NO_NODE means that requested node does not exist.""
I don't know it. 

Do you guide me how to install and config zookeeper for Caliper? 

For referene, 
I succeeded to run benchmark on distributed clients with only host7 without host8 .
It works well. 

## Expected Behavior
<!--- Tell us what should happen -->

## Actual Behavior
<!--- Tell us what happens instead -->
[Transaction Info] - Submitted: 1010 Succ: 1010 Fail:0 Unfinished:0
NO_NODE: Exception: NO_NODE[-101]
    at ConnectionManager.onSocketData (/home/fabric/testformimas/caliper/node_modules/node-zookeeper-client/lib/ConnectionManager.js:570:35)
    at emitOne (events.js:116:13)
    at Socket.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at Socket.Readable.push (_stream_readable.js:208:10)
    at TCP.onread (net.js:597:20)

## Context
<!--- How has this bug affected you? What were you trying to accomplish? -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Ubuntu 16.04.5 LTS
* Fabric v1.2
* Zookeeper for Caliper : zookeeper-3.4.12
* node v8.11.4
* npm v5.6.0
",open,False,2018-10-25 04:49:01,2019-03-04 21:20:02
caliper,winslet,https://github.com/hyperledger/caliper/pull/200,https://api.github.com/repos/hyperledger/caliper/issues/200,New website for Caliper (including docs),"<!--- Provide a general summary of the pull request in the Title above -->

Apologies if im going about this the wrong way, but working with @nklincoln to put together a new site for Caliper.

You can see a live demo at https://winslet.github.io/caliper/

Overview of updates:
- New homepage
- New docs structure (see https://winslet.github.io/caliper/docs/1_Getting_Started.html)
- Docs have been moved out of the master branch into separate gh-pages branch, uses Jekyll to build a site from .md files.
- Updates to text, consolidating the docs into a smaller number of pages, now with direct links!

To see what you're getting:

_Homepage_
![image](https://user-images.githubusercontent.com/13980028/47445155-2b91ee00-d7b0-11e8-8d77-5fa92f64d8e6.png)

_Example docs page_
![image](https://user-images.githubusercontent.com/13980028/47445182-449a9f00-d7b0-11e8-8794-e24457897987.png)

Cheers! 🌮 
",closed,True,2018-10-24 16:14:46,2018-10-31 10:49:47
caliper,luigima,https://github.com/hyperledger/caliper/issues/199,https://api.github.com/repos/hyperledger/caliper/issues/199,Fabric query invocations depend on the block time parameter ,"<!--- Provide a general summary of the issue in the Title above -->
Queries on the blockchain are typically not sent to the orderer service since no change to the world state is done. Yes, you could do that in order to proof knowledge but in general this is not desired. 
So if I want to query the world state I would simply query the state database in a direct way. In Caliper, however, it seems that a query is endorsed and processed just like write transactions.
   
## Expected Behavior
Benchmarking a query function should be performed instantly without any block time latency.

## Actual Behavior
<!--- Tell us what happens instead -->
Query functions are incompleted until a new block is created.
 
## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
1. Increase the parameters sufficiently:
- BatchTimeout: 120s 
- MaxMessageCount: 99999
- AbsoluteMaxBytes: 500 MB
- PreferredMaxBytes: 500 MB
3. Create a benchmark that performes queries with a sufficient timeout parameter. The queries will be in a pending state for up to two minutes.",open,False,2018-10-23 14:12:53,2019-03-04 21:21:03
caliper,aklenik,https://github.com/hyperledger/caliper/issues/198,https://api.github.com/repos/hyperledger/caliper/issues/198,Docker network default name error,"<!--- Provide a general summary of the issue in the Title above -->

## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
The example `docker-compose` network files don't specify a network name explicitly. The default name is derived from the directory name where the compose file resides. Some versions of `docker-compose` (e.g., `1.22.0`) leave that name as-is (with dashes for example), while older versions (e.g., `1.18.0`) remove the dashes from the directory name. 

The network names set for the peers use the dash-less naming, e.g., `CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=2org1peer_default`, but this network won't exist with newer `docker-compose` versions, because they will create a `2-org-1-peer_default` network.

## Expected Behavior
<!--- Tell us what should happen -->
The benchmark should complete successfully. 

## Actual Behavior
<!--- Tell us what happens instead -->
```
ok 3 Installed chaincode marbles successfully in all peers
# Instantiate chaincode......
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: error starting container: API error (404): {""message"":""network 2org1peer_default not found""}
    
at new createStatusError (/home/klenik/projects/caliper-master/node_modules/grpc/src/client.js:64:15)
    at /home/klenik/projects/caliper-master/node_modules/grpc/src/client.js:583:15
```

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
Newer docker-compose file versions (from 3.5) support explicit network names. But a more backward compatible solution would be to avoid dashes in the directory names containing `docker-compose` files.

## Steps to Reproduce
Make sure you have, for example, the following `docker-compose` version installed:
`docker-compose version 1.22.0, build f46880fe`

<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
In the Caliper directory:
1. `npm install`
2. `npm install grpc@1.10.1 fabric-ca-client@1.1.0 fabric-client@1.1.0`
3. `cd benchmark/marbles`
4. `node main.js -c config-fabric-go.json`

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used: `master@b9d4db2`
* Environment name and version: `Node.js v8.11.4`, `go version go1.10.4 linux/amd64`, `Docker version 18.06.1-ce, build e68fc7a`, `docker-compose version 1.22.0, build f46880fe`
* Operating System and version: Ubuntu 18.04 LTS
",closed,False,2018-10-19 14:05:19,2018-11-19 13:09:27
caliper,cao0507,https://github.com/hyperledger/caliper/issues/197,https://api.github.com/repos/hyperledger/caliper/issues/197,Some questions about the endorsement policy.,"`""endorsement-policy"": {                                                   
      ""identities"": [
        {
          ""role"": {
            ""name"": ""member"",
            ""mspId"": ""Org1MSP""                                                
          }                                                                   
        },
        { 
          ""role"": {
            ""name"": ""member"",                                                 
            ""mspId"": ""Org2MSP""                                                
          }
        },
        { 
          ""role"": {
            ""name"": ""admin"",
            ""mspId"": ""Org1MSP""                                                
          }                                                                   
        }
      ],
      ""policy"": { ""2-of"": [{""signed-by"": 0}, {""signed-by"": 1}]}               
    }`
- Why Org2 don't contain the ""admin"" role? 
- What's the meaning of ""2-of""? Does this mean ""AND"" or ""OR""? And how to express ""AND"" ""OR"" ""N-OutOf"" ?
- And what's the meaning of ""signed-by"": 0 and ""signed-by"": 1 ? What is ""0"" and ""1""?",closed,False,2018-10-18 02:30:29,2019-02-01 03:33:19
caliper,panyu4,https://github.com/hyperledger/caliper/pull/196,https://api.github.com/repos/hyperledger/caliper/issues/196,Fix not exited normally,Signed-off-by: panyu4 <PY.panyu@huawei.com>,closed,True,2018-10-18 02:30:12,2018-11-22 01:33:09
caliper,rupc,https://github.com/hyperledger/caliper/issues/195,https://api.github.com/repos/hyperledger/caliper/issues/195,How to disable TLS?,"Hi, I want to run benchmark on test network which has non-TLS enabled.
I configured TLS_ENABLE options for each ca, orderer and peer in docker-compose.yaml in 
 network/fabric/simplenetwork. 
But after launching ""node benchmark/simplenetwork/main, I got following errors.

```
 Creating peer1.org1.example.com ... done
# create mychannel......
E1018 10:57:49.422421682    2748 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number.
error: [Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: Connect Failed\n    at createStatusError (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)\n    at ClientDuplexStream._emitStatusIfDone (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:270:19)\n    at ClientDuplexStream._readsDone (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:236:8)\n    at readCallback (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:296:12)""
not ok 1 Failed to create channels Error: SERVICE_UNAVAILABLE at ClientDuplexStream.<anonymous> (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Orderer.js:136:21) at emitOne (events.js:116:13) at ClientDuplexStream.emit (events.js:211:7) at ClientDuplexStream._emitStatusIfDone (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:271:12) at ClientDuplexStream._readsDone (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:236:8) at readCallback (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:296:12)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/home/jyr/go/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:159:19)
    stack: |-
      Error: Failed to create channels Error: SERVICE_UNAVAILABLE
          at ClientDuplexStream.<anonymous> (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Orderer.js:136:21)
          at emitOne (events.js:116:13)
          at ClientDuplexStream.emit (events.js:211:7)
          at ClientDuplexStream._emitStatusIfDone (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:271:12)
          at ClientDuplexStream._readsDone (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:236:8)
          at readCallback (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:296:12)
          at Test.assert [as _assert] (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/jyr/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/home/jyr/go/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:159:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/jyr/go/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:160:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/jyr/go/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:160:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
```

It seems that client side will be needed to be configured not to use TLS. 
How do I succeed at using non-TLS network in caliper? ",closed,False,2018-10-18 02:01:38,2019-01-15 05:22:09
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/194,https://api.github.com/repos/hyperledger/caliper/issues/194,add issue and PR templates,"Add two templates:
- Issue
- PR

The two templates must be named accordingly and delivered into the project root directory, docs directory, or hidden `.github` dir .... I chose the first option!

Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>",closed,True,2018-10-17 09:33:30,2018-11-27 11:15:29
caliper,aklenik,https://github.com/hyperledger/caliper/issues/193,https://api.github.com/repos/hyperledger/caliper/issues/193,Remove the tape tests from the benchmark flow,"Currently, the main benchmark flow in `src/comm/bench-flow.js` (and other parts) are mixed with the `tape` module. Should remove these from the non-test codes. ",closed,False,2018-10-17 09:29:09,2018-11-18 13:21:37
caliper,aklenik,https://github.com/hyperledger/caliper/issues/192,https://api.github.com/repos/hyperledger/caliper/issues/192,Refactoring Promise chains to async/await,"Advantages of the async/await pattern:
1. Makes the code more readable.
1. Results in cleaner error messages and stack traces, simplifying debugging.
1. Simplifies error handling to the traditional try-catch pattern.

The refactoring should be started from the `run` function of the `src/comm/bench-flow.js` module.
(Note: the Fabric adapter will soon be upgraded to resolve multiple issues, so refactoring that subsystem is not necessary.)
",open,False,2018-10-17 09:25:44,2018-10-17 09:25:44
caliper,mtrubs,https://github.com/hyperledger/caliper/pull/191,https://api.github.com/repos/hyperledger/caliper/issues/191,Moved the batch builder factory configuration into the sawtooth.json configuration files,https://github.com/hyperledger/caliper/issues/189,closed,True,2018-10-15 14:57:45,2018-10-18 07:56:45
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/190,https://api.github.com/repos/hyperledger/caliper/issues/190,Changed the sawtooth adapter to take multiple rest end points,Signed-off-by: Ramakrishna Srinivasamurthy ramakrishna.srinivasamurthy@intel.com,closed,True,2018-10-15 10:10:29,2018-10-16 06:49:14
caliper,mtrubs,https://github.com/hyperledger/caliper/issues/189,https://api.github.com/repos/hyperledger/caliper/issues/189,Sawtooth: BatchBuilderFactory - Custom Batch Builders,"I was looking at the `sample` and `smallbank` sawtooth examples. I noticed that they have all their configuration in the `benchmark/*` directories. This is great and isolated. However, there is one file for each in `src/sawtooth/Application/*BatchBuilder.js`.

Is the intention to clone and modify the caliper project vs having a new project with caliper as an npm dependency? I do not see any other way to add a new `BatchBuilder` for specific use cases. I can happily add a `BatchBuilderFactory.register` or something to that end. But thought I would check first before implementing something and issuing a PR.",closed,False,2018-10-12 13:10:51,2018-11-28 01:16:53
caliper,panyu4,https://github.com/hyperledger/caliper/pull/188,https://api.github.com/repos/hyperledger/caliper/issues/188,Fix length undefined,Signed-off-by: panyu4 <PY.panyu@huawei.com>,closed,True,2018-10-12 06:25:58,2018-11-22 01:32:04
caliper,aklenik,https://github.com/hyperledger/caliper/pull/187,https://api.github.com/repos/hyperledger/caliper/issues/187,Fixed composite rate controller logic and docs.,"Adjusted the composite rate controller to the new environment semantics as detailed by Issue #142.
The virtualization mechanism is not totally transparent now, but without passing more information to the rate controllers, this is the only way. Updated the docs accordingly.

@panyu4 since Nick has already fixed the PID controller, if this PR is accepted, then the issue can be closed.

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-10-11 21:16:47,2018-10-15 10:52:20
caliper,aklenik,https://github.com/hyperledger/caliper/pull/186,https://api.github.com/repos/hyperledger/caliper/issues/186,Clarified Fabric SDK install instructions in docs,Signed-off-by: Attila Klenik <a.klenik@gmail.com>,closed,True,2018-10-11 09:42:11,2018-10-11 12:53:10
caliper,luigima,https://github.com/hyperledger/caliper/issues/185,https://api.github.com/repos/hyperledger/caliper/issues/185,Support for Fabric versions above 1.1,"I am currently working on a Fabric network that leverages private data collections that are only available from Fabric v1.2+. Unfortunately I did not manage to get caliper working with versions above 1.1 yet. Are there any tips or workarounds available? Are there any plans to support newer versions and if so, what is the current state? 

Adjusting the versions of fabric-client and fabric-ca-client while using the correct docker images did not work. I get invalid endorsement system chaincode errors while instantiating.  
",closed,False,2018-10-10 12:25:38,2019-03-04 20:42:58
caliper,panyu4,https://github.com/hyperledger/caliper/pull/184,https://api.github.com/repos/hyperledger/caliper/issues/184,Fix typo and eslint error,Signed-off-by: panyu4 <PY.panyu@huawei.com>,closed,True,2018-10-10 09:05:05,2018-11-22 01:31:37
caliper,wangzichichi,https://github.com/hyperledger/caliper/issues/183,https://api.github.com/repos/hyperledger/caliper/issues/183,Can you support tronprotocol?,"Hello，I am a block chain development enthusiasts.
Recently, I found tronprotocol support smart contract right now. 
Do you have plan to support tronprotocol in your project?
The tronprotocol url is below:
https://github.com/tronprotocol/java-tron",closed,False,2018-10-09 09:20:23,2018-11-14 22:58:02
caliper,panyu4,https://github.com/hyperledger/caliper/pull/182,https://api.github.com/repos/hyperledger/caliper/issues/182,Set txnPerBatch default value,Signed-off-by: panyu4 <PY.panyu@huawei.com>,closed,True,2018-10-09 08:08:35,2018-11-22 01:31:21
caliper,cao0507,https://github.com/hyperledger/caliper/issues/181,https://api.github.com/repos/hyperledger/caliper/issues/181,How to benchmark a multi-hosts fabric network?,"In default, all the peers/orderer/CAs are run in the single host, but I want to spread these nodes to different hosts, so how to do that? Any advises would be appreciated !",closed,False,2018-10-09 02:57:56,2019-02-19 09:21:48
caliper,modood,https://github.com/hyperledger/caliper/pull/180,https://api.github.com/repos/hyperledger/caliper/issues/180,Replace EventHub by the much improved Channel Event Service,"Since 'old' event hub is removed in fabric v1.3.0, The EventHub functionality was replaced by the much improved Channel Event Service in fabric v1.1.0. (Refer to [FAB-11122](https://jira.hyperledger.org/browse/FAB-11122))

So we must switch to the channel event service before upgrading peers or sdk.

Signed-off-by: modood <modood@qq.com>",closed,True,2018-09-28 02:06:55,2018-09-30 01:15:58
caliper,panyu4,https://github.com/hyperledger/caliper/pull/179,https://api.github.com/repos/hyperledger/caliper/issues/179,Add empty line,Signed-off-by: panyu4 <PY.panyu@huawei.com>,closed,True,2018-09-27 09:09:16,2018-11-22 01:31:00
caliper,litx,https://github.com/hyperledger/caliper/issues/175,https://api.github.com/repos/hyperledger/caliper/issues/175,"chaincode error (status: 500, message:  is not a valid endorsement system chaincode)","node -v
v8.11.4

npm -v
5.6.0

github.com/hyperledger/caliper
run 
node ./benchmark/simple/main.js -c ./config.json -n ./fabric.json

# Instantiate chaincode......
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/opt/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/opt/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/opt/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/opt/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
not ok 4 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/opt/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19) at <anonymous> at Client.newDefaultKeyValueStore.then.then.then.then.then (/opt/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15) at <anonymous>
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/opt/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/opt/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19)
          at <anonymous>
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/opt/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15)
          at <anonymous>
          at Test.assert [as _assert] (/opt/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/opt/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
          at <anonymous>
  ...
fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/opt/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/opt/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>",closed,False,2018-09-12 09:47:30,2018-10-10 06:41:33
caliper,knurherb,https://github.com/hyperledger/caliper/issues/174,https://api.github.com/repos/hyperledger/caliper/issues/174,Cannot specify config file in 'npm test' command while running caliper,"According to the [documentation](https://github.com/hyperledger/caliper), caliper can be run alternatively by issuing an `npm test` command while also specifying a config file as well as fabric-config file through the command like so:

```
npm test -- simple -c ./benchmark/simple/config.json -n ./benchmark/simple/fabric.json
```

The test was able to run successfully and generated the .html report within the `benchmark` folder of the `simple` fabric caliper test. However, the test ran with its default config and fabric config file. Thus, I executed the default `simple` test instead of the tests defined in my own config files. I attempted to use the same fabric config file so the command I executed was : 

```
node benchmark/simple/main.js  -c ./benchmark/simple/my-own-config.json
```
As an additional note, Executing the test without `npm` yield expected results, but the .html file was generated within the root of the caliper folder.",closed,False,2018-09-06 08:35:21,2018-11-27 14:04:01
caliper,PoormaJin,https://github.com/hyperledger/caliper/issues/173,https://api.github.com/repos/hyperledger/caliper/issues/173,Instantiate chaincode error,"iMac-2:simple rjj$ node -v
v8.11.4
iMac-2:simple rjj$ npm -v
5.6.0
```
# Instantiate chaincode......
error: [Peer.js]: sendProposal - timed out after:1020000
error: [Peer.js]: sendProposal - timed out after:1020000
error: [Peer.js]: sendProposal - timed out after:1020000
error: [Peer.js]: sendProposal - timed out after:1020000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
not ok 4 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7) at Client.newDefaultKeyValueStore.then.then.then.then.then (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:372:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:15)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/Users/rjj/go/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:60:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/Users/rjj/go/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)

```

I tried to change request_time, but time out appeared anyway. Is there any other reason for this problem?


",closed,False,2018-09-05 08:35:56,2018-11-15 12:20:03
caliper,ml16a6a,https://github.com/hyperledger/caliper/issues/172,https://api.github.com/repos/hyperledger/caliper/issues/172,Calculate the Execution Time in Hyperledger Caliper,"Hi all,
How I can calculate the execution time for every round since I got the latency and throughput !?",open,False,2018-09-03 13:51:35,2018-11-27 14:21:41
caliper,jamievaravara,https://github.com/hyperledger/caliper/issues/171,https://api.github.com/repos/hyperledger/caliper/issues/171,Help using kafka for the ordering node,"I am following [this guide](https://hyperledger-fabric.readthedocs.io/en/release-1.2/kafka.html) to create a orderer that uses kafka. However, I am stuck at point seven, as I cannot find the orderer.yaml file. 
Does anybody know where can I find it?

Is this file located inside of the docker containers created by caliper?
Can I create my own? How can I make caliper consume this file when creating the docker containers?",closed,False,2018-08-30 15:14:11,2018-11-14 22:52:16
caliper,modood,https://github.com/hyperledger/caliper/pull/170,https://api.github.com/repos/hyperledger/caliper/issues/170,Resolve absolute path of config file for fabric simple network,"Resolve absolute path of config file for fabric simple network

This should be valid:

```
$ node benchmark/simple/main.js -c /path/to/yourconfig.json -n /path/to/yournetwork.json
```
benchmark/simple/config.json:
```
{
  ""blockchain"": {
    ""type"": ""fabric"",
    ""config"": ""/path/to/yournetwork.json""
  }
}
```

Signed-off-by: modood <modood@qq.com>",closed,True,2018-08-29 04:14:30,2018-10-08 11:45:35
caliper,sudhakaran25,https://github.com/hyperledger/caliper/issues/169,https://api.github.com/repos/hyperledger/caliper/issues/169,Hey I am getting the following error while starting the business network for multiple organization,"Start Business Network ...
Starting business network animaltracking-network at version 0.2.6-deploy.0

Processing these Network Admins: 
	userName: Org1
	userName: Org2

✖ Starting business network definition. This may take a minute...
Error: Error trying to start business network. Error: No valid responses from any peers.
Response from attempted peer comms was an error: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
Response from attempted peer comms was an error: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
Response from attempted peer comms was an error: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
Response from attempted peer comms was an error: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
Command failed

",closed,False,2018-08-28 02:03:39,2018-10-10 06:52:32
caliper,dharuq,https://github.com/hyperledger/caliper/issues/168,https://api.github.com/repos/hyperledger/caliper/issues/168,SyntaxError: Unexpected end of JSON input & ERR_IPC_CHANNEL_CLOSED,"### I am trying to test a fabric network with caliper that have 2 orgs, each with 10 peers. But I am getting the following error.

# create mychannel......
ok 1 created mychannel successfully
# Sleep 5s......
# Join channel......
# join mychannel
ok 2 Successfully joined mychannel
# install all chaincodes......
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/createuser
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/createuser
ok 3 Installed chaincode createuser_go successfully in all peers
# Instantiate chaincode......
The chaincode instantiate transaction was valid.
ok 4 Instantiated chaincode createuser_go successfully
# Sleep 5s...
# ##### testing 'createUser' ######
----test round 0----
undefined:1
[{""Id"":""47b37e1cb1df1df3497f812f2e2668a5958e393e73980d2ab16c96a785a5d8aa"",""Names"":[""/dev-peer5.org1.example.com-createuser_go-1""],""Image"":""dev-peer5.org1.example.com-createuser_go-1-6a589914fdab6004e4b9ddadcf4574c3d7cf9d53b8256f9d55cdff4111913ad2"",""ImageID"":""sha256:e5ea61dd6c86c114c78648d7e3e4024c020fea4732d56845f5f5966e5ebd0dd0"",""Command"":""chaincode -peer.address=peer5.org1.example.com:7052"",""Created"":1535119903,""Ports"":[],""Labels"":{""org.hyperledger.fabric.base.version"":""0.4.6"",""org.hyperledger.fabric.chaincode.id.name"":""createuser_go"",""org.hyperledger.fabric.chaincode.id.version"":""1"",""org.hyperledger.fabric.chaincode.type"":""GOLANG"",""org.hyperledger.fabric.version"":""1.1.0""},""State"":""running"",""Status"":""Up 9 seconds"",""HostConfig"":{""NetworkMode"":""emr-network_default""},""NetworkSettings"":{""Networks"":{""emr-network_default"":{""IPAMConfig"":null,""Links"":null,""Aliases"":null,""NetworkID"":""a3028a6d30d789fd3efcc0361e64c5892373aae606575935f12d6e3fb44e7425"",""EndpointID"":""c35fa7b27efc8bd6db17ecc6c41834d8d605c231

`SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at Socket.socket.on (caliper/node_modules/systeminformation/lib/dockerSocket.js:44:23)
    at emitNone (events.js:111:20)
    at Socket.emit (events.js:208:7)
    at endReadableNT (_stream_readable.js:1064:12)
    at _combinedTickCallback (internal/process/next_tick.js:138:11)
    at process._tickCallback (internal/process/next_tick.js:180:9)`
~/caliper$ doTest() with: { type: 'test',
  label: 'createUser',
  rateControl: { type: 'fixed-rate', opts: { tps: 10 } },
  trim: 0,
  cb: 'benchmark/drm/query.js',
  config: 'benchmark/drm/fabric3.json',
  numb: 40,
  roundIdx: 1,
  totalClients: 1,
  clients: 1,
  clientargs: {},
  clientIdx: 0 }
Info: client 30278 start test runFixedNumber():Insert users.
*** { type: 'fixed-rate', opts: { tps: 10 } }
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error [ERR_IPC_CHANNEL_CLOSED]: channel closed
    at process.target.send (internal/child_process.js:588:16)
    at Timeout.txUpdate [as _onTimeout] (/src/comm/client/local-client.js:47:13)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)

###  The fabric network is running correctly. This configuration is working for 16 peers but not with 20.",open,False,2018-08-24 14:33:54,2019-03-04 21:24:51
caliper,Nidhiintel,https://github.com/hyperledger/caliper/pull/167,https://api.github.com/repos/hyperledger/caliper/issues/167,Changed simple benchmark to have multiple transactions in a batch,Signed-off-by: Nidhi Kumari <nidhisolanki44@gmail.com>,closed,True,2018-08-24 09:56:09,2018-10-09 03:01:59
caliper,lotty02cho,https://github.com/hyperledger/caliper/issues/166,https://api.github.com/repos/hyperledger/caliper/issues/166,"Failed to install chaincodes, Error: Failed to send install Proposal or receive valid response","I try to run caliper using zookeeper.
`node benchmark/simple/main.js -c config.json -n fabric.json`

however, the issues comes out.

```
hyper@hyperledger001:/opt/gopath/src/github.com/hyperledger/caliper$ node benchmark/simple/main.js -c config.json -n fabric.json
TAP version 13
# #######Caliper Test######
# Sleep 5s......
# Join channel......
# install all chaincodes......
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
error: [E2E testing]: install proposal was bad
error: [E2E testing]: install proposal was bad
not ok 1 Failed to install chaincodes, Error: Failed to send install Proposal or receive valid response: [object Object],[object Object] at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:144:19) at <anonymous>
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/install-chaincode.js:65:19)
    stack: |-
      Error: Failed to install chaincodes, Error: Failed to send install Proposal or receive valid response: [object Object],[object Object]
          at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:144:19)
          at <anonymous>
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/install-chaincode.js:65:19)
          at <anonymous>
  ...
fabric.installSmartContract() failed, Error: Failed to send install Proposal or receive valid response: [object Object],[object Object]
    at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:144:19)
    at <anonymous>
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Failed to send install Proposal or receive valid response: [object Object],[object Object]
    at Client.newDefaultKeyValueStore.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:144:19)
    at <anonymous>
error: [E2E testing]: install proposal was bad
error: [E2E testing]: install proposal was bad

1..1
# tests 1
# pass  0
# fail  1
```

So, I entered my peer container and check my logs.
`docker container logs peer0.org1.kisa.com`

```
2018-08-24 08:53:29.186 UTC [chaincode] ProcessStream -> ERRO bba handling chaincode support stream: rpc error: code = Canceled desc = context canceled
receive failed
github.com/hyperledger/fabric/core/chaincode.(*Handler).ProcessStream
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/handler.go:383
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).HandleChaincodeStream
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:154
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Register
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:159
github.com/hyperledger/fabric/core/chaincode/accesscontrol.(*interceptor).Register
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/accesscontrol/interceptor.go:57
github.com/hyperledger/fabric/protos/peer._ChaincodeSupport_Register_Handler
        /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/chaincode_shim.pb.go:472
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processStreamingRPC
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1059
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1152
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:637
runtime.goexit
        /opt/go/src/runtime/asm_amd64.s:2361
2018-08-24 09:01:55.010 UTC [discovery/lifecycle] func1 -> ERRO bbb Chaincode deploy for simple failed
2018-08-24 09:01:55.010 UTC [endorser] ProcessProposal -> ERRO bbc [][431331c1] simulateProposal() resulted in chaincode name:""lscc""  response status 500 for txid: 431331c1e56047032ff7c028f5f236ecf32237c5d21e70ad5e5fa0fa2b18a5a3
2018-08-24 09:08:43.756 UTC [discovery/lifecycle] func1 -> ERRO bbd Chaincode deploy for simple failed
2018-08-24 09:08:43.756 UTC [endorser] ProcessProposal -> ERRO bbe [][45d22163] simulateProposal() resulted in chaincode name:""lscc""  response status 500 for txid: 45d22163d6a7af12bb372d948d00f388c1aec5fcf9812030dd2adb5f696a36d7
hyper@hyperledger001:/opt/gopath/src/github.com/hyperledger/caliper$ docker container logs peer0.org1.kisa.comdocker container logs peer0.org1.kisa.com
```

while I have cloned and edited this project, I never changed golang chaincode,
Have you guys saw about this issues?",closed,False,2018-08-24 09:17:55,2018-08-28 01:47:35
caliper,fooock,https://github.com/hyperledger/caliper/issues/165,https://api.github.com/repos/hyperledger/caliper/issues/165,Failed to instantiate chaincodes,"When I try to run the `simple` benchmark the next error is thrown:

```bash
vagrant@ubuntu-xenial:~$ ./execute-test.sh

> caliper@0.1.0 test /home/vagrant/caliper
> npm run lint && npm run nyc && npm run e2e ""simple"" ""-c"" ""./benchmark/simple/config.json"" ""-n"" ""./benchmark/simple/fabric.json""


> caliper@0.1.0 lint /home/vagrant/caliper
> npx eslint .


> caliper@0.1.0 nyc /home/vagrant/caliper
> nyc mocha --recursive -t 10000



  fixedRate controller implementation
    #init
      ✓ should set the sleep time for a single client if no clients are specified
      ✓ should set the sleep time for a single client
      ✓ should set the sleep time for multiple clients
      ✓ should set the sleep time to zero if 0 tps specified
    #applyRateControl
      ✓ should sleep for the full ammount of time if there is zero elapsed time
      ✓ should reduce the sleep time based on the elapsed time difference
      ✓ should not sleep if the elapsed time difference is below the 5ms threshold
      ✓ should not sleep if the sleepTime is zero

  pidRate controller implementation
    #init
      ✓ should set all gain values from constructor options
      ✓ should set a default sleep if no starting tps is provided
      ✓ should set logging if showVars option is provided
      ✓ should not set logging if no log option is provided
    #applyRateControl
      logging actions
        ✓ should provide logging if log option is set to be true
        ✓ should not provide logging if log option is not set
        ✓ should not provide logging if log option is set to be false
      sleep actions
        ✓ should not modify sleep time if no load error and isolated proportional gain
        ✓ should reduce sleep time if negative load error and isolated proportional gain
        ✓ should increase sleep time if positive load error and isolated proportional gain
        ✓ should not modify sleep time if no integral error and isolated integral gain
        ✓ should reduce sleep time if negative integral error and isolated integral gain
        ✓ should increase sleep time if positive integral error and isolated integral gain
        ✓ should not modify sleep time if no derivative error and isolated derivative gain
        ✓ should reduce sleep time if negative derivative error and isolated derivative gain
        ✓ should increase sleep time if positive derivative error and isolated derivative gain
        ✓ should sleep if above the 5ms threshold
        ✓ should not sleep if below the 5ms threshold


  26 passing (191ms)


=============================== Coverage summary ===============================
Statements   : 5.33% ( 13/244 )
Branches     : 8.7% ( 8/92 )
Functions    : 7.69% ( 3/39 )
Lines        : 5.49% ( 13/237 )
================================================================================

> caliper@0.1.0 e2e /home/vagrant/caliper
> node ./scripts/test.js ""simple"" ""./benchmark/simple/config.json"" ""./benchmark/simple/fabric.json""

TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
Creating network ""simplenetwork_default"" with the default driver
Pulling ca (hyperledger/fabric-ca:x86_64-1.1.0)...
x86_64-1.1.0: Pulling from hyperledger/fabric-ca
Digest: sha256:92f44d0811cddb0d335f7879f7e3b3c4b631f31740c76f3e7b85438c244b03f4
Status: Downloaded newer image for hyperledger/fabric-ca:x86_64-1.1.0
Pulling orderer.example.com (hyperledger/fabric-orderer:x86_64-1.1.0)...
x86_64-1.1.0: Pulling from hyperledger/fabric-orderer
Digest: sha256:0c3a3b5ecfd24b513da22bbb77da7b3f5bca9c121cc0ac5c46ba04c97c163654
Status: Downloaded newer image for hyperledger/fabric-orderer:x86_64-1.1.0
Pulling peer (hyperledger/fabric-peer:x86_64-1.1.0)...
x86_64-1.1.0: Pulling from hyperledger/fabric-peer
Digest: sha256:57417699ddf50c5ebd47a9a2cc74c0324fbba0281eb1104b9ddd05a67776b01f
Status: Downloaded newer image for hyperledger/fabric-peer:x86_64-1.1.0
Creating simplenetwork_ca_1   ... done
Creating ca_peerOrg2          ... done
Creating ca_peerOrg1          ... done
Creating simplenetwork_peer_1 ... done
Creating orderer.example.com  ... done
Creating peer1.org1.example.com ... done
Creating peer0.org2.example.com ... done
Creating peer1.org2.example.com ... done
Creating peer0.org1.example.com ... done
# create mychannel......
ok 1 created mychannel successfully
# Sleep 5s......
# Join channel......
# join mychannel
ok 2 Successfully joined mychannel
# install all chaincodes......
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
ok 3 Installed chaincode simple successfully in all peers
# Instantiate chaincode......
error: [Peer.js]: sendProposal - timed out after:120000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/vagrant/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:482:11)
    at tryOnTimeout (timers.js:317:5)
    at Timer.listOnTimeout (timers.js:277:5)
error: [Peer.js]: sendProposal - timed out after:120000
error: [Peer.js]: sendProposal - timed out after:120000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/vagrant/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:482:11)
    at tryOnTimeout (timers.js:317:5)
    at Timer.listOnTimeout (timers.js:277:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/vagrant/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:482:11)
    at tryOnTimeout (timers.js:317:5)
    at Timer.listOnTimeout (timers.js:277:5)
error: [Peer.js]: sendProposal - timed out after:120000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/vagrant/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:482:11)
    at tryOnTimeout (timers.js:317:5)
    at Timer.listOnTimeout (timers.js:277:5)
not ok 4 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/home/vagrant/caliper/src/fabric/e2eUtils.js:372:19) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7) at Client.newDefaultKeyValueStore.then.then.then.then.then (/home/vagrant/caliper/src/fabric/e2eUtils.js:385:15) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/home/vagrant/caliper/src/fabric/instantiate-chaincode.js:60:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/home/vagrant/caliper/src/fabric/e2eUtils.js:372:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/home/vagrant/caliper/src/fabric/e2eUtils.js:385:15)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/home/vagrant/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/vagrant/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/vagrant/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/vagrant/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/home/vagrant/caliper/src/fabric/instantiate-chaincode.js:60:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/home/vagrant/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/home/vagrant/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer0.org2.example.com ... done
Stopping peer1.org2.example.com ... done
Stopping peer0.org1.example.com ... done
Stopping peer1.org1.example.com ... done
Stopping orderer.example.com    ... done
Stopping ca_peerOrg1            ... done
Stopping ca_peerOrg2            ... done
Stopping simplenetwork_ca_1     ... done
Removing peer0.org2.example.com ... done
Removing peer1.org2.example.com ... done
Removing peer0.org1.example.com ... done
Removing peer1.org1.example.com ... done
Removing orderer.example.com    ... done
Removing simplenetwork_peer_1   ... done
Removing ca_peerOrg1            ... done
Removing ca_peerOrg2            ... done
Removing simplenetwork_ca_1     ... done
Removing network simplenetwork_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images

1..4
# tests 4
# pass  3
# fail  1

Benchmark return code:  1
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! caliper@0.1.0 e2e: `node ./scripts/test.js ""simple"" ""./benchmark/simple/config.json"" ""./benchmark/simple/fabric.json""`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the caliper@0.1.0 e2e script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/vagrant/.npm/_logs/2018-08-20T16_56_38_404Z-debug.log
npm ERR! Test failed.  See above for more details.
```

I'm running on Ubuntu 16.04. My node and npm versions are:

```bash
vagrant@ubuntu-xenial:~$ node --version
v8.10.0
vagrant@ubuntu-xenial:~$ npm --version
5.6.0
```

And the installed libraries are:

```bash
vagrant@ubuntu-xenial:~/caliper$ npm list fabric-client
caliper@0.1.0 /home/vagrant/caliper
├─┬ composer-admin@0.19.0
│ └─┬ composer-connector-hlfv1@0.19.0
│   └── fabric-client@1.1.0  deduped
└── fabric-client@1.1.0

vagrant@ubuntu-xenial:~/caliper$ npm list fabric-ca-client
caliper@0.1.0 /home/vagrant/caliper
├─┬ composer-admin@0.19.0
│ └─┬ composer-connector-hlfv1@0.19.0
│   └── fabric-ca-client@1.1.0  deduped
└── fabric-ca-client@1.1.0

vagrant@ubuntu-xenial:~/caliper$ npm list grpc
caliper@0.1.0 /home/vagrant/caliper
├─┬ fabric-client@1.1.0
│ └── grpc@1.10.1  deduped
└── grpc@1.10.1
```

### Similar issues

#118 
#137 
#149 

Nothing works, any idea what's happening? Thanks!
",closed,False,2018-08-20 17:08:26,2019-02-12 10:02:58
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/164,https://api.github.com/repos/hyperledger/caliper/issues/164,fix PID rate controller for new client test mechanism,"Required fix for PID rate controller as part of #142 

-> change to use the current backlog directly
-> update unit tests to reflect change
-> add PID to the composer 'standard' test set config

Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>",closed,True,2018-08-20 15:09:44,2018-11-27 11:15:25
caliper,dzqoo,https://github.com/hyperledger/caliper/issues/163,https://api.github.com/repos/hyperledger/caliper/issues/163,TLS problem,"Hello ！
My fabric network is running with tls off and how to test its tps with caliper？
Looking forward your reply ！",closed,False,2018-08-20 09:30:28,2019-02-12 10:21:25
caliper,ski2per,https://github.com/hyperledger/caliper/pull/162,https://api.github.com/repos/hyperledger/caliper/issues/162,Enable repeated test,"Currently we are using Caliper as our performance test tool. Our environment is in Docker Swarm, I think this feature will be convenient for us to test same chaincode repeatly",closed,True,2018-08-16 08:31:17,2019-01-31 02:26:36
caliper,ski2per,https://github.com/hyperledger/caliper/pull/161,https://api.github.com/repos/hyperledger/caliper/issues/161,Add a small feature for repeating test without reinstall chaincode,Signed-off-by: zhangpeng <ski2per@163.com>,closed,True,2018-08-16 03:30:47,2018-08-16 08:04:44
caliper,push1st1k,https://github.com/hyperledger/caliper/pull/160,https://api.github.com/repos/hyperledger/caliper/issues/160,add the possibility to specify query function name,In some cases it might be useful to query the ledger by function different from the 'query'.,closed,True,2018-08-15 11:58:31,2018-10-09 09:29:01
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/159,https://api.github.com/repos/hyperledger/caliper/issues/159,Added event subscription approach to get block commit status instead …,"Added event subscription approach to get block commit status instead of rest get batch status query.

Signed-off-by: Ramakrishna Srinivasamurthy <ramakrishna.srinivasamurthy@intel.com>",closed,True,2018-08-14 06:19:21,2018-10-10 08:46:13
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/158,https://api.github.com/repos/hyperledger/caliper/issues/158,Drop code coverage limit to enable build pass,"In order to enforce travis build requirement for PRs, we need the build to pass! 

This PR reduces the code coverage requirements for tests to get us past the code coverage check.

Signed-off-by: nkl199@yahoo.co.uk <nkl199@yahoo.co.uk>",closed,True,2018-08-09 19:24:13,2018-11-27 11:15:24
caliper,modood,https://github.com/hyperledger/caliper/pull/157,https://api.github.com/repos/hyperledger/caliper/issues/157,Reject an error instead of undefined,"Reject an error instead of undefined, otherwise it will log like this:

```
Failed to complete transaction [8c3b9...]:undefined
```

This got me confused.

Signed-off-by: modood <modood@qq.com>",closed,True,2018-08-07 15:12:55,2018-08-20 03:32:15
caliper,modood,https://github.com/hyperledger/caliper/pull/156,https://api.github.com/repos/hyperledger/caliper/issues/156,Reject an error instead of undefined,"Reject an error instead of undefined, otherwise it will log like this:

```
Failed to complete transaction [8c3b9...]:undefined
```

This got me confused.

Signed-off-by: modood modood@qq.com",closed,True,2018-08-07 10:43:15,2018-08-07 14:02:54
caliper,gantleman,https://github.com/hyperledger/caliper/issues/155,https://api.github.com/repos/hyperledger/caliper/issues/155,fabirc 1.1 error,"sur@ubuntu:~/caliper$ node benchmark/simple/main.js -c config.json -n fabric.json
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
(node:88593) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
Creating network ""simplenetwork_default"" with the default driver
Creating simplenetwork_ca_1   ... done
Creating ca_peerOrg1            ... done
Creating ca_peerOrg2            ... done
Creating simplenetwork_peer_1   ... done
Creating orderer.example.com  ... done
Creating peer1.org2.example.com ... done
Creating peer1.org1.example.com ... done
Creating peer0.org2.example.com ... done
Creating peer0.org1.example.com ... done
# create mychannel......
ok 1 created mychannel successfully
# Sleep 5s......
# Join channel......
# join mychannel
not ok 2 Failed to join peers, TypeError: Cannot read property 'getConnectivityState' of undefined at EventHub._checkConnection (/home/sur/caliper/node_modules/_fabric-client@1.1.0@fabric-client/lib/EventHub.js:479:39) at EventHub.registerBlockEvent (/home/sur/caliper/node_modules/_fabric-client@1.1.0@fabric-client/lib/EventHub.js:658:8) at Promise (/home/sur/caliper/src/fabric/join-channel.js:139:20) at new Promise (<anonymous>) at eventhubs.forEach (/home/sur/caliper/src/fabric/join-channel.js:136:29) at Array.forEach (<anonymous>) at Client.newDefaultKeyValueStore.then.then.then.then (/home/sur/caliper/src/fabric/join-channel.js:135:19) at <anonymous>
  ---
    operator: fail
    at: channels.reduce.then.catch (/home/sur/caliper/src/fabric/join-channel.js:215:19)
    stack: |-
      Error: Failed to join peers, TypeError: Cannot read property 'getConnectivityState' of undefined
          at EventHub._checkConnection (/home/sur/caliper/node_modules/_fabric-client@1.1.0@fabric-client/lib/EventHub.js:479:39)
          at EventHub.registerBlockEvent (/home/sur/caliper/node_modules/_fabric-client@1.1.0@fabric-client/lib/EventHub.js:658:8)
          at Promise (/home/sur/caliper/src/fabric/join-channel.js:139:20)
          at new Promise (<anonymous>)
          at eventhubs.forEach (/home/sur/caliper/src/fabric/join-channel.js:136:29)
          at Array.forEach (<anonymous>)
          at Client.newDefaultKeyValueStore.then.then.then.then (/home/sur/caliper/src/fabric/join-channel.js:135:19)
          at <anonymous>
          at Test.assert [as _assert] (/home/sur/caliper/node_modules/_tape@4.9.1@tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/sur/caliper/node_modules/_tape@4.9.1@tape/lib/test.js:76:32)
          at Test.fail (/home/sur/caliper/node_modules/_tape@4.9.1@tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/sur/caliper/node_modules/_tape@4.9.1@tape/lib/test.js:76:32)
          at channels.reduce.then.catch (/home/sur/caliper/src/fabric/join-channel.js:215:19)
          at <anonymous>
  ...
fabric.init() failed, Error: Fabric: Join channel failed
    at channels.reduce.then.catch (/home/sur/caliper/src/fabric/join-channel.js:216:31)
    at <anonymous>
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: Join channel failed
    at channels.reduce.then.catch (/home/sur/caliper/src/fabric/join-channel.js:216:31)
    at <anonymous>
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
/home/sur/caliper/node_modules/_fabric-client@1.1.0@fabric-client/lib/EventHub.js:308
			if(self._stream) state = self._stream.call.channel_.getConnectivityState();
			                                                    ^

TypeError: Cannot read property 'getConnectivityState' of undefined
    at ClientDuplexStream.<anonymous> (/home/sur/caliper/node_modules/_fabric-client@1.1.0@fabric-client/lib/EventHub.js:308:56)
    at emitOne (events.js:116:13)
    at ClientDuplexStream.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
    at Object.onReceiveMessage (/home/sur/caliper/node_modules/_grpc@1.13.1@grpc/src/client_interceptors.js:1276:19)
    at InterceptingListener.recvMessageWithContext (/home/sur/caliper/node_modules/_grpc@1.13.1@grpc/src/client_interceptors.js:603:19)
    at /home/sur/caliper/node_modules/_grpc@1.13.1@grpc/src/client_interceptors.js:702:14",closed,False,2018-08-07 09:43:47,2018-10-10 07:07:54
caliper,jamievaravara,https://github.com/hyperledger/caliper/issues/154,https://api.github.com/repos/hyperledger/caliper/issues/154,Configuring Fabric,"How can I edit the configuration of Fabric to generate various reports in Caliper?

What I want to change is the follwing:

1. Block size.
2. Block timeout.
3. The StateDB. 
4. Number of channels (I assume this requires me to add channel configs to the fabric config).
5. Endorsement policy. (N-OutOf, AND, OR) (also in fabric conf for each chaincode)?
6. Consensus protocol.
7. Data format stored in the StateDB.
8. Change the communication protocol between the docker containers, like change it from gossip to something else. (Data format used for communication between containers as well)

Also, can the StateDB be change to something else other than LevelDB and CouchDB?


Thank you very much.",closed,False,2018-08-03 14:49:21,2018-11-15 03:26:38
caliper,gantleman,https://github.com/hyperledger/caliper/issues/153,https://api.github.com/repos/hyperledger/caliper/issues/153,Handshake fad wileith fatal error,"sur@ubuntu:~/caliper$ node benchmark/simple/main.js -c config.json -n fabric.json
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
Creating network ""simplenetwork_default"" with the default driver
Creating simplenetwork_ca_1   ... done
Creating simplenetwork_peer_1   ... done
Creating ca_peerOrg1            ... done
Creating ca_peerOrg2            ... done
Creating orderer.example.com  ... done
Creating peer0.org1.example.com ... done
Creating peer0.org2.example.com ... done
Creating peer1.org1.example.com ... done
Creating peer1.org2.example.com ... done
# create mychannel......
E0803 00:23:46.331521753   39650 ssl_transport_security.cc:989] Handshake fad wileith fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.
E0803 00:23:47.379271451   39650 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.
E0803 00:23:49.187643994   39650 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed.
error: [Remote.js]: Error: Failed to connect before the deadline
error: [Orderer.js]: Orderer grpcs://localhost:7050 has an error Error: Failed to connect before the deadline 
not ok 1 Failed to create channels Error: Failed to connect before the deadline at checkState (/home/sur/caliper/node_modules/grpc/src/client.js:838:16)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/home/sur/caliper/src/fabric/create-channel.js:159:19)
    stack: |-
      Error: Failed to create channels Error: Failed to connect before the deadline
          at checkState (/home/sur/caliper/node_modules/grpc/src/client.js:838:16)
          at Test.assert [as _assert] (/home/sur/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/sur/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/sur/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/sur/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/home/sur/caliper/src/fabric/create-channel.js:159:19)
          at process._tickCallback (internal/process/next_tick.js:68:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/sur/caliper/src/fabric/create-channel.js:160:31)
    at process._tickCallback (internal/process/next_tick.js:68:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/sur/caliper/src/fabric/create-channel.js:160:31)
    at process._tickCallback (internal/process/next_tick.js:68:7)
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
Stopping peer1.org2.example.com ... done
Stopping peer1.org1.example.com ... done
Stopping peer0.org1.example.com ... done
Stopping peer0.org2.example.com ... done
Stopping ca_peerOrg2            ... done
Stopping orderer.example.com    ... done
Stopping ca_peerOrg1            ... done
Stopping simplenetwork_ca_1     ... done
Removing peer1.org2.example.com ... done
Removing peer1.org1.example.com ... done
Removing peer0.org1.example.com ... done
Removing peer0.org2.example.com ... done
Removing ca_peerOrg2            ... done
Removing orderer.example.com    ... done
Removing ca_peerOrg1            ... done
Removing simplenetwork_peer_1   ... done
Removing simplenetwork_ca_1     ... done
Removing network simplenetwork_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images

1..1
# tests 1
# pass  0
# fail  1

sur@ubuntu:~/caliper$ 
",open,False,2018-08-03 07:26:12,2019-03-04 21:30:58
caliper,lotty02cho,https://github.com/hyperledger/caliper/issues/152,https://api.github.com/repos/hyperledger/caliper/issues/152,create channel fail.,"I try to start caliper but there is some problem.

`node benchmark/simple/main.js -c config.json -n fabric.json`

`TAP version 13
# #######Caliper Test######
# create mychannel......
not ok 1 Failed to create channels Error: create status is FORBIDDEN at channel.organizations.reduce.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:145:43) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:159:19)
    stack: |-
      Error: Failed to create channels Error: create status is FORBIDDEN
          at channel.organizations.reduce.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:145:43)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:159:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:160:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:160:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)

1..1
# tests 1
# pass  0
# fail  1
`",open,False,2018-08-02 05:12:51,2019-03-04 21:31:40
caliper,anfimovoleh,https://github.com/hyperledger/caliper/pull/151,https://api.github.com/repos/hyperledger/caliper/issues/151,Feature/btsd quering,,closed,True,2018-08-01 14:17:55,2019-02-14 16:00:42
caliper,gantleman,https://github.com/hyperledger/caliper/issues/150,https://api.github.com/repos/hyperledger/caliper/issues/150,fabric no using TLS ! how to using caliper?,"node benchmark/simple/main.js -c yourconfig.json -n yournetwork.json
report create-channel.js TLS path error~",open,False,2018-07-31 02:51:54,2019-03-04 21:33:38
caliper,michielmulders,https://github.com/hyperledger/caliper/issues/149,https://api.github.com/repos/hyperledger/caliper/issues/149,Is not a valid endorsement system chaincode,"I'm getting the following error when running `node main.js -c config-fabric.json -n fabric.json` in `/benchmark/simple`. I want to test my Hyperledger chaincode, currently, I've not changed anything. I've run npm install and installed the required packages for Fabric: `npm install grpc@1.10.1 fabric-ca-client fabric-client`.

```
# create mychannel......
ok 1 created mychannel successfully
# Sleep 5s......
# Join channel......
# join mychannel
ok 2 Successfully joined mychannel
# install all chaincodes......
ok 3 Installed chaincode simple successfully in all peers
# Instantiate chaincode......
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/home/michiel/learning/hlf/caliper-benchmark/node_modules/fabric-client/node_modules/grpc/src/client.js:64:15)
    at /home/michiel/learning/hlf/caliper-benchmark/node_modules/fabric-client/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/home/michiel/learning/hlf/caliper-benchmark/node_modules/fabric-client/node_modules/grpc/src/client.js:64:15)
    at /home/michiel/learning/hlf/caliper-benchmark/node_modules/fabric-client/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/home/michiel/learning/hlf/caliper-benchmark/node_modules/fabric-client/node_modules/grpc/src/client.js:64:15)
    at /home/michiel/learning/hlf/caliper-benchmark/node_modules/fabric-client/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/home/michiel/learning/hlf/caliper-benchmark/node_modules/fabric-client/node_modules/grpc/src/client.js:64:15)
    at /home/michiel/learning/hlf/caliper-benchmark/node_modules/fabric-client/node_modules/grpc/src/client.js:583:15
not ok 4 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/home/michiel/learning/hlf/caliper-benchmark/src/fabric/e2eUtils.js:372:19) at <anonymous> at Client.newDefaultKeyValueStore.then.then.then.then.then (/home/michiel/learning/hlf/caliper-benchmark/src/fabric/e2eUtils.js:385:15) at <anonymous>
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/home/michiel/learning/hlf/caliper-benchmark/src/fabric/instantiate-chaincode.js:60:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/home/michiel/learning/hlf/caliper-benchmark/src/fabric/e2eUtils.js:372:19)
          at <anonymous>
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/home/michiel/learning/hlf/caliper-benchmark/src/fabric/e2eUtils.js:385:15)
          at <anonymous>
          at Test.assert [as _assert] (/home/michiel/learning/hlf/caliper-benchmark/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/michiel/learning/hlf/caliper-benchmark/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/michiel/learning/hlf/caliper-benchmark/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/michiel/learning/hlf/caliper-benchmark/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/home/michiel/learning/hlf/caliper-benchmark/src/fabric/instantiate-chaincode.js:60:19)
          at <anonymous>

```",closed,False,2018-07-30 14:51:54,2019-01-14 11:40:04
caliper,jiangyaoguo,https://github.com/hyperledger/caliper/pull/148,https://api.github.com/repos/hyperledger/caliper/issues/148,Close coverage check,"Now we havn't implemented enough tests. Close coverage check to make travis-ci passed. Should open it once we write enough tests.

Signed-off-by: jiangyaoguo <jiangyaoguo@gmail.com>",closed,True,2018-07-30 01:57:57,2018-08-16 03:05:18
caliper,jiangyaoguo,https://github.com/hyperledger/caliper/pull/147,https://api.github.com/repos/hyperledger/caliper/issues/147,Fix benchmark drm,"fixes #146 

Signed-off-by: jiangyaoguo <jiangyaoguo@gmail.com>",closed,True,2018-07-28 10:28:29,2018-07-30 02:41:57
caliper,jiangyaoguo,https://github.com/hyperledger/caliper/issues/146,https://api.github.com/repos/hyperledger/caliper/issues/146,Benchmark drm failed,"Now run cmd ```node benchmark/drm/main.js``` to run the drm benchmark, the test will fail with 
```
Client 11541: error TypeError: Cannot read property 'toString' of undefined
    at Fabric.queryState (/home/yaoguo/git/src/github.com/hyperledger/caliper/src/fabric/fabric.js:151:78)
    at Blockchain.queryState (/home/yaoguo/git/src/github.com/hyperledger/caliper/src/comm/blockchain.js:139:27)
    at Object.module.exports.run (/home/yaoguo/git/src/github.com/hyperledger/caliper/benchmark/drm/query.js:25:15)
    at runFixedNumber (/home/yaoguo/git/src/github.com/hyperledger/caliper/src/comm/client/local-client.js:140:26)
    at <anonymous>
(node:11541) UnhandledPromiseRejectionWarning: TypeError: Cannot read property 'toString' of undefined
    at Fabric.queryState (/home/yaoguo/git/src/github.com/hyperledger/caliper/src/fabric/fabric.js:151:78)
    at Blockchain.queryState (/home/yaoguo/git/src/github.com/hyperledger/caliper/src/comm/blockchain.js:139:27)
    at Object.module.exports.run (/home/yaoguo/git/src/github.com/hyperledger/caliper/benchmark/drm/query.js:25:15)
    at runFixedNumber (/home/yaoguo/git/src/github.com/hyperledger/caliper/src/comm/client/local-client.js:140:26)
    at <anonymous>
```",closed,False,2018-07-28 10:24:52,2018-07-30 02:41:57
caliper,ml16a6a,https://github.com/hyperledger/caliper/issues/145,https://api.github.com/repos/hyperledger/caliper/issues/145,I can't run any samples example,"Can any one help me, I'm trying to run the first example ""basic-sample-network"" and I got this error. Did I miss something ?
 
<img width=""993"" alt=""screen shot 2018-07-28 at 08 35 24"" src=""https://user-images.githubusercontent.com/40967156/43354289-60ea1848-9241-11e8-91f5-9dbd50cc5043.png"">",closed,False,2018-07-28 07:38:47,2018-08-01 06:51:33
caliper,aklenik,https://github.com/hyperledger/caliper/pull/144,https://api.github.com/repos/hyperledger/caliper/issues/144,Added lightweight dev network,"Experimenting with benchmarks on a locally run multi-node network requires considerable resources. This PR adds a lightweight development network with an orderer node, a CA and a peer (and not using CouchDB). Corresponding config files are also added for the simple benchmark.

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-07-26 18:40:23,2018-08-23 16:24:22
caliper,sathishNS,https://github.com/hyperledger/caliper/issues/143,https://api.github.com/repos/hyperledger/caliper/issues/143,Chaincode Error - Abnormal account,"Hi,

I ran the simple benchmark with the default config.json and i end up with below errors. Attaching the same
![abnormal_account](https://user-images.githubusercontent.com/36123375/43247844-94871580-90d3-11e8-9154-dee7631d848b.JPG)
![timeout](https://user-images.githubusercontent.com/36123375/43247854-9be5de9c-90d3-11e8-88b2-f83927330f90.JPG)
![fail](https://user-images.githubusercontent.com/36123375/43247875-a6c170f6-90d3-11e8-8d17-b872858e74d4.JPG)

Thanks,
Sathish


",closed,False,2018-07-26 07:29:07,2018-11-14 21:57:18
caliper,haojun,https://github.com/hyperledger/caliper/issues/142,https://api.github.com/repos/hyperledger/caliper/issues/142,BUG: some rate controllers are invalid,"Now an input argument 'results' is passed to rate controllers to help controllers learn the states of all finished txns. But since PR #122, 'results' don't contain all finished txns results, now it is a temparory array which only contains recent unhandled results. The change makes some rate controllers such as pid or composite rate controller invalid. Now a global variable 'resultStats' is used to save txns statistics (in resultStats[0], note the statistics does not include those in 'results' array), which can be useful for rate controller to get the neccessary information.

@aklenik @nklincoln 
",closed,False,2018-07-25 01:29:37,2018-10-15 06:59:45
caliper,WaedSaleh,https://github.com/hyperledger/caliper/issues/141,https://api.github.com/repos/hyperledger/caliper/issues/141,Error in Register Tx event in fabric sdk node js ,"When I register transaction event, I get this error 

node:31526) UnhandledPromiseRejectionWarning: Error: There was a problem with the eventhub ::Error: 14 UNAVAILABLE: EOF
    at eh.registerTxEvent (/home/waedjabareen/blockchain-explorer/app/query.js:266:12)
    at closer (/home/waedjabareen/blockchain-explorer/node_modules/fabric-client/lib/EventHub.js:441:5)
    at EventHub._closeAllCallbacks (/home/waedjabareen/blockchain-explorer/node_modules/fabric-client/lib/EventHub.js:451:3)
    at EventHub._disconnect (/home/waedjabareen/blockchain-explorer/node_modules/fabric-client/lib/EventHub.js:387:8)
    at ClientDuplexStream.<anonymous> (/home/waedjabareen/blockchain-explorer/node_modules/fabric-client/lib/EventHub.js:358:10)
    at emitOne (events.js:116:13)
    at ClientDuplexStream.emit (events.js:211:7)
    at ClientDuplexStream._emitStatusIfDone (/home/waedjabareen/blockchain-explorer/node_modules/grpc/src/client.js:271:12)
    at ClientDuplexStream._receiveStatus (/home/waedjabareen/blockchain-explorer/node_modules/grpc/src/client.js:248:8)
    at /home/waedjabareen/blockchain-explorer/node_modules/grpc/src/client.js:804:12
(node:31526) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
(node:31526) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.

And here is the code 
var registerTxEvent = function (transactionID, channelName, peer,org) {
	var client = helper.getClientForOrg(org);
	var channel = helper.getChannelForOrg(org, channelName);
	var target = buildTarget(peer, org);
	let eh = client.newEventHub();
    eh.setPeerAddr('grpc://localhost:8051');
	eh.connect();
	var promises = [];
	console.log(peer);
	
  
    let txPromise = new Promise((resolve, reject) => {
        let handle = setTimeout(() => {
			console.log('start app');
           eh.disconnect();
			resolve({event_status : 'TIMEOUT'});
        }, 30000);
		console.log('start register tx');
        eh.registerTxEvent(transactionID, (tx, code) => {
            clearTimeout(handle);
            eh.unregisterTxEvent(transactionID);
            //eh.disconnect();

           		// now let the application know what happened
				var return_status = {event_status : code, tx_id : transactionID};
				if (code !== 'VALID') {
					console.error('The transaction was invalid, code = ' + code);
				//	resolve(return_status).catch(error => 	reject(new Error('There was a problem with the eventhub ::'+err)));// we could use reject(new Error('Problem with the tranaction, event status ::'+code));
				} else {
					console.log('The transaction has been committed on peer ' + eh._endpoint.addr);
				//	resolve(return_status).catch(error => 	reject(new Error('There was a problem with the eventhub ::'+err))) ;
				}
			}, (err) => {
				//this is the callback if something goes wrong with the event registration or processing
				reject(new Error('There was a problem with the eventhub ::'+err));
			});
       
	});

	promises.push(txPromise);
	return Promise.all(promises);
	
	} 
",closed,False,2018-07-24 15:42:36,2018-11-14 21:54:58
caliper,pplam,https://github.com/hyperledger/caliper/issues/140,https://api.github.com/repos/hyperledger/caliper/issues/140,Monitor disk r/w rate,"When performing a large transaction benchmark on `fabric`, I got very high `Traffic In/Out` for each `peer` and the specified `orderer` of `1.1 GB ~ 2.5 GB` from the statistic result but nothing about the disk read/write rate of these nodes. Is it possible to monitor the hard disk read/write rate of each node?",closed,False,2018-07-20 03:40:33,2018-11-29 11:30:43
caliper,pplam,https://github.com/hyperledger/caliper/issues/139,https://api.github.com/repos/hyperledger/caliper/issues/139,Support multiple orderers,"For `fabric` benchmark, only 1 `orderer` can be specified in `fabric.json`. This make all traffic go to 1 `orderer` and the test result is not really correct. Could you please implement the feature that support multiple `orderer` sooner?",closed,False,2018-07-19 09:23:55,2019-03-04 20:41:49
caliper,aklenik,https://github.com/hyperledger/caliper/issues/138,https://api.github.com/repos/hyperledger/caliper/issues/138,Extract hard-coded constants to configurable variables,"Currently, some values are hard-coded, e.g., the timeout for chaincode instantiation (#137). A proper configuration support should be added to Caliper. 

The two aspects:
1. The library: I propose `nconf`, the Fabric SDK uses it, and wrote an elegant wrapper class for it (reusing this wrapper class without introducing the SDK as a constant dependency is another question).
1. The conventions: I propose a naming convention like in Fabric, since Caliper also has some major submodules. For example, the current `OVERWRITE_GOPATH` setting could be something like
`CALIPER_FABRIC_OVERWRITEGOPATH` 

@haojun Opinions?",closed,False,2018-07-18 12:12:36,2018-11-14 21:51:05
caliper,bitpeng,https://github.com/hyperledger/caliper/issues/137,https://api.github.com/repos/hyperledger/caliper/issues/137,instantiate chaincodes Error,"root@ubuntu:/smbshare/caliper# node benchmark/simple/main.js
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
Creating network ""simplenetwork_default"" with the default driver
Creating orderer.example.com
Creating ca_peerOrg1
Creating simplenetwork_peer_1
Creating ca_peerOrg2
Creating simplenetwork_ca_1
Creating peer1.org2.example.com
Creating peer1.org1.example.com
Creating peer0.org1.example.com
Creating peer0.org2.example.com
# create mychannel......
ok 1 created mychannel successfully
# Sleep 5s......
# Join channel......
# join mychannel
ok 2 Successfully joined mychannel
# install all chaincodes......
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
info: [packager/Golang.js]: packaging GOLANG from contract/fabric/simple/go
ok 3 Installed chaincode simple successfully in all peers
# Instantiate chaincode......
error: [Peer.js]: sendProposal - timed out after:120000
error: [Peer.js]: sendProposal - timed out after:120000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/smbshare/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/smbshare/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [Peer.js]: sendProposal - timed out after:120000
error: [Peer.js]: sendProposal - timed out after:120000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/smbshare/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/smbshare/caliper/node_modules/fabric-client/lib/Peer.js:124:19)
    at ontimeout (timers.js:498:11)
    at tryOnTimeout (timers.js:323:5)
    at Timer.listOnTimeout (timers.js:290:5)
**not ok 4 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/smbshare/caliper/src/fabric/e2eUtils.js:375:19) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7) at Client.newDefaultKeyValueStore.then.then.then.then.then** (/smbshare/caliper/src/fabric/e2eUtils.js:388:15) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/smbshare/caliper/src/fabric/instantiate-chaincode.js:60:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/smbshare/caliper/src/fabric/e2eUtils.js:375:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/smbshare/caliper/src/fabric/e2eUtils.js:388:15)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/smbshare/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/smbshare/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/smbshare/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/smbshare/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/smbshare/caliper/src/fabric/instantiate-chaincode.js:60:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/smbshare/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
unexpected error, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/smbshare/caliper/src/fabric/instantiate-chaincode.js:61:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev* -q)
",closed,False,2018-07-18 09:18:30,2018-10-16 21:15:57
caliper,llhl001,https://github.com/hyperledger/caliper/issues/136,https://api.github.com/repos/hyperledger/caliper/issues/136,npm install grpc@1.10.1  ERR,"`
[root@llhl178 caliper]# npm install grpc@1.10.1
npm WARN registry Unexpected warning for https://registry.npmjs.org/: Miscellaneous Warning ECONNREFUSED: request to https://registry.npmjs.org/decamelize failed, reason: connect ECONNREFUSED 104.18.96.96:443
npm WARN registry Using stale package data from https://registry.npmjs.org/ due to a request error during revalidation.

> grpc@1.10.1 install /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc
> node-pre-gyp install --fallback-to-build --library=static_library

node-pre-gyp ERR! Pre-built binaries not installable for grpc@1.10.1 and node@8.11.3 (node-v57 ABI, glibc) (falling back to source compile with node-gyp) 
node-pre-gyp ERR! Hit error EACCES: permission denied, mkdir '/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/node' 
gyp ERR! configure error 
gyp ERR! stack Error: EACCES: permission denied, mkdir '/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/build'
gyp ERR! System Linux 4.17.6-1.el7.elrepo.x86_64
gyp ERR! command ""/usr/local/node-v8.11.3-linux-x64/bin/node"" ""/usr/local/node-v8.11.3-linux-x64/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""configure"" ""--fallback-to-build"" ""--library=static_library"" ""--module=/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64-glibc/grpc_node.node"" ""--module_name=grpc_node"" ""--module_path=/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64-glibc""
gyp ERR! cwd /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc
gyp ERR! node -v v8.11.3
gyp ERR! node-gyp -v v3.6.2
gyp ERR! not ok 
node-pre-gyp ERR! build error 
node-pre-gyp ERR! stack Error: Failed to execute '/usr/local/node-v8.11.3-linux-x64/bin/node /usr/local/node-v8.11.3-linux-x64/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js configure --fallback-to-build --library=static_library --module=/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64-glibc/grpc_node.node --module_name=grpc_node --module_path=/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64-glibc' (1)
node-pre-gyp ERR! stack     at ChildProcess.<anonymous> (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/node_modules/node-pre-gyp/lib/util/compile.js:83:29)
node-pre-gyp ERR! stack     at emitTwo (events.js:126:13)
node-pre-gyp ERR! stack     at ChildProcess.emit (events.js:214:7)
node-pre-gyp ERR! stack     at maybeClose (internal/child_process.js:925:16)
node-pre-gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)
node-pre-gyp ERR! System Linux 4.17.6-1.el7.elrepo.x86_64
node-pre-gyp ERR! command ""/usr/local/node-v8.11.3-linux-x64/bin/node"" ""/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/node_modules/.bin/node-pre-gyp"" ""install"" ""--fallback-to-build"" ""--library=static_library""
node-pre-gyp ERR! cwd /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc
node-pre-gyp ERR! node -v v8.11.3
node-pre-gyp ERR! node-pre-gyp -v v0.7.0
node-pre-gyp ERR! not ok 
Failed to execute '/usr/local/node-v8.11.3-linux-x64/bin/node /usr/local/node-v8.11.3-linux-x64/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js configure --fallback-to-build --library=static_library --module=/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64-glibc/grpc_node.node --module_name=grpc_node --module_path=/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64-glibc' (1)
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! grpc@1.10.1 install: `node-pre-gyp install --fallback-to-build --library=static_library`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the grpc@1.10.1 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-07-18T03_01_41_563Z-debug.log
`",closed,False,2018-07-18 03:04:12,2018-10-10 07:38:22
caliper,king-jam,https://github.com/hyperledger/caliper/pull/135,https://api.github.com/repos/hyperledger/caliper/issues/135,Updated Sawtooth Simple Example to Work,Signed-off-by: Justin Kenney <justin.kenney@emc.com>,closed,True,2018-07-17 15:27:21,2018-07-23 14:10:35
caliper,Nidhiintel,https://github.com/hyperledger/caliper/pull/134,https://api.github.com/repos/hyperledger/caliper/issues/134,Remove SmallBank Round-Robin approach for Transaction Scheduling in Caliper,,closed,True,2018-07-17 06:46:03,2018-07-23 02:43:56
caliper,aklenik,https://github.com/hyperledger/caliper/pull/133,https://api.github.com/repos/hyperledger/caliper/issues/133,Use common utility for path resolution,"Related to Issue #95, this PR unifies the path resolution of different modules, by using [the following](https://github.com/hyperledger/caliper/blob/6cf2891736c60dfd5c0a3221f36b1841dc79318d/src/comm/util.js#L51) utility function.

Now every path in the config files can be set either as a relative path to the Caliper root directory or as an absolute path.

@nklincoln I successfully run a Composer sample benchmark, but could you review the Composer-related part just in case?
@haojun Can you tag someone from the Iroha contributors to review the Iroha-related part? Although those were (I hope) straightforward modifications.

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-07-16 19:53:22,2018-08-23 16:24:24
caliper,scealiontach,https://github.com/hyperledger/caliper/pull/132,https://api.github.com/repos/hyperledger/caliper/issues/132,Minor fix: pidRate should return the Sleep promise not just create it. ,"This is a minor problem I spotted well taking the pidRate controller for a spin.  Obviously the pidRate controller should return the Sleep promise rather than just leaving it, otherwise the test goes into a very tight loop and the rate isn't controlled at all.

Signed-off-by: Kevin O'Donnell <kevin@blockchaintp.com>",closed,True,2018-07-16 14:58:14,2018-07-23 02:56:59
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/131,https://api.github.com/repos/hyperledger/caliper/issues/131,"Change the invoke timeout from a constant value to a variable value , and make the value related to sleep time.",,open,False,2018-07-16 10:14:42,2019-03-04 21:39:15
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/130,https://api.github.com/repos/hyperledger/caliper/issues/130,Error: Invoke stoped. Unfinished number never decrease,"the log always:
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264
[Transaction Info] - Submitted: 20000 Succ: 18736 Fail:0 Unfinished:1264

",open,False,2018-07-16 07:41:25,2019-03-04 21:40:40
caliper,aklenik,https://github.com/hyperledger/caliper/pull/129,https://api.github.com/repos/hyperledger/caliper/issues/129,Add domain attribute to docs,"Added description in the Fabric network documentation about the `domain` attribute introduced by PR #126 

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-07-13 09:54:36,2018-07-16 08:31:09
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/128,https://api.github.com/repos/hyperledger/caliper/issues/128,Config file path is corrected,"Config file path is corrected

Signed-off-by: Ramakrishna Srinivasamurthy <ramakrishna.srinivasamurthy@intel.com>",closed,True,2018-07-13 08:52:38,2018-07-16 01:30:08
caliper,nktuan286,https://github.com/hyperledger/caliper/issues/127,https://api.github.com/repos/hyperledger/caliper/issues/127,[client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: TCP Read failed at new createStatusError,"I have two servers. One is using to build app service and the other is using to build hyperledger fabric network. When i request from app service to blockchain network then sometime i have some problem like below:

[client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: TCP Read failed
    at new createStatusError (/home/user/server/node_modules/fabric-client/node_modules/grpc/src/client.js:64:15)
    at /home/user/server/node_modules/fabric-client/node_modules/grpc/src/client.js:583:15

[Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: TCP Read failed\n    at createStatusError (/home/user/server/node_modules/fabric-client/node_modules/grpc/src/client.js:64:15)\n   at ClientDuplexStream._emitStatusIfDone (/home/user/server/node_modules/fabric-client/node_modules/grpc/src/client.js:270:19)\n    at ClientDuplexStream._receiveStatus (/home/user/server/node_modules/fabric-client/node_modules/grpc/src/client.js:248:8)\n    at /home/user/server/node_modules/fabric-client/node_modules/grpc/src/client.js:804:12"".

Is anyone know to solved this issue. Thanks so much. (sorry for my bad english)",closed,False,2018-07-13 03:35:48,2018-10-10 07:34:12
caliper,aklenik,https://github.com/hyperledger/caliper/pull/126,https://api.github.com/repos/hyperledger/caliper/issues/126,Fixed hardcoded domain names,"Fixed the hardcoded domain names and orderer MSP ID (Issue #98 ), and added a network example with a custom domain name.

Fabric network configurations now contain a domain property for each org and orderer.

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-07-12 15:19:16,2018-07-13 09:37:34
caliper,aklenik,https://github.com/hyperledger/caliper/pull/125,https://api.github.com/repos/hyperledger/caliper/issues/125,Fix cross-process error message format,"If an unhandled exception occurred in a client process, the main process printed the received error object as the following, obscuring the original error. Set an invalid callback name to reproduce it:

```
not ok 5 failed 'open' testing, Error: Client encountered error:[object Object] at ChildProcess.<anonymous>
```

Now it receives the `string` version of the error and prints it correctly:

```
not ok 5 failed 'open' testing, Error: Client encountered error:Error: Cannot find module '/home/klenik/projects/caliper-single-org/benchmark/simple/opennn.js' at ChildProcess.<anonymous>
```

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-07-12 14:34:38,2018-07-13 06:46:30
caliper,nitesh7sid,https://github.com/hyperledger/caliper/pull/124,https://api.github.com/repos/hyperledger/caliper/issues/124,Split caliper into transaction sender and event listener,"PR for spitting caliper process into transaction sender and event listener.
## Short Description
Current version of the caliper relies on a single threaded process to send the transactions as well as listen for the transaction confirmation event. This can cause an issue for clients with higher send rates since node.js is itself a single threaded. The callback of the eventhub may get queued in the event loop and hence may result in incorrect confirmation time.

To tackle this issue, caliper can be split into 2 sub processes namely,
* sender who is just responsible for generating the transaction load
* listener which connects to the event peer, listens for the block event, note the timestamp and then publish it to Apache Kafka MQ. 

A persistence layer is required so that after the sender has finished generating the load, it can then consume blocks and associated confirmation time from the Queue and compute `time_final` property for every transaction.",closed,True,2018-07-12 06:44:40,2018-11-27 15:51:44
caliper,Miraczpp,https://github.com/hyperledger/caliper/issues/123,https://api.github.com/repos/hyperledger/caliper/issues/123,Unknown rate control type linear-rate,"Info: client 104362 start test runFixedNumber():opening accounts
***** { type: 'linear-rate',
  opts: { startingTps: 500, finishingTps: 5000 } }
Client 104362: error Error: Unknown rate control type linear-rate
    at new RateControl (/opt/caliper/src/comm/rate-control/rateControl.js:49:19)
    at runFixedNumber (/opt/caliper/src/comm/client/local-client.js:89:23)
    at blockchain.getContext.then (/opt/caliper/src/comm/client/local-client.js:180:20)
    at <anonymous>
",closed,False,2018-07-11 08:13:26,2018-10-10 07:36:21
caliper,haojun,https://github.com/hyperledger/caliper/pull/122,https://api.github.com/repos/hyperledger/caliper/issues/122,define common TxStatus Class,"This PR is related to #119 and #110 
1. Define a common TxStatus class and modify all adapters accordingly.
2. Reduce memory usage of local-client.js

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-07-10 07:09:20,2018-07-23 03:09:01
caliper,haojun,https://github.com/hyperledger/caliper/pull/121,https://api.github.com/repos/hyperledger/caliper/issues/121,fix issue#120: limit size of tmp demo log,"close #120 

This PR limits the length of x-axis to prevent oversized log files.

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>

modify max x-axis length

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-07-10 03:31:55,2018-07-10 06:11:01
caliper,haojun,https://github.com/hyperledger/caliper/issues/120,https://api.github.com/repos/hyperledger/caliper/issues/120,Limit size of the temp demo files,"The 'demo' is a very simple GUI which should be abandoned in the future. It generates a temporary log file which contains data to draw the performance charts. The size of the log file grows continuously and may become too large. So it should be able to :
1 . disable launching demo related functions by configuration or command argument
or 2. limit the max size of the log file, for example limit the length of the 'x-axis' and only contains the recent data.",closed,False,2018-07-10 02:34:19,2018-07-10 06:11:01
caliper,haojun,https://github.com/hyperledger/caliper/issues/119,https://api.github.com/repos/hyperledger/caliper/issues/119,Extract common structures into separate files,"Currently many common objects/structures such as messages and txStatus are defined in different places, it would be better to define those objects/structures in one place.",open,False,2018-07-10 01:46:28,2019-01-19 10:40:47
caliper,llhl001,https://github.com/hyperledger/caliper/issues/118,https://api.github.com/repos/hyperledger/caliper/issues/118,Instantiate chaincode......,"`
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 2 UNKNOWN: chaincode error (status: 500, message:  is not a valid endorsement system chaincode)
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
`


`
not ok 4 Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting... at Client.newDefaultKeyValueStore.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:19) at <anonymous> at Client.newDefaultKeyValueStore.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:398:15) at <anonymous>
  ---
    operator: fail
    at: chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:69:19)
    stack: |-
      Error: Failed to instantiate chaincodes, Error: Failed to send instantiate due to error: Error: Failed to send instantiate Proposal or receive valid response. Response null or status is not 200. exiting...
          at Client.newDefaultKeyValueStore.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:385:19)
          at <anonymous>
          at Client.newDefaultKeyValueStore.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/e2eUtils.js:398:15)
          at <anonymous>
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:69:19)
          at <anonymous>
  ...
fabric.installSmartContract() failed, Error: Fabric: instantiate chaincodes failed
    at chaincodes.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/instantiate-chaincode.js:70:31)
    at <anonymous>
not ok 5 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/opt/gopath/src/github.com/hyperledger/caliper/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/opt/gopath/src/github.com/hyperledger/caliper/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/comm/bench-flow.js:347:18)
          at <anonymous>
  ...

1..5
# tests 5
# pass  3
# fail  2
`",closed,False,2018-07-09 08:45:03,2018-07-09 12:28:02
caliper,aklenik,https://github.com/hyperledger/caliper/pull/117,https://api.github.com/repos/hyperledger/caliper/issues/117,"Add linear, record and replay rate controllers","This PR adds three additional rate controller to Caliper:
1. Linear rate controller for gradually increasing the TPS rate
2. Record rate controller for recording the timings of a rate controller
3. Replay rate controller for replaying an arbitrary timing trace

For details, see the documentation.
Another minor change: the clients now receive the round index in the message, which is propagated to the controllers (and soon also for the callbacks, but that's an other PR).

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-07-05 15:11:30,2018-07-11 10:44:19
caliper,aklenik,https://github.com/hyperledger/caliper/pull/116,https://api.github.com/repos/hyperledger/caliper/issues/116,"Node CC and metadata support, node CC examples","This PR addresses the following shortcomings:
* Proper support for Node.js chaincodes (CC)
* Support for CC metadata (CouchDB indices)
* Lack of Node.js CC examples

Contribution details:
* Correctly resolving CC path (relative or absolute) in case of Node CC
* Processing `metadataPath` attribute for CC install requests
* Added Node version of the `simple` benchmark (restructured the `src/contract/fabric/simple` folder a bit, changed configs accordingly)
* Added Node and Golang versions of the `marbles` CC from the `fabric-samples` repo (included a NOTE about this derivative work and a reference to the original, hopefully, this makes it license-compatible)
* Added `marbles` benchmark files for testing the corresponding CCs
* Fixed some bugs/typos in the `simple` Golang CC
* Updated chaincode-related documentation accordingly

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-07-03 17:56:19,2018-07-11 10:44:24
caliper,aklenik,https://github.com/hyperledger/caliper/issues/115,https://api.github.com/repos/hyperledger/caliper/issues/115,Implement proper chaincode query for Fabric NBI,Currently the Fabric query API is [hardcoded](https://github.com/hyperledger/caliper/blob/38b5caa8b4e823798ea4c96fa9bfd24805b029eb/src/fabric/fabric.js#L157) to work with the `simple` benchmark.,closed,False,2018-07-03 16:37:48,2019-03-04 20:40:52
caliper,RobertDiebels,https://github.com/hyperledger/caliper/issues/114,https://api.github.com/repos/hyperledger/caliper/issues/114,Using percpu_usage.length can cause invalid CPU statistics,"**Issue**
See the [docker documentation](https://docs.docker.com/engine/api/v1.37/#operation/ContainerStats):

""If either precpu_stats.online_cpus or cpu_stats.online_cpus is nil then for compatibility with older daemons the length of the corresponding cpu_usage.percpu_usage array should be used.""

Relevant code in caliper: https://github.com/hyperledger/caliper/blob/56fbd8892e4ebe165977673c33c5829fd6805a72/src/comm/monitor-docker.js#L218

**Extra information**
I'd like to note that when falling back on `percpu_usage.length` it might be that you can have a total of 4 cores and only 2 are in use. So the `percpu_usage` Array might look like this: `[34782342, 358734, 0, 0]` in that case using `percpu_usage.length` will be invalid. 
Since you'd always be looking at the maximum amount of cores that could be used. Instead of the amount of cores that are actually used.

**Solution**
Replace line 218 with:
```
self.stats[id].cpu_percent.push(cpuDelta / sysDelta * MonitorDocker.coresInUse(stat.cpu_stats) * 100.0);
```
and add the following methods to the class:
```
    static coresInUse(cpu_stats) {
        return cpu_stats.online_cpus || MonitorDocker.findCoresInUse(cpu_stats.cpu_usage.percpu_usage || []);
    }

    static findCoresInUse(percpu_usage) {
        percpu_usage = percpu_usage.filter((coreUsage) => {
            if (coreUsage > 0) {
                return (coreUsage)
            }
        });
        return percpu_usage.length;
    }
```",closed,False,2018-07-02 08:26:24,2018-11-21 07:28:12
caliper,stinger112,https://github.com/hyperledger/caliper/pull/113,https://api.github.com/repos/hyperledger/caliper/issues/113,Update Iroha to v1.0 beta-3,"This PR introduces the new release of Iroha [v1.0 beta-3](https://github.com/hyperledger/iroha/releases/tag/v1.0.0_beta-3)

I actualized used containers in **docker-compose.yml**, simple benchmark code (we slightly changed our API) and node configs.

### PLEASE PAY ATTENTION: 

I removed grpc@1.10.1 from the main **package.json** because:
1. It sufficiently increases dependencies installing time by `npm install`. grpc _of this version_ compiles from sources, despite I have a very widespread system (Ubuntu 18.04, x86_64).
2. This grpc package conflicts with the version from **iroha-lib** package.

So I removed both dependencies and specify in README.md additional dependency iroha-lib@0.1.7 in Iroha's section and grpc@1.10.1 in Fabric's section. It's not the best solution, but I couldn't think of a better one

Also
We are planning to use Caliper in our CI to benchmark new versions of Iroha from this version. :+1: 
",closed,True,2018-06-30 15:48:04,2018-07-02 03:21:51
caliper,EG-easy,https://github.com/hyperledger/caliper/issues/112,https://api.github.com/repos/hyperledger/caliper/issues/112,error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: EOF,"Hi!
After creating channel, i have some problem...
How can I solve this problem?

$ node benchmark/simple/main.js
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric-v11/2-org-2-peer/docker-compose.yaml up -d
Creating orderer.example.com            ... done
Creating couchdb.peer0.org1.example.com ... done
Creating ca.org1.example.com            ... done
Creating couchdb.peer0.org2.example.com ... done
Creating ca.org2.example.com            ... done
Creating couchdb.peer1.org1.example.com ... done
Creating couchdb.peer1.org2.example.com ... done
Creating peer0.org1.example.com         ... done
Creating peer0.org2.example.com         ... done
Creating peer1.org2.example.com         ... done
Creating peer1.org1.example.com         ... done
# create mychannel......
ok 1 created mychannel successfully
# Sleep 5s......
# Join channel......
# join mychannel
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: EOF
    at new createStatusError (/Users/shizuka/caliper2/caliper/node_modules/grpc/src/client.js:64:15)
    at /Users/shizuka/caliper2/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: EOF
    at new createStatusError (/Users/shizuka/caliper2/caliper/node_modules/grpc/src/client.js:64:15)
    at /Users/shizuka/caliper2/caliper/node_modules/grpc/src/client.js:583:15
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: EOF
    at new createStatusError (/Users/shizuka/caliper2/caliper/node_modules/grpc/src/client.js:64:15)
    at /Users/shizuka/caliper2/caliper/node_modules/grpc/src/client.js:583:15
not ok 2 TypeError: Cannot read property 'stack' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'stack' of undefined]
    at: process.onetime (/Users/shizuka/caliper2/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'stack' of undefined
          at channels.reduce.then.catch (/Users/shizuka/caliper2/caliper/src/fabric/join-channel.js:216:56)
          at <anonymous>
  ...

1..2
# tests 2
# pass  1
# fail  1",closed,False,2018-06-30 08:22:32,2018-09-26 06:34:17
caliper,yodash,https://github.com/hyperledger/caliper/issues/111,https://api.github.com/repos/hyperledger/caliper/issues/111,Failed to create channels Error: create status is BAD_REQUEST,"I have same error with this issue.
https://github.com/hyperledger/caliper/issues/81

Although I stopped old containers, I still have error. How can I solve it??

docker-compose -f network/fabric-v11/3-org-3-peer/docker-compose.yaml up -d
Creating couchdb.peer0.org3.example.com ... done
Creating couchdb.peer2.org1.example.com ... done
Creating orderer.example.com            ... done
Creating couchdb.peer1.org2.example.com ... done
Creating couchdb.peer2.org3.example.com ... done
Creating ca.org2.example.com            ... done
Creating couchdb.peer2.org2.example.com ... done
Creating couchdb.peer1.org1.example.com ... done
Creating ca.org3.example.com            ... done
Creating couchdb.peer1.org3.example.com ... done
Creating couchdb.peer0.org2.example.com ... done
Creating ca.org1.example.com            ... done
Creating couchdb.peer0.org1.example.com ... done
Creating peer1.org3.example.com         ... done
Creating peer0.org3.example.com         ... done
Creating peer0.org1.example.com         ... done
Creating peer0.org2.example.com         ... done
Creating peer1.org2.example.com         ... done
Creating peer2.org3.example.com         ... done
Creating peer1.org1.example.com         ... done
Creating peer2.org2.example.com         ... done
Creating peer2.org1.example.com         ... done
# create mychannel......
not ok 1 Failed to create channels Error: create status is BAD_REQUEST at channel.organizations.reduce.then.then.then (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/src/fabric/create-channel.js:146:43) at <anonymous> at process._tickCallback (internal/process/next_tick.js:160:7)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/src/fabric/create-channel.js:160:19)
    stack: |-
      Error: Failed to create channels Error: create status is BAD_REQUEST
          at channel.organizations.reduce.then.then.then (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/src/fabric/create-channel.js:146:43)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:160:7)
          at Test.assert [as _assert] (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/src/fabric/create-channel.js:160:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:160:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/src/fabric/create-channel.js:161:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:160:7)
not ok 2 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/Users/yo-dash/Blockchain/HyperLedger/caliper3/caliper/src/comm/bench-flow.js:347:18)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:160:7)
  ...

1..2
# tests 2
# pass  0
# fail  2
",closed,False,2018-06-30 07:33:46,2018-10-24 03:54:29
caliper,haojun,https://github.com/hyperledger/caliper/issues/110,https://api.github.com/repos/hyperledger/caliper/issues/110,Improve caliper to support long time testing,Now txns statuses are stored in internal arrays and exchanged between processes via messages or zookeeper. Some people may want to start a long time testing such as testing 24 hours with a sending rate of 10000 tps. That may cause performance issues for caliper itself. So the mechanism of txns statuses storing and exchanging should be improved to meet the needs of long timing testing.,open,False,2018-06-29 02:04:49,2018-06-29 02:04:49
caliper,jamievaravara,https://github.com/hyperledger/caliper/issues/109,https://api.github.com/repos/hyperledger/caliper/issues/109,"BAD_REQUEST when creating channel, orderer.js","Hi,

I'm trying to start the Fabric benchmark, but it all stops when its trying to create the channels.

This is my command + output.

sudo node benchmark/simple/main.js
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
simplenetwork_ca_1 is up-to-date
orderer.example.com is up-to-date
ca_peerOrg1 is up-to-date
ca_peerOrg2 is up-to-date
Starting simplenetwork_peer_1 ... 
peer1.org1.example.com is up-to-date
peer1.org2.example.com is up-to-date
peer0.org2.example.com is up-to-date
Starting simplenetwork_peer_1 ... done
# create mychannel......
error: [Orderer.js]: sendBroadcast - reject with BAD_REQUEST
not ok 1 Failed to create channels Error: BAD_REQUEST at ClientDuplexStream.<anonymous> (/home/thesis/Downloads/caliper-master/node_modules/fabric-client/lib/Orderer.js:116:21) at emitOne (events.js:116:13) at ClientDuplexStream.emit (events.js:211:7) at addChunk (_stream_readable.js:263:12) at readableAddChunk (_stream_readable.js:250:11) at ClientDuplexStream.Readable.push (_stream_readable.js:208:10) at readCallback (/home/thesis/Downloads/caliper-master/node_modules/grpc/src/client.js:312:14)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/home/thesis/Downloads/caliper-master/src/fabric/create-channel.js:160:19)
    stack: |-
      Error: Failed to create channels Error: BAD_REQUEST
          at ClientDuplexStream.<anonymous> (/home/thesis/Downloads/caliper-master/node_modules/fabric-client/lib/Orderer.js:116:21)
          at emitOne (events.js:116:13)
          at ClientDuplexStream.emit (events.js:211:7)
          at addChunk (_stream_readable.js:263:12)
          at readableAddChunk (_stream_readable.js:250:11)
          at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
          at readCallback (/home/thesis/Downloads/caliper-master/node_modules/grpc/src/client.js:312:14)
          at Test.assert [as _assert] (/home/thesis/Downloads/caliper-master/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/thesis/Downloads/caliper-master/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/thesis/Downloads/caliper-master/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/thesis/Downloads/caliper-master/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/home/thesis/Downloads/caliper-master/src/fabric/create-channel.js:160:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/thesis/Downloads/caliper-master/src/fabric/create-channel.js:161:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
not ok 2 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/home/thesis/Downloads/caliper-master/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/home/thesis/Downloads/caliper-master/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/home/thesis/Downloads/caliper-master/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/home/thesis/Downloads/caliper-master/src/comm/bench-flow.js:347:18)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

1..2
# tests 2
# pass  0
# fail  2
",closed,False,2018-06-28 13:41:54,2018-07-10 01:50:51
caliper,jamievaravara,https://github.com/hyperledger/caliper/issues/108,https://api.github.com/repos/hyperledger/caliper/issues/108,Is it possible to run Caliper on Windows 10?,"The question is the same as the title.

Is it possible to run Caliper on Windows 10?",closed,False,2018-06-28 13:39:23,2018-10-10 07:38:28
caliper,BeanChan1987,https://github.com/hyperledger/caliper/issues/107,https://api.github.com/repos/hyperledger/caliper/issues/107,How to test TPS in orderer with kafka,"Scene one:
    1、Environment：orderer(solo)  org1(peer1,peer2)  org2(peer1,peer2)  ca0 ca1
    2、Start all nodes
    3、Config  caliper & Run test，the TPS is 440
Scene two:
     1、Environment: 2orderer(kafka modle)  4 kafka  3 zookeeper  org1(peer1,peer2) org2(peer1,peer2) ca0  ca1
    2、Start all nodes
    3、Config  caliper & Run test，the TPS is 20

why?
why TPS is so low?


",closed,False,2018-06-28 09:10:26,2019-03-05 09:08:23
caliper,Caoxuyang,https://github.com/hyperledger/caliper/issues/106,https://api.github.com/repos/hyperledger/caliper/issues/106,Can't understand the idea of rate-control function ,"Hi I didn't quite understand the codes in function of rate-control:


>  applyRateControl(start, idx, currentResults) {
>         if(this.sleepTime === 0) {
>             return Promise.resolve();
>         }
>         let diff = (this.sleepTime * idx - (Date.now() - start));
>         if( diff > 5) {
>             return Sleep(diff);
>         }
>         else {
>             return Promise.resolve();
>         }
>     }

Since when I apply my code to use this function, my send rate is not very accurate.",closed,False,2018-06-27 06:23:20,2018-06-27 06:55:35
caliper,zhulingyanc,https://github.com/hyperledger/caliper/issues/105,https://api.github.com/repos/hyperledger/caliper/issues/105,Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.,"[root@cbc-231 caliper-master]# node benchmark/simple/main.js -c config-fabric.json -n fabric.json            
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
ca_peerOrg1_ is up-to-date
ca_peerOrg2_ is up-to-date
Starting simplenetwork_peer_1 ... 
simplenetwork_ca_1 is up-to-date
orderer.example.com is up-to-date
peer0.org2.example.com is up-to-date
peer0.org1.example.com is up-to-date
peer1.org2.example.com is up-to-date
Starting simplenetwork_peer_1 ... done
# create mychannel......
E0626 18:28:08.258706805    2720 ssl_transport_security.cc:1063] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
error: [Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: Connect Failed\n    at Object.exports.createStatusError (/home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/common.js:87:15)\n    at ClientDuplexStream._emitStatusIfDone (/home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/client.js:235:26)\n    at ClientDuplexStream._readsDone (/home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/client.js:201:8)\n    at /home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/client_interceptors.js:679:15""
not ok 1 Failed to create channels Error: SERVICE_UNAVAILABLE at ClientDuplexStream.<anonymous> (/home/hurf/caliper-master/node_modules/fabric-client/lib/Orderer.js:136:21) at ClientDuplexStream.emit (events.js:180:13) at ClientDuplexStream._emitStatusIfDone (/home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/client.js:236:12) at ClientDuplexStream._readsDone (/home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/client.js:201:8) at /home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/client_interceptors.js:679:15
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/home/hurf/caliper-master/src/fabric/create-channel.js:160:19)
    stack: |-
      Error: Failed to create channels Error: SERVICE_UNAVAILABLE
          at ClientDuplexStream.<anonymous> (/home/hurf/caliper-master/node_modules/fabric-client/lib/Orderer.js:136:21)
          at ClientDuplexStream.emit (events.js:180:13)
          at ClientDuplexStream._emitStatusIfDone (/home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/client.js:236:12)
          at ClientDuplexStream._readsDone (/home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/client.js:201:8)
          at /home/hurf/caliper-master/node_modules/fabric-client/node_modules/grpc/src/client_interceptors.js:679:15
          at Test.assert [as _assert] (/home/hurf/caliper-master/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/hurf/caliper-master/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/home/hurf/caliper-master/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/home/hurf/caliper-master/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/home/hurf/caliper-master/src/fabric/create-channel.js:160:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:118:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/home/hurf/caliper-master/src/fabric/create-channel.js:161:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:118:7)
not ok 2 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/home/hurf/caliper-master/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/home/hurf/caliper-master/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/home/hurf/caliper-master/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/home/hurf/caliper-master/src/comm/bench-flow.js:347:18)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:118:7)
  ...

1..2
# tests 2
# pass  0
# fail  2",open,False,2018-06-26 02:43:26,2018-11-06 13:39:31
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/104,https://api.github.com/repos/hyperledger/caliper/issues/104,[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0,"Client 29744: error Error: could not find context's information in config file
    at Fabric.getContext (/home/ubuntu/caliper/src/fabric/fabric.js:84:35)
    at Blockchain.getContext (/home/ubuntu/caliper/src/comm/blockchain.js:87:27)
    at doTest (/home/ubuntu/caliper/src/comm/client/local-client.js:164:23)
    at process.<anonymous> (/home/ubuntu/caliper/src/comm/client/local-client.js:218:17)
    at emitTwo (events.js:126:13)
    at process.emit (events.js:214:7)
    at emit (internal/child_process.js:772:12)
    at _combinedTickCallback (internal/process/next_tick.js:141:11)
    at process._tickCallback (internal/process/next_tick.js:180:9)
(node:29744) UnhandledPromiseRejectionWarning: Error: could not find context's information in config file
    at Fabric.getContext (/home/ubuntu/caliper/src/fabric/fabric.js:84:35)
    at Blockchain.getContext (/home/ubuntu/caliper/src/comm/blockchain.js:87:27)
    at doTest (/home/ubuntu/caliper/src/comm/client/local-client.js:164:23)
    at process.<anonymous> (/home/ubuntu/caliper/src/comm/client/local-client.js:218:17)
    at emitTwo (events.js:126:13)
    at process.emit (events.js:214:7)
    at emit (internal/child_process.js:772:12)
    at _combinedTickCallback (internal/process/next_tick.js:141:11)
    at process._tickCallback (internal/process/next_tick.js:180:9)
(node:29744) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3)
(node:29744) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0",closed,False,2018-06-24 14:27:27,2018-08-08 08:26:45
caliper,aklenik,https://github.com/hyperledger/caliper/pull/103,https://api.github.com/repos/hyperledger/caliper/issues/103,Fix rejected Fabric proposal handling,"The error handling part of a rejected Fabric Tx proposal referenced an undefined attribute of the response.
In case of rejected proposal, an explicit `Error` object is returned as result (see [this SDK code](https://github.com/hyperledger/fabric-sdk-node/blob/bc7d7db22e209f3c2477a0023ba0e8a0201cebe6/fabric-client/lib/client-utils.js#L103)).

@haojun can you review this quick-fix?",closed,True,2018-06-20 13:51:56,2018-07-06 08:52:17
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/102,https://api.github.com/repos/hyperledger/caliper/issues/102,error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed,"guolidong:/opt/gopath/src/github.com/hyperledger/caliper$  node benchmark/simple/main.js -c config-fabric-kafka.json -n fabric-kafka.json
TAP version 13
# #######Caliper Test######
# create mychannel......
ok 1 created mychannel successfully
# Sleep 5s......
# Join channel......
# join mychannel
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
E0619 19:50:29.135480000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:29.136101000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:29.137642000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:29.143612000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
E0619 19:50:30.131582000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:30.137312000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:31.994305000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:31.996199000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
    at new createStatusError (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:64:15)
    at /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client.js:583:15
E0619 19:50:34.902132000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:34.903814000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:38.605351000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:38.607226000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:46.409797000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:46.411316000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:57.231567000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0619 19:50:57.233355000 140735644013440 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
not ok 2 TypeError: Cannot read property 'stack' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'stack' of undefined]
    at: process.onetime (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'stack' of undefined
          at channels.reduce.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:216:56)
          at <anonymous>
  ...

1..2
# tests 2
# pass  1
# fail  1

guolidong:/opt/gopath/src/github.com/hyperledger/caliper$ ",closed,False,2018-06-19 11:58:42,2018-07-13 03:25:29
caliper,abhi201191,https://github.com/hyperledger/caliper/issues/101,https://api.github.com/repos/hyperledger/caliper/issues/101,ACTIVATION_REQUIRED while testing composer networks,"While testing composer basic-sample-network, getting this error at peer:
[mychannel][aa9c533b] failed to invoke chaincode name:""basic-sample-network"" , error: transaction returned with failure: Error: The current identity, with the name 'admin' and the identifier '01899e04161a3a6d64670504fa122e55818295352929b6a616333a3739fde3f2', must be activated (ACTIVATION_REQUIRED)
",open,False,2018-06-19 08:53:58,2018-10-10 08:07:43
caliper,ynamiki,https://github.com/hyperledger/caliper/pull/100,https://api.github.com/repos/hyperledger/caliper/issues/100,Fix File Name in Composer Document,"`benchmark/composer/runner.js` has been renamed to `main.js` at 3259d0a4f6bb2a5300c8c9986e472870481ef351.
",closed,True,2018-06-17 23:38:11,2018-08-31 11:33:45
caliper,ynamiki,https://github.com/hyperledger/caliper/pull/99,https://api.github.com/repos/hyperledger/caliper/issues/99,Merge network/fabric-v11 and network/fabric directories,"As mentioned in #88, now we don't to need separate the directories.

This patch moves contents of `network/fabric-v11` directory to `network/fabric` and update file paths in configuration files.",closed,True,2018-06-17 23:22:54,2018-07-20 08:50:27
caliper,RobertDiebels,https://github.com/hyperledger/caliper/issues/98,https://api.github.com/repos/hyperledger/caliper/issues/98,Hard-coded MSPID,"The file [src/fabric/util.js ](https://github.com/hyperledger/caliper/blob/master/src/fabric/util.js#L291)contains a hardcoded MSPID: `OrdererMSP`. Even-though all the files with network options give the illusion the mspid is configurable for an orderer.

It took me over 2 hours to locate this mistake because I thought something was wrong with my own configuration. Please don't ever hard-code something like that again.",closed,False,2018-06-17 13:56:59,2018-07-16 10:59:20
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/97,https://api.github.com/repos/hyperledger/caliper/issues/97,Rejecting broadcast of message from 172.20.0.1:51068 with SERVICE_UNAVAILABLE: ,"guolidong:/opt/gopath/src/github.com/hyperledger/caliper$  node benchmark/simple/main.js -c config-fabric-kafka.json -n fabric-kafka.json
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/kafka/docker-compose.yaml up -d
Creating ca_peerOrg2 ... done
Creating zookeeper2  ... done
Creating zookeeper1  ... done
Creating ca_peerOrg1 ... done
Creating kafka_ca_1  ... done
Creating zookeeper0  ... done
Creating kafka0      ... done
Creating kafka2      ... done
Creating kafka1      ... done
Creating kafka3      ... done
Creating orderer.example.com ... done
Creating peer1.org2.example.com ... done
Creating peer0.org1.example.com ... done
Creating peer1.org1.example.com ... done
Creating peer0.org2.example.com ... done
# create mychannel......
not ok 1 Failed to create channels Error: create status is SERVICE_UNAVAILABLE at channel.organizations.reduce.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:146:43) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:160:19)
    stack: |-
      Error: Failed to create channels Error: create status is SERVICE_UNAVAILABLE
          at channel.organizations.reduce.then.then.then (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:146:43)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:160:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/fabric/create-channel.js:161:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
not ok 2 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/opt/gopath/src/github.com/hyperledger/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/opt/gopath/src/github.com/hyperledger/caliper/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/opt/gopath/src/github.com/hyperledger/caliper/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/caliper/src/comm/bench-flow.js:347:18)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

1..2
# tests 2
# pass  0
# fail  2

guolidong:/opt/gopath/src/github.com/hyperledger/caliper$ 
guolidong:/opt/gopath/src/github.com/hyperledger/caliper$ 
guolidong:/opt/gopath/src/github.com/hyperledger/caliper$ docker ps -a
CONTAINER ID        IMAGE                                       COMMAND                  CREATED             STATUS              PORTS                                                                       NAMES
ae73b773cb8a        hyperledger/fabric-peer:x86_64-1.1.0        ""peer node start""        7 seconds ago       Up 8 seconds        0.0.0.0:8051->7051/tcp, 0.0.0.0:8053->7053/tcp                              peer0.org2.example.com
30585812b9aa        hyperledger/fabric-peer:x86_64-1.1.0        ""peer node start""        7 seconds ago       Up 8 seconds        0.0.0.0:8057->7051/tcp, 0.0.0.0:8059->7053/tcp                              peer1.org2.example.com
c96a34a8d5b2        hyperledger/fabric-peer:x86_64-1.1.0        ""peer node start""        7 seconds ago       Up 7 seconds        0.0.0.0:7057->7051/tcp, 0.0.0.0:7059->7053/tcp                              peer1.org1.example.com
1e6e84cc6d24        hyperledger/fabric-peer:x86_64-1.1.0        ""peer node start""        7 seconds ago       Up 8 seconds        0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp                              peer0.org1.example.com
ddfb6e1ca2a2        hyperledger/fabric-orderer:x86_64-1.1.0     ""sh -c 'ln -snf /usr…""   8 seconds ago       Up 9 seconds        0.0.0.0:7050->7050/tcp                                                      orderer.example.com
54baca95c792        hyperledger/fabric-kafka:x86_64-0.4.6       ""/docker-entrypoint.…""   10 seconds ago      Up 11 seconds       9093/tcp, 0.0.0.0:32818->9092/tcp                                           kafka1
aa4fb4832103        hyperledger/fabric-kafka:x86_64-0.4.6       ""/docker-entrypoint.…""   10 seconds ago      Up 11 seconds       9093/tcp, 0.0.0.0:32819->9092/tcp                                           kafka3
7ffb9ae6b731        hyperledger/fabric-kafka:x86_64-0.4.6       ""/docker-entrypoint.…""   10 seconds ago      Up 10 seconds       9093/tcp, 0.0.0.0:32817->9092/tcp                                           kafka2
b51d01ee9ea3        hyperledger/fabric-kafka:x86_64-0.4.6       ""/docker-entrypoint.…""   10 seconds ago      Up 11 seconds       9093/tcp, 0.0.0.0:32816->9092/tcp                                           kafka0
aaebe3094b2c        hyperledger/fabric-ca:x86_64-1.1.0          ""sh -c 'fabric-ca-se…""   12 seconds ago      Up 14 seconds       7054/tcp                                                                    kafka_ca_1
d0d8faa266cb        hyperledger/fabric-zookeeper:x86_64-0.4.6   ""/docker-entrypoint.…""   12 seconds ago      Up 12 seconds       0.0.0.0:32815->2181/tcp, 0.0.0.0:32813->2888/tcp, 0.0.0.0:32810->3888/tcp   zookeeper0
92a8eb907d87        hyperledger/fabric-ca:x86_64-1.1.0          ""sh -c 'fabric-ca-se…""   12 seconds ago      Up 12 seconds       0.0.0.0:7054->7054/tcp                                                      ca_peerOrg1
92de8fa0243f        hyperledger/fabric-zookeeper:x86_64-0.4.6   ""/docker-entrypoint.…""   12 seconds ago      Up 12 seconds       0.0.0.0:32814->2181/tcp, 0.0.0.0:32812->2888/tcp, 0.0.0.0:32809->3888/tcp   zookeeper2
0b9abb4a6ea7        hyperledger/fabric-zookeeper:x86_64-0.4.6   ""/docker-entrypoint.…""   12 seconds ago      Up 14 seconds       0.0.0.0:32811->2181/tcp, 0.0.0.0:32808->2888/tcp, 0.0.0.0:32807->3888/tcp   zookeeper1
2dce9cd07c4d        hyperledger/fabric-ca:x86_64-1.1.0          ""sh -c 'fabric-ca-se…""   12 seconds ago      Up 13 seconds       0.0.0.0:8054->7054/tcp                                                      ca_peerOrg2
guolidong:/opt/gopath/src/github.com/hyperledger/caliper$ docker logs orderer.example.com
2018-06-15 20:35:37.553 CST [orderer/common/server] prettyPrintStruct -> INFO 001 Orderer config values:
	General.LedgerType = ""file""
	General.ListenAddress = ""0.0.0.0""
	General.ListenPort = 7050
	General.TLS.Enabled = true
	General.TLS.PrivateKey = ""/etc/hyperledger/msp/orderer/tls/server.key""
	General.TLS.Certificate = ""/etc/hyperledger/msp/orderer/tls/server.crt""
	General.TLS.RootCAs = [/etc/hyperledger/msp/orderer/tls/ca.crt /etc/hyperledger/msp/peerOrg1/tls/ca.crt /etc/hyperledger/msp/peerOrg2/tls/ca.crt]
	General.TLS.ClientAuthRequired = false
	General.TLS.ClientRootCAs = []
	General.Keepalive.ServerMinInterval = 1m0s
	General.Keepalive.ServerInterval = 2h0m0s
	General.Keepalive.ServerTimeout = 20s
	General.GenesisMethod = ""file""
	General.GenesisProfile = ""SampleInsecureSolo""
	General.SystemChannel = ""testchainid""
	General.GenesisFile = ""/etc/hyperledger/configtx/twoorgs.genesis.block""
	General.Profile.Enabled = false
	General.Profile.Address = ""0.0.0.0:6060""
	General.LogLevel = ""info""
	General.LogFormat = ""%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}""
	General.LocalMSPDir = ""/etc/hyperledger/msp/orderer/msp""
	General.LocalMSPID = ""OrdererMSP""
	General.BCCSP.ProviderName = ""SW""
	General.BCCSP.SwOpts.SecLevel = 256
	General.BCCSP.SwOpts.HashFamily = ""SHA2""
	General.BCCSP.SwOpts.Ephemeral = false
	General.BCCSP.SwOpts.FileKeystore.KeyStorePath = ""/etc/hyperledger/msp/orderer/msp/keystore""
	General.BCCSP.SwOpts.DummyKeystore =
	General.BCCSP.PluginOpts =
	General.BCCSP.Pkcs11Opts =
	General.Authentication.TimeWindow = 15m0s
	FileLedger.Location = ""/var/hyperledger/production/orderer""
	FileLedger.Prefix = ""hyperledger-fabric-ordererledger""
	RAMLedger.HistorySize = 1000
	Kafka.Retry.ShortInterval = 5s
	Kafka.Retry.ShortTotal = 10m0s
	Kafka.Retry.LongInterval = 5m0s
	Kafka.Retry.LongTotal = 12h0m0s
	Kafka.Retry.NetworkTimeouts.DialTimeout = 10s
	Kafka.Retry.NetworkTimeouts.ReadTimeout = 10s
	Kafka.Retry.NetworkTimeouts.WriteTimeout = 10s
	Kafka.Retry.Metadata.RetryMax = 3
	Kafka.Retry.Metadata.RetryBackoff = 250ms
	Kafka.Retry.Producer.RetryMax = 3
	Kafka.Retry.Producer.RetryBackoff = 100ms
	Kafka.Retry.Consumer.RetryBackoff = 2s
	Kafka.Verbose = false
	Kafka.Version = 0.10.2.0
	Kafka.TLS.Enabled = false
	Kafka.TLS.PrivateKey = """"
	Kafka.TLS.Certificate = """"
	Kafka.TLS.RootCAs = []
	Kafka.TLS.ClientAuthRequired = false
	Kafka.TLS.ClientRootCAs = []
	Debug.BroadcastTraceDir = """"
	Debug.DeliverTraceDir = """"
2018-06-15 20:35:37.570 CST [orderer/common/server] initializeServerConfig -> INFO 002 Starting orderer with TLS enabled
2018-06-15 20:35:37.596 CST [fsblkstorage] newBlockfileMgr -> INFO 003 Getting block information from block storage
2018-06-15 20:35:37.609 CST [orderer/consensus/kafka] newChain -> INFO 004 [channel: testchainid] Starting chain with last persisted offset -3 and last recorded block 0
2018-06-15 20:35:37.616 CST [orderer/commmon/multichannel] NewRegistrar -> INFO 005 Starting system channel 'testchainid' with genesis block hash 23705eeb5f884bf067ce8c1a561c06eae4d4d7556880b517b1bc9ef02e87ccf4 and orderer type kafka
2018-06-15 20:35:37.617 CST [orderer/common/server] Start -> INFO 006 Starting orderer:
 Version: 1.1.0
 Go version: go1.9.2
 OS/Arch: linux/amd64
 Experimental features: false
2018-06-15 20:35:37.617 CST [orderer/consensus/kafka] setupProducerForChannel -> INFO 008 [channel: testchainid] Setting up the producer for this channel...
2018-06-15 20:35:37.617 CST [orderer/common/server] Start -> INFO 007 Beginning to serve requests
2018-06-15 20:35:40.005 CST [orderer/common/broadcast] Handle -> WARN 009 [channel: mychannel] Rejecting broadcast of message from 172.20.0.1:51068 with SERVICE_UNAVAILABLE: rejected by Consenter: will not enqueue, consenter for this channel hasn't started yet
2018-06-15 20:35:43.399 CST [orderer/consensus/kafka] startThread -> INFO 00a [channel: testchainid] Producer set up successfully
2018-06-15 20:35:43.399 CST [orderer/consensus/kafka] sendConnectMessage -> INFO 00b [channel: testchainid] About to post the CONNECT message...
2018-06-15 20:35:43.916 CST [orderer/consensus/kafka] startThread -> INFO 00c [channel: testchainid] CONNECT message posted successfully
2018-06-15 20:35:43.916 CST [orderer/consensus/kafka] setupParentConsumerForChannel -> INFO 00d [channel: testchainid] Setting up the parent consumer for this channel...
2018-06-15 20:35:43.920 CST [orderer/consensus/kafka] startThread -> INFO 00e [channel: testchainid] Parent consumer set up successfully
2018-06-15 20:35:43.920 CST [orderer/consensus/kafka] setupChannelConsumerForChannel -> INFO 00f [channel: testchainid] Setting up the channel consumer for this channel (start offset: -2)...
2018-06-15 20:35:43.931 CST [orderer/consensus/kafka] startThread -> INFO 010 [channel: testchainid] Channel consumer set up successfully
2018-06-15 20:35:43.931 CST [orderer/consensus/kafka] startThread -> INFO 011 [channel: testchainid] Start phase completed successfully
guolidong:/opt/gopath/src/github.com/hyperledger/caliper$ 
",closed,False,2018-06-15 12:47:29,2018-10-29 02:30:01
caliper,ATMarcks,https://github.com/hyperledger/caliper/issues/96,https://api.github.com/repos/hyperledger/caliper/issues/96,Cannot deploy non-sample Composer networks,"Steps to reproduce:

1. I create an empty business network via the Hyperledger Composer playground and name it `my-test-network`. I leave everything default, but I add one participant type to my model. I download the `.bna` file, extract it, and put the resulting files in `caliper/src/contract/composer/my-test-network`
2. I add the following to the caliper `package.json`:

```
    ""composer-admin"": ""0.19.0"",
    ""composer-client"": ""0.19.0"",
    ""composer-common"": ""0.19.0"",
    ""fabric-ca-client"": ""1.1.0"",
    ""fabric-client"": ""1.1.0""
```
and run `npm install`.

3. I add a modified test file to `caliper/benchmark/composer/my-test-network/testing.js`
3. Inside of `caliper/benchmark/composer/config-composer.json` I modify `rounds` and update the `label` fields to the name of my network, `my-test-network`. I update the `callback` fields to be `benchmark/composer/my-test-network/testing.js`
4. Inside of `caliper/network/fabric-v11/2-org-1-peer/composer.json` I modify `composer.chaincodes` and change `id` to be `my-test-network`. I leave the version to be `0.1.0`, the same version that is in my network's `package.json`
5. I change my working directory to be `caliper/benchmark/composer` and I run `node main.js`:

```
✓ Creating channels mychannel
✓ Attempting to join peer peer0.org1.example.com to channel mychannel (attempt 1/5)
✓ Attempting to join peer peer0.org2.example.com to channel mychannel (attempt 1/5)
Deploying Composer
✓ Performing Composer runtime install for network my-test-network with card PerfPeerAdmin@Org1
✓ Performing Composer runtime install for network my-test-network with card PerfPeerAdmin@Org2
Starting business network my-test-network. This involves building chaincode containers and may take several minutes to complete...
```
The application gets stuck at this stage until it times out.

```
Starting business network my-test-network. This involves building chaincode containers and may take several minutes to complete...
composer.installSmartContract() failed,  Error: Error trying to start business network. Error: No valid responses from any peers.
Response from attempted peer comms was an error: Error: 2 UNKNOWN: timeout expired while starting chaincode my-test-network:0.1.0(networkid:dev,peerid:peer0.org1.example.com,tx:cf9a6b55e448683d7e0ce89fd7834b704c2f72a2959bc1bc03552dcb92b84854)
Response from attempted peer comms was an error: Error: 2 UNKNOWN: timeout expired while starting chaincode my-test-network:0.1.0(networkid:dev,peerid:peer0.org2.example.com,tx:cf9a6b55e448683d7e0ce89fd7834b704c2f72a2959bc1bc03552dcb92b84854)
```

The peer logs are not much more enlightening, displays only the same errors. I can test `basic-sample-network` with seemingly no problems.

This could be a problem with composer or my configs, but `composer-cli` seems to have no problem with `composer network install`/`composer network start`",open,False,2018-06-15 06:47:12,2019-03-11 12:11:02
caliper,RobertDiebels,https://github.com/hyperledger/caliper/issues/95,https://api.github.com/repos/hyperledger/caliper/issues/95,Don't assume relative paths in config-files,"The fabric blockchain configuration file expects ""relative-to-project-root"" paths for certificates. Users should be able to pass absolute paths.

`path.join(__dirname, '../..', somepathvalue)`

I encountered this when creating a Docker container out of caliper.I mounted my configuration files into a different directory and was faced with a file not found exception even though I provided an absolute path to the files.",closed,False,2018-06-14 15:59:30,2018-10-10 08:10:13
caliper,ski2per,https://github.com/hyperledger/caliper/pull/94,https://api.github.com/repos/hyperledger/caliper/issues/94,add transfer to simple benchmark and fix transfer issue in chaincode,add transfer to simple benchmark and fix transfer issue in chaincode,closed,True,2018-06-14 09:43:33,2018-07-03 07:11:05
caliper,starrycheng,https://github.com/hyperledger/caliper/issues/93,https://api.github.com/repos/hyperledger/caliper/issues/93,running main.js and BAD REQUEST encountered,"I have installed the caliper package and dependencies are installed.
I did not modify anything either in the config.json file or in the fabric.json file.
Then I simply run 

`node benchmark/simple/main.js -c config.json`
 and I met the following error:

```
# create mychannel......
error: [Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: EOF\n    at createStatusError (/Users/starry/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:64:15)\n    at Client
DuplexStream._emitStatusIfDone (/Users/starry/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:270:19)\n    at ClientDuplexStream._receiveStatus (/Users/starry/caliper/node_modules/fabri
c-client/node_modules/grpc/src/client.js:248:8)\n    at /Users/starry/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:804:12""
not ok 1 Failed to create channels Error: SERVICE_UNAVAILABLE at ClientDuplexStream.<anonymous> (/Users/starry/caliper/node_modules/fabric-client/lib/Orderer.js:138:21) at emitOne (events.js:116:13) at Cl
ientDuplexStream.emit (events.js:211:7) at ClientDuplexStream._emitStatusIfDone (/Users/starry/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:271:12) at ClientDuplexStream._receiveStat
us (/Users/starry/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:248:8) at /Users/starry/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:804:12
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/Users/starry/caliper/src/fabric/create-channel.js:160:19)
    stack: |-
      Error: Failed to create channels Error: SERVICE_UNAVAILABLE
          at ClientDuplexStream.<anonymous> (/Users/starry/caliper/node_modules/fabric-client/lib/Orderer.js:138:21)
          at emitOne (events.js:116:13)
          at ClientDuplexStream.emit (events.js:211:7)
          at ClientDuplexStream._emitStatusIfDone (/Users/starry/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:271:12)
          at ClientDuplexStream._receiveStatus (/Users/starry/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:248:8)
          at /Users/starry/caliper/node_modules/fabric-client/node_modules/grpc/src/client.js:804:12
          at Test.assert [as _assert] (/Users/starry/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/Users/starry/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/Users/starry/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/Users/starry/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.then.catch (/Users/starry/caliper/src/fabric/create-channel.js:160:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/Users/starry/caliper/src/fabric/create-channel.js:161:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
not ok 2 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/Users/starry/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/Users/starry/caliper/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/Users/starry/caliper/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/Users/starry/caliper/src/comm/bench-flow.js:347:18)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
```
I have seen a closed issue mentioned the **BAD REQUEST** problem, which has feedback that the problem might be caused by the version of fabric.
However, since i did not modify the fabric.json file, and it is configured as network/fabric/simplenetwork/cryto-config

I am wondering whether this configure is ok, if it is not ok why it occurs in the default version of the config files. If it is ok, then what causes the aforementioned error?



",open,False,2018-06-14 08:29:24,2018-12-03 09:48:24
caliper,Caoxuyang,https://github.com/hyperledger/caliper/issues/92,https://api.github.com/repos/hyperledger/caliper/issues/92,"An enhancement suggestion, and I'd like to contribute to this project","Hi there,
I'm an intern in Microsoft and I wonder can I try to extend the caliper to support Ethereum and Parity private chains? 
And this is the first step, if we can do with Eth and Parity, we can support most rpc platforms like EOS and so on. (My thought, maybe I'm wrong.)
And if I'm allowed, I's be happy to start the work and contribute to caliper!

Best Regards,
Xuyang",closed,False,2018-06-13 03:22:55,2019-02-13 01:25:01
caliper,BeanChan1987,https://github.com/hyperledger/caliper/issues/91,https://api.github.com/repos/hyperledger/caliper/issues/91,fabric1.1.0 Cannot read property 'getConnectivityState' of undefined Join channel failed,"beans-MacBook-Pro:caliper bean$ npm install fabric-ca-client@1.1.0 fabric-client@1.1.0
fabric-client@1.1.0
fabric-ca-client@1.1.0
updated 2 packages in 5.893s
beans-MacBook-Pro:caliper bean$ cd benchmark/simple/
beans-MacBook-Pro:simple bean$ ls
config-composite-rate.json	config-sawtooth.json		fabric-remote.json		main.js				sawtooth.json
config-fabric.json		config-zookeeper.json		fabric.json			open.js
config-iroha.json		config.json			iroha.json			query.js
beans-MacBook-Pro:simple bean$ node main.js -c config-fabric.json -n fabric.json 
TAP version 13
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
Creating orderer.example.com ... done
Creating ca_peerOrg1         ... done
Creating ca_peerOrg2         ... done
Creating couchdb             ... done
Creating peer0.org1.example.com ... done
Creating peer0.org2.example.com ... done
Creating peer1.org2.example.com ... done
Creating peer1.org1.example.com ... done
create mychannel......
ok 1 created mychannel successfully
Sleep 5s......
Join channel......
join mychannel
not ok 2 Failed to join peers, TypeError: Cannot read property 'getConnectivityState' of undefined at EventHub._checkConnection (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:479:39) at EventHub.registerBlockEvent (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:658:8) at Promise (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:140:20) at new Promise (<anonymous>) at eventhubs.forEach (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:137:29) at Array.forEach (<anonymous>) at Client.newDefaultKeyValueStore.then.then.then.then (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:136:19) at <anonymous>
    operator: fail
    at: channels.reduce.then.catch (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:216:19)
    stack: |-
      Error: Failed to join peers, TypeError: Cannot read property 'getConnectivityState' of undefined
          at EventHub._checkConnection (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:479:39)
          at EventHub.registerBlockEvent (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:658:8)
          at Promise (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:140:20)
          at new Promise (<anonymous>)
          at eventhubs.forEach (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:137:29)
          at Array.forEach (<anonymous>)
          at Client.newDefaultKeyValueStore.then.then.then.then (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:136:19)
          at <anonymous>
          at Test.assert [as _assert] (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/tape/lib/test.js:76:32)
          at channels.reduce.then.catch (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:216:19)
          at <anonymous>
fabric.init() failed, Error: Fabric: Join channel failed
    at channels.reduce.then.catch (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/fabric/join-channel.js:217:31)
    at <anonymous>
not ok 3 TypeError: Cannot read property 'getUpdates' of undefined
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/src/comm/bench-flow.js:347:18)
          at <anonymous>
/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:308
			if(self._stream) state = self._stream.call.channel_.getConnectivityState();
			                                                   
TypeError: Cannot read property 'getConnectivityState' of undefined
    at ClientDuplexStream.<anonymous> (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/fabric-client/lib/EventHub.js:308:56)
    at emitOne (events.js:116:13)
    at ClientDuplexStream.emit (events.js:211:7)
    at addChunk (_stream_readable.js:263:12)
    at readableAddChunk (_stream_readable.js:250:11)
    at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
    at Object.onReceiveMessage (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client_interceptors.js:1302:19)
    at InterceptingListener.recvMessageWithContext (/Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client_interceptors.js:629:19)
    at /Users/bean/Developer/gopath/src/github.com/hyperledger/caliper/node_modules/grpc/src/client_interceptors.js:728:14",closed,False,2018-06-10 10:31:29,2018-06-28 09:01:17
caliper,ynamiki,https://github.com/hyperledger/caliper/pull/90,https://api.github.com/repos/hyperledger/caliper/issues/90,Simplify docker-compose.yaml,"`network/fabric/simplenetwork/docker-compose.yaml` has many ""copy & paste"" lines. This patch deletes copied lines by using `extends` feature of Docker Compose.",closed,True,2018-06-07 03:03:46,2018-08-31 11:31:54
caliper,huikang,https://github.com/hyperledger/caliper/pull/89,https://api.github.com/repos/hyperledger/caliper/issues/89,Change the profile section in fabric configtx.yaml file,"To make it work with the latest fabric code, while still being
compatible with v1.0/1.1

Signed-off-by: Hui Kang <kangh@us.ibm.com>",closed,True,2018-06-06 02:45:25,2018-06-12 08:42:23
caliper,ynamiki,https://github.com/hyperledger/caliper/issues/88,https://api.github.com/repos/hyperledger/caliper/issues/88,Two Network Directories for Fabric,"There are two directories for Fabric: `network/fabric` and `network/fabric-v11`.

I would like to know intentions of each directory.
`fabric` is for Fabric v1.0 only? (but I can use `fabric/simplenetwork` with Fabric v1.1)",closed,False,2018-06-06 02:29:15,2018-06-13 08:31:28
caliper,ynamiki,https://github.com/hyperledger/caliper/pull/87,https://api.github.com/repos/hyperledger/caliper/issues/87,Delete Unused Container,In `network/fabric/simplenetwork/docker-compose.yaml` the container `couchdb` is defined but not used.,closed,True,2018-06-05 04:31:04,2018-08-31 11:32:33
caliper,haojun,https://github.com/hyperledger/caliper/pull/86,https://api.github.com/repos/hyperledger/caliper/issues/86,update the version of iroha-lib,"Minor change in package.json
1. udpate the minimally required version of iroha-lib
2. rollback the version of grpc, which was updated by accident

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-06-05 02:07:07,2018-06-13 09:23:32
caliper,JulienGuo,https://github.com/hyperledger/caliper/pull/85,https://api.github.com/repos/hyperledger/caliper/issues/85,keep fabric images version in configuration same with docker-compose.yaml version,keep fabric images version in configuration same with docker-compose.yaml version,closed,True,2018-06-04 09:20:35,2018-06-13 02:20:47
caliper,ynamiki,https://github.com/hyperledger/caliper/pull/84,https://api.github.com/repos/hyperledger/caliper/issues/84,Fix typo in Document,This patch fixes a typo in the document.,closed,True,2018-06-04 07:45:55,2018-06-04 08:58:06
caliper,haojun,https://github.com/hyperledger/caliper/pull/83,https://api.github.com/repos/hyperledger/caliper/issues/83,support smallbank benchmark with fabric,"Main updates:

1. Add chaincode of smallbank
2. Update fabric adaptor to support submit multiple txns using invokesmartcontract()
3. Minor changes for smallbankOperations.js, using round-robin instead of random algorithm for account selection in workload generation to avoid conflicting txns 
4. Add fabric related configuration files
5. Add a Readme doc in the smallbank folder

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-05-30 06:45:03,2018-06-01 06:26:24
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/82,https://api.github.com/repos/hyperledger/caliper/issues/82,TypeError: testFn is not a function,"guolidong:~/Documents/GitHub/caliper$ sudo node benchmark/simple/main.js -c config-fabric.json -n fabric.json
Password:
TAP version 13
# (anonymous)
not ok 1 TypeError: testFn is not a function
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: testFn is not a function]
    at: Test.onetime [as end] (/Users/guolidong/Documents/GitHub/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: testFn is not a function
          at Test.<anonymous> (/Users/guolidong/Documents/GitHub/caliper/node_modules/tape-promise/index.es5.js:21:13)
          at Test.bound [as _cb] (/Users/guolidong/Documents/GitHub/caliper/node_modules/tape/lib/test.js:77:32)
          at Test.run (/Users/guolidong/Documents/GitHub/caliper/node_modules/tape/lib/test.js:96:10)
          at Test.bound [as run] (/Users/guolidong/Documents/GitHub/caliper/node_modules/tape/lib/test.js:77:32)
          at Immediate.next (/Users/guolidong/Documents/GitHub/caliper/node_modules/tape/lib/results.js:71:15)
          at runCallback (timers.js:789:20)
          at tryOnImmediate (timers.js:751:5)
          at processImmediate [as _immediateCallback] (timers.js:722:5)
  ...

1..1
# tests 1
# pass  0
# fail  1",closed,False,2018-05-29 09:02:46,2018-05-30 09:02:08
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/81,https://api.github.com/repos/hyperledger/caliper/issues/81, Failed to create channels Error: create status is BAD_REQUEST,"root@vm10-210-0-10:~/caliper# node benchmark/simple/main.js -c config-fabric.json -n fabric.json
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
ca_peerOrg1 is up-to-date
orderer.example.com is up-to-date
couchdb is up-to-date
ca_peerOrg2 is up-to-date
peer0.org2.example.com is up-to-date
peer1.org2.example.com is up-to-date
peer0.org1.example.com is up-to-date
peer1.org1.example.com is up-to-date
# create mychannel......
not ok 1 Failed to create channels Error: create status is BAD_REQUEST at channel.organizations.reduce.then.then.then (/root/caliper/src/fabric/create-channel.js:146:43) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/root/caliper/src/fabric/create-channel.js:160:19)
    stack: |-
      Error: Failed to create channels Error: create status is BAD_REQUEST
          at channel.organizations.reduce.then.then.then (/root/caliper/src/fabric/create-channel.js:146:43)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/root/caliper/node_modules/tape/lib/test.js:225:54)
          at Test.bound [as _assert] (/root/caliper/node_modules/tape/lib/test.js:77:32)
          at Test.fail (/root/caliper/node_modules/tape/lib/test.js:318:10)
          at Test.bound [as fail] (/root/caliper/node_modules/tape/lib/test.js:77:32)
          at channels.reduce.then.then.catch (/root/caliper/src/fabric/create-channel.js:160:19)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/root/caliper/src/fabric/create-channel.js:161:31)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
not ok 2 TypeError: Cannot read property 'getUpdates' of undefined
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'getUpdates' of undefined]
    at: process.onetime (/root/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'getUpdates' of undefined
          at update (/root/caliper/src/gui/src/demo.js:145:26)
          at Object.demoStopWatch [as stopWatch] (/root/caliper/src/gui/src/demo.js:185:5)
          at startPromise.then.then.then.then.then.then.catch (/root/caliper/src/comm/bench-flow.js:347:18)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

1..2
# tests 2
# pass  0
# fail  2

root@vm10-210-0-10:~/caliper# ",closed,False,2018-05-29 06:45:33,2018-06-28 11:09:41
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/80,https://api.github.com/repos/hyperledger/caliper/issues/80,npm ERR! Failed at the grpc@1.10.1 install script.,"root@vm10-210-0-10:/opt/gopath/src/github.com/hyperledger/caliper# npm install

> grpc@1.10.1 install /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc
> node-pre-gyp install --fallback-to-build --library=static_library

/usr/bin/env: ‘node’: Permission denied
npm ERR! code ELIFECYCLE
npm ERR! errno 126
npm ERR! grpc@1.10.1 install: `node-pre-gyp install --fallback-to-build --library=static_library`
npm ERR! Exit status 126
npm ERR! 
npm ERR! Failed at the grpc@1.10.1 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-05-29T02_56_33_212Z-debug.log",closed,False,2018-05-29 02:58:09,2019-03-21 15:16:56
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/79,https://api.github.com/repos/hyperledger/caliper/issues/79,npm ERR! Failed at the pkcs11js@1.0.15 install script.,"root@vm10-210-0-10:/opt/gopath/src/github.com/hyperledger/caliper# node -v
v8.11.2
root@vm10-210-0-10:/opt/gopath/src/github.com/hyperledger/caliper# npm install -g
npm WARN notice [SECURITY] protobufjs has the following vulnerability: 1 moderate. Go here for more details: https://nodesecurity.io/advisories?search=protobufjs&version=5.0.3 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.
npm WARN lifecycle grpc@1.10.1~install: cannot run in wd %s %s (wd=%s) grpc@1.10.1 node-pre-gyp install --fallback-to-build --library=static_library /opt/gopath/src/github.com/hyperledger/caliper/node_modules/grpc
+ caliper@0.1.0
added 303 packages in 30.423s
root@vm10-210-0-10:/opt/gopath/src/github.com/hyperledger/caliper# ls
benchmark  CONTRIBUTING.md  docs  LICENSE  network  node_modules  package.json  README.md  scripts  src  test
root@vm10-210-0-10:/opt/gopath/src/github.com/hyperledger/caliper# npm install fabric-ca-client@1.1.0 fabric-client@1.1.0

> dtrace-provider@0.8.6 install /opt/gopath/src/github.com/hyperledger/caliper/node_modules/dtrace-provider
> node-gyp rebuild || node suppress-error.js

gyp info it worked if it ends with ok
gyp verb cli [ '/usr/bin/nodejs', '/usr/bin/node-gyp', 'rebuild' ]
gyp info using node-gyp@3.0.3
gyp info using node@4.2.6 | linux | x64
gyp verb command rebuild []
gyp verb command clean []
gyp verb clean removing ""build"" directory
gyp verb command configure []
gyp verb check python checking for Python executable ""python2"" in the PATH
gyp verb `which` succeeded python2 /usr/bin/python2
gyp verb check python version `python2 -c ""import platform; print(platform.python_version());""` returned: ""2.7.12\n""
gyp verb get node dir no --target version specified, falling back to host node version: 4.2.6
gyp verb build dir attempting to create ""build"" dir: /opt/gopath/src/github.com/hyperledger/caliper/node_modules/dtrace-provider/build
gyp ERR! configure error 
gyp ERR! stack Error: EACCES: permission denied, mkdir '/opt/gopath/src/github.com/hyperledger/caliper/node_modules/dtrace-provider/build'
gyp ERR! stack     at Error (native)
gyp ERR! System Linux 4.4.0-62-generic
gyp ERR! command ""/usr/bin/nodejs"" ""/usr/bin/node-gyp"" ""rebuild""
gyp ERR! cwd /opt/gopath/src/github.com/hyperledger/caliper/node_modules/dtrace-provider
gyp ERR! node -v v4.2.6
gyp ERR! node-gyp -v v3.0.3
gyp ERR! not ok 
sh: 1: node: Permission denied

> pkcs11js@1.0.15 install /opt/gopath/src/github.com/hyperledger/caliper/node_modules/pkcs11js
> node-gyp rebuild

gyp info it worked if it ends with ok
gyp verb cli [ '/usr/bin/nodejs', '/usr/bin/node-gyp', 'rebuild' ]
gyp info using node-gyp@3.0.3
gyp info using node@4.2.6 | linux | x64
gyp verb command rebuild []
gyp verb command clean []
gyp verb clean removing ""build"" directory
gyp verb command configure []
gyp verb check python checking for Python executable ""python2"" in the PATH
gyp verb `which` succeeded python2 /usr/bin/python2
gyp verb check python version `python2 -c ""import platform; print(platform.python_version());""` returned: ""2.7.12\n""
gyp verb get node dir no --target version specified, falling back to host node version: 4.2.6
gyp verb build dir attempting to create ""build"" dir: /opt/gopath/src/github.com/hyperledger/caliper/node_modules/pkcs11js/build
gyp ERR! configure error 
gyp ERR! stack Error: EACCES: permission denied, mkdir '/opt/gopath/src/github.com/hyperledger/caliper/node_modules/pkcs11js/build'
gyp ERR! stack     at Error (native)
gyp ERR! System Linux 4.4.0-62-generic
gyp ERR! command ""/usr/bin/nodejs"" ""/usr/bin/node-gyp"" ""rebuild""
gyp ERR! cwd /opt/gopath/src/github.com/hyperledger/caliper/node_modules/pkcs11js
gyp ERR! node -v v4.2.6
gyp ERR! node-gyp -v v3.0.3
gyp ERR! not ok 
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: dtrace-provider@0.8.6 (node_modules/dtrace-provider):
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: dtrace-provider@0.8.6 install: `node-gyp rebuild || node suppress-error.js`
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: spawn ENOENT

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! pkcs11js@1.0.15 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the pkcs11js@1.0.15 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2018-05-29T02_28_37_750Z-debug.log
root@vm10-210-0-10:/opt/gopath/src/github.com/hyperledger/caliper# node -v
v8.11.2
root@vm10-210-0-10:/opt/gopath/src/github.com/hyperledger/caliper# ",closed,False,2018-05-29 02:36:27,2018-06-09 09:17:20
caliper,GiveMeSunShine,https://github.com/hyperledger/caliper/issues/78,https://api.github.com/repos/hyperledger/caliper/issues/78," failed 'open' testing, Error: Client encountered unexpected error","When I was in the directory caliper，execute the following command：

> node benchmark/simple/main.js

reported the following error information：

> not ok 6 failed 'open' testing, Error: Client encountered unexpected error at ChildProcess.<anonymous> (/root/caliper/src/comm/client/client-util.js:81:32) at emitOne (events.js:116:13) at ChildProcess.emit (events.js:211:7) at ChildProcess.target.send (internal/child_process.js:592:12) at Object.startTest (/root/caliper/src/comm/client/client-util.js:146:24) at Client._startLocalTest (/root/caliper/src/comm/client/client.js:223:27) at Client.startTest (/root/caliper/src/comm/client/client.js:146:22) at prev.then (/root/caliper/src/comm/bench-flow.js:238:31) at <anonymous>

---
    operator: fail
    at: client.startTest.then.then.catch (/root/caliper/src/comm/bench-flow.js:254:23)
    stack: |-
      Error: failed 'open' testing, Error: Client encountered unexpected error
          at ChildProcess.<anonymous> (/root/caliper/src/comm/client/client-util.js:81:32)
          at emitOne (events.js:116:13)
          at ChildProcess.emit (events.js:211:7)
          at ChildProcess.target.send (internal/child_process.js:592:12)
          at Object.startTest (/root/caliper/src/comm/client/client-util.js:146:24)
          at Client._startLocalTest (/root/caliper/src/comm/client/client.js:223:27)
          at Client.startTest (/root/caliper/src/comm/client/client.js:146:22)
          at prev.then (/root/caliper/src/comm/bench-flow.js:238:31)
          at <anonymous>
          at Test.assert [as _assert] (/root/caliper/node_modules/tape/lib/test.js:225:54)
          at Test.bound [as _assert] (/root/caliper/node_modules/tape/lib/test.js:77:32)
          at Test.fail (/root/caliper/node_modules/tape/lib/test.js:318:10)
          at Test.bound [as fail] (/root/caliper/node_modules/tape/lib/test.js:77:32)
          at client.startTest.then.then.catch (/root/caliper/src/comm/bench-flow.js:254:23)
          at <anonymous>
  ...

I  don't understand what “**Client encountered unexpected error**” means and how to deal with it.",open,False,2018-05-27 03:29:21,2018-10-10 06:39:18
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/77,https://api.github.com/repos/hyperledger/caliper/issues/77,Support batch for the simple benchmark,"Support batch for the simple benchmark and fix the args bug.
Signed-off-by: feihujiang <jiangfeihu@huawei.com>",closed,True,2018-05-23 09:57:15,2018-05-28 07:35:28
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/76,https://api.github.com/repos/hyperledger/caliper/issues/76,Fix amalgamate payload,Signed-off-by: feihujiang <jiangfeihu@huawei.com>,closed,True,2018-05-22 08:57:12,2018-05-24 02:08:22
caliper,Hatuw,https://github.com/hyperledger/caliper/pull/75,https://api.github.com/repos/hyperledger/caliper/issues/75,fix: Incorrect use of parameters,Fix a bug in the `simpletest.go`.,closed,True,2018-05-22 07:13:46,2018-10-08 11:14:54
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/74,https://api.github.com/repos/hyperledger/caliper/issues/74,Removed hard coded rest api end point in sawtooth adapter,"Removed hard coded rest api end point in sawtooth adapter

Signed-off-by: Ramakrishna Srinivasamurthy <ramakrishna.srinivasamurthy@intel.com>",closed,True,2018-05-22 04:58:09,2018-05-22 08:22:01
caliper,JulienGuo,https://github.com/hyperledger/caliper/issues/73,https://api.github.com/repos/hyperledger/caliper/issues/73,SyntaxError: Unexpected token function,"My node version is 8.9.4 ; npm install is completed.
There is error : 

guolidong:~/Documents/GitHub/caliper$ node benchmark/simple/main.js -c config-fabric.json -n fabric.json
TAP version 13
# #######Caliper Test######
not ok 1 SyntaxError: Unexpected token function
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [SyntaxError: Unexpected token function]
    at: Test.onetime [as end] (/Users/guolidong/Documents/GitHub/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      /Users/guolidong/Documents/GitHub/caliper/src/fabric/e2eUtils.js:546
      async function invokebycontext(context, id, version, args, timeout){
            ^^^^^^^^
      SyntaxError: Unexpected token function
          at Object.exports.runInThisContext (vm.js:76:16)
          at Module._compile (module.js:542:28)
          at Object.Module._extensions..js (module.js:579:10)
          at Module.load (module.js:487:32)
          at tryModuleLoad (module.js:446:12)
          at Function.Module._load (module.js:438:3)
          at Module.require (module.js:497:17)
          at require (internal/module.js:20:19)
          at Object.<anonymous> (/Users/guolidong/Documents/GitHub/caliper/src/fabric/fabric.js:12:18)
          at Module._compile (module.js:570:32)
  ...

1..1
# tests 1
# pass  0
# fail  1",closed,False,2018-05-22 03:14:02,2018-05-23 07:14:00
caliper,haojun,https://github.com/hyperledger/caliper/pull/72,https://api.github.com/repos/hyperledger/caliper/issues/72,save report's after test,"This change modified the demo.js to save report's path after testing

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-05-21 06:41:37,2018-05-21 10:45:40
caliper,haojun,https://github.com/hyperledger/caliper/pull/71,https://api.github.com/repos/hyperledger/caliper/issues/71,support smallbank with fabric,"Main updates:
1. Add chaincode of smallbank
2. Update fabric adaptor to support submit multiple txns using invokesmartcontract()
3. Minor changes for smallbankOperations.js, removing the test of amalgamate txn (Amalgamating causes subsequent operations on this account to fail, which is not suitable from the point of performance test)
4. Add fabric related configuration files for smallbank test
5. Add a Readme doc in the smallbank folder

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>

add small bank config for fabric

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>

Bugfix and add readme for smallbank benchmark

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-05-18 03:55:04,2018-05-30 06:50:35
caliper,cleverence,https://github.com/hyperledger/caliper/issues/70,https://api.github.com/repos/hyperledger/caliper/issues/70,Error undefined symbol: SSL_library_init while running simple test with hyperledger caliper,"$sudo node main.js 
TAP version 13
#######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
Creating network ""simplenetwork_default"" with the default driver
Creating ca_peerOrg2 ... ``
Creating ca_peerOrg1 ... 
Creating couchdb ... 
Creating orderer.example.com ... 
Creating orderer.example.com
Creating couchdb
Creating ca_peerOrg2
Creating orderer.example.com ... done
Creating peer0.org2.example.com ... 
Creating peer1.org2.example.com ... 
Creating peer0.org1.example.com ... 
Creating peer1.org2.example.com
Creating peer0.org2.example.com
Creating peer0.org1.example.com ... done
Creating peer1.org1.example.com ... 
Creating peer1.org1.example.com ... done
#create mychannel......
node: symbol lookup error: /home/clever/caliper/node_modules/grpc/src/node/extension_binary/node-v57-linux-x64-glibc/grpc_node.node: undefined symbol: SSL_library_init",closed,False,2018-05-16 20:40:56,2018-10-21 06:30:25
caliper,Hatuw,https://github.com/hyperledger/caliper/pull/69,https://api.github.com/repos/hyperledger/caliper/issues/69,extract main.js,Extract the `main.js` in different benchmarks.,closed,True,2018-05-14 11:21:13,2018-10-09 11:37:41
caliper,Hatuw,https://github.com/hyperledger/caliper/pull/68,https://api.github.com/repos/hyperledger/caliper/issues/68,extract main.js,Extract the `main.js` in different benchmarks.,closed,True,2018-05-14 10:41:10,2018-05-14 11:19:24
caliper,technowar,https://github.com/hyperledger/caliper/issues/67,https://api.github.com/repos/hyperledger/caliper/issues/67,Unable to test `basic-sample-network` or anything,"I wish to check the Composer's performance using Caliper on `basic-sample-network` project. I have already installed

```
 ""composer-admin"": ""0.19.0"",
 ""composer-client"": ""0.19.0"",
 ""composer-common"": ""0.19.0"",
 ""fabric-ca-client"": ""1.1.0"",
 ""fabric-client"": ""1.1.0"",
```

and ran `npm install` to the root folder.  I am getting the error below.

```
$ node benchmark/composer/main.js
TAP version 13
# #######Caliper Test######
Creating orderer.example.com ... done
Creating network ""2org1peer_default"" with the default driver
Creating peer0.org1.example.com ... done
Creating ca.org2.example.com ...
Creating couchdb.org2.example.com ...
Creating ca.org1.example.com ...
Creating orderer.example.com ...
Creating peer0.org2.example.com ...
Creating peer0.org1.example.com ...
Initializing target platform configuration
✔ Creating channels mychannel
✔ Attempting to join peer peer0.org1.example.com to channel mychannel (attempt 2/5)
✔ Attempting to join peer peer0.org2.example.com to channel mychannel (attempt 1/5)
Deploying Composer
✔ Performing Composer runtime install for network basic-sample-network with card PerfPeerAdmin@Org1
⠋ Performing Composer runtime install for network basic-sample-network with card PerfPeerAdmin@Org2Composer runtime install failed, Error: Error trying install business network. Error: No valid responses from any peers.
Response from attempted peer comms was an error: Error: 2 UNKNOWN: access denied: channel [] creator org [Org2MSP]
    at HLFConnection.install (/Users/jahm/Documents/JavaScript/caliper/node_modules/composer-connector-hlfv1/lib/hlfconnection.js:515:30)
    at <anonymous>
✖ Performing Composer runtime install for network basic-sample-network with card PerfPeerAdmin@Org2
composer.installSmartContract() failed,  Error: Error: Error trying install business network. Error: No valid responses from any peers.
Response from attempted peer comms was an error: Error: 2 UNKNOWN: access denied: channel [] creator org [Org2MSP]
    at Object.runtimeInstall (/Users/jahm/Documents/JavaScript/caliper/src/composer/composer_utils.js:380:15)
    at <anonymous>                        
unexpected error, Error: Error: Error trying install business network. Error: No valid responses from any peers.
Response from attempted peer comms was an error: Error: 2 UNKNOWN: access denied: channel [] creator org [Org2MSP]
    at Object.runtimeInstall (/Users/jahm/Documents/JavaScript/caliper/src/composer/composer_utils.js:380:15)
    at <anonymous>
docker-compose -f network/fabric-v11/2-org-1-peer/docker-compose.yaml down;docker rm $(docker ps -aq);docker rmi $(docker images dev-* -q)
Stopping peer0.org2.example.com   ... done
Stopping peer0.org1.example.com   ... done
Stopping orderer.example.com      ... done
Stopping ca.org1.example.com      ... done
Stopping couchdb.org2.example.com ... done
Stopping ca.org2.example.com      ... done
Stopping couchdb.org1.example.com ... done
Removing peer0.org2.example.com   ... done
Removing peer0.org1.example.com   ... done
Removing orderer.example.com      ... done
Removing ca.org1.example.com      ... done
Removing couchdb.org2.example.com ... done
Removing ca.org2.example.com      ... done
Removing couchdb.org1.example.com ... done
Removing network 2org1peer_default
""docker rm"" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...] [flags]

Remove one or more containers
""docker rmi"" requires at least 1 argument.
See 'docker rmi --help'.

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...] [flags]

Remove one or more images

1..0
# tests 0
# pass  0

# ok
```

Any help is greatly appreciated.",closed,False,2018-05-09 07:05:35,2018-07-10 01:48:20
caliper,haojun,https://github.com/hyperledger/caliper/pull/66,https://api.github.com/repos/hyperledger/caliper/issues/66,Support batch in framework,"1. Update blockchain interfaces and txns count calculation to support batch
2. Update sawtooth code to follow linting rules",closed,True,2018-05-09 06:02:47,2018-05-17 03:26:12
caliper,Hatuw,https://github.com/hyperledger/caliper/issues/65,https://api.github.com/repos/hyperledger/caliper/issues/65,Cannot find module './api.js',"Hello, I updated the project but meet the error  ""`Cannot find module './api.js'`"". Then I try to reinstall the `tape-promise` package but it doesn't work. How could I fix this problem? Tks~

Btw, I think that create a new branch for developing is better.

Here is the details of the error:
``` 
# #######Caliper Test######
not ok 1 Error: Cannot find module './api.js'
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      { [Error: Cannot find module './api.js'] code: 'MODULE_NOT_FOUND' }
    at: Test.onetime [as end] (/home/hatuw/Documents/deployBC/hyperledger/caliper/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      Error: Cannot find module './api.js'
          at Function.Module._resolveFilename (internal/modules/cjs/loader.js:548:15)
          at Function.Module._load (internal/modules/cjs/loader.js:475:25)
          at Module.require (internal/modules/cjs/loader.js:598:17)
          at require (internal/modules/cjs/helpers.js:11:18)
          at Object.<anonymous> (/home/hatuw/Documents/deployBC/hyperledger/caliper/node_modules/fabric-ca-client/lib/FabricCAClientImpl.js:19:11)
          at Module._compile (internal/modules/cjs/loader.js:654:30)
          at Object.Module._extensions..js (internal/modules/cjs/loader.js:665:10)
          at Module.load (internal/modules/cjs/loader.js:566:32)
          at tryModuleLoad (internal/modules/cjs/loader.js:506:12)
          at Function.Module._load (internal/modules/cjs/loader.js:498:3)
  ...

1..1
# tests 1
# pass  0
# fail  1
```",closed,False,2018-05-08 10:22:54,2018-07-20 12:02:06
caliper,Akash76,https://github.com/hyperledger/caliper/issues/64,https://api.github.com/repos/hyperledger/caliper/issues/64,"Failed to load connector module ""composer-connector-undefined""","![screenshot from 2018-05-08 15-16-31](https://user-images.githubusercontent.com/29705984/39750469-f4ac6206-52d2-11e8-8ed0-0400d905613a.png)

I have made all the necessary changes in my config files but it has raised this error...Failed to load connector module ""composer-connector-undefined""...
The expected output is it have to show the performance results of my application...",closed,False,2018-05-08 09:51:13,2019-02-13 01:22:26
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/63,https://api.github.com/repos/hyperledger/caliper/issues/63,Updated the sawtooth version in Readme doc file,Signed-off-by: Ramakrishna Srinivasamurthy <ramakrishna.srinivasamurthy@intel.com>,closed,True,2018-05-08 08:21:23,2018-05-08 09:12:31
caliper,aklenik,https://github.com/hyperledger/caliper/pull/62,https://api.github.com/repos/hyperledger/caliper/issues/62,Fix Fabric-related lint errors and warnings.,"Part of the solution for #48 
The Fabric subfolder is now lint-error/warning free.

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-05-07 22:33:57,2018-05-08 02:59:15
caliper,aklenik,https://github.com/hyperledger/caliper/pull/61,https://api.github.com/repos/hyperledger/caliper/issues/61,"Add rate controllers and related extensions, update docs","The aim of this PR is to pave the road for advanced workload modelling. Contributions include:

* Added `end` method to the rate controller proxy to signal the end of a round (in a backward compatible/optional way).
* Modified round execution workflow to call this `end` method.
* Added a composite rate controller implementation.
* Added a zero rate controller implementation.
* Extended the rate controller documentation.
* Added a sample configuration to demonstrate the usage of the new controllers.
* Propagate client index to _local_ clients.

Signed-off-by: Attila Klenik <a.klenik@gmail.com>",closed,True,2018-05-07 22:05:33,2018-05-08 06:40:55
caliper,haojun,https://github.com/hyperledger/caliper/pull/60,https://api.github.com/repos/hyperledger/caliper/issues/60,add specific version of grpc in package.json,"closes #56

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-05-07 06:45:19,2018-05-08 07:21:57
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/59,https://api.github.com/repos/hyperledger/caliper/issues/59,enable multi-client and multi-round tests in Composer benchmarks,"Currently the Composer benchmark tests are in single client and single round mode only. This PR enables the benchmarks to be run in multi-client mode with multiple test rounds.

This was enabled by using the OS hostname and process id as a UUID within each test for the creation and manipulation of assets in each benchmark test.

Changes include:
- benchmarks edited to enable multi client/round
- config file changed so that travis test is in multi-client/round for composer
- docs updated to remove limitation on modes

PR checks made:
- eslint compliant
- each benchmark passes in multi-client/round mode
- travis build passes in multi-client/round mode

Signed-off-by: Nick Lincoln <nkl199@yahoo.co.uk>",closed,True,2018-05-04 11:56:23,2018-07-17 10:11:55
caliper,haojun,https://github.com/hyperledger/caliper/pull/58,https://api.github.com/repos/hyperledger/caliper/issues/58,add specific version of grpc in package.json,"closes #56 

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-05-04 03:45:43,2018-05-07 06:40:17
caliper,haojun,https://github.com/hyperledger/caliper/pull/57,https://api.github.com/repos/hyperledger/caliper/issues/57,specify grpc version,"closes #56 

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-05-04 03:25:13,2018-05-04 03:25:54
caliper,haojun,https://github.com/hyperledger/caliper/issues/56,https://api.github.com/repos/hyperledger/caliper/issues/56,Fabric eventhub error,"It seems that the new version of grpc (`v1.11.2`, which will be installed when `npm install fabric-client`) will cause a EventHub error when joining channel",closed,False,2018-05-04 03:12:49,2018-05-08 07:21:57
caliper,subhodi,https://github.com/hyperledger/caliper/pull/55,https://api.github.com/repos/hyperledger/caliper/issues/55,Eslint compatible: Fabric and drm benchmark files,"Regarding issue #48 , updated  benchmark/fabric and benchmark/drm config files to adhere to eslint rules.
Changes:
1. prefer `const` and `let ` over `var`.
2. prefer `'` over `""`.
3. Add missing semicolons.
4. JS-doc for main.js

",closed,True,2018-05-03 07:01:59,2018-05-07 06:12:15
caliper,haojun,https://github.com/hyperledger/caliper/pull/54,https://api.github.com/repos/hyperledger/caliper/issues/54,Eslint compatible,"This PR is related to issue #48 
1. Update files of benchmark engine, client, monitor, report, etc. to follow the eslint rules
2. Update log to accept unspecified number of arguments",closed,True,2018-05-03 03:37:44,2018-05-03 07:30:12
caliper,davidkhala,https://github.com/hyperledger/caliper/pull/53,https://api.github.com/repos/hyperledger/caliper/issues/53,Document updates,"This patch includes
- Add section 'How to contribute' in readme.md
- simplify install guide for fabric-sdk-node
- type fix: benchmark engineer -> benchmark engine

Signed-off-by: davidliu <david-khala@hotmail.com>",closed,True,2018-05-02 15:38:16,2018-05-03 07:21:08
caliper,davidkhala,https://github.com/hyperledger/caliper/pull/52,https://api.github.com/repos/hyperledger/caliper/issues/52,Simplify install document,"`npm install` of fabric-sdk-node can fits for most cases.
And seemingly there is some duplicated documents in benchmark/simple/main",closed,True,2018-04-30 08:37:30,2018-05-02 15:15:02
caliper,haojun,https://github.com/hyperledger/caliper/pull/51,https://api.github.com/repos/hyperledger/caliper/issues/51,Fix issue #39,"This PR fix the issue #39 

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>
",closed,True,2018-04-28 03:20:29,2018-10-08 07:15:36
caliper,haojun,https://github.com/hyperledger/caliper/pull/50,https://api.github.com/repos/hyperledger/caliper/issues/50,Bug fix for runDuration,"Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>

Replace the wrong promise.all array in runDuration",closed,True,2018-04-28 02:17:34,2018-04-28 02:59:05
caliper,michielmulders,https://github.com/hyperledger/caliper/issues/49,https://api.github.com/repos/hyperledger/caliper/issues/49,NodeJS Chaincode,"Is it possible to add a NodeJS chaincode example as well for Fabric?
Thanks!",closed,False,2018-04-27 10:45:08,2018-10-09 00:05:40
caliper,haojun,https://github.com/hyperledger/caliper/issues/48,https://api.github.com/repos/hyperledger/caliper/issues/48,Fulfill linting requirements,The code should be modified to follow linting rules,closed,False,2018-04-27 00:54:10,2018-07-10 02:35:15
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/47,https://api.github.com/repos/hyperledger/caliper/issues/47,Adding smallbank benchmark use case which simulates bank operations,"Adding smallbank benchmark use case which simulates bank operations

Signed-off-by: Ramakrishna Srinivasamurthy <ramakrishna.srinivasamurthy@intel.com>",closed,True,2018-04-26 17:15:46,2018-05-08 07:14:00
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/46,https://api.github.com/repos/hyperledger/caliper/issues/46,add travis build configuration,"closes #33 

This PR provides the required folders and scripts to enable Travis CI against the Caliper project.

**Please note that I cannot perform the Travis enablement and enforcement on the project as I do not have the required privileges; it will have to be completed by a Caliper admin if/when merged**

The PR delivers the following:
- provides Travis configuration files to build and run the specified tests
- specified tests include:
-- lint checking
-- unit test checking (rate controllers) with code coverage
-- e2e code run

The lint checker is based from the main lint checking specification, which currently has some files excluded (these file exclusions are being worked on)

The unit tests are mocha based and driven using nyc to provide code coverage reports. An example test is provided for the fixed rate controller. All other files are currently excluded and I would suggest issues being raised to fill these holes.

The e2e code run represents the *actual* running of all existing Caliper benchmarks. This is currently only for locally hosted (not zookeeper) benchmarks, but goes a long way to ensure that nothing is broken within the framework. Due to the nature of running benchmarks on a CI machine, the TPS listed in some of the benchmarks has been reduced, since timeouts will cause a build failure.
",closed,True,2018-04-26 15:31:03,2018-11-27 11:15:22
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/45,https://api.github.com/repos/hyperledger/caliper/issues/45,ensure consistent namespace in sample,"Signed-off-by: Nick Lincoln <nkl199@yahoo.co.uk>

closes #44 

PR includes:
- updates to all test resources (contract resources and test runner script) to ensure consistency in model namespace used.",closed,True,2018-04-26 12:07:33,2018-07-17 10:11:57
caliper,nklincoln,https://github.com/hyperledger/caliper/issues/44,https://api.github.com/repos/hyperledger/caliper/issues/44,Composer basic-sample test is broken,"During an update to modify the basic-sample-network test to be written in async-await, an inconsistency was introduced in the sample namespace. This is causing transaction failures.",closed,False,2018-04-26 12:06:14,2018-04-28 03:39:43
caliper,aklenik,https://github.com/hyperledger/caliper/issues/43,https://api.github.com/repos/hyperledger/caliper/issues/43,Premature termination of Fabric event hub connections,"I run into the following strange behavior when running a benchmark with local clients and a local Fabric network:

When one of the clients finishes its round, it clears the platform context. In the case of Fabric, this means that the event hub connections are closed. However, when one client disconnects the event hubs, it seems that the other clients also lose the connection. And if they still had some pending transactions (the clients are not necessarily in perfect sync), those transactions will fail. Or to be precise, we don't know what happens to the transactions, but since the client doesn't get a notification, it marks them as failed.

PR #42 contains a sample configuration (`benchmarks/simple/config-composite-rate.json`) that exhibited the behavior above. The PR also contains a quick (and really dirty) fix for this issue by sleeping for 3 seconds before clearing the context at the end of the rounds.

Can someone reproduce this issue? I guess clients can easily become out-of-sync at higher TPS. These event hub errors should occur at the end of the round (usually for a small number of transactions).",closed,False,2018-04-25 22:34:58,2018-07-02 10:20:22
caliper,aklenik,https://github.com/hyperledger/caliper/pull/42,https://api.github.com/repos/hyperledger/caliper/issues/42,Extend the rate controller repertoire,"The aim of this PR is to pave the road for advanced workload modelling. Contributions include:

* Rate control related:
    * Added `end` method to the rate controller proxy to signal the end of a round (in a backward compatible/optional way).
    * Modified round execution workflow to call this `end` method.
    * Added a composite rate controller implementation.
    * Added a zero rate controller implementation.
    * Extended the rate controller documentation.
    * Added a sample configuration to demonstrate the usage of the new controllers.

* Modified `end` script of config files (for Fabric) to also remove the chaincode images.

* Fixed linting errors for Fabric subsystem (Issue #48 ).",closed,True,2018-04-25 22:02:06,2018-05-07 20:50:23
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/41,https://api.github.com/repos/hyperledger/caliper/issues/41,"add linting rules, ignore file and update Composer code to follow rules","Signed-off-by: Nick Lincoln <nkl199@yahoo.co.uk>

This PR is the first in a series of PRs aimed at resolving #22 

This PR contains changes that:
- add a linting rules file (common rule file selected)
- add eslint to devDependancies
- add package script to run lint checker (via `npm run lint`)
- update all Composer code to follow linting rules
- update rate controllers to follow linting rules
- add an eslint-ignore file to ignore lint checking on all other files
- renamed `src/comm/sleep` to be a common utility file `src/comm/util` and refactored all code to use the sleep method in the common code

The reason for the expansion of the common util to include 'sleep' and 'log' is the `no-console' linting rule, which is most elegantly eliminated using a single point of use and a single `eslint-diable` call. It is probable that this common utility will expand as more common code is identified and eliminated.
",closed,True,2018-04-24 15:27:49,2018-04-26 12:15:24
caliper,michielmulders,https://github.com/hyperledger/caliper/pull/40,https://api.github.com/repos/hyperledger/caliper/issues/40,Small fix markdown,,closed,True,2018-04-24 13:33:19,2018-10-08 07:49:48
caliper,friends110110,https://github.com/hyperledger/caliper/issues/39,https://api.github.com/repos/hyperledger/caliper/issues/39,"Why debug make error ,while run is ok?","```
# ##### testing 'open' ######
----test round 0----
Starting inspector on 127.0.0.1:53951 failed: address already in use
Starting inspector on 127.0.0.1:53951 failed: address already in use
Starting inspector on 127.0.0.1:53951 failed: address already in use
Client exited
Client exited
Starting inspector on 127.0.0.1:53951 failed: address already in use
Starting inspector on 127.0.0.1:53951 failed: address already in use
started monitor successfully
Client exited
Client exited
Client exited
###test result:###
+------+------+------+-----------+-------------+-------------+-------------+----------------+------------+
| Name | Succ | Fail | Send Rate | Max Latency | Min Latency | Avg Latency | 75%ile Latency | Throughput |
+------+------+------+-----------+-------------+-------------+-------------+----------------+------------+

### resource stats ###
+---------+-----------------------------------+-------------+-------------+----------+----------+------------+-------------+
| TYPE    | NAME                              | Memory(max) | Memory(avg) | CPU(max) | CPU(avg) | Traffic In | Traffic Out |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Process | node local-client.js(avg)         | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | dev-peer1.org2.example.co...le-v0 | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | dev-peer1.org1.example.co...le-v0 | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | dev-peer0.org2.example.co...le-v0 | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | dev-peer0.org1.example.co...le-v0 | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | peer1.org1.example.com            | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | peer0.org1.example.com            | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | peer0.org2.example.com            | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | peer1.org2.example.com            | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | couchdb                           | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | orderer.example.com               | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | ca_peerOrg2                       | -           | -           | NaN%     | NaN%     | -          | -           |
|---------|-----------------------------------|-------------|-------------|----------|----------|------------|-------------|
| Docker  | ca_peerOrg1                       | -           | -           | NaN%     | NaN%     | -          | -           |
+---------+-----------------------------------+-------------+-------------+----------+----------+------------+-------------+

ok 5 passed 'open' testing
wait 5 seconds for next round...
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
[Transaction Info] - Submitted: 0 Succ: 0 Fail:0 Unfinished:0
# ##### testing 'query' ######
----test round 1----
not ok 6 failed 'query' testing, Error: Client encountered unexpected error at ChildProcess.<anonymous> (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/client/client-util.js:71:32) at emitOne (events.js:116:13) at ChildProcess.emit (events.js:211:7) at ChildProcess.target.send (internal/child_process.js:592:12) at Object.startTest (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/client/client-util.js:125:24) at Client._startLocalTest (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/client/client.js:146:27) at Client.startTest (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/client/client.js:80:26) at prev.then (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/bench-flow.js:256:31) at <anonymous>
  ---
    operator: fail
    at: client.startTest.then.then.catch (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/bench-flow.js:275:23)
    stack: |-
      Error: failed 'query' testing, Error: Client encountered unexpected error
          at ChildProcess.<anonymous> (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/client/client-util.js:71:32)
          at emitOne (events.js:116:13)
          at ChildProcess.emit (events.js:211:7)
          at ChildProcess.target.send (internal/child_process.js:592:12)
          at Object.startTest (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/client/client-util.js:125:24)
          at Client._startLocalTest (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/client/client.js:146:27)
          at Client.startTest (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/client/client.js:80:26)
          at prev.then (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/bench-flow.js:256:31)
          at <anonymous>
          at Test.assert [as _assert] (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/node_modules/tape/lib/test.js:225:54)
          at Test.bound [as _assert] (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/node_modules/tape/lib/test.js:77:32)
          at Test.fail (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/node_modules/tape/lib/test.js:318:10)
          at Test.bound [as fail] (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/node_modules/tape/lib/test.js:77:32)
          at client.startTest.then.then.catch (/Users/friends/Documents/VirtualMachine/share/projects/Official_Examples/caliper/src/comm/bench-flow.js:275:23)
          at <anonymous>
  ...
----------finished test----------

```",open,False,2018-04-24 08:41:17,2018-10-08 08:03:22
caliper,friends110110,https://github.com/hyperledger/caliper/issues/38,https://api.github.com/repos/hyperledger/caliper/issues/38,Calculate the whole proc,"```

###all test results:###
+------+-------+------+------+-----------+-------------+-------------+-------------+----------------+------------+
| Test | Name  | Succ | Fail | Send Rate | Max Latency | Min Latency | Avg Latency | 75%ile Latency | Throughput |
|------|-------|------|------|-----------|-------------|-------------|-------------|----------------|------------|
| 1    | open  | 5000 | 0    | 100 tps   | 5.41 s      | 0.24 s      | 1.30 s      | 1.59 s         | 98 tps     |
|------|-------|------|------|-----------|-------------|-------------|-------------|----------------|------------|
| 2    | open  | 5000 | 0    | 200 tps   | 24.92 s     | 0.84 s      | 11.10 s     | 16.13 s        | 156 tps    |
|------|-------|------|------|-----------|-------------|-------------|-------------|----------------|------------|
| 3    | open  | 5000 | 0    | 300 tps   | 24.32 s     | 3.27 s      | 17.75 s     | 21.15 s        | 168 tps    |
|------|-------|------|------|-----------|-------------|-------------|-------------|----------------|------------|
| 4    | query | 5000 | 0    | 301 tps   | 1.03 s      | 0.01 s      | 0.12 s      | 0.14 s         | 299 tps    |
|------|-------|------|------|-----------|-------------|-------------|-------------|----------------|------------|
| 5    | query | 5000 | 0    | 400 tps   | 7.93 s      | 0.07 s      | 4.59 s      | 6.49 s         | 343 tps    |
+------+-------+------+------+-----------+-------------+-------------+-------------+----------------+------------+


```

From my machine test,I wanna know how many tx  per second ,and the tx could get response from orderer .",closed,False,2018-04-24 08:36:15,2018-04-28 03:21:35
caliper,haojun,https://github.com/hyperledger/caliper/issues/37,https://api.github.com/repos/hyperledger/caliper/issues/37,Support common connection profile feature of the new fabric node SDK,"From the discussion of [#caliper-contributors](https://chat.hyperledger.org/channel/caliper-contributors)
-------------------------
klenik:
So as the first topic of the channel (hopefully others will also join soon), I would suggest to use the Common Connection Profile feature of the Fabric Node SDK (1.1.0).
This would replace a LOT of code that currently assembles the object graphs needed to submit transactions, join channel, etc.",closed,False,2018-04-24 08:23:47,2019-03-04 20:40:07
caliper,stinger112,https://github.com/hyperledger/caliper/issues/36,https://api.github.com/repos/hyperledger/caliper/issues/36,Iroha version is outdated,"Current Iroha version used by Caliper is totally outdated and works over old manually generated connector library. 

I think Iroha and connector library should be updated, so I created this PR #35 ",closed,False,2018-04-23 10:17:41,2018-06-05 12:46:28
caliper,stinger112,https://github.com/hyperledger/caliper/pull/35,https://api.github.com/repos/hyperledger/caliper/issues/35,Added official Iroha Library package compatible with Iroha 1.0 beta-2,"### Description

Iroha contributors have created NPM package with Iroha Connector Library, so this PR adds [**iroha-lib**](https://www.npmjs.com/package/iroha-lib) into Caliper and update Iroha's docker container to latest develop version.
",closed,True,2018-04-23 10:13:28,2018-06-05 01:53:30
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/34,https://api.github.com/repos/hyperledger/caliper/issues/34,Redesign sawtooth adapter to make it easy to add new use uses,"1. Generalize the sawtooth adapter
2. Move use case specific code like batch creation and adddress creation to application adapter
3. Each application has to implement batch builder interface.

Signed-off-by: Ramakrishna Srinivasamurthy <ramakrishna.srinivasamurthy@intel.com>",closed,True,2018-04-23 04:23:09,2018-04-26 06:22:53
caliper,nklincoln,https://github.com/hyperledger/caliper/issues/33,https://api.github.com/repos/hyperledger/caliper/issues/33,CI build Process Required,"A CI Process, such as Travis or Jenkins, is required to establish a base from which to prevent the introduction of regressions through:
- run linting checks
- run unit tests
- run code coverage check from unit test results (using nyc or similar)

It would then be possible to make a ""green build"" a pre-req for any PRs. The above should help minimise the introduction of regressions into the code base.
",closed,False,2018-04-17 07:59:04,2018-05-04 02:53:42
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/32,https://api.github.com/repos/hyperledger/caliper/issues/32,Redesign sawtooth adapter to make it easy to add new use uses,"1. Generalize the sawtooth adapter
2. Move use case specific code like batch creation and adddress creation to application adapter
3. Each application has to implement batch builder interface.

Signed-off-by: Ramakrishna Srinivasamurthy <ramakrishna.srinivasamurthy@intel.com>",closed,True,2018-04-17 06:46:02,2018-04-23 03:49:39
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/31,https://api.github.com/repos/hyperledger/caliper/issues/31,Update Composer query test to use precompiled VL query,"Composer 0.19.x now automatically creates indexes within CouchDB for any queries listed within the queries file of a business network that is deployed, in order to maximise the performance of queries.

This PR changes the example query test to use a query within the vehicle lifecycle network queries file so that the query tests being run are running at their maximum performance, as per the recommended best practise for Composer business networks. 

Signed-off-by: Nick Lincoln <nkl199@yahoo.co.uk>",closed,True,2018-04-14 10:29:02,2018-04-19 14:59:37
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/30,https://api.github.com/repos/hyperledger/caliper/issues/30,add PID rate controller,"I have been using this controller to avoid timeouts during transactions; I suspect it will be useful for others too!

The controller mechanism acts to maintain a fixed level of backlog transactions, using a basic PID control mechanism to modify the driven transaction rate to achieve a fixed backlog. A user must prescribe control gains, as well as a starting TPS to seed the controller. There is an option to view controller output to assist tuning the controller for a specific system.

Contribution includes:

New rate controller with header description
Update of fixed-rate controller to add header description
Docs modification to indicate availability of controller

Signed-off-by: Nick Lincoln <nkl199@yahoo.co.uk>",closed,True,2018-04-13 10:52:48,2018-07-17 10:12:01
caliper,haojun,https://github.com/hyperledger/caliper/pull/29,https://api.github.com/repos/hyperledger/caliper/issues/29,add license declaration,"This is a fix for issue #20 

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-04-13 01:43:27,2018-04-13 06:21:17
caliper,aklenik,https://github.com/hyperledger/caliper/pull/28,https://api.github.com/repos/hyperledger/caliper/issues/28,Fixed Fabric Tx life-cycle handling,"@haojun Here is the PR addressing issue #24 

Notable changes:
* Using async/await
* Added verified and error-related properties to the Tx status object

Regarding unverified failures:
Since it is not straightforward how to incorporate (if at all) the extra time needed to verify a Tx status through a query (and when to do that), I think the best option, for now, is to leave this to the callback module. It still has access to the configured context (except the event hubs) in the `end` callback, so if needed, verification can happen there.",closed,True,2018-04-12 00:00:10,2018-04-12 02:30:51
caliper,WilsonGao,https://github.com/hyperledger/caliper/issues/27,https://api.github.com/repos/hyperledger/caliper/issues/27,Handshake failed with fatal error SSL_ERROR_SSL when simple test for Fabric,"I got below issue when run the simple Fabric test,please help.

# npm test -- simple -c ./benchmark/simple/config.json -n ./benchmark/simple/fabric.json

> caliper@0.1.0 test /opt/hyperledger_fabric/fabric-v1.0.5/caliper
> node ./scripts/test.js ""simple"" ""-c"" ""./benchmark/simple/config.json"" ""-n"" ""./benchmark/simple/fabric.json""

TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml up -d
Creating network ""simplenetwork_default"" with the default driver
Creating ca_peerOrg2 ...
Creating ca_peerOrg1 ...
Creating couchdb ...
Creating orderer.example.com ...
Creating ca_peerOrg2
Creating ca_peerOrg1
Creating couchdb
Creating orderer.example.com ... done
Creating peer0.org2.example.com ...
Creating peer0.org1.example.com ...
Creating peer1.org2.example.com ...
Creating peer0.org2.example.com
Creating peer0.org1.example.com
Creating peer0.org1.example.com ... done
Creating peer1.org1.example.com ...
Creating peer1.org1.example.com ... done
# create mychannel......
E0411 11:32:38.796494897   25025 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
error: [Orderer.js]: sendBroadcast - on error: ""Error: 14 UNAVAILABLE: Connect Failed\n    at createStatusError (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:64:15)\n    at ClientDuplexStream._emitStatusIfDone (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:270:19)\n    at ClientDuplexStream._readsDone (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:236:8)\n    at readCallback (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:296:12)""
not ok 1 Failed to create channels Error: SERVICE_UNAVAILABLE at ClientDuplexStream.<anonymous> (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/fabric-client/lib/Orderer.js:136:21) at emitOne (events.js:96:13) at ClientDuplexStream.emit (events.js:188:7) at ClientDuplexStream._emitStatusIfDone (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:271:12) at ClientDuplexStream._readsDone (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:236:8) at readCallback (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:296:12)
  ---
    operator: fail
    at: channels.reduce.then.then.catch (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/src/fabric/create-channel.js:155:15)
    stack: |-
      Error: Failed to create channels Error: SERVICE_UNAVAILABLE
          at ClientDuplexStream.<anonymous> (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/fabric-client/lib/Orderer.js:136:21)
          at emitOne (events.js:96:13)
          at ClientDuplexStream.emit (events.js:188:7)
          at ClientDuplexStream._emitStatusIfDone (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:271:12)
          at ClientDuplexStream._readsDone (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:236:8)
          at readCallback (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/grpc/src/client.js:296:12)
          at Test.assert [as _assert] (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/tape/lib/test.js:225:54)
          at Test.bound [as _assert] (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/tape/lib/test.js:77:32)
          at Test.fail (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/tape/lib/test.js:318:10)
          at Test.bound [as fail] (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/node_modules/tape/lib/test.js:77:32)
          at channels.reduce.then.then.catch (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/src/fabric/create-channel.js:155:15)
          at process._tickCallback (internal/process/next_tick.js:103:7)
  ...
fabric.init() failed, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/src/fabric/create-channel.js:156:27)
    at process._tickCallback (internal/process/next_tick.js:103:7)
unexpected error, Error: Fabric: Create channel failed
    at channels.reduce.then.then.catch (/opt/hyperledger_fabric/fabric-v1.0.5/caliper/src/fabric/create-channel.js:156:27)
    at process._tickCallback (internal/process/next_tick.js:103:7)
docker-compose -f network/fabric/simplenetwork/docker-compose.yaml down;docker rm $(docker ps -aq)
Stopping peer1.org1.example.com ...
Stopping peer1.org1.example.com ... done
Stopping peer1.org2.example.com ... done
Stopping peer0.org1.example.com ... done
Stopping peer0.org2.example.com ... done
Stopping orderer.example.com    ... done
Stopping couchdb                ... done
Stopping ca_peerOrg2            ...
E0411 11:32:39.796510227   25025 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
E0411 11:32:41.194671411   25025 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
Stopping ca_peerOrg1            ... done
Stopping ca_peerOrg2            ... done
Removing peer1.org1.example.com ...
Removing peer1.org2.example.com ...
Removing peer1.org1.example.com ... done
Removing peer1.org2.example.com ... done
Removing orderer.example.com    ...
Removing peer0.org2.example.com ... done
Removing couchdb                ... done
Removing ca_peerOrg2            ...
Removing ca_peerOrg2            ... done
E0411 11:33:02.541948291   25025 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
Removing network simplenetwork_default
""docker rm"" requires at least 1 argument(s).
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers

1..1
# tests 1
# pass  0
# fail  1
",closed,False,2018-04-11 06:01:32,2018-11-06 08:23:07
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/26,https://api.github.com/repos/hyperledger/caliper/issues/26,update composer docs for creating own tests,"Closes #25 

Changes include:
- Update the named directory to match the required folder structure.
- Provides more guidance in creating the required test files

Signed-off-by: Nick Lincoln <nkl199@yahoo.co.uk>",closed,True,2018-04-10 08:35:20,2018-04-19 14:59:48
caliper,nklincoln,https://github.com/hyperledger/caliper/issues/25,https://api.github.com/repos/hyperledger/caliper/issues/25,Docs for Composer tests need clarification,"The current Composer documentation for ""Testing Your own Business Network Definition"" is slightly out of date.

A change was made to stop using binary files and use source files within a named directory; the docs still reference the older method that was used in pre-0.19 release testing for Composer.",closed,False,2018-04-10 08:34:06,2018-04-11 01:53:33
caliper,aklenik,https://github.com/hyperledger/caliper/issues/24,https://api.github.com/repos/hyperledger/caliper/issues/24,Fabric chaincode life-cycle handling,"We ran into the following problem in the `src/fabric/e2eUtils.js invokebycontext()` implementation while load testing Fabric 1.x :

The resolved return value of the [sendTransaction](https://github.com/hyperledger/caliper/blob/fbc8c09f405aac7348929c901be43a69df2fa6d7/src/fabric/e2eUtils.js#L597) call is a `BroadcastResponseObject` which only contains an HTTP ACK from the orderer that it received the Tx successfully. 

If this response arrives and it contains an invalid status code, then we know the Tx ordering will not happen, it was rejected explicitly for some reason. So far so good.

There were times during our load testing when this response did not arrive in time/at all (probably due to network latency reasons). In this case, Caliper marked the Tx as `failed`. However, we received valid event notifications for the Tx, meaning it was successfully committed to the ledger. So this is a false negative result.

I rewrote the life-cycle handling logic in my fork the following way. Note the introduction of the _verified result_ concept.
1. `channel.SendTransactionProposal` call result:
    1. Rejected Promise: Something happened, we terminate the life-cycle early. So this `failed` status is _verified_.
    1. Resolved `ProposalResponseObject`: we received a reply from the endorsing peers:
        1. If any response status is not `200`, there was a chaincode execution error, and the Tx is not endorsed. So this `failed` status is _verified_.
        1. If all responses are valid, but there is a read/write set mismatch, the peers would reject the Tx eventually, so we terminate the life-cycle early. So this `failed` status is _verified_.
        1. Otherwise, we have valid endorsements at this point.

1. Register Tx events Promises and callbacks:
    1. A timeout occurs, resulting in a rejected Promise. We did not get an explicit rejection from the peers. So this fail is _not verified_.
    1. The error callback is invoked from `registerTxEvent`, meaning there was some (probably) connection error with the event hub (it happened during high loads). We did not get an explicit rejection from the peers. So this fail is _not verified_.
    1. The ""normal"" callback is invoked from `registerTxEvent`. If the returned `code` is not `VALID`, then the Tx was rejected explicitly. So this `failed` status is _verified_.
    1. If the returned `code` is `VALID`, the Tx was committed to the ledger. This commit is a _verified_ result and is also independent of the orderer ACK error in the next section.

1. `channel.sendTransaction` call result:
    1. Rejected Promise: we did not receive an ACK from the orderer for some reason. But this does not mean, that the orderer will not consider the Tx for ordering. So this is _not_ a verified failure.
    1. Resolved `BroadcastResponse` object:
        1. The response status is `SUCCESS`, meaning the orderer will order the Tx. (The `invoke_status.time_order` property name is misleading, this is only the time it took to receive the ACK from the orderer, and not the ordering time itself.)
        1. The response status is not `SUCCESS`, meaning the Tx is explicitly rejected for ordering, resulting in a _verified_ failure. 

1. Wait for all event Promises:
    1. If all Promises resolved successfully, then the Tx is successful in a _verified_ manner.
    1. In case of rejected event Promise, the logic described in section 2. applies to decide whether the failure is verified or not.

1. At this point, the standard life-cycle ends, and the final time for both successful and failed Txs is recorded, also indicating whether the failure is verified or not (note, that the success of a Tx is always explicitly verified by the resolved events).

1. **(Optional Step)** If a failure is not verified, then there is an option to explicitly query the ledger for the given Tx to verify the result. However, a certain amount of sleep time is needed to make sure that the Tx is through its life-cycle and can be queried. 


I would appreciate Your opinions on this logic since as it turns out, writing a robust and reliable client for Fabric is far from trivial!",closed,False,2018-04-09 14:54:33,2018-04-12 09:15:50
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/23,https://api.github.com/repos/hyperledger/caliper/issues/23,add discrete time rate controller,"I have been using this controller to avoid timeouts during transactions; I suspect it will be useful for others too!

The controller mechanism acts to maintain a fixed level of backlog transactions, using a discrete time PID control mechanism to modify the driven transaction rate to achieve a fixed backlog. A user must prescribe control gains, as well as a starting TPS to seed the controller. 

Contribution includes:
- New rate controller with header description
- Update of fixed-rate controller to add header description
- Docs modification to indicate availability of controller

Signed-off-by: Nick Lincoln <nkl199@yahoo.co.uk>",closed,True,2018-04-09 14:41:57,2018-07-17 10:12:14
caliper,nklincoln,https://github.com/hyperledger/caliper/issues/22,https://api.github.com/repos/hyperledger/caliper/issues/22,Javascript Linting Required,"In order help readability of all project code, and to enforce coding consistency for contributors, it would be of great help to add linting rules into the project via eslint.

This will unfortunately require a bit of a code refactor once the rule file is added and enforced, however it will help with code contribution as the project evolves.

",closed,False,2018-04-09 10:49:07,2018-05-04 02:55:37
caliper,haojun,https://github.com/hyperledger/caliper/pull/21,https://api.github.com/repos/hyperledger/caliper/issues/21,Remove 3rd party source files & update GUI source codes accordingly,Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>,closed,True,2018-04-08 06:58:43,2018-04-08 07:18:17
caliper,tkuhrt,https://github.com/hyperledger/caliper/issues/20,https://api.github.com/repos/hyperledger/caliper/issues/20,Resolve licensing issues discovered by Fossology scan,"## Context
<!--- Provide a more detailed introduction to the issue itself, and why you consider it to be a bug -->
Hyperledger Caliper source files (from April 3, 2018) were scanned by The Linux Foundation utilizing Fossology to determine license for files contained in the following repositories:
*  https://github.com/hyperledger/caliper.git

From the Hyperledger Charter (https://www.hyperledger.org/about/charter) Section 13, all files that are included in Hyperledger projects should either be licensed with the Apache License, Version 2.0 for source code or Creative Commons Attribution 4.0 International License for documentation.

## Expected Behavior
<!--- Tell us what should happen -->
All files should have license text included either directly or via a LICENSE file in the directory for files that cannot be modified to include a comment with the license text (think binary files).

## Actual Behavior
<!--- Tell us what happens instead -->
See results of scan: [caliper-2018-04.xlsx](https://github.com/hyperledger/caliper/files/1880799/caliper-2018-04.xlsx)

## Possible Fix
<!--- Not obligatory, but suggest a fix or reason for the bug -->
For files with Attribution license, ideally, we would replace those with Apache 2.0 files and dependencies; otherwise, we will need to go to the Hyperledger Governing board for an exception.

For _ALL_ files that do not have a license included, the first step is to check with the contributor to ensure that the file can be released as Apache 2.0 or CC-BY-4.0.  If the contributor agrees, the file should be modified to include the license. You can utilize [SPDX Identifiers](https://spdx.org/) to represent the correct license.

For those non-modifiable files, you will need to include a LICENSE file in the directory containing the license that the files are covered by.  Here are a few examples of how this might be done:
* [OPNFV Apex](https://github.com/opnfv/apex/blob/master/LICENSE.rst) -- this is an example of explicitly calling out Apache 2.0 for source code and CC-BY-4.0 for docs.  
* [containerd](https://github.com/containerd/containerd/blob/master/README.md) -- see notice at bottom.  This also calls out the separate Apache / CC-BY-4.0 docs, and explicitly references the ""docs"" directory.

## Steps to Reproduce
<!--- Provide a link to a live example or an unambiguous set of steps to -->
<!--- reproduce this bug include code to reproduce, if relevant -->
Run the code through Fossology (contact tkuhrt at linuxfoundation dot org) to have the source re-run after the modifications.
",closed,False,2018-04-05 16:11:37,2018-10-10 06:21:56
caliper,Ram-srini,https://github.com/hyperledger/caliper/pull/19,https://api.github.com/repos/hyperledger/caliper/issues/19,Changes to use the latest sawtooth 1.0 version,"1. Changed the sawtooth adapter to use sawtooth 1.0 sdk changes
2. changed simple benchmark to use sawtooth 1.0

Signed-off-by: Ramakrishna Srinivasamurthy <ramakrishna.srinivasamurthy@intel.com>",closed,True,2018-04-03 16:01:29,2018-04-11 08:00:17
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/18,https://api.github.com/repos/hyperledger/caliper/issues/18,remove compiled python files of simple example,Signed-off-by: feihujiang <jiangfeihu@huawei.com>,closed,True,2018-04-03 07:25:35,2018-04-03 07:59:23
caliper,feihujiang,https://github.com/hyperledger/caliper/pull/17,https://api.github.com/repos/hyperledger/caliper/issues/17,Remove redundant files of simple,Signed-off-by: feihujiang <jiangfeihu@huawei.com>,closed,True,2018-04-03 06:52:09,2018-04-03 07:07:46
caliper,haojun,https://github.com/hyperledger/caliper/pull/16,https://api.github.com/repos/hyperledger/caliper/issues/16,update with fabric v1.1.0,"Minor change after testing with fabric v1.1.0:
1. force pure GO resolver for fabric/simplenetwork
2. fix wrong prompts

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-04-02 08:47:25,2018-04-08 07:12:13
caliper,haojun,https://github.com/hyperledger/caliper/issues/15,https://api.github.com/repos/hyperledger/caliper/issues/15,Failed to run composer test: 'SIGSEGV: segmentation violation',"I have encountered this error when run composer test. My node version is v8.10.0 and go version is go1.9.2

```
TAP version 13
# #######Caliper Test######
docker-compose -f network/fabric-v11/2-org-1-peer/docker-compose.yaml up -d
Creating network ""2org1peer_default"" with the default driver
Creating couchdb.org1.example.com ... 
Creating ca.org1.example.com ... 
Creating couchdb.org2.example.com ... 
Creating ca.org2.example.com ... 
Creating orderer.example.com ... 
Creating ca.org1.example.com
Creating couchdb.org1.example.com
Creating couchdb.org2.example.com
Creating ca.org2.example.com
Creating orderer.example.com ... done
Creating peer0.org2.example.com ... 
Creating peer0.org1.example.com ... 
Creating peer0.org2.example.com
Creating peer0.org1.example.com ... done
Initializing target platform configuration
creating channel mychannel ......
composer.init() failed at initialiseFabric(),  { code: 2,
  stdout: '',
  stderr: '2018-03-30 02:10:53.335 UTC [channelCmd] InitCmdFactory -> INFO 001\u001b[0m Endorser and orderer connections initialized\nfatal error: unexpected signal during runtime execution\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x63 pc=0x7f4b4ce7b259]\n\nruntime stack:\nruntime.throw(0xf11259, 0x2a)\n\t/opt/go/src/runtime/panic.go:605 +0x95\nruntime.sigpanic()\n\t/opt/go/src/runtime/signal_unix.go:351 +0x2b8\n\ngoroutine 21 [syscall, locked to thread]:\nruntime.cgocall(0xbf3800, 0xc42002fde8, 0xf0fa21)\n\t/opt/go/src/runtime/cgocall.go:132 +0xe4 fp=0xc42002fda8 sp=0xc42002fd68 pc=0x4023b4\nnet._C2func_getaddrinfo(0x7f4b480008c0, 0x0, 0xc42019e210, 0xc4204b6038, 0x0, 0x0, 0x0)\n\tnet/_obj/_cgo_gotypes.go:86 +0x5f fp=0xc42002fde8 sp=0xc42002fda8 pc=0x5f893f\nnet.cgoLookupIPCNAME.func2(0x7f4b480008c0, 0x0, 0xc42019e210, 0xc4204b6038, 0xc420302c00, 0x7ffe78456c8b, 0x13)\n\t/opt/go/src/net/cgo_unix.go:151 +0x13f fp=0xc42002fe40 sp=0xc42002fde8 pc=0x5ffedf\nnet.cgoLookupIPCNAME(0x7ffe78456c8b, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/opt/go/src/net/cgo_unix.go:151 +0x175 fp=0xc42002ff38 sp=0xc42002fe40 pc=0x5fa195\nnet.cgoIPLookup(0xc420302d80, 0x7ffe78456c8b, 0x13)\n\t/opt/go/src/net/cgo_unix.go:203 +0x4d fp=0xc42002ffc8 sp=0xc42002ff38 pc=0x5fa8dd\nruntime.goexit()\n\t/opt/go/src/runtime/asm_amd64.s:2337 +0x1 fp=0xc42002ffd0 sp=0xc42002ffc8 pc=0x45e391\ncreated by net.cgoLookupIP\n\t/opt/go/src/net/cgo_unix.go:213 +0xaf\n\ngoroutine 1 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext(0x7f4b4d1fcab0, 0xc420302ae0, 0x7ffe78456c8b, 0x18, 0xc42015f0a0, 0x4, 0x4, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:422 +0x532\ngithub.com/hyperledger/fabric/core/comm.(*grpcClient).NewConnection(0xc4204b20a0, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/core/comm/client.go:217 +0x389\ngithub.com/hyperledger/fabric/peer/common.(*OrdererClient).Deliver(0xc42019b890, 0x0, 0x0, 0x20, 0xd662c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/common/ordererclient.go:61 +0x6c\ngithub.com/hyperledger/fabric/peer/channel.newDeliverClient(0x7ffe78456ca7, 0x9, 0xee710d, 0x1, 0xc42015f060)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:51 +0x143\ngithub.com/hyperledger/fabric/peer/channel.InitCmdFactory(0xc420320100, 0x0, 0x0, 0x16571c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:152 +0x233\ngithub.com/hyperledger/fabric/peer/channel.getGenesisBlock(0xc4203e2050, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:167 +0x124\ngithub.com/hyperledger/fabric/peer/channel.executeCreate(0xc4203e2050, 0xc4203e2050, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:183 +0x50\ngithub.com/hyperledger/fabric/peer/channel.create(0xc4202886c0, 0xc420303500, 0x0, 0x6, 0x0, 0xd5afc0, 0x16705c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:213 +0x40\ngithub.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc4202886c0, 0xc420303500, 0x0, 0x6, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52\ngithub.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc4202886c0, 0xc420303200, 0x6, 0x6, 0xc4202886c0, 0xc420303200)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x3e8\ngithub.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x164d4e0, 0x11, 0xc4202b8540, 0x5)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x2fe\ngithub.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x164d4e0, 0x35, 0xc420016035)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b\nmain.main()\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x5e1\n\ngoroutine 19 [select]:\nnet.(*Resolver).LookupIPAddr(0x169d370, 0x1667b40, 0xc420302c00, 0x7ffe78456c8b, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/opt/go/src/net/lookup.go:196 +0x52b\nnet.(*Resolver).internetAddrList(0x169d370, 0x1667b40, 0xc420302c00, 0xee7636, 0x3, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, ...)\n\t/opt/go/src/net/ipsock.go:293 +0x644\nnet.(*Resolver).resolveAddrList(0x169d370, 0x1667b40, 0xc420302c00, 0xee7b40, 0x4, 0xee7636, 0x3, 0x7ffe78456c8b, 0x18, 0x0, ...)\n\t/opt/go/src/net/dial.go:193 +0x594\nnet.(*Dialer).DialContext(0xc420495458, 0x1667b40, 0xc420302c00, 0xee7636, 0x3, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, ...)\n\t/opt/go/src/net/dial.go:375 +0x248\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.dialContext(0x1667b40, 0xc420302c00, 0xee7636, 0x3, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0xc42010c600, 0xc42017c200)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/go17.go:38 +0xb3\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func1(0x7f4b4d1fcab0, 0xc420302c00, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x16571c0, 0xc420163320)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:329 +0x86\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.newProxyDialer.func1(0x7f4b4d1fcab0, 0xc420302c00, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/proxy.go:121 +0x137\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.dial(0x7f4b4d1fcab0, 0xc420302c00, 0xc420300000, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:119 +0x5a\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client(0x7f4b4d1fcab0, 0xc420302c00, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0xeef4b1, 0xd, 0x0, 0x0, ...)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:157 +0xa7\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.NewClientTransport(0x7f4b4d1fcab0, 0xc420302c00, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0xeef4b1, 0xd, 0x0, 0x0, ...)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:505 +0xae\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).resetTransport(0xc4202328c0, 0xc42019b900, 0xc4202328e0, 0xc4200a23c8)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:929 +0x4b4\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn(0xc420232000, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0xc420176001, 0x0, 0x0, 0x4f0e30, 0xc42015a180)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:702 +0x340\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func3(0xc420302ba0, 0xc420232000, 0x0, 0x0, 0x7ffe78456c8b, 0x18)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:417 +0x223\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:386 +0x441\n\ngoroutine 36 [syscall]:\nos/signal.signal_recv(0x0)\n\t/opt/go/src/runtime/sigqueue.go:131 +0xa6\nos/signal.loop()\n\t/opt/go/src/os/signal/signal_unix.go:22 +0x22\ncreated by os/signal.init.0\n\t/opt/go/src/os/signal/signal_unix.go:28 +0x41\n\ngoroutine 41 [IO wait]:\ninternal/poll.runtime_pollWait(0x7f4b4da31f70, 0x72, 0x0)\n\t/opt/go/src/runtime/netpoll.go:173 +0x57\ninternal/poll.(*pollDesc).wait(0xc42017de18, 0x72, 0xffffffffffffff00, 0x165d680, 0x1654ba0)\n\t/opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae\ninternal/poll.(*pollDesc).waitRead(0xc42017de18, 0xc4203f8000, 0x8000, 0x8000)\n\t/opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d\ninternal/poll.(*FD).Read(0xc42017de00, 0xc4203f8000, 0x8000, 0x8000, 0x0, 0x0, 0x0)\n\t/opt/go/src/internal/poll/fd_unix.go:126 +0x18a\nnet.(*netFD).Read(0xc42017de00, 0xc4203f8000, 0x8000, 0x8000, 0x870780, 0xc4202e69a0, 0xc4204b40c0)\n\t/opt/go/src/net/fd_unix.go:202 +0x52\nnet.(*conn).Read(0xc420164618, 0xc4203f8000, 0x8000, 0x8000, 0x0, 0x0, 0x0)\n\t/opt/go/src/net/net.go:176 +0x6d\nbufio.(*Reader).Read(0xc4203ea420, 0xc4202e68f8, 0x9, 0x9, 0xf35600, 0xc420042d60, 0x405c32)\n\t/opt/go/src/bufio/bufio.go:213 +0x30b\nio.ReadAtLeast(0x1656c00, 0xc4203ea420, 0xc4202e68f8, 0x9, 0x9, 0x9, 0xc4203e8001, 0x80000000006, 0x20)\n\t/opt/go/src/io/io.go:309 +0x86\nio.ReadFull(0x1656c00, 0xc4203ea420, 0xc4202e68f8, 0x9, 0x9, 0x0, 0xc420042e28, 0x42b6a6)\n\t/opt/go/src/io/io.go:327 +0x58\ngithub.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc4202e68f8, 0x9, 0x9, 0x1656c00, 0xc4203ea420, 0x0, 0xc400000000, 0xc420042e6d, 0xc4204ba120)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b\ngithub.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc4202e68c0, 0x165fbc0, 0xc4204ba120, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc4203e6bd0, 0xc4204ba120, 0xc4204ba120, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:592 +0x2f\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc4201b96c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1154 +0xc0\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:260 +0xbf8\n\ngoroutine 42 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc4201b96c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1227 +0x148\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0xd2e\n\ngoroutine 43 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc4201b96c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1276 +0x13c\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:292 +0xdd2\n\ngoroutine 44 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc420232380)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a\n\ngoroutine 66 [IO wait]:\ninternal/poll.runtime_pollWait(0x7f4b4da31eb0, 0x72, 0x0)\n\t/opt/go/src/runtime/netpoll.go:173 +0x57\ninternal/poll.(*pollDesc).wait(0xc42044e398, 0x72, 0xffffffffffffff00, 0x165d680, 0x1654ba0)\n\t/opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae\ninternal/poll.(*pollDesc).waitRead(0xc42044e398, 0xc420478000, 0x8000, 0x8000)\n\t/opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d\ninternal/poll.(*FD).Read(0xc42044e380, 0xc420478000, 0x8000, 0x8000, 0x0, 0x0, 0x0)\n\t/opt/go/src/internal/poll/fd_unix.go:126 +0x18a\nnet.(*netFD).Read(0xc42044e380, 0xc420478000, 0x8000, 0x8000, 0x11, 0x0, 0x0)\n\t/opt/go/src/net/fd_unix.go:202 +0x52\nnet.(*conn).Read(0xc420164650, 0xc420478000, 0x8000, 0x8000, 0x0, 0x0, 0x0)\n\t/opt/go/src/net/net.go:176 +0x6d\nbufio.(*Reader).Read(0xc4204613e0, 0xc4204a4038, 0x9, 0x9, 0x9, 0x0, 0xc420043d58)\n\t/opt/go/src/bufio/bufio.go:213 +0x30b\nio.ReadAtLeast(0x1656c00, 0xc4204613e0, 0xc4204a4038, 0x9, 0x9, 0x9, 0xc42042a780, 0xc420043e18, 0x42b3c8)\n\t/opt/go/src/io/io.go:309 +0x86\nio.ReadFull(0x1656c00, 0xc4204613e0, 0xc4204a4038, 0x9, 0x9, 0x0, 0xc42005ee80, 0x3)\n\t/opt/go/src/io/io.go:327 +0x58\ngithub.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc4204a4038, 0x9, 0x9, 0x1656c00, 0xc4204613e0, 0x0, 0x0, 0xc42042a600, 0xf35600)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b\ngithub.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc4204a4000, 0xc4204a2120, 0x165a340, 0xc4202b80f0, 0xc4202b80f0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc4204a2000, 0xc4202b6080, 0xc4202b6080, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:592 +0x2f\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc4204ae000)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1154 +0xc0\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:260 +0xbf8\n\ngoroutine 67 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc4204ae000)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1227 +0x148\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0xd2e\n\ngoroutine 68 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc4204ae000)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1276 +0x13c\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:292 +0xdd2\n\ngoroutine 69 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc420232700)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a\n\ngoroutine 20 [select]:\nnet.cgoLookupIP(0x1667b40, 0xc420302c00, 0x7ffe78456c8b, 0x13, 0xc420168780, 0xc420000180, 0xc42002fde8, 0x42ee2c, 0xf354a0, 0xc42002fdd0)\n\t/opt/go/src/net/cgo_unix.go:214 +0x1b0\nnet.(*Resolver).lookupIP(0x169d370, 0x1667b40, 0xc420302c00, 0x7ffe78456c8b, 0x13, 0xc42002fec0, 0x40476b, 0xc420062120, 0xeec554, 0x9)\n\t/opt/go/src/net/lookup_unix.go:95 +0x12d\nnet.(*Resolver).(net.lookupIP)-fm(0x1667b40, 0xc420302c00, 0x7ffe78456c8b, 0x13, 0x3, 0xc420001500, 0xc42005e0c0, 0xc420001588, 0xc420020600)\n\t/opt/go/src/net/lookup.go:187 +0x56\nnet.glob..func10(0x1667b40, 0xc420302c00, 0xc420300050, 0x7ffe78456c8b, 0x13, 0x42ad09, 0xc400000008, 0xc42005e0c0, 0x4ef901, 0x8db329)\n\t/opt/go/src/net/hook.go:19 +0x52\nnet.(*Resolver).LookupIPAddr.func1(0x18, 0x0, 0x0, 0xc420176001)\n\t/opt/go/src/net/lookup.go:193 +0x5c\ninternal/singleflight.(*Group).doCall(0x169d360, 0xc4204b20f0, 0x7ffe78456c8b, 0x13, 0xc42019be30)\n\t/opt/go/src/internal/singleflight/singleflight.go:93 +0x2e\ncreated by internal/singleflight.(*Group).DoChan\n\t/opt/go/src/internal/singleflight/singleflight.go:86 +0x31f\n' }
composer.init() failed,  { code: 2,
  stdout: '',
  stderr: '2018-03-30 02:10:53.335 UTC [channelCmd] InitCmdFactory -> INFO 001\u001b[0m Endorser and orderer connections initialized\nfatal error: unexpected signal during runtime execution\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x63 pc=0x7f4b4ce7b259]\n\nruntime stack:\nruntime.throw(0xf11259, 0x2a)\n\t/opt/go/src/runtime/panic.go:605 +0x95\nruntime.sigpanic()\n\t/opt/go/src/runtime/signal_unix.go:351 +0x2b8\n\ngoroutine 21 [syscall, locked to thread]:\nruntime.cgocall(0xbf3800, 0xc42002fde8, 0xf0fa21)\n\t/opt/go/src/runtime/cgocall.go:132 +0xe4 fp=0xc42002fda8 sp=0xc42002fd68 pc=0x4023b4\nnet._C2func_getaddrinfo(0x7f4b480008c0, 0x0, 0xc42019e210, 0xc4204b6038, 0x0, 0x0, 0x0)\n\tnet/_obj/_cgo_gotypes.go:86 +0x5f fp=0xc42002fde8 sp=0xc42002fda8 pc=0x5f893f\nnet.cgoLookupIPCNAME.func2(0x7f4b480008c0, 0x0, 0xc42019e210, 0xc4204b6038, 0xc420302c00, 0x7ffe78456c8b, 0x13)\n\t/opt/go/src/net/cgo_unix.go:151 +0x13f fp=0xc42002fe40 sp=0xc42002fde8 pc=0x5ffedf\nnet.cgoLookupIPCNAME(0x7ffe78456c8b, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/opt/go/src/net/cgo_unix.go:151 +0x175 fp=0xc42002ff38 sp=0xc42002fe40 pc=0x5fa195\nnet.cgoIPLookup(0xc420302d80, 0x7ffe78456c8b, 0x13)\n\t/opt/go/src/net/cgo_unix.go:203 +0x4d fp=0xc42002ffc8 sp=0xc42002ff38 pc=0x5fa8dd\nruntime.goexit()\n\t/opt/go/src/runtime/asm_amd64.s:2337 +0x1 fp=0xc42002ffd0 sp=0xc42002ffc8 pc=0x45e391\ncreated by net.cgoLookupIP\n\t/opt/go/src/net/cgo_unix.go:213 +0xaf\n\ngoroutine 1 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext(0x7f4b4d1fcab0, 0xc420302ae0, 0x7ffe78456c8b, 0x18, 0xc42015f0a0, 0x4, 0x4, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:422 +0x532\ngithub.com/hyperledger/fabric/core/comm.(*grpcClient).NewConnection(0xc4204b20a0, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/core/comm/client.go:217 +0x389\ngithub.com/hyperledger/fabric/peer/common.(*OrdererClient).Deliver(0xc42019b890, 0x0, 0x0, 0x20, 0xd662c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/common/ordererclient.go:61 +0x6c\ngithub.com/hyperledger/fabric/peer/channel.newDeliverClient(0x7ffe78456ca7, 0x9, 0xee710d, 0x1, 0xc42015f060)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:51 +0x143\ngithub.com/hyperledger/fabric/peer/channel.InitCmdFactory(0xc420320100, 0x0, 0x0, 0x16571c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:152 +0x233\ngithub.com/hyperledger/fabric/peer/channel.getGenesisBlock(0xc4203e2050, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:167 +0x124\ngithub.com/hyperledger/fabric/peer/channel.executeCreate(0xc4203e2050, 0xc4203e2050, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:183 +0x50\ngithub.com/hyperledger/fabric/peer/channel.create(0xc4202886c0, 0xc420303500, 0x0, 0x6, 0x0, 0xd5afc0, 0x16705c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:213 +0x40\ngithub.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc4202886c0, 0xc420303500, 0x0, 0x6, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52\ngithub.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc4202886c0, 0xc420303200, 0x6, 0x6, 0xc4202886c0, 0xc420303200)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x3e8\ngithub.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x164d4e0, 0x11, 0xc4202b8540, 0x5)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x2fe\ngithub.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x164d4e0, 0x35, 0xc420016035)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b\nmain.main()\n\t/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x5e1\n\ngoroutine 19 [select]:\nnet.(*Resolver).LookupIPAddr(0x169d370, 0x1667b40, 0xc420302c00, 0x7ffe78456c8b, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/opt/go/src/net/lookup.go:196 +0x52b\nnet.(*Resolver).internetAddrList(0x169d370, 0x1667b40, 0xc420302c00, 0xee7636, 0x3, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, ...)\n\t/opt/go/src/net/ipsock.go:293 +0x644\nnet.(*Resolver).resolveAddrList(0x169d370, 0x1667b40, 0xc420302c00, 0xee7b40, 0x4, 0xee7636, 0x3, 0x7ffe78456c8b, 0x18, 0x0, ...)\n\t/opt/go/src/net/dial.go:193 +0x594\nnet.(*Dialer).DialContext(0xc420495458, 0x1667b40, 0xc420302c00, 0xee7636, 0x3, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, ...)\n\t/opt/go/src/net/dial.go:375 +0x248\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.dialContext(0x1667b40, 0xc420302c00, 0xee7636, 0x3, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0xc42010c600, 0xc42017c200)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/go17.go:38 +0xb3\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func1(0x7f4b4d1fcab0, 0xc420302c00, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x16571c0, 0xc420163320)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:329 +0x86\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.newProxyDialer.func1(0x7f4b4d1fcab0, 0xc420302c00, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/proxy.go:121 +0x137\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.dial(0x7f4b4d1fcab0, 0xc420302c00, 0xc420300000, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:119 +0x5a\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client(0x7f4b4d1fcab0, 0xc420302c00, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0xeef4b1, 0xd, 0x0, 0x0, ...)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:157 +0xa7\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.NewClientTransport(0x7f4b4d1fcab0, 0xc420302c00, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0xeef4b1, 0xd, 0x0, 0x0, ...)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:505 +0xae\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).resetTransport(0xc4202328c0, 0xc42019b900, 0xc4202328e0, 0xc4200a23c8)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:929 +0x4b4\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn(0xc420232000, 0x7ffe78456c8b, 0x18, 0x0, 0x0, 0xc420176001, 0x0, 0x0, 0x4f0e30, 0xc42015a180)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:702 +0x340\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func3(0xc420302ba0, 0xc420232000, 0x0, 0x0, 0x7ffe78456c8b, 0x18)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:417 +0x223\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:386 +0x441\n\ngoroutine 36 [syscall]:\nos/signal.signal_recv(0x0)\n\t/opt/go/src/runtime/sigqueue.go:131 +0xa6\nos/signal.loop()\n\t/opt/go/src/os/signal/signal_unix.go:22 +0x22\ncreated by os/signal.init.0\n\t/opt/go/src/os/signal/signal_unix.go:28 +0x41\n\ngoroutine 41 [IO wait]:\ninternal/poll.runtime_pollWait(0x7f4b4da31f70, 0x72, 0x0)\n\t/opt/go/src/runtime/netpoll.go:173 +0x57\ninternal/poll.(*pollDesc).wait(0xc42017de18, 0x72, 0xffffffffffffff00, 0x165d680, 0x1654ba0)\n\t/opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae\ninternal/poll.(*pollDesc).waitRead(0xc42017de18, 0xc4203f8000, 0x8000, 0x8000)\n\t/opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d\ninternal/poll.(*FD).Read(0xc42017de00, 0xc4203f8000, 0x8000, 0x8000, 0x0, 0x0, 0x0)\n\t/opt/go/src/internal/poll/fd_unix.go:126 +0x18a\nnet.(*netFD).Read(0xc42017de00, 0xc4203f8000, 0x8000, 0x8000, 0x870780, 0xc4202e69a0, 0xc4204b40c0)\n\t/opt/go/src/net/fd_unix.go:202 +0x52\nnet.(*conn).Read(0xc420164618, 0xc4203f8000, 0x8000, 0x8000, 0x0, 0x0, 0x0)\n\t/opt/go/src/net/net.go:176 +0x6d\nbufio.(*Reader).Read(0xc4203ea420, 0xc4202e68f8, 0x9, 0x9, 0xf35600, 0xc420042d60, 0x405c32)\n\t/opt/go/src/bufio/bufio.go:213 +0x30b\nio.ReadAtLeast(0x1656c00, 0xc4203ea420, 0xc4202e68f8, 0x9, 0x9, 0x9, 0xc4203e8001, 0x80000000006, 0x20)\n\t/opt/go/src/io/io.go:309 +0x86\nio.ReadFull(0x1656c00, 0xc4203ea420, 0xc4202e68f8, 0x9, 0x9, 0x0, 0xc420042e28, 0x42b6a6)\n\t/opt/go/src/io/io.go:327 +0x58\ngithub.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc4202e68f8, 0x9, 0x9, 0x1656c00, 0xc4203ea420, 0x0, 0xc400000000, 0xc420042e6d, 0xc4204ba120)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b\ngithub.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc4202e68c0, 0x165fbc0, 0xc4204ba120, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc4203e6bd0, 0xc4204ba120, 0xc4204ba120, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:592 +0x2f\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc4201b96c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1154 +0xc0\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:260 +0xbf8\n\ngoroutine 42 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc4201b96c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1227 +0x148\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0xd2e\n\ngoroutine 43 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc4201b96c0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1276 +0x13c\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:292 +0xdd2\n\ngoroutine 44 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc420232380)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a\n\ngoroutine 66 [IO wait]:\ninternal/poll.runtime_pollWait(0x7f4b4da31eb0, 0x72, 0x0)\n\t/opt/go/src/runtime/netpoll.go:173 +0x57\ninternal/poll.(*pollDesc).wait(0xc42044e398, 0x72, 0xffffffffffffff00, 0x165d680, 0x1654ba0)\n\t/opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae\ninternal/poll.(*pollDesc).waitRead(0xc42044e398, 0xc420478000, 0x8000, 0x8000)\n\t/opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d\ninternal/poll.(*FD).Read(0xc42044e380, 0xc420478000, 0x8000, 0x8000, 0x0, 0x0, 0x0)\n\t/opt/go/src/internal/poll/fd_unix.go:126 +0x18a\nnet.(*netFD).Read(0xc42044e380, 0xc420478000, 0x8000, 0x8000, 0x11, 0x0, 0x0)\n\t/opt/go/src/net/fd_unix.go:202 +0x52\nnet.(*conn).Read(0xc420164650, 0xc420478000, 0x8000, 0x8000, 0x0, 0x0, 0x0)\n\t/opt/go/src/net/net.go:176 +0x6d\nbufio.(*Reader).Read(0xc4204613e0, 0xc4204a4038, 0x9, 0x9, 0x9, 0x0, 0xc420043d58)\n\t/opt/go/src/bufio/bufio.go:213 +0x30b\nio.ReadAtLeast(0x1656c00, 0xc4204613e0, 0xc4204a4038, 0x9, 0x9, 0x9, 0xc42042a780, 0xc420043e18, 0x42b3c8)\n\t/opt/go/src/io/io.go:309 +0x86\nio.ReadFull(0x1656c00, 0xc4204613e0, 0xc4204a4038, 0x9, 0x9, 0x0, 0xc42005ee80, 0x3)\n\t/opt/go/src/io/io.go:327 +0x58\ngithub.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc4204a4038, 0x9, 0x9, 0x1656c00, 0xc4204613e0, 0x0, 0x0, 0xc42042a600, 0xf35600)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b\ngithub.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc4204a4000, 0xc4204a2120, 0x165a340, 0xc4202b80f0, 0xc4202b80f0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc4204a2000, 0xc4202b6080, 0xc4202b6080, 0x0, 0x0)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:592 +0x2f\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc4204ae000)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1154 +0xc0\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:260 +0xbf8\n\ngoroutine 67 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc4204ae000)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1227 +0x148\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0xd2e\n\ngoroutine 68 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc4204ae000)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1276 +0x13c\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:292 +0xdd2\n\ngoroutine 69 [select]:\ngithub.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc420232700)\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de\ncreated by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn\n\t/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a\n\ngoroutine 20 [select]:\nnet.cgoLookupIP(0x1667b40, 0xc420302c00, 0x7ffe78456c8b, 0x13, 0xc420168780, 0xc420000180, 0xc42002fde8, 0x42ee2c, 0xf354a0, 0xc42002fdd0)\n\t/opt/go/src/net/cgo_unix.go:214 +0x1b0\nnet.(*Resolver).lookupIP(0x169d370, 0x1667b40, 0xc420302c00, 0x7ffe78456c8b, 0x13, 0xc42002fec0, 0x40476b, 0xc420062120, 0xeec554, 0x9)\n\t/opt/go/src/net/lookup_unix.go:95 +0x12d\nnet.(*Resolver).(net.lookupIP)-fm(0x1667b40, 0xc420302c00, 0x7ffe78456c8b, 0x13, 0x3, 0xc420001500, 0xc42005e0c0, 0xc420001588, 0xc420020600)\n\t/opt/go/src/net/lookup.go:187 +0x56\nnet.glob..func10(0x1667b40, 0xc420302c00, 0xc420300050, 0x7ffe78456c8b, 0x13, 0x42ad09, 0xc400000008, 0xc42005e0c0, 0x4ef901, 0x8db329)\n\t/opt/go/src/net/hook.go:19 +0x52\nnet.(*Resolver).LookupIPAddr.func1(0x18, 0x0, 0x0, 0xc420176001)\n\t/opt/go/src/net/lookup.go:193 +0x5c\ninternal/singleflight.(*Group).doCall(0x169d360, 0xc4204b20f0, 0x7ffe78456c8b, 0x13, 0xc42019be30)\n\t/opt/go/src/internal/singleflight/singleflight.go:93 +0x2e\ncreated by internal/singleflight.(*Group).DoChan\n\t/opt/go/src/internal/singleflight/singleflight.go:86 +0x31f\n' }
unexpected error, [object Object]
```",closed,False,2018-04-02 07:03:29,2018-04-02 07:10:59
caliper,haojun,https://github.com/hyperledger/caliper/pull/14,https://api.github.com/repos/hyperledger/caliper/issues/14,Initiate CONTRIBUTING doc,Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>,closed,True,2018-04-02 06:34:53,2018-04-03 08:10:30
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/13,https://api.github.com/repos/hyperledger/caliper/issues/13,Add perf test framework for Hyperledger Composer,"This PR contains a plugin to run performance tests on Fabric 1.1.0 using Hyperledger Composer v0.19.0

PR includes:
- Composer plugin, with sample networks to test against
- Readme, for using and creating own tests
- Fabric 1.1.0 crypto-material for multiple org/peer configurations




Signed-off-by: Nick Lincoln <nkl199@yahoo.co.uk>",closed,True,2018-03-28 19:34:11,2018-04-09 10:30:31
caliper,haojun,https://github.com/hyperledger/caliper/pull/12,https://api.github.com/repos/hyperledger/caliper/issues/12,Support define key and certification path in fabric configuration,"Now Caliper search cryptographic materials in `cryptodir` with hard-coded path format. 

This patch allows users to define key and certification paths explicitly 

Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>",closed,True,2018-03-28 06:46:42,2018-03-31 07:17:28
caliper,haojun,https://github.com/hyperledger/caliper/pull/11,https://api.github.com/repos/hyperledger/caliper/issues/11,remove obsolete txNumbandTps from config files,Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>,closed,True,2018-03-28 03:27:01,2018-03-28 03:38:57
caliper,tkuhrt,https://github.com/hyperledger/caliper/issues/10,https://api.github.com/repos/hyperledger/caliper/issues/10,Create CONTRIBUTING file,Create a CONTRIBUTING file at the root level of this project to help new people who wish to contribute to this project understand the process. A good example is https://github.com/github/opensource.guide/blob/master/CONTRIBUTING.md,closed,False,2018-03-27 21:47:45,2018-05-04 03:03:35
caliper,neewy,https://github.com/hyperledger/caliper/issues/9,https://api.github.com/repos/hyperledger/caliper/issues/9,Hyperledger Fabric performance,"Hi! I would like to know what is the problem with my use of Caliper tool, as I was examining its work with other blockchain platforms than Iroha, and it seems like I have troubles with Fabric:

```
[Transaction Info] - Submitted: 15000 Succ: 268 Fail:14729 Unfinished:3
###test result:###
+------+------+------+-----------+-------------+-------------+-------------+----------------+------------+
| Name | Succ | Fail | Send Rate | Max Latency | Min Latency | Avg Latency | 75%ile Latency | Throughput |
|------|------|------|-----------|-------------|-------------|-------------|----------------|------------|
| open | 240  | 4760 | 242 tps   | 85.05 s     | 51.12 s     | 72.82 s     | 77.68 s        | 2 tps      |
+------+------+------+-----------+-------------+-------------+-------------+----------------+------------+
```

In the log, following messages are produced:
```
WARNING: timeout is too small, default value is used instead
Invoke chaincode failed, Error: Failed to send Proposal or receive valid response. Response null or status is not 200. exiting...
    at channel.sendTransactionProposal.then (/Users/neewy/Developer/caliper/src/fabric/e2eUtils.js:614:10)
    at <anonymous>
```

and 

```
Invoke chaincode failed, Error: Failed to get valid event notification
    at channel.sendTransaction.then.then (/Users/neewy/Developer/caliper/src/fabric/e2eUtils.js:611:14)
    at <anonymous>
```

In the end of log, before the docker network is being shut down:
```
ok 7 passed 'open' testing
wait 5 seconds for next round...
[Transaction Info] - Submitted: 15000 Succ: 268 Fail:14732 Unfinished:0
[Transaction Info] - Submitted: 15000 Succ: 268 Fail:14732 Unfinished:0
[Transaction Info] - Submitted: 15000 Succ: 268 Fail:14732 Unfinished:0
[Transaction Info] - Submitted: 15000 Succ: 268 Fail:14732 Unfinished:0
[Transaction Info] - Submitted: 15000 Succ: 268 Fail:14732 Unfinished:0
# ##### testing 'query' ######
[Transaction Info] - Submitted: 15000 Succ: 268 Fail:14732 Unfinished:0
unexpected error, TypeError: Cannot read property 'length' of undefined
    at /Users/neewy/Developer/caliper/src/comm/bench-flow.js:226:40
    at new Promise (<anonymous>)
    at defaultTest (/Users/neewy/Developer/caliper/src/comm/bench-flow.js:219:12)
    at prev.then (/Users/neewy/Developer/caliper/src/comm/bench-flow.js:129:28)
    at <anonymous>
```

What might be wrong?

I used `node main.js -c config-fabric.json`to run the benchmark against master branch",closed,False,2018-03-27 13:56:05,2018-05-04 03:04:07
caliper,aklenik,https://github.com/hyperledger/caliper/issues/8,https://api.github.com/repos/hyperledger/caliper/issues/8,Sleep time between phases of a round,"My terminology is the following: a Caliper config file can define multiple _rounds_, each round consists of (possibly) multiple _phases_, each phase associated with its own rate-controller.

Currently, the implementation [contains](https://github.com/hyperledger/caliper/blob/d8ed8ee4c6c931eb488697be8f58ec64c268adaa/src/comm/bench-flow.js#L268) a `sleep` call between each _phase_ inside the round, so a sudden increase in transaction rate cannot be modeled because of this cooldown period.

Is this behavior intentional? If not, a possible solution would be to call `sleep` after the whole round has [finished](https://github.com/hyperledger/caliper/blob/d8ed8ee4c6c931eb488697be8f58ec64c268adaa/src/comm/bench-flow.js#L129).
",closed,False,2018-03-27 09:55:20,2018-03-28 09:27:00
caliper,aklenik,https://github.com/hyperledger/caliper/pull/7,https://api.github.com/repos/hyperledger/caliper/issues/7,Added configuration support for chaincode Init parameters.,"Added configuration support for providing parameters for the chaincode's Init method during instantiation.
If not provided, the parameter array defaults to an empty array for backward compatibility reason.
Extended Fabric configuration documentation accordingly.",closed,True,2018-03-23 00:34:26,2018-03-23 02:00:49
caliper,aklenik,https://github.com/hyperledger/caliper/pull/6,https://api.github.com/repos/hyperledger/caliper/issues/6,Configuration support for chaincode Init parameters,"Added configuration support for providing parameters for the chaincode's Init method during instantiation.  
If not provided, the parameter array defaults to an empty array for backward compatibility reason.
Extended Fabric configuration documentation accordingly.",closed,True,2018-03-23 00:05:24,2018-03-23 00:14:29
caliper,nklincoln,https://github.com/hyperledger/caliper/pull/5,https://api.github.com/repos/hyperledger/caliper/issues/5,Add perf test framework for Hyperledger Composer,"Signed-off-by: Nick Lincoln <nkl199@yahoo.co.uk>

This pull request adds a test framework for Hyperledger Composer.

It enables the performance testing of a Fabric blockchain platform through the Composer abstractions.

The code within this PR is currently being used by the Hyperledger Composer team for performance testing.

The PR includes:
 - Readme on how to use the Composer plugin
 - Composer sample networks for testing
 - Example tests targeting the sample networks
 - Composer Utilities for setting up Fabric (uses the docker exec commands to join peers etc, instead of current API)
 - Composer main file
 - Docker files to use for creating various Fabric configurations using the Fabric 1.1.0 ",closed,True,2018-03-21 16:33:38,2018-03-26 15:51:22
caliper,gerryyang,https://github.com/hyperledger/caliper/issues/4,https://api.github.com/repos/hyperledger/caliper/issues/4,Failed to read monitoring data,"Hi, I have encountered this issue when run main.js to benchmark, as follow. How to avoid this please? My node version is v8.9.4. Thanks!

cd caliper/benchmark/simple && node main.js


```
Failed to read monitoring data
TypeError: Cannot read property 'length' of undefined
    at processResult (/root/caliper/src/comm/bench-flow.js:373:26)
    at p.then (/root/caliper/src/comm/client/client.js:89:20)
    at <anonymous>
    at process._tickCallback (internal/process/next_tick.js:188:7)
not ok 5 failed 'open' testing, TypeError: Cannot read property 'length' of undefined at processResult (/root/caliper/src/comm/bench-flow.js:373:26) at p.then (/root/caliper/src/comm/client/client.js:89:20) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: client.startTest.then.then.catch (/root/caliper/src/comm/bench-flow.js:275:23)
    stack: |-
      Error: failed 'open' testing, TypeError: Cannot read property 'length' of undefined
          at processResult (/root/caliper/src/comm/bench-flow.js:373:26)
          at p.then (/root/caliper/src/comm/client/client.js:89:20)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/root/caliper/node_modules/tape/lib/test.js:225:54)
          at Test.bound [as _assert] (/root/caliper/node_modules/tape/lib/test.js:77:32)
          at Test.fail (/root/caliper/node_modules/tape/lib/test.js:318:10)
          at Test.bound [as fail] (/root/caliper/node_modules/tape/lib/test.js:77:32)
          at client.startTest.then.then.catch (/root/caliper/src/comm/bench-flow.js:275:23)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
```",closed,False,2018-03-21 03:19:47,2018-05-04 03:05:42
caliper,haojun,https://github.com/hyperledger/caliper/pull/3,https://api.github.com/repos/hyperledger/caliper/issues/3,reject create-channel if no channel information found,Signed-off-by: Haojun Zhou <zhouhaojun@huawei.com>,closed,True,2018-03-20 08:54:06,2018-03-20 09:20:11
caliper,haojun,https://github.com/hyperledger/caliper/pull/2,https://api.github.com/repos/hyperledger/caliper/issues/2,Bugfix,,closed,True,2018-03-20 08:30:19,2018-03-20 08:32:47
caliper,ryjones,https://github.com/hyperledger/caliper/pull/1,https://api.github.com/repos/hyperledger/caliper/issues/1,Create DCO,,closed,True,2018-03-20 01:50:32,2018-03-20 01:51:59
