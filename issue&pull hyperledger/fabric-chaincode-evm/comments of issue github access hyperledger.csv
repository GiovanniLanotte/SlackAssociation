url issues,url_api comment,url_html comment,user create comment,body,created_at,updated_at
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/3,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/470985282,https://github.com/hyperledger/fabric-chaincode-evm/pull/3#issuecomment-470985282,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-03-08 16:17:24,2019-03-08 16:17:24
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/3,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/471005863,https://github.com/hyperledger/fabric-chaincode-evm/pull/3#issuecomment-471005863,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-03-08 17:17:24,2019-03-08 17:17:24
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/3,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/471154089,https://github.com/hyperledger/fabric-chaincode-evm/pull/3#issuecomment-471154089,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-03-09 07:23:39,2019-03-09 07:23:39
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/3,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/471197419,https://github.com/hyperledger/fabric-chaincode-evm/pull/3#issuecomment-471197419,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-03-09 16:23:39,2019-03-09 16:23:39
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/3,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/471223031,https://github.com/hyperledger/fabric-chaincode-evm/pull/3#issuecomment-471223031,silasdavis,"I've added a commit which fixes the fact that when a contract was called (but not create) the caller's sequence number was not updated and so a nonce could be reused. I actually implemented this way first, but thought I could stay closer to your 'only bump sequence number on contract create' way of doing things, however this does not work since all EVM calls rely on `nonce` being unique so that the `CREATE` opcode allocates unique addresses. The way it works is by mixing the nonce with the creator address (not necessarily the caller since we can `CREATE` deep in the EVM stack) and a sequence number that has the same lifetime as the VM (and is reset to 0 on subsequent invocations).

Note that previously the EVM would bump sequence numbers for creators and mix their sequence number with the creator address - this made addresses unpredictable at transaction formation time since you have no way of knowing what other previous transactions may do to the sequence numbers of all addresses touched and meant it was impossible to produce a `BatchTx` (used in proposals) containing transactions with the correct sequence numbers. Using the input account for deriving addresses means we get unique but predictable addresses just by knowing the current sequence of one known account, rather than many unknown accounts (since we do not know over which path of 'CREATE's the EVM code may take us).

Hopefully this isn't particularly important to you, but I note one test asserts that a 'query' i.e. otherwise read-only call will not write to the ledger, however with this implementation it will bump the sequence number. From Burrow's perspective this feels like the right thing to do. We have a 'simulated call' path that ensure true read-only queries if that is required. If this property was really important to you then it would be possible to only bump the sequence if either: a) the outer call is a create (i.e. callee is zero address), or b) a CREATE opcode was hit. b) could be realised by creating a wrapper for EVM State that maintains a flag for whether a `Create(Address)` has been hit.",2019-03-09 21:22:02,2019-03-09 21:23:02
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/3,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/471223142,https://github.com/hyperledger/fabric-chaincode-evm/pull/3#issuecomment-471223142,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-03-09 21:23:39,2019-03-09 21:23:39
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/3,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/471227688,https://github.com/hyperledger/fabric-chaincode-evm/pull/3#issuecomment-471227688,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-03-09 22:23:39,2019-03-09 22:23:39
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/3,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/471362048,https://github.com/hyperledger/fabric-chaincode-evm/pull/3#issuecomment-471362048,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-03-10 22:47:35,2019-03-10 22:47:35
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/3,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/471776547,https://github.com/hyperledger/fabric-chaincode-evm/pull/3#issuecomment-471776547,swetharepakula,"@silasdavis I think using the sequence nonce is fine. I didn't quite understand what you meant about the sequence number having the same lifetime as the vm. Currently the per address sequence number still lives beyond the vm's lifetime.

For the second piece about updating sequence numbers for non-create operations, that might become a problem. Due to the endorsement + ordering service style of consensus that occurs in Fabric, updating the sequence number on all transactions essentially means that each user at most can have one transaction per block because all transactions will be trying to update that sequence number. We already do have the chance of collision if one person tries to create multiple new contracts in a single block, but updating per transaction will be more problematic.

The read-only calls will not be a concern, because when a query comes into a fabric chaincode all output writes are ignored which would include the sequence number. So the sequence number will not be updated as the outcome of a query. However if something is queried like the code for an account in a invocation, it does mean now that the transaction is no longer a no op and would cause an update in the ledger.

Also with this change we will need to include a cache in the statemanager for account addresses. In Fabric updates that are to be made to the ledger are not visible as updates in that transaction. Which means that we won't be able to increment the sequence number when the caller address is created in that transaction without an account cache. Here is a commit that adds that on: https://github.com/swetharepakula/fabric-chaincode-evm/commit/f9d65e8dc7468b15e69d431df5640491cde72b70.",2019-03-11 23:09:35,2019-03-11 23:09:35
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/2,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/458489719,https://github.com/hyperledger/fabric-chaincode-evm/pull/2#issuecomment-458489719,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-01-29 10:31:45,2019-01-29 10:31:45
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/2,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/458652317,https://github.com/hyperledger/fabric-chaincode-evm/pull/2#issuecomment-458652317,swetharepakula,"Hi Andrew,
We have noticed this problem in in our documentation about the fabproxy rename. Instead of fab-3 we would like the output to be `bin/fab3`. This will match our makefile. As the message above says, we use gerrit so please submit your patches there using the documentation above.

We have created an issue that you can reference in your commit: https://jira.hyperledger.org/browse/FAB-13947.",2019-01-29 18:27:34,2019-01-29 18:28:11
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/2,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/459116904,https://github.com/hyperledger/fabric-chaincode-evm/pull/2#issuecomment-459116904,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-01-30 21:30:25,2019-01-30 21:30:25
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/1,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/457770706,https://github.com/hyperledger/fabric-chaincode-evm/pull/1#issuecomment-457770706,swetharepakula,covered by: https://gerrit.hyperledger.org/r/#/c/28966/,2019-01-25 23:31:55,2019-01-25 23:31:55
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/1,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/457802777,https://github.com/hyperledger/fabric-chaincode-evm/pull/1#issuecomment-457802777,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-01-26 05:05:07,2019-01-26 05:05:07
https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/1,https://api.github.com/repos/hyperledger/fabric-chaincode-evm/issues/comments/457923866,https://github.com/hyperledger/fabric-chaincode-evm/pull/1#issuecomment-457923866,stale[bot],"Thank you for your contribution! Please use gerrit for the changes, see [documentation here](https://hyperledger-fabric.readthedocs.io/en/latest/CONTRIBUTING.html)
",2019-01-27 14:46:35,2019-01-27 14:46:35
