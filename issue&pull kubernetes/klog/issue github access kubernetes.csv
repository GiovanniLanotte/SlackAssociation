name repository,creator user,url_html issue,url_api issue,title,body,state,pull request,data open,updated at
klog,dims,https://github.com/kubernetes/klog/pull/1,https://api.github.com/repos/kubernetes/klog/issues/1,Switch package names after initial import,"Added a .travis.yml as well for testing

Change-Id: Idf891e1bc4333e69da9535113702d802efd7993d",closed,True,2018-10-25 22:28:11,2018-10-25 22:36:37
klog,dims,https://github.com/kubernetes/klog/pull/2,https://api.github.com/repos/kubernetes/klog/issues/2,Switch package names after initial import,Change-Id: Idf891e1bc4333e69da9535113702d802efd7993d,closed,True,2018-10-25 22:38:07,2018-11-20 20:29:06
klog,dims,https://github.com/kubernetes/klog/pull/3,https://api.github.com/repos/kubernetes/klog/issues/3,Add .travis.yml,Change-Id: I56aee7ef85509e0336b1b1fc239cfd1003e5b2ee,closed,True,2018-10-25 22:40:45,2018-11-20 20:29:05
klog,dims,https://github.com/kubernetes/klog/pull/4,https://api.github.com/repos/kubernetes/klog/issues/4,Add option log-file,"- Move all flag initialization to a single init() block
- add a new option `log-file`
- Avoid creating directories when `log-file` is specified

Change-Id: I76a79dcbcec0587f8056637577bf53ece370896a",closed,True,2018-10-25 23:24:04,2018-11-20 20:29:04
klog,dims,https://github.com/kubernetes/klog/pull/5,https://api.github.com/repos/kubernetes/klog/issues/5,Ability to redirect glog output to an alternate destination,Change-Id: Ic1ab5beaaf65db686078add4fb71948ce1e8b638,closed,True,2018-10-25 23:38:03,2018-11-20 20:29:05
klog,dims,https://github.com/kubernetes/klog/pull/6,https://api.github.com/repos/kubernetes/klog/issues/6,Do not check flag parsing,"Undo the change from:
https://github.com/golang/glog/commit/65d674618f712aa808a7d0104131b9206fc3d5ad

As this change is NOT present in the vendored glog in k/k:
https://github.com/golang/glog/compare/44145f04b68cf362d9c4df2182967c2275eaefed...HEAD

Also, it just breaks stuff (see comments in url above)

Change-Id: I90774b10929064c241d2a41c2b30d8bb9be833ca",closed,True,2018-10-26 00:01:55,2018-11-20 20:29:03
klog,dims,https://github.com/kubernetes/klog/pull/7,https://api.github.com/repos/kubernetes/klog/issues/7,Add examples,"- Added example for the `SetOutput` API
- Added example for the `log_file` command line option

Change-Id: I8e34a3d3a3667975e56056859314e098d5a370e9",closed,True,2018-10-26 00:47:51,2018-11-20 20:29:03
klog,dims,https://github.com/kubernetes/klog/pull/8,https://api.github.com/repos/kubernetes/klog/issues/8,Avoid initializing flags in init(),"- Require explicit `InitFlags` to initialize the flags

Change-Id: Iebb46ae1a9baa8e05cc38ca501dc17221f2a1cb0",closed,True,2018-10-26 16:33:11,2018-11-20 20:29:02
klog,dims,https://github.com/kubernetes/klog/pull/9,https://api.github.com/repos/kubernetes/klog/issues/9,Update README,Change-Id: I27f5780b39622496c744112b76b236af879417a2,closed,True,2018-10-26 16:59:32,2018-11-20 20:29:02
klog,dims,https://github.com/kubernetes/klog/pull/10,https://api.github.com/repos/kubernetes/klog/issues/10,Example on coexisting with older glog,Change-Id: I08060ea81a1b53c5001447af9a602b5d42b3516c,closed,True,2018-10-26 21:08:00,2018-11-20 20:29:02
klog,monotek,https://github.com/kubernetes/klog/pull/11,https://api.github.com/repos/kubernetes/klog/issues/11,Removed doubled wording from README.md ,,closed,True,2018-10-31 02:59:24,2018-11-02 13:42:12
klog,dims,https://github.com/kubernetes/klog/pull/12,https://api.github.com/repos/kubernetes/klog/issues/12,Add OWNERS and other template files,Change-Id: Iaccfe8a93c29808737c44edf09b6281c168b3b1a,closed,True,2018-11-02 01:57:49,2018-11-02 11:28:18
klog,dims,https://github.com/kubernetes/klog/pull/13,https://api.github.com/repos/kubernetes/klog/issues/13,glog wrapper that redirects to klog,"implements the glog API, but redirects to klog implementation.

Makes it easy to use `dep` overrides to quickly switch/try the klog
implementation.

Change-Id: Ibdf4b25ed3b17e761c3fdea449f80add76a9070f",closed,True,2018-11-02 02:07:25,2018-11-08 23:46:04
klog,dims,https://github.com/kubernetes/klog/pull/14,https://api.github.com/repos/kubernetes/klog/issues/14,Oops! missed a couple of spots for imports,"Fix up the example directory, imports point to an older repo used for proof-of-concept",closed,True,2018-11-13 18:05:37,2018-11-13 19:59:59
klog,BenTheElder,https://github.com/kubernetes/klog/issues/15,https://api.github.com/repos/kubernetes/klog/issues/15,document differences vs glog,"Can we put a TLDR somewhere of things we've fixed or improved vs glog? I think it would be helpful for other ecosystem projects.

cc @dims",closed,False,2018-11-14 02:33:35,2018-11-14 18:20:58
klog,dims,https://github.com/kubernetes/klog/pull/16,https://api.github.com/repos/kubernetes/klog/issues/16,Add a short HOWTO,Change-Id: I35a59bebd603ac84a480c977e29a97bc7b8d643c,closed,True,2018-11-14 03:13:17,2018-11-14 18:15:55
klog,vincepri,https://github.com/kubernetes/klog/pull/17,https://api.github.com/repos/kubernetes/klog/issues/17,Add common PR/Issues templates,Signed-off-by: Vince Prignano <vince@vincepri.com>,closed,True,2018-11-14 23:15:00,2018-11-15 03:02:20
klog,vincepri,https://github.com/kubernetes/klog/issues/18,https://api.github.com/repos/kubernetes/klog/issues/18,Decrease flushInterval or make it configurable,"/kind feature

**Describe the solution you'd like**
The current `flushInterval` is set to 30s, which is a lot higher than usually expected. It's common to [adopt alternative strategies](https://github.com/kubernetes-sigs/cluster-api/blob/master/cmd/clusterctl/cmd/logutil.go#L46-L51) to flush more frequently. I'd be great to either decrease the default or make it configurable with a flag.

**Anything else you would like to add:**
[Miscellaneous information that will assist in solving the issue.]",closed,False,2018-11-14 23:44:14,2019-01-29 23:57:05
klog,vincepri,https://github.com/kubernetes/klog/issues/19,https://api.github.com/repos/kubernetes/klog/issues/19,Interface based approach,"We should consider offering interfaces for to allow third-party implementations and allow custom sinks. This issue can serve as umbrella for proposals / thoughts.

> This issue was initially raised on the mailing list https://groups.google.com/d/msg/kubernetes-sig-architecture/wCWiWf3Juzs/nLtAC41tCwAJ.",closed,False,2018-11-14 23:48:20,2019-03-15 20:14:13
klog,munnerz,https://github.com/kubernetes/klog/pull/20,https://api.github.com/repos/kubernetes/klog/issues/20,Add SetLogger function to intercept klog output with logr,"This is an example of how we can modify klog and the work required in order to allow intercepting logs, including preserving the `V` level and severity.

In order to do this, I've had to change the type signature of `Verbose` from `type Verbose bool` to:

```
type Verbose struct {
	enabled bool
	logr    logr.InfoLogger
}
```

Consequently, it requires a corresponding change in k/k in the instances where `if klog.V(x) {` (replacing them with `if klog.V(x).Enabled()`).

The total changeset in k/k to get `bazel build //...` to pass:

```
 pkg/cloudprovider/providers/gce/cloud/gen.go                | 160 +++++++++++++++++++++++++++++++++++++++++++++++++--------------------------------------------------
 pkg/cloudprovider/providers/vsphere/vclib/connection.go     |   2 +-
 pkg/controller/nodelifecycle/node_lifecycle_controller.go   |   4 +--
 pkg/controller/volume/attachdetach/reconciler/reconciler.go |   6 ++--
 pkg/kubectl/cmd/util/helpers.go                             |   2 +-
 pkg/kubelet/eviction/helpers.go                             |   4 +--
 pkg/proxy/endpoints.go                                      |   2 +-
 pkg/scheduler/algorithm/predicates/predicates.go            |   8 ++---
 pkg/scheduler/algorithm/priorities/interpod_affinity.go     |   2 +-
 pkg/scheduler/algorithm/priorities/resource_allocation.go   |   2 +-
 pkg/scheduler/algorithm/priorities/resource_limits.go       |   2 +-
 pkg/scheduler/algorithm/priorities/selector_spreading.go    |   2 +-
 pkg/scheduler/core/generic_scheduler.go                     |   6 ++--
 plugin/pkg/auth/authorizer/rbac/rbac.go                     |   2 +-
 staging/src/k8s.io/apiserver/pkg/server/httplog/httplog.go  |   4 +--
 staging/src/k8s.io/apiserver/pkg/util/trace/trace.go        |   4 +--
 staging/src/k8s.io/client-go/rest/request.go                |   8 ++---
 staging/src/k8s.io/client-go/transport/round_trippers.go    |   8 ++---
 18 files changed, 114 insertions(+), 114 deletions(-)
```

We can still preserve the old behaviour in the `k8s.io/klog/glog` package, for those that are using the dep `replace` method to implement glog.

ref #19",open,True,2018-11-15 00:26:32,2019-03-15 23:29:17
klog,munnerz,https://github.com/kubernetes/klog/pull/21,https://api.github.com/repos/kubernetes/klog/issues/21,Add go_import_path option to .travis.yml,"In CI right now, `k8s.io/klog` is being fetched at `master` when `k8s.io/klog/glog` is tested, as it imports `k8s.io/klog`.

Travis supports setting a custom path to clone your repo at for exactly this reason, and this PR adds the option to the .travis.yml file ðŸ˜„ 

(see #20 for an example)",closed,True,2018-11-15 00:44:07,2018-11-15 01:13:40
klog,vincepri,https://github.com/kubernetes/klog/issues/22,https://api.github.com/repos/kubernetes/klog/issues/22,Child loggers,"/kind feature

**Describe the solution you'd like**
A common use case for loggers is to provide a default context. An example is to prepend some common values to each log line. I've seen other loggers are able to create a child logger of some sort with a predefined set of variables which are used as suffix for each log line. 

I'd imagine this approach to have some sort of limitations, for example how many variables are allowed to be set as context. This approach would have the following requirements:
- The global logger has a 1 to many relationship with many child loggers.
- Child loggers have only have a single parent.
- No hard to debug multi-layer nested loggers.
- Sinks (re: #19) are only managed at the global logger.

Thoughts?",open,False,2018-11-15 22:48:55,2019-04-04 00:02:34
klog,BenTheElder,https://github.com/kubernetes/klog/issues/23,https://api.github.com/repos/kubernetes/klog/issues/23,update SetOutput example,"`klog.SetOutput` is a bit of a footgun right now, severities above `INFO` will write to the ""files"" with fallthrough to the lower files, potentially leading to the same line being written as many as 4 times to the same writer.

I think the safest usage of this right now is probably something like:

```go
klog.SetOutput(ioutil.Discard)
klog.SetOutputBySeverity(""INFO"", myWriter)
```

This works pretty nicely, but probably need some more documentation. I initially just did:
```go
klog.SetOutput(myWriter)
```
which has surprising (duplicated) output in some cases",open,False,2018-11-17 08:34:44,2019-04-05 18:18:25
klog,dmage,https://github.com/kubernetes/klog/issues/24,https://api.github.com/repos/kubernetes/klog/issues/24,Provide example how to use dep override for glog proxy,"/kind feature

I tried to add to my Godep.toml next lines
```
[[override]]
    name = ""github.com/golang/glog""
    source = ""k8s.io/klog/glog""
```
but apparently `dep` ignored the `/glog` suffix and copied entire klog into vendor/github.com/golang/glog. And it looks dep's authors [don't want to have subdirs](https://github.com/golang/dep/issues/860#issuecomment-338983320).

As `dep` is mentioned in the README file, I expect there should be a way to do it, though.",closed,False,2018-11-27 11:23:06,2019-01-25 02:46:51
klog,awly,https://github.com/kubernetes/klog/issues/25,https://api.github.com/repos/kubernetes/klog/issues/25,Credential redaction or generic output filters,"/kind feature

**Describe the solution you'd like**
The goal is to prevent accidental logging of credentials.
Ideally this would be opt-out output filter for things that look like:
- JWT
- PEM-encoded private key
- bearer tokens

Filter would replace these with something like `--- REDACTED CREDENTIAL ---`.

Alternatively, allow arbitrary pluggable filters, something like:
```
func AddFilter(filter func(line string) string)
```

**Anything else you would like to add:**
Performance impact would be the main concern here.

cc @mikedanese @liggitt 
",open,False,2018-11-28 23:07:50,2019-03-29 23:58:17
klog,dims,https://github.com/kubernetes/klog/issues/26,https://api.github.com/repos/kubernetes/klog/issues/26,Document how to better co-exist with glog,"See details and snippets in:

- https://github.com/kubernetes-sigs/cluster-api/pull/610
- https://github.com/kubernetes/kubernetes/pull/71559",closed,False,2018-11-30 15:51:25,2018-12-03 19:15:10
klog,vincepri,https://github.com/kubernetes/klog/pull/27,https://api.github.com/repos/kubernetes/klog/issues/27,Update example/readme when using klog and glog,"Signed-off-by: Vince Prignano <vince@vincepri.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
5. If this PR changes image versions, please title this PR ""Bump <image name> from x.x.x to y.y.y.""
-->

**What this PR does / why we need it**:
This PR shows an alternative method to make `klog` and `glog` coexist. The approach has been tested and merged into [cluster-api](https://github.com/kubernetes-sigs/cluster-api/pull/610) and proven to be effective.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #26 

**Special notes for your reviewer**:

_Please confirm that if this PR changes any image versions, then that's the sole change this PR makes._

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note

```",closed,True,2018-12-01 16:20:47,2018-12-03 19:15:10
klog,christopherhein,https://github.com/kubernetes/klog/issues/28,https://api.github.com/repos/kubernetes/klog/issues/28,Add link to k8s/community logging conventions,"/kind feature

**Describe the solution you'd like**
Update docs to include link to the community logging conventions.


**Anything else you would like to add:**
https://github.com/kubernetes/community/pull/3016
",closed,False,2018-12-06 20:16:42,2018-12-08 03:05:51
klog,christopherhein,https://github.com/kubernetes/klog/pull/29,https://api.github.com/repos/kubernetes/klog/issues/29,Adds link to k8s/community logging conventions,"**What this PR does / why we need it**:
Per @dims comment https://github.com/kubernetes/community/pull/3016 this adds a link to the logging conventions on k8s/community.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #28

**Special notes for your reviewer**:
n/a

**Release note**:
```release-note
Adds link to the README.md about logging conventions
```

Signed-off-by: Christopher Hein <me@christopherhein.com>",closed,True,2018-12-06 20:18:40,2018-12-08 03:05:52
klog,shsjshentao,https://github.com/kubernetes/klog/pull/30,https://api.github.com/repos/kubernetes/klog/issues/30,stderrthreshold is useless if logtostderr is set,"stderrthreshold is useless if logtostderr is set.
This pr can ignore logs which log level is under stderrthreshold.
Like: 
flag.Set(""logtostderr"",""true"")
flag.Set(""stderrthreshold"",""ERROR"")",closed,True,2018-12-07 06:38:59,2018-12-07 06:44:33
klog,shsjshentao,https://github.com/kubernetes/klog/pull/31,https://api.github.com/repos/kubernetes/klog/issues/31,stderrthreshold is useless if logtostderr is set,"stderrthreshold is useless if logtostderr is set.
This pr can ignore logs which log level is under stderrthreshold.
Like:
flag.Set(""logtostderr"",""true"")
flag.Set(""stderrthreshold"",""ERROR"")

**Does this PR introduce a user-facing change?**:
<!--  
If no, just write ""NONE"".
If yes, a release note is required:
Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string ""action required"".
-->
```release-note
The flag ""stderrthreshold"" will take effect if flag ""logtostderr"" is set to ""true"".
In previous version, it will print all level logs whatever ""stderrthreshold"" is set.
```",closed,True,2018-12-07 06:45:14,2018-12-24 20:43:49
klog,MalloZup,https://github.com/kubernetes/klog/pull/32,https://api.github.com/repos/kubernetes/klog/issues/32,Clearify that loglevel is expressed with integers,"**What this PR does / why we need it**:
This PR make clear that the verbosity is depending on integers not on string like (debug, info, etc)

**Which issue(s) this PR fixes** 
Fixes https://github.com/kubernetes/kubernetes/issues/35054
**Release note**:
```release-note
document and clarify more kubectl --v
```",closed,True,2018-12-18 10:44:30,2018-12-21 13:53:12
klog,nikhita,https://github.com/kubernetes/klog/pull/33,https://api.github.com/repos/kubernetes/klog/issues/33,Add the code of conduct,"For https://github.com/kubernetes/community/issues/3053

The content is from https://github.com/kubernetes/kubernetes-template-project.

/assign @dims 

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
NONE
```",closed,True,2018-12-27 11:43:29,2018-12-27 13:44:21
klog,wavezhang,https://github.com/kubernetes/klog/issues/34,https://api.github.com/repos/kubernetes/klog/issues/34,Support log metric,"/kind feature

**Describe the solution you'd like**
Collect log statistics and expose metric API.
collect information like TAG, log type, log detail, count etc. 

**Anything else you would like to add:**

",open,False,2019-01-02 02:31:14,2019-01-17 02:25:55
klog,dims,https://github.com/kubernetes/klog/issues/35,https://api.github.com/repos/kubernetes/klog/issues/35,add a `loglevel` for verbosity,"Request from @soltysh at:
https://github.com/kubernetes/kubernetes/issues/35054#issuecomment-255750857

```
I'd propose loglevel, we are already doing that downstream in OpenShift, see here. As for docs we can use this https://github.com/kubernetes/kubernetes/blob/master/docs/devel/logging.md with extra information about levels 7, 8 which allow you to dump HTTP requets.
```",open,False,2019-01-14 17:35:02,2019-03-12 18:34:45
klog,dims,https://github.com/kubernetes/klog/pull/36,https://api.github.com/repos/kubernetes/klog/issues/36,k8s.io/klog/glog does not work,"if the proxy is in a sub directory, it does not work with `dep` so let's
drop this

Change-Id: I26829711ab878758e2e8fd8bad3b6a3f779cc0a8

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
5. If this PR changes image versions, please title this PR ""Bump <image name> from x.x.x to y.y.y.""
-->

**What this PR does / why we need it**:

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #24

**Special notes for your reviewer**:

_Please confirm that if this PR changes any image versions, then that's the sole change this PR makes._

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
Drop the glog proxy to klog as it does not work well in sub directories.
```",closed,True,2019-01-25 00:45:45,2019-01-25 02:46:51
klog,dims,https://github.com/kubernetes/klog/pull/37,https://api.github.com/repos/kubernetes/klog/issues/37,Add support for logr,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
5. If this PR changes image versions, please title this PR ""Bump <image name> from x.x.x to y.y.y.""
-->

**What this PR does / why we need it**:

We have libraries like k8s.io/utils that need logging, we should have a way to use the `logr` in these scenarios. For example see https://github.com/kubernetes/utils/pull/70

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

**Special notes for your reviewer**:

_Please confirm that if this PR changes any image versions, then that's the sole change this PR makes._

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
Now supports github.com/go-logr/logr based interfaces backed by klog
```",closed,True,2019-01-25 01:23:31,2019-01-25 22:27:26
klog,vincepri,https://github.com/kubernetes/klog/issues/38,https://api.github.com/repos/kubernetes/klog/issues/38,Make (also)logtostderr default to true,"/kind feature

**Describe the solution you'd like**
I'd like to propose that `logtostderr` or `alsologtostderr` be defaulting to true. It's very common in the k8s community to have `init()` or `main()` functions to hardcode the flag to ""true"", flipping the default value of either flag should ease the use of this package and remove some initial friction for new users.

**Anything else you would like to add:**
",closed,False,2019-01-26 16:00:48,2019-01-31 19:36:18
klog,vincepri,https://github.com/kubernetes/klog/pull/39,https://api.github.com/repos/kubernetes/klog/issues/39,Default logtostderr to true,"Signed-off-by: Vince Prignano <vincepri@vmware.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
5. If this PR changes image versions, please title this PR ""Bump <image name> from x.x.x to y.y.y.""
-->

**What this PR does / why we need it**:
This PR changes the default `logtostderr` to ""true"", more details and discussion can be found in #38.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #38

**Special notes for your reviewer**:

_Please confirm that if this PR changes any image versions, then that's the sole change this PR makes._

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
The `logtostderr` flag now defaults to true.
```",closed,True,2019-01-29 23:40:44,2019-01-31 19:44:02
klog,vincepri,https://github.com/kubernetes/klog/pull/40,https://api.github.com/repos/kubernetes/klog/issues/40,Reduce default flushInterval to 5s,"Signed-off-by: Vince Prignano <vincepri@vmware.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
5. If this PR changes image versions, please title this PR ""Bump <image name> from x.x.x to y.y.y.""
-->

**What this PR does / why we need it**:
More details in #18. I think it's clear that a lower default could be beneficial to multiple projects.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #18

**Special notes for your reviewer**:
This should be a good short term solution, making it a configurable flag would require initializing the flushDaemon somewhere else (maybe a different Init function?). Given that it seems most users set the value to 5s, I thought making that the default would be a good first step.

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note

```",closed,True,2019-01-29 23:48:25,2019-01-29 23:57:05
klog,rlenferink,https://github.com/kubernetes/klog/pull/41,https://api.github.com/repos/kubernetes/klog/issues/41,Adding consistency to OWNERS files,"Adding same documentation statement to k8s OWNERS files.
Updated this one as well for consistency.

```release-note
NONE
```",closed,True,2019-02-04 17:37:25,2019-02-04 19:33:46
klog,vincepri,https://github.com/kubernetes/klog/pull/42,https://api.github.com/repos/kubernetes/klog/issues/42,Use info in default stderrThreshold,"Signed-off-by: Vince Prignano <vincepri@vmware.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
5. If this PR changes image versions, please title this PR ""Bump <image name> from x.x.x to y.y.y.""
-->

**What this PR does / why we need it**:
This PR is a follow-up to #39, it sets the default threshold for stderr logging to `INFO`.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

**Special notes for your reviewer**:

_Please confirm that if this PR changes any image versions, then that's the sole change this PR makes._

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
The default stderrThreshold has been set to info instead of error, you can use `-stderrthreshold=ERROR` to revert to the old behavior.
```",closed,True,2019-02-04 22:25:28,2019-02-07 18:44:08
klog,filmil,https://github.com/kubernetes/klog/issues/43,https://api.github.com/repos/kubernetes/klog/issues/43,Why klog?,"/kind bug

It would be nice for the README file for `klog` to explain why the fork, versus contributing to glog.",closed,False,2019-02-11 17:40:06,2019-03-06 18:22:51
klog,dims,https://github.com/kubernetes/klog/issues/44,https://api.github.com/repos/kubernetes/klog/issues/44,Bootstrapping a team to take care of klog,"The following folks have expressed interested on email/slack:
https://groups.google.com/forum/#!msg/kubernetes-dev/DKWQn2a3Ybw/Z-07nwabDwAJ

@yagonobre 
@vincepri 
@detiber 
@jaredallard

Anyone else?",closed,False,2019-02-11 18:01:48,2019-02-20 09:00:27
klog,dims,https://github.com/kubernetes/klog/pull/45,https://api.github.com/repos/kubernetes/klog/issues/45,Bootstrapping a team to take care of klog,"Change-Id: Ie566088f45712e6a38fcfbc0ddaf98a07387c5b5

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
5. If this PR changes image versions, please title this PR ""Bump <image name> from x.x.x to y.y.y.""
-->

**What this PR does / why we need it**:

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #44

**Special notes for your reviewer**:

_Please confirm that if this PR changes any image versions, then that's the sole change this PR makes._

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
NONE
```",closed,True,2019-02-13 19:51:47,2019-02-13 20:28:10
klog,christopherhein,https://github.com/kubernetes/klog/pull/46,https://api.github.com/repos/kubernetes/klog/issues/46,go-logr link missing protocol,"**What this PR does / why we need it**:
The link in the `klogr` sub directory didn't have the protocol so the link 404'ed with - https://github.com/kubernetes/klog/blob/master/klogr/github.com/go-logr/logr 

**Special notes for your reviewer**:

_Please confirm that if this PR changes any image versions, then that's the sole change this PR makes._

N/A

**Release note**:
```release-note
NONE
```

Signed-off-by: Christopher Hein <me@christopherhein.com>",closed,True,2019-02-22 01:36:57,2019-02-22 03:11:53
klog,munnerz,https://github.com/kubernetes/klog/pull/47,https://api.github.com/repos/kubernetes/klog/issues/47,klogr: Fix handling of duplicate key/values & add unit tests,"**What this PR does / why we need it**:

Adds 6 unit tests to cover some basic functionality of klogr's structured output handling.

I created these tests as I've noticed a bug in the 'deduplication' handling when multiple kv pairs with the same key are specified.

Output:

```
--- FAIL: TestInfo (0.00s)
    --- PASS: TestInfo/should_print_different_log_level_if_set (0.00s)
    --- PASS: TestInfo/should_log_with_values_passed_to_keysAndValues (0.00s)
    --- PASS: TestInfo/should_print_duplicate_keys_with_the_same_value (0.00s)
    --- FAIL: TestInfo/should_print_duplicate_keys_with_different_values_when_all_values_are_passed_to_Info (0.00s)
        klogr_test.go:86: expected "" \""level\""=0 \""msg\""=\""test\""  \""akey\""=\""avalue\"" \""akey\""=\""avalue2\""\n"" did not match actual "" \""level\""=0 \""msg\""=\""test\""  \""akey\""=\""avalue2\"" \""akey\""=\""avalue2\""\n""
    --- PASS: TestInfo/should_print_duplicate_keys_with_the_same_value_when_one_is_set_on_logger (0.00s)
    --- PASS: TestInfo/should_print_duplicate_keys_with_different_values_when_one_is_set_on_logger (0.00s)
```

**Special notes for your reviewer**:

~The `should_print_duplicate_keys_with_different_values_when_all_values_are_passed_to_Info` test is failing - should I fix the actual implementation as part of this PR?~

~As you can see, the 2nd value is *always* set even if the two tuples have different values: `\""akey\""=\""avalue2\"" \""akey\""=\""avalue2\""` (notice that `avalue2` is set twice)~

I've updated this PR to include handling of duplicate key/value tuples as well, so all the tests should now pass ðŸ˜„ 

**Release note**:
```release-note
NONE
```

/cc @dims @thockin @pohly ",closed,True,2019-02-25 13:45:58,2019-02-28 10:03:16
klog,jaredallard,https://github.com/kubernetes/klog/pull/48,https://api.github.com/repos/kubernetes/klog/issues/48,feat(README): add why klog,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
5. If this PR changes image versions, please title this PR ""Bump <image name> from x.x.x to y.y.y.""
-->

**What this PR does / why we need it**: Adds context to why this repo was created

**Which issue(s) this PR fixes**: Fixes #43

**Special notes for your reviewer**: Took my first crack at it, LMK if it's missing the point entirely!

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
NONE
```",closed,True,2019-02-27 06:16:16,2019-03-06 18:22:51
klog,mtaufen,https://github.com/kubernetes/klog/pull/49,https://api.github.com/repos/kubernetes/klog/issues/49,Open existing log files with O_APPEND at startup,"**What this PR does / why we need it**:

klog shouldn't erase old log files when components restart,
and should also ensure it doesn't overwrite old logs in
existing files when restarts happen.

Previously, files were opened with O_TRUNC at both startup
and rotation time. While, in the latter case, this ensures
a fresh log file, it doesn't make sense in the former case.

We probably don't see this cause issues in many production environments these days because journald is a very popular log sink. @yujuhong also noticed some logs overwritten at the beginning in Windows tests, which may have been caused by klog not opening the files as append-only (to be clear, it seems that the files on Windows weren't truncated correctly either, which requires further research figure out).

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
Existing log files are now opened with O_APPEND at startup, instead of O_TRUNC. Rotation still uses O_TRUNC.
```

@dims @liggitt @yujuhong @pjh ",closed,True,2019-02-28 21:19:30,2019-03-01 01:06:17
klog,mtaufen,https://github.com/kubernetes/klog/pull/50,https://api.github.com/repos/kubernetes/klog/issues/50,Revert default changes,"**What this PR does / why we need it**:
Reverts recent, potentially breaking changes to flag defaults. These block vendoring the latest version of klog into upstream Kubernetes, because they could break user deployments of core Kubernetes components. If these changes are eventually included, they need to be included in a way that respects the upstream deprecation policy (see below).

This PR reverts three other PRs:
1. #42, which changes the stderrthreshold default to INFO
    - This could cause significant, unexpected increases in logging verbosity.
2. ~#39, which changes the logtostderr default to true~
    - ~This, especially, could break existing logging configurations because when set, it disables logs from being sent to files, even if --log_file is set.~ EDIT: See below conversation, we decided to keep #39 due to pre-existing overrides in k/k, but still revert the other two.
3. #31, which conditions tostderr output on stderrthreshold
    - Without the addition of #42, this could have resulted in default behavior that silently drops (Info) logs sent to stderr when logtostderr is true. With the revert of #42, this should also be reverted.

Adding these changes back in can be revisited and discussed during code slush, but I would like to back them out in order to get the O_APPEND fix into Kubernetes 1.14.

If we decide to include these changes in upstream Kubernetes, we need to follow the official policy of announcing deprecation of old defaults and waiting the appropriate amount of time before changing them: https://kubernetes.io/docs/reference/using-api/deprecation-policy/. In the future, we need to figure out how to more carefully coordinate changes to defaults in this repo with deprecation policies of other Kubernetes projects.

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
Recent commits that changed --stderrthreshold default from ERROR to INFO and conditioned --tostderr output on --stderrthreshold have been reverted.
```",closed,True,2019-03-04 23:09:32,2019-03-06 01:58:05
klog,joelsmith,https://github.com/kubernetes/klog/pull/51,https://api.github.com/repos/kubernetes/klog/issues/51,Update embargo doc link in SECURITY_CONTACTS and change PST to PSC,See https://github.com/kubernetes/security/issues/8 for more information,closed,True,2019-03-08 18:06:54,2019-03-11 22:06:39
klog,adrianlzt,https://github.com/kubernetes/klog/pull/52,https://api.github.com/repos/kubernetes/klog/issues/52,Flag to skip headers in log files,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/release-notes.md
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
5. If this PR changes image versions, please title this PR ""Bump <image name> from x.x.x to y.y.y.""
-->

**What this PR does / why we need it**:
Short-lived procs reusing the same logfile in append mode (now default), ends with a file full of headers hidding the real useful info.

**Which issue(s) this PR fixes**:

**Special notes for your reviewer**:

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string ""action required"".
2. If no release note is required, just write ""NONE"".
-->
```release-note
New `skip_log_headers` flag to skip writting headers in log files.
```",closed,True,2019-04-03 17:39:11,2019-04-04 20:33:21
klog,adrianlzt,https://github.com/kubernetes/klog/issues/53,https://api.github.com/repos/kubernetes/klog/issues/53,Repeated trace in log file with error,"/kind bug

**What steps did you take and what happened:**
https://play.golang.com/p/6l8KNG_iOsM

Configuring klog to write to a file and logtostderr=false, the log file is openned and wrote three times with the same content.

Removing the flush, writes three times the headers, but no content.

**What did you expect to happen:**
Only one open and write.


**Anything else you would like to add:**
[Miscellaneous information that will assist in solving the issue.]
",open,False,2019-04-03 20:08:12,2019-04-05 18:17:48
klog,adrianlzt,https://github.com/kubernetes/klog/issues/54,https://api.github.com/repos/kubernetes/klog/issues/54,Confusing arguments,"/kind bug

**What steps did you take and what happened:**
It is kinda difficult to configure logging, as arguments don't work as expected.

Doc is outdated and still show glog:
https://godoc.org/k8s.io/klog
```
-logtostderr=false
```

But in [code](https://github.com/kubernetes/klog/blob/master/klog.go#L413) is defaulted to ``true``:
```
flagset.BoolVar(&logging.toStderr, ""logtostderr"", true, ""log to standard error instead of files"")
```

Examples of weird behaviours.

No initialization shows >=error:
```
klog.Info(""info"")
klog.Error(""error"")
```

But if klog is initializated, it shows info and error (because flag ``logtostderr`` is set to true):
```
klog.InitFlags(nil)
flag.Parse()
klog.Info(""info"")
klog.Error(""error"")
```
Also weird because default value for stderrthreshold is ERROR and the doc says:
```
Log events at or above this severity are logged to standard error as well as to files
```

Then I switch off logging to stderr:
```
klog.InitFlags(nil)
flag.Set(""logtostderr"", ""false"")
flag.Parse()
klog.Info(""info"")
klog.Error(""error"")
```
And now it keeps logging to stderr but just error level.

**What did you expect to happen:**
Updated doc and a understandable behaviour.",open,False,2019-04-04 09:42:14,2019-04-05 18:12:32
klog,yuwenma,https://github.com/kubernetes/klog/issues/55,https://api.github.com/repos/kubernetes/klog/issues/55,Enhance klog to split up the log files when it grows to 1.8GiB,"/kind feature
(mirrored from k/k [issue 76210](https://github.com/kubernetes/kubernetes/issues/76210)
**Describe the solution you'd like**
[A clear and concise description of what you want to happen.]
klog supports ""log-file"" flag to specify the log file path. However, this log file doesn't support chunks. That's to say, when the size of the log file reaches 1.8GiB, the older logs are truncated. See details in PR76190.

We want to keep all the log messages. If the log file goes too large, we expect to chunk the log file and compress the 1.8GB older logs in file kube-apiserver.log,gz..


**Anything else you would like to add:**
[Miscellaneous information that will assist in solving the issue.]
This issue needs to be fixed at least 1 month before v1.15. Since it blocks some v1.15 release features (like rebasing images from debian/alpine to distroless heavily depends on the klog feature).

",open,False,2019-04-05 18:09:45,2019-04-05 18:21:33
