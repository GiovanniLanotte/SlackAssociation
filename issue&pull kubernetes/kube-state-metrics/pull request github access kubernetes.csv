name repository,url,url html,created by,title,body,assignees,# commit,created at,updated at,closed at,is merged,merged at,merged by,mergeable state,mergeable,state
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/1,https://github.com/kubernetes/kube-state-metrics/pull/1,ghodss,kube-state-metrics initial code,,[],3,2016-05-06 21:39:36,2016-05-10 00:40:37,2016-05-10 00:40:37,True,2016-05-10 00:40:37,ghodss,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/2,https://github.com/kubernetes/kube-state-metrics/pull/2,ghodss,Update README,"Clarify the difference between Heapster and kube-state-metrics.
",[],1,2016-05-26 19:53:22,2016-05-26 20:42:46,2016-05-26 20:42:46,True,2016-05-26 20:42:46,ghodss,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/3,https://github.com/kubernetes/kube-state-metrics/pull/3,ghodss,Add Travis,,[],1,2016-05-26 20:14:39,2016-05-26 20:30:25,2016-05-26 20:30:54,True,2016-05-26 20:30:25,vishh,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/6,https://github.com/kubernetes/kube-state-metrics/pull/6,fabxc,Rework deployment metrics,"This change extracts the deployment metrics into their own
deployment collector. The metrics are collected synchronously with
each scrape rather than every 10 seconds as suggested in #5.

The `deployment` label replaces the `name` label to avoid name
collisions further up in the monitoring chain.

This includes a vendoring update to have access to the `Gather()` functionality. There's quite a bit of helper code for the comparison. I expect that we'll have similar testing facilities available upstream soon enough and can remove it.
This also switches towards using `ConstMetrics` as direct instrumentation is not intended for sample data retrieved from external sources.

From here we could easily break out other collectors and quickly add further metrics.

@kubernetes/sig-instrumentation @ghodss 
",[],2,2016-08-31 14:26:04,2016-09-01 22:58:23,2016-09-02 14:31:45,True,2016-09-01 22:58:22,ghodss,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/8,https://github.com/kubernetes/kube-state-metrics/pull/8,fabxc,Node metrics,"@ghodss @grobie 

This reworks node metrics in the same manner as deployment metrics.
The node states are broken out into one time series for each possible
conditional state. One constant metric holds textual meta information
about cluster nodes.

The 3 metrics/node state are a bit unusual. Discussed this with @brian-brazil. There are different solutions with their pros and cons. The one chosen here appears to be the most robust against future changes to the possible conditions and confusing results when trying to aggregate.

There are actually more fields in the API's node information block. But I think obscure ""system"", ""boot"", and ""machine"" IDs should be only added after a valid use case has been discovered.
",[],2,2016-09-02 14:49:52,2016-09-07 08:52:22,2016-09-07 08:52:26,True,2016-09-07 08:52:22,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/9,https://github.com/kubernetes/kube-state-metrics/pull/9,brancz,Container restart metric,"This reworks the container restart metric in the same manner as
deployment metrics. The format remains unchanged to the previous format
as in one metric per container via labels.

@fabxc @ghodss 
",[],2,2016-09-05 13:52:48,2016-09-07 08:20:31,2016-09-07 08:20:31,True,2016-09-07 08:20:31,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/10,https://github.com/kubernetes/kube-state-metrics/pull/10,brancz,update and extend metrics documentation,"We have done some renaming and additions to the metrics, so updating the docs and extending it with metrics type.

@fabxc @ghodss
",[],1,2016-09-07 09:15:23,2016-09-07 13:51:23,2016-09-07 13:58:17,True,2016-09-07 13:51:23,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/11,https://github.com/kubernetes/kube-state-metrics/pull/11,fabxc,Add more deployment metrics,"@brancz @kubernetes/sig-instrumentation 

This adds deployment status and spec metrics. Existing status metric names were changed to contain `_status` to resolve ambiguity and be generally easier to understand.
",[],1,2016-09-08 13:52:59,2016-09-09 08:58:09,2016-09-09 08:58:11,True,2016-09-09 08:58:09,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/12,https://github.com/kubernetes/kube-state-metrics/pull/12,fabxc,Add more node metrics,"@brancz 
",[],2,2016-09-09 08:30:04,2016-09-09 09:00:27,2016-09-09 09:00:29,True,2016-09-09 09:00:27,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/13,https://github.com/kubernetes/kube-state-metrics/pull/13,brancz,add more pod metrics,"@fabxc
",[],1,2016-09-12 14:35:00,2016-09-12 16:03:04,2016-09-12 16:43:28,True,2016-09-12 16:03:04,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/14,https://github.com/kubernetes/kube-state-metrics/pull/14,brancz,prefix metrics with `kube` and fix deployment docs,"@fabxc this should be the last thing missing before we can do a release 🎉 
",[],1,2016-09-12 16:49:31,2016-09-12 16:52:12,2016-09-12 16:52:14,True,2016-09-12 16:52:12,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/15,https://github.com/kubernetes/kube-state-metrics/pull/15,brancz,the `--dry-run` parameter was recently removed,"@fabxc 
",[],1,2016-09-13 07:43:13,2016-09-13 08:54:15,2016-09-13 08:56:48,True,2016-09-13 08:54:15,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/16,https://github.com/kubernetes/kube-state-metrics/pull/16,brancz,cleanup unused code,"these were artifacts from the previous approach where the metrics were collected periodically

@fabxc
",[],1,2016-09-13 09:20:37,2016-09-13 09:58:24,2016-09-13 09:58:40,True,2016-09-13 09:58:24,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/17,https://github.com/kubernetes/kube-state-metrics/pull/17,brancz,use k8s.io/client-go,"Closes #7 @ghodss @fabxc 
",[],2,2016-09-14 08:26:38,2016-09-14 15:38:48,2016-09-14 15:39:29,True,2016-09-14 15:38:47,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/18,https://github.com/kubernetes/kube-state-metrics/pull/18,brancz,add CHANGELOG.md,"@fabxc
",[],1,2016-09-14 15:58:17,2016-09-14 16:01:12,2016-09-14 16:01:20,True,2016-09-14 16:01:12,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/21,https://github.com/kubernetes/kube-state-metrics/pull/21,ahakanbaba,Remove non kube metrics,"In this change we are removing the uninteresting metrics from the output related to the running kube-state-metrics process. They were prefixed with go_\* 

We use a separate registry distinct from the defaultRegistry in the prometheus go client. 
Also use the recent promhttp implementation. 

Since the kube-state-metrics now depends on the prometheus/promhttp package, we also  committed a compatible version of the prometheus/promhttp into the vendor directory. 

Needless to say, all tests in this package still pass with this change. 

@brancz @fabxc 
",[],4,2016-09-19 03:36:58,2016-10-05 03:21:42,2016-10-05 09:16:56,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/22,https://github.com/kubernetes/kube-state-metrics/pull/22,wombat,Added docker image and kubernetes files,"I added a Dockerfile, Kubernetes deployment/service and build instructions
",[],6,2016-09-19 15:36:33,2016-09-20 09:11:53,2016-09-20 09:11:56,True,2016-09-20 09:11:53,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/23,https://github.com/kubernetes/kube-state-metrics/pull/23,gdvalle,Add kube_pod_status_scheduled metric,,[],1,2016-09-19 16:29:22,2016-09-19 16:39:06,2016-09-19 16:40:37,True,2016-09-19 16:39:06,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/24,https://github.com/kubernetes/kube-state-metrics/pull/24,gdvalle,Add test for kube_pod_status_scheduled,"Forgot to include the test in #23.
",[],1,2016-09-19 17:07:39,2016-09-20 09:10:47,2016-09-20 22:29:29,True,2016-09-20 09:10:46,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/25,https://github.com/kubernetes/kube-state-metrics/pull/25,fabxc,Add Makefile,"@brancz 
",[],2,2016-09-20 09:31:48,2016-09-20 10:12:20,2016-09-20 10:28:33,True,2016-09-20 10:12:20,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/26,https://github.com/kubernetes/kube-state-metrics/pull/26,wombat,Update container build instructions,"I removed the docker run command to build the binary and docker image and replaced it with the appropriate make command
",[],1,2016-09-20 10:43:26,2016-09-20 12:01:29,2016-09-20 12:01:30,True,2016-09-20 12:01:29,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/30,https://github.com/kubernetes/kube-state-metrics/pull/30,brancz,use kubernetes informer framework,"Fixes #29 .

@fabxc @ghodss 
",[],2,2016-09-27 12:21:43,2016-10-18 11:49:53,2016-10-18 12:06:52,True,2016-10-18 11:49:53,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/31,https://github.com/kubernetes/kube-state-metrics/pull/31,fabxc,Add official gcr.io image URL,"@brancz @w0mbat
",[],1,2016-10-04 10:13:12,2016-10-04 12:02:02,2016-10-04 12:02:04,True,2016-10-04 12:02:02,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/34,https://github.com/kubernetes/kube-state-metrics/pull/34,ahakanbaba,Addition of per node requested cpu and memory resources.,"This change relates to issue #33.
We added a new Collector that uses both the nodeList and podList.
For each node, the collector finds the relevant pods and sums their
requested resources.
This is very similar to the `kubectl describe node` implementation.

In this change automated tests are missing. I will follow up with
another commit for the tests.

I wanted to create this commit early to get responses and feedback as
soon as possible.
",[],1,2016-10-07 01:05:33,2016-10-08 05:50:34,2016-10-08 05:50:34,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/35,https://github.com/kubernetes/kube-state-metrics/pull/35,ahakanbaba,Added metrics describing the cpu and mem requests per container .,"These metrics are retrieved using the v1 api directly.
No additional acucmulation or computation is done.

The state is maintained per container in a pod in kubernetes.
This change exposes the state in kubernetes via  kube-state-metrics

The metrics are also tagged by the node,where  the containers are residing.
Our use case for these metrics are as follows:

We would like to accumulate these per node and understand how much
remaining un-requested resourced are available in each node.

This would give an indication of the ""utilization"" of the cluster to us.
",[],3,2016-10-08 05:47:26,2016-10-13 09:05:50,2016-10-17 07:57:23,True,2016-10-13 09:05:50,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/36,https://github.com/kubernetes/kube-state-metrics/pull/36,shamil,Add deployment metadata.generation metric,"This PR adds deployment `metadata.generation` metric
Fixes #32 
",[],1,2016-10-11 21:55:41,2016-10-12 10:37:30,2016-10-12 10:39:08,True,2016-10-12 10:37:30,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/37,https://github.com/kubernetes/kube-state-metrics/pull/37,rul,Add node unschedulable metric,,[],1,2016-10-12 03:56:34,2016-10-12 10:13:34,2016-10-12 10:13:45,True,2016-10-12 10:13:34,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/39,https://github.com/kubernetes/kube-state-metrics/pull/39,brancz,fix allocateable -> allocatable,"fixes #38 

@fabxc @ahakanbaba 
",[],1,2016-10-17 11:31:09,2016-10-18 11:49:09,2016-10-18 11:49:37,True,2016-10-18 11:49:09,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/40,https://github.com/kubernetes/kube-state-metrics/pull/40,brancz,normalize cpu cores unit,"As @fabxc pointed out in [this comment](https://github.com/kubernetes/kube-state-metrics/pull/35#discussion_r83591789) it is best practice to use base units.

@ahakanbaba
",[],1,2016-10-17 12:36:35,2016-10-17 13:02:19,2016-10-17 13:18:21,True,2016-10-17 13:02:18,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/41,https://github.com/kubernetes/kube-state-metrics/pull/41,fabxc,Fix resource fractions,"This fixes the generation of resource metrics to respect milli
precision.

@brancz I realized I introduced this mistake when reviewing your last PR.
",[],1,2016-10-17 13:06:15,2016-10-17 13:43:05,2016-10-17 13:43:07,True,2016-10-17 13:43:05,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/42,https://github.com/kubernetes/kube-state-metrics/pull/42,brancz,don't panic when requesting help,"fixes #28

@fabxc @grobie
",[],1,2016-10-17 13:24:14,2016-10-17 13:32:30,2016-10-17 13:44:29,True,2016-10-17 13:32:30,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/43,https://github.com/kubernetes/kube-state-metrics/pull/43,brancz,Cut v0.3.0,"@fabxc @ghodss 

Mostly brought to you by: @gdvalle @ahakanbaba @shamil @rul
",[],1,2016-10-18 12:04:43,2016-10-18 12:19:22,2016-10-18 12:19:24,True,2016-10-18 12:19:22,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/45,https://github.com/kubernetes/kube-state-metrics/pull/45,sebv,healthcheck metrics,"This does the following:
- adds event watcher (with pod events filtering)
- adds 2 healthcheck related metrics:
  - total number of healthcheck failures
  - seconds since last healthcheck failure

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/45)
<!-- Reviewable:end -->
",[],1,2016-10-21 09:11:19,2018-02-17 03:13:01,2018-02-17 03:13:01,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/49,https://github.com/kubernetes/kube-state-metrics/pull/49,dominikschulz,Export per container limits,Fixes #48,[],4,2016-11-17 08:46:54,2016-11-22 13:05:05,2016-11-22 13:05:05,True,2016-11-22 13:05:05,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/51,https://github.com/kubernetes/kube-state-metrics/pull/51,slaws,Add resource quotas metrics,"Hello,

This is a proposal to add ResourceQuota metrics.
I needed these metrics to monitor quota usage.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/51)
<!-- Reviewable:end -->
",[],6,2016-11-26 12:00:28,2016-12-15 21:13:28,2016-12-15 21:13:28,True,2016-12-15 21:13:28,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/52,https://github.com/kubernetes/kube-state-metrics/pull/52,Nalum,Pod Metric Labels,"I want to add the Node Name to the Pod metric labels as I think it make more sense to have that in there rather than or as well as the Node IP.

I also think given that the Node IP is used elsewhere it would be worth adding it to the NodeInfo metric. I'm willing to do this but haven't started on it yet as I'd like input as to which IP to use. I'll open an issue for discussion around that.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/52)
<!-- Reviewable:end -->
",[],3,2016-11-26 14:21:21,2016-12-12 21:00:14,2016-12-12 21:00:14,True,2016-12-12 21:00:14,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/54,https://github.com/kubernetes/kube-state-metrics/pull/54,dominikschulz,Add DaemonSet metrics,"This PR adds DaemonSet state metrics.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/54)
<!-- Reviewable:end -->
",[],3,2016-12-04 11:47:24,2016-12-12 20:55:45,2016-12-12 20:55:45,True,2016-12-12 20:55:45,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/55,https://github.com/kubernetes/kube-state-metrics/pull/55,dominikschulz,Add ReplicaSet metrics.,"This PR adds ReplicaSet metrics.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/55)
<!-- Reviewable:end -->
",[],2,2016-12-04 14:40:17,2017-02-07 18:11:06,2017-02-07 18:11:06,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/56,https://github.com/kubernetes/kube-state-metrics/pull/56,dominikschulz,Add ReplicationController metrics,"This PR adds ReplicationController metrics.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/56)
<!-- Reviewable:end -->
",[],1,2016-12-04 14:40:39,2017-03-07 11:09:50,2017-03-07 11:09:50,True,2017-03-07 11:09:50,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/59,https://github.com/kubernetes/kube-state-metrics/pull/59,brancz,Consistently name pod container resource metrics,"As discussed in https://github.com/kubernetes/kube-state-metrics/pull/49#discussion_r88411936 this PR aims to consistently name container resource metrics.

In terms of `resource` vs. `resources` I followed the example of where we have multiple `Containers` in a `Pod` and chose `resource`. Let me know if you think this is ok.

@matthiasr @dominikschulz @fabxc @alexsomesan

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/59)
<!-- Reviewable:end -->
",[],1,2016-12-12 23:35:46,2016-12-15 21:39:56,2016-12-15 21:39:58,True,2016-12-15 21:39:56,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/60,https://github.com/kubernetes/kube-state-metrics/pull/60,brancz,rename resource_quota to resourcequota,"The convention of using an object kind in the metric name is to use the
same that would be used when using `kubectl`. So in this case `kubectl
get resourcequota`.

As discussed in the metric convention document.

@fabxc @matthiasr

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/60)
<!-- Reviewable:end -->
",[],1,2016-12-20 14:11:54,2016-12-20 23:20:38,2016-12-21 09:12:55,True,2016-12-20 23:20:38,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/62,https://github.com/kubernetes/kube-state-metrics/pull/62,frodenas,Fix loading kubeconfig file,"Fixes #61

* Don't set a default --kubeconfig flag value so NewDefaultClientConfigLoadingRules
will pick up the default locations

* Set an ExplicitPath using --kubeconfig flag value

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/62)
<!-- Reviewable:end -->
",[],1,2016-12-20 21:37:14,2016-12-20 23:13:20,2016-12-20 23:19:40,True,2016-12-20 23:13:20,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/65,https://github.com/kubernetes/kube-state-metrics/pull/65,olivierboucher,Added node name to container status queries and adapted tests,"Hi, this is simply a useful addition to the container status gauge metrics. 

Background: I'm using Google Cloud's Stackdriver Monitoring and the entries require a bit more context.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/65)
<!-- Reviewable:end -->
",[],1,2016-12-30 20:39:15,2017-03-08 10:29:45,2017-03-08 10:29:45,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/66,https://github.com/kubernetes/kube-state-metrics/pull/66,dhawal55,Add flag to override resync period,"The hard-coded cache period of 5 mins is too long for us as we want to setup alerts using kube-state-metrics. Adding flag to override the cache/resync period.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/66)
<!-- Reviewable:end -->
",[],1,2017-01-06 19:28:17,2017-01-09 17:37:21,2017-01-10 18:22:50,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/68,https://github.com/kubernetes/kube-state-metrics/pull/68,koudaiii,"If --in-cluster is false, kubeconfig needs to be valid.","## WHY


```bash
$ docker run -p :8080 gcr.io/google_containers/kube-state-metrics:v0.3.0 --in-cluster=false
F0111 08:01:30.648367       1 main.go:78] --apiserver not set and --in-cluster is false; apiserver must be set to a valid URL
goroutine 1 [running]:
k8s.io/kube-state-metrics/vendor/github.com/golang/glog.stacks(0x1cc5700, 0xc400000000, 0x7e, 0xd3)
	src/k8s.io/kube-state-metrics/vendor/github.com/golang/glog/glog.go:766 +0xa5
k8s.io/kube-state-metrics/vendor/github.com/golang/glog.(*loggingT).output(0x1ca5220, 0xc400000003, 0xc42006acc0, 0x1c402df, 0x7, 0x4e, 0x0)
	src/k8s.io/kube-state-metrics/vendor/github.com/golang/glog/glog.go:717 +0x337
k8s.io/kube-state-metrics/vendor/github.com/golang/glog.(*loggingT).printf(0x1ca5220, 0xc400000003, 0x14a177f, 0x53, 0x0, 0x0, 0x0)
	src/k8s.io/kube-state-metrics/vendor/github.com/golang/glog/glog.go:655 +0x14c
k8s.io/kube-state-metrics/vendor/github.com/golang/glog.Fatalf(0x14a177f, 0x53, 0x0, 0x0, 0x0)
	src/k8s.io/kube-state-metrics/vendor/github.com/golang/glog/glog.go:1145 +0x67
main.main()
```

- Add `--apiserver` flag

```bash
$ docker run -p :8080 gcr.io/google_containers/kube-state-metrics:v0.3.0 --in-cluster=false --apiserver=https://xxx.xxx.xxx.xxx
F0111 07:28:31.482691       1 main.go:86] Failed to create client: invalid configuration: no configuration has been provided
goroutine 1 [running]:
k8s.io/kube-state-metrics/vendor/github.com/golang/glog.stacks(0x1cc5700, 0xc400000000, 0x7d, 0xbe)
	src/k8s.io/kube-state-metrics/vendor/github.com/golang/glog/glog.go:766 +0xa5
k8s.io/kube-state-metrics/vendor/github.com/golang/glog.(*loggingT).output(0x1ca5220, 0xc400000003, 0xc42006acc0, 0x1c402df, 0x7, 0x56, 0x0)
	src/k8s.io/kube-state-metrics/vendor/github.com/golang/glog/glog.go:717 +0x337
k8s.io/kube-state-metrics/vendor/github.com/golang/glog.(*loggingT).printf(0x1ca5220, 0x3, 0x1475343, 0x1b, 0xc420689ed8, 0x1, 0x1)
	src/k8s.io/kube-state-metrics/vendor/github.com/golang/glog/glog.go:655 +0x14c
k8s.io/kube-state-metrics/vendor/github.com/golang/glog.Fatalf(0x1475343, 0x1b, 0xc420689ed8, 0x1, 0x1)
	src/k8s.io/kube-state-metrics/vendor/github.com/golang/glog/glog.go:1145 +0x67
main.main()
	src/k8s.io/kube-state-metrics/main.go:86 +0x20b
```

ref. https://github.com/kubernetes/kube-state-metrics/issues/46#issuecomment-271647623

> I can confirm that --apiserver=http://... works, without setting --in-cluster=false.


- It can be done by setting arbitrary `--apiserver` and kubeconfig correctly

```bash
$ docker run -v /.kube/config:/.kube/config -p :8080 gcr.io/google_containers/kube-state-metrics:v0.3.0 --in-cluster=false --apiserver=https://xxx.xxx.xxx.xxx
```

or

```bash
$ docker run -v /.kube/config:/.kube/config -p :8080 gcr.io/google_containers/kube-state-metrics:v0.3.0 --in-cluster=false --apiserver=hoo
```

I think If `--in-cluster` is` false`,  `--apiserver` flag not be used. Instead kubeconfig needs to be valid.

## WHAT

if `in-cluster` is `false`,
  - check kubeconfig is valid.
  - delete `--apiserver` check

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/68)
<!-- Reviewable:end -->
",[],1,2017-01-11 08:47:22,2017-01-11 09:26:38,2017-01-11 09:27:16,True,2017-01-11 09:26:38,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/69,https://github.com/kubernetes/kube-state-metrics/pull/69,fate-grand-order,"fix misspell ""with"" in deployment_test.go","

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/69)
<!-- Reviewable:end -->
",[],1,2017-01-17 07:23:05,2017-01-17 07:25:48,2017-01-17 07:25:48,True,2017-01-17 07:25:48,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/71,https://github.com/kubernetes/kube-state-metrics/pull/71,bluecamel,Add HorizontaPodAutoscaler metrics.,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/71)
<!-- Reviewable:end -->
",[],1,2017-01-22 07:09:09,2017-12-03 02:05:54,2017-12-03 02:05:54,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/75,https://github.com/kubernetes/kube-state-metrics/pull/75,vdavidoff,client-go update and new Deployment metric,"* Update to the newest tagged client-go release, v2.0.0-alpha.1
* Expose Deployment RollingUpdate Strategy MaxUnavailable

@brancz showed interest in pulling in a new client-go version as mentioned in [issue 74](https://github.com/kubernetes/kube-state-metrics/issues/74). I chose the newest tag there, even though it's alpha, because the newest non-alpha tag (v1.5.0) is effectively a NOOP between the client-go ref committed to master, and is earlier than the major changes that restructure the directory hierarchy in client-go (the 1.4 and 1.5 subdirectories went away, and 1.5 effectively moved up a level). In other words, it made no sense to update to v1.5.0, and I preferred to pull in something that was at least tagged instead of master.

The new metric exposed is also discussed in [issue 74](https://github.com/kubernetes/kube-state-metrics/issues/74).

I think I got this right but if there are any questions, comments, or criticisms, I'm all ears.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/75)
<!-- Reviewable:end -->
",[],2,2017-01-27 05:05:18,2017-01-27 08:27:21,2017-01-27 08:27:21,True,2017-01-27 08:27:21,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/76,https://github.com/kubernetes/kube-state-metrics/pull/76,vdavidoff,Add kube_deployment_spec_strategy_rollingupdate_max_unavailable,"This documentation update got missed in [PR 75](https://github.com/kubernetes/kube-state-metrics/pull/75).

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/76)
<!-- Reviewable:end -->
",[],1,2017-01-27 16:04:28,2017-01-27 17:38:10,2017-01-27 17:38:10,True,2017-01-27 17:38:10,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/77,https://github.com/kubernetes/kube-state-metrics/pull/77,brancz,allow choosing which collectors to run,"Extract collector registration into each collector file and improve flag handling and configure glog.

This is backward compatible, but will allow us to potentially disable new collectors by default.

@alexsomesan @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/77)
<!-- Reviewable:end -->
",[],1,2017-02-02 10:39:45,2017-02-02 13:29:42,2017-02-02 13:29:45,True,2017-02-02 13:29:42,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/78,https://github.com/kubernetes/kube-state-metrics/pull/78,brancz,add replicaset metrics,"Continuation of #55 rebased and adapted to new registration mechanism.

Thanks @dominikschulz for the head start!

@alexsomesan @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/78)
<!-- Reviewable:end -->
",[],1,2017-02-02 13:34:31,2017-02-03 09:39:46,2017-02-03 09:39:48,True,2017-02-03 09:39:46,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/80,https://github.com/kubernetes/kube-state-metrics/pull/80,brancz,CHANGELOG: add changelog entry for v0.4.0 release,"@alexsomesan @fabxc 

/cc @therc 

Closes #73

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/80)
<!-- Reviewable:end -->
",[],1,2017-02-07 18:52:07,2017-02-10 02:19:25,2017-02-10 02:19:28,True,2017-02-10 02:19:25,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/81,https://github.com/kubernetes/kube-state-metrics/pull/81,andyxning,fix make test units with cgo,"`go test -race` can not be run with cgo disabled. This will result `make test-unit` failed.

FYI:
* https://blog.golang.org/race-detector
* https://github.com/golang/go/issues/14481

/cc @brancz @vdavidoff

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/81)
<!-- Reviewable:end -->
",[],1,2017-02-08 13:07:27,2017-02-14 18:05:03,2017-02-15 03:11:33,True,2017-02-14 18:05:03,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/82,https://github.com/kubernetes/kube-state-metrics/pull/82,andyxning,update travis ci conf,"This PR depends on #81 which should be merged first.

* Update travis ci configuration using Makefile
* adding test for golang 1.7 :)

/cc @brancz @vdavidoff

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/82)
<!-- Reviewable:end -->
",[],1,2017-02-08 13:12:01,2017-02-15 04:09:42,2017-02-15 04:19:34,True,2017-02-15 04:09:42,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/86,https://github.com/kubernetes/kube-state-metrics/pull/86,brancz,deployment: skip max unavailable if rolling update is unset,"This previously caused panics when objects did not have the
RollingUpdate struct set.

I also validated, that the tests would now also panic, without the fix.

Closes #84. I'll create a patch release with this once the fix is merged.

@alexsomesan @fabxc 

/cc @rvrignaud @stvnwrgs

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/86)
<!-- Reviewable:end -->
",[],1,2017-02-10 20:36:51,2017-02-10 21:18:59,2017-02-10 23:22:51,True,2017-02-10 21:18:59,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/87,https://github.com/kubernetes/kube-state-metrics/pull/87,brancz,cut v0.4.1,"@fabxc @alexsomesan @mattriasr 

/cc @rvrignaud @stvnwrgs

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/87)
<!-- Reviewable:end -->
",[],1,2017-02-10 23:25:58,2017-02-10 23:34:14,2017-02-10 23:34:16,True,2017-02-10 23:34:14,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/88,https://github.com/kubernetes/kube-state-metrics/pull/88,andyxning,bump deployment kube-state-metrics version to v0.4.1,"Bump deployment.yml kube-state-metrics version to v0.4.1.

/cc @brancz @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/88)
<!-- Reviewable:end -->
",[],1,2017-02-12 08:42:25,2017-02-15 15:26:57,2017-02-16 00:03:58,True,2017-02-15 15:26:57,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/90,https://github.com/kubernetes/kube-state-metrics/pull/90,brancz,Makefile: retrieve tag through git,"Before this we had to remember to bump the version in the Makefile (which we forgot in the last two releases), now it will automatically be retrieved through git.

Closes #89 

@fabxc 

/cc @andyxning @andrewhowdencom

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/90)
<!-- Reviewable:end -->
",[],1,2017-02-15 05:02:43,2017-02-15 05:03:57,2017-02-15 05:12:03,True,2017-02-15 05:03:57,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/91,https://github.com/kubernetes/kube-state-metrics/pull/91,brancz,README: Add container image,"Closes #83 

@fabxc 

/cc @andrewhowdencom

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/91)
<!-- Reviewable:end -->
",[],1,2017-02-15 17:49:20,2017-02-15 20:27:34,2017-02-15 20:27:40,True,2017-02-15 20:27:34,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/92,https://github.com/kubernetes/kube-state-metrics/pull/92,qrpike,health check and resource limits?,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/92)
<!-- Reviewable:end -->
",[],1,2017-02-22 09:27:18,2017-08-23 14:29:33,2017-08-23 14:30:00,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/93,https://github.com/kubernetes/kube-state-metrics/pull/93,brancz,Add example RBAC ClusterRole,"@fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/93)
<!-- Reviewable:end -->
",[],2,2017-02-27 09:12:25,2017-02-27 13:12:33,2017-03-24 11:58:36,True,2017-02-27 13:12:33,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/94,https://github.com/kubernetes/kube-state-metrics/pull/94,padolan,fix service label to match deployment pod label,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/94)
<!-- Reviewable:end -->
",[],1,2017-02-28 06:17:48,2017-03-07 11:12:14,2017-03-07 11:12:14,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/95,https://github.com/kubernetes/kube-state-metrics/pull/95,rcoh,Fix default port in README,"The default port is actually 8080.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/95)
<!-- Reviewable:end -->
",[],1,2017-03-02 00:27:38,2017-03-02 07:24:22,2017-03-02 07:24:22,True,2017-03-02 07:24:22,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/96,https://github.com/kubernetes/kube-state-metrics/pull/96,dblackdblack,Fix the deployment definition for v0.4.1,"The deployment .yaml for v0.4.1 called out the docker image with tag 0.3.0. You'll probably have to bump version to 0.4.2 in order to fix.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/96)
<!-- Reviewable:end -->
",[],1,2017-03-03 19:10:17,2017-03-23 12:47:18,2017-03-23 12:47:18,False,,,blocked,True,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/98,https://github.com/kubernetes/kube-state-metrics/pull/98,gigawhat,fix deployment template pod label to match service selector label,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/98)
<!-- Reviewable:end -->
",[],1,2017-03-06 23:35:07,2017-03-07 08:28:54,2017-03-07 08:28:54,True,2017-03-07 08:28:54,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/100,https://github.com/kubernetes/kube-state-metrics/pull/100,gyliu513,Clarified that prometheus can use heapster as scrape target.,"Fix #99

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/100)
<!-- Reviewable:end -->
",[],1,2017-03-07 13:04:35,2017-03-08 10:28:00,2017-03-08 10:28:41,True,2017-03-08 10:28:00,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/102,https://github.com/kubernetes/kube-state-metrics/pull/102,sophaskins,correct README.md to match metrics defined in replicaset.go,"Fixes https://github.com/kubernetes/kube-state-metrics/issues/97 by bringing README.md in sync with the metrics defined in `replicaset.go`

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/102)
<!-- Reviewable:end -->
",[],1,2017-03-07 15:34:36,2017-03-07 16:52:47,2017-03-07 16:52:47,True,2017-03-07 16:52:46,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/104,https://github.com/kubernetes/kube-state-metrics/pull/104,brancz,replicationcontrollers are part of core not extentions,"Fixes #101 .

@fabxc 

/cc @tmegow

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/104)
<!-- Reviewable:end -->
",[],1,2017-03-09 13:48:09,2017-03-16 08:42:12,2017-03-16 08:42:17,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/105,https://github.com/kubernetes/kube-state-metrics/pull/105,zouyee,kube_pod_info add controller info ,"It's necessary for kube_pod_info to keep controller info
/cc @fabxc 
<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/105)
<!-- Reviewable:end -->
",[],17,2017-03-14 06:12:07,2017-03-27 07:41:12,2017-03-27 07:41:12,True,2017-03-27 07:41:12,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/106,https://github.com/kubernetes/kube-state-metrics/pull/106,andyxning,fix rc api namespace,"`replicationcontrollers` resources is under `api/v1` namespace instead of `apis/extensions/v1beta1`. Thus we need to use `CoreV1()`. :)


/ping @dominikschulz @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/106)
<!-- Reviewable:end -->
",[],1,2017-03-16 06:26:55,2017-03-16 07:56:59,2017-03-16 08:41:48,True,2017-03-16 07:56:59,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/107,https://github.com/kubernetes/kube-state-metrics/pull/107,zouyee,add limit range,"add limit range metrics
@brancz 
cc/ @fabxc 
<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/107)
<!-- Reviewable:end -->
",[],24,2017-03-20 15:27:59,2017-03-28 01:06:00,2017-03-28 01:06:00,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/110,https://github.com/kubernetes/kube-state-metrics/pull/110,brancz,kubernetes: add complete set of manifests,"With kubernetes 1.6 RBAC is enabled by default, so we should make sure that the manifests provided here follow the best practice. Therefore I added a full set of manifests from ServiceAccount, over Roles and Deployment so a user can really just do: `kubectl apply -f kubernetes/` to deploy on 1.6.

This uses the v1alpha1 objects of the RBAC API, which is still present in 1.6 but it likely subject for removal in following releases. But for now they still work, so once there is a stable release of 1.6 we can change these to the v1beta1 objects. For the time being these objects are compatible with 1.5 clusters as well.

@piosz @fabxc @mxinden

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/110)
<!-- Reviewable:end -->
",[],1,2017-03-24 10:06:32,2017-04-05 09:05:16,2017-04-05 09:05:18,True,2017-04-05 09:05:16,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/114,https://github.com/kubernetes/kube-state-metrics/pull/114,zouyee,add limit range,"add limit range metrics and readme,thanks
@brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/114)
<!-- Reviewable:end -->
",[],1,2017-03-28 05:02:58,2017-03-28 05:25:26,2017-04-05 08:38:40,True,2017-03-28 05:25:26,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/115,https://github.com/kubernetes/kube-state-metrics/pull/115,zouyee,delete back-slant  ,"my mistake!by the way ,do we have a plan to add others metrics(ingress、statefulset、pvc、pv、namespace.etc)?

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/115)
<!-- Reviewable:end -->
",[],1,2017-03-28 14:43:13,2017-03-28 18:53:11,2017-03-29 12:21:00,True,2017-03-28 18:53:11,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/117,https://github.com/kubernetes/kube-state-metrics/pull/117,zouyee,fix start_time in kube_pod_info,"@brancz hi,I found start_time label of kube_pod_info in readme that is not be implemented.
<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/117)
<!-- Reviewable:end -->
",[],0,2017-03-29 16:27:13,2017-05-12 06:57:22,2017-05-12 06:57:23,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/118,https://github.com/kubernetes/kube-state-metrics/pull/118,andyxning,correct_typos,"Correct some typos about limit ranges. 

@brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/118)
<!-- Reviewable:end -->
",[],1,2017-04-05 08:57:02,2017-04-05 09:06:51,2017-04-05 09:31:35,True,2017-04-05 09:06:51,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/119,https://github.com/kubernetes/kube-state-metrics/pull/119,hkaj,[doc] fix metric names,"Resource and limit metric names are wrong in the README, I ran a sanity check against the code and found a few others.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/119)
<!-- Reviewable:end -->
",[],1,2017-04-05 18:39:33,2017-04-06 07:58:57,2017-04-06 07:58:57,True,2017-04-06 07:58:57,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/121,https://github.com/kubernetes/kube-state-metrics/pull/121,auhlig,"add NodeMemoryPressure, NodeDiskPressure, NodeNetworkUnavailable","Adding node condition KernelDeadlock as introduced by the [Node Problem Detector](https://github.com/kubernetes/node-problem-detector/blob/master/config/kernel-monitor.json)  and fix [TODO](https://github.com/kubernetes/kube-state-metrics/blob/master/node.go#L174) by adding NodeMemoryPressure,  NodeDiskPressure, NodeNetworkUnavailable.
Comes with tests. Also updated readme. 

**Tests are expected to fail** for now since https://github.com/kubernetes/kubernetes/pull/44099 is still pending. Tested successfully by modifying the respective types.go in the vendor folder.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/121)
<!-- Reviewable:end -->
",['andyxning'],4,2017-04-12 12:49:42,2017-04-26 12:11:00,2017-04-26 12:34:20,True,2017-04-26 12:11:00,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/126,https://github.com/kubernetes/kube-state-metrics/pull/126,nvartolomei,Expose daemonset status number ready gauge,"Closes #125 

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/126)
<!-- Reviewable:end -->
",[],1,2017-04-22 16:42:01,2017-04-24 09:39:39,2017-04-24 10:05:49,True,2017-04-24 09:39:39,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/130,https://github.com/kubernetes/kube-state-metrics/pull/130,brancz,Add Pod/Node Labels metric,"Closes #108

@fabxc @mxinden

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/130)
<!-- Reviewable:end -->
",[],3,2017-04-28 14:00:40,2017-04-28 14:57:25,2017-05-09 08:14:55,True,2017-04-28 14:57:24,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/131,https://github.com/kubernetes/kube-state-metrics/pull/131,vdavidoff,Expose Job and CronJob metrics,"This is meant to address https://github.com/kubernetes/kube-state-metrics/issues/72

These changes aren't as baked as I'd normally want them to be before submitting a PR, but I was encouraged to go ahead and submit by @brancz, so here you go. I can confirm that I am able to build and run this code, apparently without any issues.

I am not a golang programmer and admittedly sort of reverse engineered what I have done here. I based both of these new modules (perhaps the wrong term) on deployment.go. Aside from the missing test files, the things I know might need to change are:
* For metics that are statuses like ""failed"", or ""succeeded"", I am just exposing one metric with the value of 0 or 1 (~boolean) rather than exposing each condition twice with a ""condition"" field of ""true"" or ""false"" and a value that indicates if the condition is true. I saw the use of a ""condition"" field in some other metrics, but it just seems unnecessary. I realize there may be a good reason why I should have used a condition field instead.
* I am not exporting ""info"" metrics (e.g. kube_pod_info) because I don't think they're necessary, but I'm not opposed to adding those if I should.
* I used metric type Counter for values that are seconds since the epoch, because that seemed to make more sense to me than gauge, since the value will only ever increase.
* When cycling through Job conditions, the code assumes that it will only ever see a Failed or Complete condition, and if it does, it can safely make assumptions (i.e. if the first condition is Failed, it can assume the succeeded metric should be 0 and failed should be 1). I think this is safe, but I may not understand why it's not.
* I'm using the extractCreatedBy function that's defined in pod.go in my job.go. This feels kind of weird to me since one file's code is reaching into another's without any explicit pointer to the other file, but maybe I am just not used to golang.
* Following existing examples, the name of the Job would be exposed in the ""job"" field, but Prometheus exports its own ""job"" field related to the job that scraped the metrics, which would result in our Job field being named ""exported_job"". To avoid this I named our field ""job_name"".

Please let me know what you'd like to see change here, and I'll happily make those changes.

Thanks.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/131)
<!-- Reviewable:end -->
",[],5,2017-05-02 12:58:48,2017-06-12 13:02:04,2017-06-12 14:08:06,True,2017-06-12 13:02:04,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/132,https://github.com/kubernetes/kube-state-metrics/pull/132,brancz,*: cut v0.5.0,"It's been almost 3 months since the last release and we have a bunch of new features that were added since the last release, so we should do another release.

@fabxc @mxinden @andyxning 

/cc @piosz (to push the new image once tagged)

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/132)
<!-- Reviewable:end -->
",['andyxning'],1,2017-05-03 12:43:25,2017-05-03 15:35:56,2017-05-03 15:35:58,True,2017-05-03 15:35:55,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/133,https://github.com/kubernetes/kube-state-metrics/pull/133,brancz,fix service and limitrange rbac roles and fix order and naming,"I noticed an inconsistency of the name of the LimitRange collector. In contrast to all the other collectors the LimitRange collector was singular. In addition I ordered the collectors in lexicographical order for ease to sync the list of available and default collectors.

In addition to that the default provided RBAC roles did not contain the recently added Services as well as LimitRange resources.

@fabxc @mxinden @andyxning 

This should be merged before #132 so we don't introduce a collector breaking change as the LimitRange collector has not been released yet.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/133)
<!-- Reviewable:end -->
",['andyxning'],1,2017-05-03 12:56:39,2017-05-03 13:50:32,2017-05-03 14:31:54,True,2017-05-03 13:50:32,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/134,https://github.com/kubernetes/kube-state-metrics/pull/134,brancz,update image tags,"We'll primarily distribute the kube-state-metrics container image via quay from now on as none of the kube-state-metrics maintainers have the ability to update the image on gcr (but we do for quay) and therefore it creates an unnecessary hassle when releasing.

@fabxc @mxinden @andyxning

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/134)
<!-- Reviewable:end -->
",[],1,2017-05-03 15:55:12,2017-05-04 08:06:24,2017-05-05 15:51:14,True,2017-05-04 08:06:24,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/136,https://github.com/kubernetes/kube-state-metrics/pull/136,brancz,Restructure collectors and documentation,"Closes #109

@fabxc @andyxning @mxinden

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/136)
<!-- Reviewable:end -->
",[],3,2017-05-05 14:11:01,2017-05-08 12:41:21,2017-05-08 13:52:04,True,2017-05-08 12:41:21,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/140,https://github.com/kubernetes/kube-state-metrics/pull/140,andyxning,enhance doc,"Enhance doc.
* add pod label and node label metrics
* add service metrics

/cc @brancz @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/140)
<!-- Reviewable:end -->
",[],1,2017-05-09 09:16:10,2017-05-09 09:27:48,2017-05-09 10:25:24,True,2017-05-09 09:27:48,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/141,https://github.com/kubernetes/kube-state-metrics/pull/141,zouyee,correct client version,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/141)
<!-- Reviewable:end -->
",[],1,2017-05-12 07:03:08,2017-05-12 11:11:26,2017-05-12 11:11:26,True,2017-05-12 11:11:26,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/142,https://github.com/kubernetes/kube-state-metrics/pull/142,zouyee,add OwnerReference in kube_pod_info,"fix [#139](https://github.com/kubernetes/kube-state-metrics/issues/139)

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/142)
<!-- Reviewable:end -->
",['andyxning'],1,2017-05-13 02:20:00,2017-05-16 07:33:03,2017-05-16 07:33:03,True,2017-05-16 07:33:03,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/145,https://github.com/kubernetes/kube-state-metrics/pull/145,robsonpeixoto,Fix rbac version to work on GKE,"Fix #143

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/145)
<!-- Reviewable:end -->
",[],4,2017-05-16 10:41:20,2017-06-12 12:56:32,2017-06-13 03:51:30,True,2017-06-12 12:56:32,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/146,https://github.com/kubernetes/kube-state-metrics/pull/146,andyxning,add node summary grafana,"This PR fix #123 .

Currently, i suggest we contains cluster and single dashboards. 
* cluster: Aggregated dashboards for a cluster.
* single: single dashboards for a single resource(e.g. `node` or `pod`).

@brancz @andrewhowdencom @cemo

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/146)
<!-- Reviewable:end -->
",[],1,2017-05-16 14:37:22,2017-09-14 04:26:53,2017-09-14 04:27:03,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/148,https://github.com/kubernetes/kube-state-metrics/pull/148,zouyee,update README.md,"update README.md (add service metrics)
@brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/148)
<!-- Reviewable:end -->
",[],1,2017-06-13 06:05:31,2017-06-13 06:33:57,2017-06-13 06:33:57,True,2017-06-13 06:33:57,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/149,https://github.com/kubernetes/kube-state-metrics/pull/149,zouyee,add namespace metric,"add namespace metric

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/149)
<!-- Reviewable:end -->
",[],3,2017-06-13 14:30:47,2017-07-04 03:02:47,2017-07-17 09:49:59,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/150,https://github.com/kubernetes/kube-state-metrics/pull/150,stijndehaes,Added stateful set metric,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/150)
<!-- Reviewable:end -->
",[],2,2017-06-18 18:27:41,2017-06-18 18:43:56,2017-06-18 18:43:56,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/151,https://github.com/kubernetes/kube-state-metrics/pull/151,stijndehaes,Added StatefulSet metrics,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/151)
<!-- Reviewable:end -->
",[],2,2017-06-18 18:48:13,2017-06-23 07:32:48,2017-06-23 13:08:23,True,2017-06-23 07:32:48,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/153,https://github.com/kubernetes/kube-state-metrics/pull/153,nlamirault,Multi arch binaries,"Signed-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/153)
<!-- Reviewable:end -->
",[],1,2017-06-23 13:48:36,2017-09-09 00:40:31,2017-09-09 00:40:31,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/154,https://github.com/kubernetes/kube-state-metrics/pull/154,brancz,collectors/pod: flatten created by label and extract owners,"The created by label previously was in the format ""<kind>/<name>"", this
is now normalized in to a respective label for each.

Additionally it is possible that a Pod has multiple OwnerReferences.
Previously multiple `kube_pod_info` metrics were generated for each
OwnerReference, unnecessarily duplicating all other labels of the
`kube_pod_info` metric.

The owner part has not been released yet, so it's non breaking,
however, the `created_by` label is breaking. This will be noted in
the changelog.

@fabxc @andyxning @mxinden @gouthamve

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/154)
<!-- Reviewable:end -->
",[],1,2017-06-27 14:43:04,2017-07-28 13:43:51,2017-07-28 13:43:54,True,2017-07-28 13:43:51,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/155,https://github.com/kubernetes/kube-state-metrics/pull/155,julia-stripe,Add metric for cronjob scheduling delay,"We're scheduling cronjobs! When they fail to get scheduled onto a node (for instance because the cluster is overloaded), we want to know how far behind they are.

This adds a delay metric for every job that

* isn't suspended
* has a `lastScheduleTime`

& uses the same cronjob library that kube-cron uses to calculate cron job schedule times.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/155)
<!-- Reviewable:end -->
",[],6,2017-06-29 17:12:28,2017-07-07 11:11:26,2017-07-11 12:14:58,True,2017-07-07 11:11:26,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/156,https://github.com/kubernetes/kube-state-metrics/pull/156,ethernetdan,Add provider ID to Node collector,"This PR adds the provider ID of a Node to the labels which the Node collector makes available for scraping. This is useful for joining kube-state-metrics data with cloud provider data.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/156)
<!-- Reviewable:end -->
",[],1,2017-06-29 19:44:14,2017-06-30 09:26:44,2017-06-30 09:26:44,True,2017-06-30 09:26:44,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/157,https://github.com/kubernetes/kube-state-metrics/pull/157,beorn7,Fix a convoluted sentence and a broken link in README.md,"@brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/157)
<!-- Reviewable:end -->
",[],1,2017-07-03 11:22:17,2017-07-03 11:23:44,2017-07-03 11:23:44,True,2017-07-03 11:23:44,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/158,https://github.com/kubernetes/kube-state-metrics/pull/158,zouyee,split deploy configuration,"mkdir deployWithRBAC and deployWithoutRBAC

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/158)
<!-- Reviewable:end -->
",[],1,2017-07-03 15:28:59,2017-07-31 12:40:55,2017-07-31 12:40:55,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/159,https://github.com/kubernetes/kube-state-metrics/pull/159,zouyee,add namespace metric,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/159)
<!-- Reviewable:end -->
",[],3,2017-07-04 03:02:18,2017-07-04 03:07:43,2017-07-05 03:31:06,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/160,https://github.com/kubernetes/kube-state-metrics/pull/160,zouyee,fix namespace test failure,"@brancz Sorry for having replied to you so late, but things have really been hectic around here.
<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/160)
<!-- Reviewable:end -->
",[],1,2017-07-04 03:08:04,2017-09-12 05:39:05,2017-09-12 05:39:42,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/170,https://github.com/kubernetes/kube-state-metrics/pull/170,fabxc,*: cut 0.6.0,"@alamaison

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/170)
<!-- Reviewable:end -->
",[],1,2017-07-11 12:19:25,2017-08-02 09:55:23,2017-08-02 09:55:27,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/171,https://github.com/kubernetes/kube-state-metrics/pull/171,julia-stripe,Add kube_cronjob_next_schedule_time metric to documentation,"The new `kube_cronjob_next_schedule_time` metric was missing from the documentation, this adds it.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/171)
<!-- Reviewable:end -->
",[],1,2017-07-11 14:45:37,2017-07-17 13:44:01,2017-07-17 13:44:02,True,2017-07-17 13:44:01,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/172,https://github.com/kubernetes/kube-state-metrics/pull/172,julia-stripe,Change kube_cronjob_status_last_schedule_time from a counter to a gauge,"If I understand correctly `kube_cronjob_status_last_schedule_time` should actually be a gauge (we shouldn't be adding unix timestamps together)

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/172)
<!-- Reviewable:end -->
",[],1,2017-07-11 14:56:14,2017-07-11 15:05:18,2017-07-11 15:08:20,True,2017-07-11 15:05:18,fabxc,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/175,https://github.com/kubernetes/kube-state-metrics/pull/175,alamaison,Collect labels for deployments and statefulsets.,"It builds but is untested because `go test` just says `?   	k8s.io/kube-state-metrics	[no test files]`.

I'm not a go programmer, so if this is not the correct way to run tests please let me know. 

I'm not sure I understand the significance of the default labels.  Copying how the service collector defines them, I've added `namespace` and the type of object being labelled.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/175)
<!-- Reviewable:end -->
",[],3,2017-07-24 14:03:17,2017-07-25 09:27:34,2017-07-25 09:27:35,True,2017-07-25 09:27:34,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/176,https://github.com/kubernetes/kube-state-metrics/pull/176,andyxning,fix statefulset observedgeneration is nil,"Fix #174

I am not so familiar with statefulset. However, according to the [comment](https://github.com/kubernetes/kube-state-metrics/blob/master/vendor/k8s.io/client-go/pkg/apis/apps/v1beta1/types.go#L87-L95) about `ObservedGeneration` and  [the function in Kubernetes](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/statefulset/stateful_set_utils.go#L351-L362). `ObservedGeneration` is optional and may be `nil`.  Deference a `nil` will panic the app.

We should filter out `ObservedGeneration` when it is `nil`.

/cc @shiranp @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/176)
<!-- Reviewable:end -->
",[],1,2017-07-26 15:38:08,2017-07-26 15:54:55,2017-07-27 00:32:08,True,2017-07-26 15:54:54,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/177,https://github.com/kubernetes/kube-state-metrics/pull/177,samuelmanzer,add setup instructions to README.md,"I hit [this issue](https://github.com/kubernetes/kube-state-metrics/issues/166) recently as well, and thought that adding this to the README might clarify things.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/177)
<!-- Reviewable:end -->
",[],1,2017-07-26 21:44:34,2017-07-27 07:27:18,2017-07-27 07:27:18,True,2017-07-27 07:27:18,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/178,https://github.com/kubernetes/kube-state-metrics/pull/178,andyxning,add readme for supported kubernetes version,"Fix #129 partially.

Add readme about the supported Kubernetes version for kube-state-metrics.   This makes the supported Kubernetes version info more clear. :)

/cc @brancz @cemo

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/178)
<!-- Reviewable:end -->
",[],1,2017-07-27 13:34:58,2017-07-31 08:33:50,2017-07-31 09:01:21,True,2017-07-31 08:33:50,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/179,https://github.com/kubernetes/kube-state-metrics/pull/179,cofyc,Add PersistentVolumeClaim metrics,"What this PR does / why we need it:

As an admin operator of multi-tenant clusters, I need to monitor PVC bound status. If a PVC failed (for example, in case RBD Provisioner is not working or Ceph cluster is full), I can know it as soon as possible.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/179)
<!-- Reviewable:end -->
",[],1,2017-07-28 11:33:26,2017-07-28 14:27:58,2017-08-01 02:23:30,True,2017-07-28 14:27:58,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/181,https://github.com/kubernetes/kube-state-metrics/pull/181,brancz,collectors: generate a metric per possible phase per pod,"Fixes #180 

@fabxc @mxinden @gouthamve

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/181)
<!-- Reviewable:end -->
",[],1,2017-07-28 14:25:25,2017-07-31 08:38:52,2017-07-31 08:38:54,True,2017-07-31 08:38:52,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/182,https://github.com/kubernetes/kube-state-metrics/pull/182,julia-stripe,Add creation time metrics for all collectors,"We want to track when pods are created so that we can monitor various pod-age-related metrics, like ""are there pods that are > 30 minutes old and stuck in the 'Pending' state"".

While adding a 'pod created time' metric I figured it made sense to add a created time metric for all the other collectors as well since they all have a `CreationTimestamp` that's easy to expose.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/182)
<!-- Reviewable:end -->
",['andyxning'],1,2017-07-28 18:31:21,2017-08-19 16:45:00,2017-08-20 01:32:27,True,2017-08-19 16:45:00,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/184,https://github.com/kubernetes/kube-state-metrics/pull/184,andyxning,add kube_pod_start_time metric,"Fix #163

This PR add `kube_pod_start_time` metric with the value of pod start time in unix timestamp.

/cc @errordeveloper @fabxc @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/184)
<!-- Reviewable:end -->
",[],1,2017-07-29 15:17:02,2017-08-01 08:19:16,2017-08-01 09:15:03,True,2017-08-01 08:19:16,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/185,https://github.com/kubernetes/kube-state-metrics/pull/185,andyxning,bump client go to v4.0.0-beta.0 to support kubernetes 1.7,"Fix #183

This PR will bump client-go to `v4.0.0-beta.0` to support Kubernetes 1.7.

/cc @brancz @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/185)
<!-- Reviewable:end -->
",[],1,2017-07-30 06:43:50,2017-07-31 13:00:11,2017-07-31 13:09:39,True,2017-07-31 13:00:11,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/187,https://github.com/kubernetes/kube-state-metrics/pull/187,andyxning,Fix job nil deference,"Fix #174 about job collector.

This PR will fix [the panic](https://github.com/kubernetes/kube-state-metrics/issues/174#issuecomment-318907880) when collecting job metrics.

/cc @brancz @fabxc @shiranp

Btw, i will re-check all the de-reference about pointers when collecting metrics for all collector later.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/187)
<!-- Reviewable:end -->
",[],1,2017-07-31 05:28:17,2017-07-31 07:50:09,2017-07-31 09:04:54,True,2017-07-31 07:50:09,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/189,https://github.com/kubernetes/kube-state-metrics/pull/189,zouyee,update metrics document,"update metrics document

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/189)
<!-- Reviewable:end -->
",[],1,2017-07-31 07:59:59,2017-07-31 09:19:43,2017-07-31 09:19:43,True,2017-07-31 09:19:43,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/190,https://github.com/kubernetes/kube-state-metrics/pull/190,andyxning,add check for nil before deference,"This PR will check for pointer values before dereference to avoid panic dereferencing a nil pointer.

/cc @brancz @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/190)
<!-- Reviewable:end -->
",[],1,2017-07-31 14:19:53,2017-07-31 14:32:57,2017-08-24 09:49:48,True,2017-07-31 14:32:57,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/191,https://github.com/kubernetes/kube-state-metrics/pull/191,andyxning,update client-go version in readme,"Fix #185 

It's my fault not updating client-go version to `v4.0.0-beta.0` in readme in #185. This PR updates the version info about client-go to `v4.0.0-beta.0` in Readme. 

/cc @brancz @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/191)
<!-- Reviewable:end -->
",[],1,2017-07-31 14:28:27,2017-08-02 09:53:49,2017-08-02 10:36:58,True,2017-08-02 09:53:49,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/193,https://github.com/kubernetes/kube-state-metrics/pull/193,cofyc,Add a flexible node condition metric `kube_node_status_condition`,"**What this PR does / why we need it**:

This metric use `type` label to enumerate all conditions contained in
node Status.Conditions array.

Condition is enumerable, and finite. Adding it in label, makes it
extensible. Especially, Kuberentes community already have a project
[node-problem-detector](https://github.com/kubernetes/node-problem-detector) which reports customized condition `KernelDeadlock` for cluster node.

**Special notes for your reviewer**:

If `kube-state-metrics` can expose all types of conditions, it will be very convenient to monitor all possible node conditions, whether they are reported by Kubernetes core or by third-party addons, like`node-problem-detector`.

And if new node conditions are added in [kubernetes](https://github.com/kubernetes/kubernetes) in future, they will be exposed automatically.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/193)
<!-- Reviewable:end -->
",[],4,2017-08-01 06:19:36,2017-08-01 15:19:22,2018-03-12 12:08:48,True,2017-08-01 15:19:22,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/194,https://github.com/kubernetes/kube-state-metrics/pull/194,brancz,prometheus client: disable metric consistency,"This reverts the client_golang library back to the state that we need and was previously released with `v0.5.0`. #185 updated the deps and I missed to note that we were overriding this manual patch.

Fixes #192

@fabxc @andyxning @matthiasr 

@cofyc as you reported this, could you quickly try this out and report whether it fixes the behavior you were seeing?

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/194)
<!-- Reviewable:end -->
",[],1,2017-08-01 09:20:23,2017-08-01 09:57:26,2017-08-28 18:56:46,True,2017-08-01 09:57:26,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/196,https://github.com/kubernetes/kube-state-metrics/pull/196,brancz,README: add resource recommendation,"Based on @matthiasr's [comment](https://github.com/kubernetes/kube-state-metrics/issues/124#issuecomment-318727127).

@fabxc @andyxning

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/196)
<!-- Reviewable:end -->
",[],1,2017-08-01 15:18:07,2017-08-01 16:34:51,2017-08-01 16:34:53,True,2017-08-01 16:34:51,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/197,https://github.com/kubernetes/kube-state-metrics/pull/197,cofyc,Fix label names of `kube_node_status_condition` in docs.,"hi, @brancz 

Forgot to update docs in commit https://github.com/kubernetes/kube-state-metrics/commit/dda7a4f1e25df4d6e3a6a6f018a51b0808fdea91 of https://github.com/kubernetes/kube-state-metrics/pull/193.

It's my bad >_<.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/197)
<!-- Reviewable:end -->
",[],1,2017-08-01 15:33:15,2017-08-01 15:47:33,2018-03-12 12:08:42,True,2017-08-01 15:47:33,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/198,https://github.com/kubernetes/kube-state-metrics/pull/198,brancz,Cut 1.0 rc1,"I'm inviting everyone to review the changelog to make sure I've not missed anything and thoroughly test this to make sure we have a solid 1.0 release.

@andyxning @fabxc @piosz @matthiasr @loburm 

/cc @ethernetdan @julia-stripe

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/198)
<!-- Reviewable:end -->
",[],2,2017-08-02 12:32:20,2017-08-02 12:58:11,2017-08-02 13:55:35,True,2017-08-02 12:58:11,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/199,https://github.com/kubernetes/kube-state-metrics/pull/199,brancz,remove incorrect changelog line,"As mentioned in this https://github.com/kubernetes/kube-state-metrics/pull/198#issuecomment-319677172, this line is incorrect.

@andyxning thanks for catching!

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/199)
<!-- Reviewable:end -->
",['andyxning'],1,2017-08-02 13:54:56,2017-08-02 14:29:52,2017-08-02 14:29:55,True,2017-08-02 14:29:52,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/200,https://github.com/kubernetes/kube-state-metrics/pull/200,WIZARD-CXY,add autoscaler for kube-state-metrics,"For https://github.com/kubernetes/kube-state-metrics/issues/124
(provide deployment manifest that scales with cluster size using pod nanny)
This setup is tested on my gke cluster, now kube-state-metrics pod has two container, kube-state-metrics and pod-nanny
```
➜  kube-state-metrics git:(addautoscaler) ✗ kubectl get po -n kube-system
NAME                                                  READY     STATUS    RESTARTS   AGE
event-exporter-v0.1.4-4272745813-m1sqp                2/2       Running   0          6d
fluentd-gcp-v2.0-290kq                                2/2       Running   0          6d
fluentd-gcp-v2.0-7wmrd                                2/2       Running   0          6d
fluentd-gcp-v2.0-qtr9r                                2/2       Running   0          6d
heapster-v1.4.0-2764992688-s3q6v                      2/2       Running   0          6d
kube-dns-1413379277-387r0                             3/3       Running   0          6d
kube-dns-1413379277-z057j                             3/3       Running   0          6d
kube-dns-autoscaler-3880103346-73r5g                  1/1       Running   0          6d
kube-proxy-gke-cluster-1-default-pool-d10ff02d-cft7   1/1       Running   0          6d
kube-proxy-gke-cluster-1-default-pool-d10ff02d-mmfk   1/1       Running   0          6d
kube-proxy-gke-cluster-1-default-pool-d10ff02d-x4pg   1/1       Running   0          6d
kube-state-metrics-1585740284-w6lnr                   2/2       Running   0          1m
kubernetes-dashboard-1962351010-km5wg                 1/1       Running   0          6d
l7-default-backend-2954409777-rrwkq                   1/1       Running   0          6d
```
The cpu and memory parameters can be adjusted too.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/200)
<!-- Reviewable:end -->
",[],2,2017-08-03 06:12:54,2017-08-08 15:14:22,2017-09-13 02:51:02,True,2017-08-08 15:14:22,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/201,https://github.com/kubernetes/kube-state-metrics/pull/201,andyxning,add namespace cmd arg,"Fix #152

This PR add `namespaces` command line argument to kube-state-metrics. It's value is in the same format as `collectors`. If specified with delimited namespaces, kube-state-metrics will only collect resources in those namespaces.

/cc @brancz @matthiasr

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/201)
<!-- Reviewable:end -->
",[],1,2017-08-03 12:15:06,2017-08-21 15:16:08,2017-08-21 21:48:13,True,2017-08-21 15:16:08,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/202,https://github.com/kubernetes/kube-state-metrics/pull/202,asifdxtreme,Fix Typo in the Readme,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/202)
<!-- Reviewable:end -->
",[],1,2017-08-03 15:04:40,2017-08-03 15:10:03,2017-08-03 15:10:03,True,2017-08-03 15:10:03,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/203,https://github.com/kubernetes/kube-state-metrics/pull/203,asifdxtreme,Split the UT and Build in different Stages,"Split the UT and Build Stages in different jobs of travis CI so that it's easy for user to trace what went wrong in CI

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/203)
<!-- Reviewable:end -->
",[],1,2017-08-03 15:43:24,2017-08-04 07:41:10,2017-08-04 07:41:10,True,2017-08-04 07:41:10,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/204,https://github.com/kubernetes/kube-state-metrics/pull/204,asifdxtreme,Add build status badge in Readme,"Added Travis CI build status badge in Readme

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/204)
<!-- Reviewable:end -->
",[],1,2017-08-03 15:54:33,2017-08-04 07:38:18,2017-08-04 07:38:18,True,2017-08-04 07:38:18,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/205,https://github.com/kubernetes/kube-state-metrics/pull/205,asifdxtreme,Add GoReportCard badge,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/205)
<!-- Reviewable:end -->
",[],1,2017-08-04 08:34:29,2017-08-04 08:41:33,2017-08-04 08:41:33,True,2017-08-04 08:41:33,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/206,https://github.com/kubernetes/kube-state-metrics/pull/206,asifdxtreme,gofmt,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/206)
<!-- Reviewable:end -->
",[],1,2017-08-04 08:40:55,2017-08-07 08:37:22,2017-08-07 08:37:22,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/207,https://github.com/kubernetes/kube-state-metrics/pull/207,samuelmanzer,"Update README.md with ""go get"" instructions","Now that [this PR](https://github.com/kubernetes/k8s.io/pull/71) went through in `k8s.io` repo, `go get` works

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/207)
<!-- Reviewable:end -->
",['andyxning'],1,2017-08-06 14:40:30,2017-08-07 08:55:15,2017-08-07 08:55:15,True,2017-08-07 08:55:15,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/209,https://github.com/kubernetes/kube-state-metrics/pull/209,zouyee,update comment code,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/209)
<!-- Reviewable:end -->
",[],1,2017-08-07 07:52:54,2017-08-07 08:56:01,2017-08-07 08:56:01,True,2017-08-07 08:56:01,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/210,https://github.com/kubernetes/kube-state-metrics/pull/210,asifdxtreme,Add gofmt check in travis CI,"Add a new stage ""go fmt"" check in travis CI  as per suggestions in https://github.com/kubernetes/kube-state-metrics/pull/206

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/210)
<!-- Reviewable:end -->
",[],5,2017-08-07 08:30:59,2017-08-07 08:39:06,2017-08-07 08:39:06,True,2017-08-07 08:39:06,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/211,https://github.com/kubernetes/kube-state-metrics/pull/211,asifdxtreme,Add godoc reference,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/211)
<!-- Reviewable:end -->
",[],1,2017-08-07 09:32:53,2017-08-08 15:29:04,2017-08-08 15:29:04,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/213,https://github.com/kubernetes/kube-state-metrics/pull/213,brancz,*: cut 1.0,"As we haven't had any bug reports or code changes over the past week, here goes the final 1.0 release.

As I'm a bit short on time today, but wanted to get this out there I already marked the date to be tomorrow as I'm not planing on finishing the release today, but giving everyone the chance to review once more over night/day around the globe.

:tada: It's happening :tada: 

@fabxc @matthiasr @piosz @loburm @andyxning 

I'll synchronize with @loburm tomorrow to make sure we have the container images online at the point where we merge this.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/213)
<!-- Reviewable:end -->
",['piosz'],1,2017-08-08 15:55:40,2017-08-09 10:49:32,2017-08-09 16:21:58,True,2017-08-09 10:49:32,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/214,https://github.com/kubernetes/kube-state-metrics/pull/214,unguiculus,Update usage docs with cli args,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/214)
<!-- Reviewable:end -->
",[],1,2017-08-09 07:02:35,2018-03-09 20:20:33,2018-03-09 20:20:33,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/215,https://github.com/kubernetes/kube-state-metrics/pull/215,loburm,Fix push command.,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/215)
<!-- Reviewable:end -->
",[],1,2017-08-09 14:12:20,2017-08-09 16:18:18,2017-08-09 16:18:18,True,2017-08-09 16:18:18,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/217,https://github.com/kubernetes/kube-state-metrics/pull/217,zouyee,add deploy file with no rbac config,"merge files and add deploy file with no rbac config

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/217)
<!-- Reviewable:end -->
",[],1,2017-08-10 02:33:08,2017-08-11 00:37:32,2017-08-11 00:37:32,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/218,https://github.com/kubernetes/kube-state-metrics/pull/218,WIZARD-CXY,add gpu resource monitoring,"fix #216

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/218)
<!-- Reviewable:end -->
",[],1,2017-08-10 10:47:45,2017-08-21 14:37:33,2018-05-24 14:01:10,True,2017-08-21 14:37:33,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/219,https://github.com/kubernetes/kube-state-metrics/pull/219,zouyee,add simple componentstatus metrics,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/219)
<!-- Reviewable:end -->
",['andyxning'],1,2017-08-14 04:55:33,2017-12-05 09:53:45,2018-05-10 10:00:18,True,2017-12-05 09:53:45,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/220,https://github.com/kubernetes/kube-state-metrics/pull/220,zouyee,checkout kubernetes cluster supported feature,"https://github.com/kubernetes/kube-state-metrics/issues/212
<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/220)
<!-- Reviewable:end -->
",[],2,2017-08-14 09:50:09,2018-01-30 07:04:15,2018-01-30 07:04:25,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/223,https://github.com/kubernetes/kube-state-metrics/pull/223,crimsonfaith91,remove kube_pod_info gauge,"Addressing https://github.com/kubernetes/kube-state-metrics/issues/221
`kube_pod_info` gauge is not needed anymore as `CreatedByAnnotation` will be deprecated and removed.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/223)
<!-- Reviewable:end -->
",[],1,2017-08-16 22:13:53,2017-08-17 02:22:16,2017-08-17 02:22:43,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/224,https://github.com/kubernetes/kube-state-metrics/pull/224,zouyee,add service type,"https://github.com/kubernetes/kube-state-metrics/issues/122
`kube_service_spec_type{namespace=""default"",service=""test-service"",type=""ClusterIP""}` and `kube_service_info{namespace=""default"",service=""test-service"",clusterIP=""192.168.0.1""}`

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/224)
<!-- Reviewable:end -->
",['andyxning'],1,2017-08-17 02:46:10,2017-12-03 15:07:42,2017-12-03 15:07:42,True,2017-12-03 15:07:42,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/225,https://github.com/kubernetes/kube-state-metrics/pull/225,zouyee,add ingress metric,"https://github.com/kubernetes/kube-state-metrics/issues/122
<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/225)
<!-- Reviewable:end -->
",['andyxning'],1,2017-08-17 04:59:30,2018-08-31 17:26:58,2018-08-31 17:26:58,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/226,https://github.com/kubernetes/kube-state-metrics/pull/226,cofyc,Add PVC requested storage metric and storageclass label,"**What this PR does / why we need it**:

With `kube_persistentvolumeclaim_resource_requests_storage` metric, we can monitor users requested capacity. This is like `kube_pod_container_resource_requests_(cpu_cores|memory_bytes)` metrics.

With new label `storageclass` in pvc metrics, we can group metrics by storage class. In practice, a cluster may have multiple storage class for different dynamic volume types. For example, in our multi-tenant cluster, we deployed rbd/nfs storage classes and corresponding provisioners. For monitor/alerting, it's better if we can distinguish metrics by storage class name.

**Special notes for your reviewer**:

Example output:

```
# curl -s http://localhost:80/metrics | grep '^kube_persistent'
kube_persistentvolumeclaim_resource_requests_storage{namespace=""default"",persistentvolumeclaim=""mongo-persistent-storage-mongo-0"",storageclass=""rbd""} 1.073741824e+09
kube_persistentvolumeclaim_resource_requests_storage{namespace=""default"",persistentvolumeclaim=""registry-storage"",storageclass=""rbd""} 2.147483648e+09
kube_persistentvolumeclaim_resource_requests_storage{namespace=""kube-system"",persistentvolumeclaim=""alertmanager-kirk-monitor-db-alertmanager-kirk-monitor-0"",storageclass=""rbd""} 1.073741824e+09
kube_persistentvolumeclaim_resource_requests_storage{namespace=""kube-system"",persistentvolumeclaim=""kirk-monitor-grafana"",storageclass=""rbd""} 1.073741824e+09
kube_persistentvolumeclaim_resource_requests_storage{namespace=""kube-system"",persistentvolumeclaim=""prometheus-kirk-monitor-db-prometheus-kirk-monitor-0"",storageclass=""rbd""} 1.073741824e+09
```

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/226)
<!-- Reviewable:end -->",[],4,2017-08-17 11:57:55,2017-08-24 12:12:55,2018-03-12 12:08:55,True,2017-08-24 12:12:55,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/227,https://github.com/kubernetes/kube-state-metrics/pull/227,zouyee,add pesistent volume metric,"https://github.com/kubernetes/kube-state-metrics/issues/122
add pesistent volume metric

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/227)
<!-- Reviewable:end -->
",[],0,2017-08-17 14:26:34,2017-08-23 07:12:03,2017-08-23 07:12:03,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/228,https://github.com/kubernetes/kube-state-metrics/pull/228,chriwill,Set target operating system and compilation architecture dynamically,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/228)
<!-- Reviewable:end -->
",[],1,2017-08-18 20:16:46,2017-08-19 17:13:05,2017-08-19 17:13:05,True,2017-08-19 17:13:05,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/229,https://github.com/kubernetes/kube-state-metrics/pull/229,brancz,collectors: run go fmt on all collectors,"After merging #182 CI started failing as we recently introduced a check for that.

@andyxning let's make sure we rebase / ask to rebase all PRs opened after that change.

/cc @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/229)
<!-- Reviewable:end -->
",['andyxning'],1,2017-08-19 17:10:51,2017-08-21 09:25:12,2017-08-21 09:25:16,True,2017-08-21 09:25:12,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/230,https://github.com/kubernetes/kube-state-metrics/pull/230,joemiller,implement horizontal pod autoscaler (HPA) metrics,"This picks up the effort in PR #71 with the following changes:

- adds `.Spec.TargetCPU` and `.Status.CurrentCPU` metrics
- adds `kube_hpa_labels` metrics similar to other collectors
- refactored to fit the new code arrangement in ./collectors


<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/230)
<!-- Reviewable:end -->
",[],1,2017-08-20 15:09:29,2017-10-23 14:41:14,2017-10-23 14:41:14,True,2017-10-23 14:41:14,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/231,https://github.com/kubernetes/kube-state-metrics/pull/231,zouyee,add owner info in each workload app,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/231)
<!-- Reviewable:end -->
",[],3,2017-08-21 06:14:17,2017-12-07 03:15:19,2017-12-07 07:58:56,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/232,https://github.com/kubernetes/kube-state-metrics/pull/232,zouyee,[WIP]go fmt correct,"fix `go fmt` errors.https://github.com/kubernetes/kube-state-metrics/issues/233

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/232)
<!-- Reviewable:end -->
",[],1,2017-08-21 06:24:46,2017-08-21 09:26:15,2017-08-21 09:26:15,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/234,https://github.com/kubernetes/kube-state-metrics/pull/234,chlunde,Add metrics for namespace label and created time,"This allows prometheus reporting based on labels per namespace.

For example, if each namespace has a team label, you can report on the
memory use per team like this:

    sum(sum(container_memory_usage_bytes) by(namespace) * on(namespace)
    group_right() kube_namespace_labels) by (label_team)

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/234)
<!-- Reviewable:end -->
",[],3,2017-08-22 07:23:04,2017-08-23 09:26:36,2017-08-23 09:26:36,True,2017-08-23 09:26:36,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/236,https://github.com/kubernetes/kube-state-metrics/pull/236,zouyee,persistent volume metrics,"my mistake! persistent volume
https://github.com/kubernetes/kube-state-metrics/pull/227
 @brancz @andyxning PTAL
<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/236)
<!-- Reviewable:end -->
",['andyxning'],1,2017-08-23 07:19:56,2017-12-03 15:58:49,2017-12-03 15:58:49,True,2017-12-03 15:58:49,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/237,https://github.com/kubernetes/kube-state-metrics/pull/237,zouyee,add cronjob-metric doc,"add cronjob-metric doc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/237)
<!-- Reviewable:end -->
",[],1,2017-08-23 08:50:51,2017-08-23 09:23:09,2017-08-23 09:23:09,True,2017-08-23 09:23:09,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/238,https://github.com/kubernetes/kube-state-metrics/pull/238,matthiasr,Match deployment resources to recommendation,"Adjust the deployment to match the recommended resources (#196). The baseline resources are set to the basic recommendation for a 100 node cluster.

Pod nanny (#200) does not support ""the baseline includes the first 100 nodes"", so instead set the threshold until it needs to adjust wide. This over-estimates resource needs for intermediate cluster sizes, but I'd rather be on the safe side. @WIZARD-CXY is this sensible?

Fixes #112.

/cc @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/238)
<!-- Reviewable:end -->
",[],2,2017-08-23 09:27:50,2017-08-23 14:11:54,2017-08-24 07:18:12,True,2017-08-23 14:11:53,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/240,https://github.com/kubernetes/kube-state-metrics/pull/240,smarterclayton,Guard owner.controller dereference (it can be nil),"Fixes #239

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/240)
<!-- Reviewable:end -->
",[],1,2017-08-23 14:56:02,2017-08-24 07:25:58,2017-08-24 07:25:58,True,2017-08-24 07:25:58,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/241,https://github.com/kubernetes/kube-state-metrics/pull/241,chlunde,Add check for missing documentation,"Fixes #235

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/241)
<!-- Reviewable:end -->
",[],3,2017-08-23 20:18:15,2017-08-25 09:06:59,2017-08-25 09:06:59,True,2017-08-25 09:06:58,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/242,https://github.com/kubernetes/kube-state-metrics/pull/242,brancz,Cut 1.0.1,"Backporting this as it's going to take a bit of time until we release `v1.1.0`, as there are few more things to figure out for that. But to ensure people have an official release and don't get nil panics I wanted to just backport this.

The fix that is being backported is #240, which was originally reported in #239.

@fabxc @andyxning @matthiasr 

I'll coordinate publishing the images with @loburm / @piosz .

/cc @smarterclayton

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/242)
<!-- Reviewable:end -->
",['piosz'],2,2017-08-24 08:52:37,2017-08-25 05:24:58,2017-08-25 08:37:05,True,2017-08-25 05:24:58,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/244,https://github.com/kubernetes/kube-state-metrics/pull/244,brancz,merge v1.0.1 release back into master,"I tagged and published the release and pushed the image to `quay.io/coreos/kube-state-metrics:v1.0.1`, and asked @loburm to publish the gcr.io image.

@andyxning @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/244)
<!-- Reviewable:end -->
",['andyxning'],3,2017-08-25 09:02:30,2017-08-25 10:57:15,2017-09-13 08:02:50,True,2017-08-25 10:57:15,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/245,https://github.com/kubernetes/kube-state-metrics/pull/245,kawych,Fix gcloud push command,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/245)
<!-- Reviewable:end -->
",[],1,2017-08-28 13:11:42,2017-08-28 13:19:44,2017-08-28 13:19:44,True,2017-08-28 13:19:44,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/246,https://github.com/kubernetes/kube-state-metrics/pull/246,andyxning,move default image registry to quay,"This PR will move kube-state-metrics image registry from `gcr.io` to `quay.io`.

This is mainly because there are some times([#224 comment](https://github.com/kubernetes/kube-state-metrics/pull/244#issuecomment-325298896), [#88 comment](https://github.com/kubernetes/kube-state-metrics/pull/88#issuecomment-279228915)) the latest image can not be pushed to gcr.io timely. Users may be delayed to use the latest kube-state-metrics for this reason.  A better way was to use `quay.io` as the docker registry as @brancz should be able to push the latest image when a new kube-state-metrics is released.

/cc @brancz @loburm @fabxc @piosz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/246)
<!-- Reviewable:end -->
",['piosz'],1,2017-08-28 13:36:46,2017-09-07 10:11:11,2017-09-07 11:52:27,True,2017-09-07 10:11:11,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/248,https://github.com/kubernetes/kube-state-metrics/pull/248,smarterclayton,Job start time can be nil,"Fixes #247

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/248)
<!-- Reviewable:end -->
",['andyxning'],1,2017-09-02 03:03:04,2017-09-02 03:17:46,2017-09-02 03:17:46,True,2017-09-02 03:17:46,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/249,https://github.com/kubernetes/kube-state-metrics/pull/249,lgarithm,add nvidia gpu monitoring,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/249)
<!-- Reviewable:end -->
",['andyxning'],2,2017-09-04 09:50:20,2017-09-05 08:19:18,2017-09-05 08:19:18,True,2017-09-05 08:19:18,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/252,https://github.com/kubernetes/kube-state-metrics/pull/252,Pensu,Making targets for multi-arch,"This PR ensures multi arch builds for kube-state-metrics.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/252)
<!-- Reviewable:end -->
",[],1,2017-09-06 09:01:06,2017-09-13 08:55:38,2017-09-14 06:14:51,True,2017-09-13 08:55:38,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/253,https://github.com/kubernetes/kube-state-metrics/pull/253,andyxning,add pprof,"Add `pprof` support to kube-state-metrics. This will make debug more easily.

/cc @brancz @fabxc

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/253)
<!-- Reviewable:end -->
",[],1,2017-09-09 07:09:36,2017-09-14 06:19:25,2017-09-14 08:43:44,True,2017-09-14 06:19:25,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/254,https://github.com/kubernetes/kube-state-metrics/pull/254,andyxning,add collected resource objects length log,"This PR will add the log about collected resource object number. This may be useful for debug as described in [#122 comment](https://github.com/kubernetes/kube-state-metrics/issues/112#issuecomment-328302552).

/cc @brancz @fabxc 

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/254)
<!-- Reviewable:end -->
",[],1,2017-09-12 21:04:13,2017-09-13 09:41:53,2017-09-13 09:53:54,True,2017-09-13 09:41:53,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/256,https://github.com/kubernetes/kube-state-metrics/pull/256,caarlos0,Created kube_pod_container_status_waiting_reason,"closes #255

1. not sure if this is the better approach to this
2. not sure if those are the only possible waiting reasons. Couldn't find docs on this, poke into the kubernetes source and added the ones I found :(

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/256)
<!-- Reviewable:end -->
",[],3,2017-09-14 14:03:29,2017-09-26 14:20:03,2017-09-27 11:15:59,True,2017-09-26 14:20:02,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/259,https://github.com/kubernetes/kube-state-metrics/pull/259,drinktee,add go flag to parse glog flags,"It is need to parse glog flags. So we can use  glog flags such as --v=4, --logtostderr=true

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/259)
<!-- Reviewable:end -->
",['andyxning'],3,2017-09-15 15:33:31,2017-09-16 20:21:54,2017-09-16 20:21:54,True,2017-09-16 20:21:53,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/261,https://github.com/kubernetes/kube-state-metrics/pull/261,zouyee,add Compatibility matrix,"Due to breaking changes between Kubernetes API versions, some features might not work in kube-state-metric ,using compatibility matrix  to mark  supported/unsupported version range

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/261)
<!-- Reviewable:end -->
",[],1,2017-09-18 06:46:10,2017-10-09 09:43:05,2017-10-09 13:25:43,True,2017-10-09 09:43:05,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/262,https://github.com/kubernetes/kube-state-metrics/pull/262,superbrothers,Improve a usage message for collectors flag,"This PR Improves a usage message for collectors flag. It makes a sentence clear and shows a default value.

```
      --collectors string                Comma-separated list of collectors to be enabled. Defaults to ""services,persistentvolumeclaims,nodes,replicationcontrollers,statefulsets,replicasets,resourcequotas,jobs,namespaces,daemonsets,deployments,limitranges,pods,cronjobs""
```

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/262)
<!-- Reviewable:end -->
",['andyxning'],2,2017-09-20 07:14:18,2017-09-21 13:00:48,2017-09-21 13:27:26,True,2017-09-21 13:00:48,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/264,https://github.com/kubernetes/kube-state-metrics/pull/264,brancz,use protobuf instead of json,"client-go defaults to using json as the content type, as suggested in #257 it would be a good idea to use protobuf instead. As currently all objects used in kube-state-metrics support protobuf, this should be safe to do.

@smarterclayton @andyxning

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/264)
<!-- Reviewable:end -->
",[],1,2017-09-21 14:55:04,2018-06-25 07:17:02,2018-06-25 07:17:02,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/266,https://github.com/kubernetes/kube-state-metrics/pull/266,zouyee,[kubernetes 1.8] update client-go(release-5.0) and add k8s.io/api(rel…,"- [x] update client-go(release-5.0) for kubernetes 1.8

- [x] add k8s.io/api for kubernetes 1.8

- [ ] migrate DaemonSet, Deployment, ReplicaSet, and StatefulSet from v1beta1 to v1beta2

- [ ] migrate cronjob from v1alpha1 to v1beta1


@andyxning  @brancz PTAL!
<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/266)
<!-- Reviewable:end -->
",[],1,2017-09-27 06:41:16,2017-10-11 14:05:12,2017-10-11 14:05:12,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/267,https://github.com/kubernetes/kube-state-metrics/pull/267,andyxning,log the group version for resources,"This PR will log the currently used group version for each resource. This should be user friendly in debugging as discussed in [#256 comment](https://github.com/kubernetes/kube-state-metrics/issues/265#issuecomment-332525436).

/cc @brancz @matthiasr

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/267)
<!-- Reviewable:end -->
",[],1,2017-09-28 05:11:51,2017-09-28 09:01:47,2017-09-30 06:26:20,True,2017-09-28 09:01:47,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/269,https://github.com/kubernetes/kube-state-metrics/pull/269,andyxning,bump kubernetes to 1.8,"This PR update kubernetes dependencies to 1.8.

/cc @brancz @zouyee

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/269)
<!-- Reviewable:end -->
",[],1,2017-10-10 02:54:09,2017-10-11 13:04:14,2017-10-11 13:04:18,True,2017-10-11 13:04:14,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/271,https://github.com/kubernetes/kube-state-metrics/pull/271,andyxning,update resource group version compatibility,"This PR will update readme in
* update description about latest `client-go` version to `release-5.0`.
* add the deprecation policy for records in compatibility matrix.
* add description for resource group version compatibility.

/cc @brancz @zouyee

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/271)
<!-- Reviewable:end -->
",[],1,2017-10-11 14:04:27,2017-10-11 14:22:43,2017-10-11 14:22:47,True,2017-10-11 14:22:43,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/272,https://github.com/kubernetes/kube-state-metrics/pull/272,brancz,CHANGELOG.md: add changelog entry for v1.1.0-rc.0,"We've collected quite a few features, bug fixes and enhancements and in order to ensure full compatibility with Kubernetes 1.8 client-go was updated as well.

@fabxc @andyxning @zouyee Please have a look.

/cc @piosz @loburm please get ready in order to push the published image to gcr.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/272)
<!-- Reviewable:end -->
",[],1,2017-10-12 09:26:33,2017-10-12 10:00:02,2017-10-12 12:04:03,True,2017-10-12 10:00:02,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/273,https://github.com/kubernetes/kube-state-metrics/pull/273,brancz,kubernetes: update sample manifests,"With rc.0 released, we should promote the usage. The only new resource being used are namespace objects, other than that, no other RBAC changes.

@andyxning

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/273)
<!-- Reviewable:end -->
",['andyxning'],1,2017-10-12 10:29:33,2017-10-12 10:35:57,2017-10-12 10:38:37,True,2017-10-12 10:35:57,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/274,https://github.com/kubernetes/kube-state-metrics/pull/274,svend,Add volumename label to persistentvolumeclaim_info metric ,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/274)
<!-- Reviewable:end -->
",['andyxning'],3,2017-10-12 18:37:11,2017-10-20 02:14:17,2017-10-20 02:14:17,True,2017-10-20 02:14:17,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/276,https://github.com/kubernetes/kube-state-metrics/pull/276,caarlos0,added termination reason metric,"very much like #256, but for containers that were terminated.

It should be useful to detect apps that are being constantly OOMKilled, for example.

I got the possible reasons from kubernetes codebase:

https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/dockershim/docker_container.go#L328-L361

+cc @brancz 

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/276)
<!-- Reviewable:end -->
",[],3,2017-10-17 16:46:08,2017-10-19 13:20:33,2017-10-19 13:30:26,True,2017-10-19 13:20:33,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/277,https://github.com/kubernetes/kube-state-metrics/pull/277,zouyee,add code_of_conduct.md,"add code_of_conduct.md

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/277)
<!-- Reviewable:end -->
",[],1,2017-10-19 03:02:30,2017-10-19 09:15:01,2017-10-19 09:15:01,True,2017-10-19 09:15:01,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/278,https://github.com/kubernetes/kube-state-metrics/pull/278,brancz,*: cut v1.1.0,"@fabxc @andyxning

/cc @piosz @loburm 

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/278)
<!-- Reviewable:end -->
",[],1,2017-10-19 09:18:32,2017-10-19 09:35:31,2017-10-19 10:06:36,True,2017-10-19 09:35:31,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/280,https://github.com/kubernetes/kube-state-metrics/pull/280,zouyee,update deploy config apiversion,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/280)
<!-- Reviewable:end -->
",['andyxning'],1,2017-10-22 02:03:51,2017-10-22 15:17:37,2017-10-22 15:17:37,True,2017-10-22 15:17:37,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/281,https://github.com/kubernetes/kube-state-metrics/pull/281,zouyee,update README,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/281)
<!-- Reviewable:end -->
",['andyxning'],1,2017-10-22 02:07:42,2017-10-22 06:00:47,2017-10-22 06:00:47,True,2017-10-22 06:00:47,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/282,https://github.com/kubernetes/kube-state-metrics/pull/282,andyxning,Add simple e2e test,"This PR add simple e2e test for kube-state-metrics.

This PR leverage minikube to setup an available Kubernetes cluster. This PR reference https://kinvolk.io/blog/2017/10/running-kubernetes-on-travis-ci-with-minikube/ doc.

e2e test logic
* set up an kubernetes v1.8.0 cluster with minikube
* apply kube-state-metrics manifests. Exit with errors
* build and run kube-state-metrics in standalone
* wait for kube-state-metrics to run by accessing `healthz` endpoint
* access `metrics` endpoint
* access `healthz` endpoint to check for that kube-state-metrics is still running after accessing `metrics` endpoint.

**Note**: 
After adding promtool as the metric validate tool, `kube_pod_container_status_restarts` as a Counter is not a valid metric name. This will result in `kube_pod_container_status_restarts: counter metrics should have ""_total"" suffix` error.

So, in order to make promtool work properly, A name from `kube_pod_container_status_restarts` to `kube_pod_container_status_restarts_total` will be made. This is a breaking change. Which should  be noted additionally.


<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/282)
<!-- Reviewable:end -->
",[],2,2017-10-22 05:49:15,2017-11-06 07:57:00,2018-03-13 02:27:11,True,2017-11-06 07:57:00,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/283,https://github.com/kubernetes/kube-state-metrics/pull/283,andyxning,fix hpa stale imports,"Quick fix hpa stale imports.

> collectors/hpa.go:25:2: cannot find package ""k8s.io/client-go/pkg/api"" in any of:
	/home/travis/gopath/src/k8s.io/kube-state-metrics/vendor/k8s.io/client-go/pkg/api (vendor tree)
	/home/travis/.gimme/versions/go1.8.linux.amd64/src/k8s.io/client-go/pkg/api (from $GOROOT)
	/home/travis/gopath/src/k8s.io/client-go/pkg/api (from $GOPATH)
collectors/hpa.go:26:2: cannot find package ""k8s.io/client-go/pkg/apis/autoscaling/v1"" in any of:
	/home/travis/gopath/src/k8s.io/kube-state-metrics/vendor/k8s.io/client-go/pkg/apis/autoscaling/v1 (vendor tree)
	/home/travis/.gimme/versions/go1.8.linux.amd64/src/k8s.io/client-go/pkg/apis/autoscaling/v1 (from $GOROOT)
	/home/travis/gopath/src/k8s.io/client-go/pkg/apis/autoscaling/v1 (from $GOPATH)

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/283)
<!-- Reviewable:end -->
",[],1,2017-10-24 02:38:23,2017-10-24 02:44:30,2017-10-24 06:17:34,True,2017-10-24 02:44:30,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/284,https://github.com/kubernetes/kube-state-metrics/pull/284,andyxning,fix travis ci build,"As for now `make` does not equal to `make build`. We should make it explicitly to test with `make build`.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/284)
<!-- Reviewable:end -->
",[],1,2017-10-24 02:49:01,2017-10-24 03:01:33,2017-10-24 06:18:37,True,2017-10-24 03:01:33,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/285,https://github.com/kubernetes/kube-state-metrics/pull/285,svend,Omit static compute resource requests and limits from deployment,"The addon-resizer will dynamically set the pod compute resource values. If the
values are also set statically in the deployment configuration, reapplying the
configuration will result in the pods getting replaced. Without the static
resource, the deployment configuration can be reapplied, and the pods will not
be replaced.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/285)
<!-- Reviewable:end -->
",[],1,2017-10-24 18:52:53,2017-10-26 07:32:35,2017-10-26 07:32:35,True,2017-10-26 07:32:35,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/286,https://github.com/kubernetes/kube-state-metrics/pull/286,zouyee,update development content,"`--kubeconfig`  need to be given

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/286)
<!-- Reviewable:end -->
",['andyxning'],1,2017-10-25 07:37:03,2017-10-26 02:45:32,2017-10-26 02:45:32,True,2017-10-26 02:45:32,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/287,https://github.com/kubernetes/kube-state-metrics/pull/287,zouyee,fix hpa nil error,"fixes https://github.com/kubernetes/kube-state-metrics/issues/288
<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/287)
<!-- Reviewable:end -->
",[],1,2017-10-25 07:54:58,2017-10-25 11:25:41,2017-10-25 11:25:41,True,2017-10-25 11:25:41,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/289,https://github.com/kubernetes/kube-state-metrics/pull/289,zouyee,update kubernetes client-go tag to v5.0.0 which release with k8s 1.8.0,"update kubernetes client-go tag to v5.0.0 which release with kubernetes 1.8.0

/cc @brancz  @andyxning 
<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/289)
<!-- Reviewable:end -->
",['andyxning'],2,2017-10-26 07:59:52,2017-10-26 08:37:35,2017-10-26 08:37:35,True,2017-10-26 08:37:35,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/291,https://github.com/kubernetes/kube-state-metrics/pull/291,f0,Update CronJobs to v1beta1,"with kubernetes 1.8 cronjobs are at version v1beta1, and enabled per default

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/291)
<!-- Reviewable:end -->
",[],2,2017-10-30 08:15:22,2017-11-16 08:20:20,2017-12-07 01:03:06,True,2017-11-16 08:20:20,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/292,https://github.com/kubernetes/kube-state-metrics/pull/292,mikebryant,Add StatefulSet replica detail metrics,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/292)
<!-- Reviewable:end -->
",[],1,2017-11-01 18:13:00,2017-11-01 18:39:02,2017-11-01 18:39:02,True,2017-11-01 18:39:02,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/294,https://github.com/kubernetes/kube-state-metrics/pull/294,zouyee,new statement for alpha collectors and metrics in README,"/cc @brancz  @andyxning 
<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/294)
<!-- Reviewable:end -->
",[],1,2017-11-03 03:27:27,2017-11-06 09:26:14,2017-11-06 09:26:14,True,2017-11-06 09:26:14,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/298,https://github.com/kubernetes/kube-state-metrics/pull/298,zouyee,daemonset status info,"<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/298)
<!-- Reviewable:end -->
kube_daemonset_status_number_available(unavailable)  which different with kube_daemonset_status_number_ready
1. kube_daemonset_status_number_available 
> (available info about ds)The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and **available**
2. kube_daemonset_status_number_unavailable
> (unavailable info about ds)The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available
3. kube_daemonset_updated_number_scheduled
> nodes that are running **updated daemon pod**
/cc @brancz ",['andyxning'],1,2017-11-07 02:09:42,2017-12-02 11:02:23,2017-12-02 11:02:23,True,2017-12-02 11:02:23,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/299,https://github.com/kubernetes/kube-state-metrics/pull/299,zouyee,deployment ready replica info,"kube_deployment_status_replicas_ready
> Total number of ready pods targeted by this deployment

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/299)
<!-- Reviewable:end -->
",[],0,2017-11-07 04:34:26,2017-11-08 07:42:05,2017-11-08 07:44:44,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/301,https://github.com/kubernetes/kube-state-metrics/pull/301,zouyee,add ksm version command line argument,"add ksm buildinfo api and scrapy tagert info which log kubernetes cluster version
/cc @andyxning  @brancz 
<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/301)
<!-- Reviewable:end -->
",['andyxning'],1,2017-11-08 07:45:42,2017-12-03 02:37:44,2018-01-08 08:26:23,True,2017-12-03 02:37:44,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/302,https://github.com/kubernetes/kube-state-metrics/pull/302,brancz,Allow using RBAC to protect metrics endpoint,"Closes #297

@andyxning @smarterclayton

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/302)
<!-- Reviewable:end -->
",[],11,2017-11-08 16:19:51,2018-01-03 13:03:14,2018-01-03 13:03:20,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/305,https://github.com/kubernetes/kube-state-metrics/pull/305,zouyee,Update README.md,"/cc @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/305)
<!-- Reviewable:end -->
",[],1,2017-11-20 15:11:34,2017-11-20 15:57:51,2017-11-20 15:57:51,True,2017-11-20 15:57:51,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/309,https://github.com/kubernetes/kube-state-metrics/pull/309,zouyee,metrics about persist volume,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/309)
<!-- Reviewable:end -->
",[],1,2017-12-03 02:03:00,2017-12-03 02:03:59,2017-12-03 02:05:17,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/310,https://github.com/kubernetes/kube-state-metrics/pull/310,andyxning,code refactor,"This PR will refactor #301 . Just simple code refactor and no functional change.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/310)
<!-- Reviewable:end -->
",[],1,2017-12-03 02:48:46,2017-12-03 03:27:07,2017-12-03 03:27:11,True,2017-12-03 03:27:07,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/311,https://github.com/kubernetes/kube-state-metrics/pull/311,cpointner,fix API Endpoint for CronJobs,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/311)
<!-- Reviewable:end -->
",[],1,2017-12-06 14:55:47,2017-12-07 20:03:21,2017-12-11 10:03:54,True,2017-12-07 20:03:21,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/314,https://github.com/kubernetes/kube-state-metrics/pull/314,podnov,Add support for kube_job_labels and kube_cronjob_labels,"This fixes #313

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/314)
<!-- Reviewable:end -->
",[],2,2017-12-08 17:53:39,2017-12-10 15:30:10,2017-12-10 16:49:11,True,2017-12-10 15:30:09,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/315,https://github.com/kubernetes/kube-state-metrics/pull/315,jordigilh,Add Endpoints collector,"#57 
This PR adds a new metrics collector for Endpoint objects.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/315)
<!-- Reviewable:end -->
",[],1,2017-12-14 16:07:17,2017-12-14 18:56:20,2017-12-14 18:56:20,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/316,https://github.com/kubernetes/kube-state-metrics/pull/316,jordigilh,Add Endpoint collector,"#57
This PR adds a new metrics collector for Endpoint objects.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/316)
<!-- Reviewable:end -->
",[],1,2017-12-14 18:58:22,2017-12-21 10:52:47,2017-12-22 16:50:14,True,2017-12-21 10:52:47,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/317,https://github.com/kubernetes/kube-state-metrics/pull/317,andyxning,"Revert ""add componentstatus metrics""","This reverts commit 5452f063935185d32c2fffcdbcf1f3decf1db3da.

As for now `componentstatuses` does not support `watch` method, we can not watch on it.  This should fix [219 comment](https://github.com/kubernetes/kube-state-metrics/pull/219#issuecomment-351824814).

ping @zouyee 
/cc @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/317)
<!-- Reviewable:end -->
",[],1,2017-12-15 06:27:30,2018-01-05 13:31:44,2018-01-05 13:35:23,True,2018-01-05 13:31:44,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/318,https://github.com/kubernetes/kube-state-metrics/pull/318,brancz,Allow setting host/ip to bind HTTP server to,"If one wants to use a proxy to be the only path to the metrics endpoint that kube-state-metrics exposes, we need to be able to allow binding to a specific interface rather than all (which is what we are currently doing). When the `--host` flag is not set, the previous behavior is continued, meaning this is not a breaking change.

@andyxning

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/318)
<!-- Reviewable:end -->
",['andyxning'],1,2017-12-17 15:52:02,2017-12-20 14:09:31,2017-12-20 15:08:18,True,2017-12-20 14:09:31,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/322,https://github.com/kubernetes/kube-state-metrics/pull/322,spiffxp,Add code-of-conduct.md,"Refer to kubernetes/community as authoritative source for code of conduct

ref: kubernetes/community#1527

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/322)
<!-- Reviewable:end -->
",['cblecker'],1,2017-12-20 18:33:12,2017-12-21 10:50:10,2017-12-22 13:23:59,True,2017-12-21 10:50:10,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/323,https://github.com/kubernetes/kube-state-metrics/pull/323,jordigilh,Pluralized 'Endpoint' in collector output name,"Convention name for collectors referenced in configuration seems to be that they should be pluralized:
`I1221 11:02:43.323740       1 main.go:325] Active collectors: jobs,cronjobs,namespaces,endpoint,daemonsets,services,replicasets,replicationcontrollers,statefulsets,persistentvolumeclaims,componentstatuses,nodes,horizontalpodautoscalers,pods,resourcequotas,persistentvolumes,deployments,limitranges`

I didn't realize that I added 'endpoint' in singular, so this PR addresses that in the 2 areas where it is referenced, changing the word to 'endpoints' to match convention.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/323)
<!-- Reviewable:end -->
",['andyxning'],1,2017-12-22 17:09:33,2017-12-24 13:55:58,2017-12-24 13:55:58,True,2017-12-24 13:55:58,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/324,https://github.com/kubernetes/kube-state-metrics/pull/324,thockin,Convert registry to k8s.gcr.io,"This PR was auto-generated.  Please apply human expertise to review for correctness.

Followup to https://github.com/kubernetes/kubernetes/pull/54174

xref https://github.com/kubernetes/release/issues/281

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/324)
<!-- Reviewable:end -->
",['andyxning'],1,2017-12-22 18:01:29,2017-12-24 14:09:24,2017-12-24 14:09:24,True,2017-12-24 14:09:24,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/325,https://github.com/kubernetes/kube-state-metrics/pull/325,zouyee,Rm code_of_conduct.md,"Remove `code_of_conduct.md` for the duplication of `code-of-conduct.md`.
/cc @brancz 
<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/325)
<!-- Reviewable:end -->
",['andyxning'],1,2017-12-22 21:56:15,2017-12-24 03:44:00,2017-12-27 20:33:21,True,2017-12-24 03:44:00,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/326,https://github.com/kubernetes/kube-state-metrics/pull/326,KieranP,Update README to include note for GKE users,"Include a note in the README for GKE users based on a reference provided by @brancz 

Reference: https://github.com/kubernetes/kube-state-metrics/issues/270#issuecomment-335759009

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/326)
<!-- Reviewable:end -->
",[],1,2017-12-23 05:24:49,2017-12-23 09:46:42,2017-12-23 09:46:42,True,2017-12-23 09:46:42,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/327,https://github.com/kubernetes/kube-state-metrics/pull/327,andyxning,add rbac config for endpoint,"Add rbac config for endpoints.

@jordigilh 
/cc @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/327)
<!-- Reviewable:end -->
",[],1,2017-12-24 14:01:45,2018-01-03 10:56:46,2018-01-03 13:09:06,True,2018-01-03 10:56:46,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/328,https://github.com/kubernetes/kube-state-metrics/pull/328,andyxning,bump client-go to v6.0.0,"This PR will bump client-go dep to v6.0.0 to support Kubernetes 1.9.0.

Note: 
This PR removes `CreatedByAnnotation` annotation by using `GetControllerOf` from [`metav1`](https://github.com/kubernetes/apimachinery/blob/master/pkg/apis/meta/v1/controller_ref.go#L32-L40) as `CreatedByAnnotation` has been deleted in Kubernetes 1.9.

/cc @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/328)
<!-- Reviewable:end -->
",[],1,2017-12-24 14:48:25,2018-01-03 10:50:32,2018-01-03 13:37:34,True,2018-01-03 10:50:32,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/330,https://github.com/kubernetes/kube-state-metrics/pull/330,andyxning,add kube-state-metrics own metrics,"close #296 

This PR:
* add `--ksm-metrics-port` command line argument to expose ksm own metrics
* add go and process metrics
* expose `ksm_resources_per_scrape ` and `ksm_scrape_error_total`
  * `scrape_error_total`: Number of resources returned per scrape
  * `ksm_scrape_error_total`: Total scrape errors encountered when scraping a resource

/cc @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/330)
<!-- Reviewable:end -->
",[],1,2017-12-27 17:22:07,2018-01-03 15:45:28,2018-01-04 02:34:11,True,2018-01-03 15:45:28,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/333,https://github.com/kubernetes/kube-state-metrics/pull/333,brancz,kubernetes: Add correct componentstatuses to ClusterRole,"I believe this is all that needs to be fixed in regards to the errors previously printed.

@andyxning @zouyee

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/333)
<!-- Reviewable:end -->
",[],1,2018-01-05 12:48:24,2018-01-05 13:06:09,2018-01-05 13:06:15,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/334,https://github.com/kubernetes/kube-state-metrics/pull/334,brancz,kubernetes: Add missing RBAC roles,"While doing some testing for the next release, I found out that we're missing some RBAC roles in the example.

@andyxning

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/334)
<!-- Reviewable:end -->
",[],1,2018-01-05 13:11:23,2018-01-05 13:26:56,2018-01-05 13:27:00,True,2018-01-05 13:26:56,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/335,https://github.com/kubernetes/kube-state-metrics/pull/335,brancz,Cut 1.2.0-rc.0,"Happy new year :tada: ! We have gathered *a lot* of features and due to the recent Kubernetes 1.9 release, we should also release to ensure compatibility. Assuming everything goes well, we will be aiming for Monday the 15th of January for the stable 1.2.0 release.

@andyxning @zouyee @fabxc 

@piosz @loburm when merged I'd be great if one of you can push the release image to k8s.gcr.io.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/335)
<!-- Reviewable:end -->
",['andyxning'],2,2018-01-05 13:58:42,2018-01-05 14:16:31,2018-01-07 08:23:43,True,2018-01-05 14:16:31,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/336,https://github.com/kubernetes/kube-state-metrics/pull/336,brancz,kubernetes: Update version in manifest,"@andyxning

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/336)
<!-- Reviewable:end -->
",['andyxning'],1,2018-01-05 14:33:26,2018-01-05 14:44:34,2018-01-05 14:45:20,True,2018-01-05 14:44:34,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/340,https://github.com/kubernetes/kube-state-metrics/pull/340,zouyee,bump image version and apiVersion,"
<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/340)
<!-- Reviewable:end -->

  /cc @brancz ",['andyxning'],1,2018-01-07 04:12:05,2018-01-08 14:28:55,2018-01-08 14:31:12,True,2018-01-08 14:28:55,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/341,https://github.com/kubernetes/kube-state-metrics/pull/341,andyxning,add release prodceduer doc,"Add release procedure doc in case we may forget to do some steps for releasing. :)

@brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/341)
<!-- Reviewable:end -->
",[],1,2018-01-08 14:20:55,2018-01-09 10:27:49,2018-01-09 13:04:38,True,2018-01-09 10:27:49,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/342,https://github.com/kubernetes/kube-state-metrics/pull/342,zouyee,add OWNER file for somebody create pr and issue to ask for help,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/342)
<!-- Reviewable:end -->
",[],1,2018-01-10 07:53:03,2018-01-10 08:54:56,2018-01-10 08:54:56,True,2018-01-10 08:54:56,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/343,https://github.com/kubernetes/kube-state-metrics/pull/343,andyxning,[WIP] add support for resource group version,"Close #357.

Add check for supported resource group version. This can help us:
* check whether the specified resource group version supports list and watch methods inside kube-state-metrics instead of relying on e2e tests. With e2e,  we can only test kube-state-metrics against one Kubernetes version. By enabling this function inside kube-state-metrics, we can fail fast when running with any Kubernetes with various versions and configurations. This can also help us from using resources which do not support both list and watch methods. Btw, this can help us avoid what we do for componentstatus in #219 . However, for now we have no 
* check whether the specified resource is supported by the server and fail fast. I prefer fail fast than log the resource on found on the server error. This makes kube-state-metrics's log more clean and make users to be informed earlier about the abnormal.
* Add supports for multi group version of a resource
  * add `--collectors-config` to specify the wanted group version of a collector in the format of `collector1=groupVersion,collector2=groupVersion`.
  * add `--list-registered-collectors` to list all supported collectors and the corresponding group versions
  * The logic for this functionality to work is like below:
    * first get all enabled collectors with the default group version
    * merge the enabled collectors  with the specified collectors config
    * check the finally enabled collectors against the server 
    * run the specified collectors with a group version 

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/343)
<!-- Reviewable:end -->

/cc @brancz ",[],2,2018-01-12 08:59:06,2019-01-27 09:16:45,2019-01-27 09:16:46,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/345,https://github.com/kubernetes/kube-state-metrics/pull/345,brancz,Cut 1.2,"After a testing period of 10 days, there were no additional bugs found or features introduced. So we're cutting the final 1.2.0 release.

@andyxning @zouyee 

@piosz @loburm stay tuned to push the container images to k8s.gcr.io.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/345)
<!-- Reviewable:end -->
",['andyxning'],2,2018-01-15 09:59:16,2018-01-15 10:15:43,2018-01-15 12:57:32,True,2018-01-15 10:15:43,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/346,https://github.com/kubernetes/kube-state-metrics/pull/346,zouyee,Update README.md about cronjob version,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/346)
<!-- Reviewable:end -->
",[],1,2018-01-15 13:57:34,2018-04-19 00:21:19,2018-04-19 08:13:16,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/349,https://github.com/kubernetes/kube-state-metrics/pull/349,thockin,Pushes go to staging-k8s.gcr.io,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/349)
<!-- Reviewable:end -->
",[],1,2018-01-17 22:22:08,2018-01-19 07:39:56,2018-01-19 07:39:56,True,2018-01-19 07:39:56,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/351,https://github.com/kubernetes/kube-state-metrics/pull/351,r0fls,enable log in the prom http handler,"This is related to #350.

I'm happy to make this more configurable, if desired. However I think passing some log handler to prometheus is better than ignoring its logs entirely.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/351)
<!-- Reviewable:end -->
",['andyxning'],2,2018-01-18 23:28:06,2018-01-20 00:34:10,2018-01-20 00:34:11,True,2018-01-20 00:34:10,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/353,https://github.com/kubernetes/kube-state-metrics/pull/353,r0fls,use linux in go build for container,"fixes: #352

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/353)
<!-- Reviewable:end -->
",[],1,2018-01-19 23:52:21,2018-01-20 04:49:30,2018-01-20 04:49:30,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/354,https://github.com/kubernetes/kube-state-metrics/pull/354,andyxning,increase log verbosity,"Increase log verbosity to `V(4)` to decrease useless log in kube-state-metrics common use. This has been discussed in slack sig-instrumentation.

/cc @brancz @DirectXMan12

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/354)
<!-- Reviewable:end -->
",[],1,2018-01-20 03:24:30,2018-01-20 08:21:31,2018-01-20 09:04:01,True,2018-01-20 08:21:31,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/355,https://github.com/kubernetes/kube-state-metrics/pull/355,andyxning,fix container binary GOOS,"Fix #352 

This PR will make the `GOOS` for container and push target to `linux`.

/cc @brancz  @r0fls

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/355)
<!-- Reviewable:end -->
",[],1,2018-01-20 03:44:25,2018-01-20 08:24:42,2018-01-20 09:04:34,True,2018-01-20 08:24:41,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/359,https://github.com/kubernetes/kube-state-metrics/pull/359,jtslear,Adds additional container waiting reasons,"* Adds:
  * `CrashLoopBackOff`
  * `ImagePullBackOff`
* Also adds testing for the existing `ErrImagePull`
* addresses #356

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/359)
<!-- Reviewable:end -->
",['andyxning'],2,2018-01-26 02:02:09,2018-01-27 02:40:30,2018-01-27 02:40:30,True,2018-01-27 02:40:30,andyxning,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/361,https://github.com/kubernetes/kube-state-metrics/pull/361,crunchie84,Corrected misnamed type in log,"hpa logging for collector misnamed 'jobs'.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/361)
<!-- Reviewable:end -->
",[],1,2018-01-29 13:12:40,2018-01-29 14:43:07,2018-01-29 14:43:07,True,2018-01-29 14:43:07,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/364,https://github.com/kubernetes/kube-state-metrics/pull/364,hangyan,Add some note for old kubernetes cluster to deploy ksm,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/364)
<!-- Reviewable:end -->
",[],1,2018-02-06 12:22:23,2018-02-06 13:48:34,2018-02-06 14:44:34,True,2018-02-06 13:48:34,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/365,https://github.com/kubernetes/kube-state-metrics/pull/365,hangyan,Support deployment MaxSurge,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/365)
<!-- Reviewable:end -->
",['andyxning'],1,2018-02-12 09:17:53,2018-03-08 10:31:56,2018-03-08 10:31:56,True,2018-03-08 10:31:56,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/366,https://github.com/kubernetes/kube-state-metrics/pull/366,zouyee,bump addon-resize image version,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/366)
<!-- Reviewable:end -->
",[],1,2018-02-12 12:34:47,2018-02-12 12:52:56,2018-02-14 06:07:14,True,2018-02-12 12:52:56,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/371,https://github.com/kubernetes/kube-state-metrics/pull/371,metalmatze,Use Kubernete's own func that creates config by apiserver or kubeconfig,"Instead of implementing this logic ourselves we can simply leverage Kubernet's built-in function, which does exactly what we need.

We want to run kube-state-metrics outside of a cluster and simply give it an apiserver url. Right now this also needs a kubeconfig.

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/371)
<!-- Reviewable:end -->
",['andyxning'],2,2018-02-17 15:46:56,2018-03-08 02:06:56,2018-03-08 02:06:56,True,2018-03-08 02:06:56,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/375,https://github.com/kubernetes/kube-state-metrics/pull/375,andyxning,fix port usage misunderstanding,"Fix #373 

/cc @brancz 
ping @juliantaylor

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/375)
<!-- Reviewable:end -->
",[],1,2018-02-27 07:19:36,2018-02-27 08:52:41,2018-02-28 13:12:46,True,2018-02-27 08:52:41,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/378,https://github.com/kubernetes/kube-state-metrics/pull/378,andyxning,fix telemetry metrics values to 0 when not happen,"Fix #377 

/cc @brancz 
Ping @tomwilkie

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/378)
<!-- Reviewable:end -->
",['brancz'],1,2018-02-28 05:37:22,2018-02-28 10:49:48,2018-02-28 10:57:56,True,2018-02-28 10:49:48,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/379,https://github.com/kubernetes/kube-state-metrics/pull/379,andyxning,add secret and configmap metrics,"Fix #370

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/379)
<!-- Reviewable:end -->
",['brancz'],1,2018-02-28 14:34:11,2018-03-01 09:33:08,2018-04-04 09:27:56,True,2018-03-01 09:33:07,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/380,https://github.com/kubernetes/kube-state-metrics/pull/380,andyxning,update go version to 1.10,"This PR will update Golang version to 1.9 as 1.10 has been released. We should use the newer golang version. :)

/cc @brancz

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/380)
<!-- Reviewable:end -->
",['brancz'],1,2018-03-01 04:30:46,2018-03-02 11:01:50,2018-03-14 04:23:59,True,2018-03-02 11:01:50,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/382,https://github.com/kubernetes/kube-state-metrics/pull/382,mindw,Add kube_daemonset_labels,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kube-state-metrics/382)
<!-- Reviewable:end -->
",['andyxning'],3,2018-03-03 21:17:50,2018-03-04 01:45:53,2018-03-04 01:45:53,True,2018-03-04 01:45:53,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/383,https://github.com/kubernetes/kube-state-metrics/pull/383,pickledrick,Add annotations to namespace collector,,['andyxning'],1,2018-03-06 10:20:27,2018-03-08 13:43:59,2018-03-08 13:43:59,True,2018-03-08 13:43:59,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/384,https://github.com/kubernetes/kube-state-metrics/pull/384,nlamirault,Fix: default ports,The defaults arguments are not ``8080`` and ``8081`` (See [here](https://github.com/kubernetes/kube-state-metrics/blob/release-1.2/main.go#L155) and [here](https://github.com/kubernetes/kube-state-metrics/blob/release-1.2/main.go#L157)),[],1,2018-03-07 09:58:38,2018-03-07 13:08:35,2018-03-07 16:04:18,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/385,https://github.com/kubernetes/kube-state-metrics/pull/385,tcolgate,Add _labels for pv and pvc.,"This adds kube_persistentvolume_labels, and
kube_persistentvolumeclaim_lables. These are useful for associating the
pv and pvc with the app they were deployed for (via labels)","['andyxning', 'brancz']",1,2018-03-08 10:09:48,2018-03-09 02:23:13,2018-03-09 02:23:13,True,2018-03-09 02:23:12,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/386,https://github.com/kubernetes/kube-state-metrics/pull/386,andyxning,update namespace doc,"This PR updates namespace doc. No code change.

/cc @brancz ",['brancz'],1,2018-03-08 14:11:17,2018-03-14 02:12:32,2018-03-14 04:21:40,True,2018-03-14 02:12:32,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/387,https://github.com/kubernetes/kube-state-metrics/pull/387,tcolgate,Remove namespace from PersistentVolume metrics,Remove namespace from PersistentVolume metrics as PersistentVolume is not namespace scoped.,"['andyxning', 'brancz']",1,2018-03-08 16:56:00,2018-03-09 13:21:11,2018-03-09 13:21:11,True,2018-03-09 13:21:11,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/389,https://github.com/kubernetes/kube-state-metrics/pull/389,tcolgate,Add Pod persistentvolumeclaim binding information.,"This introduces two metrics that are useful when monitoring disk usage
of a pod. They allow you to determine the persistentvolumeclaims
associated with a specific pod, and how they are bound.

Without this pods can only be loosely associated with volumes through
labels.

I looked at providing metrics on other attached volume types, however
this is not useful at this time as the kubelet only exports statistics
for PVC mounted volumes. Most volumes can/should be mounted via a PVC
anyway so this is a relatively minor limitation.","['andyxning', 'brancz']",1,2018-03-09 08:50:20,2018-03-09 09:22:12,2018-03-09 09:22:12,True,2018-03-09 09:22:12,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/390,https://github.com/kubernetes/kube-state-metrics/pull/390,andyxning,fix cronjob parse,"This PR will fix cronjob parse error.

As with [Kubernetes cronjob parse](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/cronjob/utils.go#L92-L108), we should also use `cron.Parse` instead of `cron.ParseStandard`.

/cc @brancz ",['brancz'],1,2018-03-09 10:29:51,2018-03-09 11:39:11,2018-03-09 14:52:27,True,2018-03-09 11:39:11,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/391,https://github.com/kubernetes/kube-state-metrics/pull/391,derekwaynecarr,Add metrics for node taints,"Fixes https://github.com/kubernetes/kube-state-metrics/issues/388

",['brancz'],1,2018-03-10 05:18:21,2018-03-14 14:12:04,2018-03-15 02:16:02,True,2018-03-14 14:12:04,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/392,https://github.com/kubernetes/kube-state-metrics/pull/392,normanjoyner,fix misspelling of Kubernetes,Fixes a typo of Kubernetes in the README,['andyxning'],1,2018-03-10 15:33:50,2018-03-11 02:15:12,2018-03-11 02:15:12,True,2018-03-11 02:15:12,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/394,https://github.com/kubernetes/kube-state-metrics/pull/394,dohnto,Fix namespacing of HPA,Fixes #393,['andyxning'],1,2018-03-10 21:10:46,2018-03-11 02:24:10,2018-03-11 02:24:10,True,2018-03-11 02:24:10,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/395,https://github.com/kubernetes/kube-state-metrics/pull/395,dohnto,[RFC] Allow to specify multiple namespace.,"**I am no golang professional so I welcome any feedback or improvement tips. Also I am not very familiar with kubernetes golang library so maybe I am trying to solve it too naively. Please tell me.**

### What problem is it trying to solve
See #368 for rationale.

### What is this feature?
Allow to pass value of `--namespace` as a list to allow to monitor multiple namespaces. E. g.
```
$ ./kube-state-metrics # all namespaces
$ ./kube-state-metrics --namespace=kube-system # single namespace
$ ./kube-state-metrics --namespace=kube-system,default,ingress-nginx # multiple namespaces
```

### Is it backwards compatible?
Yes
",['brancz'],2,2018-03-10 22:12:30,2018-03-14 02:11:35,2018-03-14 02:11:35,True,2018-03-14 02:11:35,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/396,https://github.com/kubernetes/kube-state-metrics/pull/396,aramalipoor,collectors: Report pod's completion time,"This metric alongside `pod_start_time` can help determine total Pod's lifetime. Useful for example to get average duration it takes Openshift's BuildConfigs to build images.

Example query:
```promql
avg without(pod, namespace)
  (kube_pod_completion_time{pod=~"".*-[0-9]+-build""} 
       - kube_pod_start_time{pod=~"".*-[0-9]+-build""})
```

The `pod_completion_time` calculation logic is based [this piece of code](https://github.com/openshift/origin-web-console/blob/57086c97efd8e5983d250d3aef110f61e0a5eab0/app/scripts/filters/resources.js#L1102-L1116) in [origin-web-console](https://github.com/openshift/origin-web-console)","['brancz', 'fabxc']",1,2018-03-12 18:13:31,2018-03-13 02:57:09,2018-03-13 08:06:46,True,2018-03-13 02:57:08,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/397,https://github.com/kubernetes/kube-state-metrics/pull/397,aramalipoor,Add Unreleased section in CHANGELOG,As per https://keepachangelog.com/en/1.0.0/#effort and the [discussion here](https://github.com/kubernetes/kube-state-metrics/pull/396#discussion_r174003166),['andyxning'],1,2018-03-13 06:57:16,2018-03-13 08:51:10,2018-03-13 08:56:57,True,2018-03-13 08:51:10,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/399,https://github.com/kubernetes/kube-state-metrics/pull/399,andyxning,sanity check,"This PR
* add sanity check for `collectorSet` and `namespaceList`
* make `namespaceList`'s type to `string` to make it more user friendly to end users with `string` type.

/cc @brancz ",['brancz'],1,2018-03-14 16:05:45,2018-03-16 14:41:26,2018-03-17 01:49:18,True,2018-03-16 14:41:26,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/400,https://github.com/kubernetes/kube-state-metrics/pull/400,dohnto,Updated CHANGELOG,Updated changelog's unreleased section with #395 and #394.,['brancz'],1,2018-03-14 19:30:35,2018-03-14 22:42:05,2018-03-14 22:42:05,True,2018-03-14 22:42:05,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/403,https://github.com/kubernetes/kube-state-metrics/pull/403,brancz,collectors: Add NOP eventhandler to ensure we perform resyncs,"Fixes #402 

@andyxning ",[],1,2018-03-21 15:52:47,2018-04-28 02:19:24,2018-04-28 16:09:04,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/404,https://github.com/kubernetes/kube-state-metrics/pull/404,brancz,CHANGELOG.md: Add v1.3.0-rc.0 entry,"We've accumulated a number of features over the past month, and since we've traditionally cut releases right around Kubernetes releases, here it goes.

I encourage everyone to test this so we can find bugs, should there be any new ones introduced.

@andyxning ",['andyxning'],1,2018-03-23 14:29:02,2018-03-26 11:39:02,2018-03-26 12:04:18,True,2018-03-26 11:39:02,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/406,https://github.com/kubernetes/kube-state-metrics/pull/406,andyxning,fix cronjob parse,"This should fix cronjob schedule parse for next schedule time calculation.

Sorry for changing this  logic over and over again. But, it should work now. 

The reason for the next schedule time ut test is not idempotent in all time zone is that:
* the time for the same unix timestamp is different in different time zone
* the cronjob is parsed in local time zone 

 For example, if the schedule cronjob config is `0 */6 * * *` and the last scheduled time zone is . In GMT+8, i.e., ""Asia/Shanghai"". 
* schedule time in local: ""2018-03-11 12:34:56 +0800 CST""
* next schedule time in local: ""2018-03-11 18:00:00 +0800 CST""
* next schedule time in utc: ""1.5207624e+09""

Whereas in the time zone is UTC, i.e., travis CI
* schedule time in local: ""2018-03-11 04:34:56 +0000 UTC""
* next schedule time in local: ""2018-03-11 06:00:00 +0000 UTC""
* next schedule time in utc: ""1.520748e+09""

As for now, [cronjob always use five elements tuple to represent the schedule cron config](https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#creating-a-cron-job), kube-state-metrics should be in consensus.",['brancz'],1,2018-03-26 06:18:22,2018-03-26 11:11:01,2018-03-26 11:37:49,True,2018-03-26 11:11:01,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/411,https://github.com/kubernetes/kube-state-metrics/pull/411,r0fls,update readme for cronjob collector,fix #409 ,['brancz'],2,2018-04-03 18:01:47,2018-04-04 05:59:08,2018-04-07 14:31:43,True,2018-04-04 05:59:08,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/412,https://github.com/kubernetes/kube-state-metrics/pull/412,brancz,Cut v1.3.0 stable,"After a period of 12 days of testing the release candidate, no bugs were reported, so we're promoting it to be the stable release.

Once merged, I will push the new image to the quay.io repository. @piosz and or @loburm please stand by for the gcr.io image.

@andyxning 

/cc @fabxc @ant31 @mxinden @derekwaynecarr @ironcladlou ",['fabxc'],3,2018-04-04 09:15:54,2018-04-04 16:01:09,2018-04-12 11:45:46,True,2018-04-04 16:01:09,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/413,https://github.com/kubernetes/kube-state-metrics/pull/413,pdecat,Add permissions to list and watch ConfigMaps and Secrets,"Required since https://github.com/kubernetes/kube-state-metrics/pull/379

Without that, the following errors are triggered:

```
E  k8s.io/kube-state-metrics/collectors/collectors.go:62: Failed to list *v1.Secret: secrets is forbidden: User ""system:serviceaccount:monitoring:kube-state-metrics"" cannot list secrets at the cluster scope: Unknown user ""system:serviceaccount:monitoring:kube-state-metrics"" 
E  k8s.io/kube-state-metrics/collectors/collectors.go:62: Failed to list *v1.ConfigMap: configmaps is forbidden: User ""system:serviceaccount:monitoring:kube-state-metrics"" cannot list configmaps at the cluster scope: Unknown user ""system:serviceaccount:monitoring:kube-state-metrics"" 
```

Note: here, kube-state-metrics is deployed in a custom `monitoring` namespace.",[],1,2018-04-04 09:31:38,2018-04-04 09:42:50,2018-04-04 13:09:18,True,2018-04-04 09:42:50,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/415,https://github.com/kubernetes/kube-state-metrics/pull/415,dohnto,Refactor e2e #1,,[],2,2018-04-05 15:12:28,2018-04-07 17:23:54,2018-04-07 17:23:54,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/417,https://github.com/kubernetes/kube-state-metrics/pull/417,andyxning,fix kubernetes accelerator deprecation procedure,"Fix https://github.com/kubernetes/kube-state-metrics/pull/411#discussion_r179186482
>>kubernetes accelerator feature support is deprecated in version v1.11.

> Kubernetes accelerator support is already deprecated in 1.10. The PR to completely remove it is merged in master, so it will be completely removed in 1.11.



/cc @mindprince @brancz ",['mindprince'],1,2018-04-07 14:31:16,2018-04-09 15:40:11,2018-07-05 12:19:51,True,2018-04-09 15:40:11,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/418,https://github.com/kubernetes/kube-state-metrics/pull/418,dohnto,Extend e2e tests,"Addressing #290. I tried to made commits readable as possible, can squash if prefered.

* I refactored e2e testsuite allowing user to overwrite whether he wants to install minikube & kubectl and also choose minikube's driver (locally when testing I want to use virtualbox and I don't want the script to download minikube and kubectl over and over to my system path).

* I added `cronjob daemonset hpa job limitrange persistentvolumeclaim replicationcontroller resourcequota statefulset` resources which are created

* I added a simple check that expected metrics are exposed

",['brancz'],1,2018-04-07 17:02:08,2018-04-17 13:28:00,2018-04-18 05:18:50,True,2018-04-17 13:28:00,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/419,https://github.com/kubernetes/kube-state-metrics/pull/419,andyxning,use alpine as base image,"This PR will move the base image for kube-state-metrics from `scratch` to `alpine`. Alpine has many useful binaries, such as `sh`. This will be helpful when we need to `exec` into an running kube-state-metrics container and run some debug command.

Last but not the least is that alpine image is small enough thus the kube-state-metircs image will not increase much.",['brancz'],1,2018-04-08 06:12:43,2018-04-09 16:43:09,2018-04-10 02:26:06,True,2018-04-09 16:43:09,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/420,https://github.com/kubernetes/kube-state-metrics/pull/420,andyxning,fix pod unknown stats,"Fix #410 

This PR will adds another pod unknown situation where `kubectl` uses to mark a pod in Unknown state.",['brancz'],1,2018-04-08 10:58:40,2018-04-09 16:41:10,2018-04-10 02:27:50,True,2018-04-09 16:41:09,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/421,https://github.com/kubernetes/kube-state-metrics/pull/421,andyxning,add go version check,"Fix #416 

This PR will ad a go version check for `make build` to help us mitigate the problem encountered in https://github.com/kubernetes/kube-state-metrics/issues/416",[],1,2018-04-09 02:22:56,2018-04-11 16:14:55,2018-04-12 02:22:42,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/422,https://github.com/kubernetes/kube-state-metrics/pull/422,andyxning,use golang image to compile ksm,"Fix #421

This PR will add support for using golang container to compile kube-state-metrics.",['brancz'],1,2018-04-11 03:32:14,2018-04-11 16:14:55,2018-04-11 16:16:51,True,2018-04-11 16:14:55,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/423,https://github.com/kubernetes/kube-state-metrics/pull/423,brancz,Add note about kube-state-metrics exposing raw data,"This closes #414

cc @andyxning ",['andyxning'],1,2018-04-11 08:41:23,2018-04-12 09:18:56,2018-04-12 09:18:56,True,2018-04-12 09:18:55,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/424,https://github.com/kubernetes/kube-state-metrics/pull/424,andyxning,pin minikube v0.25.2,Minikube has released v0.26.0 and it seems that e2e test for kube-state-metrics is not compatible with the latest minikube release. Let's first pin minikube version to v0.25.2 and file an issue in minikube to track this.,['brancz'],1,2018-04-11 09:34:00,2018-04-11 12:49:56,2018-04-11 15:13:41,True,2018-04-11 12:49:56,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/425,https://github.com/kubernetes/kube-state-metrics/pull/425,discordianfish,Bump golang version to 1.10.1,"Fixes #257 (probably)

I've tried debugging #257 by rebuilding ksm with some more debugging options but after building it with go1.10.1

- memory usage dropped from 300MB-1Gi to pretty stable 55-65MB
- scrape duration went from 3s-timeout to 0.3s-1s.",['brancz'],1,2018-04-11 11:07:25,2018-04-11 15:35:01,2018-04-11 15:35:01,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/426,https://github.com/kubernetes/kube-state-metrics/pull/426,andyxning,force bootstrapper to localkube for minikube,Force minikube use localkube as the bootstrapper instead of kubeadm. For more info: https://github.com/kubernetes/minikube/issues/2704,[],1,2018-04-11 16:10:40,2018-07-11 08:52:23,2018-07-11 08:52:23,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/427,https://github.com/kubernetes/kube-state-metrics/pull/427,ayushpateria,Add total resources scraped metric,This adds `ksm_resources_scraped_total` which counts total resources scraped since the start of the metrics server.,[],1,2018-04-11 18:42:16,2018-09-16 16:42:17,2018-09-16 16:42:17,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/428,https://github.com/kubernetes/kube-state-metrics/pull/428,brancz,CHANGELOG.md: Add entry for v1.3.1,"@andyxning 

/cc @discordianfish 

@piosz and @loburm stand by to push the new image to v1.3.1",[],2,2018-04-12 07:24:40,2018-04-12 08:55:31,2018-04-12 08:55:31,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/429,https://github.com/kubernetes/kube-state-metrics/pull/429,brancz,Cut 1.3.1,"@andyxning 

/cc @dohnto @discordianfish

@piosz @loburm please stand by to push the v1.3.1 image to gcr",['andyxning'],4,2018-04-12 10:05:57,2018-04-12 10:41:55,2018-04-21 12:15:48,True,2018-04-12 10:41:55,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/430,https://github.com/kubernetes/kube-state-metrics/pull/430,elcuyi,Expose Pod Annotations as Prometheus labels,,['fabxc'],1,2018-04-13 10:53:53,2019-01-06 11:07:29,2019-01-06 11:07:30,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/432,https://github.com/kubernetes/kube-state-metrics/pull/432,jmcarp,Clarify apiserver override example.,"* Drop `--in-cluster` flag, which doesn't exist as of latest release
* Pass `--apiserver` flag to match instructions",['andyxning'],1,2018-04-15 22:00:04,2018-04-16 02:29:59,2018-04-16 02:29:59,True,2018-04-16 02:29:59,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/433,https://github.com/kubernetes/kube-state-metrics/pull/433,mwhittington21,Adds time_to_schedule and time_to_start metrics,"This PR adds two metrics with the aim of tracking the beginning of the pod lifecycle better. They are named `kube_pod_time_to_schedule` and `kube_pod_time_to_start`.

I tried to get the results I wanted by just adding/subtracting various existing metrics in Prometheus but there's a bit of conditional logic required to make the most sense out of the created vs started timestamps for a pod object.",['brancz'],2,2018-04-16 01:12:39,2018-04-21 12:38:00,2018-04-21 12:38:00,True,2018-04-21 12:38:00,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/434,https://github.com/kubernetes/kube-state-metrics/pull/434,ewbankkit,Fix documentation typo 'Heaspter' -> 'Heapster',,"['andyxning', 'brancz']",1,2018-04-16 19:36:55,2018-04-16 19:49:59,2018-04-16 19:49:59,True,2018-04-16 19:49:59,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/436,https://github.com/kubernetes/kube-state-metrics/pull/436,discordianfish,Add hpa conditions,"Fixed after discussion in Slack, thanks to @DirectXMan12 
This now uses a explicitly versioned client as recommended anyways.

---
Not working yet, need to understand the versioning and would welcome somebody pointing me in the right direction to solve this in a backward compatible way. The HPA conditions are part of the HPA status since v2beta1. When I update the import though, I get this error:

```
E0417 12:51:00.051078   17716 reflector.go:386] k8s.io/kube-state-metrics/collectors/collectors.go:62: expected type *v2beta1.HorizontalPodAutoscaler, but watch event object had type *v1.HorizontalPodAutoscaler
```",['brancz'],1,2018-04-17 10:51:24,2018-04-18 14:51:01,2018-04-19 09:27:53,True,2018-04-18 14:51:01,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/437,https://github.com/kubernetes/kube-state-metrics/pull/437,dohnto,Updated changelog according to changes in #418,Updated changelog according to changes in #418 ,['brancz'],1,2018-04-18 05:13:09,2018-04-18 05:39:01,2018-04-18 05:39:01,True,2018-04-18 05:39:01,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/438,https://github.com/kubernetes/kube-state-metrics/pull/438,cofyc,Move gatherAndCompare and related code to separate package and expose it,"hi, 

`gatherAndCompare` function is really useful to test `prometheus.Collector`.  I have used it [in kubelet collectors](https://github.com/kubernetes/kubernetes/pull/59170/files#diff-18db6236f1e4cf727350b7f4dafa9e50R17). Now I am working on exposing metrics in local volume provisioner: https://github.com/kubernetes-incubator/external-storage/pull/721. I suggest to move `gatherAndCompare` to separate package and expose it. Then I can vendor it instead of copying.
What do you think?","['andyxning', 'brancz']",2,2018-04-18 06:44:55,2018-04-18 08:19:00,2018-07-03 02:31:47,True,2018-04-18 08:19:00,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/439,https://github.com/kubernetes/kube-state-metrics/pull/439,pdecat,Fix markdown rendering of possible reason tag values,"The rendered lists of possible reason tag values are truncated after the first element for the `kube_pod_container_status_terminated_reason` and `kube_pod_container_status_waiting_reason` metrics.

The pipe character needs escaping as already done for other metrics, e.g. `kube_pod_status_phase`.",['brancz'],1,2018-04-18 12:16:58,2018-04-18 12:31:00,2018-04-18 12:31:00,True,2018-04-18 12:31:00,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/441,https://github.com/kubernetes/kube-state-metrics/pull/441,discordianfish,Fix hpa condition labels,The labels were switched accidentially. This fixes it.,[],1,2018-04-24 17:11:46,2018-04-24 20:59:13,2018-04-24 20:59:13,True,2018-04-24 20:59:13,brancz,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/442,https://github.com/kubernetes/kube-state-metrics/pull/442,ZhiqinYang,add pod resource ,"sometimes we only need to pod resource,  but the container resources for limit cannot get when we don't add limit in yaml.",[],3,2018-04-26 03:07:57,2018-07-02 03:27:11,2018-07-02 03:27:11,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/444,https://github.com/kubernetes/kube-state-metrics/pull/444,unterstein,Update README.md to reference 1.3.1 as latest release,As discussed in #443 version 1.3.1 is the latest official release and should be referenced in the README.md,['andyxning'],1,2018-04-26 14:17:19,2018-04-26 14:50:04,2018-04-26 14:50:27,True,2018-04-26 14:50:04,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/445,https://github.com/kubernetes/kube-state-metrics/pull/445,andyxning,add support for quay latest image tag,"Partially fix #443 

This PR adds two functionalities:
* add the new `quay-push` target to push images to quay.io
* add the support for tag the `latest` tag when release with a new version

BTW, i do not think it is the right way to use `latest` tag for any docker images. But since kube-state-metrics has been released under support for `latest` tag, we should keep this release procedure.",['brancz'],1,2018-04-27 08:48:12,2018-04-27 10:00:20,2018-04-27 10:01:33,True,2018-04-27 10:00:20,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/446,https://github.com/kubernetes/kube-state-metrics/pull/446,andyxning,refactor to toward kubernetes way,"This PR will refactor kube-state-metrics to be a more kubernetes way. Mainly:
* move `collectors`/`version` packages under `pkg` package
* refactor flag command arguments configuration to `options` package",['brancz'],1,2018-04-27 10:28:57,2018-05-02 08:02:17,2018-05-15 15:04:10,True,2018-05-02 08:02:17,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/447,https://github.com/kubernetes/kube-state-metrics/pull/447,zouyee,add ISSUE and pr guildline,/cc @andyxning ,['brancz'],1,2018-04-30 13:27:35,2018-04-30 16:06:17,2018-04-30 16:06:17,True,2018-04-30 16:06:17,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/448,https://github.com/kubernetes/kube-state-metrics/pull/448,zouyee,update Compatibility matrix,,['andyxning'],1,2018-04-30 13:37:34,2018-05-17 02:00:50,2018-05-17 02:00:50,True,2018-05-17 02:00:50,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/451,https://github.com/kubernetes/kube-state-metrics/pull/451,andyxning,add generic pod resource request and limit,"**What this PR does / why we need it**:
This PR
* Adds `disable-pod-none-generic-resource-metrics` command line argument to kube-state-metrics to disable old not labeled resource metrics.
* Adds generic new `kube_pod_container_resource_requests ` and `kube_pod_container_resource_limits `.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #408 

",['derekwaynecarr'],1,2018-05-03 10:52:35,2018-05-24 13:56:33,2018-05-24 15:33:09,True,2018-05-24 13:56:32,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/452,https://github.com/kubernetes/kube-state-metrics/pull/452,doktoroblivion,kube-state-metrics support for oidc authentication providers #449,"**What this PR does / why we need it**:
It fixes an issue with auth provider plugins for oidc

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
https://github.com/kubernetes/kube-state-metrics/issues/449

",[],1,2018-05-04 17:59:50,2018-05-06 16:22:51,2018-05-06 16:22:51,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/453,https://github.com/kubernetes/kube-state-metrics/pull/453,andyxning,update kube-state-metrics version to v1.3.1,"**What this PR does / why we need it**:
This PR updates the kube-state-metrics version to v1.3.1

",['brancz'],1,2018-05-05 00:51:53,2018-05-06 17:02:51,2018-05-07 02:19:46,True,2018-05-06 17:02:51,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/454,https://github.com/kubernetes/kube-state-metrics/pull/454,andyxning,add support for differenct auth provider,"**What this PR does / why we need it**:
This PR adds support for all auth providers to kube-state-metrics.
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #452 
Fixes #449 

",['brancz'],1,2018-05-06 03:36:21,2018-05-06 16:22:51,2018-05-07 02:20:25,True,2018-05-06 16:22:51,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/455,https://github.com/kubernetes/kube-state-metrics/pull/455,brancz,Release 1.3,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/devel/pull-requests.md#the-pr-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/devel/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/devel/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://github.com/kubernetes/community/blob/master/contributors/devel/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #443
 
",[],5,2018-05-07 15:01:03,2018-05-28 11:30:32,2018-05-28 11:30:32,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/456,https://github.com/kubernetes/kube-state-metrics/pull/456,andyxning,fix collectors argument panic,"**What this PR does / why we need it**:
This PR fixes panics when `--collectors` command line argument is specified. This is a regression bug in #446.

This PR adds unit tests for command line argument parse and `CollectorSet` `Set` method. 
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #446 

",['brancz'],1,2018-05-16 04:13:55,2018-05-16 10:45:28,2018-05-16 15:17:20,True,2018-05-16 10:45:28,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/462,https://github.com/kubernetes/kube-state-metrics/pull/462,while1malloc0,Add note about CPU limits,"**What this PR does / why we need it**:
This PR adds a note about imposing CPU limitations on kube-state-metrics, and the consequent memory consumption that results. It explains the consequence of imposing too low a CPU limit, the cause of unbounded memory consumption in low-CPU environments, and offer a possible fix to users who are seeing unbounded memory consumption when use kube-state-metrics. This PR was created in response to https://github.com/kubernetes/kube-state-metrics/issues/461 as temporary advice until the recommended resources can be revised. 

Fix #461 ",['brancz'],1,2018-05-24 14:24:29,2018-07-03 15:26:22,2018-07-03 15:26:22,True,2018-07-03 15:26:22,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/464,https://github.com/kubernetes/kube-state-metrics/pull/464,mindw,remove namepspace reference from persistentvolumes docs.,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/devel/pull-requests.md#the-pr-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/devel/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/devel/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://github.com/kubernetes/community/blob/master/contributors/devel/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
remove namespace reference from persistentvolumes docs
",['andyxning'],1,2018-05-26 17:21:46,2018-05-28 02:31:31,2018-05-28 05:32:46,True,2018-05-28 02:31:31,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/466,https://github.com/kubernetes/kube-state-metrics/pull/466,andyxning,add generic node resource capacity and allocatable,"**What this PR does / why we need it**:
* Adds `disable-node-none-generic-resource-metrics` command line argument to kube-state-metrics to disable old not labeled resource metrics.
* Adds generic new `kube_node_status_capacity` and `kube_node_status_allocatable`.


",['derekwaynecarr'],1,2018-05-28 05:17:04,2018-06-07 13:59:24,2018-06-08 02:27:23,True,2018-06-07 13:59:24,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/467,https://github.com/kubernetes/kube-state-metrics/pull/467,andyxning,Cherry-Pick: CHANGELOG.md: Add entry for v1.3.1,"**What this PR does / why we need it**:
This PR cherry-pick 1.3.1 release not commit to master branch
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #455 
Fixes #443

",['brancz'],1,2018-05-28 10:01:59,2018-05-28 11:30:33,2018-05-29 02:31:54,True,2018-05-28 11:30:32,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/469,https://github.com/kubernetes/kube-state-metrics/pull/469,davidxia,Fix typo in README,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/devel/pull-requests.md#the-pr-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/devel/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/devel/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://github.com/kubernetes/community/blob/master/contributors/devel/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

fixes a small typo in the README",['brancz'],1,2018-05-30 15:54:29,2018-05-30 16:06:56,2018-05-30 16:13:32,True,2018-05-30 16:06:56,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/470,https://github.com/kubernetes/kube-state-metrics/pull/470,andyxning,add SECURITY_CONTACTS,"**What this PR does / why we need it**:
This PR adds SECURITY_CONTACTS file.
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #463 

",['brancz'],1,2018-05-31 03:34:02,2018-05-31 09:28:58,2018-05-31 09:35:31,True,2018-05-31 09:28:58,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/471,https://github.com/kubernetes/kube-state-metrics/pull/471,brancz,Dockerfile: Remove `VOLUME` directive.,"The `VOLUME` directive causes Docker to provision host storage to cover
the implicitly requested volume mount. For security reasons this may be
disallowed by Kubernetes clusters, causing kube-state-metrics containers
to fail to be created.

Besides that, this directive does not do anything and to my knowledge
never did.

@andyxning 

cc @ironcladlou ",['andyxning'],1,2018-05-31 07:21:24,2018-05-31 09:15:56,2018-05-31 09:27:34,True,2018-05-31 09:15:56,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/473,https://github.com/kubernetes/kube-state-metrics/pull/473,zouyee,using defined variables instead of magic strings,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/devel/pull-requests.md#the-pr-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/devel/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/devel/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://github.com/kubernetes/community/blob/master/contributors/devel/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

using defined variables instead of magic strings for prometheus metrics lables

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['andyxning'],1,2018-06-07 02:44:18,2018-06-08 11:00:54,2018-06-08 13:33:06,True,2018-06-08 11:00:54,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/475,https://github.com/kubernetes/kube-state-metrics/pull/475,andyxning,prefer protobuf instead of just json format,"**What this PR does / why we need it**:
This PR will prefer protobuf format when communicating with apiserver instead of just json.
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #264 

",['brancz'],1,2018-06-08 07:09:40,2018-06-25 07:17:02,2018-06-25 09:00:44,True,2018-06-25 07:17:02,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/476,https://github.com/kubernetes/kube-state-metrics/pull/476,andyxning,avoid dirty hack to prometheus client,"**What this PR does / why we need it**:
This PR avoids dirty code change hack to prometheus client.


",['brancz'],1,2018-06-08 08:36:01,2018-06-12 08:56:29,2018-06-12 08:56:38,True,2018-06-12 08:56:29,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/477,https://github.com/kubernetes/kube-state-metrics/pull/477,zouyee,add  current status for each metrics,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/devel/pull-requests.md#the-pr-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/devel/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/devel/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://github.com/kubernetes/community/blob/master/contributors/devel/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Added  current status for each metrics，We define three stages for each metric.
Stable | Experimental | Deprecated
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['andyxning'],1,2018-06-08 14:16:49,2018-06-12 01:50:27,2018-06-12 02:52:03,True,2018-06-12 01:50:27,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/479,https://github.com/kubernetes/kube-state-metrics/pull/479,zouyee,Information sinking,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/devel/pull-requests.md#the-pr-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/devel/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/devel/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://github.com/kubernetes/community/blob/master/contributors/devel/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Move deprecated info into inner area

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['andyxning'],2,2018-06-14 22:26:26,2018-06-15 02:59:29,2018-06-15 02:59:29,True,2018-06-15 02:59:29,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/482,https://github.com/kubernetes/kube-state-metrics/pull/482,andyxning,adjust client-go User-Agent,"**What this PR does / why we need it**:
This RP will customize User-Agent client-go uses. This will make the User-Agent more useful and be in more Kubernetes's format:
`kube-state-metrics/v1.3.0 (linux/amd64) kube-state-metrics/64fdc24`

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['brancz'],1,2018-06-24 03:33:29,2018-06-25 09:49:03,2018-06-25 09:50:28,True,2018-06-25 09:49:03,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/483,https://github.com/kubernetes/kube-state-metrics/pull/483,andyxning,bump kubernetes to 1.11,"**What this PR does / why we need it**:
This PR will update kubernetes/client-go to v1.11.0.

This PR will also deprecate in-tree nvidia support related alpha metrics.",['brancz'],1,2018-07-02 08:42:04,2018-07-03 07:15:19,2018-07-03 08:08:38,True,2018-07-03 07:15:19,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/484,https://github.com/kubernetes/kube-state-metrics/pull/484,andyxning,Add dynamic volume,"**What this PR does / why we need it**:
This PR will adds support for dynamic volume resource in node and pod request and limit level.
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #474 
",['brancz'],1,2018-07-02 10:22:50,2018-07-03 08:30:19,2018-08-01 13:19:10,True,2018-07-03 08:30:19,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/485,https://github.com/kubernetes/kube-state-metrics/pull/485,AdamDang,Typo fix:PersistentVolumeClaim->PersistentVolume,"In the file persistentvolume-metrics.md, the title is # PersistentVolumeClaim Metrics, here should be # PersistentVolume Metrics",['brancz'],1,2018-07-06 07:30:28,2018-07-06 07:40:18,2018-07-06 07:40:18,True,2018-07-06 07:40:18,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/487,https://github.com/kubernetes/kube-state-metrics/pull/487,brancz,collectors: Change job label to job_name,"**What this PR does / why we need it**:

The job label is a reserved label in Prometheus, thus colliding with
this label causes Prometheus to automatically change this label upon
ingestion.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #338 

cc @andyxning @dannyk81 
",['andyxning'],1,2018-07-06 12:08:00,2018-07-07 01:00:18,2018-07-18 08:54:44,True,2018-07-07 01:00:18,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/488,https://github.com/kubernetes/kube-state-metrics/pull/488,brancz,Allow white- and blacklisting metrics to be exposed,"**What this PR does / why we need it**:

In large Kubernetes clusters single metrics can have a significant effect on the total number of metrics exposed by a single scrape. This PR allows white or blacklisting metrics to be exposed.

@andyxning ",['andyxning'],1,2018-07-06 13:14:59,2018-07-24 03:36:25,2018-07-24 07:20:32,True,2018-07-24 03:36:25,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/489,https://github.com/kubernetes/kube-state-metrics/pull/489,brancz,Upgrade go version,"**What this PR does / why we need it**:

This PR updates to the latest version of go which includes fixes to TLS and strings packages.

@andyxning ",['andyxning'],1,2018-07-06 13:18:25,2018-07-07 00:47:20,2018-07-07 00:47:20,True,2018-07-07 00:47:20,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/490,https://github.com/kubernetes/kube-state-metrics/pull/490,andyxning,add description about pod nanny,"**What this PR does / why we need it**:
This PR will add description about the `addon-resizer` component.
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #481

",['brancz'],1,2018-07-09 07:24:36,2018-07-12 08:54:26,2018-07-13 19:01:44,True,2018-07-12 08:54:26,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/491,https://github.com/kubernetes/kube-state-metrics/pull/491,gottwald,Fix typo in metric description,"**What this PR does / why we need it**:
Fixes a typo in the metric description kube_pod_container_resource_requests_memory_bytes
",['andyxning'],1,2018-07-10 20:31:27,2018-07-11 02:22:26,2018-07-11 02:22:26,True,2018-07-11 02:22:26,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/492,https://github.com/kubernetes/kube-state-metrics/pull/492,gottwald,Update outdated links in PR template,"**What this PR does / why we need it**:
Update outdated links in PR template
",['andyxning'],1,2018-07-10 21:52:13,2018-07-11 02:26:26,2018-07-11 02:26:26,True,2018-07-11 02:26:25,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/496,https://github.com/kubernetes/kube-state-metrics/pull/496,andyxning,add CONTRIBUTING.md,"**What this PR does / why we need it**:
This PR adds CONTRIBUTING.md file to kube-state-metrics
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #494 

",['brancz'],1,2018-07-17 10:30:04,2018-07-24 07:21:26,2018-07-24 09:31:47,True,2018-07-24 07:21:26,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/503,https://github.com/kubernetes/kube-state-metrics/pull/503,brancz,Cut v1.4.0-rc.0,"Assuming everything goes well, we will be aiming for Monday the 13th of August for the stable 1.4.0 release. I encourage everyone to test this so we can find bugs, should there be any new ones introduced.

/assign @andyxning 

@piosz @loburm please stand by to push the container images to gcr.io once this is merged.",['andyxning'],1,2018-08-06 06:57:43,2018-08-09 02:05:41,2018-08-13 09:52:27,True,2018-08-09 02:05:41,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/504,https://github.com/kubernetes/kube-state-metrics/pull/504,zouyee,add myself to review,"Recommend yourself as an reviewer

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Recommend yourself as an reviewer

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['brancz'],1,2018-08-08 08:51:54,2018-08-08 09:06:13,2018-08-10 05:52:24,True,2018-08-08 09:06:13,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/506,https://github.com/kubernetes/kube-state-metrics/pull/506,dohnto,Added init containers pod metrics.,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

**Which issue(s) this PR fixes** 
Fixes #502 

",[],1,2018-08-11 22:31:17,2018-10-02 21:46:55,2018-10-02 21:46:55,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/508,https://github.com/kubernetes/kube-state-metrics/pull/508,WakeupTsai,Add uid info in kube_pod_info metric,"**What this PR does / why we need it**:
This PR will add pod uid in the kube_pod_info metrics.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #507 
",['andyxning'],2,2018-08-13 09:41:36,2018-08-28 05:06:55,2018-08-28 05:06:55,True,2018-08-28 05:06:55,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/509,https://github.com/kubernetes/kube-state-metrics/pull/509,loburm,Update release documentation,Adds information related to staging container registry that should be used for release candidate images.,['brancz'],1,2018-08-13 09:50:50,2018-08-13 11:12:54,2018-08-16 06:46:17,True,2018-08-13 11:12:54,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/513,https://github.com/kubernetes/kube-state-metrics/pull/513,mxinden,main_test.go: Introduce overarching benchmark test,"**What this PR does / why we need it**:

This patch adds a simple go benchmark test, injecting Kubernetes objects
and simulating scrape requests. It uses the Kubernetes client-go fake
client. Alongside comes some refactoring of each collectors structure
using informer factories to be compatible with the fake client.

The patch lays the groundwork to make future performance optimizations
comparable with past versions.

How to run test:
`go test -race -bench  . -memprofile=mem.out -cpuprofile=cpu.out`

Relates to https://github.com/kubernetes/kube-state-metrics/issues/498",['brancz'],1,2018-08-15 12:11:26,2018-08-23 09:38:39,2018-08-23 09:38:39,True,2018-08-23 09:38:39,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/515,https://github.com/kubernetes/kube-state-metrics/pull/515,zouyee,introduce CustomResourceDefinitions monitor target,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
If CRD service could be monitored , it could detect the health status of crd to identify problems.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #https://github.com/kubernetes/kube-state-metrics/issues/514

/cc @brancz @andyxning ",[],2,2018-08-17 02:53:55,,2019-01-14 01:46:28,False,,,dirty,False,open
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/516,https://github.com/kubernetes/kube-state-metrics/pull/516,wangxy518,Update CONTRIBUTING.md,the url has been changed.,[],1,2018-08-17 03:02:20,2018-08-19 09:37:53,2018-08-19 09:37:53,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/519,https://github.com/kubernetes/kube-state-metrics/pull/519,zouyee,Heapster with supplementary information,"Heapster is deprecated, it need to be updated with supplementary information which would be insteaded by metrics-server.

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes https://github.com/kubernetes/kube-state-metrics/issues/518

",['andyxning'],1,2018-08-20 01:54:38,2018-08-28 03:24:46,2018-08-28 03:24:46,True,2018-08-28 03:24:46,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/520,https://github.com/kubernetes/kube-state-metrics/pull/520,andyxning,add kube_replicatset_owner metric,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
This PR adds `kube_replicaset_owner` metric.
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #510 

",['brancz'],1,2018-08-20 06:41:29,2018-08-27 05:22:36,2018-08-27 05:23:31,True,2018-08-27 05:22:36,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/521,https://github.com/kubernetes/kube-state-metrics/pull/521,MIBc,Fix a typo,,"['brancz', 'zouyee']",1,2018-08-20 07:42:06,2018-08-20 09:47:21,2018-08-20 09:47:21,True,2018-08-20 09:47:21,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/524,https://github.com/kubernetes/kube-state-metrics/pull/524,brancz,*: cut v1.4.0,"After a testing period of 16 days, there were no additional bugs found or features introduced.

@andyxning @zouyee 

cc @mxinden 

@loburm @piosz please stand by to push the final v1.4.0 image to gcr.io once this PR is merged and the tag is pushed.",['andyxning'],1,2018-08-22 11:57:03,2018-08-23 09:08:53,2018-08-31 11:12:39,True,2018-08-23 09:08:53,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/525,https://github.com/kubernetes/kube-state-metrics/pull/525,zouyee,bump addon-resizer image version,"

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
bump addon-resizer image version

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",[],1,2018-08-23 09:47:20,2018-08-24 01:03:41,2018-08-24 01:17:43,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/526,https://github.com/kubernetes/kube-state-metrics/pull/526,brancz,Merge Release 1.4 back into master,@andyxning @zouyee ,[],2,2018-08-23 10:00:53,2018-08-27 16:54:31,2018-08-27 16:54:31,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/529,https://github.com/kubernetes/kube-state-metrics/pull/529,brancz,Merge Release 1.4 back into master,"This pull request supersedes #526 .

@andyxning @zouyee 

cc @mxinden ",['andyxning'],1,2018-08-27 16:54:06,2018-08-28 01:36:01,2018-08-28 03:06:33,True,2018-08-28 01:36:01,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/531,https://github.com/kubernetes/kube-state-metrics/pull/531,zouyee,remove unused func,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
remove unused func

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['andyxning'],1,2018-08-28 08:42:47,2018-08-28 10:51:52,2018-08-28 10:51:52,True,2018-08-28 10:51:52,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/532,https://github.com/kubernetes/kube-state-metrics/pull/532,zouyee,Adding test files for local check,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Adding test files for local check

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes https://github.com/kubernetes/kube-state-metrics/issues/533

",[],1,2018-08-29 02:26:02,2019-03-08 13:34:24,2019-03-08 13:34:25,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/534,https://github.com/kubernetes/kube-state-metrics/pull/534,mxinden, pkg/collectors: Introduce MetricsStore updated by Reflectors,"**What this PR does / why we need it**:

As discussed in #498 kube-state-metrics faces the following two performance
issues when deployed in bigger Kubernetes environments:

1. Long response time on metrics scrape
2. High memory usage

This patch introduces a custom client go store, MetricsStore. It is updated by a
corresponding reflector. Instead of generating the Prometheus custom metrics on
demand, metrics are generated on new Kubernetes object arrival.

This pull request represents an early *work-in-progress* state to enable early
feedback. It targets the *performance-optimizations* branch, instead of *master*.

Known ToDos:

- Re-enable multi namespace support
- Re-enable white/black listing
- Adjust remaining `collectors/*_test.go`

**Premature benchmarking results**:

1000 configmaps, 1000 pods, 100 scrapes:





```shell
$ git checkout master
$ go test -bench .                    
goos: linux
goarch: amd64
pkg: k8s.io/kube-state-metrics
BenchmarkKubeStateMetrics-4            1        10267655552 ns/op
PASS
ok      k8s.io/kube-state-metrics       10.282s

```

[master_cpu.pdf](https://github.com/kubernetes/kube-state-metrics/files/2345809/master_cpu.pdf)
[master_mem.pdf](https://github.com/kubernetes/kube-state-metrics/files/2345810/master_mem.pdf)

```shell
$ git checkout metricsstore
$ go test -bench .
goos: linux
goarch: amd64
pkg: k8s.io/kube-state-metrics
BenchmarkKubeStateMetrics-4            1        1876562818 ns/op
--- BENCH: BenchmarkKubeStateMetrics-4
        main_test.go:39: starting kube-state-metrics benchmark with fixtureMultiplier 1000 and requestCount 100
PASS
ok      k8s.io/kube-state-metrics       1.892s
```

[metricsstore_cpu.pdf](https://github.com/kubernetes/kube-state-metrics/files/2345825/metricsstore_cpu.pdf)
[metricsstore_mem.pdf](https://github.com/kubernetes/kube-state-metrics/files/2345826/metricsstore_mem.pdf)







**Which issue(s) this PR fixes**:

Relates to https://github.com/kubernetes/kube-state-metrics/issues/498


//CC @metalmatze @brancz @squat @s-urbaniak

",['brancz'],1,2018-09-03 14:13:26,2018-10-16 14:14:04,2018-10-16 14:14:04,True,2018-10-16 14:14:04,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/535,https://github.com/kubernetes/kube-state-metrics/pull/535,jutley,Add kube_pod_container_status_last_terminated_reason,"**What this PR does / why we need it**:
This PR introduces a new metric: `kube_pod_container_status_last_terminated_reason`. 

Currently, we have the `kube_pod_container_status_terminated_reason`, but this always returns to 0 once a container starts back up. This means that we will only have a couple data points, if any at all, around the reason for a container termination. As a result, we cannot alert when a container crashes for a specific reason (we'd like to alert based on OOMs). 

This is brought up in this issue: https://github.com/kubernetes/kube-state-metrics/issues/344

**Which issue(s) this PR fixes**:
Fixes #344 

",['andyxning'],2,2018-09-04 20:11:22,2018-09-05 03:20:08,2019-04-01 08:20:41,True,2018-09-05 03:20:07,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/537,https://github.com/kubernetes/kube-state-metrics/pull/537,MIBc,Change error msg,"**What this PR does / why we need it**:
The test creates two resources(pod, configmap), not only pod added.


",[],2,2018-09-13 07:25:15,2018-09-13 07:26:19,2018-09-13 07:26:19,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/538,https://github.com/kubernetes/kube-state-metrics/pull/538,MIBc,Change error message,"**What this PR does / why we need it**:
The test creates two resources(pod, configmap), not only pod added.
",['brancz'],2,2018-09-13 07:39:10,2018-09-13 08:05:34,2018-09-13 08:08:51,True,2018-09-13 08:05:34,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/539,https://github.com/kubernetes/kube-state-metrics/pull/539,abinet,add an example of joining the metrics in docs,"This PR adds an example for joining the metrics as per discussion in https://github.com/kubernetes/kube-state-metrics/issues/536

Fix #536 ",['brancz'],3,2018-09-14 14:53:04,2018-09-18 07:08:26,2018-09-18 07:13:50,True,2018-09-18 07:08:25,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/541,https://github.com/kubernetes/kube-state-metrics/pull/541,thedebugger,Add init container metrics,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #502

",[],1,2018-09-18 06:55:25,,2019-03-18 17:12:34,False,,,dirty,False,open
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/545,https://github.com/kubernetes/kube-state-metrics/pull/545,tomwilkie,"Export stateful sets status.{current_revision,update_revision}","Signed-off-by: Tom Wilkie <tom.wilkie@gmail.com>

**What this PR does / why we need it**:

~Turns out probably not necessary, was looking to build an alert for non-updated pods, `kube_statefulset_status_replicas_updated != kube_statefulset_replicas`.~

Nope, above query only works for statefulsets with updated.  You need `max without (revision) (kube_statefulset_status_current_revision unless kube_statefulset_status_update_revision) * (kube_statefulset_replicas != kube_statefulset_status_replicas_updated)` to find stateful sets with updates that haven't been rolled out.

",['brancz'],2,2018-09-26 15:08:44,2018-09-26 16:46:42,2018-11-15 11:45:03,True,2018-09-26 16:46:42,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/549,https://github.com/kubernetes/kube-state-metrics/pull/549,ehashman,Add changelog note for breaking change in #371,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

Adds a note about breaking changes to the CHANGELOG for the 1.2.0 -> 1.3.0 upgrade.

The changelog does not currently warn about the deprecation of the `--in-cluster` flag, meaning that users on 1.2.0 releases and earlier who use `--apiserver` with the default `--in-cluster=true` flag have authentication break on upgrade.

**Which issue(s) this PR fixes**:

Fixes #543.

**Other notes:**

The behaviour from 1.2.0 can be emulated on upgrade by removing the `--apiserver` flag and setting the environment variable `KUBERNETES_SERVICE_HOST` to the API server value.
",['andyxning'],1,2018-09-28 21:32:06,2018-10-09 01:48:46,2018-10-09 01:48:46,True,2018-10-09 01:48:45,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/551,https://github.com/kubernetes/kube-state-metrics/pull/551,gregory-lyons,Add PodDisruptionBudget metrics,"**What this PR does / why we need it**:
Adds metrics for PodDisruptionBudget

**Which issue(s) this PR fixes** :
Fixes #546 

",['brancz'],1,2018-10-02 05:02:40,2018-10-19 08:18:38,2018-10-19 08:18:38,True,2018-10-19 08:18:38,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/552,https://github.com/kubernetes/kube-state-metrics/pull/552,lostick,Update add on resizer,"**What this PR does / why we need it**:
• Update addon-resizer with latest changes
• Bump minimum requests & limits as I have observed that kube-state-metrics pods often get killed on our kubernetes clusters with the minimum resources.

",['andyxning'],1,2018-10-05 21:01:34,2018-10-08 02:50:02,2018-10-08 02:50:02,True,2018-10-08 02:50:02,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/553,https://github.com/kubernetes/kube-state-metrics/pull/553,colmose,Fix link href,"**What this PR does / why we need it**:
One of the hrefs in your README is broken currently. 

This updates with the correct link reference

",['brancz'],1,2018-10-10 15:35:43,2018-10-15 12:08:45,2018-10-24 18:32:07,True,2018-10-15 12:08:45,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/560,https://github.com/kubernetes/kube-state-metrics/pull/560,jhelbling,missed required rbac permissions,"
Version: kube-state-metrics:v1.4.0


kubectl version


Client Version: version.Info{Major:""1"", Minor:""12"", GitVersion:""v1.12.0"", GitCommit:""0ed33881dc4355495f623c6f22e7dd0b7632b7c0"", GitTreeState:""clean"", BuildDate:""2018-09-28T15:18:13Z"", GoVersion:""go1.11"", Compiler:""gc"", Platform:""darwin/amd64""}
Server Version: version.Info{Major:""1"", Minor:""10"", GitVersion:""v1.10.8"", GitCommit:""7eab6a49736cc7b01869a15f9f05dc5b49efb9fc"", GitTreeState:""clean"", BuildDate:""2018-09-14T15:54:20Z"", GoVersion:""go1.9.3"", Compiler:""gc"", Platform:""linux/amd64""}


```
E1017 06:46:05.408015       1 reflector.go:205] k8s.io/kube-state-metrics/pkg/collectors/collectors.go:91: Failed to list *v1beta1.StatefulSet: statefulsets.apps is forbidden: User ""system:serviceaccount:kube-system:kube-state-metrics"" cannot list statefulsets.apps at the cluster scope
E1017 06:46:05.408210       1 reflector.go:205] k8s.io/kube-state-metrics/pkg/collectors/collectors.go:91: Failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User ""system:serviceaccount:kube-system:kube-state-metrics"" cannot list replicationcontrollers at the cluster scope
E1017 06:46:05.410535       1 reflector.go:205] k8s.io/kube-state-metrics/pkg/collectors/collectors.go:91: Failed to list *v2beta1.HorizontalPodAutoscaler: horizontalpodautoscalers.autoscaling is forbidden: User ""system:serviceaccount:kube-system:kube-state-metrics"" cannot list horizontalpodautoscalers.autoscaling at the cluster scope``
```",[],1,2018-10-17 06:53:35,2018-10-17 06:58:09,2018-10-17 06:58:45,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/562,https://github.com/kubernetes/kube-state-metrics/pull/562,LiliC,README: Update compatibility matrix to include 1.12,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Update compatibility matrix to include 1.12. 
Note: I tested latest release on a 1.12 cluster. 

",['brancz'],1,2018-10-17 10:36:12,2018-10-17 11:58:09,2018-10-17 12:18:22,True,2018-10-17 11:58:09,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/563,https://github.com/kubernetes/kube-state-metrics/pull/563,mxinden,pkg/options: Add flag to enable gzip encoding for responses,"**What this PR does / why we need it**:

Dependent on the environment users might or might not want to encode the
responses of kube-state-metrics via gzip independent of the
`Accept-Header` that the client (Prometheus) sends.

This patch adds a corresponding command line flag.

As I am still evaluating whether to enable or disable gzip by default, this is a *work-in-progress* pull request. Thoughts are welcome.

",['brancz'],1,2018-10-17 12:10:29,2018-10-24 14:26:09,2018-10-24 14:26:09,True,2018-10-24 14:26:09,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/564,https://github.com/kubernetes/kube-state-metrics/pull/564,AjayTripathy,update documentation to reflect case-sensitivity issues in gcloud,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Better documentation is always good. Took me about two hours to figure out why the referenced one-liner wasn't working for me, hopefully I can save someone else a little time.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #558

","['andyxning', 'brancz']",1,2018-10-18 22:03:44,2018-10-23 09:42:07,2018-10-23 09:42:07,True,2018-10-23 09:42:07,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/565,https://github.com/kubernetes/kube-state-metrics/pull/565,mxinden,README.md: Remove reference to Prometheus client_golang library,"**What this PR does / why we need it**:

With the recent performance optimization, the Prometheus client_golang
library was replaced by custom logic. This patch removes the outdated
reference in the README.md.

//CC @LiliC

",['brancz'],1,2018-10-22 08:38:20,2018-10-24 15:48:09,2018-10-24 15:48:09,True,2018-10-24 15:48:09,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/566,https://github.com/kubernetes/kube-state-metrics/pull/566,beorn7,Pre-allocate the metrics slice in `GetAll`,"**What this PR does / why we need it**:

This method is the heaviest allocator. Pre-allocation will not help a
lot, but I guess every little helps... (Plus, it's really easy.)

**Which issue(s) this PR fixes**

It's related to #498 . See analysis there.

@mxinden 

",['brancz'],1,2018-10-22 19:58:33,2018-10-23 09:39:52,2018-10-23 10:15:52,True,2018-10-23 09:39:52,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/567,https://github.com/kubernetes/kube-state-metrics/pull/567,mxinden,pkg/metrics: Tune NewMetrics function,"**What this PR does / why we need it**:

This patch tunes the `NewMetrics` function based on optimizations discussed in https://github.com/prometheus/common/pull/148 and https://github.com/kubernetes/kube-state-metrics/issues/498#issuecomment-431882415 (//CC @beorn7).

- Use strings.Builder minimizing memory allocations.

- Use strconv to render float64 in combination with a []byte buffer pool
instead of fmt.Sprintf reducing memory allocations.

- Only sort labels of metrics in test framework, not by default (e.g. in
production).

Benchmark patch:

```bash
go get golang.org/x/tools/cmd/benchcmp

git checkout perf-exp~1
go test -v -bench=NewMetric  -run=^$  -benchmem ./pkg/metrics/... > old.txt

git checkout perf-exp
go test -v -bench=NewMetric  -run=^$  -benchmem ./pkg/metrics/... > new.txt

benchcmp old.txt new.txt

benchmark                           old ns/op     new ns/op     delta
BenchmarkNewMetric/value-1-4        2652          612           -76.92%
BenchmarkNewMetric/value-35.7-4     2706          755           -72.10%

benchmark                           old allocs     new allocs     delta
BenchmarkNewMetric/value-1-4        32             6              -81.25%
BenchmarkNewMetric/value-35.7-4     32             6              -81.25%

benchmark                           old bytes     new bytes     delta
BenchmarkNewMetric/value-1-4        1616          528           -67.33%
BenchmarkNewMetric/value-35.7-4     1616          528           -67.33%
```



",['brancz'],2,2018-10-24 08:26:35,2018-10-29 13:46:39,2018-10-29 15:17:26,True,2018-10-29 13:46:39,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/571,https://github.com/kubernetes/kube-state-metrics/pull/571,patstrom,Add external name/ip and load balancer ingress to service collector,"

**What this PR does / why we need it**:

Add some more metrics about services. While these metrics don't change much having them collected by kube-state-metrics would allow admins to share e.g AWS ELB DNS names associated with services on platforms like Grafana.


Fixes #544
",['brancz'],3,2018-10-25 16:12:01,2018-11-09 13:53:06,2018-11-19 12:21:52,True,2018-11-09 13:53:06,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/572,https://github.com/kubernetes/kube-state-metrics/pull/572,mxinden,pkg/metrics: Write newline as byte with strings.Builder,"**What this PR does / why we need it**:

Write newline with `WriteByte` for higher performance.

Origins from https://github.com/kubernetes/kube-state-metrics/pull/567#discussion_r228943917

//CC @brancz @beorn7 ",['brancz'],1,2018-10-29 15:17:07,2018-10-29 15:26:54,2018-10-29 15:31:38,True,2018-10-29 15:26:54,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/575,https://github.com/kubernetes/kube-state-metrics/pull/575,LiliC,Making kube-state-metrics a library,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
`kube-state-metrics` has many useful parts which could be used as library, this is the first step towards that.

For now only the functions are exposed and some helper functions moved to a different place. In the long term I would prefer to end with the following structure:
```
pkg
├── collector // functions needed to create a collector, this would be used in the builder pkg and externally 
├── internal
│   └── builder // content of the current upstream resource collectors which would consume the collector pkg
├── metrics // what is currently there but also move the utils/helper functions from collectors. Also the metricHandler interface as that would be useful to expose and reuse elsewhere.

```
Any thoughts on the above are welcome, I can also open an issue to discuss it?
",['brancz'],9,2018-11-01 09:42:30,2018-11-02 14:20:20,2018-11-02 14:28:30,True,2018-11-02 14:20:20,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/577,https://github.com/kubernetes/kube-state-metrics/pull/577,mxinden,pkg/collectors: Renable white-/blacklisting and HELP text,"**What this PR does / why we need it**:

- Reenable feature to filter the exposition of metric families by their
name. This is now done at startup time, thereby not slowing down the
critical path.

- Expose metrics grouped by their metric family and prefix each metric
family with their HELP text. In the future this can easily be extended
to also expose the TYPE text.

(- This also paved the path for sorting the exposed metrics in a
zero-cost manner if this is wanted (//CC @beorn7).)

Relates to https://github.com/kubernetes/kube-state-metrics/issues/557


",['brancz'],8,2018-11-01 14:34:57,2018-11-20 16:55:16,2018-11-27 15:36:09,True,2018-11-20 16:55:15,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/578,https://github.com/kubernetes/kube-state-metrics/pull/578,naseemkullah,Adding CreateContainerConfigError as possible reason for container no…,"

**What this PR does / why we need it**:

For alerts based off `kube_pod_container_status_waiting_reason` metric to go off in event of `CreateContainerConfigError`

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes https://github.com/prometheus/prometheus/issues/4815

",['brancz'],3,2018-11-06 15:38:36,2018-11-07 15:00:18,2018-11-07 15:13:02,True,2018-11-07 15:00:18,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/581,https://github.com/kubernetes/kube-state-metrics/pull/581,mooncak,Fix typos: cleaup -> cleanup,"Signed-off-by: mooncake <xcoder@tenxcloud.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Fix typos: cleaup -> cleanup

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['brancz'],1,2018-11-10 16:04:16,2018-11-12 14:00:07,2018-11-12 14:00:07,True,2018-11-12 14:00:07,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/582,https://github.com/kubernetes/kube-state-metrics/pull/582,charlieegan3,Correct readme Deployment -> Development typo,"

**What this PR does / why we need it**:
This anchor link wasn't working - it was pointing to a non-existent ID.

",['andyxning'],1,2018-11-10 22:08:43,2018-11-11 01:52:06,2018-11-11 11:19:18,True,2018-11-11 01:52:06,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/586,https://github.com/kubernetes/kube-state-metrics/pull/586,mxinden,pkg/metrics_store: Cache objects by uid not name,"**What this PR does / why we need it**:

Previously the metrics store would cache metrics of Kubernetes objects
by object name. A name is not unique as two namespaces can each have an
object with the same name.

Instead cache objects by their uid which is unique across the cluster.

Thanks @gregory-lyons for the catch.

**Which issue(s) this PR fixes**

Fixes https://github.com/kubernetes/kube-state-metrics/issues/585

This probably relates to the missing metrics referenced in https://github.com/kubernetes/kube-state-metrics/issues/498#issuecomment-431931146.

",['brancz'],1,2018-11-16 12:43:27,2018-11-16 12:50:03,2018-11-16 18:35:39,True,2018-11-16 12:50:03,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/587,https://github.com/kubernetes/kube-state-metrics/pull/587,mxinden,main_test.go: Extend pod fixture and fix bench set bytes,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

Extending pod fixture for better benchmarking.


",['brancz'],1,2018-11-22 10:04:05,2018-11-22 15:19:42,2018-11-22 15:19:42,True,2018-11-22 15:19:42,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/588,https://github.com/kubernetes/kube-state-metrics/pull/588,mxinden,pkg/builder: Make collector order deterministic,"**What this PR does / why we need it**:

Instead of iterating a map of enabled collectors, iterate a sorted
slice to achieve determinism across scrapes.

Having a consistent order in the metrics output enables Proemetheus to
apply optimizations during metric parsing and ingestion.
",['brancz'],1,2018-11-22 10:09:21,2018-11-22 15:21:26,2018-11-22 15:21:26,True,2018-11-22 15:21:26,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/589,https://github.com/kubernetes/kube-state-metrics/pull/589,mxinden,pkg/collectors: Refactor Cron Job and Config Map collector,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

This patch refactors the cron job and config map collector to the format introduced in https://github.com/kubernetes/kube-state-metrics/pull/577.
",['brancz'],2,2018-11-22 10:12:37,2018-11-26 14:02:36,2018-11-26 14:02:37,True,2018-11-26 14:02:36,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/590,https://github.com/kubernetes/kube-state-metrics/pull/590,mxinden,pkg/collectors: Refactor deployment and daemonset,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

This patch refactors the daemon set and deployment collector to the format introduced in #577.
",['brancz'],2,2018-11-22 17:17:37,2018-11-23 08:53:36,2018-11-23 08:53:36,True,2018-11-23 08:53:36,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/591,https://github.com/kubernetes/kube-state-metrics/pull/591,mxinden,pkg/collectors: Refactor endpoint and hpa collector,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

This patch refactors the endpoint and horizontal pod autoscaler collector to the format introduced in #577.


",['brancz'],3,2018-11-23 08:43:40,2018-11-28 18:00:53,2018-11-28 18:00:54,True,2018-11-28 18:00:53,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/592,https://github.com/kubernetes/kube-state-metrics/pull/592,mxinden,pkg/collectors: Refactor job and limit range collector,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
This patch refactors the job and limit range collector to the format introduced in #577.
",['brancz'],2,2018-11-23 10:42:49,2018-11-23 13:36:57,2018-11-23 13:36:57,True,2018-11-23 13:36:57,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/593,https://github.com/kubernetes/kube-state-metrics/pull/593,mxinden,pkg/collectors: Refactor namespace and node collector,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

This patch refactors the namespace and node collector to the format introduced in #577.
",['brancz'],2,2018-11-26 12:04:40,2018-11-26 12:41:00,2018-11-26 12:41:00,True,2018-11-26 12:41:00,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/594,https://github.com/kubernetes/kube-state-metrics/pull/594,mxinden,pkg/collectors: Refactor persistent volume & claim collector,"

**What this PR does / why we need it**:

This patch refactors the persistent volume and persistent volume claim collector to the format introduced in #577.
",['brancz'],2,2018-11-26 14:30:06,2018-11-26 15:24:57,2018-11-26 15:24:57,True,2018-11-26 15:24:57,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/595,https://github.com/kubernetes/kube-state-metrics/pull/595,mxinden,pkg/collectors: Refactor pod disruption budget and replica set collector,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

This patch refactors the pod disruption budget and replica set collector to the format introduced in #577.
",['brancz'],2,2018-11-27 13:50:46,2018-11-27 15:38:28,2018-11-27 15:38:28,True,2018-11-27 15:38:27,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/596,https://github.com/kubernetes/kube-state-metrics/pull/596,mxinden,pkg/collectors: Refactor replication controller and resource quota collector,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

This patch refactors the replication controller and resource quota collector to the format introduced in #577.
",['brancz'],2,2018-11-27 16:26:33,2018-11-28 13:47:18,2018-11-28 13:47:18,True,2018-11-28 13:47:18,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/597,https://github.com/kubernetes/kube-state-metrics/pull/597,mxinden,pkg/collectors: Refactor secret and stateful set collector,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

This patch refactors the secret and stateful set collector to the format introduced in #577.
",['brancz'],2,2018-11-28 09:39:29,2018-11-28 10:22:42,2018-11-28 10:22:43,True,2018-11-28 10:22:42,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/598,https://github.com/kubernetes/kube-state-metrics/pull/598,mxinden,*: Reintroduce TYPE text,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

Prometheus exposes the [type](https://prometheus.io/docs/concepts/metric_types/) of a metric family as a header line. This patch reintroduces this feature to the performance optimized version.

This patch is based on https://github.com/kubernetes/kube-state-metrics/pull/591. Once that is merged, this can follow along.

",['brancz'],1,2018-11-28 16:58:15,2018-11-29 11:39:30,2018-11-29 11:39:30,True,2018-11-29 11:39:30,k8s-ci-robot,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/599,https://github.com/kubernetes/kube-state-metrics/pull/599,mxinden,Merge performance optimizations into master,"**What this PR does / why we need it**:

Given that all collectors are now updated to the new performance optimized architecture, we can go ahead and merge the optimizations into master. What do you all think?

",['brancz'],43,2018-11-29 11:41:47,2018-11-29 14:56:28,2018-12-14 16:05:44,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/601,https://github.com/kubernetes/kube-state-metrics/pull/601,mxinden,Merge performance optimization into master,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

Given that all collectors are now updated to the new performance optimized architecture, we can go ahead and merge the optimizations into master. What do you all think?

This is rebased onto current master to get rid of the merge commits and the thereby implied CLA issues. For more info see https://github.com/kubernetes/kube-state-metrics/pull/599.

",['brancz'],31,2018-11-29 14:55:51,2018-11-29 16:10:25,2018-12-14 16:06:04,True,2018-11-29 16:10:24,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/607,https://github.com/kubernetes/kube-state-metrics/pull/607,mxinden,*: Cut v1.5.0-alpha.0,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

Cut a first v1.5.0 alpha release.

**Which issue(s) this PR fixes**:

Fixes https://github.com/kubernetes/kube-state-metrics/issues/557

",['brancz'],1,2018-11-30 09:18:12,2018-11-30 09:55:31,2018-11-30 13:36:12,True,2018-11-30 09:55:31,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/608,https://github.com/kubernetes/kube-state-metrics/pull/608,mxinden,tests: Add stability notice to lib pkg,"
**What this PR does / why we need it**:

This patch adds a stability notice to the `tests/lib` package making sure no one depends on kube-state-metrics as a library and expects a stable interface.

While we are already in the package, it also adds a license header to the `lib_test.go` file.

For now this pull request targets the `release-1.5` branch. This can later on be merged back into `master`.
",['brancz'],1,2018-11-30 16:13:31,2018-11-30 18:14:29,2018-11-30 18:14:29,True,2018-11-30 18:14:29,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/609,https://github.com/kubernetes/kube-state-metrics/pull/609,mxinden,tests: Add stability notice to lib pkg - back to master,"**What this PR does / why we need it**:

As I can't merge `release-1.5` back into `master` due to the @k8s-merge-robot merge commit that violates the CLA check, this is a follow up pull request to https://github.com/kubernetes/kube-state-metrics/pull/608 at least sharing the base commit.
",['brancz'],1,2018-11-30 22:02:35,2018-12-05 15:35:52,2018-12-05 15:35:52,True,2018-12-05 15:35:52,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/610,https://github.com/kubernetes/kube-state-metrics/pull/610,Chenditang,Add metric for persistent volume claims accessmodes.,"**What this PR does / why we need it**:
Add metric for persistent volume claims accessmodes.
```
# HELP kube_persistentvolumeclaim_spec_accessmodes The accessmodes requested by the persistent volume claim.
# TYPE kube_persistentvolumeclaim_spec_accessmodes gauge
kube_persistentvolumeclaim_spec_accessmodes{namespace=""default"",persistentvolumeclaim=""testpvc"",accessmodes=""ReadWriteOnce""} 0
kube_persistentvolumeclaim_spec_accessmodes{namespace=""default"",persistentvolumeclaim=""testpvc"",accessmodes=""ReadOnlyMany""} 0
kube_persistentvolumeclaim_spec_accessmodes{namespace=""default"",persistentvolumeclaim=""testpvc"",accessmodes=""ReadWriteMany""} 1
```

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #554",[],1,2018-12-04 08:39:05,,2019-03-01 17:15:37,False,,,dirty,False,open
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/613,https://github.com/kubernetes/kube-state-metrics/pull/613,brancz,Introduce sharding (and experimental auto-sharding),"**What this PR does / why we need it**:

This PR introduces sharding capabilities for kube-state-metrics, as well as the experimental feature to have kube-state-metrics automatically detect sharding, by discovering its nominal position within a StatefulSet and using the number of replicas in the StatefulSet as the total number of shards. I added a further description of the mechanism to the documentation.

These features will allow kube-state-metrics to be easily auto-scaled with the horizontal-pod-autoscaler by using its latency of `/metrics` requests to be lower than a certain threshold, otherwise scaling it up, as the latency is directly related to the amount of objects a shard needs to handle and the more replicas in a setup, the lower the number of objects, therefore a lower latency, as each shard handles 1/nth of objects in the cluster.

kube-state-metrics is well optimized, but in order to scale it infinitely and on commodity hardware it is necessary to shard the work it needs to do.

Note, I do not intend to ship these features in the already started release series of 1.5.x of kube-state-metrics, but rather release following it.

@andyxning @zouyee @mxinden @s-urbaniak @squat @metalmatze ",[],2,2018-12-08 23:17:28,,2019-03-07 15:53:14,False,,,dirty,False,open
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/614,https://github.com/kubernetes/kube-state-metrics/pull/614,zouyee,exchange heapster status,"

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
remove heapster description using metrics-server instead.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['andyxning'],1,2018-12-11 02:20:05,2018-12-26 09:15:46,2018-12-26 09:15:46,True,2018-12-26 09:15:46,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/615,https://github.com/kubernetes/kube-state-metrics/pull/615,zouyee,fix go fmt check,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
fix go fmt check

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['andyxning'],1,2018-12-11 03:03:35,2018-12-11 05:09:00,2018-12-11 05:09:00,True,2018-12-11 05:09:00,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/616,https://github.com/kubernetes/kube-state-metrics/pull/616,MIBc,Add labels in Exposed Metrics documentation,"
**What this PR does / why we need it**:
Documentation lacks some labels in node and pod metrics .

",['andyxning'],2,2018-12-11 07:24:48,2018-12-12 02:20:29,2018-12-12 02:58:01,True,2018-12-12 02:20:29,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/617,https://github.com/kubernetes/kube-state-metrics/pull/617,mxinden,*: Cut v1.5.0-beta.0,"**What this PR does / why we need it**:

Cut v1.5.0-beta.0 of kube-state-metrics. I am not entirely sure what the time between alpha and beta was in the past but given that there are no bug reports so far I would suggest moving on to a beta release.

What are your thoughts?

",['brancz'],1,2018-12-11 14:03:28,2018-12-11 18:14:33,2018-12-12 02:02:52,True,2018-12-11 18:14:33,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/618,https://github.com/kubernetes/kube-state-metrics/pull/618,MIBc,Clear TODO comment in builder.go,"

**What this PR does / why we need it**:
Clear comment --- ""TODO : What if not ok?"". Because the collector's name has been checked in CollectorSet.Set function. It will exit if collector' name is not in DefaultCollectors. 
As a result, all collectors in Build.enabledCollectors will find its constructor function. 
So I think it doesn't exist ""not ok"" situation.

",['brancz'],1,2018-12-13 08:01:27,2018-12-14 15:54:59,2018-12-14 15:54:59,True,2018-12-14 15:54:59,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/619,https://github.com/kubernetes/kube-state-metrics/pull/619,MIBc,Delete it,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",[],3,2018-12-14 06:50:00,2018-12-14 06:50:09,2018-12-14 06:50:10,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/620,https://github.com/kubernetes/kube-state-metrics/pull/620,LiliC,pkg/collectors: Remove leftover commented code,"**What this PR does / why we need it**:
As the `buildStatefulSetCollector` function has been refactored this code
can be removed.

cc @mxinden 


",['andyxning'],1,2018-12-20 14:53:36,2018-12-27 10:11:25,2019-01-14 11:51:29,True,2018-12-27 10:11:25,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/621,https://github.com/kubernetes/kube-state-metrics/pull/621,svend,Cleanup whitespace in Kuberernetes manifest files,"Remove trailing whitespace and trailing newlines. Some of the manifests had trailing blank lines, others did not. Remove all trailing blank lines for consistency.

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

Cleans whitespace in manifest files for consistency. No other changes.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #",['andyxning'],1,2018-12-21 18:12:11,2018-12-27 10:13:09,2018-12-27 10:13:09,True,2018-12-27 10:13:09,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/624,https://github.com/kubernetes/kube-state-metrics/pull/624,gjtempleton,Correct typo on new metric name,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Correct metric name in CHANGELOG.md from kube_replictaset_owner -> kube_replicaset_owner see #520 for reason it's been misnamed


",['andyxning'],1,2019-01-04 15:40:45,2019-01-06 04:22:40,2019-01-06 08:34:33,True,2019-01-06 04:22:40,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/625,https://github.com/kubernetes/kube-state-metrics/pull/625,byxorna,fix labels for job metrics,"**What this PR does / why we need it**:

https://github.com/kubernetes/kube-state-metrics/pull/487 changed the `job` label on some metrics to `job_name`. This PR updates docs to reflect the correct label names for `kube_job_*` metrics.


",['andyxning'],1,2019-01-04 21:51:36,2019-01-06 05:21:19,2019-01-06 05:21:19,True,2019-01-06 05:21:19,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/626,https://github.com/kubernetes/kube-state-metrics/pull/626,tariq1890,version bumps and minor improvements in Dockerfile,"Signed-off-by: tariqibrahim <tariq181290@gmail.com>


**What this PR does / why we need it**:

Minor improvements and staying up to date.

",['andyxning'],1,2019-01-05 04:52:30,2019-01-06 05:28:58,2019-01-15 06:04:51,True,2019-01-06 05:28:58,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/627,https://github.com/kubernetes/kube-state-metrics/pull/627,MarcusNoble,Added additional labels for pod metrics,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Add additional labels to the `kube_pod_status_ready` and `kube_pod_status_scheduled` metrics to provide the `host_ip`, `pod_ip`, `uid` and `node`.

This brings the values more in line with the `kube_pod_info` metric.

**Which issue(s) this PR fixes**:
N/A

",[],1,2019-01-08 12:10:39,2019-01-08 13:45:37,2019-01-08 13:45:37,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/629,https://github.com/kubernetes/kube-state-metrics/pull/629,brancz,Cut 1.5.0,"After an additional testing period of 30 days, there were no additional bugs found or features introduced. Due to no bugs being reported over an in total 41 days period, I feel no more pre-releases are necessary for a stable release.

This release's focus was a large architectural change in order to improve performance and resource usage of kube-state-metrics drastically. Special thanks to @mxinden for his hard work on this! See the changelog of the pre-releases for more detailed information and related pull requests.

@metalmatze @s-urbaniak @mxinden @squat @andyxning @zouyee 

@loburm @piosz @kawych @DirectXMan12 please stand by to publish the gcr.io image.",['andyxning'],2,2019-01-10 10:42:45,2019-01-11 08:54:46,2019-01-14 15:25:56,True,2019-01-11 08:54:46,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/630,https://github.com/kubernetes/kube-state-metrics/pull/630,ankon,Remove the mentioning of `ksm_scrape_error_total` and `ksm_resources_per_scrape` metrics,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

It removes outdated documentation.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #623

",['brancz'],1,2019-01-10 11:09:48,2019-01-10 12:23:10,2019-01-11 08:53:18,True,2019-01-10 12:23:09,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/631,https://github.com/kubernetes/kube-state-metrics/pull/631,ankon,Remove the obsolete metrics code,"These stopped getting populated with 234d788a0d5cfac2b5bf33153afd3b944c39b220, and
cannot be restored easily.

Related-to: #623

_This is intended for after 1.5.0, as per https://github.com/kubernetes/kube-state-metrics/pull/629#issuecomment-453057404_

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

It removes obsolete code that could be misleading when reading this in the future.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:


",['brancz'],1,2019-01-10 11:11:02,2019-01-14 11:20:36,2019-01-14 11:21:08,True,2019-01-14 11:20:36,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/632,https://github.com/kubernetes/kube-state-metrics/pull/632,LiliC,*: Move collectors pkg to internal dir,"Rename the existing functions that are used in collectors to collector
pkg.

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Expose helper functions that can be used outside of kube-state-metrics and move collector package `collectors` to internal package. The `internal` directory is in the root of the project, this is so we can call this in the `main.go` file, import of a path containing the element “internal” is disallowed if the importing code is outside the tree rooted at the parent of the “internal” directory.

This is what we need from kube-state-metrics, but if @wanghaoran1988 needs something more, I can adjust things. Also open for naming discussions, etc. :)

cc @mxinden @brancz 

**Which issue(s) this PR fixes**:
Fixes https://github.com/kubernetes/kube-state-metrics/issues/579

",['brancz'],1,2019-01-15 17:58:12,2019-01-23 16:34:45,2019-03-05 08:35:01,True,2019-01-23 16:34:45,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/633,https://github.com/kubernetes/kube-state-metrics/pull/633,mxinden,Deduplicate metric name,"**What this PR does / why we need it**:

Instead of defining the metric name both in the metric family generator
as well as the metric itself, with this patch the metric name is
injected into the metric family by the metric family generator.
",['brancz'],1,2019-01-16 12:15:44,2019-01-28 11:00:18,2019-01-28 13:42:11,True,2019-01-28 11:00:18,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/634,https://github.com/kubernetes/kube-state-metrics/pull/634,brancz,OWNERS: Add @mxinden,"Given @mxinden probably knows this code base the best right now. It's only fair to have him be an owner. Congrats!

@andyxning @zouyee ",['andyxning'],1,2019-01-16 15:03:51,2019-01-17 02:03:09,2019-01-17 11:31:12,True,2019-01-17 02:03:09,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/635,https://github.com/kubernetes/kube-state-metrics/pull/635,tariq1890,clarify the import location of Store interface in comments,Minor correction in comments to indicate that we are importing from client-go and not upstream k8s :),"['brancz', 'mxinden']",1,2019-01-17 22:42:42,2019-01-18 07:57:14,2019-01-19 03:35:19,True,2019-01-18 07:57:14,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/636,https://github.com/kubernetes/kube-state-metrics/pull/636,tariq1890,run gofmt -s on all of the source files,Running gofmt simplify on all the files,['andyxning'],1,2019-01-19 03:34:12,2019-01-22 01:46:31,2019-01-22 01:46:44,True,2019-01-22 01:46:31,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/637,https://github.com/kubernetes/kube-state-metrics/pull/637,mxinden,tests: Add check-license script,"**What this PR does / why we need it**:

Add a script to check, whether each golang file has a license header.","['andyxning', 'brancz']",1,2019-01-21 15:08:17,2019-01-22 13:35:57,2019-01-22 13:35:57,True,2019-01-22 13:35:57,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/638,https://github.com/kubernetes/kube-state-metrics/pull/638,kminehart,Add replicaset label metrics,"<!--  Thanks for sending a pull request!  Here are some tips for you:
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**: This PR adds the `kube_replicaset_labels` metric. In some edge case scenarios this can be useful.

In our environment, we heavily use labels for tenancy. Developers want to be able to see how often they ""deploy"" an update; this can normally be done using `kube_deployment_created`, unless the deployment is updated. When the deployment is updated, a new replicaset is created, so we use `kube_replicaset_created`, but we can not determine what team owns the replicaset without being able to access its labels

I'm having minikube issues so I'm unable to run the e2e tests locally :sweat_smile: ","['brancz', 'mxinden']",3,2019-01-22 17:01:19,2019-01-23 09:21:06,2019-01-23 09:21:06,True,2019-01-23 09:21:06,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/639,https://github.com/kubernetes/kube-state-metrics/pull/639,LiliC,*: Set e2e test env variables in .travis.yaml,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
If you run the make target for e2e tests locally this will by default presume you are running in CI and reinstall minikube, etc.

This adds the env variables to `.travis.yaml` instead and updates the documentation.


",['brancz'],1,2019-01-24 14:18:49,2019-01-24 15:30:26,2019-01-24 15:39:36,True,2019-01-24 15:30:26,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/640,https://github.com/kubernetes/kube-state-metrics/pull/640,r0fls,add ingress labels,"**What this PR does / why we need it**:
Add an Ingress collector. There is currently no ingress collector.

**Which issue(s) this PR fixes**:
Fixes #573 
",['mxinden'],3,2019-01-24 23:27:09,2019-02-06 09:20:15,2019-03-29 11:44:23,True,2019-02-06 09:20:15,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/641,https://github.com/kubernetes/kube-state-metrics/pull/641,tariq1890,use the latest patch release of go 1.11,Updating to go 1.11.5 since it has security fixes.,['andyxning'],1,2019-01-27 01:17:30,2019-01-28 01:53:16,2019-01-28 01:53:16,True,2019-01-28 01:53:16,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/642,https://github.com/kubernetes/kube-state-metrics/pull/642,tariq1890,remove dependency on kubernetes/kubernetes,"It is considered best practice to not rely on kubernetes/kubernetes as a dependency as it's not really meant for external consumption.

Moreover, the methods and variables imported in this project are simple logic which can just reside in the project itself IMO.

This PR addresses that",['brancz'],3,2019-01-27 01:43:10,2019-01-31 15:28:35,2019-01-31 15:28:35,True,2019-01-31 15:28:35,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/643,https://github.com/kubernetes/kube-state-metrics/pull/643,mxinden,tests: Add benchmark compare script and include in CI,"**What this PR does / why we need it**:

Add a script that runs all benchmark tests on the current git ref and
the last release and add it to the Makefile and .travis.yml file.

This does not enforce certain benchmark results, but at least gives people the chance to easily compare their changes performance-wise.

Idea came up here: https://github.com/kubernetes/kube-state-metrics/pull/633#issuecomment-458084905",['brancz'],1,2019-01-28 13:41:35,2019-01-29 12:08:25,2019-01-29 12:08:25,True,2019-01-29 12:08:24,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/644,https://github.com/kubernetes/kube-state-metrics/pull/644,mxinden,pkg/metric/generator: Refactor GenerateFunc call and return pointer,"**What this PR does / why we need it**:

**pkg/metric/generator: Introduce Generate method calling GenerateFunc**

Instead of making an external component responsible of adding the family name to
each family, enforce this in the generator via the `Generate` function.

**pkg/metric/generator: Make GenerateFunc return pointer to Family**

Instead of returning a Family right away, make GenerateFunc return a pointer to
a Family, matching the convention across the k8s project and removing the need
to do so later in the code path.
",['brancz'],2,2019-01-28 15:44:20,2019-02-04 18:44:29,2019-02-04 18:44:29,True,2019-02-04 18:44:29,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/645,https://github.com/kubernetes/kube-state-metrics/pull/645,mgoodness,Enable use as kustomize base layer,"**What this PR does / why we need it**:

- Primarily adds a `kustomization.yaml` file to enable use as a [kustomize](https://github.com/kubernetes-sigs/kustomize) base layer.
- Also adds resources from the `apps` group to the Role and ClusterRole.
- Updates the Deployment to `apps/v1`
",['brancz'],4,2019-01-28 20:29:42,2019-02-01 10:14:42,2019-02-01 19:54:15,True,2019-02-01 10:14:42,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/646,https://github.com/kubernetes/kube-state-metrics/pull/646,eyalev,Get GCP email account from gcloud's 'value' format,"https://cloud.google.com/sdk/gcloud/reference/topic/formats

",['brancz'],1,2019-01-29 11:15:11,2019-01-29 14:55:44,2019-01-29 14:55:44,True,2019-01-29 14:55:44,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/647,https://github.com/kubernetes/kube-state-metrics/pull/647,wozniakjan,Remove accidentally committed file,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
It looks to me the `internal/collector/filename` may have been accidentally committed here
https://github.com/kubernetes/kube-state-metrics/pull/632/files#diff-13f62cf8c67fedfe14d52d72048702db

It is empty and I couldn't find it being used anywhere, unit tests pass well without it :)

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
none, just a cleanup

cc: @LiliC 
",['brancz'],1,2019-01-29 14:59:08,2019-01-29 15:09:18,2019-01-29 15:14:33,True,2019-01-29 15:09:18,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/648,https://github.com/kubernetes/kube-state-metrics/pull/648,mrueg,Makefile: Add local build target,"Signed-off-by: Manuel Rüger <manuel@rueg.eu>

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Adds a local-build target, which allows to be agnostic of Docker and allow building it in one's own golang container.
",['brancz'],2,2019-01-29 17:30:04,2019-01-30 21:46:57,2019-01-30 21:46:57,True,2019-01-30 21:46:57,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/650,https://github.com/kubernetes/kube-state-metrics/pull/650,wanghaoran1988,Add collector for csr,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #649 

","['tariq1890', 'mxinden']",1,2019-01-31 11:34:03,2019-03-24 20:07:05,2019-03-24 20:08:08,True,2019-03-24 20:07:05,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/651,https://github.com/kubernetes/kube-state-metrics/pull/651,wozniakjan,[WIP] Native pod termination counter - proposed implementation,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
I would like to continue discussion from https://github.com/kubernetes/kube-state-metrics/issues/344. While using `LastTerminationState` allows to catch more OOMKills, it still misses those where during the scrape period container dies more than once with different termination state. I am not entirely sure this implementation would follow conventions set by other metrics but it does allow never to miss an OOMKill because it can increment own counter on each observed pod change.

It is split into two commits
- first one allowing unit tests to take more than one object
- implementing the observed termination counter

Looking forward to any comments and hoping we can come up with good solution together :)

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",[],2,2019-01-31 16:45:30,2019-02-04 18:34:49,2019-02-04 18:34:50,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/652,https://github.com/kubernetes/kube-state-metrics/pull/652,tariq1890,use the appsv1 package as it is more appropriate for deployment runtimeObject,"Using the `""k8s.io/api/apps/v1""` for the deployment object.",['brancz'],1,2019-02-01 06:37:51,2019-02-02 16:11:11,2019-02-02 16:11:11,True,2019-02-02 16:11:11,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/654,https://github.com/kubernetes/kube-state-metrics/pull/654,mgoodness,Move kustomization.yaml,"Signed-off-by: Michael Goodness <mike.goodness@ticketmaster.com>

**What this PR does / why we need it**:

`kubectl apply -f kubernetes/` is broken, as `kustomization.yaml` isn't (yet) something kubectl can parse. This moves it to the root of the repo.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #653 

",['brancz'],1,2019-02-01 20:05:30,2019-02-04 19:07:08,2019-02-04 19:07:08,True,2019-02-04 19:07:08,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/655,https://github.com/kubernetes/kube-state-metrics/pull/655,tariq1890,correct some typographical mistakes in kube-state-metrics,Fixing some typos :),['mxinden'],1,2019-02-03 05:55:34,2019-02-04 11:11:42,2019-02-04 16:20:20,True,2019-02-04 11:11:42,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/656,https://github.com/kubernetes/kube-state-metrics/pull/656,tariq1890,documentation fixes in kube-state-metrics,Documentation improvements,['mxinden'],3,2019-02-04 09:01:08,2019-02-04 19:00:47,2019-02-04 19:00:51,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/657,https://github.com/kubernetes/kube-state-metrics/pull/657,tariq1890,documentation fixes: i)minor improvements ii)add new hpa labels in do…,@brancz FYI,['brancz'],1,2019-02-04 19:00:34,2019-02-04 19:13:57,2019-02-04 19:14:40,True,2019-02-04 19:13:57,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/659,https://github.com/kubernetes/kube-state-metrics/pull/659,tariq1890,add go modules support for kube-state-metrics,Go mod support for kube-state-metrics. Removes Godeps.  Fixes #658 ,['brancz'],1,2019-02-05 17:09:45,2019-02-07 12:01:41,2019-02-07 16:49:29,True,2019-02-07 12:01:40,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/660,https://github.com/kubernetes/kube-state-metrics/pull/660,mxinden,README.md: Reword raw data section,"

**What this PR does / why we need it**:

Improve wording in README.md


",['brancz'],1,2019-02-06 15:51:12,2019-02-07 10:27:42,2019-02-07 10:27:42,True,2019-02-07 10:27:42,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/661,https://github.com/kubernetes/kube-state-metrics/pull/661,tariq1890,cleanup api groups and add ingresses to the cluster role RBAC,Using appsv1 for replicasets and daemonset as it's more appropriate. Adding also adding ingresses to the extensions RBAC,[],1,2019-02-07 21:44:03,2019-02-08 08:26:15,2019-02-08 08:26:18,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/662,https://github.com/kubernetes/kube-state-metrics/pull/662,tariq1890,adding the CI check for go modules consistency,Updated Travis CI to check for go mod consistency.,['brancz'],1,2019-02-07 22:01:06,2019-02-08 17:01:45,2019-02-08 17:09:14,True,2019-02-08 17:01:45,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/663,https://github.com/kubernetes/kube-state-metrics/pull/663,tariq1890,add the ingress resource to the extensions apigroup section of RBAC,,['brancz'],1,2019-02-08 08:31:04,2019-02-08 10:39:19,2019-02-08 10:39:20,True,2019-02-08 10:39:19,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/664,https://github.com/kubernetes/kube-state-metrics/pull/664,tariq1890,add shellcheck to the ci and minor cleanup of bash scripts in kube_state_metrics,,['mxinden'],1,2019-02-09 02:39:34,2019-02-12 14:18:47,2019-02-12 16:32:16,True,2019-02-12 14:18:47,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/666,https://github.com/kubernetes/kube-state-metrics/pull/666,tariq1890,Changed the collector name from ingress to ingresses to match the convention,"The cmd parameter for the ingress collector should be ""ingresses"" since all the other apigroup resources go by their plurals for their collector names.

This change should be safe IMO since the latest release does not include ingresses as yet.",['mxinden'],1,2019-02-11 03:39:53,2019-02-11 10:34:23,2019-02-11 10:34:23,True,2019-02-11 10:34:23,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/669,https://github.com/kubernetes/kube-state-metrics/pull/669,tariq1890,update Dockerfile to use latest alpine,"Use the latest alpine linux base image. v3.9 was released last month

More details: http://dl-cdn.alpinelinux.org/alpine/v3.9/",['andyxning'],1,2019-02-12 19:29:44,2019-02-13 04:43:05,2019-02-13 04:43:27,True,2019-02-13 04:43:05,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/670,https://github.com/kubernetes/kube-state-metrics/pull/670,tariq1890,fix the release documentation,Minor doc fixes for release stuff.,['brancz'],1,2019-02-13 03:48:29,2019-02-18 10:25:08,2019-02-18 10:25:08,True,2019-02-18 10:25:07,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/671,https://github.com/kubernetes/kube-state-metrics/pull/671,tariq1890,use cancelable context instead of context.TODO(),Fixes #600 ,['brancz'],1,2019-02-13 18:22:17,2019-02-18 15:21:38,2019-02-20 05:15:11,True,2019-02-18 15:21:38,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/673,https://github.com/kubernetes/kube-state-metrics/pull/673,r0fls,add pvc access mode metric,"**What this PR does / why we need it**: Adds PVC access mode as metric `kube_persistentvolumeclaim_access_mode`

**Which issue(s) this PR fixes**:
Fixes #554 

",['mxinden'],2,2019-02-15 23:40:51,2019-02-20 21:23:59,2019-02-20 21:23:59,True,2019-02-20 21:23:59,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/674,https://github.com/kubernetes/kube-state-metrics/pull/674,r0fls,add persistent volume capacity metric,"**What this PR does / why we need it**: Add `kube_persistentvolume_capacity` to track PV capacity.

**Which issue(s) this PR fixes**:
Fixes #555

","['tariq1890', 'brancz']",3,2019-02-16 00:22:50,2019-02-22 06:08:13,2019-02-22 06:08:13,True,2019-02-22 06:08:13,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/675,https://github.com/kubernetes/kube-state-metrics/pull/675,wfernandes,Update metric-server documentation in README,"
<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:
Updates README documentation that avoids potential confusion for readers trying to understand all the various observability components of kubernetes.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #667 

",['brancz'],2,2019-02-18 22:00:49,2019-02-21 17:20:33,2019-02-21 17:20:33,True,2019-02-21 17:20:32,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/676,https://github.com/kubernetes/kube-state-metrics/pull/676,tariq1890,use klog instead of glog,Being good K8s citizens :),['andyxning'],1,2019-02-20 04:03:34,2019-02-20 08:52:19,2019-02-20 12:13:21,True,2019-02-20 08:52:19,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/677,https://github.com/kubernetes/kube-state-metrics/pull/677,tariq1890,docs: rename the Documentation folder to docs,`docs` seem to be unanimously chosen folder name for Documentation in GitHub open source projects.,['brancz'],2,2019-02-20 05:07:38,2019-02-21 17:20:15,2019-02-22 14:57:01,True,2019-02-21 17:20:15,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/679,https://github.com/kubernetes/kube-state-metrics/pull/679,tariq1890,add tariq1890 to the reviewers list,cc @brancz @mxinden ,['brancz'],1,2019-02-21 15:19:54,2019-02-21 17:21:46,2019-02-21 17:21:47,True,2019-02-21 17:21:46,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/681,https://github.com/kubernetes/kube-state-metrics/pull/681,zuzzas,Export Job's owner,"**What this PR does / why we need it**:

This PR adds a Job's object owner metric similar to the Pod's owner. It is quite helpful when trying to correlate Jobs and CronJobs.
",['brancz'],2,2019-02-25 09:10:52,2019-02-26 13:55:30,2019-02-26 13:55:30,True,2019-02-26 13:55:30,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/682,https://github.com/kubernetes/kube-state-metrics/pull/682,tariq1890,add collector for networkpolicies,,[],1,2019-02-25 22:20:34,2019-03-11 15:56:48,2019-03-11 17:25:06,False,,,dirty,False,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/686,https://github.com/kubernetes/kube-state-metrics/pull/686,zuzzas,"Revert ""Do not export Job's owner metrics if Job's OwnerReference is …","This reverts commit 15b93c4706372623cd0bbba413f7ae461cce4406.

Based on @brancz's decision here: https://github.com/kubernetes/kube-state-metrics/issues/569#issuecomment-467393722
",['brancz'],1,2019-02-27 11:18:35,2019-02-27 12:58:56,2019-02-28 07:34:57,True,2019-02-27 12:58:56,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/688,https://github.com/kubernetes/kube-state-metrics/pull/688,tariq1890,replace git describe with VERSION file for maintaining version tagging,Fixes #684 ,['brancz'],1,2019-02-28 15:24:17,2019-02-28 16:39:53,2019-03-01 04:21:25,True,2019-02-28 16:39:53,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/689,https://github.com/kubernetes/kube-state-metrics/pull/689,tariq1890,improve the variable name of the kube state metrics image tag in e2e shell script,Fixing variable name for readability and consistency.,['brancz'],1,2019-02-28 15:41:10,2019-02-28 16:41:45,2019-02-28 16:41:45,True,2019-02-28 16:41:45,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/690,https://github.com/kubernetes/kube-state-metrics/pull/690,tariq1890,improve the release documentation,Release docs need to be updated given the changes in #688 ,['brancz'],1,2019-03-01 04:04:00,2019-03-01 08:29:47,2019-03-01 08:29:47,True,2019-03-01 08:29:47,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/692,https://github.com/kubernetes/kube-state-metrics/pull/692,trobert2,Fixes typo in README.md from Secrects to Secrets,"<!--  Thanks for sending a pull request!  Here are some tips for you:
1. If this is your first time, read our contributor guidelines https://git.k8s.io/community/contributors/guide/pull-requests.md#the-pull-request-submit-process and developer guide https://git.k8s.io/community/contributors/devel/development.md#development-guide
2. If you want *faster* PR reviews, read how: https://git.k8s.io/community/contributors/guide/pull-requests.md#best-practices-for-faster-reviews
3. Follow the instructions for writing a release note: https://git.k8s.io/community/contributors/guide/pull-requests.md#write-release-notes-if-needed
4. If the PR is unfinished, see how to mark it: https://git.k8s.io/community/contributors/guide/pull-requests.md#marking-unfinished-pull-requests
-->

**What this PR does / why we need it**:

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

",['mxinden'],1,2019-03-01 15:17:54,2019-03-01 15:27:12,2019-03-01 15:54:16,True,2019-03-01 15:27:12,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/693,https://github.com/kubernetes/kube-state-metrics/pull/693,tariq1890,fix all golint and gosimple issues in kube-state-metrics,"Fix all golint issues in kube-state-metrics.

This should bring the goreportcard to 100%",['brancz'],1,2019-03-02 18:04:32,2019-03-04 09:31:58,2019-03-04 09:31:58,True,2019-03-04 09:31:58,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/695,https://github.com/kubernetes/kube-state-metrics/pull/695,tariq1890,lint: add golangci-lint to the CI pipeline of kube-state-metrics,"Follow up PR of #693 
This PR also fixes goimports(as of go 1.11) issues reported by golangci-lint

/cc @brancz @andyxning ",['andyxning'],1,2019-03-04 18:13:55,2019-03-05 02:16:30,2019-03-05 02:16:30,True,2019-03-05 02:16:30,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/696,https://github.com/kubernetes/kube-state-metrics/pull/696,jesusvazquez,[Documentation] Add join metric example for running pods requesting memory,"**What this PR does / why we need it**:

Adds a new example to the **Join Metrics** section in the documentation. 

I believe its a useful example for the users since knowing how much memory is being taken up by running pods is a common pattern.

**Which issue(s) this PR fixes** 
This PR is not fixing https://github.com/kubernetes/kube-state-metrics/issues/458 but its related. The label `phase` won't be added to pod metrics so showing an example of how to take advantage of joining metrics to workaround this might be useful for the community.

","['tariq1890', 'brancz']",3,2019-03-05 20:57:52,2019-03-11 12:53:27,2019-03-11 12:53:27,True,2019-03-11 12:53:27,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/698,https://github.com/kubernetes/kube-state-metrics/pull/698,joelsmith,Update embargo doc link in SECURITY_CONTACTS and change PST to PSC,See https://github.com/kubernetes/security/issues/8 for more information,"['spiffxp', 'andyxning', 'tariq1890']",1,2019-03-08 18:11:11,2019-03-11 06:23:27,2019-03-11 06:23:27,True,2019-03-11 06:23:27,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/700,https://github.com/kubernetes/kube-state-metrics/pull/700,tariq1890,update go version to 1.12.x,,['brancz'],1,2019-03-15 18:55:25,2019-03-18 12:45:17,2019-03-23 17:45:13,True,2019-03-18 12:45:17,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/701,https://github.com/kubernetes/kube-state-metrics/pull/701,tariq1890,use kubernetes 1.14 dependencies in kube-state-metrics,This PR uses the latest k8s 1.14.0 deps.,['brancz'],2,2019-03-18 04:07:20,2019-04-02 11:58:36,2019-04-02 11:58:36,True,2019-04-02 11:58:36,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/702,https://github.com/kubernetes/kube-state-metrics/pull/702,mxinden,*: Cut v1.6.0-rc.0,"**Which issue(s) this PR fixes**:
Relates to https://github.com/kubernetes/kube-state-metrics/issues/697

",['brancz'],1,2019-03-19 13:17:47,,2019-04-05 14:58:22,False,,,unstable,True,open
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/705,https://github.com/kubernetes/kube-state-metrics/pull/705,lachlancooper,Fix metric labels for kube_job_failed,**What this PR does / why we need it**: Fixes an inconsistency with the way the `condition` label key is applied to the `kube_job_failed` metric.,"['tariq1890', 'brancz']",1,2019-03-24 23:52:47,2019-03-29 11:26:13,2019-04-04 13:46:14,True,2019-03-29 11:26:13,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/707,https://github.com/kubernetes/kube-state-metrics/pull/707,tariq1890,update the prometheus_client_golang dependency to the latest version: v0.9.2,Using the latest version of client_golang from prometheus.,['andyxning'],1,2019-03-28 20:13:58,2019-03-29 02:32:13,2019-03-29 02:51:41,True,2019-03-29 02:32:13,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/708,https://github.com/kubernetes/kube-state-metrics/pull/708,flouthoc,kube_node_status_phase does not works. Updating Docs,"Update Docs for not supported metrics.

https://github.com/kubernetes/kube-state-metrics/issues/472


","['andyxning', 'brancz']",1,2019-04-02 11:29:14,2019-04-02 16:21:20,2019-04-03 01:42:52,True,2019-04-02 16:21:20,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/709,https://github.com/kubernetes/kube-state-metrics/pull/709,mxinden,internal/collector+pkg/metrics_store: Reduce allocation & improve hot path,"This pull request includes two performance optimizations found while testing the kube-state-metrics *v1.6.0* release candidate. Given that v1.6.0-rc.0 doesn't seem to introduce any performance regressions, these patches don't need to be included in the release.

### 1. internal/collector: Preallocate metric slice length when known upfront

Profiling kube-state-metrics shows that a lot of CPU time is spent on
`runtime.growslice`. This is related to metric generation when
converting a Kuberntes object to a slice of metrics in
`metric.FamilyGenerator`s. Oftentimes the length of the metric slice is
known upfront.

When the needed size of the metrics slice is known upfront, allocate an
appropriately sized metric slice.

### 2. pkg/metrics_store: Cache byte slices instead of strings

When converting a string to a byte slice, in Golang would do a full copy
which introduces memory allocations. On an HTTP scrape request WriteAll
in the metrics store component is called, which writes all cached
metrics into the given io.Writer. io.Writer takes a byte slice, whereas
metrics are cached as strings. The connect the two, the metrics store
component converts the metric strings to byte slices. This results in
`runtime.stringtoslicebyte` [1] being a prominent CPU user.

Instead of caching metrics as strings, cache them as byte slices,
removing the additional translation from the hot-path.

### Test setup

#### Unit benchmark

The first patch gets us some reasonable memory and runtime optimizations. Running `internal.collector.BenchmarkPodCollector` with (*new*) and without (*old*) returns the following:

```
benchmark                   old ns/op     new ns/op     delta
BenchmarkPodCollector-4     25942         24475         -5.65%

benchmark                   old allocs     new allocs     delta
BenchmarkPodCollector-4     419            395            -5.73%

benchmark                   old bytes     new bytes     delta
BenchmarkPodCollector-4     20112         19544         -2.82%
```

#### End to end test

I have compared kube-state-metrics *v1.6.0-rc.0-0* (vanilla https://github.com/kubernetes/kube-state-metrics/pull/702),  *v1.6.0-rc.0-4* (vanilla + patch 1) and *v1.6.0-rc.0-5* (vanilla + patch 1 & 2) on a 9 node cluster with AWS m5.large compute instances. During the comparison a test script would create and delete pods ranging from 250 - 5000 pods total. In addition the cluster had 8000 secrets constantly. Kube-state-metrics instances are scraped every 2s.

##### Scrape duration

Both patches seem to be neutral in regards to the Prometheus scrape duration.

![image](https://user-images.githubusercontent.com/7047859/55469099-0928ba00-5605-11e9-83c7-dd310173db90.png)


##### CPU usage

Patch 1 seems to have only a subtle impact on the CPU usage, patch 2 constantly performs better, given that we only need to convert the metric string to a byte slice once and not on every scrape.

![image](https://user-images.githubusercontent.com/7047859/55468812-7e47bf80-5604-11e9-930b-344c1ca4aa41.png)





[1] https://golang.org/src/runtime/string.go?s=4063:4115#L145


",['brancz'],2,2019-04-03 09:43:23,2019-04-05 12:17:20,2019-04-05 12:17:20,True,2019-04-05 12:17:20,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/710,https://github.com/kubernetes/kube-state-metrics/pull/710,mxinden,go.mod: Pin k8s.io/client-go to v11.0.0,"The previous patch updating kube-state-metrics to Kubernetes v1.14 (https://github.com/kubernetes/kube-state-metrics/pull/701) resulted in k8s.io/client-go module set to `v2.0.0-alpha.0.0.20190313235726-6ee68ca5fd83+incompatible`. While `6ee68ca5fd83` is the right reference to client-go release (v11), `v2.0.0-alpha` is clearly not. The k8s.io/client-go code checked in into /vendor follows the commit sha, not the version.

This patch pins k8s.io/client-go to `v11.0.0` via `GO111MODULE=on go get k8s.io/client-go@v11.0`. As /vendor was already correctly updated with the previous patch, this patch does not include any changes to /vendor.

So far I have not been able to understand, why go modules would pin the version to an old tag, but vendor the new version. Maybe @tariq1890 do you have an idea?
",['brancz'],1,2019-04-03 16:30:12,2019-04-05 10:07:05,2019-04-05 10:07:05,False,,,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/711,https://github.com/kubernetes/kube-state-metrics/pull/711,mxinden,README.md: Update compatibility matrix for kube-state-metrics v1.6,xref: https://github.com/kubernetes/kube-state-metrics/pull/702#issuecomment-478964510,['brancz'],1,2019-04-03 16:33:15,2019-04-05 12:31:22,2019-04-05 12:31:23,True,2019-04-05 12:31:22,k8s-ci-robot,unknown,,closed
kube-state-metrics,https://api.github.com/repos/kubernetes/kube-state-metrics/pulls/713,https://github.com/kubernetes/kube-state-metrics/pull/713,chenk008,Add label for priority class in kube_pod_info #712,"Add label for priority class in kube_pod_info

Fixes #712 

",['brancz'],5,2019-04-04 17:36:44,2019-04-05 08:39:19,2019-04-05 08:39:19,True,2019-04-05 08:39:18,k8s-ci-robot,unknown,,closed
