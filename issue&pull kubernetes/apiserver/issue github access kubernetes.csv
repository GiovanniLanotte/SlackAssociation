name repository,creator user,url_html issue,url_api issue,title,body,state,pull request,data open,updated at
apiserver,fate-grand-order,https://github.com/kubernetes/apiserver/pull/1,https://api.github.com/repos/kubernetes/apiserver/issues/1,delete result in returns of NamespaceFrom(),,closed,True,2017-01-17 07:03:07,2017-01-19 15:53:35
apiserver,kris-nova,https://github.com/kubernetes/apiserver/issues/2,https://api.github.com/repos/kubernetes/apiserver/issues/2,Example of a basic API server,"Any way I could request a very basic example of using the library to get a vanilla API server up and running with a hello world? I am working on trying to build one now, and can contribute my notes/examples if that helps.

But wondering if anyone has anything useful lying around that isn't in the repo!

Cheers",closed,False,2017-02-08 04:47:33,2017-12-23 15:51:12
apiserver,pwittrock,https://github.com/kubernetes/apiserver/issues/3,https://api.github.com/repos/kubernetes/apiserver/issues/3,301 for lumberjack.v2 dependency,"When I try to build this using glide, I get the following error:

```
[WARN]	Unable to checkout gopkg.in/natefinch/lumberjack.v2
[ERROR]	Error looking for gopkg.in/natefinch/lumberjack.v2: Unable to get repository
```

Trying to get the package directly results in

```
go get gopkg.in/natefinch/lumberjack.v2
# cd .; git clone https://gopkg.in/natefinch/lumberjack.v2 /XXX/sample-apiserver/src/gopkg.in/natefinch/lumberjack.v2
Cloning into '/XXX/sample-apiserver/src/gopkg.in/natefinch/lumberjack.v2'...
error: RPC failed; HTTP 301 curl 22 The requested URL returned error: 301
fatal: The remote end hung up unexpectedly
package gopkg.in/natefinch/lumberjack.v2: exit status 128
```",closed,False,2017-02-15 19:25:16,2017-02-15 21:08:33
apiserver,caesarxuchao,https://github.com/kubernetes/apiserver/pull/4,https://api.github.com/repos/kubernetes/apiserver/issues/4,Generated by robot,"All 5 PRs generated in the same run of the robot:
https://github.com/kubernetes/client-go/pull/140
https://github.com/kubernetes/apimachinery/pull/10
https://github.com/kubernetes/apiserver/pull/4
https://github.com/kubernetes/kube-aggregator/pull/4
https://github.com/kubernetes/sample-apiserver/pull/2",closed,True,2017-03-18 20:05:48,2017-03-20 20:09:03
apiserver,caesarxuchao,https://github.com/kubernetes/apiserver/pull/5,https://api.github.com/repos/kubernetes/apiserver/issues/5,Round2: Generated by scripts,"Last round of PRs failed to update vendor/. This one fixed it.

@deads2k @sttts 

PRs to other repos:
https://github.com/kubernetes/apiserver/pull/5
https://github.com/kubernetes/kube-aggregator/pull/5
https://github.com/kubernetes/sample-apiserver/pull/3
https://github.com/kubernetes/client-go/pull/154
https://github.com/kubernetes/apimachinery/pull/11",closed,True,2017-03-20 22:17:46,2017-03-21 21:10:39
apiserver,caesarxuchao,https://github.com/kubernetes/apiserver/pull/6,https://api.github.com/repos/kubernetes/apiserver/issues/6,[Do Not Merge] Release 1.6,"Generated by the bot.

The release-3.0 of client-go, and release-1.6 branches of apimachinery, apiserver, kube-aggregator, and sample-apiserver are tracking relesae-1.6 of kubernetes. These branches might depend on each other, but not on commit in the master branch.

The PR batch:
https://github.com/kubernetes/sample-apiserver/pull/4
https://github.com/kubernetes/kube-aggregator/pull/6
https://github.com/kubernetes/apiserver/pull/6
https://github.com/kubernetes/client-go/pull/160
no change to the release 1.6 branch of apimachinery

cc @deads2k @sttts ",closed,True,2017-03-30 03:05:18,2017-03-31 19:41:33
apiserver,ilackarms,https://github.com/kubernetes/apiserver/issues/7,https://api.github.com/repos/kubernetes/apiserver/issues/7,Allow compression of json response body using Accept-Encoding header,"JSON payload returned by Kubernetes can be very large on GET requests when there are a lot of managed resources in the cluster.

Currently it is not possible to specify that large response bodies should be compressed; `Accept-Encoding` header is ignored by the apiserver.

Specifying the Accept-Encoding header on a GET request should cause the k8s apiserver to respond with response Body compressed with the given encoding sceme (e..g gzip, bzip2, etc.)",open,False,2017-04-17 15:03:41,2018-08-01 23:37:35
apiserver,MHBauer,https://github.com/kubernetes/apiserver/pull/8,https://api.github.com/repos/kubernetes/apiserver/issues/8,update link for kube-aggregator,"README is not present in staging, so I guessed to update it here directly.

 - kube-aggregator was split out into a separate top-level repo.
 - my editor added a newline to the end of the file, so I reformatted the paragaph to fit in 80 columns.",closed,True,2017-05-01 22:49:35,2017-05-02 12:08:51
apiserver,yasassri,https://github.com/kubernetes/apiserver/issues/9,https://api.github.com/repos/kubernetes/apiserver/issues/9,[BUG] Connection refused for apiserver ,"**Back Ground**

I followed the Kubernetes Guide to setup a basic K8S cluster with default parameters, except for following two options added to _kube-apiserver.yaml_

 ```
   - --insecure-bind-address=0.0.0.0
    - --insecure-port=8090 
```
My full _kube-apiserver.yaml_ is as follows.

```
apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: quay.io/coreos/hyperkube:v1.6.1_coreos.0
    command:
    - /hyperkube
    - apiserver
    - --bind-address=0.0.0.0
    - --etcd-servers=http://192.168.57.13:2379
    - --allow-privileged=true
    - --service-cluster-ip-range=10.3.0.0/24
    - --secure-port=443
    - --insecure-bind-address=0.0.0.0
    - --insecure-port=8090
    - --advertise-address=192.168.57.130
    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
    - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem
    - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --client-ca-file=/etc/kubernetes/ssl/ca.pem
    - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --runtime-config=extensions/v1beta1/networkpolicies=true
    - --anonymous-auth=false
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        port: 8080
        path: /healthz
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - containerPort: 443
      hostPort: 443
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
  volumes:
  - hostPath:
 - hostPath:
      path: /etc/kubernetes/ssl
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
```
Now when I start the kubelet I see the following errors.

This is with _systemctl status kubelet_

```
�~W~O kubelet.service
   Loaded: loaded (/etc/systemd/system/kubelet.service; disabled; vendor preset: disabled)
   Active: active (running) since Sun 2017-05-14 08:54:41 UTC; 4min 31s ago
  Process: 14968 ExecStartPre=/usr/bin/mkdir -p /opt/cni/bin (code=exited, status=0/SUCCESS)
  Process: 14956 ExecStartPre=/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid (code=exited, status=254)
  Process: 14952 ExecStartPre=/usr/bin/mkdir -p /var/log/containers (code=exited, status=0/SUCCESS)
  Process: 14943 ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests (code=exited, status=0/SUCCESS)
 Main PID: 14972 (kubelet)
    Tasks: 16 (limit: 32768)
   Memory: 1.3G
      CPU: 40.662s
   CGroup: /system.slice/kubelet.service
           �~T~\�~T~@14972 /kubelet --api-servers=http://127.0.0.1:8080 --register-schedulable=false --cni-conf-dir=/etc/kubernetes/cni/net.d --network-plugin=cni --container-runtime=docker --allow-privileged=true --pod-manifest-path=/etc/kubernetes/manifests --hostname-override=192.168.57.130 --cluster_dns=10.3.0.10 --cluster_domain=cluster.local
           �~T~T�~T~@15165 journalctl -k -f

May 14 08:59:10 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:10.170585   14972 reflector.go:190] k8s.io/kubernetes/pkg/kubelet/kubelet.go:390: Failed to list *v1.Node: Get http://127.0.0.1:8080/api/v1/nodes?fieldSelector=metadata.name%3D192.168.57.130&resourceVersion=0: dial tcp 127.0.0.1:8080: getsockopt: connection refused
May 14 08:59:10 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:10.171555   14972 reflector.go:190] k8s.io/kubernetes/pkg/kubelet/config/apiserver.go:46: Failed to list *v1.Pod: Get http://127.0.0.1:8080/api/v1/pods?fieldSelector=spec.nodeName%3D192.168.57.130&resourceVersion=0: dial tcp 127.0.0.1:8080: getsockopt: connection refused
May 14 08:59:10 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:10.172413   14972 reflector.go:190] k8s.io/kubernetes/pkg/kubelet/kubelet.go:382: Failed to list *v1.Service: Get http://127.0.0.1:8080/api/v1/services?resourceVersion=0: dial tcp 127.0.0.1:8080: getsockopt: connection refused
May 14 08:59:11 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:11.171287   14972 reflector.go:190] k8s.io/kubernetes/pkg/kubelet/kubelet.go:390: Failed to list *v1.Node: Get http://127.0.0.1:8080/api/v1/nodes?fieldSelector=metadata.name%3D192.168.57.130&resourceVersion=0: dial tcp 127.0.0.1:8080: getsockopt: connection refused
May 14 08:59:11 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:11.172360   14972 reflector.go:190] k8s.io/kubernetes/pkg/kubelet/config/apiserver.go:46: Failed to list *v1.Pod: Get http://127.0.0.1:8080/api/v1/pods?fieldSelector=spec.nodeName%3D192.168.57.130&resourceVersion=0: dial tcp 127.0.0.1:8080: getsockopt: connection refused
May 14 08:59:11 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:11.173376   14972 reflector.go:190] k8s.io/kubernetes/pkg/kubelet/kubelet.go:382: Failed to list *v1.Service: Get http://127.0.0.1:8080/api/v1/services?resourceVersion=0: dial tcp 127.0.0.1:8080: getsockopt: connection refused
May 14 08:59:12 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:12.169077   14972 eviction_manager.go:214] eviction manager: unexpected err: failed GetNode: node '192.168.57.130' not found
May 14 08:59:12 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:12.171928   14972 reflector.go:190] k8s.io/kubernetes/pkg/kubelet/kubelet.go:390: Failed to list *v1.Node: Get http://127.0.0.1:8080/api/v1/nodes?fieldSelector=metadata.name%3D192.168.57.130&resourceVersion=0: dial tcp 127.0.0.1:8080: getsockopt: connection refused
May 14 08:59:12 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:12.172765   14972 reflector.go:190] k8s.io/kubernetes/pkg/kubelet/config/apiserver.go:46: Failed to list *v1.Pod: Get http://127.0.0.1:8080/api/v1/pods?fieldSelector=spec.nodeName%3D192.168.57.130&resourceVersion=0: dial tcp 127.0.0.1:8080: getsockopt: connection refused
May 14 08:59:12 yasassri-test-b9064eab-d104-4183-b42f-6cb5e120ca67.novalocal kubelet-wrapper[14972]: E0514 08:59:12.173750   14972 reflector.go:190] k8s.io/kubernetes/pkg/kubelet/kubelet.go:382: Failed to list *v1.Service: Get http://127.0.0.1:8080/api/v1/services?resourceVersion=0: dial tcp 127.0.0.1:8080: getsockopt: connection refused
```

Other Logs from /var/log/pods

```
{""log"":""E0514 09:02:28.606961       1 reflector.go:201] k8s.io/kubernetes/pkg/client/informers/informers_generated/internalversion/factory.go:70: Failed to list *api.ServiceAccount: Get https://localhost:443/api/v1/serviceaccounts?resourceVersion=0: dial tcp [::1]:443: getsockopt: connection refused\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.60733353Z""}
{""log"":""E0514 09:02:28.607194       1 reflector.go:201] k8s.io/kubernetes/pkg/client/informers/informers_generated/internalversion/factory.go:70: Failed to list *storage.StorageClass: Get https://localhost:443/apis/storage.k8s.io/v1beta1/storageclasses?resourceVersion=0: dial tcp [::1]:443: getsockopt: connection refused\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.607413819Z""}
{""log"":""E0514 09:02:28.607719       1 reflector.go:201] k8s.io/kubernetes/pkg/client/informers/informers_generated/internalversion/factory.go:70: Failed to list *api.LimitRange: Get https://localhost:443/api/v1/limitranges?resourceVersion=0: dial tcp [::1]:443: getsockopt: connection refused\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.607890803Z""}
{""log"":""E0514 09:02:28.609090       1 reflector.go:201] k8s.io/kubernetes/pkg/client/informers/informers_generated/internalversion/factory.go:70: Failed to list *api.ResourceQuota: Get https://localhost:443/api/v1/resourcequotas?resourceVersion=0: dial tcp [::1]:443: getsockopt: connection refused\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.609334802Z""}
{""log"":""E0514 09:02:28.617184       1 reflector.go:201] k8s.io/kubernetes/pkg/client/informers/informers_generated/internalversion/factory.go:70: Failed to list *api.Secret: Get https://localhost:443/api/v1/secrets?resourceVersion=0: dial tcp [::1]:443: getsockopt: connection refused\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.617450991Z""}
{""log"":""E0514 09:02:28.628247       1 reflector.go:201] k8s.io/kubernetes/pkg/client/informers/informers_generated/internalversion/factory.go:70: Failed to list *api.Namespace: Get https://localhost:443/api/v1/namespaces?resourceVersion=0: dial tcp [::1]:443: getsockopt: connection refused\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.628501464Z""}
{""log"":""[restful] 2017/05/14 09:02:28 log.go:30: [restful/swagger] listing is available at https://192.168.57.130:443/swaggerapi/\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.657301606Z""}
{""log"":""[restful] 2017/05/14 09:02:28 log.go:30: [restful/swagger] https://192.168.57.130:443/swaggerui/ is mapped to folder /swagger-ui/\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.657350995Z""}
{""log"":""I0514 09:02:28.863874       1 serve.go:79] Serving securely on 0.0.0.0:443\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.864169072Z""}
{""log"":""I0514 09:02:28.864109       1 serve.go:94] Serving insecurely on 0.0.0.0:8090\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:28.864209629Z""}
{""log"":""E0514 09:02:29.349333       1 status.go:62] apiserver received an error that is not an metav1.Status: rpc error: code = 13 desc = transport is closing\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:29.349625692Z""}
{""log"":""E0514 09:02:29.381326       1 client_ca_hook.go:58] rpc error: code = 13 desc = transport is closing\n"",""stream"":""stderr"",""time"":""2017-05-14T09:02:29.381658997Z""}
```
I also came accross https://github.com/kubernetes/kubeadm/issues/226 as well. I'm not sure whether its related. Please let me know if you need more information.",closed,False,2017-05-14 09:14:23,2018-01-04 09:31:39
apiserver,leogps,https://github.com/kubernetes/apiserver/issues/10,https://api.github.com/repos/kubernetes/apiserver/issues/10,Documentation link broken for Webhook AuthZ: https://kubernetes.io/docs/admin/authorization/webhook/,"The documentation link for Authorization for API Server's via Webhook shows 404.
https://kubernetes.io/docs/admin/authorization/webhook/

This link is referred to here:
https://kubernetes.io/docs/admin/authorization/#authorization-modules
",closed,False,2017-05-20 00:27:12,2018-01-21 18:18:47
apiserver,mml,https://github.com/kubernetes/apiserver/pull/11,https://api.github.com/repos/kubernetes/apiserver/issues/11,Log all flag values at startup.,"Should help debugging.
Specifically for kubernetes/kubernetes#45706",closed,True,2017-05-22 19:49:11,2017-06-01 21:33:11
apiserver,wu8685,https://github.com/kubernetes/apiserver/issues/12,https://api.github.com/repos/kubernetes/apiserver/issues/12,Returning nil TTL will not keep the same value as the comment mentioned,"Hi,

As the [comment](https://github.com/kubernetes/apiserver/blob/master/pkg/storage/interfaces.go#L174) mentioned, when `tryUpdate UpdateFunc` returns a nil TTL in method `GuaranteedUpdate`, the TTL attached to the key will not change. But in current codes under `pkg/storage/etcd3`, the TTL will be unset, because [it](https://github.com/kubernetes/apiserver/blob/master/pkg/storage/etcd3/store.go#L498) will return 0 when `ttlPtr` is nil. And a zero TTL will finally unset the TTL.

The following test case will fail as `timeout` without key deleted:
```
func TestGuaranteedUpdateWithNilTTL(t *testing.T) {
	ctx, store, cluster := testSetup(t)
	defer cluster.Terminate(t)

	input := &example.Pod{ObjectMeta: metav1.ObjectMeta{Name: ""foo""}}
	key := ""/somekey""

	out := &example.Pod{}
	err := store.GuaranteedUpdate(ctx, key, out, true, nil,
		func(_ runtime.Object, _ storage.ResponseMeta) (runtime.Object, *uint64, error) {
			ttl := uint64(1)
			return input, &ttl, nil
		})
	if err != nil {
		t.Fatalf(""Create failed: %v"", err)
	}

	err = store.GuaranteedUpdate(ctx, key, out, true, nil,
		func(_ runtime.Object, _ storage.ResponseMeta) (runtime.Object, *uint64, error) {
			input.Namespace = ""update""
			return input, nil, nil
		})
	if err != nil {
		t.Fatalf(""Update failed: %v"", err)
	}

	w, err := store.Watch(ctx, key, out.ResourceVersion, storage.Everything)
	if err != nil {
		t.Fatalf(""Watch failed: %v"", err)
	}
	testCheckEventType(t, watch.Deleted, w)
}
```

I think it is a bug. And it should be fixed.",closed,False,2017-05-23 06:47:29,2018-02-23 01:33:23
apiserver,wu8685,https://github.com/kubernetes/apiserver/pull/13,https://api.github.com/repos/kubernetes/apiserver/issues/13,bugfix: #12 returning nil TTL will keep ttl same value in etcd3,fix #12 ,closed,True,2017-05-23 07:05:08,2018-02-23 02:33:50
apiserver,tpetr,https://github.com/kubernetes/apiserver/pull/14,https://api.github.com/repos/kubernetes/apiserver/issues/14,Fix typo,comsumers --> consumers,closed,True,2017-06-12 19:48:53,2017-06-13 23:20:57
apiserver,feiskyer,https://github.com/kubernetes/apiserver/issues/15,https://api.github.com/repos/kubernetes/apiserver/issues/15,apiserver hasn't synced for 3 weeks,Maybe same problem with https://github.com/kubernetes/client-go/issues/203?,closed,False,2017-06-13 07:30:56,2017-06-14 00:54:30
apiserver,ash2k,https://github.com/kubernetes/apiserver/issues/16,https://api.github.com/repos/kubernetes/apiserver/issues/16,k8s 1.7 corresponding release of apiserver,"Similar to https://github.com/kubernetes/client-go/issues/231 but for apiserver.

/cc @caesarxuchao ",closed,False,2017-07-08 08:23:09,2018-01-22 10:52:51
apiserver,arschles,https://github.com/kubernetes/apiserver/issues/17,https://api.github.com/repos/kubernetes/apiserver/issues/17,Naming resources for Aggregated APIs,"The [service-catalog](https://github.com/kubernetes-incubator/service-catalog) system has an aggregated API server that names four resource types:

- `Broker`
- `ServiceClass`
- `Instance`
- `Binding`

The fully-qualified names for these resources are all listed as `*.servicecatalog.k8s.io`, but one may still use the short version in `kubectl`. However, `binding` poses a problem because it conflicts with the core resource name. It is possible to simply use the fully-qualified name, but this conflict raises a bigger question: is there any guidance on naming resources in aggregated API servers, or should there be?

For example, should we tell users to choose resource names that do not conflict with core resource names (I think so)? Are there ways we can suggest for users to make their resource names more descriptive (we have chosen to prefix every name with `ServiceCatalog`, but I hardly think that is the optimal solution)?",closed,False,2017-07-17 23:07:52,2018-03-02 03:19:15
apiserver,mbssaiakhil,https://github.com/kubernetes/apiserver/pull/18,https://api.github.com/repos/kubernetes/apiserver/issues/18,Fix Typo in apiserver README,,closed,True,2017-08-13 11:19:43,2018-01-07 11:06:40
apiserver,jim-minter,https://github.com/kubernetes/apiserver/pull/19,https://api.github.com/repos/kubernetes/apiserver/issues/19,ProducesObject should only update the returned API object resource documentation,"This should be a no-op for Kubernetes (the only rest.Storage that specifies ProducesObject() is pod logs, on GET), but will allow issues such as https://github.com/openshift/origin/issues/8345 to be resolved (where generated API documentation is currently incorrect due to the asymmetry between the object kind sent and received by the API)",closed,True,2017-09-05 20:31:26,2017-09-05 20:32:43
apiserver,Pereiro,https://github.com/kubernetes/apiserver/issues/20,https://api.github.com/repos/kubernetes/apiserver/issues/20,ps,,closed,False,2017-10-06 06:49:25,2017-10-06 06:49:36
apiserver,staebler,https://github.com/kubernetes/apiserver/issues/21,https://api.github.com/repos/kubernetes/apiserver/issues/21,Add PrepareForDelete to RESTGracefulDeleteStrategy,"There is a desire in https://github.com/kubernetes-incubator/service-catalog to have a PrepareForDelete function in the RESTGracefulDeleteStrategy interface similar to PrepareForCreate and PrepareForUpdate functions in the RESTCreateStrategy and RESTUpdateStrategy interfaces. When ServiceInstance and ServiceBinding resources are deleted in service-catalog, the user that requested the delete is stored in the resource to be sent to the broker. Currently, service-catalog uses the CheckGracefulDelete function to get the user from the context to add it to the resource. That does not seem like an appropriate use of that function.",closed,False,2017-10-20 14:56:09,2018-03-24 19:12:53
apiserver,nikhita,https://github.com/kubernetes/apiserver/pull/22,https://api.github.com/repos/kubernetes/apiserver/issues/22,Remove README and LICENSE,"Addresses https://github.com/kubernetes/kubernetes/issues/54398.

/cc @sttts ",closed,True,2017-10-23 11:49:58,2017-10-25 19:24:39
apiserver,brendandburns,https://github.com/kubernetes/apiserver/issues/23,https://api.github.com/repos/kubernetes/apiserver/issues/23,Implement object interface in the swagger spec.,"Context:
https://github.com/kubernetes-client/java/issues/101

See: https://apihandyman.io/writing-openapi-swagger-specification-tutorial-part-4-advanced-data-modeling/#create-a-hierarchy-between-definitions-to-implement-inheritance-highly-experimentatl

for details.",closed,False,2017-10-26 18:36:48,2019-04-03 19:18:57
apiserver,universonic,https://github.com/kubernetes/apiserver/issues/24,https://api.github.com/repos/kubernetes/apiserver/issues/24,How to remove dependencies during deletion?,"Hello, I am trying to use this repo in my own program, and I am confused about how to delete an object and its dependencies with the registry.(*Store).Delete() method.

I will really appreciate it if you could provide some demo codes or reference about where to find the hint. I have read the sample-server, but found it's not very clear for this situation.

I want to know:
* how to maintain dependencies in Object (such as attach an object to another as its dependency)
* how to delete an object and its dependencies with Delete()?

I have tried for a while on this, and it just does not work. The followings are some part of my code.

*My data structs*:
```go
type Parent struct {
	metav1.TypeMeta   `json:"",inline""`
	metav1.ObjectMeta `json:""metadata,omitempty"" protobuf:""bytes,1,opt,name=metadata""`

	Foo      int64   `json:""foo,omitempty"" protobuf:""varint,2,opt,name=foo""`
	Children []Child `json:""children,omitempty"" protobuf:""bytes,3,rep,name=children""`
}

type Child struct {
	metav1.TypeMeta   `json:"",inline""`
	metav1.ObjectMeta `json:""metadata,omitempty"" protobuf:""bytes,1,opt,name=metadata""`
}
```

*My deletion method*:
```go
foregroundDelete := metav1.DeletePropagationForeground
deleteOptions := &metav1.DeleteOptions{
	PropagationPolicy: &foregroundDelete,
}
_, _, err := storage.(*Storage).Delete(request.NewContext(), parent.GetName(), deleteOptions)
if err != nil {
	log.Fatal(err)
}
```

With `deleteOptions := metav1.NewDeleteOptions(0)`, I could delete the parent only, but with the code above, I can delete nothing now.",closed,False,2017-11-01 10:44:40,2017-11-06 02:48:31
apiserver,kargakis,https://github.com/kubernetes/apiserver/issues/25,https://api.github.com/repos/kubernetes/apiserver/issues/25,Ability to run a fake api server,"I would like to run a fake api server that supports declaring actions in its handlers so I can test various scenarios as part of integration testing in prow. Is this possible today (I guess not)? Is this the correct repository to request such a thing?

@kubernetes/sig-api-machinery-feature-requests ",closed,False,2017-11-20 20:46:00,2018-04-19 21:57:53
apiserver,resouer,https://github.com/kubernetes/apiserver/issues/26,https://api.github.com/repos/kubernetes/apiserver/issues/26,Keystone endpoint is enforced to use https,"May I ask why it is enforced to use https here:
https://github.com/kubernetes/apiserver/blob/master/plugin/pkg/authenticator/password/keystone/keystone.go#L76

cc @ixdy ",closed,False,2017-11-23 06:00:34,2018-03-29 03:34:09
apiserver,kilsoo75,https://github.com/kubernetes/apiserver/issues/27,https://api.github.com/repos/kubernetes/apiserver/issues/27,[OIDC] x509: certificate signed by unknown authority,"I get an error like following when I use the OIDC setting in the apiserver.

**error log**
E1206 06:12:46.728701       1 oidc.go:190] oidc authenticator: failed to fetch provider discovery data: Get https://keycloak.xxxxx.com/auth/realms/k8s/.well-known/openid-configuration: x509: certificate signed by unknown authority
E1206 06:12:46.728752       1 authentication.go:64] Unable to authenticate the request due to an error: [invalid bearer token, [invalid bearer token, [crypto/rsa: verification error, fetch provider config: Get https://keycloak.xxxxx.com/auth/realms/k8s/.well-known/openid-configuration: x509: certificate signed by unknown authority]]]

**kube-apiserver configuration regarding oidc**    
    - --oidc-client-id=account
    - --oidc-issuer-url=https://keycloak.xxxxx.com/auth/realms/k8s
    - --oidc-username-claim=email
    - --oidc-groups-claim=group 

I also added the Root CA certificate and the certificate for OIDC application(KeyCloak) in the host server(Master Node) using the ca-certificates package.(http://manuals.gfi.com/en/kerio/connect/content/server-configuration/ssl-certificates/adding-trusted-root-certificates-to-the-server-1605.html)
I am using the CentOS 7.

Additionally, I tested the connectivity to the OIDC server from the host server(Master Node) and kube-apiserver pod using the wget utility and the result is like following.

1. on host server(Master Node)
[root@dev ~]# wget https://keycloak.xxxxx.com
--2017-12-06 01:33:26--  https://keycloak.xxxxx.com/
Resolving keycloak.kloudz.xyz (keycloak.xxxxx.com)... 169.56.xx.xx
Connecting to keycloak.kloudz.xyz (keycloak.xxxxx.com)|169.56.xx.xx|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 1087 (1.1K) [text/html]
Saving to: ‘index.html’

2. kube-apiserver pod
/ # wget https://keycloak.xxxxx.com
Connecting to keycloak.kloudz.xyz (169.56.xx.xx:443)
wget: TLS error from peer (alert code 40): handshake failure
wget: error getting response: Connection reset by peer

As you know, kube-apiserver also has the certificates regarding OIDC provider.
Why could not connect the apiserver pod to the OIDC server??",closed,False,2017-12-06 07:39:30,2018-05-05 09:02:04
apiserver,spiffxp,https://github.com/kubernetes/apiserver/pull/28,https://api.github.com/repos/kubernetes/apiserver/issues/28,Add code-of-conduct.md,"Refer to kubernetes/community as authoritative source for code of conduct

ref: kubernetes/community#1527",closed,True,2017-12-20 18:31:26,2017-12-20 20:13:31
apiserver,sttts,https://github.com/kubernetes/apiserver/pull/29,https://api.github.com/repos/kubernetes/apiserver/issues/29,Remove outdated and unused hack files,Part of https://github.com/kubernetes/kubernetes/issues/57559.,closed,True,2017-12-22 21:56:06,2017-12-22 22:21:26
apiserver,n3wscott,https://github.com/kubernetes/apiserver/issues/30,https://api.github.com/repos/kubernetes/apiserver/issues/30,DestroyFunc is not exposed via rest.Storage nor called by the ApiServer,"It becomes impossible to call the `DestroyFunc` passed into the registry.Store struct after registering this storage into the `genericAPIServer.InstallAPIGroup()` method.

This is either a bug with the api server, or a misunderstanding on the implementers side for whose responsibility it is to call `DestroyFunc`. 

I propose as a first step, implement a method to `registry.Store`  that allows the `DestroyFunc` to be invoked and add a new interface to `rest.Storage` that allows access to that new method.

Then later we can talk about how the shutting down of the api server should know to call the new method. 

Relates to:
https://github.com/kubernetes/kubernetes/pull/50690
https://github.com/kubernetes/kubernetes/issues/53617
https://github.com/kubernetes-incubator/service-catalog/issues/1649",closed,False,2018-01-08 19:26:44,2018-09-24 16:57:19
apiserver,zhangxiaoyu-zidif,https://github.com/kubernetes/apiserver/pull/31,https://api.github.com/repos/kubernetes/apiserver/issues/31,the Fatal() should be replaced with Fatal(),"the Fatal() should be replaced with Fatal()

Sorry, we do not accept changes directly against this repository. Please see 
CONTRIBUTING.md for information on where and how to contribute instead.
",closed,True,2018-01-19 00:36:54,2018-02-03 06:17:26
apiserver,lmxia,https://github.com/kubernetes/apiserver/pull/32,https://api.github.com/repos/kubernetes/apiserver/issues/32,fix tiny comment typo in pkg/admission/initializer/initializer_test.go,"Sorry, we do not accept changes directly against this repository. Please see 
CONTRIBUTING.md for information on where and how to contribute instead.
",closed,True,2018-02-02 00:45:21,2018-06-08 13:45:44
apiserver,simonklb,https://github.com/kubernetes/apiserver/issues/33,https://api.github.com/repos/kubernetes/apiserver/issues/33,Add support for domain name as advertise address,"Is there any reason not to allow an API server advertising a domain name rather than just an IP address?

This would be useful when you want to have multiple masters behind a loadbalancer and using the IP address is not suitable, [for example in the case of AWS ELB](https://github.com/kubernetes/kubeadm/issues/546#issuecomment-357158735).

Please correct me if I'm wrong here, but from what I can tell the bind address option seems to be the address which the API server is going to listen on while the advertise address is what it is telling other components to use for communication.",closed,False,2018-02-19 15:13:52,2018-06-16 00:23:06
apiserver,nim-nim,https://github.com/kubernetes/apiserver/issues/34,https://api.github.com/repos/kubernetes/apiserver/issues/34,"Go 1.10: x509_test.go:700: server cert: Expected error, got none","1.9.6 does not pass unit tests with Go 1.10. At least:

```
+ GOPATH=/builddir/build/BUILD/apiserver-kubernetes-1.9.6/_build:/usr/share/gocode
+ go test -buildmode pie -compiler gc -ldflags '-extldflags '\''-Wl,-z,relro  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld '\'''
--- FAIL: TestX509 (0.02s)
	x509_test.go:700: server cert: Expected error, got none
--- FAIL: TestX509Verifier (0.00s)
	x509_test.go:855: server cert disallowed: Expected error, got none
FAIL
exit status 1
FAIL	k8s.io/apiserver/pkg/authentication/request/x509	0.040s

+ GOPATH=/builddir/build/BUILD/apiserver-kubernetes-1.9.6/_build:/usr/share/gocode
+ go test -buildmode pie -compiler gc -ldflags '-extldflags '\''-Wl,-z,relro  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld '\'''
# k8s.io/apiserver/pkg/authentication/token/cache
./cache_test.go:80: Errorf format %v reads arg #3, but call has only 2 args
./cache_test.go:86: Errorf format %v reads arg #3, but call has only 2 args
FAIL	k8s.io/apiserver/pkg/authentication/token/cache [build failed]

+ GOPATH=/builddir/build/BUILD/apiserver-kubernetes-1.9.6/_build:/usr/share/gocode
+ go test -buildmode pie -compiler gc -ldflags '-extldflags '\''-Wl,-z,relro  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld '\'''
# k8s.io/apiserver/pkg/endpoints
./apiserver_test.go:1961: Fatalf format %v reads arg #2, but call has only 1 arg
./apiserver_test.go:1965: Fatalf format %#v reads arg #2, but call has only 1 arg
./apiserver_test.go:2086: Errorf format %v reads arg #2, but call has only 1 arg
./apiserver_test.go:2091: Errorf format %#v reads arg #2, but call has only 1 arg

+ GOPATH=/builddir/build/BUILD/apiserver-kubernetes-1.9.6/_build:/usr/share/gocode
+ go test -buildmode pie -compiler gc -ldflags '-extldflags '\''-Wl,-z,relro  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld '\'''
# k8s.io/apiserver/pkg/endpoints/filters
./audit_test.go:851: Errorf format %p has arg resp.Header.Get(""Audit-ID"") of wrong type string
FAIL    k8s.io/apiserver/pkg/endpoints/filters [build failed]

+ GOPATH=/builddir/build/BUILD/apiserver-kubernetes-1.9.6/_build:/usr/share/gocode
+ go test -buildmode pie -compiler gc -ldflags '-extldflags '\''-Wl,-z,relro  '\'''
# k8s.io/apiserver/pkg/storage/etcd3
./store_test.go:1196: Fatal call has possible formatting directive %v
FAIL	k8s.io/apiserver/pkg/storage/etcd3 [build failed]
```

And for 1.7.15:
```
+ GOPATH=/builddir/build/BUILD/apiserver-kubernetes-1.7.15/_build:/usr/share/gocode
+ go test -buildmode pie -compiler gc -ldflags '-extldflags '\''-Wl,-z,relro  '\'''
# k8s.io/apiserver/pkg/endpoints
./apiserver_test.go:1730: Errorf format %d has arg resp of wrong type *net/http.Response
./apiserver_test.go:1735: Errorf format %d has arg resp of wrong type *net/http.Response
FAIL	k8s.io/apiserver/pkg/endpoints [build failed]
```",closed,False,2018-03-26 08:59:38,2018-08-24 19:44:38
apiserver,nim-nim,https://github.com/kubernetes/apiserver/issues/35,https://api.github.com/repos/kubernetes/apiserver/issues/35,"Go 1.10 : apiserver_test.go:1961: Fatalf format %v reads arg #2, but call has only 1 arg","1.9.6 does not pass unit tests with Go 1.10. At least:

```
+ GOPATH=/builddir/build/BUILD/apiserver-kubernetes-1.9.6/_build:/usr/share/gocode
+ go test -buildmode pie -compiler gc -ldflags '-extldflags '\''-Wl,-z,relro  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld '\'''
# k8s.io/apiserver/pkg/endpoints
./apiserver_test.go:1961: Fatalf format %v reads arg #2, but call has only 1 arg
./apiserver_test.go:1965: Fatalf format %#v reads arg #2, but call has only 1 arg
./apiserver_test.go:2086: Errorf format %v reads arg #2, but call has only 1 arg
./apiserver_test.go:2091: Errorf format %#v reads arg #2, but call has only 1 arg
```",closed,False,2018-03-26 16:25:50,2018-03-26 16:28:23
apiserver,h8liu,https://github.com/kubernetes/apiserver/issues/36,https://api.github.com/repos/kubernetes/apiserver/issues/36,"""go get -u k8s.io/apiserver/pkg/server/routes"" fails","```
go get -u k8s.io/apiserver/pkg/server/routes
```

Fails with:

```
# k8s.io/apiserver/pkg/server/routes
../go/src/k8s.io/apiserver/pkg/server/routes/openapi.go:38:91: cannot use c.RegisteredWebServices() (type []*""k8s.io/apiserver/vendor/github.com/emicklei/go-restful"".WebService) as type []*""github.com/emicklei/go-restful"".WebService in argument to handler.BuildAndRegisterOpenAPIService
../go/src/k8s.io/apiserver/pkg/server/routes/openapi.go:42:97: cannot use c.RegisteredWebServices() (type []*""k8s.io/apiserver/vendor/github.com/emicklei/go-restful"".WebService) as type []*""github.com/emicklei/go-restful"".WebService in argument to handler.BuildAndRegisterOpenAPIVersionedService
```

probably due to an out-of-date vendor.",closed,False,2018-03-29 15:02:39,2018-03-31 01:37:39
apiserver,caniszczyk,https://github.com/kubernetes/apiserver/issues/37,https://api.github.com/repos/kubernetes/apiserver/issues/37,Add a CONTRIBUTING.md,cargo cult the k8s one,closed,False,2018-04-18 08:55:33,2018-04-18 13:18:30
apiserver,rawkode,https://github.com/kubernetes/apiserver/issues/38,https://api.github.com/repos/kubernetes/apiserver/issues/38,MutatingWebHook Configuration Changing Name of Resource,"Hey,

I've been working on a MutatingWebHookConfiguration that modifies the name of a resource (Only on CREATE, I know it's immutable beyond that), depending on the metadata. I'm happy to get into the use-case, if we feel it's pertinent to provide more context.

The problem is, when the next CREATE comes in, I want to modify the name again and UPDATE the existing resource. Is it / will it be possible to ""upgrade"", for lack of a better term, a CREATE to an UPDATE during this phase?",closed,False,2018-04-22 20:33:52,2018-04-24 13:18:21
apiserver,tamalsaha,https://github.com/kubernetes/apiserver/issues/39,https://api.github.com/repos/kubernetes/apiserver/issues/39,Not pulling in etcd v3 client as dependency,"We are using https://github.com/openshift/generic-admission-server to write our webhook. But when we upgraded from kubernetes 1.9 to 1.10 libraries. I noticed that we also now depend on etcd v3 client. It seems to be coming from https://github.com/kubernetes/apiserver/blob/8bb94c1e4658c0759b38483c48c89ae84b9bd571/pkg/server/options/etcd.go#L35

It will be great if webhook authors could avoid this dependency.",closed,False,2018-05-03 16:42:25,2018-10-21 14:00:13
apiserver,jessfraz,https://github.com/kubernetes/apiserver/issues/40,https://api.github.com/repos/kubernetes/apiserver/issues/40,Create a SECURITY_CONTACTS file.,"As per the email sent to kubernetes-dev[1], please create a SECURITY_CONTACTS
file.

The template for the file can be found in the kubernetes-template repository[2].
A description for the file is in the steering-committee docs[3], you might need
to search that page for ""Security Contacts"".

Please feel free to ping me on the PR when you make it, otherwise I will see when
you close this issue. :)

Thanks so much, let me know if you have any questions.

(This issue was generated from a tool, apologies for any weirdness.)

[1] https://groups.google.com/forum/#!topic/kubernetes-dev/codeiIoQ6QE
[2] https://github.com/kubernetes/kubernetes-template-project/blob/master/SECURITY_CONTACTS
[3] https://github.com/kubernetes/community/blob/master/committee-steering/governance/sig-governance-template-short.md
",closed,False,2018-05-24 14:43:00,2018-06-02 07:05:51
apiserver,devdattakulkarni,https://github.com/kubernetes/apiserver/issues/41,https://api.github.com/repos/kubernetes/apiserver/issues/41,Deep dive into how Kubernetes REST API works,"I have written a blog post detailing how the Kubernetes REST API works:
https://medium.com/@cloudark/deep-dive-into-how-kubernetes-rest-api-works-517c86f1640b

@pwittrock @sttts Let me know if this is correctly capturing Kubernetes REST API's inner workings.",closed,False,2018-06-01 17:52:17,2018-10-29 19:14:15
apiserver,chrissound,https://github.com/kubernetes/apiserver/issues/42,https://api.github.com/repos/kubernetes/apiserver/issues/42,Complains that file does not exist... But it does,"```
osboxes@master:/var/log/pods$ sudo tail -f fdb932ada5768a1891d839f8cf2306a9/kube-apiserver/31.log 
{""log"":""      --tls-private-key-file string                             File containing the default x509 private key matching --tls-cert-file.\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.869978989Z""}
{""log"":""      --tls-sni-cert-key namedCertKey                           A pair of x509 certificate and private key file paths, optionally suffixed with a list of domain patterns which are fully qualified domain names, possibly with prefixed wildcard segments. If no domain patterns are provided, the names of the certificate are extracted. Non-wildcard matches trump over wildcard matches, explicit domain patterns trump over extracted names. For multiple key/certificate pairs, use the --tls-sni-cert-key multiple times. Examples: \""example.crt,example.key\"" or \""foo.crt,foo.key:*.foo.com,foo.com\"". (default [])\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.869981784Z""}
{""log"":""      --token-auth-file string                                  If set, the file that will be used to secure the secure port of the API server via token authentication.\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.869985782Z""}
{""log"":""  -v, --v Level                                                 log level for V logs\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.869988586Z""}
{""log"":""      --version version[=true]                                  Print version information and quit\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.869991231Z""}
{""log"":""      --vmodule moduleSpec                                      comma-separated list of pattern=N settings for file-filtered logging\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.86999605Z""}
{""log"":""      --watch-cache                                             Enable watch caching in the apiserver (default true)\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.869998906Z""}
{""log"":""      --watch-cache-sizes strings                               List of watch cache sizes for every resource (pods, nodes, etc.), comma separated. The individual override format: resource[.group]#size, where resource is lowercase plural (no version), group is optional, and size is a number. It takes effect when watch-cache is enabled. Some resources (replicationcontrollers, endpoints, nodes, pods, services, apiservices.apiregistration.k8s.io) have system defaults set by heuristics, others default to default-watch-cache-size\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.870002021Z""}
{""log"":""\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.870005608Z""}
{""log"":""error: loading audit policy file: failed to read file path \""/etc/kubernetes/audit.yaml\"": open /etc/kubernetes/audit.yaml: no such file or directory\n"",""stream"":""stderr"",""time"":""2018-08-01T17:04:12.870008063Z""}
jjjjjjjjjjj^C
osboxes@master:/var/log/pods$ ls -altr /etc/kubernetes/audit.yaml
-rwxrwxrwx 1 root root 113 Aug  1 11:34 /etc/kubernetes/audit.yaml
```

I've added the following line to the api-server manifest yaml config file thingamabob:
`    - --audit-policy-file=/etc/kubernetes/audit.yaml`",closed,False,2018-08-01 17:06:37,2018-08-01 17:40:32
apiserver,seanchann,https://github.com/kubernetes/apiserver/issues/43,https://api.github.com/repos/kubernetes/apiserver/issues/43,Support for plug-in backend storage,"I searched a lot of information. No similar plans were found, will the following issue  continue?

https://github.com/kubernetes/kubernetes/issues/1957

or  have any plan to support plug-in with storage backend like admission module",open,False,2018-08-19 07:42:47,2019-01-08 15:11:05
apiserver,davidmccormick,https://github.com/kubernetes/apiserver/issues/44,https://api.github.com/repos/kubernetes/apiserver/issues/44,1000s of warnings when the apiserver aggregator is enabled.,"Fairly recently we changed our apiserver settings in order to enable to the use of the aggregator (to enable metrics-server and other api extensions).  Here are the settings applied: -

```
    - --requestheader-client-ca-file=/etc/kubernetes/ssl/ca.pem
    - --requestheader-allowed-names=aggregator
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --enable-aggregator-routing=false
```

Whilst everything appears to be functioning correctly we are setting a large number of warnings being generated in our apiserver logs, e.g. :- 

```
W0920 09:00:34.491307 1 x509.go:172] x509: subject with cn=system:node:ip-10-29-11-214.us-west-2.compute.internal is not in the allowed list: [aggregator]
W0920 09:00:34.498896 1 x509.go:172] x509: subject with cn=system:node:ip-10-29-11-214.us-west-2.compute.internal is not in the allowed list: [aggregator]
W0920 09:00:34.718998 1 x509.go:172] x509: subject with cn=system:node:ip-10-29-20-126.us-west-2.compute.internal is not in the allowed list: [aggregator]
W0920 09:00:34.806978 1 x509.go:172] x509: subject with cn=system:node:ip-10-29-19-28.us-west-2.compute.internal is not in the allowed list: [aggregator]
W0920 09:00:34.815000 1 x509.go:172] x509: subject with cn=system:node:ip-10-29-19-28.us-west-2.compute.internal is not in the allowed list: [aggregator]
```

I debugged the issue for a while thinking that there was something broken in our configuration causing apiserver issues (we were also seeing poor performance).  I eventually had a look in the apiserver code  and realised that what I was seeing was benign but making a lot of noise with warnings where perhaps there should not be any.

When you have requestheader authentication enabled, **all** regular x509 authentication requests also pass through this x509.Verifier object **first**, where their certs and common names are verified regardless of whether they actually contain an embedded requestheader authentication or not.  When their common names do not match the configured allowed list then a warning is generated to the apiserver logs.  The warning is generated but the union authenticator happily continues down the chain until it reaches the regular x509 authenticator which is able to authenticate the request and the request is authenticated and proceeds through rbac etc.

My issue is with the large number of warnings being generated in what is normal operation - they make looking at the apiserver logs a bit painful and I'm sure that they are wasting cpu and io for logging warnings on so many requests. 

",closed,False,2018-09-24 15:21:25,2019-01-25 10:13:22
apiserver,KevinKingKong,https://github.com/kubernetes/apiserver/issues/49,https://api.github.com/repos/kubernetes/apiserver/issues/49,apiserver aggregator can not change the request.Host when access the external http service,"When apiserver is using apiservice and service EXTERNAL-IP to access the external http service(a sample metric service),the http request header Host  is still the apiserver's Host, causing the external http proxy services are failed to forward the request normally.

The requested link is like this， **client  ->  apiserver  ->  external http proxy service  ->  real http service(metric service)**

I read the source codes:`k8s.io/client-go/transport.(*debuggingRoundTripper) # RoundTrip` ,`net/http/request.go # WithContext, /net/http2/transport.go # encodeHeaders`，found that apiserver isn't change the Request.Host，as a result, it forwarded out with original host.

I want to know why kubernetes does not use the target Url.Host when accessing external services, but instead uses the original Request.Host，thanks


My kubernetes cluster version is v1.10



> [root@8c00516de625 ~]# kubectl get svc
NAME            TYPE           CLUSTER-IP   EXTERNAL-IP                          PORT(S)   AGE
kubernetes      ClusterIP      10.254.0.1   <none>                               443/TCP   2d
power-metrics   ExternalName   <none>       test-ext-adaptor.dailyevn.net   <none>    2d

> [root@8c00516de625 ~]# kubectl describe apiservices v1alpha1.power.metrics.sigma
Name:         v1alpha1.power.metrics.sigmaiservices v1alpha1.power.metrics.sigma
Namespace:
Labels:       <none>
Annotations:  <none>
API Version:  apiregistration.k8s.io/v1
Kind:         APIService
Metadata:
  Creation Timestamp:  2018-11-30T07:54:23Z
  Resource Version:    38765
  Self Link:           /apis/apiregistration.k8s.io/v1/apiservices/v1alpha1.power.metrics.sigma
  UID:                 2702bed7-f475-11e8-a76f-02427ea09f19
Spec:
  Group:                     power.metrics.sigma
  Group Priority Minimum:    1000
  Insecure Skip TLS Verify:  true
  Service:
    Name:            power-metrics
    Namespace:       default
  Version:           v1alpha1
  Version Priority:  15
Status:
  Conditions:
    Last Transition Time:  2018-12-03T05:51:12Z
    Message:               all checks passed
    Reason:                Passed
    Status:                True
    Type:                  Available
Events:                    <none>

",closed,False,2018-12-03 06:03:08,2018-12-06 09:28:48
apiserver,sjanota,https://github.com/kubernetes/apiserver/issues/50,https://api.github.com/repos/kubernetes/apiserver/issues/50,DecisionNoOpinion when denied field is missing,"Webhook authorizer checks `denied` field of SubjectAccessReviewStatus [to make a decision if access is denied](https://github.com/kubernetes/apiserver/blob/84dc8f2ac210b6b29b84da722206e7997f870806/plugin/pkg/authorizer/webhook/webhook.go#L205). According to [SubjectAccessReviewStatus docs](https://github.com/kubernetes/api/blob/master/authorization/v1beta1/types.go#L174) field `denied` is optional. On the other hand the same doc states that ""If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action"". It makes perfect sense when both fields are set, but when `denied` is missing bool's default value kicks in and the result is the same. This is example response from api server:
```kubectl create -f - -o yaml << EOF
apiVersion: authorization.k8s.io/v1
kind: SubjectAccessReview
spec:
  user: admin@kyma.cx
  resourceAttributes:
    group: servicecatalog.k8s.io
    resource: serviceinstance
    verb: list
    namespace: stage
EOF
apiVersion: authorization.k8s.io/v1
kind: SubjectAccessReview
metadata:
  creationTimestamp: null
spec:
  resourceAttributes:
    group: servicecatalog.k8s.io
    namespace: stage
    resource: serviceinstance
    verb: list
  user: admin@kyma.cx
status:
  allowed: false
```
Status clearly states that access is denied, but webhook authorizer would return DecisionNoOpinion in this scenario. I'm using k8s version 1.10.",open,False,2019-01-04 13:31:21,2019-04-04 14:09:16
apiserver,oomichi,https://github.com/kubernetes/apiserver/pull/51,https://api.github.com/repos/kubernetes/apiserver/issues/51,Fallback to first type if having candidates,"Before giving up to get the most appropriate content type,
this makes the method returns the first type if having some
candidates.

Sorry, we do not accept changes directly against this repository. Please see 
CONTRIBUTING.md for information on where and how to contribute instead.
",closed,True,2019-01-12 01:44:06,2019-01-12 01:44:13
apiserver,octomarat,https://github.com/kubernetes/apiserver/issues/52,https://api.github.com/repos/kubernetes/apiserver/issues/52,Unreachable code in tests,"Hi. I am writing a tool to detect unreachable code. I used your project to test it and found an issue:

https://github.com/kubernetes/apiserver/blob/72227405ce9dbb16c8ccaea7bf4107947c8e3c37/pkg/endpoints/apiserver_test.go#L2730

`t.Fatalf` call stops the execution of the test. As a result, the lines below will never be executed. Probably, `t.Fatalf` should be replaced with ``t.Errorf`.",open,False,2019-02-15 13:41:46,2019-02-15 13:41:46
apiserver,joelsmith,https://github.com/kubernetes/apiserver/pull/53,https://api.github.com/repos/kubernetes/apiserver/issues/53,Update embargo doc link in SECURITY_CONTACTS and change PST to PSC,See https://github.com/kubernetes/security/issues/8 for more information,closed,True,2019-03-08 17:52:08,2019-03-09 01:18:43
