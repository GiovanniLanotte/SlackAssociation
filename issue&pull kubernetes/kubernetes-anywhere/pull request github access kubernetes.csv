name repository,url,url html,created by,title,body,assignees,# commit,created at,updated at,closed at,is merged,merged at,merged by,mergeable state,mergeable,state
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/29,https://github.com/kubernetes/kubernetes-anywhere/pull/29,asim,Fix cluter typo,,[],1,2016-02-09 11:11:39,2016-02-10 14:33:38,2016-05-31 17:21:25,True,2016-02-10 14:33:38,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/30,https://github.com/kubernetes/kubernetes-anywhere/pull/30,abuehrle,edited text added intro,"Here's the working copy. Still could use some tweaking here and there. How about a diagram?

<!-- Reviewable:start -->

[<img src=""https://reviewable.io/review_button.svg"" height=""40"" alt=""Review on Reviewable""/>](https://reviewable.io/reviews/weaveworks/weave-kubernetes-anywhere/30)

<!-- Reviewable:end -->
",[],7,2016-02-11 15:04:40,2016-03-24 00:05:29,2018-01-15 11:24:40,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/33,https://github.com/kubernetes/kubernetes-anywhere/pull/33,errordeveloper,Use systemd on Ubuntu with EC2/Terraform,,[],12,2016-02-18 16:54:05,2016-02-18 16:54:50,2016-05-31 17:21:26,True,2016-02-18 16:54:50,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/49,https://github.com/kubernetes/kubernetes-anywhere/pull/49,errordeveloper,Toolbox and PKI refactoring,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/weave-kubernetes-anywhere/49)

<!-- Reviewable:end -->
",[],1,2016-03-15 10:47:26,2016-03-15 11:47:31,2016-05-31 17:21:27,True,2016-03-15 11:47:31,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/50,https://github.com/kubernetes/kubernetes-anywhere/pull/50,errordeveloper,Add support for unversioned tags for default stable kubernetes release,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/weave-kubernetes-anywhere/50)

<!-- Reviewable:end -->
",[],2,2016-03-15 12:06:57,2016-03-15 12:30:46,2016-05-31 17:21:27,True,2016-03-15 12:30:46,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/52,https://github.com/kubernetes/kubernetes-anywhere/pull/52,errordeveloper,Add CNI plugin support,"ping https://github.com/weaveworks/weave/issues/1991, https://github.com/weaveworks/weave/issues/1992 and https://github.com/weaveworks/weave/issues/2030

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/weave-kubernetes-anywhere/52)

<!-- Reviewable:end -->
",[],17,2016-03-22 13:55:23,2016-03-22 13:57:58,2016-05-31 17:21:27,True,2016-03-22 13:57:58,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/56,https://github.com/kubernetes/kubernetes-anywhere/pull/56,errordeveloper,Top-level docs rewrite,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/weave-kubernetes-anywhere/56)

<!-- Reviewable:end -->
",[],1,2016-03-24 00:04:24,2016-04-28 11:04:03,2016-05-31 17:21:27,True,2016-04-28 11:04:03,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/58,https://github.com/kubernetes/kubernetes-anywhere/pull/58,vpetersson,Fixes typo in create-cluster.sh,"Fixes typo in `create-cluster.sh` for Docker Machine.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/58)

<!-- Reviewable:end -->
",[],1,2016-04-07 10:50:17,2016-04-07 11:00:35,2016-05-31 17:21:28,True,2016-04-07 11:00:35,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/62,https://github.com/kubernetes/kubernetes-anywhere/pull/62,errordeveloper,Enable TLS PKI in the Docker Compose example,"This PR closes #60

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/62)

<!-- Reviewable:end -->
",[],14,2016-04-28 18:11:30,2016-04-28 19:42:05,2016-05-31 17:21:27,True,2016-04-28 19:42:05,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/67,https://github.com/kubernetes/kubernetes-anywhere/pull/67,errordeveloper,Add API proxy (close #65),"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/67)

<!-- Reviewable:end -->
",[],2,2016-05-03 12:59:59,2016-05-04 16:27:15,2016-05-31 17:21:27,True,2016-05-04 16:27:15,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/69,https://github.com/kubernetes/kubernetes-anywhere/pull/69,errordeveloper,Combine SkyDNS bits into one manifest,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/69)

<!-- Reviewable:end -->
",[],1,2016-05-03 21:15:36,2016-05-04 12:36:27,2016-05-31 17:21:27,True,2016-05-04 12:36:26,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/70,https://github.com/kubernetes/kubernetes-anywhere/pull/70,errordeveloper,Make `USE_CNI=yes` by default,"Ping #61.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/70)

<!-- Reviewable:end -->
",[],2,2016-05-03 21:42:20,2016-05-04 13:35:54,2016-05-31 17:21:27,True,2016-05-04 13:35:54,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/74,https://github.com/kubernetes/kubernetes-anywhere/pull/74,errordeveloper,Make v1.2 the default,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/74)

<!-- Reviewable:end -->
",[],1,2016-05-05 16:22:05,2016-05-05 16:38:34,2016-05-31 17:21:27,True,2016-05-05 16:38:34,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/75,https://github.com/kubernetes/kubernetes-anywhere/pull/75,errordeveloper,Ditch apiproxy,"Close #65.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/75)

<!-- Reviewable:end -->
",[],6,2016-05-06 15:14:36,2016-05-06 15:26:30,2016-05-31 17:21:27,True,2016-05-06 15:26:30,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/76,https://github.com/kubernetes/kubernetes-anywhere/pull/76,paulbellamy,make setup-single-node more robust when pki images have been deleted,"Fixes #73, I think.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/76)

<!-- Reviewable:end -->
",[],1,2016-05-06 15:45:06,2016-05-06 16:27:57,2016-05-31 17:21:25,True,2016-05-06 16:27:57,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/77,https://github.com/kubernetes/kubernetes-anywhere/pull/77,errordeveloper,Enable SSH forwarding of the API server,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/77)

<!-- Reviewable:end -->
",[],2,2016-05-06 16:21:51,2016-05-06 17:02:59,2016-05-31 17:21:27,True,2016-05-06 17:02:59,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/80,https://github.com/kubernetes/kubernetes-anywhere/pull/80,paulbellamy,Split build-and-push into 2 separate scripts,"NO_PUSH and NO_BUILD are unintuitive, and didn't seem to work for me (leading me to accidentally push to docker hub. This seems safer.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/80)

<!-- Reviewable:end -->
",[],2,2016-05-10 16:30:12,2016-05-18 14:30:38,2016-05-31 17:21:25,True,2016-05-18 14:30:38,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/86,https://github.com/kubernetes/kubernetes-anywhere/pull/86,errordeveloper,Use Alpine for toolbox (2x reduction in size),"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/86)

<!-- Reviewable:end -->
",[],2,2016-05-21 16:56:35,2016-05-26 07:08:01,2016-05-31 17:21:27,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/91,https://github.com/kubernetes/kubernetes-anywhere/pull/91,errordeveloper,[WIP] Public API server,"@tomwilkie @2opremio @peterbourgon would be great if some of you could take a look at the general picture here. The idea is to sort of do self-hosting for this and spin up a service of type `LoadBalancer`, then find out what's the external DNS/IP will be, next actually use tools implemented in this PR to create image with certs in it, which will be spun up after that. The intention is to make create internal PKI and make API server available before we know what external address may be, and don't depend on that being a static one.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/91)

<!-- Reviewable:end -->
",[],1,2016-05-26 09:04:23,2016-06-01 10:13:35,2018-01-15 11:24:31,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/93,https://github.com/kubernetes/kubernetes-anywhere/pull/93,errordeveloper,"Bump Weave Net version, close #92 and #84","<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/93)

<!-- Reviewable:end -->
",[],2,2016-05-26 12:42:24,2016-05-27 10:50:11,2016-05-31 17:21:27,True,2016-05-27 10:50:11,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/94,https://github.com/kubernetes/kubernetes-anywhere/pull/94,errordeveloper,Turns out `-no-pki` addon flavours never worked,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/94)

<!-- Reviewable:end -->
",[],1,2016-05-26 13:05:47,2016-05-27 13:09:44,2016-05-31 17:21:27,True,2016-05-27 13:09:44,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/98,https://github.com/kubernetes/kubernetes-anywhere/pull/98,errordeveloper,Ensure Weave Net CNI wrappers do not defailt to latest tag (close #97),"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/98)

<!-- Reviewable:end -->
",[],1,2016-05-27 13:13:25,2016-05-27 13:44:48,2016-05-31 17:21:27,True,2016-05-27 13:44:48,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/100,https://github.com/kubernetes/kubernetes-anywhere/pull/100,errordeveloper,Stronger revision coupling with immutable tags for single-node setup,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/100)

<!-- Reviewable:end -->
",[],2,2016-05-27 13:35:17,2016-05-27 14:54:15,2016-05-31 17:21:27,True,2016-05-27 14:54:15,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/102,https://github.com/kubernetes/kubernetes-anywhere/pull/102,errordeveloper,Improve kubelet volumes,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/102)

<!-- Reviewable:end -->
",[],2,2016-05-27 14:46:33,2016-05-27 15:11:58,2016-05-31 17:21:27,True,2016-05-27 15:11:58,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/103,https://github.com/kubernetes/kubernetes-anywhere/pull/103,errordeveloper,"Use `--embed-certs`, few cosmetic tweaks","<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/103)

<!-- Reviewable:end -->
",[],1,2016-05-27 14:59:38,2016-05-27 16:37:16,2016-05-31 17:21:27,True,2016-05-27 16:37:16,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/104,https://github.com/kubernetes/kubernetes-anywhere/pull/104,errordeveloper,Take extra SANs as an agrument,"ping #91

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/104)

<!-- Reviewable:end -->
",[],1,2016-05-31 09:48:12,2016-05-31 10:06:25,2016-05-31 17:21:27,True,2016-05-31 10:06:25,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/105,https://github.com/kubernetes/kubernetes-anywhere/pull/105,errordeveloper,Few cosmetic cherry-picks,"Here are some cosmetic changes that were implemented in `test-new-toolbox-in-ec2` branch, and could otherwise get lost.

<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/105)

<!-- Reviewable:end -->
",[],6,2016-05-31 10:04:02,2016-05-31 10:18:35,2016-05-31 17:21:27,True,2016-05-31 10:18:35,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/106,https://github.com/kubernetes/kubernetes-anywhere/pull/106,errordeveloper,"Update LICENSE and NOTICE files, ensure copyright boilerplate is present","<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/106)

<!-- Reviewable:end -->
",[],1,2016-05-31 10:52:09,2016-05-31 11:19:11,2016-05-31 17:21:28,True,2016-05-31 11:19:11,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/107,https://github.com/kubernetes/kubernetes-anywhere/pull/107,errordeveloper,Split phase1 and phase2,"The docs are still to inherit the idea of new layout, but here is the starting point.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/weaveworks/kubernetes-anywhere/107)

<!-- Reviewable:end -->
",[],1,2016-05-31 17:16:12,2016-05-31 18:07:46,2016-05-31 18:07:49,True,2016-05-31 18:07:46,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/108,https://github.com/kubernetes/kubernetes-anywhere/pull/108,mikedanese,move min-turnup into kubernetes-anywhere,,[],1,2016-05-31 18:09:51,2016-06-06 22:53:21,2016-06-06 22:53:26,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/110,https://github.com/kubernetes/kubernetes-anywhere/pull/110,errordeveloper,Fix Travis CI,"This got missed out in #107.
",[],1,2016-06-01 10:43:21,2016-06-01 17:05:56,2016-06-13 16:00:40,True,2016-06-01 17:05:56,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/112,https://github.com/kubernetes/kubernetes-anywhere/pull/112,errordeveloper,[RFC] Create pki-admin image and tool to generate apiserver images with new certs ,"<!-- Reviewable:start -->

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/kubernetes/kubernetes-anywhere/112)

<!-- Reviewable:end -->
",[],1,2016-06-01 11:13:25,2016-09-11 10:05:41,2016-09-11 10:05:41,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/114,https://github.com/kubernetes/kubernetes-anywhere/pull/114,errordeveloper,[WIP] Simplify phase 1 in EC2,"ref #111

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/kubernetes/kubernetes-anywhere/114)

<!-- Reviewable:end -->
",[],8,2016-06-02 14:56:19,2016-09-11 10:08:03,2016-09-11 10:08:03,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/115,https://github.com/kubernetes/kubernetes-anywhere/pull/115,errordeveloper,[WIP/RFC]  Bootstrap EC2 with Ansible,"The purpose is to make user data (`#cloud-config`) very short and easier to parametrise.

Current version of [`phase1/aws-ec2-terraform/phase2_implementations/simple-weave-single-master.yaml`](https://github.com/errordeveloper/kubernetes-anywhere/blob/0097b50770b71639c776293c3f445d05e9e110b5/phase1/aws-ec2-terraform/phase2_implementations/simple-weave-single-master.yaml) (as shown in #114) has many lines of bash that install Docker and create systemd units etc.

The idea is to turn it into a two-step version:
1. install and start Docker
2. run Ansible through toolbox container

[New `#cloud-config`](https://github.com/kubernetes/kubernetes-anywhere/pull/115/files#diff-7f4d1e0c0ab90e45984666baee7c6baaR1) is included now, and you can see how much simpler it has become.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""35"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/kubernetes/kubernetes-anywhere/115)

<!-- Reviewable:end -->
",[],22,2016-06-02 17:30:48,2016-09-11 10:06:10,2016-09-11 10:06:10,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/122,https://github.com/kubernetes/kubernetes-anywhere/pull/122,errordeveloper,Update copyright notice,,[],1,2016-06-07 09:16:12,2016-06-09 23:50:40,2016-06-13 16:00:13,True,2016-06-09 23:50:40,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/124,https://github.com/kubernetes/kubernetes-anywhere/pull/124,mikedanese,overlay min-turnup into kubernetes anywhere,,[],2,2016-06-10 00:44:08,2016-06-13 20:47:07,2016-06-13 20:47:10,True,2016-06-13 20:47:07,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/129,https://github.com/kubernetes/kubernetes-anywhere/pull/129,errordeveloper,Few tweaks to the proposal document,,[],1,2016-06-14 14:55:15,2016-06-15 18:27:01,2016-06-15 18:27:01,True,2016-06-15 18:27:01,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/131,https://github.com/kubernetes/kubernetes-anywhere/pull/131,obi1kenobi,Use HTTPS to download executables in provision.sh,"`git.io` supports HTTPS, and `provision.sh` should use it. Otherwise, it would be trivial for an attacker to launch a man-in-the-middle (MITM) attack against the machine running the script. Since the files being downloaded are executed by the same script promptly thereafter, this is a very easy way for an attacker to achieve remote code execution on the machine running the script.

Fixes #130.
",[],1,2016-06-14 18:46:03,2016-06-14 22:19:33,2016-06-14 22:20:28,True,2016-06-14 22:19:33,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/134,https://github.com/kubernetes/kubernetes-anywhere/pull/134,mikedanese,add a make commands that start phase1,,[],1,2016-06-17 21:50:03,2016-06-22 20:27:37,2016-06-22 20:27:40,True,2016-06-22 20:27:37,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/135,https://github.com/kubernetes/kubernetes-anywhere/pull/135,mikedanese,remove stray ( in proposal,,[],1,2016-06-17 21:50:11,2016-06-17 22:31:54,2016-06-17 22:31:56,True,2016-06-17 22:31:54,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/142,https://github.com/kubernetes/kubernetes-anywhere/pull/142,madhusudancs,Output master IP.,"This change makes terraform apply print the master IP at the end of the output.

cc @mikedanese 
",[],1,2016-06-22 07:18:03,2016-06-22 18:27:22,2016-06-22 18:27:22,True,2016-06-22 18:27:22,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/143,https://github.com/kubernetes/kubernetes-anywhere/pull/143,madhusudancs,A bunch of typo fixes.,"cc @mikedanese 
",[],1,2016-06-22 07:18:51,2016-06-22 16:18:28,2016-06-22 16:18:28,True,2016-06-22 16:18:28,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/146,https://github.com/kubernetes/kubernetes-anywhere/pull/146,mikedanese,generate pki with terraform,"I think this is an improvement. It reduces moving parts and moves kubeconfig generation out of phase2. This also improves the security of the GCE setup by requiring ComputeReadScope to see the apiserver private key (instead of StorateReadScope) and completely removing the ability to see the root CA private key (instead of requiring StorageReadScope (i know, it's bad)). Please review commits individually.
",[],3,2016-06-23 01:11:50,2016-06-27 20:50:32,2016-06-27 20:54:10,True,2016-06-27 20:50:32,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/147,https://github.com/kubernetes/kubernetes-anywhere/pull/147,colemickens,Add Dockerfile,,[],1,2016-06-23 22:19:31,2016-06-24 00:38:15,2016-08-17 22:08:52,True,2016-06-24 00:38:15,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/155,https://github.com/kubernetes/kubernetes-anywhere/pull/155,colemickens,Azure: Phase1 Implementation + necessary Phase2 Changes,"Of the remaining issues in [the closed min-turnup PR](https://github.com/kubernetes/kube-deploy/pull/106):
1. ""terraform resource names"": I still punted on this. I've started to a couple times, but it's a rather surprisingly large amount of extra changes/text with unclear benefit to me. In terms of enabling side-by-side deployments, it seems there are other problems to sort out. (Comparing to the GCE one, it looks like GCE is going to hit the same ""multiple resources with same name"" error due to the TLS/kubeconfig assets not being named uniquely per-`instance_prefix`.) I still think it'd be better to support multiple clusters by having entirely separate directories per-cluster. With their own separate `tfstate`s, `kubeconfig`s, etc.
2. ""prefer jsonnet"": I've added the Azure cloud config file parameter into the kube-{apiserver,scheduler} jsonnet templates rather than rewriting them to jinja2. (**Jinja2 is still used by `kubelet.service`.** I just added my parameters and left the templating language as I found it)
3. ""pki in terraform"": Mike did this in https://github.com/kubernetes/kubernetes-anywhere/pull/146

Please Note:
1. Workaround 1: Docker start fails after install. https://github.com/colemickens/kubernetes-anywhere/blob/5007ff0daa04ea32d81ea463ed72c50f73539c83/phase1/azure/configure-vm.sh#L19
2. Workaround 2: Terraform bug that causes flakiness in Azure: https://github.com/colemickens/kubernetes-anywhere/blob/5007ff0daa04ea32d81ea463ed72c50f73539c83/phase1/azure/do#L18
3. I'm not sure which is correct for kubelet's volume share mode. In this branch, it's already at `-v /var/lib/kubelet/:/var/lib/kubelet:shared` but I had it `-v /var/lib/kubelet/:/var/lib/kubelet:rw,shared` in `min-turnup` originally. Which is correct, and why?

CC: @mikedanese @errordeveloper 
",[],4,2016-06-28 04:10:21,2016-06-28 22:34:42,2016-06-28 22:34:42,True,2016-06-28 22:34:42,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/156,https://github.com/kubernetes/kubernetes-anywhere/pull/156,mikedanese,switch tls key algorithm from ECDSA to RSA,"To work around:
  kubernetes/kubernetes#28180

I'm currently testing this.

cc @colemickens 
",[],1,2016-06-28 20:48:46,2016-06-28 21:30:26,2016-06-29 03:44:29,True,2016-06-28 21:30:26,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/157,https://github.com/kubernetes/kubernetes-anywhere/pull/157,colemickens,WIP/Discussion: support multiple clusters based on cloud_provider/instance_prefix,"Something I tried out in the Azure phase1.

It treats `phase1/{{cloud_provider}}` as a template and copies it to `clusters/{{cloud_provider}}/{{instance_prefix}}`.

With this change I can change `.config.json` to modify just the `instance_prefix` and get multiple basically identical clusters. And I can go into one and modify `config.json` and re-run `./do deploy` and get my cluster updated (in particular scaled up).

Problems:
- [ ] not sure if this is what others were thinking
- [ ] makes a bit of a mess of the Makefile rule dependencies. I was struggling to get it to use the `.config.json` that was in place and not re-run the whole config process including re-running the Kconfig steps so I clobbered a bit to make it work
- [ ] It's not a fully isolated template, it still reaches up into `../../../phase1` for the `tf.jsonnet` file.

``` shell
$ pwd

/root/kubernetes-anywhere

$ ls -R clusters/

clusters:
azure

clusters/azure:
colemick-ex

clusters/azure/colemick-ex:
all.jsonnet
azure-colemick-ex.tf
azure.json
azure.jsonnet
config.json
configure-vm.sh
do
Kconfig
kubeconfig.json
terraform.tfstate
terraform.tfstate.backup
```
",[],4,2016-06-29 08:03:03,2016-09-30 06:31:29,2016-09-30 06:31:32,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/158,https://github.com/kubernetes/kubernetes-anywhere/pull/158,errordeveloper,Few improvements to Kconfig bits,"For some reason current version has thrown this when I tried running
make in a container:

```
docker build .
...
> docker run 8d0b7ef3b34c
make config
make[1]: Entering directory '/root/kubernetes-anywhere'
mkdir -p .tmp; curl -sSL --fail -o "".tmp/conf"" \
        ""https://storage.googleapis.com/public-mikedanese-k8s/kconfig/4.6/linux/conf""; \
chmod +x "".tmp/conf""
curl: no URL specified!
curl: try 'curl --help' or 'curl --manual' for more information
/bin/sh: 2:     ""https://storage.googleapis.com/public-mikedanese-k8s/kconfig/4.6/linux/conf""; \: not found
/bin/sh: 3: chmod +x "".tmp/conf"": not found
Makefile:26: recipe for target '.tmp/conf' failed
make[1]: *** [.tmp/conf] Error 127
make[1]: Leaving directory '/root/kubernetes-anywhere'
make: *** [default] Error 2
Makefile:23: recipe for target 'default' failed
```

So I looked at it and realised the backslashes weren't needed, so I also ended-up reducing some duplication.

I also look at the JSON generator, and found it a bit hard to read, and while understanding what it does, I found how it can be improved.
",[],3,2016-06-29 11:20:38,2016-06-29 15:32:52,2016-06-29 15:34:03,True,2016-06-29 15:32:52,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/161,https://github.com/kubernetes/kubernetes-anywhere/pull/161,mikedanese,prototype: add ignition phase2 for comparison with ansible,"It's less than 30mb  and I think we could get it down to 20mb, much faster, and no python dependency on host or master. Requires a slightly modified igntion https://github.com/mikedanese/ignition/tree/vanilla

If I preinstall docker it takes 2.5 minutes to bring up a cluster.

ref #160
",[],1,2016-06-29 22:43:20,2016-08-10 21:22:21,2016-08-10 21:22:27,True,2016-08-10 21:22:21,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/163,https://github.com/kubernetes/kubernetes-anywhere/pull/163,errordeveloper,Replace use of `instance_prefix` with `cluster_name`,,[],1,2016-07-04 09:57:06,2016-07-05 14:59:30,2016-07-05 14:59:30,True,2016-07-05 14:59:30,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/164,https://github.com/kubernetes/kubernetes-anywhere/pull/164,colemickens,fix kubelet mounts for logging,"Partially addresses #162.

This allows EFK to work. Without this no container logs are picked up.
",[],1,2016-07-04 11:18:52,2016-07-05 14:58:55,2016-08-17 22:08:51,True,2016-07-05 14:58:55,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/167,https://github.com/kubernetes/kubernetes-anywhere/pull/167,raeesbhatti,Add https to 'weave' binary link in DOCKER_FOR_MAC.md,,[],1,2016-07-04 21:35:31,2016-07-11 09:37:25,2016-07-11 09:37:25,True,2016-07-11 09:37:25,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/169,https://github.com/kubernetes/kubernetes-anywhere/pull/169,madhusudancs,"Use the same node suffix everywhere, these are used by service controller.","cc @mikedanese @errordeveloper 
",[],1,2016-07-06 22:04:39,2016-07-06 22:10:03,2016-07-06 22:10:03,True,2016-07-06 22:10:03,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/172,https://github.com/kubernetes/kubernetes-anywhere/pull/172,colemickens,azure: phase1 add routeTableName to azure.json,"I changed a small something in the cloudprovider code I'm about to send a PR for; this is the corresponding change for bring-up.
",[],1,2016-07-12 04:55:11,2016-07-12 17:27:41,2016-08-17 22:08:39,True,2016-07-12 17:27:41,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/174,https://github.com/kubernetes/kubernetes-anywhere/pull/174,obi1kenobi,Remove --allow-unauthenticated from apt-get call.,"Adds the public key matching the docker-engine package, and authenticates the package during installation.

Addresses #173
",[],1,2016-07-12 19:55:26,2016-09-19 13:12:01,2016-09-19 13:12:05,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/175,https://github.com/kubernetes/kubernetes-anywhere/pull/175,colemickens,azure: ad->aad rename,"Reacting to one more change from the cloudprovider PR.
",[],1,2016-07-15 11:04:43,2016-07-15 16:29:28,2016-08-17 22:08:39,True,2016-07-15 16:29:28,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/176,https://github.com/kubernetes/kubernetes-anywhere/pull/176,madhusudancs,Store the kubeconfig on the master as well.,"Some kube components such as kube-proxy that run as daemon set
run on master as well and they need kubeconfig to contact the
API server, so we need to store the kubeconfig on the master
as well.
","['errordeveloper', 'colemickens', 'mikedanese']",1,2016-07-19 17:06:52,2016-07-20 03:36:58,2016-07-20 03:36:58,True,2016-07-20 03:36:58,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/178,https://github.com/kubernetes/kubernetes-anywhere/pull/178,madhusudancs,Mount the /dev directory in the kubelet container so that it can detect persistent disks.,"This seems to work.
",['mikedanese'],1,2016-07-21 00:09:23,2016-07-21 06:24:50,2016-07-21 06:24:50,True,2016-07-21 06:24:50,madhusudancs,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/180,https://github.com/kubernetes/kubernetes-anywhere/pull/180,madhusudancs,Use hyperkube for kube-proxy.,"It makes it much easier to use kubernetes-anywhere for deployments.
","['colemickens', 'mikedanese']",1,2016-07-21 03:16:26,2016-07-21 03:33:53,2016-07-21 03:33:53,True,2016-07-21 03:33:53,madhusudancs,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/181,https://github.com/kubernetes/kubernetes-anywhere/pull/181,mikedanese,switch minion to node: minion is deprecated,,['madhusudancs'],1,2016-07-21 18:38:07,2016-07-21 22:56:47,2016-07-21 22:56:49,True,2016-07-21 22:56:47,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/185,https://github.com/kubernetes/kubernetes-anywhere/pull/185,colemickens,[wip] Azure: Enable SSD and Docker storage on ephemeral drive,"This builds on top of https://github.com/kubernetes/kubernetes-anywhere/pull/157

The diff (the latest commit) enables Premium storage in Azure, and mounts the ephemeral drive to /var/lib/docker. It's wiped on every boot for a few reasons, but it's fine for Kubernetes purposes and speeds things up quite a bit.

CC @theobolo

Theo, this differs from your fork in one way: I do the ephemeral drive configuration in Ansible rather than in `configure-vm.sh`; although I realize that means the intial Ansible container is still a bit slow... I feel it's the more appropriate place to do that sort of change.

Obviously shouldn't be merged until we decide some other things; this will have to change if we move to Ignition, etc.

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/kubernetes/kubernetes-anywhere/185)

<!-- Reviewable:end -->
",[],5,2016-07-29 05:48:46,2016-09-18 00:05:52,2016-09-30 06:31:32,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/186,https://github.com/kubernetes/kubernetes-anywhere/pull/186,janetkuo,Fix typo in README,,[],1,2016-07-31 00:28:55,2016-08-23 14:45:33,2016-08-23 14:45:33,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/187,https://github.com/kubernetes/kubernetes-anywhere/pull/187,mikedanese,extract tls stuff in azure and gce to a cluster_tls function in tf.jsonnet,,['colemickens'],1,2016-08-03 07:25:27,2016-08-04 20:02:54,2016-08-04 20:02:56,True,2016-08-04 20:02:54,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/189,https://github.com/kubernetes/kubernetes-anywhere/pull/189,mikedanese,don't manage the gce network with tf,"Let the user create and delete the network. Default network usually exists.

Temporarily address https://github.com/kubernetes/kubernetes-anywhere/issues/141

@madhusudancs WDYT?
",[],1,2016-08-12 21:14:33,2016-08-13 02:18:42,2016-09-01 22:47:24,True,2016-08-13 02:18:41,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/190,https://github.com/kubernetes/kubernetes-anywhere/pull/190,mikedanese,bump ignite docker version,"This is a build of what is currently in phase2/ignite
",[],1,2016-08-12 22:27:36,2016-08-12 22:31:58,2016-08-12 22:32:00,True,2016-08-12 22:31:58,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/191,https://github.com/kubernetes/kubernetes-anywhere/pull/191,mikedanese,run make fmt,,[],1,2016-08-12 22:31:42,2016-08-12 22:44:51,2016-08-12 22:44:54,True,2016-08-12 22:44:51,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/194,https://github.com/kubernetes/kubernetes-anywhere/pull/194,mikedanese,fix failing dns e2e tests,"I believe this fixes the failing DNS e2e tests. Note that this value matches the --cluster-dns kubelet parameter https://github.com/kubernetes/kubernetes-anywhere/blob/master/phase2/ignition/vanilla/node.jsonnet#L23

Testing now.
",[],1,2016-08-13 00:29:27,2016-08-13 02:18:56,2016-08-13 02:18:58,True,2016-08-13 02:18:56,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/195,https://github.com/kubernetes/kubernetes-anywhere/pull/195,colemickens,Jenkinsfile for Azure,"This adds a basic Jenkinsfile for testing kubernetes-anywhere (+kubernetes) on Azure.

Currently it builds HEAD of master of `kubernetes` and tests that along with the ""current"" branch of `kubernetes-anywhere` checked out by the Jenkins job. For now this will be master on a regular interval, with PRs being built on demand and tested as well.

Goal is to provide some basic testing of k-a and kubernetes, and allow me to iterate on some other PRs faster (adding back premium storage, ssd support, isolated deploy dirs).

This actually doesn't work on `master` of Kubernetes due to three issues:
1. (general issue) Problems handling paths with spaces. [PR for this issue.](https://github.com/kubernetes/kubernetes/pull/30583)
2. (recent master regression) [kubelet fails to launch static pods: ""inspected image [] does not match []"" ](https://github.com/kubernetes/kubernetes/issues/30580). [PR for this issue.](https://github.com/kubernetes/kubernetes/pull/30582)
3. (recent master regression) [apiserver doesn't come up anymore: ""can't setup API""]()

Any help on getting the first two merged and the third one investigated is appreciated.

In the future there will be another Jenkinsfile for building master/prs of kubernetes and then testing that against the last release and master of kubernetes-anywhere. This will also be a jenkins-dsl job used for reconstituting all of these jobs on a new Jenkins server, so that this work is easily reproducible and so that others can setup CD for Azure.

Future work:
- Another Jenkinsfile oriented around building `kubernetes` master/pull-requests using the latest stable of `kubernetes-anywhere`
- job-dsl definition for all of the Azure Jenkins job so it can easily be re-setup or so other users can run Azure Kubernetes CD.
- Run conformance tests (need help from @mikedanese on this)

Note, this also includes getting Azure over onto Ignition.

This is currently running at https://jenkins.polykube.io. The following GitHub users have been granted access: @brendandburns @rootfs @mikedanese

<img width=""859"" alt=""screen shot 2016-08-15 at 11 25 24 am"" src=""https://cloud.githubusercontent.com/assets/327028/17676907/5bd4a590-62e5-11e6-9e1a-b0f69e94609d.png"">
",[],1,2016-08-15 19:40:09,2016-08-15 20:21:30,2016-08-17 22:08:23,True,2016-08-15 20:21:30,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/196,https://github.com/kubernetes/kubernetes-anywhere/pull/196,mikedanese,fix dns again,"too hasty with the last one.
",[],1,2016-08-15 20:00:17,2016-08-15 20:21:43,2016-08-15 20:21:45,True,2016-08-15 20:21:43,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/197,https://github.com/kubernetes/kubernetes-anywhere/pull/197,mikedanese,delete non ignition phase1 compatible stuff and redo docs.,"Still quite a bit of work to do on this one but opening now for visibility
",[],2,2016-08-15 20:28:22,2016-08-17 21:52:54,2016-08-17 22:11:08,True,2016-08-17 21:52:54,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/201,https://github.com/kubernetes/kubernetes-anywhere/pull/201,colemickens,Upgrade phase1 (azure) to terraform 0.7.0,"This shouldn't be merged unless there's a plan for fixing the other phase1 implementation, since this PR modifies the shared tf jsonnet lib.
",[],4,2016-08-17 01:09:20,2016-08-23 14:44:41,2016-09-30 06:31:26,True,2016-08-23 14:44:41,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/202,https://github.com/kubernetes/kubernetes-anywhere/pull/202,colemickens,Mount the /dev directory in the kubelet container so that it can detect persistent disks.,"Looks like this commit (4bb4510592a701c3319c2fb0b22a7ceeacb3ab5f) from @madhusudancs got dropped when we moved from ansible->ignition.

This adds it back.
",[],1,2016-08-17 01:51:47,2016-08-17 02:12:53,2016-08-17 22:08:18,True,2016-08-17 02:12:53,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/203,https://github.com/kubernetes/kubernetes-anywhere/pull/203,colemickens,[WIP/Discussion] kickstart.sh for easier user experience,"@mikedanese This is what I've got so far.

I need to write the `kickstart.sh` to align with these docs. Should give a similar experience as is offered in the current ""curl-pipe-into-bash"" strategy with `kube-up`.

Thoughts? I'm going to work on `kickstart.sh` now unless you were thinking something else.

`kickstart.sh` needs to boot the latest k8s-anywhere container and execute `make deploy-all` which will in turn call `make config && make deploy && make validate && make addons`. I still need to reason through how to handle the `.tmp` directories in various places between executions... I think to handle that well we need to revisit the idea I have in https://github.com/kubernetes/kubernetes-anywhere/pull/157 since it would just require mounting `$HOME/kubernetes-anywhere-clusters:/opt/kubernetes-anywhere/clusters` and `.config.json` into the container.

DONT_MERGE
",[],3,2016-08-18 00:19:02,2016-08-24 05:09:45,2016-08-24 05:13:54,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/204,https://github.com/kubernetes/kubernetes-anywhere/pull/204,mikedanese,Terraform update with gce fixup,"cc @colemickens 
",[],5,2016-08-22 01:40:27,2016-08-23 14:44:40,2016-08-23 14:44:43,True,2016-08-23 14:44:40,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/205,https://github.com/kubernetes/kubernetes-anywhere/pull/205,colemickens,azure: test: add timeout waiting for cluster,"Deployments keep getting stuck. Either something is up with Azure networking or the Google storage bucket where `kubectl` is pulled from. If ignition fails to download `kubectl` it seems to fail out, and `kubelet.service` never gets created.

The pipeline then gets stuck waiting. For now, I'm adding the timeout in the Jenkins pipeline.
",[],1,2016-08-23 06:10:09,2016-08-23 14:44:21,2016-09-30 06:31:20,True,2016-08-23 14:44:21,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/206,https://github.com/kubernetes/kubernetes-anywhere/pull/206,mikedanese,getting started guide for gce,,[],1,2016-08-24 03:51:00,2016-08-24 05:23:43,2016-08-24 05:23:45,True,2016-08-24 05:23:43,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/207,https://github.com/kubernetes/kubernetes-anywhere/pull/207,colemickens,`make deploy` now waits for cluster and deploys addons,"Note:
- I updated the string that `phase1/<provider>/do` expects to look for `{deploy,destroy}-cluster` to align with the target in the top-level `Makefile`. The functions inside `./do` that they map to are still just `deploy`/`destroy`.
",[],1,2016-08-24 04:51:43,2016-08-24 05:28:37,2016-09-30 06:31:19,True,2016-08-24 05:28:37,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/208,https://github.com/kubernetes/kubernetes-anywhere/pull/208,mikedanese,[WIP] add e2e runner,"not even close to ready. I'm using this to play with https://github.com/kubernetes/test-infra/pull/433/
",[],1,2016-08-24 05:32:34,2016-11-10 06:08:04,2016-11-10 06:08:07,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/209,https://github.com/kubernetes/kubernetes-anywhere/pull/209,colemickens,Azure Getting Started Guide,"Rendered form is here: https://github.com/colemickens/kubernetes-anywhere/blob/pr-azure-docs/phase1/azure/README.md

I think this is good for now and I can finally deprecate [azure-kubernetes-demo](https://github.com/colemickens/azure-kubernetes-demo).
",[],3,2016-08-24 05:38:05,2016-08-24 05:40:49,2016-09-30 06:31:19,True,2016-08-24 05:40:49,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/210,https://github.com/kubernetes/kubernetes-anywhere/pull/210,colemickens,azure: test: fix teardown,"I accidentally broke teardown in my Jenkins jobs. This should fix it.
",[],1,2016-08-24 07:24:43,2016-08-24 20:10:48,2016-09-30 06:31:15,True,2016-08-24 20:10:48,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/211,https://github.com/kubernetes/kubernetes-anywhere/pull/211,colemickens,azure: docs: add AAD SP helper,"- Add a script to help the user create an Azure Active Directory Service Principal
- Add instructions to docs for using this script

CC: @brendandburns
",[],1,2016-08-24 20:44:49,2016-08-25 05:06:02,2016-09-30 06:31:11,True,2016-08-25 05:06:02,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/213,https://github.com/kubernetes/kubernetes-anywhere/pull/213,colemickens,move kconfig-conf to Dockerfile,,[],1,2016-08-25 10:44:52,2016-08-26 18:00:57,2016-09-30 06:31:11,True,2016-08-26 18:00:57,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/214,https://github.com/kubernetes/kubernetes-anywhere/pull/214,colemickens,Switch base to Alpine,"This stacks on top of #213. Thoughts? Is it worth switching?
",[],2,2016-08-25 10:48:51,2016-08-26 18:00:55,2016-09-30 06:31:07,True,2016-08-26 18:00:55,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/215,https://github.com/kubernetes/kubernetes-anywhere/pull/215,colemickens,Upgrade addons,"Note, I picked the kubernetes-dashboard release from today (it's 1.4.0-beta1).
",[],3,2016-08-26 22:09:40,2016-09-01 00:59:42,2016-09-30 06:31:03,True,2016-09-01 00:59:42,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/216,https://github.com/kubernetes/kubernetes-anywhere/pull/216,colemickens,azure: only tf apply twice if needed,"(I cleaned up the wait message as well)
",[],1,2016-08-26 22:11:05,2016-09-01 00:59:33,2016-09-30 06:31:03,True,2016-09-01 00:59:33,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/217,https://github.com/kubernetes/kubernetes-anywhere/pull/217,colemickens,Azure: Automatically provision Service Principal for user,"The PR does a few things:
1. Fixes a small bug in `Makefile` introduced when I rearranged the `make deploy` command.
2. Upgrades `terraform`, adds `curl` to the docker environment, removes a defunct comment.
3. Rearranges the Azure phase1 `Kconfig` so the user can input `subscription_id` first off and then spam `<enter>` for all the other questions.
4. Changes the defaults in phase2 to point to an ignition container that I'm updating and to point to the latest `1.4.0-alpha.3` build of Kube 1.4.x.
5. **Automatic** creation of a service principal for Azure. This changes the `create-azure-service-principal.sh` script in a few ways:
   - (`do`)  Will notice that the `tenant_id` field is empty and will automatically infer it based on the `subscription_id`.
   - (`do`)  Will notice that the `client_id`/`client_secret` fields are empty and offer to create creds
   - (`create-azure-service-principal.sh`) Accepts command line arguments instead of being interactive
   - (`create-azure-service-principal.sh`) Will automatically retry if the role assignment fails. (It does not backoff yet)
   - (`do`)  Will backfill both `.config` and `.config.json`.

The SP created will have Subscription level access by default. The user is warned of this in `./do` so they can consent or can refuse and stop the deployment.

**The net result:** The user only needs to know their subscription ID in order to do this deployment. They don't need to pre-provision a ServicePrincipal (unless they don't have permission to create a new SP, in which case they need to get a more privileged user to make them one)
",[],7,2016-08-29 04:53:30,2016-09-07 18:30:12,2016-09-30 06:31:02,True,2016-09-07 18:30:12,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/219,https://github.com/kubernetes/kubernetes-anywhere/pull/219,colemickens,azure: readme: fix expose,,[],1,2016-08-29 16:51:58,2016-08-30 05:29:24,2016-09-30 06:31:01,True,2016-08-30 05:29:24,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/220,https://github.com/kubernetes/kubernetes-anywhere/pull/220,madhusudancs,Improve multi-cluster support by prefixing cluster name in TLS provider names and kubeconfigs.,,"['colemickens', 'mikedanese']",1,2016-09-01 22:40:51,2016-09-07 18:29:52,2016-09-07 19:37:22,True,2016-09-07 18:29:52,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/221,https://github.com/kubernetes/kubernetes-anywhere/pull/221,theobolo,yiugyh,,[],2,2016-09-07 09:40:28,2016-09-07 09:40:44,2016-09-07 09:40:44,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/222,https://github.com/kubernetes/kubernetes-anywhere/pull/222,mikedanese,remove travis,"We can readd later if we feel like it but it's currently very broken
",[],1,2016-09-07 18:31:36,2016-09-07 18:32:07,2016-09-07 18:32:12,True,2016-09-07 18:32:07,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/223,https://github.com/kubernetes/kubernetes-anywhere/pull/223,errordeveloper,"Indicate that user is in a new shell, which is in a container",,[],1,2016-09-08 13:40:09,2016-09-22 15:23:33,2016-09-22 15:23:34,True,2016-09-22 15:23:33,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/224,https://github.com/kubernetes/kubernetes-anywhere/pull/224,colemickens,azure: fix tenant_id auto-detection and back-filling,"1. Had accidentally hard-coded my subscription ID, meaning all users would've gotten the MS tenant ID if they were using the automatic SP creation script. No information risk, but it wouldn't have worked for them.
2. The backfilling of the config files wasn't being done correctly, causing the user to need to run `make deploy` twice.

Both of these issues are resolved with this PR.
",[],2,2016-09-08 21:52:43,2016-09-22 15:23:09,2016-09-30 06:31:00,True,2016-09-22 15:23:09,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/225,https://github.com/kubernetes/kubernetes-anywhere/pull/225,colemickens,azure: fix another SP propagtion delay,"`./create-azure-service-principal.sh` is meant to fix propagation issues, but it only fixes it for the RBAC Role Assignment.

As it turns out, this same problem can occur if Terraform fires up too quickly after the role assignment. For now, the best I can do is introduce a sleep and hope that's sufficient.

If 10 seconds isn't enough, users can simply re-execute `make deploy` and it should eventually succeed.

This stacks on top of #224 .
",[],3,2016-09-08 22:14:37,2016-09-22 15:23:08,2016-09-30 06:30:55,True,2016-09-22 15:23:08,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/226,https://github.com/kubernetes/kubernetes-anywhere/pull/226,colemickens,azure: fix kubeconfig mkdir instructions,"The instructions were a bit off and had the user creating `~/.kube/config` as a directory, which resulted in the move placing the edit into a directory such that the file ended up at `~/.kube/config/kubeconfig.json` rather than at `~/.kube/confifg`.

CC: @anhowe This is the issue you mentioned this afternoon.
",[],1,2016-09-09 04:40:05,2016-09-22 15:21:50,2016-09-30 06:30:56,True,2016-09-22 15:21:50,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/227,https://github.com/kubernetes/kubernetes-anywhere/pull/227,theobolo,azure : Rebase ephemeral & premium Disks options ,"Hello guys,

@colemickens @mikedanese 

I rebased a little bit the Cole's PR about implementation of ephemeral and premium disks on Azure. I need to work a little bit on it so please DO NOT MERGE for the moment ;)

Some points that are not working for the moment : 
- Implementation of `cfg.phase1.azure.use_premium_storage` and `cfg.phase1.azure.use_ephemeral_drive` was made with a `String` type with choice : `yes` or `no`. Actually the condition :  

>  local storage_type = if cfg.azure.use_premium_storage == ""yes"" then ""Premium_LRS"" else ""Standard_LRS"";

into `azure.jsonnet` is not working with a `bool` type if is setted on ""n"". The line is commented into the `.config` ...
- The condition `if` into the `phase2/ignition/vanilla/node.jsonnet` is not working properly, i'm not an expert in `jsonnet` and actually if i hit the condition by putting `cfg.phase1.azure.use_ephemeral_drive == yes` the Ignition init crashed on the nodes and throw an error. My `if` condition is certainly badly placed ... 

@mikedanese  you did something similar in the phase3, with `bool` type (addons) but i wasn't able to make it works on the phase1 for Azure. Terraform is still dropping an error saying that `use_ephemeral_drive` is not defined or missing. Cole thinked about a specific problem into Kconfig-conf, but since i saw that you handled it into phase3 maybe that you have the solution.

By the way, use_premium_storage is working properly, the rest needs just some fixes.

Waiting for your review guys, 

Cheers, 
Théo
",['colemickens'],5,2016-09-09 14:56:29,2017-03-02 06:56:28,2017-03-02 06:56:28,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/228,https://github.com/kubernetes/kubernetes-anywhere/pull/228,colemickens,phase2: kubernetes version: 1.4.0-alpha.3 -> 1.4.0-beta.3,,[],1,2016-09-12 20:27:09,2016-09-16 22:28:00,2016-09-30 06:30:55,True,2016-09-16 22:28:00,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/231,https://github.com/kubernetes/kubernetes-anywhere/pull/231,colemickens,addons: dashboard: 1.4.0-beta.2 -> 1.4.0,"~~Do not merge. I haven't tested this yet but want to send the PR before I forget about it again.~~

It works fine.
",[],1,2016-09-23 00:56:06,2016-09-23 05:00:53,2016-09-30 06:30:54,True,2016-09-23 05:00:53,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/233,https://github.com/kubernetes/kubernetes-anywhere/pull/233,colemickens,"Update kubernetes, heapster, kube-proxy, kube-dns","1. Phase2: Default to `1.4.0` final.
2. Addons: DNS: Mirror upstream changes
3. Addons: Kube-Proxy: Remove deprecated flag
4. Addons: Kube-Proxy: kubeconfig volume should be read-only
5. Addons: Heapster: switch to `1.2.0` final.
",[],6,2016-09-27 05:00:26,2016-09-28 21:22:34,2016-09-30 06:30:52,True,2016-09-28 21:22:34,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/236,https://github.com/kubernetes/kubernetes-anywhere/pull/236,mikedanese,TEST TRAVIS,,[],2,2016-09-28 17:10:55,2016-09-28 21:35:38,2016-09-28 21:35:40,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/237,https://github.com/kubernetes/kubernetes-anywhere/pull/237,colemickens,azure: document naming restrictions,"Addresses #234. 

@dcieslak19973, @ahmetalpbalkan: PTAL

Rendered new page is here: https://github.com/colemickens/kubernetes-anywhere/blob/pr-docs-strg-acct-name/phase1/azure/README.md

New section is specifically here: https://github.com/colemickens/kubernetes-anywhere/blob/pr-docs-strg-acct-name/phase1/azure/README.md#cluster-naming-restrictions
",[],1,2016-09-28 18:39:46,2016-09-29 22:33:24,2016-09-30 06:30:46,True,2016-09-29 22:33:24,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/238,https://github.com/kubernetes/kubernetes-anywhere/pull/238,colemickens,use --rm when running the deploy environment container,"Addresses #235.
",[],1,2016-09-28 18:51:43,2016-09-28 21:22:57,2016-09-30 06:30:47,True,2016-09-28 21:22:57,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/240,https://github.com/kubernetes/kubernetes-anywhere/pull/240,mikedanese,Test travis,,[],2,2016-09-28 21:36:29,2016-09-28 21:37:37,2016-09-29 22:41:34,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/241,https://github.com/kubernetes/kubernetes-anywhere/pull/241,mikedanese,Test travis,,[],2,2016-09-28 21:38:04,2016-09-29 22:41:31,2016-09-29 22:42:09,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/246,https://github.com/kubernetes/kubernetes-anywhere/pull/246,ahmetb,phase1/azure: typo fix for systemd dropin,"Fixes #243.

Signed-off-by: Ahmet Alp Balkan ahmetalpbalkan@gmail.com
",[],1,2016-09-30 00:40:54,2016-09-30 01:50:46,2016-09-30 01:50:51,True,2016-09-30 01:50:46,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/247,https://github.com/kubernetes/kubernetes-anywhere/pull/247,colemickens,azure: extend wait for AAD consistency,"1. Wait 30 seconds instead of 10 to workaround AAD propagation delays.
2. Document this failure case and workaround.
",[],1,2016-09-30 00:49:32,2016-09-30 01:53:01,2016-09-30 06:30:29,True,2016-09-30 01:53:01,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/248,https://github.com/kubernetes/kubernetes-anywhere/pull/248,colemickens,"azure: add storage_name param, autogen if blank","1. Add a `storage_name` parameter to `phase1/azure/Kconfig`.
2. Use this field in the Azure Terraform file.
3. In `phase1/azure/do` check, and auto-fill-if-missing the `storage_account_name` similarly to how the TenantID and SP are auto-generated and filled in.

Not terribly pretty, but functional for now and would enable us to remove the ""global uniqueness"" requirement as it's been a source of confusion.

Please take a look @ahmetalpbalkan, @ggm-at-apnic and let me know what your feedback is.
",[],2,2016-09-30 02:59:08,2016-09-30 05:26:51,2016-09-30 06:30:44,True,2016-09-30 05:26:51,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/250,https://github.com/kubernetes/kubernetes-anywhere/pull/250,colemickens,azure: always infer tenant_id,"Fixes #249.

(This stacks on top of PR #248 and should be rebased and merged only after #248 is merged).

cc: @ahmetalpbalkan
",[],1,2016-09-30 04:05:58,2016-09-30 05:55:02,2016-09-30 06:30:42,True,2016-09-30 05:55:02,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/252,https://github.com/kubernetes/kubernetes-anywhere/pull/252,colemickens,validate: clarify when success is achieved,"CC: @squillace who reported this as being somewhat confusing.
",[],1,2016-09-30 06:13:06,2016-09-30 06:24:57,2016-09-30 06:30:41,True,2016-09-30 06:24:57,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/258,https://github.com/kubernetes/kubernetes-anywhere/pull/258,jordanyaker,[kubelet.service] Add the mounting of /var/log.,"The mounting of `/var/log` enables necessary log sharing when Fluentd is in play.
",[],1,2016-10-03 12:46:59,2016-10-05 00:29:43,2016-10-05 00:55:54,True,2016-10-05 00:29:43,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/259,https://github.com/kubernetes/kubernetes-anywhere/pull/259,uthark,Fixed couple of typos in  README.md,"Fixed couple of typos in  README.md
",[],1,2016-10-03 19:45:17,2016-11-10 06:07:43,2016-11-10 06:07:44,True,2016-11-10 06:07:43,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/261,https://github.com/kubernetes/kubernetes-anywhere/pull/261,colemickens,azure: add troubleshooting directions,"Add some basic troubleshooting directions for Azure.
",[],1,2016-10-04 04:00:11,2016-10-04 04:04:50,2016-10-04 04:04:50,True,2016-10-04 04:04:50,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/263,https://github.com/kubernetes/kubernetes-anywhere/pull/263,colemickens,default to kubernetes 1.4.1,,[],1,2016-10-11 06:46:40,2016-10-11 06:54:04,2016-10-11 06:54:04,True,2016-10-11 06:54:04,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/270,https://github.com/kubernetes/kubernetes-anywhere/pull/270,pipejakob,Add kubeadm support for phase2.,"Currently, this only supports using the most recent .deb packages.

- Exposes port 9898 internally for discovery service
- Nodes use master's internal IP
- Move a lot of configure-vm.sh logic into phase2 provider dirs (which get concatenated by jsonnet)

CC @mikedanese ",['mikedanese'],1,2016-11-08 23:57:51,2016-11-15 19:49:05,2017-03-09 19:36:08,True,2016-11-15 19:49:05,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/273,https://github.com/kubernetes/kubernetes-anywhere/pull/273,pipejakob,Fixes #271: Output GCE's kubeconfig.json to .tmp,"This matches what azure does, and the expectations of the Makefile.

After this change, doing `make deploy` is fixed for GCE, since `util/validate` is able to find the correct configuration to connect and count the nodes.

See https://github.com/kubernetes/kubernetes-anywhere/issues/271

CC @mikedanese ",[],1,2016-11-09 20:17:17,2016-11-10 06:07:14,2016-11-10 06:07:15,True,2016-11-10 06:07:14,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/274,https://github.com/kubernetes/kubernetes-anywhere/pull/274,pipejakob,Support FORCE_DESTROY option in gce.,"This is already implemented in the azure phase1, and will allow users to automate destruction without interactive prompts:

    $ make FORCE_DESTROY=y destroy

This change is built on top of another pull request (https://github.com/kubernetes/kubernetes-anywhere/pull/270) so please only look at the newest commit.

CC @mikedanese ",[],1,2016-11-09 21:53:34,2016-11-16 01:16:26,2016-11-16 01:16:26,True,2016-11-16 01:16:26,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/275,https://github.com/kubernetes/kubernetes-anywhere/pull/275,pipejakob,New make target: kubeconfig-path,"As a consumer of kubernetes-anywhere, I wanted a supported way to discover the `kubeconfig.json` file path without relying on the internal details of where it's stored per phase1 provider.

The target name feels a little awkward, so I'm open to suggestions of a better one.

CC @mikedanese ",[],1,2016-11-10 03:24:35,2016-11-10 06:06:49,2016-11-10 06:06:49,True,2016-11-10 06:06:49,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/277,https://github.com/kubernetes/kubernetes-anywhere/pull/277,pipejakob,Force API port 443 to match other implementations.,"`Kubeadm` now defaults to 6443 for the secure API listener, so override it to match the conventions of the rest of `kubernetes-anywhere`.

CC @mikedanese ",[],1,2016-11-17 19:56:01,2016-11-18 02:35:44,2016-11-18 02:35:44,True,2016-11-18 02:35:44,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/278,https://github.com/kubernetes/kubernetes-anywhere/pull/278,pipejakob,Add option to fetch kubeconfig from kubeadm master.,"When using `kubeadm` for phase2, the TLS certs created by `terraform` are ignored, and `kubeadm init` generates these on the master. If the user wants to be able to connect to the cluster remotely, we need to fetch the kubeconfig from the master once it's ready:

    $ make WAIT_FOR_KUBECONFIG=y deploy-cluster

CC @mikedanese ",[],1,2016-11-17 23:23:05,2016-11-21 19:31:10,2016-11-21 19:31:10,True,2016-11-21 19:31:10,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/279,https://github.com/kubernetes/kubernetes-anywhere/pull/279,pipejakob,Specify master's external IP via --api-advertise-addresses.,"This allows `kubeadm init` to include the master's external IP as part of the TLS certificate. Otherwise, remote clients reject the certificate since it doesn't match the IP they're connecting to.

CC @mikedanese ",[],1,2016-11-17 23:48:18,2016-11-21 19:35:49,2016-11-21 19:35:49,True,2016-11-21 19:35:49,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/280,https://github.com/kubernetes/kubernetes-anywhere/pull/280,pipejakob,Skip kubeadm preflight checks.,"A race condition in one of `kubeadm`'s preflight checks has been causing occasional failures of masters/nodes to come up correctly.

Since we provide a completely automated setup, any failed preflight checks don't offer much value since the user isn't interacting with `kubeadm` to see its error messages and address the issues, so we should
disable them anyway.

CC @mikedanese ",[],1,2016-11-18 00:01:30,2016-11-21 19:30:08,2016-11-21 19:30:08,True,2016-11-21 19:30:08,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/282,https://github.com/kubernetes/kubernetes-anywhere/pull/282,abrarshivani,Add support for vSphere cloudprovider,This PR adds support for vSphere cloudprovider in kubernetes-anywhere. It is internally reviewed [here](https://github.com/abrarshivani/kubernetes-anywhere/pull/1).,['mikedanese'],15,2016-11-23 22:51:08,2016-11-24 21:47:42,2016-11-24 21:48:07,True,2016-11-24 21:47:42,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/284,https://github.com/kubernetes/kubernetes-anywhere/pull/284,abrarshivani,Fix: Kubelet restarts for vSphere CloudProvider,"In vSphere CloudProvider, when node restarts, kubelet doesn't start. This PR fixes the same.",[],3,2016-12-02 00:26:54,2016-12-09 19:26:08,2016-12-09 19:26:08,True,2016-12-09 19:26:08,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/287,https://github.com/kubernetes/kubernetes-anywhere/pull/287,abrarshivani,Remove cidr parameters for vsphere,This PR removes cidr parameters for vsphere. Since vSphere supports flannel these parameters are not needed.,['mikedanese'],1,2016-12-09 00:43:16,2016-12-09 19:26:20,2016-12-09 19:26:20,True,2016-12-09 19:26:20,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/293,https://github.com/kubernetes/kubernetes-anywhere/pull/293,BaluDontu,kube-anywhere doesn't work with multiple resource pools in vSphere,"Currently kube-anywhere doesn't work with multiple resource pools. Consider the below scenario:

I have a VC deployed with multiple clusters and hence multiple resource pools. I deployed the ""KubernetesAnywhereTemplatePhotonOS"" in one of the ESX boxes present in one of the clusters.

when I did make deploy, kube-anywhere fails to deploy and reports the following errors.

Error applying plan:

2 error(s) occurred:

* vsphere_virtual_machine.kubevm2: default resource pool resolves to multiple instances, please specify
* vsphere_virtual_machine.kubevm1: default resource pool resolves to multiple instances, please specify

Right now kube-anywhere doesn't take into consideration the resource pools as a config parameter that must provided to the user to be entered. This is in contrast with kube-up which needs a resource pool to be configured in order for kubernetes cluster to be created.

kube-anywhere right now works with single resource pool.

This fix will make sure kube-anywhere works with multiple resource pools. The resource pool is provided as a config entry to the user.

@abrarshivani @kerneltime @pdhamdhere",[],1,2016-12-13 02:10:17,2016-12-17 18:32:08,2016-12-17 18:32:08,True,2016-12-17 18:32:08,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/297,https://github.com/kubernetes/kubernetes-anywhere/pull/297,colemickens,azure: mention that ACS/ACS-Engine is preferred method,cc: @brendandburns ,[],1,2016-12-15 07:09:21,2016-12-15 21:48:36,2016-12-15 21:48:37,True,2016-12-15 21:48:36,colemickens,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/302,https://github.com/kubernetes/kubernetes-anywhere/pull/302,kerneltime,Minor changes and document known issues,,[],1,2016-12-20 21:39:40,2016-12-21 00:10:22,2016-12-21 00:10:22,True,2016-12-21 00:10:22,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/303,https://github.com/kubernetes/kubernetes-anywhere/pull/303,pipejakob,Add support for gs:// links for kubeadm .debs.,"Instead of only supporting the latest stable release, allow specifying a Cloud Storage link for pulling arbitary builds. This should allow developers to bring up kubeadm clusters using their local development build, as well as help e2e test kubeadm on pull requests or master commits.

CC @mikedanese ",[],1,2016-12-21 21:23:29,2016-12-21 22:03:37,2016-12-21 22:03:37,True,2016-12-21 22:03:37,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/305,https://github.com/kubernetes/kubernetes-anywhere/pull/305,abrarshivani,Change ignition provider from vanilla to file,Changes ignition provider from vanilla to file and fixes #286.,[],1,2016-12-23 13:50:57,2017-01-24 22:06:54,2017-02-07 17:26:10,True,2017-01-24 22:06:54,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/306,https://github.com/kubernetes/kubernetes-anywhere/pull/306,kerneltime,Add detailed steps for vSphere,,[],1,2016-12-24 00:39:20,2016-12-26 22:29:27,2016-12-26 22:29:27,True,2016-12-26 22:29:27,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/308,https://github.com/kubernetes/kubernetes-anywhere/pull/308,kerneltime,Update TOC,,[],1,2016-12-29 08:40:34,2016-12-29 19:06:10,2016-12-29 19:06:10,True,2016-12-29 19:06:10,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/310,https://github.com/kubernetes/kubernetes-anywhere/pull/310,jcbsmpsn,Document GCP development deployment process.,"Describe the steps for using kubernetes-anywhere to deploy a kubernetes
cluster on GCE VMs with a local development build of kubernetes.",[],2,2017-01-05 22:16:27,2017-01-09 21:22:04,2017-01-09 21:22:04,True,2017-01-09 21:22:04,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/311,https://github.com/kubernetes/kubernetes-anywhere/pull/311,pipejakob,"Fix ""make menuconfig"" from within ""make docker-dev""","The `menuconfig` target was broken because `kconfig-mconf` was missing from the Docker image, and `kconfig-mconf` wasn't being compiled because `ncurses-dev` wasn't detected. Adding `ncurses-dev` enables compiling of both `mconf` and `nconf`, but we need to disable `nconf` because it depends on `libgpm`, which is missing from the Alpine repo.

After this change, running `make docker-dev` followed by `make menuconfig` from within the Docker shell works.

CC @jcbsmpsn ",[],1,2017-01-06 00:21:08,2017-01-06 16:45:10,2017-01-06 16:45:10,True,2017-01-06 16:45:10,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/314,https://github.com/kubernetes/kubernetes-anywhere/pull/314,divyenpatel,Updated documentation to recommend kubernetes 1.4.8 for vSphere Cloud Provider,"Changes for the issue - https://github.com/vmware/kubernetes/issues/54

@kerneltime @BaluDontu Updated phase1/vsphere/README.md and phase2/Kconfig to recommend kubernetes 1.4.8 for vSphere Cloud Provider",[],1,2017-01-16 20:01:14,2017-01-18 18:49:31,2017-01-18 18:49:31,True,2017-01-18 18:49:30,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/318,https://github.com/kubernetes/kubernetes-anywhere/pull/318,jcbsmpsn,Update DEVEL doc to include procedures for .deb packaged components.,,[],1,2017-01-23 17:04:09,2017-01-24 22:05:08,2017-01-24 22:05:08,True,2017-01-24 22:05:08,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/320,https://github.com/kubernetes/kubernetes-anywhere/pull/320,jcbsmpsn,Use lowercase hex token for kubeadm commands.,"The kubeadm command was updated to do input validation on
the token used for initializing and joining clusters. This update
generates lowercase tokens to match the kubeadm input rules.",[],1,2017-01-23 23:23:16,2017-01-24 22:04:48,2017-01-24 22:04:48,True,2017-01-24 22:04:48,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/321,https://github.com/kubernetes/kubernetes-anywhere/pull/321,kerneltime,Add note for why not to power on template vm,fixes https://github.com/kubernetes/kubernetes-anywhere/issues/319,[],1,2017-01-25 21:03:31,2017-01-27 16:09:29,2017-01-27 16:09:29,True,2017-01-27 16:09:29,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/323,https://github.com/kubernetes/kubernetes-anywhere/pull/323,jcbsmpsn,Additional documentation for configuring networking.,"Add GCE developer documentation to configure an overlay network and DNS
related pods.",[],1,2017-01-30 21:46:12,2017-01-31 04:13:37,2017-01-31 04:13:37,True,2017-01-31 04:13:37,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/326,https://github.com/kubernetes/kubernetes-anywhere/pull/326,abrarshivani,Add default storage backend as etcd3,"This PR adds parameter default storage backend to apiserver as etcd2. While launching k8s-cluster with kubernetes master branch (commit d82e51e) using kubernetes-anywhere. I found that kubernetes api-server fails with an error

```
E0111 03:00:53.829193   29597 status.go:62] apiserver received an error that is not an metav1.Status: rpc error: code = 13 desc = transport is closing
…
logging error output: ""k8s\x00\n\f\n\x02v1\x12\x06Status\x12F\n\x04\n\x00\x12\x00\x12\aFailure\x1a0rpc error: code = 13 desc = transport is closing\""\x000\xf4\x03\x1a\x00\""\x00""
```
Currently, etcd3 is made as default storage backend for api-server and kubernetes-anywhere uses etcd2. Hence, this error occurs. This can be resolved by adding parameter ```storage-backend=etcd2``` to apiserver manifest.

Refer this: https://github.com/kubernetes/kubernetes/issues/39710",[],1,2017-02-07 23:58:54,2017-02-22 23:08:33,2017-02-22 23:08:33,True,2017-02-22 23:08:33,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/328,https://github.com/kubernetes/kubernetes-anywhere/pull/328,abrarshivani,Move kubectl download to phase2 for vSphere CloudProvider,"For vSphere cloud provider kubectl was downloaded in phase1 since downloading in phase2 using ignition gave an [error](https://github.com/kubernetes/kubernetes-anywhere/issues/286). Now, that is [fixed](https://github.com/kubernetes/kubernetes-anywhere/pull/305) this PR removes the downloading of kubectl from phase1 of vSphere Cloud Provider. Also, kubectl downloaded in phase2 was of v1.3.4 even though kubernetes cluster launched was of different version. This PR fixes that.

@mikedanese Can you please build the static binary and update at https://storage.googleapis.com/public-mikedanese-k8s/k8s/ignition? Also, I tested with master branch of ignition it fails therefore can you build binary for commit 6ff90ec7f985d783246fc429ea.",[],1,2017-02-08 21:12:50,2017-02-27 20:53:16,2017-02-27 20:53:16,True,2017-02-27 20:53:16,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/331,https://github.com/kubernetes/kubernetes-anywhere/pull/331,pipejakob,Make output match reality.,"This loop was trying 60 times, but giving the indication it was only going to try 10.",[],1,2017-02-14 16:57:17,2017-02-27 20:53:43,2017-02-27 20:53:43,True,2017-02-27 20:53:43,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/333,https://github.com/kubernetes/kubernetes-anywhere/pull/333,cdornsife,Pip kconfiglib,installing kconfiglib with pip now.,[],19,2017-02-14 17:58:52,2017-02-14 18:00:01,2017-02-14 18:04:21,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/335,https://github.com/kubernetes/kubernetes-anywhere/pull/335,abrarshivani,Writing vsphere conf before launching ignition container,"Kubernetes-anywhere scripts were writing vsphere.conf after launching of ignition container which created race condition between vSphere.conf and apiserver. This PR fixes that.

Fixes this error,
```
Feb 14 15:05:16 photon-zv1KbtvMG docker[626]: F0214 15:05:16.854753     709 plugins.go:80] Couldn't open cloud provider configuration /etc/kubernetes/vsphere.conf: &os.PathError{
Op:""open"", Path:""/etc/kubernetes/vsphere.conf"", Err:0x2}
```",[],1,2017-02-14 21:43:25,2017-02-14 22:56:48,2017-02-14 22:56:48,True,2017-02-14 22:56:48,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/336,https://github.com/kubernetes/kubernetes-anywhere/pull/336,divyenpatel,Updated documentation to recommend kubernetes 1.5.3 for vSphere Cloud Provider,"Updated documentation and `phase2/Kconfig `to recommend kubernetes 1.5.3 for vSphere Cloud Provider

cc: @kerneltime @abrarshivani @BaluDontu @tusharnt @pdhamdhere",[],1,2017-02-17 23:22:39,2017-02-22 22:42:42,2017-02-22 22:42:42,True,2017-02-22 22:42:42,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/339,https://github.com/kubernetes/kubernetes-anywhere/pull/339,ianberinger,vSphere: Make VM network user configurable,this fixes #334,"['kerneltime', 'abrarshivani']",1,2017-02-21 21:22:39,2017-02-22 22:17:30,2017-02-22 22:17:30,True,2017-02-22 22:17:30,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/341,https://github.com/kubernetes/kubernetes-anywhere/pull/341,BaluDontu,Download right version of kubectl binary,"Currently Kube-anywhere installs 1.4.0 kubectl binary inside the container spawned by using ""make docker-dev"" for any kubernetes cluster deployments either it be 1.4.7, 1.4.8, 1.5.2 or 1.5.3.

So there needs to be a better way to download the specific version of kubectl based on the Kubernetes cluster the user wants to deploy. For example, if the user deployed v1.5.3 kubernetes cluster, the container needs to have a kubectl v1.5.3 binary working in place. If the user deployed v1.4.8 kubernetes cluster, the container needs to have a kubectl v1.4.8 binary working in place..

Also, there needs to be a way where the kubectl binary for a specific version can be used if it is already downloaded rather than downloading it again every time.

The fix for this PR will handle the above mentioned 2 cases.

@mikedanese @abrarshivani @pdhamdhere @kerneltime ",[],1,2017-02-22 21:41:10,2017-02-27 22:05:08,2017-02-27 22:05:08,True,2017-02-27 22:05:08,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/342,https://github.com/kubernetes/kubernetes-anywhere/pull/342,abrarshivani,vSphere Cloud Provider: Make hostname of VM same as nodename,"Fixes #337. 

cc @pdhamdhere @tusharnt @kerneltime @BaluDontu @divyenpatel",[],1,2017-02-23 03:13:09,2017-03-01 00:17:00,2017-03-01 00:17:00,True,2017-03-01 00:17:00,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/345,https://github.com/kubernetes/kubernetes-anywhere/pull/345,kerneltime,"Upgrade dashboard and fix space handling. Fixes #334, Fixes #343",,[],1,2017-02-23 21:36:02,2017-02-27 21:12:36,2017-02-27 21:12:36,True,2017-02-27 21:12:36,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/346,https://github.com/kubernetes/kubernetes-anywhere/pull/346,theofpa,vSphere: The proxy to the Kubernetes API server is http,"On vSphere instructions, the dashboard is running in http, not https.",[],1,2017-02-25 21:19:58,2017-02-27 21:12:58,2017-02-27 21:12:59,True,2017-02-27 21:12:58,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/347,https://github.com/kubernetes/kubernetes-anywhere/pull/347,luomiao,vSphere: Add error exit in configure script to prevent silent failure,"Now if any commands in the configure script fail, the install hangs since the script doesn't return any error:
https://github.com/kubernetes/kubernetes-anywhere/issues/299

This PR adds error exit handling in configure script for vSphere provider in order to prevent silent failures.",[],1,2017-03-01 19:13:51,2017-03-09 18:06:18,2017-03-09 18:06:18,True,2017-03-09 18:06:18,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/348,https://github.com/kubernetes/kubernetes-anywhere/pull/348,abrarshivani,Add latest OVA timestamp in README for vSphere,"Fixes #https://github.com/vmware/kubernetes/issues/100. This PR adds latest OVA timestamp in README for vSphere. Latest OVA add network dependency in flannel systemd unit.

Tested:
Created kubernetes cluster of v1.5.3. Run ```echo """" > /etc/machine-id``` and **restart** node.
Earlier:
flannel initially failed due to network interface not available and started after docker. This is why dashboard didn't worked.
With this change,
flannel don't fail initially. Now, dashboard works.

//cc @kerneltime ",[],1,2017-03-02 07:00:19,2017-03-02 07:46:39,2017-03-02 07:46:39,True,2017-03-02 07:46:39,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/349,https://github.com/kubernetes/kubernetes-anywhere/pull/349,abrarshivani,Add validation for vsphere,This PR adds some type checks in Kconfig for vsphere.,[],1,2017-03-02 20:53:27,2017-03-09 18:06:57,2017-03-09 18:06:57,True,2017-03-09 18:06:57,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/351,https://github.com/kubernetes/kubernetes-anywhere/pull/351,divyenpatel,skip downloading kubelet if URL is not accessible,"while deploying kubernetes cluster user can specify hyperkube version from docker registry as below.

```
docker registry (phase2.docker_registry) [gcr.io/google-containers] (NEW) gcr.io/google-containers
kubernetes version (phase2.kubernetes_version) [v1.5.3] (NEW) v1.5.3
```

but when user is using custom hyperkube image from private repository - `https://hub.docker.com/r/divyen/hyperkube-amd64/tags/` for example as below

```
docker registry (phase2.docker_registry) [gcr.io/google-containers] (NEW) docker.io/divyen
kubernetes version (phase2.kubernetes_version) [v1.5.3] (NEW) nightly-1.5
```
kubernete-anywhere will try to download kubelet from `https://storage.googleapis.com/kubernetes-release/release/nightly-1.5/bin/linux/amd64/kubectl` which is not the right URL.

to avoid failing deployment, we can check if URL is accessible, and if accessible then only delete existing kubelet binary and replace it with available kubelet binary from URL.

in this case, users can manually download desired version of kubelet in the kubernete anywhere dev container.


cc: @abrarshivani @BaluDontu @tusharnt @pdhamdhere @luomiao @kerneltime 
",[],1,2017-03-06 20:48:49,2017-03-09 18:09:03,2017-03-09 18:09:03,True,2017-03-09 18:09:03,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/352,https://github.com/kubernetes/kubernetes-anywhere/pull/352,pipejakob,Accommodate upstream kubeadm CLI changes.,"- The `--discovery` flag has reverted back to `--token`
- Token strings are back to `<6>.<16>` instead of `<6>:<16>`
- `--api-advertise-addresses` is now `--apiserver-advertise-address`
- `--api-port` is now `--apiserver-bind-port`
- `--use-kubernetes-version` is now `--kubernetes-version`

CC @luxas @mikedanese ",[],1,2017-03-08 06:08:00,2017-03-10 05:43:39,2017-03-10 05:43:39,True,2017-03-10 05:43:39,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/353,https://github.com/kubernetes/kubernetes-anywhere/pull/353,pipejakob,Remove unnecessary quoting of SHELLFLAGS.,"For some reason, this was breaking the multiline `if` used in the kubeconfig-path target under different versions of make/bash. Removing these quotes fixed the kubeconfig-path make target in the docker-dev shell.",[],1,2017-03-08 06:15:57,2017-03-09 18:10:30,2017-03-09 18:10:30,True,2017-03-09 18:10:30,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/354,https://github.com/kubernetes/kubernetes-anywhere/pull/354,tuomassalo,Add port 15441 forwarding to apiserver,"My vSphere deployment failed with the error `Validation: Expected 5 healthy nodes; found 0.`.

From master node's journalctl I found that it tried to connect to localhost:15441 but failed:

    Mar 10 11:16:21 master docker[606]: W0310 11:16:21.519288     703 manager.go:151] unable to connect to Rkt api service: rkt: cannot tcp Dial rkt api service: dial tcp [::1]:15441: getsockopt: connection refused

With this PR, I managed to get the cluster running.

NB: I'm not aware where this problem came from in the first place - or whether this would be the correct way to fix the problem.

",[],1,2017-03-10 14:18:37,2018-01-15 11:05:40,2018-01-15 11:05:40,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/357,https://github.com/kubernetes/kubernetes-anywhere/pull/357,pipejakob,Fix race condition when waiting for kubeconfig.,"If `WAIT_FOR_KUBECONFIG` is set and the cluster comes up very quickly so that first ssh call succeeds, then the output from ssh's initialization (generating keys, showing fingerprints/randomart, etc.) can get included at the start of the `kubeconfig.json` file, rendering it invalid.

To alleviate this, echo a marker to indicate the start of the file so we can delete this noise.

CC @mikedanese ",['mikedanese'],1,2017-03-15 22:49:07,2017-03-21 00:03:43,2017-03-21 00:03:43,True,2017-03-21 00:03:43,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/358,https://github.com/kubernetes/kubernetes-anywhere/pull/358,praseodym,Fix links in vSphere Getting Started,,[],1,2017-03-22 13:06:23,2017-03-22 19:56:40,2017-03-22 20:02:41,True,2017-03-22 19:56:40,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/360,https://github.com/kubernetes/kubernetes-anywhere/pull/360,divyenpatel,Adding minimal privileges required for kubernetes-Anywhere,"Adding minimal privileges required for kubernetes-Anywhere.

Verified privileges on vCenter 6.5 with deploying Kubernetes 1.5.3 cluster using Kubernetes-Anywhere master branch.

Performed following operations
Create Storage Class, Create PVC, Create POD, Delete POD, Delete Volume.
Verified Disk attach/detach volume create/delete is working fine with these set of privileges.

CC: @abrarshivani @BaluDontu @luomiao @tusharnt @pdhamdhere @kerneltime",[],1,2017-03-24 18:41:47,2017-04-17 19:28:46,2017-04-17 19:28:46,True,2017-04-17 19:28:46,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/361,https://github.com/kubernetes/kubernetes-anywhere/pull/361,pipejakob,Fix sed command.,"This was a silly mistake in 02dddef. If the very first line was `STARTFILE`, then the entire file was getting truncated. Using `0` instead of `1` for the range matching allows the match to occur on the first line, giving the intended behavior if nothing else comes before `STARTFILE`.",[],1,2017-03-27 17:08:58,2017-03-27 18:42:51,2017-03-27 18:42:51,True,2017-03-27 18:42:51,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/362,https://github.com/kubernetes/kubernetes-anywhere/pull/362,pipejakob,Add Google Cloud SDK to Docker image.,"This provides the `gcloud` CLI, which is very useful when creating GCE clusters, and is also a requirement if `WAIT_FOR_KUBECONFIG` is set when using `kubeadm` as the phase2 provider.",[],1,2017-03-27 18:39:52,2017-03-27 18:42:43,2017-03-27 18:42:43,True,2017-03-27 18:42:43,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/363,https://github.com/kubernetes/kubernetes-anywhere/pull/363,pipejakob,Add support for weave-net addon.,"Most likely, this addon will only be used by clusters using `kubeadm` for phase2 that require a CNI provider.

The json files were generated by fetching https://git.io/weave-kube-1.6 (which is multidoc yaml), breaking it apart into individual documents, and converting them to json.

Since `ClusterRole` and `ClusterRoleBinding` weren't supported by the older `kubectl` used in the Docker image, I also bumped its version.

CC @mikedanese ",[],1,2017-03-27 21:15:04,2017-03-27 21:34:20,2017-03-27 21:34:20,True,2017-03-27 21:34:20,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/372,https://github.com/kubernetes/kubernetes-anywhere/pull/372,pipejakob,Allow disabled addons to be omitted from .config,"When running `make config` or `make menuconfig`, options that are disabled don't necessarily go into .config with values of `n`. In some versions of kconfig-frontends, like the one in this repo's Docker image, comments get stored instead:

    # .phase3.dashboard is not set

Without this change, attempting to run `make addons` or even just `phase3/do gen` chokes on these values, since jsonnet can't find configuration for them. With the change, it treats addons omitted from .config as disabled.

This should also help upgrade-proof clients that automate the creation of .config, so upstream additions of new addons don't render old .config files broken.",['abrarshivani'],1,2017-04-04 19:54:57,2017-04-04 23:34:06,2017-04-04 23:34:06,True,2017-04-04 23:34:06,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/374,https://github.com/kubernetes/kubernetes-anywhere/pull/374,divyenpatel,phase2 - ignition - reverting etcd-container image back to  etcd:2.2.1,"With the ignition image having` etcd:3.0.4`, we have observed issue, volume can not be detached from the node after pod is deleted. 

This issue is producible on Kubernetes Release **v1.5.3**,  which is working fine with `etcd:2.2.1`.

Issue is verified with creating two ignition images, and using same Kubernetes releases - 1.5.3

> divyen/ignition.etcd-3.0.4:v1 - disk never get detached from node VM, after pod is deleted.
> divyen/ignition.etcd-2.2.1:v1 - disk get detached from the node VM, after pod is deleted.

@tusharnt @BaluDontu @abrarshivani 




",[],1,2017-04-06 14:39:24,2017-04-06 21:28:37,2017-04-06 21:28:39,True,2017-04-06 21:28:37,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/377,https://github.com/kubernetes/kubernetes-anywhere/pull/377,steveruckdashel,minor grammar fix,minor grammar fix.,[],1,2017-04-11 14:45:35,2017-04-13 00:17:41,2017-04-17 02:47:10,True,2017-04-13 00:17:41,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/382,https://github.com/kubernetes/kubernetes-anywhere/pull/382,MohGeek,Fix typo in README,,[],1,2017-05-01 15:36:32,2017-05-01 16:00:15,2017-05-01 16:00:15,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/383,https://github.com/kubernetes/kubernetes-anywhere/pull/383,MohGeek,Fix typo in README,,[],1,2017-05-01 16:04:47,2017-05-01 16:10:37,2017-05-01 16:10:37,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/384,https://github.com/kubernetes/kubernetes-anywhere/pull/384,MohGeek,Fix typo in README,,[],1,2017-05-01 16:10:58,2017-05-05 23:39:48,2017-05-05 23:39:48,True,2017-05-05 23:39:48,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/385,https://github.com/kubernetes/kubernetes-anywhere/pull/385,jamiehannaford,Add Flannel network add-on,"This implements the Flannel addon as a first step to adding better CNI coverage to kubeadm's e2e tests, as documented here https://github.com/kubernetes/kubeadm/issues/218. 

Unfortunately I wasn't able to verify this because I don't have a GCE or Azure account, nor a Vsphere license. Is there any way to get around this, or use some kind of community account? Alternatively is there any word on AWS, Vagrant or OpenStack providers? If not, I can see about getting GCE access.",[],1,2017-05-03 12:59:58,2017-06-06 13:38:07,2017-06-06 13:38:07,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/386,https://github.com/kubernetes/kubernetes-anywhere/pull/386,MohGeek,Update terraform to 0.9.4,"This updates the Terraform version used by project from 0.7.2 to 0.9.4. It fixes multiple issues related to Terraform (see : https://github.com/hashicorp/terraform/blob/master/CHANGELOG.md). 

- As the cert request flow changed after the 0.7.5 version, the jsonnet had to be updated to reflect this change. 
- The env variable TERRAFORM_SHA256SUM was also deleted from the docker-build script as it wasn't used. ","['pipejakob', 'mikedanese']",1,2017-05-03 15:27:27,2017-05-19 17:34:39,2017-05-19 17:34:39,True,2017-05-19 17:34:39,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/388,https://github.com/kubernetes/kubernetes-anywhere/pull/388,divyenpatel,Updating vsphere/README.md,"Recommending  user to download tagged release instead of `git clone https://github.com/kubernetes/kubernetes-anywhere repository`

Informing user about not to install `weave-net` add on.


cc: @tusharnt @BaluDontu @abrarshivani ",[],1,2017-05-05 17:15:37,2017-05-05 23:35:29,2017-05-05 23:35:29,True,2017-05-05 23:35:29,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/390,https://github.com/kubernetes/kubernetes-anywhere/pull/390,klizhentas,Add flannel,,['pipejakob'],7,2017-05-13 01:03:18,2017-09-07 16:23:51,2017-09-07 16:23:51,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/391,https://github.com/kubernetes/kubernetes-anywhere/pull/391,divyenpatel,Updating vsphere kubernetes cluster deployment flow,"Current Menu is asking user to specify a cluster, host or a resource pool in which he wants to deploy Kubernetes Cluster. 

`Specify a valid Cluster, Host or Resource Pool in which to deploy Kubernetes VMs. (phase1.vSphere.resourcepool) [] (NEW)`

We have documented how the resource pool path looks like, but it is inconvenient to read up documentation, and build the path. We should change the Menu options to build up resource pool path for user. User just need to  enter the resource pool name.

Following is the change we want in the Menu options.

```
Deploy Kubernetes Cluster on 'host' or 'cluster' (phase1.vSphere.placement) [cluster] (NEW) cluster
    vspherecluster (phase1.vSphere.cluster) [] (NEW) cluster-vsan-1
Do you want to use resource pool created on host or cluster? [yes, no] (phase1.vSphere.useresourcepool) [no] (NEW) yes
    name of the resource pool [Provide Just a name] (phase1.vSphere.resourcepool) [] (NEW) dbResourcePool
```
Verified change with deploying cluster on the resource pool created in host and in cluster.

@msterin @BaluDontu @pdhamdhere @tusharnt

",['abrarshivani'],1,2017-05-15 18:55:56,2017-05-16 20:28:58,2017-05-16 20:28:58,True,2017-05-16 20:28:58,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/392,https://github.com/kubernetes/kubernetes-anywhere/pull/392,divyenpatel,Correcting release file to download and unzip,"Observed issue while downloading and unzipping kubernetes-anywhere release build.
Note: This issue is not observed on Mac OS X, on linux and windows this issue is re-producible.

```
$ curl -sL https://github.com/kubernetes/kubernetes-anywhere/archive/v0.1.0.zip | tar xz
gzip: stdin has more than one entry--rest ignored
tar: Child died with signal 13
tar: Error is not recoverable: exiting now
```

PR is correcting link to download so that It can be unzipped without this issue.
@abrarshivani @msterin @BaluDontu @tusharnt
",['abrarshivani'],1,2017-05-15 21:19:46,2017-05-16 20:29:29,2017-05-16 20:29:29,True,2017-05-16 20:29:29,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/393,https://github.com/kubernetes/kubernetes-anywhere/pull/393,pipejakob,Don't add --kubernetes-version if the value is empty.,This is important for some of our e2e tests to be able to exercise the default behavior of omitting this parameter.,[],1,2017-05-15 23:52:16,2017-05-16 17:18:54,2017-05-16 17:18:54,True,2017-05-16 17:18:54,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/394,https://github.com/kubernetes/kubernetes-anywhere/pull/394,pipejakob,Enable/start kubelet in kubeadm phase2.,"When using our bazel-generated .debs, kubelet had previously been silently started by `kubeadm init` itself (even with preflight checks disabled), which https://github.com/kubernetes/kubernetes/pull/45231 fixed.

With that behavior gone, we need to enable/start kubelet explicitly.

https://github.com/kubernetes/kubeadm/issues/268",[],1,2017-05-16 00:00:28,2017-05-16 17:18:38,2017-05-16 17:18:38,True,2017-05-16 17:18:38,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/395,https://github.com/kubernetes/kubernetes-anywhere/pull/395,pipejakob,"In GCE, make sure apt-transport-https is installed.","I found that this step was required when testing with a Debian image (debian-8-jessie-v20170426), and it's also one the steps in the [kubeadm getting started guide](https://kubernetes.io/docs/getting-started-guides/kubeadm/).

This doesn't actually allow the Debian image to be used end-to-end, since there are still dependency conflicts with the Docker package, but it does allow the startup to get a little further.",[],1,2017-05-16 00:58:03,2017-05-16 20:36:53,2017-05-16 20:36:53,True,2017-05-16 20:36:53,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/396,https://github.com/kubernetes/kubernetes-anywhere/pull/396,ozdanborne,Turn off verbose output for untar,Untarring with verbose produces hundreds of lines of output which seems a bit unnecessary and makes it harder to process what the scripts are doing for newcomers. ,[],1,2017-05-17 18:57:20,2017-05-19 17:37:15,2017-05-19 19:26:07,True,2017-05-19 17:37:15,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/401,https://github.com/kubernetes/kubernetes-anywhere/pull/401,cmluciano,Change default nodes to 3 to suit trial size GCE account,Signed-off-by: Christopher M. Luciano <cmluciano@us.ibm.com>,['pipejakob'],1,2017-05-31 16:15:45,2017-06-26 18:51:59,2017-06-27 17:34:19,True,2017-06-26 18:51:59,roberthbailey,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/404,https://github.com/kubernetes/kubernetes-anywhere/pull/404,cmluciano,Add tmp path to gce usage instructions,I'm not sure if I did something wrong or if this is a bug. I only found a working  kubeconfig within the .tmp folder.,"['pipejakob', 'mikedanese']",1,2017-06-05 17:31:15,2017-10-23 20:17:50,2017-10-23 20:17:50,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/405,https://github.com/kubernetes/kubernetes-anywhere/pull/405,cmluciano,Add calico cni plugin,"This is a rebase on @klizhentas 's work as well as @ozdanborne 's trial commit.

I'm testing this manually at the moment.

Related kubernetes/kubeadm#218","['pipejakob', 'mikedanese']",3,2017-06-07 20:21:01,2017-10-20 23:33:03,2017-10-20 23:33:03,True,2017-10-20 23:33:03,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/406,https://github.com/kubernetes/kubernetes-anywhere/pull/406,RobbieJ,Create README.md,Quick adjustment to reflect the correct naming scheme for a ESXi without vCenter.,['kerneltime'],1,2017-06-15 15:06:47,2017-07-13 12:29:48,2017-07-13 12:29:48,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/407,https://github.com/kubernetes/kubernetes-anywhere/pull/407,divyenpatel,Updating `phase1/vsphere/README.md` for Kubernetes v1.6.5 recommendation,"Updating `phase1/vsphere/README.md` for Kubernetes v1.6.5 recommendation.

1.6.5 change log

- vSphere cloud provider: Report same Node IP as both internal and external. (#45201, @abrarshivani)
- vSphere cloud provider: Filter out IPV6 node addresses. (#45181, @BaluDontu)
- vSphere cloud provider: Remove the dependency of login information on worker nodes for vsphere cloud provider. (#43545, @luomiao)
- vSphere cloud provider: Fix volume detach on node failure. (#45569, @divyenpatel)
- vSphere cloud provider: Fix fetching of VM UUID on Ubuntu 16.04 and Fedora. (#45311, @divyenpatel)


README.md Preview is available at https://github.com/divyenpatel/kubernetes-anywhere/blob/30413563ee5c91d2949715ed5e44cf7c041ba7bd/phase1/vsphere/README.md

PR Changes:

- Recommending v1.6.5

- Provided steps to use pre-build kubernetes-anywhere image `cnastorage/kubernetes-anywhere:latest`, instead of asking user to build image. This saves 10 minutes.

- made docker.io/cnastorage/k8s-ignition:v2 default in the wizard prompt. For 1.6 and above this new ignition image should be used.

- provided screen shots for better understanding of vsphere inventory, before and after the cluster deployment.

cc:  @luomiao @rohitjogvmw @BaluDontu @tusharnt @pdhamdhere",[],3,2017-06-16 23:14:43,2017-06-21 02:46:45,2017-06-21 02:46:45,True,2017-06-21 02:46:45,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/412,https://github.com/kubernetes/kubernetes-anywhere/pull/412,fabriziopandini,Enable make Docker-Dev behind corporate proxy ,"improve `make docker-dev`making it sensible to proxy.

if env vars (http_proxy, https_proxy, no_proxy) are set, those variables will be forwarded to `docker build`, `docker run` (and `npm` inside docker).

NB. tested only on GCE (also changes for enabling same functionality on Azure, but not tested yet)

",[],1,2017-07-07 14:09:27,2018-01-15 12:08:08,2018-10-28 19:25:08,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/416,https://github.com/kubernetes/kubernetes-anywhere/pull/416,jck-ccl,"415 - special characters need escaping in vsphere.conf, escapeStringJ…","…son seems to do this nicely

#415 proposed fix for escaping special characters in vsphere.conf.",[],1,2017-07-25 11:14:01,2017-07-26 20:18:29,2017-07-26 20:18:29,True,2017-07-26 20:18:29,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/420,https://github.com/kubernetes/kubernetes-anywhere/pull/420,shashidharatd,Deploy multiple clusters from same workspace,"This PR enables deploying multiple clusters from the same workspace without affecting each other.
- .tmp directory is moved to a directory with name <cluster_name>
- kubeconfig.json is stored in <cluster_name> directory instead of .tmp directory.

We could bring-up multiple clusters with the changes in this PR sequentially, bringing them up in parallel needs some more modifications.

This is done as part of effort to migrate federation cluster bring-up method to k8s-anywhere   Ref: https://github.com/kubernetes/test-infra/issues/3858

The environment supposed to be used in test-infra is `gce+kubeadm+weavenet` and this PR has been tested in this environment.
The other 2 environments azure and vsphere has not been tested, but are minor changes and can be reviewed.

/assign @pipejakob 
/assign @luxas 
/cc @madhusudancs ","['madhusudancs', 'pipejakob', 'luxas']",4,2017-08-07 09:19:00,2017-08-15 06:40:05,2017-08-15 06:40:05,True,2017-08-15 06:40:04,madhusudancs,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/423,https://github.com/kubernetes/kubernetes-anywhere/pull/423,shashidharatd,Corrected gce README,"An instruction was missing and another was obsolete and unwanted. so fixed the README.
Also removed couple of redundant files.

/cc @pipejakob 
/assign @madhusudancs ","['madhusudancs', 'pipejakob']",2,2017-08-11 05:23:37,2017-08-15 05:35:05,2017-08-15 05:35:05,True,2017-08-15 05:35:05,madhusudancs,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/425,https://github.com/kubernetes/kubernetes-anywhere/pull/425,divyenpatel,Allow user to specify VM folder Path where Node VMs needs to be placed,"Fixes: https://github.com/kubernetes/kubernetes-anywhere/issues/422

Currently Kubernetes-Anywhere asks user to specify the name of the cluster and then uses this name to create vm folder on the root. Node VMs are then placed on this folder.

Customer requested to prompt menu option to specify VM folder path where cluster needs to be deployed.

This PR addressed above customer request.

**New menu options looks like as below.**


`VM Folder name or Path (e.g kubernetes, VMFolder1/dev-cluster, VMFolder1/Test Group1/test-cluster) (phase1.vSphere.vmfolderpath) [kubernetes] (NEW) divyen/kubernetes`

**Testing:**

`.phase1.vSphere.vmfolderpath=""divyenp/kubernetes/Test Cluster""`
In this case 
VM Folders divyenp and sub folders were not present, folder structure is created by kubernetes-anywhere and cluster deployed successfully


`.phase1.vSphere.vmfolderpath=""divyenp/kubernetes""`
In this case VM Folder: divyenp/kubernetes was already present. Cluster deployed successfully.


` .phase1.vSphere.vmfolderpath=""divyenp/kubernetes/Test Cluster""`
In this case VM Folder :divyenp/kubernetes was present, but folder ""Test Cluster"" (with space) did not exist, this folder is created by kubernetes-anywhere and cluster deployed successfully.


Please review : @rohitjogvmw @BaluDontu @luomiao @tusharnt
",[],1,2017-08-11 17:16:12,2017-08-12 23:26:20,2017-08-14 17:01:44,True,2017-08-12 23:26:20,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/427,https://github.com/kubernetes/kubernetes-anywhere/pull/427,mbssaiakhil,Fix Typo,Fix Typo in Kubernetes Anywhere Original Design Proposal,['pipejakob'],1,2017-08-13 10:08:14,2017-08-25 21:03:39,2017-08-25 21:03:39,True,2017-08-25 21:03:39,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/428,https://github.com/kubernetes/kubernetes-anywhere/pull/428,jgmize,Fix util/validate to match Ready without matching NotReady,,['shashidharatd'],1,2017-08-14 16:45:38,2017-09-07 18:45:30,2017-09-07 19:04:36,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/429,https://github.com/kubernetes/kubernetes-anywhere/pull/429,shashidharatd,Deploy multiple clusters in parallel and few other fixes,"This is done as part of effort to migrate federation cluster bring-up method to k8s-anywhere Ref: kubernetes/test-infra#3858

This PR mainly does 3 things.
- Configurable username for sshing to deployed OS. This was an issue while testing out this PR and this is one way to solve the issue as discussed in https://github.com/kubernetes/kubeadm/issues/219#issuecomment-293110132
- Configurable context names in kubeconfig. This is required since we deploy multiple clusters and then merge them to one kubeconfig.
- Deploy multiple clusters in parallel by specifying different config files like below:
```
# make CONFIG_FILE=.config-c1 deploy &
# make CONFIG_FILE=.config-c2 deploy
```

/assign @pipejakob
/assign @madhusudancs 
/assign @luxas

p.s: After the merging of this pr, we can takeup updating kubernetes-anywhere deployer in `kubetest` to be able to deploy multiple clusters.","['madhusudancs', 'pipejakob', 'luxas']",5,2017-08-15 07:22:56,2017-08-23 17:16:09,2017-08-23 17:16:09,True,2017-08-23 17:16:08,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/432,https://github.com/kubernetes/kubernetes-anywhere/pull/432,shashidharatd,Add OpenStack to phase1.providers,"Adding the support for k8s deployments on OpenStack. This has been tested on openstack + kubeadm.
Only last 2 commits are relevant and rest of the commits are from another PR and hoping them to soon get merged.

/cc @cmluciano @luxas @pipejakob @kubernetes/kubernetes-anywhere-maintainers ","['dims', 'pipejakob']",3,2017-08-22 13:31:59,2017-10-20 18:50:50,2017-10-20 18:50:50,True,2017-10-20 18:50:50,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/435,https://github.com/kubernetes/kubernetes-anywhere/pull/435,avirat28,Fixed minor typo,,['pipejakob'],1,2017-08-23 04:04:04,2017-08-23 17:14:29,2017-08-23 20:40:19,True,2017-08-23 17:14:29,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/436,https://github.com/kubernetes/kubernetes-anywhere/pull/436,shashidharatd,Follow-up pr to fix comments in #429,"This is a simple pr to fix-up the comments left out in #429.

/assign @pipejakob",['pipejakob'],2,2017-08-24 08:29:52,2017-08-25 18:13:22,2017-08-25 18:13:22,True,2017-08-25 18:13:22,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/437,https://github.com/kubernetes/kubernetes-anywhere/pull/437,rjog,UX improvements while deploying k8s on vsphere ,"Few UX issues are mentioned @ https://github.com/vmware/kubernetes/issues/249

Below issues addressed:

1. Where ever vCenter Inventory Resource is automatically created by Kubernetes-Anywhere (For example Folder) specify in the prompt, that object will be created if not present in the inventory. And for objects which needs to be present and kubernetes-anywhere can not create, specify in the user prompt with text - ""Existing"", so user knows that this object should be already present in the inventory. (For example Resource Pool, which can not be created by Kubernetes-Anywhere)

2. Put a note that all ESX host should have time in sync, else some of the node can remain in pending state for ever due to certificate expired certificate. Node VM inherits time from the esx host.

3. At present node VMs has sequence node1, node2 ..., instead append some unique char sequence, so that multiple clusters can be deployed in the same working directory folder. with this change <k8s-cluster-name>-master, <k8s-cluster-name>-node1 .... VM names will be used.

4. When user specifies that he wants to deploy 4 node cluster, in the end Kubernetes-Anywhere is waiting for 5 nodes to become healthy. This is because 5th node is the master node, specify this in the message so that user does not get confused.

This also fixes https://github.com/kubernetes/kubernetes-anywhere/issues/375

@divyenpatel, @BaluDontu, @tusharnt, @luomiao 
","['madhusudancs', 'pipejakob', 'luxas', 'shashidharatd']",1,2017-08-24 22:51:04,2017-08-31 23:56:00,2017-08-31 23:56:00,True,2017-08-31 23:56:00,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/438,https://github.com/kubernetes/kubernetes-anywhere/pull/438,divyenpatel,Updating Kubernetes-Anywhere getting started guide for vSphere,"Updating K8S-Anywhere Getting Started Guide for vSphere based on the Menu Option changes made in the PR: https://github.com/kubernetes/kubernetes-anywhere/pull/437

Issue: https://github.com/vmware/kubernetes/issues/249

Summary of changes:

- In the instruction for running deployment container mounted local /tmp directory so that kubeconfig.json file can be copied to the local machine easily.
- Updated Menu Options and briefly describe each menu
- Added OVA for vSphere 5.5
- In cnastorage/kubernetes-anywhere image made vsphere as default provider.


New Image is uploaded at `cnastorage/kubernetes-anywhere:08252017`

Once this PR is approved, I will tag `cnastorage/kubernetes-anywhere:08252017` to `cnastorage/kubernetes-anywhere:latest`

Please review: @rohitjogvmw, @BaluDontu, @tusharnt, @luomiao @msterin ",[],1,2017-08-25 23:50:09,2017-08-31 23:30:49,2017-08-31 23:30:49,True,2017-08-31 23:30:49,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/439,https://github.com/kubernetes/kubernetes-anywhere/pull/439,pipejakob,Fix jq handling of missing fields.,"If a field is completely missing, then this invocation prints out the string `null`:

    $ echo $(jq -r '.phase1.ssh_user' .config.json)

The result is that our `if [[ -n ""$VAR"" ]]` checks will actually see the string `null` instead of an empty string.

Piping the query through the ""values"" filter will filter out null values and produce the desired empty output, which fixes the conditionals:

    $ echo $(jq -r '.phase1.ssh_user | values' .config.json)",['shashidharatd'],1,2017-08-29 00:07:06,2017-08-29 21:25:42,2017-08-29 21:25:43,True,2017-08-29 21:25:42,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/440,https://github.com/kubernetes/kubernetes-anywhere/pull/440,pipejakob,"If phase1.ssh_user isn't set, also try to use $USER.","If the .config file is missing `phase1.ssh_user`, we should still attempt to explicitly use `$USER@host` to avoid the poorly documented default behavior of gcloud looking up the user from the service account (which is wrong, in prow's case):

https://github.com/kubernetes/kubeadm/issues/219

If `$USER` is unset, like it is in the `make docker-dev` environment, then we can still fall back to omitting the `user@` portion of the ssh command. But, this will make it a little friendlier to use in other environments.",['shashidharatd'],1,2017-08-29 00:45:07,2017-08-30 17:28:00,2017-08-30 17:28:00,True,2017-08-30 17:28:00,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/441,https://github.com/kubernetes/kubernetes-anywhere/pull/441,pipejakob,Fix binding of TLS resources for ignition.,"`gce.jsonnet` was recently refactored to skip elements that aren't needed based on the `phase2.provider`. However, based on jsonnet's parsing, the second of the two `if` statements was being appending to the `else { }` block of the previous `if`, and so it was being short-circuited entirely instead of independently evaluated.

The intent of the code was to logically do:

    if condition1 {
      append(X)
    }
    if condition2 {
      append(Y)
    }

but based on jsonnet's list append binding, it was actually doing:

    if condition1 {
      append(X)
    }
    else if condition2 {
      append(Y)
    }

Since `condition1` and `condition2` are identical here, rather than two separate `if`s I've merged them into a single one. I've tested to ensure that in the case of ignition, both the `null_resource` and TLS resources are included, and in the case of kubeadm, both are excluded.

This fixes https://github.com/kubernetes/kubernetes-anywhere/issues/434.",['shashidharatd'],1,2017-08-29 02:18:49,2017-08-29 21:23:39,2017-08-29 21:23:39,True,2017-08-29 21:23:39,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/442,https://github.com/kubernetes/kubernetes-anywhere/pull/442,shashidharatd,Fix deployments on gce ignition,"This pr should fix the issue described in #434

/cc @prateekgogia
/assign @pipejakob ",['pipejakob'],1,2017-08-29 06:41:26,2017-08-29 06:50:15,2017-08-29 06:50:15,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/444,https://github.com/kubernetes/kubernetes-anywhere/pull/444,shashidharatd,Remove Azure as phase1 provider,"Following the discussion in https://github.com/kubernetes/kubernetes-anywhere/issues/366. Removing Azure provider as it is already broken and is no longer used or maintained.
After this PR merged, it will be one step closer to move towards `kubeadm` based deployments and only vsphere will be using ignition phase2 provider.

/assign @pipejakob 
/cc @luxas ","['pipejakob', 'luxas']",1,2017-09-06 01:24:05,2017-09-13 00:17:26,2017-09-13 00:17:26,True,2017-09-13 00:17:26,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/445,https://github.com/kubernetes/kubernetes-anywhere/pull/445,luxas,"Make validate only allow Ready nodes, not NotReady ones","@shashidharatd @pipejakob @jessicaochen @roberthbailey 
Fixes the incorrect behavior we noted earlier",['roberthbailey'],1,2017-09-07 06:21:34,2017-09-12 14:58:34,2017-09-12 14:58:35,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/446,https://github.com/kubernetes/kubernetes-anywhere/pull/446,jamiehannaford,Add flannel,Supersedes #390 ,"['pipejakob', 'luxas']",7,2017-09-07 09:47:36,2017-09-21 03:19:05,2017-09-21 03:19:05,True,2017-09-21 03:19:05,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/447,https://github.com/kubernetes/kubernetes-anywhere/pull/447,shashidharatd,Fix validate for node readiness,"Current implementation fails to check if node is in ready condition after deployment.
To fix the issue, the validate script is updated to check for both cluster-readiness and node-readiness.

/assign @pipejakob 
/cc @luxas ",['pipejakob'],1,2017-09-08 12:54:08,2017-09-12 05:36:26,2017-09-12 05:36:26,True,2017-09-12 05:36:26,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/449,https://github.com/kubernetes/kubernetes-anywhere/pull/449,shashidharatd,Enable cloud-provider in GCE based deployments.,"This PR is in continuation to migrate deployment mechanism used by federation to k8s-anywhere as listed out in https://github.com/kubernetes/test-infra/issues/3858. This is the 5th task in that series.

Federation CI jobs needs k8s clusters deployed with cloud-provider enabled for load-balancer type services and persistent volumes.

/cc @luxas @pipejakob @madhusudancs @kubernetes/sig-federation-pr-reviews ",['pipejakob'],5,2017-09-13 09:04:43,2017-10-19 20:09:58,2017-10-19 20:09:58,True,2017-10-19 20:09:57,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/450,https://github.com/kubernetes/kubernetes-anywhere/pull/450,jessicaochen,Add upgrade logic to kubernetes anywhere,"Issue #431 

Adds structure for upgrades and fills in the upgrade implementation for kubeadm on gce.

Design doc: https://docs.google.com/a/google.com/document/d/1PoDeqD8qu1KbAd-fb7xOVB1G7YTyD6VLLlhaVB3QeA4/edit?usp=sharing
","['pipejakob', 'luxas', 'jessicaochen']",3,2017-09-13 21:35:12,2017-09-21 19:29:38,2017-09-27 17:18:34,True,2017-09-21 19:29:38,jessicaochen,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/451,https://github.com/kubernetes/kubernetes-anywhere/pull/451,jessicaochen,Allow configuration for a kublet version that differs from kubeadm,"Prior to this change, the kubelet on the master and nodes would always be at the same version as kubeadm. Breaking the version of the kubelet away from the version of kubeadm gives the flexibility of starting up consistent clusters that are at an older version than the kubeadm binary.

This helps with e2e testing issues: https://github.com/kubernetes/kubeadm/issues/431

Configuration could be updated to reflect their purpose a bit better eg. kubernetes_version really is the control plane version. Such naming changes are outside the scope of this pull request to focus efforts on fixing things.",['luxas'],2,2017-09-15 23:37:24,2017-09-18 17:28:13,2017-09-27 17:17:38,True,2017-09-18 17:28:13,jessicaochen,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/452,https://github.com/kubernetes/kubernetes-anywhere/pull/452,luxas,Fix small regression in kubeadm gce startup script,"Follows up #451 
Even though the kubelet version was stable, we should download the right kubeadm CLI version
/assign @pipejakob @jessicaochen ","['pipejakob', 'jessicaochen']",1,2017-09-21 07:31:53,2018-03-16 11:56:44,2018-03-16 11:56:44,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/455,https://github.com/kubernetes/kubernetes-anywhere/pull/455,jessicaochen,Handle a kubeadm gs version with a trailing slash by trimming the slash.,"If a kubeadm gs version is provided with a backslash, the gsutil cp command will try and fail to pull a file path with a double backslash (ie. gs util gs://kubernetes-release-dev/bazel/v1.8.0-beta.1/bin/linux/amd64//kubeadm). Trim trailing backslashes on kubeadm gs versions to handle this problem.",['pipejakob'],1,2017-09-22 20:34:01,2017-09-22 21:11:37,2017-09-27 17:18:21,True,2017-09-22 21:11:37,jessicaochen,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/457,https://github.com/kubernetes/kubernetes-anywhere/pull/457,jessicaochen,Fix naming clash of variable KUBEADM_DIR,"Modify variable for kubeadm gs directory to not clash with variable for directory of kubeadm init flags

Issue: https://github.com/kubernetes/kubernetes-anywhere/issues/456",['luxas'],1,2017-09-27 18:39:38,2017-09-27 19:56:27,2017-09-27 19:56:35,True,2017-09-27 19:56:27,jessicaochen,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/461,https://github.com/kubernetes/kubernetes-anywhere/pull/461,abrarshivani,Fix for vSphere password and make clean,"1. This PR fixes #370 i.e with this fix: kubernetes-anywhere will accept '%' char in password for vSphere.
2. Currently, if user executes ```make clean``` and config file doesn't exist then phase1 folder is deleted. This PR also fixes this issue.","['abrarshivani', 'shashidharatd']",2,2017-10-06 19:15:52,2017-10-11 18:50:36,2017-10-11 18:50:36,True,2017-10-11 18:50:35,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/462,https://github.com/kubernetes/kubernetes-anywhere/pull/462,dims,Update latest weave net,"Looking to see if 2.0.5 fixes problems in kubeadm tests:
https://github.com/kubernetes/kubernetes/issues/53570#issuecomment-335582560","['luxas', 'bboreham']",1,2017-10-11 18:07:00,2017-11-17 14:05:59,2017-11-17 14:05:59,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/464,https://github.com/kubernetes/kubernetes-anywhere/pull/464,Lion-Wei,add kube-proxy mode in kubeadm config file,"added kube-proxy mode in kubeadm config file, so that we can easily chose proxy mode when build cluster, espically if we want use ipvs mode. 
Already added kube-proxy-mode args in kubeadm, in [this pr](https://github.com/kubernetes/kubernetes/pull/53962) : https://github.com/kubernetes/kubernetes/pull/53962
",['shashidharatd'],1,2017-10-20 12:15:54,2017-11-28 18:34:19,2017-11-29 01:11:12,True,2017-11-28 18:34:19,luxas,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/468,https://github.com/kubernetes/kubernetes-anywhere/pull/468,cmluciano,Allow insecure /os_cacert option for openstack provider,Fixes #467,"['pipejakob', 'jamiehannaford', 'shashidharatd']",2,2017-10-23 17:05:48,2018-06-17 02:47:57,2018-06-17 02:47:57,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/470,https://github.com/kubernetes/kubernetes-anywhere/pull/470,cmluciano,Move docker_registry back to required Kconfig vars,"docker_registry is used in phase3 for deploying addons and other
components that do not hardcode a registry.","['pipejakob', 'jamiehannaford']",1,2017-10-25 18:59:40,2017-11-15 00:04:20,2017-11-15 00:04:20,True,2017-11-15 00:04:20,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/472,https://github.com/kubernetes/kubernetes-anywhere/pull/472,mrhillsman,Update instructions for SSH keypair,"'make docker-dev' mounts current directory to /opt/kubernetes-anywhere when following the provided instructions. Files outside of the host's kubernetes-anywhere directory that is mounted are not accessible; i.e. /root/.ssh/id_rsa

This change updates the instructions to create the keypair in the kubernetes-anywhere directory by default so the files are accessible during 'make deploy'","['shashidharatd', 'jessicaochen']",1,2017-10-26 06:41:02,2018-01-16 17:52:50,2018-01-16 17:52:50,True,2018-01-16 17:52:50,jessicaochen,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/473,https://github.com/kubernetes/kubernetes-anywhere/pull/473,cmluciano,Skip phase3 addons deployed by kubeadm,"Kube-dns and kube-proxy should be automatically deployed by kubeadm.

Notes for reviewer: I'm not sure if Kconfig supports nested ifs, but that might make this cleaner.","['pipejakob', 'mikedanese']",1,2017-10-26 14:35:44,2017-11-15 00:07:27,2017-11-15 00:07:27,True,2017-11-15 00:07:27,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/475,https://github.com/kubernetes/kubernetes-anywhere/pull/475,cmluciano,Update Calico CIDR blocks for etcd,,"['pipejakob', 'luxas']",2,2017-10-30 15:03:52,2017-10-31 15:54:57,2017-10-31 15:54:57,True,2017-10-31 15:54:57,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/478,https://github.com/kubernetes/kubernetes-anywhere/pull/478,shashidharatd,Fix a syntax error in startup script,"There seems to be an error introduced recently in the startup script which produces below error
```
-bash: syntax error in conditional expression
-bash: syntax error near `]'
```

/cc @cmluciano 
/assign @pipejakob 
",['pipejakob'],1,2017-11-03 12:03:42,2017-11-15 01:54:09,2017-11-15 01:54:09,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/479,https://github.com/kubernetes/kubernetes-anywhere/pull/479,shashidharatd,Refactor startup scripts to be modular and reusable,"Remove duplication of kubeadm startup scripts in every phase1 provider.
Moved the kubeadm startup scripts to phase2/kubeadm.

I have tested the changes in both gce and openstack and the changes do work for both of them.

/cc @jamiehannaford @pipejakob @cmluciano 
/assign @pipejakob ",['pipejakob'],3,2017-11-03 12:17:18,2017-11-14 19:14:25,2017-11-16 16:11:21,True,2017-11-14 19:14:25,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/481,https://github.com/kubernetes/kubernetes-anywhere/pull/481,ss22ever,Create config file for openstack cloud provider,#479,[],1,2017-11-06 14:08:12,2018-06-07 20:10:19,2018-06-07 20:10:19,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/482,https://github.com/kubernetes/kubernetes-anywhere/pull/482,jjasghar,Updated the vSphere readme for the new make config,"- Fixed the ordering of the questions
- Fixed some extra whitespace

Signed-off-by: JJ Asghar <jj@chef.io>",[],1,2017-11-06 18:25:28,2017-12-21 06:39:38,2017-12-21 06:39:38,True,2017-12-21 06:39:38,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/483,https://github.com/kubernetes/kubernetes-anywhere/pull/483,xiangpengzhao,Set `--discovery-token-unsafe-skip-ca-verification` flag when `--discovery-token-ca-cert-hash` is not set,"ref: https://github.com/kubernetes/kubeadm/issues/534 https://github.com/kubernetes/kubernetes/pull/54982

/cc @luxas ",['luxas'],1,2017-11-10 16:05:09,2017-11-20 16:52:42,2017-11-20 17:00:26,True,2017-11-20 16:52:42,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/484,https://github.com/kubernetes/kubernetes-anywhere/pull/484,dims,Add --discovery-token-unsafe-skip-ca-verification to prevent kubeadm …,"…join failure

Since https://github.com/kubernetes/kubernetes/pull/55468 merged, kubeadm now requires the user to specify either the `--discovery-token-ca-cert-hash` flag or the `--discovery-token-unsafe-skip-ca-verification` flag",[],1,2017-11-19 19:46:08,2017-11-20 21:41:30,2017-11-20 21:41:30,False,,,dirty,False,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/485,https://github.com/kubernetes/kubernetes-anywhere/pull/485,shashidharatd,Add top level OWNERS for the repo,"Adding the top level OWNERS file similar to other maintained kubernetes repos.
This is required for CI test jobs.

/assign @pipejakob 
/cc @kubernetes/sig-cluster-lifecycle-pr-reviews ",['pipejakob'],1,2017-11-20 15:56:23,2017-11-21 19:13:52,2017-11-22 04:01:22,True,2017-11-21 19:13:52,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/486,https://github.com/kubernetes/kubernetes-anywhere/pull/486,fturib,add featuregate opt for kubeadm,"## What this PR does / why we need it:

allow option 'FeatureGates' when deploying kubeadm on the master's node of the cluster.
this option when set with ""CoreDNS=true"" allow to run CoreDNS as the default DNS server in the cluster instead of usual kube-dns

## Which issue this PR fixes 
Adds part of e2e integration requires for CoreDNS that is an ALPHA feature added to kubeadm 
See: kubernetes/kubeadm#446
it will need a second part in the project ""test-infra""

## Special notes for your reviewer:
_In order to have the deployment of cluster run on GCE, I needed to fix issues on ""terraform"" tool usage (command line and config file). see gce/do and gce/gce.jsonnet_
**rollbacked in last commit. That was tied to the version of ""terraform"" used for testing.**
",['luxas'],1,2017-11-20 18:22:57,2017-12-11 18:51:21,2017-12-11 21:22:53,True,2017-12-11 18:51:21,luxas,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/488,https://github.com/kubernetes/kubernetes-anywhere/pull/488,xiangpengzhao,Don't pass true for bool type flag --discovery-token-unsafe-skip-ca-verification,"Passing the flag means `true`, right? Seems like `--discovery-token-unsafe-skip-ca-verification true` is invalid.

xref: https://github.com/kubernetes/kubernetes/issues/56091 `[job failure] kubeadm-gce`

```
Nov 23 05:13:24 ubuntu startupscript: kubeadm join --token ""$KUBEADM_TOKEN"" ""$KUBEADM_MASTER_IP:443"" --skip-preflight-checks --discovery-token-unsafe-skip-ca-verification true
Nov 23 05:13:24 ubuntu startupscript: + kubeadm join --token 043479.1a6ec0adafb593d0 10.128.0.2:443 --skip-preflight-checks --discovery-token-unsafe-skip-ca-verification true
Nov 23 05:13:25 ubuntu startupscript: Flag --skip-preflight-checks has been deprecated, it is now equivalent to --ignore-checks-errors=all
Nov 23 05:13:25 ubuntu startupscript: [kubeadm] WARNING: kubeadm is currently in beta
Nov 23 05:13:25 ubuntu startupscript: [preflight] Running pre-flight checks.
Nov 23 05:13:25 ubuntu startupscript: #011[WARNING FileExisting-crictl]: crictl not found in system path
Nov 23 05:13:25 ubuntu startupscript: [validation] WARNING: kubeadm doesn't fully support multiple API Servers yet
Nov 23 05:13:25 ubuntu startupscript: discovery: Invalid value: ""true"": address true: missing port in address
Nov 23 05:13:25 ubuntu startupscript: Finished running startup script /var/run/google.startup.script
```

@pipejakob @luxas @dims @spiffxp ",['dims'],1,2017-11-23 06:53:57,2017-11-27 13:22:13,2017-11-27 13:22:13,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/490,https://github.com/kubernetes/kubernetes-anywhere/pull/490,Lion-Wei,fix kubeadm join bug,#489,[],1,2017-11-23 13:01:43,2017-11-24 01:10:54,2017-11-24 01:10:54,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/491,https://github.com/kubernetes/kubernetes-anywhere/pull/491,shashidharatd,Fix passing flag --discovery-token-unsafe-skip-ca-verification to kubeadm join,"Address the comment in https://github.com/kubernetes/kubernetes-anywhere/pull/488/files#r153078767

I have tested the changes in my local gce environment and it has passed for `""$KUBEADM_VERSION"" == ""stable""`

/cc @xiangpengzhao @luxas @pipejakob ","['pipejakob', 'luxas']",2,2017-11-27 12:45:45,2017-11-27 21:47:12,2017-11-28 01:33:57,True,2017-11-27 21:47:12,luxas,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/492,https://github.com/kubernetes/kubernetes-anywhere/pull/492,shashidharatd,Improve couple of Kconfig tems,"Partly addresses the concerns raised in https://github.com/kubernetes/kubernetes-anywhere/issues/487
Bumped the default kubernetes version to v1.8.4, which is the current stable version supported.

/assign @pipejakob ",['pipejakob'],3,2017-11-27 16:00:23,2017-11-29 17:21:34,2017-11-29 17:21:34,True,2017-11-29 17:21:34,pipejakob,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/494,https://github.com/kubernetes/kubernetes-anywhere/pull/494,mrhillsman,Force run of 'make config',"Closes issue #493 
Makefile as noted in above issue is designed to force 'make config' when .config is missing.
Additionally changed all ${} variable references to $() for consistency.",['errordeveloper'],1,2017-11-28 01:31:35,2018-04-04 13:03:56,2018-04-04 13:03:57,True,2018-04-04 13:03:56,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/498,https://github.com/kubernetes/kubernetes-anywhere/pull/498,abrarshivani,Fix typos in vSphere README,Fixes https://github.com/vmware/kubernetes/issues/399,[],1,2017-12-04 22:01:08,2017-12-04 22:08:12,2017-12-04 22:08:12,True,2017-12-04 22:08:11,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/501,https://github.com/kubernetes/kubernetes-anywhere/pull/501,spiffxp,Add code-of-conduct.md,"Refer to kubernetes/community as authoritative source for code of conduct

ref: kubernetes/community#1527",['cblecker'],1,2017-12-20 18:39:23,2018-01-04 17:27:48,2018-01-04 22:08:24,True,2018-01-04 17:27:48,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/503,https://github.com/kubernetes/kubernetes-anywhere/pull/503,thockin,Convert registry to k8s.gcr.io,"This PR was auto-generated.  Please apply human expertise to review for correctness.

Followup to https://github.com/kubernetes/kubernetes/pull/54174

xref https://github.com/kubernetes/release/issues/281",['jessicaochen'],1,2017-12-22 18:01:25,2018-01-09 21:50:51,2018-01-09 21:50:51,True,2018-01-09 21:50:51,jessicaochen,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/509,https://github.com/kubernetes/kubernetes-anywhere/pull/509,benjaminknox,Fix typo under the Phase 3 header,,[],1,2018-01-09 14:41:01,2018-08-10 07:18:03,2018-08-10 07:18:03,True,2018-08-10 07:18:03,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/514,https://github.com/kubernetes/kubernetes-anywhere/pull/514,leblancd,Kubeadm installs fail with removal of kubelet and kubeadm,"## Problem Description:
Kubeadm installations are failing on the master node. Looking at
startup logs on the master node:

```
Jan 23 01:56:33 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script: dpkg: error processing archive /tmp/k8s-debs/kubernetes-cni.deb (--install):
Jan 23 01:56:33 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script:  error creating directory '/opt/cni/bin': No such file or directory
Jan 23 01:56:33 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script: dpkg-deb: error: subprocess paste was killed by signal (Broken pipe)
Jan 23 01:56:33 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script: dpkg: dependency problems prevent configuration of kubelet:
Jan 23 01:56:33 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script:  kubelet depends on kubernetes-cni (>= 0.5.1); however:
Jan 23 01:56:33 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script:   Package kubernetes-cni is not installed.
```
followed by:
```
Jan 23 01:56:33 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script:  /tmp/k8s-debs/kubernetes-cni.deb
Jan 23 01:56:33 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script:  kubelet
Jan 23 01:56:33 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script:  kubeadm
```
and:
```
Jan 23 01:56:35 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script: The following packages will be REMOVED:
Jan 23 01:56:35 e2e-9c7300d2ef-master startup-script[1785]: INFO startup-script:   kubeadm kubelet
```

Apparently what's happening is this:
- Startup script tries to install kubernetes-cni, kubelet, and kubeadm from debs packages
- Installation of kubernetes-cni fails because the directory /opt/cni/bin can't be created
- Installation of kubelet fails because it depends upon kubernetes-cni being installed
- Installation of kubeadm fails because it depends upon kubelet being installed
- The 'apt-get install -f -y' cmd detects these dependency failures and remove kubelet and kubeadm
- Because kubeadm is missing, the 'kubeadm init ...' command can't be run, so that the kubeconfig in /etc/kubernetes is never created
- Because the kubeconfig is never created, kubernetes-anywhere fails after 50 (or is it 60, I forget) attempts to read the kubeconfig.

## Fix:
Preemptively adding a creation of a directory /opt/cni/bin before installing
kubernetes-cni fixes the problem.

## Log with Fix Showing Success:
[Successful Log Snippet](https://gist.github.com/leblancd/f596e4b34f4768efa7748d3cca4a062e)

fixes #513 
","['errordeveloper', 'pipejakob', 'mikedanese', 'luxas']",1,2018-01-25 23:34:03,2018-02-20 17:53:48,2018-02-22 03:18:49,True,2018-02-20 17:53:48,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/516,https://github.com/kubernetes/kubernetes-anywhere/pull/516,csbogdan,Fix Flannel Network default value as per RFC1918,,[],1,2018-01-26 00:43:28,2018-06-25 02:56:28,2018-06-25 02:56:28,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/523,https://github.com/kubernetes/kubernetes-anywhere/pull/523,EmiiKhaos,Fix Flannel network default value as per RFC1918,"| Q | A
| --- | ---
| Bug fix? | yes
| New feature? | no
| BC breaks? | no
| Deprecations? | no
| Fixed tickets | fixes #497 
| Related issues/PRs | supersedes #516
| License | Apache 2.0
| CLA signed | yes

#### What's in this PR?

Fixes the default value of the vSphere flannel network to 172.16.0.0/16, which is within the private ""20-bit block"" according to RFC1918.

I assume the 172.1.0.0/16 was solely a typo.","['abrarshivani', 'divyenpatel']",1,2018-03-02 10:42:04,2018-05-05 23:18:20,2018-05-05 23:18:20,True,2018-05-05 23:18:20,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/528,https://github.com/kubernetes/kubernetes-anywhere/pull/528,leblancd,Add newline before IPVS featureGates config in startup,"The Kubernetes ci-kubernetes-e2e-kubeadm-gce-ipvs CI tests are failing (see [gubernator results](https://k8s-gubernator.appspot.com/builds/kubernetes-jenkins/logs/ci-kubernetes-e2e-kubeadm-gce-ipvs) ) in the kubernetes-anywhere Phase 2.

The kube master serial logs show YAML decode errors for kubeadm config where either a '{' or newline is expected afer ""featureGates:"". The [kubeadm config file documentation](https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/#config-file) indicates that the expected format for featureGates is:
```
featureGates:
  <feature>: <bool>
  <feature>: <bool>
```
Accordingly, the config in the startup script needs to be changed from:
```
    featureGates: SupportIPVSProxyMode=true
```
to:
```
    featureGates:
      SupportIPVSProxyMode: true
```

Fixes #527","['caseydavenport', 'm1093782566']",1,2018-03-23 14:17:36,2018-03-29 09:46:30,2018-03-29 12:54:03,True,2018-03-29 09:46:29,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/530,https://github.com/kubernetes/kubernetes-anywhere/pull/530,thockin,Pass 2: k8s GCR vanity URL,,"['madhusudancs', 'errordeveloper', 'cmluciano']",1,2018-04-06 15:08:20,2018-06-05 22:52:54,2018-06-05 22:52:54,True,2018-06-05 22:52:54,thockin,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/534,https://github.com/kubernetes/kubernetes-anywhere/pull/534,AdamDang,Typo fix: Kuberetes->Kubernetes,Kuberetes->Kubernetes,['abrarshivani'],1,2018-04-29 05:16:45,2018-05-05 23:19:11,2018-05-05 23:19:11,True,2018-05-05 23:19:11,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/535,https://github.com/kubernetes/kubernetes-anywhere/pull/535,JSteeleIR,Fix vsphere vm-node INTs keeping the jsonnet from compiling correctly.,Also trim trailing whitespace.,"['abrarshivani', 'divyenpatel']",1,2018-04-29 07:26:55,2018-05-05 23:20:01,2018-05-05 23:20:01,True,2018-05-05 23:20:01,abrarshivani,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/540,https://github.com/kubernetes/kubernetes-anywhere/pull/540,AdamDang,Typo fix: specifed->specified,Line 319: specifed->specified,[],1,2018-06-02 11:08:45,2018-08-10 07:17:41,2018-08-10 07:17:41,True,2018-08-10 07:17:41,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/542,https://github.com/kubernetes/kubernetes-anywhere/pull/542,dcbw,kubeadm requires cri-tools,"https://storage.googleapis.com/kubernetes-jenkins/logs/ci-kubernetes-e2e-kubeadm-gce-cni-flannel/3157/artifacts/e2e-3157-098af-master/serial-1.log

INFO startup-script:  kubeadm depends on cri-tools (>= 1.11.0); however:
INFO startup-script:   Package cri-tools is not installed.
INFO startup-script: dpkg: error processing package kubeadm (--install):
INFO startup-script: Removing kubeadm (1.12.0~alpha.0.1584+aa06ec6dd3a010) ...
...
INFO startup-script: kubeadm init --skip-preflight-checks --config $KUBEADM_CONFIG_FILE
INFO startup-script: + kubeadm init --skip-preflight-checks --config /etc/kubeadm/kubeadm.yaml
INFO startup-script: /startup-wsmbtznt/tmpjucy96_3: line 211: kubeadm: command not found
INFO startup-script: Return code 127.
INFO Finished running startup scripts.

@thockin @caseydavenport @leblancd this is the only thing I can think of that's blocking some of the kubeadm-gce tests.",['thockin'],1,2018-06-28 19:25:01,2018-06-28 22:07:03,2018-06-28 22:07:03,True,2018-06-28 22:07:03,thockin,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/544,https://github.com/kubernetes/kubernetes-anywhere/pull/544,nikhita,Add CONTRIBUTING.md,"Fixes #543 
xref https://github.com/kubernetes/community/issues/1832

/assign errordeveloper ",['errordeveloper'],1,2018-07-19 05:32:14,2018-08-10 07:17:04,2018-08-10 07:17:04,True,2018-08-10 07:17:04,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/545,https://github.com/kubernetes/kubernetes-anywhere/pull/545,neolit123,phase2: use the v1alpha2 kubeadm config if needed ,"Refs kubernetes/kubernetes#66338

kubeadm 1.11 needs v1alpha2, thus we should use `config migrate`
to update the configration file. this should also work for future
versions, as long as `config migrate` works.

kubeadm 1.10.x would not trow an error.

https://storage.googleapis.com/kubernetes-jenkins/logs/ci-kubernetes-e2e-kubeadm-gce-selfhosting/537/artifacts/e2e-537-f2b95-master/serial-1.log

```
Jul 19 19:33:35 e2e-537-f2b95-master startup-script: INFO startup-script: your configuration file uses an old API spec: ""kubeadm.k8s.io/v1alpha1"". Please use kubeadm v1.11 instead and run 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
Jul 19 19:33:35 e2e-537-f2b95-master startup-script: INFO startup-script: Return code 1.
```

@timothysc @dims @BenTheElder 
","['timothysc', 'luxas']",1,2018-07-19 20:46:47,2018-07-24 18:00:38,2018-07-24 18:00:38,True,2018-07-24 18:00:38,luxas,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/546,https://github.com/kubernetes/kubernetes-anywhere/pull/546,neolit123,[WIP] phase2: fix kubeadm install issues,"https://storage.googleapis.com/kubernetes-jenkins/logs/ci-kubernetes-e2e-kubeadm-gce/10938/artifacts/e2e-10938-31d72-master/serial-1.log

refs kubernetes/kubernetes#66338

there is a dependency weirdness here that i don't understand:

kubeadm is not installed, even if the cri-tools and the kubelet are installed.
this is a WIP PR to gather feedback.

```
Jun 22 13:04:02 e2e-10938-31d72-master startup-script: INFO startup-script: Selecting previously unselected package kubectl.
Jun 22 13:04:02 e2e-10938-31d72-master startup-script: INFO startup-script: Preparing to unpack /tmp/k8s-debs/kubectl.deb ...
Jun 22 13:04:02 e2e-10938-31d72-master startup-script: INFO startup-script: Unpacking kubectl (1.12.0~alpha.0.1408+1ca851baec6a24) ...
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: Selecting previously unselected package kubernetes-cni.
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: Preparing to unpack .../k8s-debs/kubernetes-cni.deb ...
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: Unpacking kubernetes-cni (0.5.1) ...
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: dpkg: dependency problems prevent configuration of kubelet:
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:  kubelet depends on socat; however:
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:   Package socat is not installed.
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:  kubelet depends on ebtables; however:
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:   Package ebtables is not installed.
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: dpkg: error processing package kubelet (--install):
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:  dependency problems - leaving unconfigured
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: dpkg: dependency problems prevent configuration of kubeadm:
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:  kubeadm depends on kubelet (>= 1.8.0); however:
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:   Package kubelet is not configured yet.
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:  kubeadm depends on cri-tools (>= 1.11.0); however:
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:   Package cri-tools is not installed.
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: dpkg: error processing package kubeadm (--install):
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:  dependency problems - leaving unconfigured
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: Setting up kubectl (1.12.0~alpha.0.1408+1ca851baec6a24) ...
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: Setting up kubernetes-cni (0.5.1) ...
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script: Errors were encountered while processing:
Jun 22 13:04:03 e2e-10938-31d72-master startup-script: INFO startup-script:  kubelet
```

please advise on how to fix this correctly.

@timothysc @dims @BenTheElder 
",[],1,2018-07-19 22:12:34,2018-07-26 23:22:30,2018-07-26 23:22:36,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/549,https://github.com/kubernetes/kubernetes-anywhere/pull/549,neolit123,phase2: convert KUBEADM_KUBERNETES_VERSION to semantic version,"The script has to know the MINOR version from a k8s semantic version,
so that it can decide which kubeadm config version to use.
Fetch the semantic version from the server if it's not in semantic
format already.
The raw $KUBEADM_KUBERNETES_VERSION can be passed to the config
as kubeadm can handle that.


---
the fix in https://github.com/kubernetes/kubernetes-anywhere/pull/545 did not handle the case where the version is not in semantic format (e.g. `ci/latest`).

https://storage.googleapis.com/kubernetes-jenkins/logs/ci-kubernetes-e2e-kubeadm-gce-selfhosting/565/artifacts/e2e-565-f2b95-master/serial-1.log

```
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: # break down the version string
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: KUBEADM_KUBERNETES_VERSION_MAJOR=`cut -d'.' -f 1 <<< $KUBEADM_KUBERNETES_VERSION | cut -d'v' -f 2`
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: cut -d'.' -f 1 <<< $KUBEADM_KUBERNETES_VERSION | cut -d'v' -f 2
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: ++ cut -dv -f 2
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: ++ cut -d. -f 1
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: + KUBEADM_KUBERNETES_VERSION_MAJOR=ci-cross/latest
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: KUBEADM_KUBERNETES_VERSION_MINOR=`cut -d'.' -f 2 <<< $KUBEADM_KUBERNETES_VERSION`
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: cut -d'.' -f 2 <<< $KUBEADM_KUBERNETES_VERSION
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: ++ cut -d. -f 2
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: + KUBEADM_KUBERNETES_VERSION_MINOR=ci-cross/latest
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: KUBEADM_KUBERNETES_VERSION_PATCH=`cut -d'.' -f 3 <<< $KUBEADM_KUBERNETES_VERSION`
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: cut -d'.' -f 3 <<< $KUBEADM_KUBERNETES_VERSION
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: ++ cut -d. -f 3
```

```
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: + [[ ci-cross/latest -lt 11 ]]
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: /startup-_8udnnhb/tmpsqtnfryo: line 186: ci: unbound variable
Jul 26 20:01:40 e2e-565-f2b95-master startup-script: INFO startup-script: Return code 1.
```

refs: https://github.com/kubernetes/kubernetes/issues/66338

/assign @luxas 
/cc @BenTheElder @timothysc 
",['luxas'],1,2018-07-27 01:19:44,2018-07-27 16:07:55,2018-07-27 16:07:55,True,2018-07-27 16:07:55,luxas,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/554,https://github.com/kubernetes/kubernetes-anywhere/pull/554,neolit123,Remove the deprecated --skip-preflight-checks for kubeadm,"Use --ignore-preflight-errors=all instead.

removed in PR:
https://github.com/kubernetes/kubernetes/pull/62727

failing test tracking issue:
https://github.com/kubernetes/kubernetes/issues/66338

i don't have a good solution if someone tries an old kubeadm version with k-a....
this is difficult to maintain.

/assign @luxas 
/cc @timothysc @BenTheElder 
","['errordeveloper', 'mikedanese', 'luxas']",1,2018-08-09 22:52:55,2018-08-10 07:17:17,2018-08-10 07:17:17,True,2018-08-10 07:17:17,errordeveloper,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/557,https://github.com/kubernetes/kubernetes-anywhere/pull/557,neolit123,phase1-gce: make it possible to use GOOGLE_APPLICATION_CREDENTIALS,"In case the user has not created the 'account.json' file,
fallback to using the file defined in GOOGLE_APPLICATION_CREDENTIALS.

If GOOGLE_APPLICATION_CREDENTIALS is not defined or the file there
is missing, do nothing.

fixes https://github.com/kubernetes/kubernetes-anywhere/issues/332
refs: https://github.com/kubernetes/test-infra/pull/9117

i need some feedback on this as have no means to test it ATM. does this look right, GCE wise?
the ideas is to move the following away from the kubeadm test-infra runner and have it in phase1-gce instead:
https://github.com/kubernetes/test-infra/blob/master/images/kubeadm/runner#L32-L36

/assign @mikedanese @errordeveloper 
/cc @BenTheElder
","['mikedanese', 'roberthbailey']",1,2018-08-22 03:40:58,2018-08-27 20:39:47,2018-08-27 20:39:47,True,2018-08-27 20:39:47,roberthbailey,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/558,https://github.com/kubernetes/kubernetes-anywhere/pull/558,marema31,Vsphere: field does not exist: insecure,"I've encountered same kind of problem resolved by #372 

If on ""make config"" for vSphere you answer ""n"" to insecure, the option is not defined in .config file and the make deploy fail on:

( cd ""phase1/vsphere""; ./do deploy-cluster )
RUNTIME ERROR: field does not exist: insecure
        vSphere.jsonnet:80:56-76        thunk <str_>

I propose a small fix for my current issue, but I think the issue will occurs in other cases.",['divyenpatel'],1,2018-08-23 18:15:56,2018-10-03 18:14:09,2018-10-03 18:14:09,True,2018-10-03 18:14:09,kerneltime,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/559,https://github.com/kubernetes/kubernetes-anywhere/pull/559,neolit123,"phase2/kubeadm: support ""stable*"" and ""latest*"" versions","kuberenetes-anywhere already supports ""stable"" and ""latest"" (kubeadm suppots them too), except we now have different
configs for different MINOR versions and we need to parse the SEMVER
to determine what config to use.

Handle these versions in the `-master.sh` script.

kubeadm source code ref:
https://github.com/kubernetes/kubernetes/blob/ed958b7d79ee7eee0d71952e71475fe667c77909/cmd/kubeadm/app/util/version.go#L55-L61

failing e2e job because ""stable"" is used:
https://github.com/kubernetes/test-infra/blob/82f404e32640453021733e9694a6c5463bb08918/config/jobs/kubernetes/sig-cluster-lifecycle/kubeadm-x-on-y.yaml#L81-L105

https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/logs/ci-kubernetes-e2e-kubeadm-gce-stable-on-master/4722

@kubernetes/sig-cluster-lifecycle-pr-reviews 
/assign @roberthbailey @timothysc 
","['timothysc', 'roberthbailey']",1,2018-09-06 02:24:21,2018-09-06 04:57:00,2018-09-06 04:57:00,True,2018-09-06 04:57:00,roberthbailey,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/560,https://github.com/kubernetes/kubernetes-anywhere/pull/560,RA489,Create SECURITY_CONTACTS,"Adding Security Contacts file.
fixes #539 ",[],1,2018-09-06 07:46:56,2018-09-07 20:25:52,2018-09-07 20:25:52,True,2018-09-07 20:25:52,mikedanese,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/562,https://github.com/kubernetes/kubernetes-anywhere/pull/562,neolit123,phase3: update weave CNI plugin to 2.4.0,"1.9.4 is quite outdated and is causing errors for k8s 1.12.
Use weave 2.4.0 and also consolidate the JSON files into a single
List object.

The 2.4.0 manifest is based on:
  curl -s ""https://cloud.weave.works/k8s/net.json?k8s-version=v1.10.0"" | \
  jq . > phase3/weave-net/weave-net-list.json

Also bump the kubectl version to 1.11.2 as 1.6.x is ancient.

ref: https://github.com/kubernetes/kubernetes/issues/68475

notes:
- this is against the `kubeadm-e2e` branch.
- i have no means to tests this because phase1 fails for me on GCE with unrelated terraform errors that i can't figure out.

/kind bug
/assign @errordeveloper
/cc @timothysc @bboreham 
","['timothysc', 'errordeveloper']",1,2018-09-11 02:27:14,2018-09-11 19:15:00,2018-09-11 19:15:01,True,2018-09-11 19:15:00,fabriziopandini,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/564,https://github.com/kubernetes/kubernetes-anywhere/pull/564,RA489,Update README.md,"Updated the readme file.
fixes #556 ",[],1,2018-09-19 07:27:54,2018-12-04 17:17:34,2018-12-04 17:17:35,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/565,https://github.com/kubernetes/kubernetes-anywhere/pull/565,neolit123,update OWNERS file for branch kubeadm-e2e,"add me and @fabriziopandini to the OWNER files for this branch.

the repo now has `/lgtm` and `/approve` commands enabled and we should use them:
https://github.com/kubernetes/kubernetes-anywhere/issues/563
",['fabriziopandini'],1,2018-09-19 19:08:30,2018-09-19 19:17:48,2018-09-19 19:17:48,True,2018-09-19 19:17:48,fabriziopandini,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/566,https://github.com/kubernetes/kubernetes-anywhere/pull/566,neolit123,update OWNERS file for branch master,"add me and @fabriziopandini to the OWNER files for this branch.

the repo now has `/lgtm` and `/approve` commands enabled and we should use them:
https://github.com/kubernetes/kubernetes-anywhere/issues/563
",['fabriziopandini'],1,2018-09-19 19:10:53,2018-09-19 19:16:21,2018-09-19 19:16:29,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/567,https://github.com/kubernetes/kubernetes-anywhere/pull/567,neolit123,apply a set of patches to build scripts and Makefile,"from the discussion on slack:
> echo the .config.json at the beginning of the build-log.txt, it will be simpler to reproduce the failing case.

the second commit adds ac check if the kubeconfig is emtpy....
for some reason `gcloud ssh` gets it like that and i have no idea why.
at least that's some indication of something being wrong with the config.

third change is to ignore pre-release packages for `stable` kubelet.

/kind cleanup
/assign @fabriziopandini 
",['fabriziopandini'],3,2018-09-21 03:15:00,2018-09-21 16:44:42,2018-09-21 17:56:32,True,2018-09-21 16:44:42,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/568,https://github.com/kubernetes/kubernetes-anywhere/pull/568,neolit123,phase3: update to flannel 1.10,"the flannel version is k-a is outdated, this PR updates to the latest flannel - 0.10.0.

trying to solve:
https://k8s-testgrid.appspot.com/sig-network-gce#kubeadm-gce-cni-flannel

latest flannel doesn't work for me locally at all with 1.12.x and the guide here:
https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#pod-network
i need to investigate further.

also, putting this PR on hold because i haven't tested it with k-a yet.

/hold
/kind bug
/area 
/assign @fabriziopandini 
@kubernetes/sig-cluster-lifecycle-pr-reviews 
@kubernetes/sig-network-pr-reviews
",['fabriziopandini'],1,2018-09-25 02:46:33,2018-10-02 19:18:07,2018-10-05 05:06:41,False,,,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/569,https://github.com/kubernetes/kubernetes-anywhere/pull/569,neolit123,phase2: handle v1alpha3 kubeadm config,"fixes failing end-to-end tests due to the removal of v1alpha2 in master.
fixes kubernetes/kubeadm#1151

the diff is hard to read.
PTAL at the whole file.

- move v1alpha1 and v1alpha2 in the same block under version <= 11.
- add v1alpha3.

/priority critical-urgent
/kind failing-test

/assign @fabriziopandini 
/cc @kubernetes/sig-cluster-lifecycle-pr-reviews 
","['timothysc', 'fabriziopandini']",1,2018-10-01 15:24:04,2018-10-01 20:37:58,2018-10-01 20:37:58,True,2018-10-01 20:37:58,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/571,https://github.com/kubernetes/kubernetes-anywhere/pull/571,fabriziopandini,kubeadm v1beta1 config,"fixes failing test kubeadm-gce-master by switching kubeadm >= v1.13 to the new v1beta1 api

In order to work properly with the new local/stacked etcd the public ip of the machine stored in the `KUBEADM_ADVERTISE_ADDRESSES` variable is now used for the `controlPlaneEndpoint` field (instead of using it for the API server advertise address).

/sig cluster-lifecycle
/priority critical-urgent
/kind failing-test

/assign @timothysc 
/assign @neolit123 
/cc @kubernetes/sig-cluster-lifecycle-pr-reviews","['timothysc', 'neolit123', 'fabriziopandini']",1,2018-10-28 19:52:27,2018-10-28 19:59:13,2018-12-15 08:31:28,True,2018-10-28 19:59:13,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/572,https://github.com/kubernetes/kubernetes-anywhere/pull/572,neolit123,kubeadm: decide on config type based on kubeadm client version,"The decision on which kubeadm configuration type to use
should not happen based on the version from a k8s endpoint,
but rather based on the version of the client (kubeadm binary).

xref: https://github.com/kubernetes/kubernetes/issues/70375

/priority critical-urgent
/kind bug
/assign @fabriziopandini 
",['fabriziopandini'],1,2018-10-29 16:15:46,2018-10-29 17:51:48,2018-10-29 17:51:48,True,2018-10-29 17:51:48,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/573,https://github.com/kubernetes/kubernetes-anywhere/pull/573,neolit123,phase2: make kubeadm v1beta1 related updates,"rename apiEndpoint -> localAPIEndpoint
apiServer is now a sub-struct of ClusterConfiguration:
",['fabriziopandini'],1,2018-11-10 14:16:44,2018-11-10 14:30:43,2018-11-10 14:30:43,True,2018-11-10 14:30:43,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/575,https://github.com/kubernetes/kubernetes-anywhere/pull/575,neolit123,phase2: exclude the 'config upload' step for upgrades,"@fabriziopandini as promised, but i haven't experimented if this fixes it.
do we have to still include this for 1.11?",['fabriziopandini'],1,2018-11-16 01:22:46,2019-01-14 20:57:24,2019-01-14 20:57:24,True,2019-01-14 20:57:24,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/576,https://github.com/kubernetes/kubernetes-anywhere/pull/576,mauilion,Fixes broken e2e test after adding conntrack.,"This should resolve the broken e2e test. 

In my testing I found that if you manually install packages with `dpkg` and then try to resolve their dependencies with `apt-get install -f -y` and the apt-cache is empty. The apt resolver will remove the manually added packages. Presumably cause it doesn't have enough information to resolve the deps. 

If we do an apt-get update before the `apt-get install -f -y` then the resolver should have all that's needed to correctly resolve and will install the missing bits. 

There is an `apt-get update` in the previous for loop. This just adds one for when we are using local packages it should not add any more time to the test.
",['luxas'],1,2018-12-01 06:52:01,2018-12-04 11:57:52,2018-12-06 18:15:00,True,2018-12-04 11:57:52,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/577,https://github.com/kubernetes/kubernetes-anywhere/pull/577,luxas,Officially deprecate kube-anywhere,"@kubernetes/sig-cluster-lifecycle-pr-reviews 
/assign @timothysc @roberthbailey ","['timothysc', 'roberthbailey']",1,2018-12-04 13:43:50,2018-12-04 15:03:52,2018-12-04 15:13:16,True,2018-12-04 15:03:52,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/579,https://github.com/kubernetes/kubernetes-anywhere/pull/579,neolit123,phase1: bump docker version to 1.13.1,"this PR bumped the minimum docker version in the kubelet and turned our e2e tests red:
https://github.com/kubernetes/kubernetes/pull/72831
https://gubernator.k8s.io/build/kubernetes-jenkins/logs/ci-kubernetes-e2e-kubeadm-gce-master/1519

i have tested the change in a xenial container.

/assign @fabriziopandini 
/cc @timothysc @mauilion
",['fabriziopandini'],1,2019-01-12 11:55:50,2019-01-14 20:46:05,2019-01-14 20:46:05,True,2019-01-14 20:46:05,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/580,https://github.com/kubernetes/kubernetes-anywhere/pull/580,neolit123,phase3: download a recent kubectl binary,"phase3: download a recent kubectl binary

when applying the CNI plugin manifest, kubectl from kubekins is used, which can be quite old.
kubectl 1.10.7 causes a the following failure with recent upstream k8s.
https://gubernator.k8s.io/build/kubernetes-jenkins/logs/ci-kubernetes-e2e-kubeadm-gce-master/1607
```
W0119 19:45:01.703] error: SchemaError(io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration): invalid object doesn't have additional properties
```

download a new kubectl that matches the latest.txt endpoint.

@kubernetes/sig-cluster-lifecycle 
/assign @fabriziopandini @BenTheElder
","['BenTheElder', 'fabriziopandini']",1,2019-01-19 21:25:57,2019-01-19 21:31:31,2019-01-19 21:37:50,True,2019-01-19 21:31:31,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/581,https://github.com/kubernetes/kubernetes-anywhere/pull/581,neolit123,"add the Makefile ""setup"" rule","Re-organizes the setup steps:
- Call util/setup...sh when building the local container
- Add a new rule ""setup"" to call from e2e jobs
- in Phase3 use the kubectl installed from util/setup..sh

This change allows removing the kubeadm image from test-infra.

test-infra PR:
https://github.com/kubernetes/test-infra/pull/10854
","['BenTheElder', 'fabriziopandini']",1,2019-01-20 13:55:33,2019-01-22 23:19:09,2019-01-22 23:19:09,True,2019-01-22 23:19:09,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/582,https://github.com/kubernetes/kubernetes-anywhere/pull/582,neolit123,util: fix a bug when fetching terraform,"after the recent switch to the kubekins image from kubeadm image in test-infra
a couple of problems started happening:
- sed does not remove all lines expect the correct line in the list
  of SHAs in the terraform SHA file.
- the sha256sum command in the kubekins image does not have an '-s' option.
  '-c' should suffice.

i didn't have time to check why this SED call suddenly stopped working, but the `-s` problem for sha256sum was obvious in kubeadm-gce-master logs:
https://gubernator.k8s.io/build/kubernetes-jenkins/logs/ci-kubernetes-e2e-kubeadm-gce-master/1663

i've tested the change locally.
","['BenTheElder', 'fabriziopandini', 'yagonobre']",1,2019-01-24 16:03:35,2019-01-24 16:14:23,2019-01-24 16:14:23,True,2019-01-24 16:14:23,k8s-ci-robot,unknown,,closed
kubernetes-anywhere,https://api.github.com/repos/kubernetes/kubernetes-anywhere/pulls/583,https://github.com/kubernetes/kubernetes-anywhere/pull/583,joelsmith,Update embargo doc link in SECURITY_CONTACTS and change PST to PSC,See https://github.com/kubernetes/security/issues/8 for more information,"['spiffxp', 'mikedanese']",1,2019-03-08 18:10:02,2019-03-10 02:27:28,2019-03-10 02:27:28,True,2019-03-10 02:27:28,k8s-ci-robot,unknown,,closed
